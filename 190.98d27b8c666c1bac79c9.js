"use strict";(self.webpackChunkstudio=self.webpackChunkstudio||[]).push([[190,998],{6998:(e,t,s)=>{s.r(t),s.d(t,{BasePage:()=>n});class n{constructor(e,t,s,n){this.walletConnect=e,this.algodClient=s,this.algoIndexer=n,this.holdings=t}}},4190:(e,t,s)=>{s.r(t),s.d(t,{Cards:()=>i});var n=s(6998),a=s(7304),l=s(5190);class i extends n.BasePage{constructor(){super(...arguments),this.ui=document.createElement("div"),this.ui.innerHTML='\n    <h1>Caffeine Cards</h1>\n    <p class="dark-text">Browse all Caffeine Cards</p>\n    ',this.collection,this.loadAllCards()}sleep(e){return new Promise((t=>setTimeout(t,e)))}async loadAllCards(){const e=document.createElement("p");e.textContent="Loading cards...",this.ui.append(e);const t=l.Z.filter((e=>"caffeineCards"===e.name))[0];this.collection=new a.tf([t]),await this.collection.load(this.algoIndexer);const s=this.collection.nfts.length;let n=0;for(const t of this.collection.nfts)t.load(this.algoIndexer).then((()=>{n++,e.textContent=`Loading cards... (${n}/${s})`,n==s&&(e.remove(),this.displayList())})),this.sleep(100)}displayList(){if(!this.collection.nfts.length){const e=document.createElement("div");return e.innerHTML='<div class="dark-text mb-5">No assets</div>',void this.ui.append(e)}const e=document.createElement("div");e.className="row row-cols-2 row-cols-md-3 row-cols-lg-4 gy-4 mb-5";for(const t of this.collection.nfts){const s=document.createElement("div");s.id=`nft-${t.assetId}`,s.className="col";let n="";if(t.metadata.properties){for(const e in t.metadata.properties)n+=`<span class="custom-badge">${e}</span> `;n+="<br>"}let a="";if(t.metadata.require){let e=[];for(const s in t.metadata.require)e.push(`<span class="custom-badge light">${s}: ${t.metadata.require[s]}</span>`);a=`<span class="custom-badge dark">Require:</span> ${e.join(" ")}`}s.innerHTML=`\n          <div class="list-item h-100 d-flex flex-column">\n              <img src="${t.imageUrl}" class="nft-img img-fluid" loading="lazy">\n              <div class="list-item-text flex-fill d-flex flex-column">\n                  <h4>${t.name}</h4>\n                  <div class="d-flex justify-content-between">\n                      <span class="asset-id">${t.assetId}</span>\n                      ${t.total}\n                  </div>\n                  <div class="mt-3">\n                        ${n} ${a}<br>\n                  </div>\n                  <div class="flex-fill d-flex justify-content-between align-items-end mt-2">\n                        <div>&#128293; <span id="burn-count"></span></div>\n                        <div class="dropdown"></div>\n                  </div>\n              </div>\n          </div>\n      `;const l=s.querySelector("#burn-count");l.textContent="...",this.algodClient.accountAssetInformation(t.metadata.burn_address,t.assetId).do().then((e=>{l.textContent=`${e["asset-holding"].amount}`})),s.querySelector(".dropdown").innerHTML=`\n            <a href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n            <img src="assets/more.png" class="more">\n            </a>\n            <ul class="dropdown-menu">\n                <li><a class="dropdown-item" href="https://www.nftexplorer.app/asset/${t.assetId}" target="_blank">NFTExplorer</a></li>\n                <li><a class="dropdown-item" href="https://www.randgallery.com/algo-collection/?address=${t.assetId}" target="_blank">RandGallery</a></li>\n                <li><a class="dropdown-item" href="https://algoxnft.com/asset/${t.assetId}" target="_blank">ALGOxNFT</a></li>\n            </ul>\n      `,e.append(s),t.handleImageError(s.querySelector(".nft-img"))}this.ui.append(e)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,