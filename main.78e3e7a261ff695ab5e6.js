/*! For license information please see main.78e3e7a261ff695ab5e6.js.LICENSE.txt */
(()=>{var __webpack_modules__={2912:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(){return(()=>{var __webpack_modules__={5406:function(e){e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"encode",(function(){return k})),r.d(t,"decode",(function(){return H})),r.d(t,"decodeAsync",(function(){return W})),r.d(t,"decodeArrayStream",(function(){return X})),r.d(t,"decodeStream",(function(){return Y})),r.d(t,"Decoder",(function(){return F})),r.d(t,"Encoder",(function(){return T})),r.d(t,"ExtensionCodec",(function(){return S})),r.d(t,"ExtData",(function(){return f})),r.d(t,"EXT_TIMESTAMP",(function(){return y})),r.d(t,"encodeDateToTimeSpec",(function(){return b})),r.d(t,"encodeTimeSpecToTimestamp",(function(){return m})),r.d(t,"decodeTimestampToTimeSpec",(function(){return v})),r.d(t,"encodeTimestampExtension",(function(){return w})),r.d(t,"decodeTimestampExtension",(function(){return A}));var n=function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,i=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s},o=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e},i="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function s(e){for(var t=e.length,r=0,n=0;n<t;){var o=e.charCodeAt(n++);if(0!=(4294967168&o))if(0==(4294965248&o))r+=2;else{if(o>=55296&&o<=56319&&n<t){var i=e.charCodeAt(n);56320==(64512&i)&&(++n,o=((1023&o)<<10)+(1023&i)+65536)}r+=0==(4294901760&o)?3:4}else r++}return r}var a=i?new TextEncoder:void 0,c="undefined"!=typeof process?200:0,u=(null==a?void 0:a.encodeInto)?function(e,t,r){a.encodeInto(e,t.subarray(r))}:function(e,t,r){t.set(a.encode(e),r)};function l(e,t,r){for(var n=t,i=n+r,s=[],a="";n<i;){var c=e[n++];if(0==(128&c))s.push(c);else if(192==(224&c)){var u=63&e[n++];s.push((31&c)<<6|u)}else if(224==(240&c)){u=63&e[n++];var l=63&e[n++];s.push((31&c)<<12|u<<6|l)}else if(240==(248&c)){var p=(7&c)<<18|(u=63&e[n++])<<12|(l=63&e[n++])<<6|63&e[n++];p>65535&&(p-=65536,s.push(p>>>10&1023|55296),p=56320|1023&p),s.push(p)}else s.push(c);s.length>=4096&&(a+=String.fromCharCode.apply(String,o(s)),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,o(s))),a}var p=i?new TextDecoder:null,h="undefined"!=typeof process?200:0,f=function(e,t){this.type=e,this.data=t};function d(e,t,r){var n=Math.floor(r/4294967296),o=r;e.setUint32(t,n),e.setUint32(t+4,o)}function g(e,t){var r=e.getInt32(t),n=e.getUint32(t+4),o=r<Math.floor(Number.MIN_SAFE_INTEGER/4294967296)||r===Math.floor(Number.MIN_SAFE_INTEGER/4294967296)&&0===n,i=r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296);return o||i?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n}var y=-1;function m(e){var t,r=e.sec,n=e.nsec;if(r>=0&&n>=0&&r<=17179869183){if(0===n&&r<=4294967295){var o=new Uint8Array(4);return(t=new DataView(o.buffer)).setUint32(0,r),o}var i=r/4294967296,s=4294967295&r;return o=new Uint8Array(8),(t=new DataView(o.buffer)).setUint32(0,n<<2|3&i),t.setUint32(4,s),o}return o=new Uint8Array(12),(t=new DataView(o.buffer)).setUint32(0,n),d(t,4,r),o}function b(e){var t=e.getTime(),r=Math.floor(t/1e3),n=1e6*(t-1e3*r),o=Math.floor(n/1e9);return{sec:r+o,nsec:n-1e9*o}}function w(e){return e instanceof Date?m(b(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var r=t.getUint32(0);return{sec:4294967296*(3&r)+t.getUint32(4),nsec:r>>>2};case 12:return{sec:g(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function A(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var x={type:y,encode:w,decode:A},S=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(x)}return e.prototype.register=function(e){var t=e.type,r=e.encode,n=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=n;else{var o=1+t;this.builtInEncoders[o]=r,this.builtInDecoders[o]=n}},e.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++)if(null!=(n=this.builtInEncoders[r])&&null!=(o=n(e,t)))return new f(-1-r,o);for(r=0;r<this.encoders.length;r++){var n,o;if(null!=(n=this.encoders[r])&&null!=(o=n(e,t)))return new f(r,o)}return e instanceof f?e:null},e.prototype.decode=function(e,t,r){var n=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return n?n(e,t,r):new f(t,e)},e.defaultCodec=new e,e}();function _(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var E=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,r,n,o,i,s,a){void 0===e&&(e=S.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=100),void 0===n&&(n=2048),void 0===o&&(o=!1),void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=n,this.sortKeys=o,this.forceFloat32=i,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):"bigint"==typeof e?this.encodebigint(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),n=new DataView(t);r.set(this.bytes),this.view=n,this.bytes=r},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.encodebigint=function(e){e>=BigInt(0)?e<BigInt(128)?this.writeU8(Number(e)):e<BigInt(256)?(this.writeU8(204),this.writeU8(Number(e))):e<BigInt(65536)?(this.writeU8(205),this.writeU16(Number(e))):e<BigInt(4294967296)?(this.writeU8(206),this.writeU32(Number(e))):(this.writeU8(207),this.writeBig64(e)):e>=BigInt(-32)?this.writeU8(224|Number(e)+32):e>=BigInt(-128)?(this.writeU8(208),this.writeI8(Number(e))):e>=BigInt(-32768)?(this.writeU8(209),this.writeI16(Number(e))):e>=BigInt(-2147483648)?(this.writeU8(210),this.writeI32(Number(e))):(this.writeU8(211),this.writeBig64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(i&&t>c){var r=s(e);this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),u(e,this.bytes,this.pos),this.pos+=r}else r=s(e),this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),function(e,t,r){for(var n=e.length,o=r,i=0;i<n;){var s=e.charCodeAt(i++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[o++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&i<n){var a=e.charCodeAt(i);56320==(64512&a)&&(++i,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[o++]=s>>12&15|224,t[o++]=s>>6&63|128):(t[o++]=s>>18&7|240,t[o++]=s>>12&63|128,t[o++]=s>>6&63|128)}t[o++]=63&s|128}else t[o++]=s}}(e,this.bytes,this.pos),this.pos+=r},e.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(null!=r)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var r=_(e);this.writeU8a(r)},e.prototype.encodeArray=function(e,t){var r,n,o=e.length;if(o<16)this.writeU8(144+o);else if(o<65536)this.writeU8(220),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large array: "+o);this.writeU8(221),this.writeU32(o)}try{for(var i=E(e),s=i.next();!s.done;s=i.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}},e.prototype.countWithoutUndefined=function(e,t){var r,n,o=0;try{for(var i=E(t),s=i.next();!s.done;s=i.next())void 0!==e[s.value]&&o++}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return o},e.prototype.encodeMap=function(e,t){var r,n,o=Object.keys(e);this.sortKeys&&o.sort();var i=this.ignoreUndefined?this.countWithoutUndefined(e,o):o.length;if(i<16)this.writeU8(128+i);else if(i<65536)this.writeU8(222),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large map object: "+i);this.writeU8(223),this.writeU32(i)}try{for(var s=E(o),a=s.next();!a.done;a=s.next()){var c=a.value,u=e[c];this.ignoreUndefined&&void 0===u||(this.encodeString(c),this.doEncode(u,t+1))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=r/4294967296,o=r;e.setUint32(t,n),e.setUint32(t+4,o)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),d(this.view,this.pos,e),this.pos+=8},e.prototype.writeBig64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=Number(r/BigInt(4294967296)),o=Number(r%BigInt(4294967296));n<0&&0!==o&&(n-=1),e.setUint32(t,n),e.setUint32(t+4,o)}(this.view,this.pos,e),this.pos+=8},e}(),B={};function k(e,t){return void 0===t&&(t=B),new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function U(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var I=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,r){var n=this.caches[r-1],o=n.length;e:for(var i=0;i<o;i++){for(var s=n[i],a=s.bytes,c=0;c<r;c++)if(a[c]!==e[t+c])continue e;return s.value}return null},e.prototype.store=function(e,t){var r=this.caches[e.length-1],n={bytes:e,value:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=n:r.push(n)},e.prototype.decode=function(e,t,r){var n=this.get(e,t,r);if(null!=n)return this.hit++,n;this.miss++;var o=l(e,t,r),i=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(i,o),o},e}(),C=function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},R=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,o){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)}(n,o,(t=e[r](t)).done,t.value)}))}}},O=function(e){return this instanceof O?(this.v=e,this):new O(e)},D=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),i=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){i.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=o[e](t)).value instanceof O?Promise.resolve(r.value.v).then(c,u):l(i[0][2],r)}catch(e){l(i[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),i.shift(),i.length&&a(i[0][0],i[0][1])}},N=new DataView(new ArrayBuffer(0)),P=new Uint8Array(N.buffer),L=function(){try{N.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),j=new L("Insufficient data"),z=new I,F=function(){function e(e,t,r,n,o,i,s,a){void 0===e&&(e=S.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=4294967295),void 0===n&&(n=4294967295),void 0===o&&(o=4294967295),void 0===i&&(i=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=z),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=n,this.maxArrayLength=o,this.maxMapLength=i,this.maxExtLength=s,this.keyDecoder=a,this.totalPos=0,this.pos=0,this.view=N,this.bytes=P,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1},e.prototype.setBuffer=function(e){this.bytes=_(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=_(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),r=_(e),n=new Uint8Array(t.length+r.length);n.set(t),n.set(r,t.length),this.setBuffer(n)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,r=this.pos;return new RangeError("Extra "+(t.byteLength-r)+" of "+t.byteLength+" byte(s) found at buffer["+e+"]")},e.prototype.decode=function(e){return this.reinitializeState(),this.setBuffer(e),this.doDecodeSingleSync()},e.prototype.doDecodeSingleSync=function(){var e=this.doDecodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeAsync=function(e){var t,r,n,o;return function(e,t,r,n){return new(r||(r=Promise))((function(t,o){function i(e){try{a(n.next(e))}catch(e){o(e)}}function s(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var i,s,a,c,u,l,p,h;return C(this,(function(f){switch(f.label){case 0:i=!1,f.label=1;case 1:f.trys.push([1,6,7,12]),t=R(e),f.label=2;case 2:return[4,t.next()];case 3:if((r=f.sent()).done)return[3,5];if(a=r.value,i)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),i=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,f.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=f.sent(),n={error:c},[3,12];case 7:return f.trys.push([7,,10,11]),r&&!r.done&&(o=t.return)?[4,o.call(t)]:[3,9];case 8:f.sent(),f.label=9;case 9:return[3,11];case 10:if(n)throw n.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,s]}throw l=(u=this).headByte,p=u.pos,h=u.totalPos,new RangeError("Insufficient data in parcing "+U(l)+" at "+h+" ("+p+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return D(this,arguments,(function(){var r,n,o,i,s,a,c,u,l;return C(this,(function(p){switch(p.label){case 0:r=t,n=-1,p.label=1;case 1:p.trys.push([1,13,14,19]),o=R(e),p.label=2;case 2:return[4,O(o.next())];case 3:if((i=p.sent()).done)return[3,12];if(s=i.value,t&&0===n)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(s),r&&(n=this.readArraySize(),r=!1,this.complete()),p.label=4;case 4:p.trys.push([4,9,,10]),p.label=5;case 5:return[4,O(this.doDecodeSync())];case 6:return[4,p.sent()];case 7:return p.sent(),0==--n?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=p.sent())instanceof L))throw a;return[3,10];case 10:this.totalPos+=this.pos,p.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=p.sent(),u={error:c},[3,19];case 14:return p.trys.push([14,,17,18]),i&&!i.done&&(l=o.return)?[4,O(l.call(o))]:[3,16];case 15:p.sent(),p.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(n=e-128)){this.pushMapState(n),this.complete();continue e}t={}}else if(e<160){if(0!=(n=e-144)){this.pushArrayState(n),this.complete();continue e}t=[]}else{var r=e-160;t=this.decodeUtf8String(r,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)r=this.lookU8(),t=this.decodeUtf8String(r,1);else if(218===e)r=this.lookU16(),t=this.decodeUtf8String(r,2);else if(219===e)r=this.lookU32(),t=this.decodeUtf8String(r,4);else if(220===e){if(0!==(n=this.readU16())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(221===e){if(0!==(n=this.readU32())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(222===e){if(0!==(n=this.readU16())){this.pushMapState(n),this.complete();continue e}t={}}else if(223===e){if(0!==(n=this.readU32())){this.pushMapState(n),this.complete();continue e}t={}}else if(196===e){var n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e)n=this.lookU16(),t=this.decodeBinary(n,2);else if(198===e)n=this.lookU32(),t=this.decodeBinary(n,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)n=this.lookU8(),t=this.decodeExtension(n,1);else if(200===e)n=this.lookU16(),t=this.decodeExtension(n,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+U(e));n=this.lookU32(),t=this.decodeExtension(n,4)}this.complete();for(var o=this.stack;o.length>0;){var i=o[o.length-1];if(0===i.type){if(i.array[i.position]=t,i.position++,i.position!==i.size)continue e;o.pop(),t=i.array}else{if(1===i.type){if("string"!=(s=typeof t)&&"number"!==s)throw new Error("The type of key must be string or number but "+typeof t);i.key=t,i.type=2;continue e}if(i.map[i.key]=t,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue e}o.pop(),t=i.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+U(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw j;var n,o=this.pos+t;return n=this.stateIsMapKey()&&(null===(r=this.keyDecoder)||void 0===r?void 0:r.canBeCached(e))?this.keyDecoder.decode(this.bytes,o,e):i&&e>h?function(e,t,r){var n=e.subarray(t,t+r);return p.decode(n)}(this.bytes,o,e):l(this.bytes,o,e),this.pos+=t+e,n},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw j;var r=this.pos+t,n=this.bytes.subarray(r,r+e);return this.pos+=t+e,n},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var r=this.view.getInt8(this.pos+t),n=this.decodeBinary(e,t+1);return this.extensionCodec.decode(n,r,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,r,n,o=(e=this.view,t=this.pos,r=e.getUint32(t),n=e.getUint32(t+4),r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296)?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n);return this.pos+=8,o},e.prototype.readI64=function(){var e=g(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),M={};function H(e,t){return void 0===t&&(t=M),new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}var G=function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},q=function(e){return this instanceof q?(this.v=e,this):new q(e)},K=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),i=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){i.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=o[e](t)).value instanceof q?Promise.resolve(r.value.v).then(c,u):l(i[0][2],r)}catch(e){l(i[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),i.shift(),i.length&&a(i[0][0],i[0][1])}};function $(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function V(e){return null!=e[Symbol.asyncIterator]?e:function(e){return K(this,arguments,(function(){var t,r,n,o;return G(this,(function(i){switch(i.label){case 0:t=e.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,q(t.read())];case 3:return r=i.sent(),n=r.done,o=r.value,n?[4,q(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return $(o),[4,q(o)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function W(e,t){return void 0===t&&(t=M),function(e,t,r,n){return new(r||(r=Promise))((function(t,o){function i(e){try{a(n.next(e))}catch(e){o(e)}}function s(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var r;return function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(n){return r=V(e),[2,new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(r)]}))}))}function X(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(r)}function Y(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(r)}}])},5155:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=c(e),s=i[0],a=i[1],u=new o(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],s=16383,a=0,c=n-o;a<c;a+=s)i.push(u(e,a,a+s>c?c:a+s));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),i.join("")};for(var r=[],n=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=i.length;s<a;++s)r[s]=i[s],n[i.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var o,i,s=[],a=t;a<n;a+=3)o=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},5117:function(e,t,r){var n;!function(o){"use strict";var i,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,a=Math.ceil,c=Math.floor,u="[BigNumber Error] ",l=u+"Number primitive has more than 15 significant digits: ",p=1e14,h=14,f=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,y=1e9;function m(e){var t=0|e;return e>0||e===t?t:t-1}function b(e){for(var t,r,n=1,o=e.length,i=e[0]+"";n<o;){for(t=e[n++]+"",r=h-t.length;r--;t="0"+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function w(e,t){var r,n,o=e.c,i=t.c,s=e.s,a=t.s,c=e.e,u=t.e;if(!s||!a)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-a:s;if(s!=a)return s;if(r=s<0,n=c==u,!o||!i)return n?0:!o^r?1:-1;if(!n)return c>u^r?1:-1;for(a=(c=o.length)<(u=i.length)?c:u,s=0;s<a;s++)if(o[s]!=i[s])return o[s]>i[s]^r?1:-1;return c==u?0:c>u^r?1:-1}function v(e,t,r,n){if(e<t||e>r||e!==c(e))throw Error(u+(n||"Argument")+("number"==typeof e?e<t||e>r?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function A(e){var t=e.c.length-1;return m(e.e/h)==t&&e.c[t]%2!=0}function x(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function S(e,t,r){var n,o;if(t<0){for(o=r+".";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+"."+e.slice(t));return e}(i=function e(t){var r,n,o,i,_,E,T,B,k,U,I=G.prototype={constructor:G,toString:null,valueOf:null},C=new G(1),R=20,O=4,D=-7,N=21,P=-1e7,L=1e7,j=!1,z=1,F=0,M={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},H="0123456789abcdefghijklmnopqrstuvwxyz";function G(e,t){var r,i,a,u,p,d,g,y,m=this;if(!(m instanceof G))return new G(e,t);if(null==t){if(e&&!0===e._isBigNumber)return m.s=e.s,void(!e.c||e.e>L?m.c=m.e=null:e.e<P?m.c=[m.e=0]:(m.e=e.e,m.c=e.c.slice()));if((d="number"==typeof e)&&0*e==0){if(m.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,p=e;p>=10;p/=10,u++);return void(u>L?m.c=m.e=null:(m.e=u,m.c=[e]))}y=String(e)}else{if(!s.test(y=String(e)))return o(m,y,d);m.s=45==y.charCodeAt(0)?(y=y.slice(1),-1):1}(u=y.indexOf("."))>-1&&(y=y.replace(".","")),(p=y.search(/e/i))>0?(u<0&&(u=p),u+=+y.slice(p+1),y=y.substring(0,p)):u<0&&(u=y.length)}else{if(v(t,2,H.length,"Base"),10==t)return V(m=new G(e),R+m.e+1,O);if(y=String(e),d="number"==typeof e){if(0*e!=0)return o(m,y,d,t);if(m.s=1/e<0?(y=y.slice(1),-1):1,G.DEBUG&&y.replace(/^0\.0*|\./,"").length>15)throw Error(l+e)}else m.s=45===y.charCodeAt(0)?(y=y.slice(1),-1):1;for(r=H.slice(0,t),u=p=0,g=y.length;p<g;p++)if(r.indexOf(i=y.charAt(p))<0){if("."==i){if(p>u){u=g;continue}}else if(!a&&(y==y.toUpperCase()&&(y=y.toLowerCase())||y==y.toLowerCase()&&(y=y.toUpperCase()))){a=!0,p=-1,u=0;continue}return o(m,String(e),d,t)}d=!1,(u=(y=n(y,t,10,m.s)).indexOf("."))>-1?y=y.replace(".",""):u=y.length}for(p=0;48===y.charCodeAt(p);p++);for(g=y.length;48===y.charCodeAt(--g););if(y=y.slice(p,++g)){if(g-=p,d&&G.DEBUG&&g>15&&(e>f||e!==c(e)))throw Error(l+m.s*e);if((u=u-p-1)>L)m.c=m.e=null;else if(u<P)m.c=[m.e=0];else{if(m.e=u,m.c=[],p=(u+1)%h,u<0&&(p+=h),p<g){for(p&&m.c.push(+y.slice(0,p)),g-=h;p<g;)m.c.push(+y.slice(p,p+=h));p=h-(y=y.slice(p)).length}else p-=g;for(;p--;y+="0");m.c.push(+y)}}else m.c=[m.e=0]}function q(e,t,r,n){var o,i,s,a,c;if(null==r?r=O:v(r,0,8),!e.c)return e.toString();if(o=e.c[0],s=e.e,null==t)c=b(e.c),c=1==n||2==n&&(s<=D||s>=N)?x(c,s):S(c,s,"0");else if(i=(e=V(new G(e),t,r)).e,a=(c=b(e.c)).length,1==n||2==n&&(t<=i||i<=D)){for(;a<t;c+="0",a++);c=x(c,i)}else if(t-=s,c=S(c,i,"0"),i+1>a){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=i-a)>0)for(i+1==a&&(c+=".");t--;c+="0");return e.s<0&&o?"-"+c:c}function K(e,t){for(var r,n=1,o=new G(e[0]);n<e.length;n++){if(!(r=new G(e[n])).s){o=r;break}t.call(o,r)&&(o=r)}return o}function $(e,t,r){for(var n=1,o=t.length;!t[--o];t.pop());for(o=t[0];o>=10;o/=10,n++);return(r=n+r*h-1)>L?e.c=e.e=null:r<P?e.c=[e.e=0]:(e.e=r,e.c=t),e}function V(e,t,r,n){var o,i,s,u,l,f,g,y=e.c,m=d;if(y){e:{for(o=1,u=y[0];u>=10;u/=10,o++);if((i=t-o)<0)i+=h,s=t,g=(l=y[f=0])/m[o-s-1]%10|0;else if((f=a((i+1)/h))>=y.length){if(!n)break e;for(;y.length<=f;y.push(0));l=g=0,o=1,s=(i%=h)-h+1}else{for(l=u=y[f],o=1;u>=10;u/=10,o++);g=(s=(i%=h)-h+o)<0?0:l/m[o-s-1]%10|0}if(n=n||t<0||null!=y[f+1]||(s<0?l:l%m[o-s-1]),n=r<4?(g||n)&&(0==r||r==(e.s<0?3:2)):g>5||5==g&&(4==r||n||6==r&&(i>0?s>0?l/m[o-s]:0:y[f-1])%10&1||r==(e.s<0?8:7)),t<1||!y[0])return y.length=0,n?(t-=e.e+1,y[0]=m[(h-t%h)%h],e.e=-t||0):y[0]=e.e=0,e;if(0==i?(y.length=f,u=1,f--):(y.length=f+1,u=m[h-i],y[f]=s>0?c(l/m[o-s]%m[s])*u:0),n)for(;;){if(0==f){for(i=1,s=y[0];s>=10;s/=10,i++);for(s=y[0]+=u,u=1;s>=10;s/=10,u++);i!=u&&(e.e++,y[0]==p&&(y[0]=1));break}if(y[f]+=u,y[f]!=p)break;y[f--]=0,u=1}for(i=y.length;0===y[--i];y.pop());}e.e>L?e.c=e.e=null:e.e<P&&(e.c=[e.e=0])}return e}function W(e){var t,r=e.e;return null===r?e.toString():(t=b(e.c),t=r<=D||r>=N?x(t,r):S(t,r,"0"),e.s<0?"-"+t:t)}return G.clone=e,G.ROUND_UP=0,G.ROUND_DOWN=1,G.ROUND_CEIL=2,G.ROUND_FLOOR=3,G.ROUND_HALF_UP=4,G.ROUND_HALF_DOWN=5,G.ROUND_HALF_EVEN=6,G.ROUND_HALF_CEIL=7,G.ROUND_HALF_FLOOR=8,G.EUCLID=9,G.config=G.set=function(e){var t,r;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(v(r=e[t],0,y,t),R=r),e.hasOwnProperty(t="ROUNDING_MODE")&&(v(r=e[t],0,8,t),O=r),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((r=e[t])&&r.pop?(v(r[0],-y,0,t),v(r[1],0,y,t),D=r[0],N=r[1]):(v(r,-y,y,t),D=-(N=r<0?-r:r))),e.hasOwnProperty(t="RANGE"))if((r=e[t])&&r.pop)v(r[0],-y,-1,t),v(r[1],1,y,t),P=r[0],L=r[1];else{if(v(r,-y,y,t),!r)throw Error(u+t+" cannot be zero: "+r);P=-(L=r<0?-r:r)}if(e.hasOwnProperty(t="CRYPTO")){if((r=e[t])!==!!r)throw Error(u+t+" not true or false: "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw j=!r,Error(u+"crypto unavailable");j=r}else j=r}if(e.hasOwnProperty(t="MODULO_MODE")&&(v(r=e[t],0,9,t),z=r),e.hasOwnProperty(t="POW_PRECISION")&&(v(r=e[t],0,y,t),F=r),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(r=e[t]))throw Error(u+t+" not an object: "+r);M=r}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(r=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(r))throw Error(u+t+" invalid: "+r);H=r}}return{DECIMAL_PLACES:R,ROUNDING_MODE:O,EXPONENTIAL_AT:[D,N],RANGE:[P,L],CRYPTO:j,MODULO_MODE:z,POW_PRECISION:F,FORMAT:M,ALPHABET:H}},G.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!G.DEBUG)return!0;var t,r,n=e.c,o=e.e,i=e.s;e:if("[object Array]"=={}.toString.call(n)){if((1===i||-1===i)&&o>=-y&&o<=y&&o===c(o)){if(0===n[0]){if(0===o&&1===n.length)return!0;break e}if((t=(o+1)%h)<1&&(t+=h),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=p||r!==c(r))break e;if(0!==r)return!0}}}else if(null===n&&null===o&&(null===i||1===i||-1===i))return!0;throw Error(u+"Invalid BigNumber: "+e)},G.maximum=G.max=function(){return K(arguments,I.lt)},G.minimum=G.min=function(){return K(arguments,I.gt)},G.random=(i=9007199254740992,_=Math.random()*i&2097151?function(){return c(Math.random()*i)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,o,i,s=0,l=[],p=new G(C);if(null==e?e=R:v(e,0,y),o=a(e/h),j)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));s<o;)(i=131072*t[s]+(t[s+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(l.push(i%1e14),s+=2);s=o/2}else{if(!crypto.randomBytes)throw j=!1,Error(u+"crypto unavailable");for(t=crypto.randomBytes(o*=7);s<o;)(i=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6])>=9e15?crypto.randomBytes(7).copy(t,s):(l.push(i%1e14),s+=7);s=o/7}if(!j)for(;s<o;)(i=_())<9e15&&(l[s++]=i%1e14);for(o=l[--s],e%=h,o&&e&&(i=d[h-e],l[s]=c(o/i)*i);0===l[s];l.pop(),s--);if(s<0)l=[n=0];else{for(n=-1;0===l[0];l.splice(0,1),n-=h);for(s=1,i=l[0];i>=10;i/=10,s++);s<h&&(n-=h-s)}return p.e=n,p.c=l,p}),G.sum=function(){for(var e=1,t=arguments,r=new G(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e="0123456789";function t(e,t,r,n){for(var o,i,s=[0],a=0,c=e.length;a<c;){for(i=s.length;i--;s[i]*=t);for(s[0]+=n.indexOf(e.charAt(a++)),o=0;o<s.length;o++)s[o]>r-1&&(null==s[o+1]&&(s[o+1]=0),s[o+1]+=s[o]/r|0,s[o]%=r)}return s.reverse()}return function(n,o,i,s,a){var c,u,l,p,h,f,d,g,y=n.indexOf("."),m=R,w=O;for(y>=0&&(p=F,F=0,n=n.replace(".",""),f=(g=new G(o)).pow(n.length-y),F=p,g.c=t(S(b(f.c),f.e,"0"),10,i,e),g.e=g.c.length),l=p=(d=t(n,o,i,a?(c=H,e):(c=e,H))).length;0==d[--p];d.pop());if(!d[0])return c.charAt(0);if(y<0?--l:(f.c=d,f.e=l,f.s=s,d=(f=r(f,g,m,w,i)).c,h=f.r,l=f.e),y=d[u=l+m+1],p=i/2,h=h||u<0||null!=d[u+1],h=w<4?(null!=y||h)&&(0==w||w==(f.s<0?3:2)):y>p||y==p&&(4==w||h||6==w&&1&d[u-1]||w==(f.s<0?8:7)),u<1||!d[0])n=h?S(c.charAt(1),-m,c.charAt(0)):c.charAt(0);else{if(d.length=u,h)for(--i;++d[--u]>i;)d[u]=0,u||(++l,d=[1].concat(d));for(p=d.length;!d[--p];);for(y=0,n="";y<=p;n+=c.charAt(d[y++]));n=S(n,l,c.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,o,i,s,a=0,c=e.length,u=t%g,l=t/g|0;for(e=e.slice();c--;)a=((o=u*(i=e[c]%g)+(n=l*i+(s=e[c]/g|0)*u)%g*g+a)/r|0)+(n/g|0)+l*s,e[c]=o%r;return a&&(e=[a].concat(e)),e}function t(e,t,r,n){var o,i;if(r!=n)i=r>n?1:-1;else for(o=i=0;o<r;o++)if(e[o]!=t[o]){i=e[o]>t[o]?1:-1;break}return i}function r(e,t,r,n){for(var o=0;r--;)e[r]-=o,o=e[r]<t[r]?1:0,e[r]=o*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,o,i,s,a){var u,l,f,d,g,y,b,w,v,A,x,S,_,E,T,B,k,U=n.s==o.s?1:-1,I=n.c,C=o.c;if(!(I&&I[0]&&C&&C[0]))return new G(n.s&&o.s&&(I?!C||I[0]!=C[0]:C)?I&&0==I[0]||!C?0*U:U/0:NaN);for(v=(w=new G(U)).c=[],U=i+(l=n.e-o.e)+1,a||(a=p,l=m(n.e/h)-m(o.e/h),U=U/h|0),f=0;C[f]==(I[f]||0);f++);if(C[f]>(I[f]||0)&&l--,U<0)v.push(1),d=!0;else{for(E=I.length,B=C.length,f=0,U+=2,(g=c(a/(C[0]+1)))>1&&(C=e(C,g,a),I=e(I,g,a),B=C.length,E=I.length),_=B,x=(A=I.slice(0,B)).length;x<B;A[x++]=0);k=C.slice(),k=[0].concat(k),T=C[0],C[1]>=a/2&&T++;do{if(g=0,(u=t(C,A,B,x))<0){if(S=A[0],B!=x&&(S=S*a+(A[1]||0)),(g=c(S/T))>1)for(g>=a&&(g=a-1),b=(y=e(C,g,a)).length,x=A.length;1==t(y,A,b,x);)g--,r(y,B<b?k:C,b,a),b=y.length,u=1;else 0==g&&(u=g=1),b=(y=C.slice()).length;if(b<x&&(y=[0].concat(y)),r(A,y,x,a),x=A.length,-1==u)for(;t(C,A,B,x)<1;)g++,r(A,B<x?k:C,x,a),x=A.length}else 0===u&&(g++,A=[0]);v[f++]=g,A[0]?A[x++]=I[_]||0:(A=[I[_]],x=1)}while((_++<E||null!=A[0])&&U--);d=null!=A[0],v[0]||v.splice(0,1)}if(a==p){for(f=1,U=v[0];U>=10;U/=10,f++);V(w,i+(w.e=f+l*h-1)+1,s,d)}else w.e=l,w.r=+d;return w}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,T=/^([^.]+)\.$/,B=/^\.([^.]+)$/,k=/^-?(Infinity|NaN)$/,U=/^\s*\+(?=[\w.])|^\s+|\s+$/g,o=function(e,t,r,n){var o,i=r?t:t.replace(U,"");if(k.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!r&&(i=i.replace(E,(function(e,t,r){return o="x"==(r=r.toLowerCase())?16:"b"==r?2:8,n&&n!=o?e:t})),n&&(o=n,i=i.replace(T,"$1").replace(B,"0.$1")),t!=i))return new G(i,o);if(G.DEBUG)throw Error(u+"Not a"+(n?" base "+n:"")+" number: "+t);e.s=null}e.c=e.e=null},I.absoluteValue=I.abs=function(){var e=new G(this);return e.s<0&&(e.s=1),e},I.comparedTo=function(e,t){return w(this,new G(e,t))},I.decimalPlaces=I.dp=function(e,t){var r,n,o,i=this;if(null!=e)return v(e,0,y),null==t?t=O:v(t,0,8),V(new G(i),e+i.e+1,t);if(!(r=i.c))return null;if(n=((o=r.length-1)-m(this.e/h))*h,o=r[o])for(;o%10==0;o/=10,n--);return n<0&&(n=0),n},I.dividedBy=I.div=function(e,t){return r(this,new G(e,t),R,O)},I.dividedToIntegerBy=I.idiv=function(e,t){return r(this,new G(e,t),0,1)},I.exponentiatedBy=I.pow=function(e,t){var r,n,o,i,s,l,p,f,d=this;if((e=new G(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+W(e));if(null!=t&&(t=new G(t)),s=e.e>14,!d.c||!d.c[0]||1==d.c[0]&&!d.e&&1==d.c.length||!e.c||!e.c[0])return f=new G(Math.pow(+W(d),s?2-A(e):+W(e))),t?f.mod(t):f;if(l=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new G(NaN);(n=!l&&d.isInteger()&&t.isInteger())&&(d=d.mod(t))}else{if(e.e>9&&(d.e>0||d.e<-1||(0==d.e?d.c[0]>1||s&&d.c[1]>=24e7:d.c[0]<8e13||s&&d.c[0]<=9999975e7)))return i=d.s<0&&A(e)?-0:0,d.e>-1&&(i=1/i),new G(l?1/i:i);F&&(i=a(F/h+2))}for(s?(r=new G(.5),l&&(e.s=1),p=A(e)):p=(o=Math.abs(+W(e)))%2,f=new G(C);;){if(p){if(!(f=f.times(d)).c)break;i?f.c.length>i&&(f.c.length=i):n&&(f=f.mod(t))}if(o){if(0===(o=c(o/2)))break;p=o%2}else if(V(e=e.times(r),e.e+1,1),e.e>14)p=A(e);else{if(0==(o=+W(e)))break;p=o%2}d=d.times(d),i?d.c&&d.c.length>i&&(d.c.length=i):n&&(d=d.mod(t))}return n?f:(l&&(f=C.div(f)),t?f.mod(t):i?V(f,F,O,void 0):f)},I.integerValue=function(e){var t=new G(this);return null==e?e=O:v(e,0,8),V(t,t.e+1,e)},I.isEqualTo=I.eq=function(e,t){return 0===w(this,new G(e,t))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(e,t){return w(this,new G(e,t))>0},I.isGreaterThanOrEqualTo=I.gte=function(e,t){return 1===(t=w(this,new G(e,t)))||0===t},I.isInteger=function(){return!!this.c&&m(this.e/h)>this.c.length-2},I.isLessThan=I.lt=function(e,t){return w(this,new G(e,t))<0},I.isLessThanOrEqualTo=I.lte=function(e,t){return-1===(t=w(this,new G(e,t)))||0===t},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(e,t){var r,n,o,i,s=this,a=s.s;if(t=(e=new G(e,t)).s,!a||!t)return new G(NaN);if(a!=t)return e.s=-t,s.plus(e);var c=s.e/h,u=e.e/h,l=s.c,f=e.c;if(!c||!u){if(!l||!f)return l?(e.s=-t,e):new G(f?s:NaN);if(!l[0]||!f[0])return f[0]?(e.s=-t,e):new G(l[0]?s:3==O?-0:0)}if(c=m(c),u=m(u),l=l.slice(),a=c-u){for((i=a<0)?(a=-a,o=l):(u=c,o=f),o.reverse(),t=a;t--;o.push(0));o.reverse()}else for(n=(i=(a=l.length)<(t=f.length))?a:t,a=t=0;t<n;t++)if(l[t]!=f[t]){i=l[t]<f[t];break}if(i&&(o=l,l=f,f=o,e.s=-e.s),(t=(n=f.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=p-1;n>a;){if(l[--n]<f[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=p}l[n]-=f[n]}for(;0==l[0];l.splice(0,1),--u);return l[0]?$(e,l,u):(e.s=3==O?-1:1,e.c=[e.e=0],e)},I.modulo=I.mod=function(e,t){var n,o,i=this;return e=new G(e,t),!i.c||!e.s||e.c&&!e.c[0]?new G(NaN):!e.c||i.c&&!i.c[0]?new G(i):(9==z?(o=e.s,e.s=1,n=r(i,e,0,3),e.s=o,n.s*=o):n=r(i,e,0,z),(e=i.minus(n.times(e))).c[0]||1!=z||(e.s=i.s),e)},I.multipliedBy=I.times=function(e,t){var r,n,o,i,s,a,c,u,l,f,d,y,b,w,v,A=this,x=A.c,S=(e=new G(e,t)).c;if(!(x&&S&&x[0]&&S[0]))return!A.s||!e.s||x&&!x[0]&&!S||S&&!S[0]&&!x?e.c=e.e=e.s=null:(e.s*=A.s,x&&S?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=m(A.e/h)+m(e.e/h),e.s*=A.s,(c=x.length)<(f=S.length)&&(b=x,x=S,S=b,o=c,c=f,f=o),o=c+f,b=[];o--;b.push(0));for(w=p,v=g,o=f;--o>=0;){for(r=0,d=S[o]%v,y=S[o]/v|0,i=o+(s=c);i>o;)r=((u=d*(u=x[--s]%v)+(a=y*u+(l=x[s]/v|0)*d)%v*v+b[i]+r)/w|0)+(a/v|0)+y*l,b[i--]=u%w;b[i]=r}return r?++n:b.splice(0,1),$(e,b,n)},I.negated=function(){var e=new G(this);return e.s=-e.s||null,e},I.plus=function(e,t){var r,n=this,o=n.s;if(t=(e=new G(e,t)).s,!o||!t)return new G(NaN);if(o!=t)return e.s=-t,n.minus(e);var i=n.e/h,s=e.e/h,a=n.c,c=e.c;if(!i||!s){if(!a||!c)return new G(o/0);if(!a[0]||!c[0])return c[0]?e:new G(a[0]?n:0*o)}if(i=m(i),s=m(s),a=a.slice(),o=i-s){for(o>0?(s=i,r=c):(o=-o,r=a),r.reverse();o--;r.push(0));r.reverse()}for((o=a.length)-(t=c.length)<0&&(r=c,c=a,a=r,t=o),o=0;t;)o=(a[--t]=a[t]+c[t]+o)/p|0,a[t]=p===a[t]?0:a[t]%p;return o&&(a=[o].concat(a),++s),$(e,a,s)},I.precision=I.sd=function(e,t){var r,n,o,i=this;if(null!=e&&e!==!!e)return v(e,1,y),null==t?t=O:v(t,0,8),V(new G(i),e,t);if(!(r=i.c))return null;if(n=(o=r.length-1)*h+1,o=r[o]){for(;o%10==0;o/=10,n--);for(o=r[0];o>=10;o/=10,n++);}return e&&i.e+1>n&&(n=i.e+1),n},I.shiftedBy=function(e){return v(e,-9007199254740991,f),this.times("1e"+e)},I.squareRoot=I.sqrt=function(){var e,t,n,o,i,s=this,a=s.c,c=s.s,u=s.e,l=R+4,p=new G("0.5");if(1!==c||!a||!a[0])return new G(!c||c<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(c=Math.sqrt(+W(s)))||c==1/0?(((t=b(a)).length+u)%2==0&&(t+="0"),c=Math.sqrt(+t),u=m((u+1)/2)-(u<0||u%2),n=new G(t=c==1/0?"5e"+u:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new G(c+""),n.c[0])for((c=(u=n.e)+l)<3&&(c=0);;)if(i=n,n=p.times(i.plus(r(s,i,l,1))),b(i.c).slice(0,c)===(t=b(n.c)).slice(0,c)){if(n.e<u&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(o||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(V(n,n.e+R+2,1),e=!n.times(n).eq(s));break}if(!o&&(V(i,i.e+R+2,0),i.times(i).eq(s))){n=i;break}l+=4,c+=4,o=1}return V(n,n.e+R+1,O,e)},I.toExponential=function(e,t){return null!=e&&(v(e,0,y),e++),q(this,e,t,1)},I.toFixed=function(e,t){return null!=e&&(v(e,0,y),e=e+this.e+1),q(this,e,t)},I.toFormat=function(e,t,r){var n,o=this;if(null==r)null!=e&&t&&"object"==typeof t?(r=t,t=null):e&&"object"==typeof e?(r=e,e=t=null):r=M;else if("object"!=typeof r)throw Error(u+"Argument not an object: "+r);if(n=o.toFixed(e,t),o.c){var i,s=n.split("."),a=+r.groupSize,c=+r.secondaryGroupSize,l=r.groupSeparator||"",p=s[0],h=s[1],f=o.s<0,d=f?p.slice(1):p,g=d.length;if(c&&(i=a,a=c,c=i,g-=i),a>0&&g>0){for(i=g%a||a,p=d.substr(0,i);i<g;i+=a)p+=l+d.substr(i,a);c>0&&(p+=l+d.slice(i)),f&&(p="-"+p)}n=h?p+(r.decimalSeparator||"")+((c=+r.fractionGroupSize)?h.replace(new RegExp("\\d{"+c+"}\\B","g"),"$&"+(r.fractionGroupSeparator||"")):h):p}return(r.prefix||"")+n+(r.suffix||"")},I.toFraction=function(e){var t,n,o,i,s,a,c,l,p,f,g,y,m=this,w=m.c;if(null!=e&&(!(c=new G(e)).isInteger()&&(c.c||1!==c.s)||c.lt(C)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+W(c));if(!w)return new G(m);for(t=new G(C),p=n=new G(C),o=l=new G(C),y=b(w),s=t.e=y.length-m.e-1,t.c[0]=d[(a=s%h)<0?h+a:a],e=!e||c.comparedTo(t)>0?s>0?t:p:c,a=L,L=1/0,c=new G(y),l.c[0]=0;f=r(c,t,0,1),1!=(i=n.plus(f.times(o))).comparedTo(e);)n=o,o=i,p=l.plus(f.times(i=p)),l=i,t=c.minus(f.times(i=t)),c=i;return i=r(e.minus(n),o,0,1),l=l.plus(i.times(p)),n=n.plus(i.times(o)),l.s=p.s=m.s,g=r(p,o,s*=2,O).minus(m).abs().comparedTo(r(l,n,s,O).minus(m).abs())<1?[p,o]:[l,n],L=a,g},I.toNumber=function(){return+W(this)},I.toPrecision=function(e,t){return null!=e&&v(e,1,y),q(this,e,t,2)},I.toString=function(e){var t,r=this,o=r.s,i=r.e;return null===i?o?(t="Infinity",o<0&&(t="-"+t)):t="NaN":(null==e?t=i<=D||i>=N?x(b(r.c),i):S(b(r.c),i,"0"):10===e?t=S(b((r=V(new G(r),R+i+1,O)).c),r.e,"0"):(v(e,2,H.length,"Base"),t=n(S(b(r.c),i,"0"),10,e,o,!0)),o<0&&r.c[0]&&(t="-"+t)),t},I.valueOf=I.toJSON=function(){return W(this)},I._isBigNumber=!0,null!=t&&G.set(t),G}()).default=i.BigNumber=i,void 0===(n=function(){return i}.call(t,r,t,e))||(e.exports=n)}()},2486:(e,t,r)=>{"use strict";const n=r(5155),o=r(4525),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const o=n.write(e,t);return o!==r&&(n=n.slice(0,o)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(X(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(X(e,ArrayBuffer)||e&&X(e.buffer,ArrayBuffer))return f(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(X(e,SharedArrayBuffer)||e&&X(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const o=function(e){if(c.isBuffer(e)){const t=0|d(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|d(e))}function h(e){const t=e.length<0?0:0|d(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function d(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||X(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return $(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(o)return n?-1:$(e).length;t=(""+t).toLowerCase(),o=!0}}function y(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return T(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Y(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,o){let i,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(o){let n=-1;for(i=r;i<a;i++)if(u(e,i)===u(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===c)return n*s}else-1!==n&&(i-=i-n),n=-1}else for(r+c>a&&(r=a-c),i=r;i>=0;i--){let r=!0;for(let n=0;n<c;n++)if(u(e,i+n)!==u(t,n)){r=!1;break}if(r)return i}return-1}function v(e,t,r,n){r=Number(r)||0;const o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=t.length;let s;for(n>i/2&&(n=i/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(Y(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W($(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function S(e,t,r,n){return W(V(t),e,r,n)}function _(e,t,r,n){return W(function(e,t){let r,n,o;const i=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function T(e,t,r){r=Math.min(e.length,r);const n=[];let o=t;for(;o<r;){const t=e[o];let i=null,s=t>239?4:t>223?3:t>191?2:1;if(o+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(i=t);break;case 2:r=e[o+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(i=c));break;case 3:r=e[o+1],n=e[o+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(i=c));break;case 4:r=e[o+1],n=e[o+2],a=e[o+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(i=c))}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=s}return function(e){const t=e.length;if(t<=B)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=B));return r}(n)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),X(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if(X(t,Uint8Array))o+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,o)):Uint8Array.prototype.set.call(n,t,o);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,o)}o+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?T(this,0,e):y.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},i&&(c.prototype[i]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,o){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(i,s),u=this.slice(n,o),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){i=u[e],s=l[e];break}return i<s?-1:s<i?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return S(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const B=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let o="";for(let n=t;n<r;++n)o+=J[e[n]];return o}function C(e,t,r){const n=e.slice(t,r);let o="";for(let e=0;e<n.length-1;e+=2)o+=String.fromCharCode(n[e]+256*n[e+1]);return o}function R(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function O(e,t,r,n,o,i){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function D(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,8),o.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e+--t],o=1;for(;t>0&&(o*=256);)n+=this[e+--t]*o;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),c.prototype.readBigUInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=t,o=1,i=this[e+--n];for(;n>0&&(o*=256);)i+=this[e+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i},c.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=Z((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=Z((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=0,i=1,s=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=r-1,i=1,s=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=Z((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=Z((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const o=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const i=c.isBuffer(e)?e:c.from(e,n),s=i.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=i[o%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function H(e,t,r,n,o,i){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let o;throw o=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,r){G(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||q(t,e.length-(r+1))}(n,o,i)}function G(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function q(e,t,r){if(Math.floor(e)!==e)throw G(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=M(String(r)):"bigint"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=M(o)),o+="n"),n+=` It must be ${t}. Received ${o}`,n}),RangeError);const K=/[^+/0-9A-Za-z-_]/g;function $(e,t){let r;t=t||1/0;const n=e.length;let o=null;const i=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(K,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let o;for(o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function X(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)t[n+o]=e[r]+e[o]}return t}();function Z(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},7615:(e,t,r)=>{"use strict";var n=r(1801),o=r(2550),i=o(n("String.prototype.indexOf"));e.exports=function(e,t){var r=n(e,!!t);return"function"==typeof r&&i(e,".prototype.")>-1?o(r):r}},2550:(e,t,r)=>{"use strict";var n=r(1930),o=r(1801),i=o("%Function.prototype.apply%"),s=o("%Function.prototype.call%"),a=o("%Reflect.apply%",!0)||n.call(s,i),c=o("%Object.getOwnPropertyDescriptor%",!0),u=o("%Object.defineProperty%",!0),l=o("%Math.max%");if(u)try{u({},"a",{value:1})}catch(e){u=null}e.exports=function(e){var t=a(n,s,arguments);if(c&&u){var r=c(t,"length");r.configurable&&u(t,"length",{value:1+l(0,e.length-(arguments.length-1))})}return t};var p=function(){return a(n,i,arguments)};u?u(e.exports,"apply",{value:p}):e.exports.apply=p},1069:e=>{function t(e){if(e)return function(e){for(var r in t.prototype)e[r]=t.prototype[r];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function r(){this.off(e,r),t.apply(this,arguments)}return r.fn=t,this.on(e,r),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var r,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<n.length;o++)if((r=n[o])===t||r.fn===t){n.splice(o,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),r=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(r){n=0;for(var o=(r=r.slice(0)).length;n<o;++n)r[n].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}},5799:e=>{e.exports=n,n.default=n,n.stable=s,n.stableStringify=s;var t=[],r=[];function n(e,n,i){var s;for(o(e,"",[],void 0),s=0===r.length?JSON.stringify(e,n,i):JSON.stringify(e,c(n),i);0!==t.length;){var a=t.pop();4===a.length?Object.defineProperty(a[0],a[1],a[3]):a[0][a[1]]=a[2]}return s}function o(e,n,i,s){var a;if("object"==typeof e&&null!==e){for(a=0;a<i.length;a++)if(i[a]===e){var c=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==c.get?c.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,c])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if(i.push(e),Array.isArray(e))for(a=0;a<e.length;a++)o(e[a],a,i,e);else{var u=Object.keys(e);for(a=0;a<u.length;a++){var l=u[a];o(e[l],l,i,e)}}i.pop()}}function i(e,t){return e<t?-1:e>t?1:0}function s(e,n,o){var i,s=a(e,"",[],void 0)||e;for(i=0===r.length?JSON.stringify(s,n,o):JSON.stringify(s,c(n),o);0!==t.length;){var u=t.pop();4===u.length?Object.defineProperty(u[0],u[1],u[3]):u[0][u[1]]=u[2]}return i}function a(e,n,o,s){var c;if("object"==typeof e&&null!==e){for(c=0;c<o.length;c++)if(o[c]===e){var u=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==u.get?u.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,u])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if("function"==typeof e.toJSON)return;if(o.push(e),Array.isArray(e))for(c=0;c<e.length;c++)a(e[c],c,o,e);else{var l={},p=Object.keys(e).sort(i);for(c=0;c<p.length;c++){var h=p[c];a(e[h],h,o,e),l[h]=e[h]}if(void 0===s)return l;t.push([s,n,e]),s[n]=l}o.pop()}}function c(e){return e=void 0!==e?e:function(e,t){return t},function(t,n){if(r.length>0)for(var o=0;o<r.length;o++){var i=r[o];if(i[1]===t&&i[0]===n){n="[Circular]",r.splice(o,1);break}}return e.call(this,t,n)}}},9930:e=>{"use strict";var t="Function.prototype.bind called on incompatible ",r=Array.prototype.slice,n=Object.prototype.toString,o="[object Function]";e.exports=function(e){var i=this;if("function"!=typeof i||n.call(i)!==o)throw new TypeError(t+i);for(var s,a=r.call(arguments,1),c=function(){if(this instanceof s){var t=i.apply(this,a.concat(r.call(arguments)));return Object(t)===t?t:this}return i.apply(e,a.concat(r.call(arguments)))},u=Math.max(0,i.length-a.length),l=[],p=0;p<u;p++)l.push("$"+p);if(s=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(c),i.prototype){var h=function(){};h.prototype=i.prototype,s.prototype=new h,h.prototype=null}return s}},1930:(e,t,r)=>{"use strict";var n=r(9930);e.exports=Function.prototype.bind||n},1801:(e,t,r)=>{"use strict";var n,o=SyntaxError,i=Function,s=TypeError,a=function(e){try{return i('"use strict"; return ('+e+").constructor;")()}catch(e){}},c=Object.getOwnPropertyDescriptor;if(c)try{c({},"")}catch(e){c=null}var u=function(){throw new s},l=c?function(){try{return u}catch(e){try{return c(arguments,"callee").get}catch(e){return u}}}():u,p=r(9905)(),h=Object.getPrototypeOf||function(e){return e.__proto__},f={},d="undefined"==typeof Uint8Array?n:h(Uint8Array),g={"%AggregateError%":"undefined"==typeof AggregateError?n:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?n:ArrayBuffer,"%ArrayIteratorPrototype%":p?h([][Symbol.iterator]()):n,"%AsyncFromSyncIteratorPrototype%":n,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?n:Atomics,"%BigInt%":"undefined"==typeof BigInt?n:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?n:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?n:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?n:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?n:FinalizationRegistry,"%Function%":i,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?n:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?n:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?n:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":p?h(h([][Symbol.iterator]())):n,"%JSON%":"object"==typeof JSON?JSON:n,"%Map%":"undefined"==typeof Map?n:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&p?h((new Map)[Symbol.iterator]()):n,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?n:Promise,"%Proxy%":"undefined"==typeof Proxy?n:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?n:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?n:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&p?h((new Set)[Symbol.iterator]()):n,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?n:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":p?h(""[Symbol.iterator]()):n,"%Symbol%":p?Symbol:n,"%SyntaxError%":o,"%ThrowTypeError%":l,"%TypedArray%":d,"%TypeError%":s,"%Uint8Array%":"undefined"==typeof Uint8Array?n:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?n:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?n:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?n:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?n:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?n:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?n:WeakSet},y=function e(t){var r;if("%AsyncFunction%"===t)r=a("async function () {}");else if("%GeneratorFunction%"===t)r=a("function* () {}");else if("%AsyncGeneratorFunction%"===t)r=a("async function* () {}");else if("%AsyncGenerator%"===t){var n=e("%AsyncGeneratorFunction%");n&&(r=n.prototype)}else if("%AsyncIteratorPrototype%"===t){var o=e("%AsyncGenerator%");o&&(r=h(o.prototype))}return g[t]=r,r},m={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},b=r(1930),w=r(9284),v=b.call(Function.call,Array.prototype.concat),A=b.call(Function.apply,Array.prototype.splice),x=b.call(Function.call,String.prototype.replace),S=b.call(Function.call,String.prototype.slice),_=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,E=/\\(\\)?/g,T=function(e){var t=S(e,0,1),r=S(e,-1);if("%"===t&&"%"!==r)throw new o("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==t)throw new o("invalid intrinsic syntax, expected opening `%`");var n=[];return x(e,_,(function(e,t,r,o){n[n.length]=r?x(o,E,"$1"):t||e})),n},B=function(e,t){var r,n=e;if(w(m,n)&&(n="%"+(r=m[n])[0]+"%"),w(g,n)){var i=g[n];if(i===f&&(i=y(n)),void 0===i&&!t)throw new s("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:r,name:n,value:i}}throw new o("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new s("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new s('"allowMissing" argument must be a boolean');var r=T(e),n=r.length>0?r[0]:"",i=B("%"+n+"%",t),a=i.name,u=i.value,l=!1,p=i.alias;p&&(n=p[0],A(r,v([0,1],p)));for(var h=1,f=!0;h<r.length;h+=1){var d=r[h],y=S(d,0,1),m=S(d,-1);if(('"'===y||"'"===y||"`"===y||'"'===m||"'"===m||"`"===m)&&y!==m)throw new o("property names with quotes must have matching quotes");if("constructor"!==d&&f||(l=!0),w(g,a="%"+(n+="."+d)+"%"))u=g[a];else if(null!=u){if(!(d in u)){if(!t)throw new s("base intrinsic for "+e+" exists, but the property is not available.");return}if(c&&h+1>=r.length){var b=c(u,d);u=(f=!!b)&&"get"in b&&!("originalValue"in b.get)?b.get:u[d]}else f=w(u,d),u=u[d];f&&!l&&(g[a]=u)}}return u}},9905:(e,t,r)=>{"use strict";var n="undefined"!=typeof Symbol&&Symbol,o=r(5682);e.exports=function(){return"function"==typeof n&&"function"==typeof Symbol&&"symbol"==typeof n("foo")&&"symbol"==typeof Symbol("bar")&&o()}},5682:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},9284:(e,t,r)=>{"use strict";var n=r(1930);e.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},7267:(e,t,r)=>{var n;!function(){"use strict";var t="object"==typeof window?window:{};!t.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(t=r.g);var o=!t.HI_BASE32_NO_COMMON_JS&&e.exports,i=r.amdO,s="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),a={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],u=function(e,t){t.length>10&&(t="..."+t.substr(-10));var r=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+t+" <-");throw r.position=e,r},l=function(e){if(""===e)return[];if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var t,r,n,o,i,s,c,u,l=[],p=0,h=(e=e.replace(/=/g,"")).length,f=0,d=h>>3<<3;f<d;)t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],s=a[e.charAt(f++)],c=a[e.charAt(f++)],u=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1),l[p++]=255&(i<<7|s<<2|c>>>3),l[p++]=255&(c<<5|u);var g=h-d;return 2===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2)):4===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4)):5===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1)):7===g&&(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],s=a[e.charAt(f++)],c=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1),l[p++]=255&(i<<7|s<<2|c>>>3)),l},p=function(e,t){if(!t)return function(e){for(var t,r,n="",o=e.length,i=0,s=0;i<o;)if((t=e[i++])<=127)n+=String.fromCharCode(t);else{t>191&&t<=223?(r=31&t,s=1):t<=239?(r=15&t,s=2):t<=247?(r=7&t,s=3):u(i,n);for(var a=0;a<s;++a)((t=e[i++])<128||t>191)&&u(i,n),r<<=6,r+=63&t;r>=55296&&r<=57343&&u(i,n),r>1114111&&u(i,n),r<=65535?n+=String.fromCharCode(r):(r-=65536,n+=String.fromCharCode(55296+(r>>10)),n+=String.fromCharCode(56320+(1023&r)))}return n}(l(e));if(""===e)return"";if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var r,n,o,i,s,c,p,h,f="",d=e.indexOf("=");-1===d&&(d=e.length);for(var g=0,y=d>>3<<3;g<y;)r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],h=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))+String.fromCharCode(255&(p<<5|h));var m=d-y;return 2===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))):4===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))):5===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))):7===m&&(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))),f},h={encode:function(e,t){var r="string"!=typeof e;return r&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),r?function(e){for(var t,r,n,o,i,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e[u++],r=e[u++],n=e[u++],o=e[u++],i=e[u++],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i];var p=c-l;return 1===p?(t=e[u],a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e[u++],r=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e[u++],r=e[u++],n=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e[u++],r=e[u++],n=e[u++],o=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"="),a}(e):t?function(e){for(var t,r,n,o,i,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),o=e.charCodeAt(u++),i=e.charCodeAt(u++),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i];var p=c-l;return 1===p?(t=e.charCodeAt(u),a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),o=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"="),a}(e):function(e){var t,r,n,o,i,a,u,l=!1,p="",h=0,f=0,d=e.length;if(""===e)return p;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],u=f;h<d&&u<5;++h)(a=e.charCodeAt(h))<128?c[u++]=a:a<2048?(c[u++]=192|a>>6,c[u++]=128|63&a):a<55296||a>=57344?(c[u++]=224|a>>12,c[u++]=128|a>>6&63,c[u++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++h)),c[u++]=240|a>>18,c[u++]=128|a>>12&63,c[u++]=128|a>>6&63,c[u++]=128|63&a);f=u-5,h===d&&++h,h>d&&u<6&&(l=!0),t=c[0],u>4?(r=c[1],n=c[2],o=c[3],i=c[4],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i]):1===u?p+=s[t>>>3]+s[t<<2&31]+"======":2===u?(r=c[1],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===u?(r=c[1],n=c[2],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):(r=c[1],n=c[2],o=c[3],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"=")}while(!l);return p}(e)},decode:p};p.asBytes=l,o?e.exports=h:(t.base32=h,i&&(void 0===(n=function(){return h}.call(h,r,h,e))||(e.exports=n)))}()},4525:(e,t)=>{t.read=function(e,t,r,n,o){var i,s,a=8*o-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?o-1:0,h=r?-1:1,f=e[t+p];for(p+=h,i=f&(1<<-l)-1,f>>=-l,l+=a;l>0;i=256*i+e[t+p],p+=h,l-=8);for(s=i&(1<<-l)-1,i>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===i)i=1-u;else{if(i===c)return s?NaN:1/0*(f?-1:1);s+=Math.pow(2,n),i-=u}return(f?-1:1)*s*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var s,a,c,u=8*i-o-1,l=(1<<u)-1,p=l>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:i-1,d=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,o),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,o),s=0));o>=8;e[r+f]=255&a,f+=d,a/=256,o-=8);for(s=s<<o|a,u+=o;u>0;e[r+f]=255&s,f+=d,s/=256,u-=8);e[r+f-d]|=128*g}},3477:(module,exports,__nested_webpack_require_96669__)=>{var __WEBPACK_AMD_DEFINE_RESULT__;(function(){"use strict";var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=__nested_webpack_require_96669__.g:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD=__nested_webpack_require_96669__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,r){var n,o=typeof e;if("string"===o){var i,s=[],a=e.length,c=0;for(n=0;n<a;++n)(i=e.charCodeAt(n))<128?s[c++]=i:i<2048?(s[c++]=192|i>>6,s[c++]=128|63&i):i<55296||i>=57344?(s[c++]=224|i>>12,s[c++]=128|i>>6&63,s[c++]=128|63&i):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++n)),s[c++]=240|i>>18,s[c++]=128|i>>12&63,s[c++]=128|i>>6&63,s[c++]=128|63&i);e=s}else{if("object"!==o)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var u=[],l=[];for(n=0;n<64;++n){var p=e[n]||0;u[n]=92^p,l[n]=54^p}Sha256.call(this,t,r),this.update(l),this.oKeyPad=u,this.inner=!0,this.sharedMemory=r}Sha256.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,o,i=0,s=e.length,a=this.blocks;i<s;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(o=this.start;i<s&&o<64;++i)a[o>>2]|=e[i]<<SHIFT[3&o++];else for(o=this.start;i<s&&o<64;++i)(n=e.charCodeAt(i))<128?a[o>>2]|=n<<SHIFT[3&o++]:n<2048?(a[o>>2]|=(192|n>>6)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]):n<55296||n>=57344?(a[o>>2]|=(224|n>>12)<<SHIFT[3&o++],a[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++i)),a[o>>2]|=(240|n>>18)<<SHIFT[3&o++],a[o>>2]|=(128|n>>12&63)<<SHIFT[3&o++],a[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=a[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,o,i,s,a,c,u=this.h0,l=this.h1,p=this.h2,h=this.h3,f=this.h4,d=this.h5,g=this.h6,y=this.h7,m=this.blocks;for(e=16;e<64;++e)t=((o=m[e-15])>>>7|o<<25)^(o>>>18|o<<14)^o>>>3,r=((o=m[e-2])>>>17|o<<15)^(o>>>19|o<<13)^o>>>10,m[e]=m[e-16]+t+m[e-7]+r<<0;for(c=l&p,e=0;e<64;e+=4)this.first?(this.is224?(i=300032,y=(o=m[0]-1413257819)-150054599<<0,h=o+24177077<<0):(i=704751109,y=(o=m[0]-210244248)-1521486534<<0,h=o+143694565<<0),this.first=!1):(t=(u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),n=(i=u&l)^u&p^c,y=h+(o=y+(r=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&d^~f&g)+K[e]+m[e])<<0,h=o+(t+n)<<0),t=(h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10),n=(s=h&u)^h&l^i,g=p+(o=g+(r=(y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(y&f^~y&d)+K[e+1]+m[e+1])<<0,t=((p=o+(t+n)<<0)>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),n=(a=p&h)^p&u^s,d=l+(o=d+(r=(g>>>6|g<<26)^(g>>>11|g<<21)^(g>>>25|g<<7))+(g&y^~g&f)+K[e+2]+m[e+2])<<0,t=((l=o+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(c=l&p)^l&h^a,f=u+(o=f+(r=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&g^~d&y)+K[e+3]+m[e+3])<<0,u=o+(t+n)<<0;this.h0=this.h0+u<<0,this.h1=this.h1+l<<0,this.h2=this.h2+p<<0,this.h3=this.h3+h<<0,this.h4=this.h4+f<<0,this.h5=this.h5+d<<0,this.h6=this.h6+g<<0,this.h7=this.h7+y<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,i=this.h5,s=this.h6,a=this.h7,c=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s];return this.is224||(c+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]),c},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,i=this.h5,s=this.h6,a=this.h7,c=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,o>>24&255,o>>16&255,o>>8&255,255&o,i>>24&255,i>>16&255,i>>8&255,255&i,s>>24&255,s>>16&255,s>>8&255,255&s];return this.is224||c.push(a>>24&255,a>>16&255,a>>8&255,255&a),c},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__nested_webpack_require_96669__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))})()},583:(e,t,r)=>{var n;!function(){"use strict";var o="input is invalid type",i="object"==typeof window,s=i?window:{};s.JS_SHA3_NO_WINDOW&&(i=!1);var a=!i&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var c=!s.JS_SHA3_NO_COMMON_JS&&e.exports,u=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,p="0123456789abcdef".split(""),h=[4,1024,262144,67108864],f=[0,8,16,24],d=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],g=[224,256,384,512],y=[128,256],m=["hex","buffer","arrayBuffer","array","digest"],b={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var w=function(e,t,r){return function(n){return new D(e,t,e).update(n)[r]()}},v=function(e,t,r){return function(n,o){return new D(e,t,o).update(n)[r]()}},A=function(e,t,r){return function(t,n,o,i){return T["cshake"+e].update(t,n,o,i)[r]()}},x=function(e,t,r){return function(t,n,o,i){return T["kmac"+e].update(t,n,o,i)[r]()}},S=function(e,t,r,n){for(var o=0;o<m.length;++o){var i=m[o];e[i]=t(r,n,i)}return e},_=function(e,t){var r=w(e,t,"hex");return r.create=function(){return new D(e,t,e)},r.update=function(e){return r.create().update(e)},S(r,w,e,t)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:g,createMethod:_},{name:"sha3",padding:[6,1536,393216,100663296],bits:g,createMethod:_},{name:"shake",padding:[31,7936,2031616,520093696],bits:y,createMethod:function(e,t){var r=v(e,t,"hex");return r.create=function(r){return new D(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},S(r,v,e,t)}},{name:"cshake",padding:h,bits:y,createMethod:function(e,t){var r=b[e],n=A(e,0,"hex");return n.create=function(n,o,i){return o||i?new D(e,t,n).bytepad([o,i],r):T["shake"+e].create(n)},n.update=function(e,t,r,o){return n.create(t,r,o).update(e)},S(n,A,e,t)}},{name:"kmac",padding:h,bits:y,createMethod:function(e,t){var r=b[e],n=x(e,0,"hex");return n.create=function(n,o,i){return new N(e,t,o).bytepad(["KMAC",i],r).bytepad([n],r)},n.update=function(e,t,r,o){return n.create(e,r,o).update(t)},S(n,x,e,t)}}],T={},B=[],k=0;k<E.length;++k)for(var U=E[k],I=U.bits,C=0;C<I.length;++C){var R=U.name+"_"+I[C];if(B.push(R),T[R]=U.createMethod(I[C],U.padding),"sha3"!==U.name){var O=U.name+I[C];B.push(O),T[O]=T[R]}}function D(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function N(e,t,r){D.call(this,e,t,r)}D.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(o);t=!0}for(var n,i,s=this.blocks,a=this.byteCount,c=e.length,u=this.blockCount,p=0,h=this.s;p<c;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<u+1;++n)s[n]=0;if(t)for(n=this.start;p<c&&n<a;++p)s[n>>2]|=e[p]<<f[3&n++];else for(n=this.start;p<c&&n<a;++p)(i=e.charCodeAt(p))<128?s[n>>2]|=i<<f[3&n++]:i<2048?(s[n>>2]|=(192|i>>6)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]):i<55296||i>=57344?(s[n>>2]|=(224|i>>12)<<f[3&n++],s[n>>2]|=(128|i>>6&63)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++p)),s[n>>2]|=(240|i>>18)<<f[3&n++],s[n>>2]|=(128|i>>12&63)<<f[3&n++],s[n>>2]|=(128|i>>6&63)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[u],n=0;n<u;++n)h[n]^=s[n];P(h),this.reset=!0}else this.start=n}return this},D.prototype.encode=function(e,t){var r=255&e,n=1,o=[r];for(r=255&(e>>=8);r>0;)o.unshift(r),r=255&(e>>=8),++n;return t?o.push(n):o.unshift(n),this.update(o),o.length},D.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(o);t=!0}var n=0,i=e.length;if(t)n=i;else for(var s=0;s<e.length;++s){var a=e.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(e),n},D.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var o=t-r%t,i=[];return i.length=o,this.update(i),this},D.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];P(n)}},D.prototype.toString=D.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,s=0,a="";s<n;){for(i=0;i<t&&s<n;++i,++s)e=r[i],a+=p[e>>4&15]+p[15&e]+p[e>>12&15]+p[e>>8&15]+p[e>>20&15]+p[e>>16&15]+p[e>>28&15]+p[e>>24&15];s%t==0&&(P(r),i=0)}return o&&(e=r[i],a+=p[e>>4&15]+p[15&e],o>1&&(a+=p[e>>12&15]+p[e>>8&15]),o>2&&(a+=p[e>>20&15]+p[e>>16&15])),a},D.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,s=0,a=this.outputBits>>3;e=o?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(e);s<n;){for(i=0;i<t&&s<n;++i,++s)c[s]=r[i];s%t==0&&P(r)}return o&&(c[i]=r[i],e=e.slice(0,a)),e},D.prototype.buffer=D.prototype.arrayBuffer,D.prototype.digest=D.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,o=this.outputBlocks,i=this.extraBytes,s=0,a=0,c=[];a<o;){for(s=0;s<r&&a<o;++s,++a)e=a<<2,t=n[s],c[e]=255&t,c[e+1]=t>>8&255,c[e+2]=t>>16&255,c[e+3]=t>>24&255;a%r==0&&P(n)}return i&&(e=a<<2,t=n[s],c[e]=255&t,i>1&&(c[e+1]=t>>8&255),i>2&&(c[e+2]=t>>16&255)),c},N.prototype=new D,N.prototype.finalize=function(){return this.encode(this.outputBits,!0),D.prototype.finalize.call(this)};var P=function(e){var t,r,n,o,i,s,a,c,u,l,p,h,f,g,y,m,b,w,v,A,x,S,_,E,T,B,k,U,I,C,R,O,D,N,P,L,j,z,F,M,H,G,q,K,$,V,W,X,Y,J,Z,Q,ee,te,re,ne,oe,ie,se,ae,ce,ue,le;for(n=0;n<48;n+=2)o=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],c=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],l=e[6]^e[16]^e[26]^e[36]^e[46],p=e[7]^e[17]^e[27]^e[37]^e[47],t=(h=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(f=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=o^(c<<1|u>>>31),r=i^(u<<1|c>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(l<<1|p>>>31),r=a^(p<<1|l>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=c^(h<<1|f>>>31),r=u^(f<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=l^(o<<1|i>>>31),r=p^(i<<1|o>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,g=e[0],y=e[1],V=e[11]<<4|e[10]>>>28,W=e[10]<<4|e[11]>>>28,U=e[20]<<3|e[21]>>>29,I=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,ce=e[30]<<9|e[31]>>>23,G=e[40]<<18|e[41]>>>14,q=e[41]<<18|e[40]>>>14,N=e[2]<<1|e[3]>>>31,P=e[3]<<1|e[2]>>>31,m=e[13]<<12|e[12]>>>20,b=e[12]<<12|e[13]>>>20,X=e[22]<<10|e[23]>>>22,Y=e[23]<<10|e[22]>>>22,C=e[33]<<13|e[32]>>>19,R=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,le=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,j=e[15]<<6|e[14]>>>26,w=e[25]<<11|e[24]>>>21,v=e[24]<<11|e[25]>>>21,J=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,O=e[45]<<29|e[44]>>>3,D=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,T=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,oe=e[16]<<23|e[17]>>>9,z=e[26]<<25|e[27]>>>7,F=e[27]<<25|e[26]>>>7,A=e[36]<<21|e[37]>>>11,x=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,K=e[8]<<27|e[9]>>>5,$=e[9]<<27|e[8]>>>5,B=e[18]<<20|e[19]>>>12,k=e[19]<<20|e[18]>>>12,ie=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,M=e[38]<<8|e[39]>>>24,H=e[39]<<8|e[38]>>>24,S=e[48]<<14|e[49]>>>18,_=e[49]<<14|e[48]>>>18,e[0]=g^~m&w,e[1]=y^~b&v,e[10]=E^~B&U,e[11]=T^~k&I,e[20]=N^~L&z,e[21]=P^~j&F,e[30]=K^~V&X,e[31]=$^~W&Y,e[40]=te^~ne&ie,e[41]=re^~oe&se,e[2]=m^~w&A,e[3]=b^~v&x,e[12]=B^~U&C,e[13]=k^~I&R,e[22]=L^~z&M,e[23]=j^~F&H,e[32]=V^~X&J,e[33]=W^~Y&Z,e[42]=ne^~ie&ae,e[43]=oe^~se&ce,e[4]=w^~A&S,e[5]=v^~x&_,e[14]=U^~C&O,e[15]=I^~R&D,e[24]=z^~M&G,e[25]=F^~H&q,e[34]=X^~J&Q,e[35]=Y^~Z&ee,e[44]=ie^~ae&ue,e[45]=se^~ce&le,e[6]=A^~S&g,e[7]=x^~_&y,e[16]=C^~O&E,e[17]=R^~D&T,e[26]=M^~G&N,e[27]=H^~q&P,e[36]=J^~Q&K,e[37]=Z^~ee&$,e[46]=ae^~ue&te,e[47]=ce^~le&re,e[8]=S^~g&m,e[9]=_^~y&b,e[18]=O^~E&B,e[19]=D^~T&k,e[28]=G^~N&L,e[29]=q^~P&j,e[38]=Q^~K&V,e[39]=ee^~$&W,e[48]=ue^~te&ne,e[49]=le^~re&oe,e[0]^=d[n],e[1]^=d[n+1]};if(c)e.exports=T;else{for(k=0;k<B.length;++k)s[B[k]]=T[B[k]];u&&(void 0===(n=function(){return T}.call(t,r,t,e))||(e.exports=n))}}()},9757:(e,t,r)=>{var n;!function(){"use strict";var t="input is invalid type",o="object"==typeof window,i=o?window:{};i.JS_SHA512_NO_WINDOW&&(o=!1);var s=!o&&"object"==typeof self;!i.JS_SHA512_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?i=r.g:s&&(i=self);var a=!i.JS_SHA512_NO_COMMON_JS&&e.exports,c=r.amdO,u=!i.JS_SHA512_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,l="0123456789abcdef".split(""),p=[-2147483648,8388608,32768,128],h=[24,16,8,0],f=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],d=["hex","array","digest","arrayBuffer"],g=[];!i.JS_SHA512_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!u||!i.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var y=function(e,t){return function(r){return new v(t,!0).update(r)[e]()}},m=function(e){var t=y("hex",e);t.create=function(){return new v(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<d.length;++r){var n=d[r];t[n]=y(n,e)}return t},b=function(e,t){return function(r,n){return new A(r,t,!0).update(n)[e]()}},w=function(e){var t=b("hex",e);t.create=function(t){return new A(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<d.length;++r){var n=d[r];t[n]=b(n,e)}return t};function v(e,t){t?(g[0]=g[1]=g[2]=g[3]=g[4]=g[5]=g[6]=g[7]=g[8]=g[9]=g[10]=g[11]=g[12]=g[13]=g[14]=g[15]=g[16]=g[17]=g[18]=g[19]=g[20]=g[21]=g[22]=g[23]=g[24]=g[25]=g[26]=g[27]=g[28]=g[29]=g[30]=g[31]=g[32]=0,this.blocks=g):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],384==e?(this.h0h=3418070365,this.h0l=3238371032,this.h1h=1654270250,this.h1l=914150663,this.h2h=2438529370,this.h2l=812702999,this.h3h=355462360,this.h3l=4144912697,this.h4h=1731405415,this.h4l=4290775857,this.h5h=2394180231,this.h5l=1750603025,this.h6h=3675008525,this.h6l=1694076839,this.h7h=1203062813,this.h7l=3204075428):256==e?(this.h0h=573645204,this.h0l=4230739756,this.h1h=2673172387,this.h1l=3360449730,this.h2h=596883563,this.h2l=1867755857,this.h3h=2520282905,this.h3l=1497426621,this.h4h=2519219938,this.h4l=2827943907,this.h5h=3193839141,this.h5l=1401305490,this.h6h=721525244,this.h6l=746961066,this.h7h=246885852,this.h7l=2177182882):224==e?(this.h0h=2352822216,this.h0l=424955298,this.h1h=1944164710,this.h1l=2312950998,this.h2h=502970286,this.h2l=855612546,this.h3h=1738396948,this.h3l=1479516111,this.h4h=258812777,this.h4l=2077511080,this.h5h=2011393907,this.h5l=79989058,this.h6h=1067287976,this.h6l=1780299464,this.h7h=286451373,this.h7l=2446758561):(this.h0h=1779033703,this.h0l=4089235720,this.h1h=3144134277,this.h1l=2227873595,this.h2h=1013904242,this.h2l=4271175723,this.h3h=2773480762,this.h3l=1595750129,this.h4h=1359893119,this.h4l=2917565137,this.h5h=2600822924,this.h5l=725511199,this.h6h=528734635,this.h6l=4215389547,this.h7h=1541459225,this.h7l=327033209),this.bits=e,this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1}function A(e,r,n){var o,i=typeof e;if("string"!==i){if("object"!==i)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);o=!0}var s=e.length;if(!o){for(var a,c=[],l=(s=e.length,0),p=0;p<s;++p)(a=e.charCodeAt(p))<128?c[l++]=a:a<2048?(c[l++]=192|a>>6,c[l++]=128|63&a):a<55296||a>=57344?(c[l++]=224|a>>12,c[l++]=128|a>>6&63,c[l++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++p)),c[l++]=240|a>>18,c[l++]=128|a>>12&63,c[l++]=128|a>>6&63,c[l++]=128|63&a);e=c}e.length>128&&(e=new v(r,!0).update(e).array());var h=[],f=[];for(p=0;p<128;++p){var d=e[p]||0;h[p]=92^d,f[p]=54^d}v.call(this,r,n),this.update(f),this.oKeyPad=h,this.inner=!0,this.sharedMemory=n}v.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var r,n=typeof e;if("string"!==n){if("object"!==n)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);r=!0}for(var o,i,s=0,a=e.length,c=this.blocks;s<a;){if(this.hashed&&(this.hashed=!1,c[0]=this.block,c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=c[16]=c[17]=c[18]=c[19]=c[20]=c[21]=c[22]=c[23]=c[24]=c[25]=c[26]=c[27]=c[28]=c[29]=c[30]=c[31]=c[32]=0),r)for(i=this.start;s<a&&i<128;++s)c[i>>2]|=e[s]<<h[3&i++];else for(i=this.start;s<a&&i<128;++s)(o=e.charCodeAt(s))<128?c[i>>2]|=o<<h[3&i++]:o<2048?(c[i>>2]|=(192|o>>6)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]):o<55296||o>=57344?(c[i>>2]|=(224|o>>12)<<h[3&i++],c[i>>2]|=(128|o>>6&63)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++s)),c[i>>2]|=(240|o>>18)<<h[3&i++],c[i>>2]|=(128|o>>12&63)<<h[3&i++],c[i>>2]|=(128|o>>6&63)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=128?(this.block=c[32],this.start=i-128,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this},v.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[32]=this.block,e[t>>2]|=p[3&t],this.block=e[32],t>=112&&(this.hashed||this.hash(),e[0]=this.block,e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=e[16]=e[17]=e[18]=e[19]=e[20]=e[21]=e[22]=e[23]=e[24]=e[25]=e[26]=e[27]=e[28]=e[29]=e[30]=e[31]=e[32]=0),e[30]=this.hBytes<<3|this.bytes>>>29,e[31]=this.bytes<<3,this.hash()}},v.prototype.hash=function(){var e,t,r,n,o,i,s,a,c,u,l,p,h,d,g,y,m,b,w,v,A,x,S,_,E,T=this.h0h,B=this.h0l,k=this.h1h,U=this.h1l,I=this.h2h,C=this.h2l,R=this.h3h,O=this.h3l,D=this.h4h,N=this.h4l,P=this.h5h,L=this.h5l,j=this.h6h,z=this.h6l,F=this.h7h,M=this.h7l,H=this.blocks;for(e=32;e<160;e+=2)t=((v=H[e-30])>>>1|(A=H[e-29])<<31)^(v>>>8|A<<24)^v>>>7,r=(A>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25),n=((v=H[e-4])>>>19|(A=H[e-3])<<13)^(A>>>29|v<<3)^v>>>6,o=(A>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26),v=H[e-32],A=H[e-31],c=((x=H[e-14])>>>16)+(v>>>16)+(t>>>16)+(n>>>16)+((a=(65535&x)+(65535&v)+(65535&t)+(65535&n)+((s=((S=H[e-13])>>>16)+(A>>>16)+(r>>>16)+(o>>>16)+((i=(65535&S)+(65535&A)+(65535&r)+(65535&o))>>>16))>>>16))>>>16),H[e]=c<<16|65535&a,H[e+1]=s<<16|65535&i;var G=T,q=B,K=k,$=U,V=I,W=C,X=R,Y=O,J=D,Z=N,Q=P,ee=L,te=j,re=z,ne=F,oe=M;for(y=K&V,m=$&W,e=0;e<160;e+=8)t=(G>>>28|q<<4)^(q>>>2|G<<30)^(q>>>7|G<<25),r=(q>>>28|G<<4)^(G>>>2|q<<30)^(G>>>7|q<<25),n=(J>>>14|Z<<18)^(J>>>18|Z<<14)^(Z>>>9|J<<23),o=(Z>>>14|J<<18)^(Z>>>18|J<<14)^(J>>>9|Z<<23),b=(u=G&K)^G&V^y,w=(l=q&$)^q&W^m,_=J&Q^~J&te,E=Z&ee^~Z&re,v=H[e],A=H[e+1],v=(c=((x=f[e])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(ne>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&ne)+((s=((S=f[e+1])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(oe>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&oe))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,ne=(c=(X>>>16)+(v>>>16)+((a=(65535&X)+(65535&v)+((s=(Y>>>16)+(A>>>16)+((i=(65535&Y)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,oe=s<<16|65535&i,t=((X=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(Y=s<<16|65535&i)<<4)^(Y>>>2|X<<30)^(Y>>>7|X<<25),r=(Y>>>28|X<<4)^(X>>>2|Y<<30)^(X>>>7|Y<<25),n=(ne>>>14|oe<<18)^(ne>>>18|oe<<14)^(oe>>>9|ne<<23),o=(oe>>>14|ne<<18)^(oe>>>18|ne<<14)^(ne>>>9|oe<<23),b=(p=X&G)^X&K^u,w=(h=Y&q)^Y&$^l,_=ne&J^~ne&Q,E=oe&Z^~oe&ee,v=H[e+2],A=H[e+3],v=(c=((x=f[e+2])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(te>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&te)+((s=((S=f[e+3])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(re>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&re))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,te=(c=(V>>>16)+(v>>>16)+((a=(65535&V)+(65535&v)+((s=(W>>>16)+(A>>>16)+((i=(65535&W)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,re=s<<16|65535&i,t=((V=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(W=s<<16|65535&i)<<4)^(W>>>2|V<<30)^(W>>>7|V<<25),r=(W>>>28|V<<4)^(V>>>2|W<<30)^(V>>>7|W<<25),n=(te>>>14|re<<18)^(te>>>18|re<<14)^(re>>>9|te<<23),o=(re>>>14|te<<18)^(re>>>18|te<<14)^(te>>>9|re<<23),b=(d=V&X)^V&G^p,w=(g=W&Y)^W&q^h,_=te&ne^~te&J,E=re&oe^~re&Z,v=H[e+4],A=H[e+5],v=(c=((x=f[e+4])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(Q>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&Q)+((s=((S=f[e+5])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(ee>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&ee))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,Q=(c=(K>>>16)+(v>>>16)+((a=(65535&K)+(65535&v)+((s=($>>>16)+(A>>>16)+((i=(65535&$)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ee=s<<16|65535&i,t=((K=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|($=s<<16|65535&i)<<4)^($>>>2|K<<30)^($>>>7|K<<25),r=($>>>28|K<<4)^(K>>>2|$<<30)^(K>>>7|$<<25),n=(Q>>>14|ee<<18)^(Q>>>18|ee<<14)^(ee>>>9|Q<<23),o=(ee>>>14|Q<<18)^(ee>>>18|Q<<14)^(Q>>>9|ee<<23),b=(y=K&V)^K&X^d,w=(m=$&W)^$&Y^g,_=Q&te^~Q&ne,E=ee&re^~ee&oe,v=H[e+6],A=H[e+7],v=(c=((x=f[e+6])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(J>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&J)+((s=((S=f[e+7])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(Z>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&Z))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,J=(c=(G>>>16)+(v>>>16)+((a=(65535&G)+(65535&v)+((s=(q>>>16)+(A>>>16)+((i=(65535&q)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,Z=s<<16|65535&i,G=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,q=s<<16|65535&i;c=(T>>>16)+(G>>>16)+((a=(65535&T)+(65535&G)+((s=(B>>>16)+(q>>>16)+((i=(65535&B)+(65535&q))>>>16))>>>16))>>>16),this.h0h=c<<16|65535&a,this.h0l=s<<16|65535&i,c=(k>>>16)+(K>>>16)+((a=(65535&k)+(65535&K)+((s=(U>>>16)+($>>>16)+((i=(65535&U)+(65535&$))>>>16))>>>16))>>>16),this.h1h=c<<16|65535&a,this.h1l=s<<16|65535&i,c=(I>>>16)+(V>>>16)+((a=(65535&I)+(65535&V)+((s=(C>>>16)+(W>>>16)+((i=(65535&C)+(65535&W))>>>16))>>>16))>>>16),this.h2h=c<<16|65535&a,this.h2l=s<<16|65535&i,c=(R>>>16)+(X>>>16)+((a=(65535&R)+(65535&X)+((s=(O>>>16)+(Y>>>16)+((i=(65535&O)+(65535&Y))>>>16))>>>16))>>>16),this.h3h=c<<16|65535&a,this.h3l=s<<16|65535&i,c=(D>>>16)+(J>>>16)+((a=(65535&D)+(65535&J)+((s=(N>>>16)+(Z>>>16)+((i=(65535&N)+(65535&Z))>>>16))>>>16))>>>16),this.h4h=c<<16|65535&a,this.h4l=s<<16|65535&i,c=(P>>>16)+(Q>>>16)+((a=(65535&P)+(65535&Q)+((s=(L>>>16)+(ee>>>16)+((i=(65535&L)+(65535&ee))>>>16))>>>16))>>>16),this.h5h=c<<16|65535&a,this.h5l=s<<16|65535&i,c=(j>>>16)+(te>>>16)+((a=(65535&j)+(65535&te)+((s=(z>>>16)+(re>>>16)+((i=(65535&z)+(65535&re))>>>16))>>>16))>>>16),this.h6h=c<<16|65535&a,this.h6l=s<<16|65535&i,c=(F>>>16)+(ne>>>16)+((a=(65535&F)+(65535&ne)+((s=(M>>>16)+(oe>>>16)+((i=(65535&M)+(65535&oe))>>>16))>>>16))>>>16),this.h7h=c<<16|65535&a,this.h7l=s<<16|65535&i},v.prototype.hex=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,o=this.h2h,i=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,p=this.h5h,h=this.h5l,f=this.h6h,d=this.h6l,g=this.h7h,y=this.h7l,m=this.bits,b=l[e>>28&15]+l[e>>24&15]+l[e>>20&15]+l[e>>16&15]+l[e>>12&15]+l[e>>8&15]+l[e>>4&15]+l[15&e]+l[t>>28&15]+l[t>>24&15]+l[t>>20&15]+l[t>>16&15]+l[t>>12&15]+l[t>>8&15]+l[t>>4&15]+l[15&t]+l[r>>28&15]+l[r>>24&15]+l[r>>20&15]+l[r>>16&15]+l[r>>12&15]+l[r>>8&15]+l[r>>4&15]+l[15&r]+l[n>>28&15]+l[n>>24&15]+l[n>>20&15]+l[n>>16&15]+l[n>>12&15]+l[n>>8&15]+l[n>>4&15]+l[15&n]+l[o>>28&15]+l[o>>24&15]+l[o>>20&15]+l[o>>16&15]+l[o>>12&15]+l[o>>8&15]+l[o>>4&15]+l[15&o]+l[i>>28&15]+l[i>>24&15]+l[i>>20&15]+l[i>>16&15]+l[i>>12&15]+l[i>>8&15]+l[i>>4&15]+l[15&i]+l[s>>28&15]+l[s>>24&15]+l[s>>20&15]+l[s>>16&15]+l[s>>12&15]+l[s>>8&15]+l[s>>4&15]+l[15&s];return m>=256&&(b+=l[a>>28&15]+l[a>>24&15]+l[a>>20&15]+l[a>>16&15]+l[a>>12&15]+l[a>>8&15]+l[a>>4&15]+l[15&a]),m>=384&&(b+=l[c>>28&15]+l[c>>24&15]+l[c>>20&15]+l[c>>16&15]+l[c>>12&15]+l[c>>8&15]+l[c>>4&15]+l[15&c]+l[u>>28&15]+l[u>>24&15]+l[u>>20&15]+l[u>>16&15]+l[u>>12&15]+l[u>>8&15]+l[u>>4&15]+l[15&u]+l[p>>28&15]+l[p>>24&15]+l[p>>20&15]+l[p>>16&15]+l[p>>12&15]+l[p>>8&15]+l[p>>4&15]+l[15&p]+l[h>>28&15]+l[h>>24&15]+l[h>>20&15]+l[h>>16&15]+l[h>>12&15]+l[h>>8&15]+l[h>>4&15]+l[15&h]),512==m&&(b+=l[f>>28&15]+l[f>>24&15]+l[f>>20&15]+l[f>>16&15]+l[f>>12&15]+l[f>>8&15]+l[f>>4&15]+l[15&f]+l[d>>28&15]+l[d>>24&15]+l[d>>20&15]+l[d>>16&15]+l[d>>12&15]+l[d>>8&15]+l[d>>4&15]+l[15&d]+l[g>>28&15]+l[g>>24&15]+l[g>>20&15]+l[g>>16&15]+l[g>>12&15]+l[g>>8&15]+l[g>>4&15]+l[15&g]+l[y>>28&15]+l[y>>24&15]+l[y>>20&15]+l[y>>16&15]+l[y>>12&15]+l[y>>8&15]+l[y>>4&15]+l[15&y]),b},v.prototype.toString=v.prototype.hex,v.prototype.digest=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,o=this.h2h,i=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,l=this.h5h,p=this.h5l,h=this.h6h,f=this.h6l,d=this.h7h,g=this.h7l,y=this.bits,m=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,o>>24&255,o>>16&255,o>>8&255,255&o,i>>24&255,i>>16&255,i>>8&255,255&i,s>>24&255,s>>16&255,s>>8&255,255&s];return y>=256&&m.push(a>>24&255,a>>16&255,a>>8&255,255&a),y>=384&&m.push(c>>24&255,c>>16&255,c>>8&255,255&c,u>>24&255,u>>16&255,u>>8&255,255&u,l>>24&255,l>>16&255,l>>8&255,255&l,p>>24&255,p>>16&255,p>>8&255,255&p),512==y&&m.push(h>>24&255,h>>16&255,h>>8&255,255&h,f>>24&255,f>>16&255,f>>8&255,255&f,d>>24&255,d>>16&255,d>>8&255,255&d,g>>24&255,g>>16&255,g>>8&255,255&g),m},v.prototype.array=v.prototype.digest,v.prototype.arrayBuffer=function(){this.finalize();var e=this.bits,t=new ArrayBuffer(e/8),r=new DataView(t);return r.setUint32(0,this.h0h),r.setUint32(4,this.h0l),r.setUint32(8,this.h1h),r.setUint32(12,this.h1l),r.setUint32(16,this.h2h),r.setUint32(20,this.h2l),r.setUint32(24,this.h3h),e>=256&&r.setUint32(28,this.h3l),e>=384&&(r.setUint32(32,this.h4h),r.setUint32(36,this.h4l),r.setUint32(40,this.h5h),r.setUint32(44,this.h5l)),512==e&&(r.setUint32(48,this.h6h),r.setUint32(52,this.h6l),r.setUint32(56,this.h7h),r.setUint32(60,this.h7l)),t},v.prototype.clone=function(){var e=new v(this.bits,!1);return this.copyTo(e),e},v.prototype.copyTo=function(e){var t=0,r=["h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","start","bytes","hBytes","finalized","hashed","lastByteIndex"];for(t=0;t<r.length;++t)e[r[t]]=this[r[t]];for(t=0;t<this.blocks.length;++t)e.blocks[t]=this.blocks[t]},A.prototype=new v,A.prototype.finalize=function(){if(v.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();v.call(this,this.bits,this.sharedMemory),this.update(this.oKeyPad),this.update(e),v.prototype.finalize.call(this)}},A.prototype.clone=function(){var e=new A([],this.bits,!1);this.copyTo(e),e.inner=this.inner;for(var t=0;t<this.oKeyPad.length;++t)e.oKeyPad[t]=this.oKeyPad[t];return e};var x=m(512);x.sha512=x,x.sha384=m(384),x.sha512_256=m(256),x.sha512_224=m(224),x.sha512.hmac=w(512),x.sha384.hmac=w(384),x.sha512_256.hmac=w(256),x.sha512_224.hmac=w(224),a?e.exports=x:(i.sha512=x.sha512,i.sha384=x.sha384,i.sha512_256=x.sha512_256,i.sha512_224=x.sha512_224,c&&(void 0===(n=function(){return x}.call(x,r,x,e))||(e.exports=n)))}()},4360:(e,t,r)=>{var n=r(592).stringify,o=r(9385);e.exports=function(e){return{parse:o(e),stringify:n}},e.exports.parse=o(),e.exports.stringify=n},9385:(e,t,r)=>{var n=null;const o=/(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/,i=/(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;e.exports=function(e){"use strict";var t={strict:!1,storeAsString:!1,alwaysParseAsBig:!1,useNativeBigInt:!1,protoAction:"error",constructorAction:"error"};if(null!=e){if(!0===e.strict&&(t.strict=!0),!0===e.storeAsString&&(t.storeAsString=!0),t.alwaysParseAsBig=!0===e.alwaysParseAsBig&&e.alwaysParseAsBig,t.useNativeBigInt=!0===e.useNativeBigInt&&e.useNativeBigInt,void 0!==e.constructorAction){if("error"!==e.constructorAction&&"ignore"!==e.constructorAction&&"preserve"!==e.constructorAction)throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e.constructorAction}`);t.constructorAction=e.constructorAction}if(void 0!==e.protoAction){if("error"!==e.protoAction&&"ignore"!==e.protoAction&&"preserve"!==e.protoAction)throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e.protoAction}`);t.protoAction=e.protoAction}}var s,a,c,u,l={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},p=function(e){throw{name:"SyntaxError",message:e,at:s,text:c}},h=function(e){return e&&e!==a&&p("Expected '"+e+"' instead of '"+a+"'"),a=c.charAt(s),s+=1,a},f=function(){var e,o="";for("-"===a&&(o="-",h("-"));a>="0"&&a<="9";)o+=a,h();if("."===a)for(o+=".";h()&&a>="0"&&a<="9";)o+=a;if("e"===a||"E"===a)for(o+=a,h(),"-"!==a&&"+"!==a||(o+=a,h());a>="0"&&a<="9";)o+=a,h();if(e=+o,isFinite(e))return null==n&&(n=r(5117)),o.length>15?t.storeAsString?o:t.useNativeBigInt?BigInt(o):new n(o):t.alwaysParseAsBig?t.useNativeBigInt?BigInt(e):new n(e):e;p("Bad number")},d=function(){var e,t,r,n="";if('"'===a)for(var o=s;h();){if('"'===a)return s-1>o&&(n+=c.substring(o,s-1)),h(),n;if("\\"===a){if(s-1>o&&(n+=c.substring(o,s-1)),h(),"u"===a){for(r=0,t=0;t<4&&(e=parseInt(h(),16),isFinite(e));t+=1)r=16*r+e;n+=String.fromCharCode(r)}else{if("string"!=typeof l[a])break;n+=l[a]}o=s}}p("Bad string")},g=function(){for(;a&&a<=" ";)h()};return u=function(){switch(g(),a){case"{":return function(){var e,r=Object.create(null);if("{"===a){if(h("{"),g(),"}"===a)return h("}"),r;for(;a;){if(e=d(),g(),h(":"),!0===t.strict&&Object.hasOwnProperty.call(r,e)&&p('Duplicate key "'+e+'"'),!0===o.test(e)?"error"===t.protoAction?p("Object contains forbidden prototype property"):"ignore"===t.protoAction?u():r[e]=u():!0===i.test(e)?"error"===t.constructorAction?p("Object contains forbidden constructor property"):"ignore"===t.constructorAction?u():r[e]=u():r[e]=u(),g(),"}"===a)return h("}"),r;h(","),g()}}p("Bad object")}();case"[":return function(){var e=[];if("["===a){if(h("["),g(),"]"===a)return h("]"),e;for(;a;){if(e.push(u()),g(),"]"===a)return h("]"),e;h(","),g()}}p("Bad array")}();case'"':return d();case"-":return f();default:return a>="0"&&a<="9"?f():function(){switch(a){case"t":return h("t"),h("r"),h("u"),h("e"),!0;case"f":return h("f"),h("a"),h("l"),h("s"),h("e"),!1;case"n":return h("n"),h("u"),h("l"),h("l"),null}p("Unexpected '"+a+"'")}()}},function(e,t){var r;return c=e+"",s=0,a=" ",r=u(),g(),a&&p("Syntax error"),"function"==typeof t?function e(r,n){var o,i=r[n];return i&&"object"==typeof i&&Object.keys(i).forEach((function(t){void 0!==(o=e(i,t))?i[t]=o:delete i[t]})),t.call(r,n,i)}({"":r},""):r}}},592:(e,t,r)=>{var n=r(5117),o=e.exports;!function(){"use strict";var e,t,r,i=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function a(e){return i.lastIndex=0,i.test(e)?'"'+e.replace(i,(function(e){var t=s[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function c(o,i){var s,u,l,p,h,f=e,d=i[o],g=null!=d&&(d instanceof n||n.isBigNumber(d));switch(d&&"object"==typeof d&&"function"==typeof d.toJSON&&(d=d.toJSON(o)),"function"==typeof r&&(d=r.call(i,o,d)),typeof d){case"string":return g?d:a(d);case"number":return isFinite(d)?String(d):"null";case"boolean":case"null":case"bigint":return String(d);case"object":if(!d)return"null";if(e+=t,h=[],"[object Array]"===Object.prototype.toString.apply(d)){for(p=d.length,s=0;s<p;s+=1)h[s]=c(s,d)||"null";return l=0===h.length?"[]":e?"[\n"+e+h.join(",\n"+e)+"\n"+f+"]":"["+h.join(",")+"]",e=f,l}if(r&&"object"==typeof r)for(p=r.length,s=0;s<p;s+=1)"string"==typeof r[s]&&(l=c(u=r[s],d))&&h.push(a(u)+(e?": ":":")+l);else Object.keys(d).forEach((function(t){var r=c(t,d);r&&h.push(a(t)+(e?": ":":")+r)}));return l=0===h.length?"{}":e?"{\n"+e+h.join(",\n"+e)+"\n"+f+"}":"{"+h.join(",")+"}",e=f,l}}"function"!=typeof o.stringify&&(o.stringify=function(n,o,i){var s;if(e="",t="","number"==typeof i)for(s=0;s<i;s+=1)t+=" ";else"string"==typeof i&&(t=i);if(r=o,o&&"function"!=typeof o&&("object"!=typeof o||"number"!=typeof o.length))throw new Error("JSON.stringify");return c("",{"":n})})}()},3126:(e,t,r)=>{var n="function"==typeof Map&&Map.prototype,o=Object.getOwnPropertyDescriptor&&n?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,i=n&&o&&"function"==typeof o.get?o.get:null,s=n&&Map.prototype.forEach,a="function"==typeof Set&&Set.prototype,c=Object.getOwnPropertyDescriptor&&a?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,u=a&&c&&"function"==typeof c.get?c.get:null,l=a&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,h="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,f="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,d=Boolean.prototype.valueOf,g=Object.prototype.toString,y=Function.prototype.toString,m=String.prototype.match,b="function"==typeof BigInt?BigInt.prototype.valueOf:null,w=Object.getOwnPropertySymbols,v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,A="function"==typeof Symbol&&"object"==typeof Symbol.iterator,x=Object.prototype.propertyIsEnumerable,S=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null),_=r(4654).custom,E=_&&I(_)?_:null,T="function"==typeof Symbol&&void 0!==Symbol.toStringTag?Symbol.toStringTag:null;function B(e,t,r){var n="double"===(r.quoteStyle||t)?'"':"'";return n+e+n}function k(e){return String(e).replace(/"/g,"&quot;")}function U(e){return!("[object Array]"!==O(e)||T&&"object"==typeof e&&T in e)}function I(e){if(A)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!v)return!1;try{return v.call(e),!0}catch(e){}return!1}e.exports=function e(t,r,n,o){var a=r||{};if(R(a,"quoteStyle")&&"single"!==a.quoteStyle&&"double"!==a.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(R(a,"maxStringLength")&&("number"==typeof a.maxStringLength?a.maxStringLength<0&&a.maxStringLength!==1/0:null!==a.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var c=!R(a,"customInspect")||a.customInspect;if("boolean"!=typeof c)throw new TypeError('option "customInspect", if provided, must be `true` or `false`');if(R(a,"indent")&&null!==a.indent&&"\t"!==a.indent&&!(parseInt(a.indent,10)===a.indent&&a.indent>0))throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return N(t,a);if("number"==typeof t)return 0===t?1/0/t>0?"0":"-0":String(t);if("bigint"==typeof t)return String(t)+"n";var g=void 0===a.depth?5:a.depth;if(void 0===n&&(n=0),n>=g&&g>0&&"object"==typeof t)return U(t)?"[Array]":"[Object]";var w,x=function(e,t){var r;if("\t"===e.indent)r="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;r=Array(e.indent+1).join(" ")}return{base:r,prev:Array(t+1).join(r)}}(a,n);if(void 0===o)o=[];else if(D(o,t)>=0)return"[Circular]";function _(t,r,i){if(r&&(o=o.slice()).push(r),i){var s={depth:a.depth};return R(a,"quoteStyle")&&(s.quoteStyle=a.quoteStyle),e(t,s,n+1,o)}return e(t,a,n+1,o)}if("function"==typeof t){var C=function(e){if(e.name)return e.name;var t=m.call(y.call(e),/^function\s*([\w$]+)/);return t?t[1]:null}(t),P=M(t,_);return"[Function"+(C?": "+C:" (anonymous)")+"]"+(P.length>0?" { "+P.join(", ")+" }":"")}if(I(t)){var H=A?String(t).replace(/^(Symbol\(.*\))_[^)]*$/,"$1"):v.call(t);return"object"!=typeof t||A?H:L(H)}if((w=t)&&"object"==typeof w&&("undefined"!=typeof HTMLElement&&w instanceof HTMLElement||"string"==typeof w.nodeName&&"function"==typeof w.getAttribute)){for(var G="<"+String(t.nodeName).toLowerCase(),q=t.attributes||[],K=0;K<q.length;K++)G+=" "+q[K].name+"="+B(k(q[K].value),"double",a);return G+=">",t.childNodes&&t.childNodes.length&&(G+="..."),G+"</"+String(t.nodeName).toLowerCase()+">"}if(U(t)){if(0===t.length)return"[]";var $=M(t,_);return x&&!function(e){for(var t=0;t<e.length;t++)if(D(e[t],"\n")>=0)return!1;return!0}($)?"["+F($,x)+"]":"[ "+$.join(", ")+" ]"}if(function(e){return!("[object Error]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)){var V=M(t,_);return 0===V.length?"["+String(t)+"]":"{ ["+String(t)+"] "+V.join(", ")+" }"}if("object"==typeof t&&c){if(E&&"function"==typeof t[E])return t[E]();if("function"==typeof t.inspect)return t.inspect()}if(function(e){if(!i||!e||"object"!=typeof e)return!1;try{i.call(e);try{u.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var W=[];return s.call(t,(function(e,r){W.push(_(r,t,!0)+" => "+_(e,t))})),z("Map",i.call(t),W,x)}if(function(e){if(!u||!e||"object"!=typeof e)return!1;try{u.call(e);try{i.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var X=[];return l.call(t,(function(e){X.push(_(e,t))})),z("Set",u.call(t),X,x)}if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{p.call(e,p);try{h.call(e,h)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return j("WeakMap");if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{h.call(e,h);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return j("WeakSet");if(function(e){if(!f||!e||"object"!=typeof e)return!1;try{return f.call(e),!0}catch(e){}return!1}(t))return j("WeakRef");if(function(e){return!("[object Number]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(_(Number(t)));if(function(e){if(!e||"object"!=typeof e||!b)return!1;try{return b.call(e),!0}catch(e){}return!1}(t))return L(_(b.call(t)));if(function(e){return!("[object Boolean]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(d.call(t));if(function(e){return!("[object String]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(_(String(t)));if(!function(e){return!("[object Date]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)&&!function(e){return!("[object RegExp]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)){var Y=M(t,_),J=S?S(t)===Object.prototype:t instanceof Object||t.constructor===Object,Z=t instanceof Object?"":"null prototype",Q=!J&&T&&Object(t)===t&&T in t?O(t).slice(8,-1):Z?"Object":"",ee=(J||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(Q||Z?"["+[].concat(Q||[],Z||[]).join(": ")+"] ":"");return 0===Y.length?ee+"{}":x?ee+"{"+F(Y,x)+"}":ee+"{ "+Y.join(", ")+" }"}return String(t)};var C=Object.prototype.hasOwnProperty||function(e){return e in this};function R(e,t){return C.call(e,t)}function O(e){return g.call(e)}function D(e,t){if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function N(e,t){if(e.length>t.maxStringLength){var r=e.length-t.maxStringLength,n="... "+r+" more character"+(r>1?"s":"");return N(e.slice(0,t.maxStringLength),t)+n}return B(e.replace(/(['\\])/g,"\\$1").replace(/[\x00-\x1f]/g,P),"single",t)}function P(e){var t=e.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return r?"\\"+r:"\\x"+(t<16?"0":"")+t.toString(16).toUpperCase()}function L(e){return"Object("+e+")"}function j(e){return e+" { ? }"}function z(e,t,r,n){return e+" ("+t+") {"+(n?F(r,n):r.join(", "))+"}"}function F(e,t){if(0===e.length)return"";var r="\n"+t.prev+t.base;return r+e.join(","+r)+"\n"+t.prev}function M(e,t){var r=U(e),n=[];if(r){n.length=e.length;for(var o=0;o<e.length;o++)n[o]=R(e,o)?t(e[o],e):""}var i,s="function"==typeof w?w(e):[];if(A){i={};for(var a=0;a<s.length;a++)i["$"+s[a]]=s[a]}for(var c in e)R(e,c)&&(r&&String(Number(c))===c&&c<e.length||A&&i["$"+c]instanceof Symbol||(/[^\w$]/.test(c)?n.push(t(c,e)+": "+t(e[c],e)):n.push(c+": "+t(e[c],e))));if("function"==typeof w)for(var u=0;u<s.length;u++)x.call(e,s[u])&&n.push("["+t(s[u])+"]: "+t(e[s[u]],e));return n}},3680:(e,t,r)=>{"use strict";var n=r(1801),o=r(7615),i=r(3126),s=n("%TypeError%"),a=n("%WeakMap%",!0),c=n("%Map%",!0),u=o("WeakMap.prototype.get",!0),l=o("WeakMap.prototype.set",!0),p=o("WeakMap.prototype.has",!0),h=o("Map.prototype.get",!0),f=o("Map.prototype.set",!0),d=o("Map.prototype.has",!0),g=function(e,t){for(var r,n=e;null!==(r=n.next);n=r)if(r.key===t)return n.next=r.next,r.next=e.next,e.next=r,r};e.exports=function(){var e,t,r,n={assert:function(e){if(!n.has(e))throw new s("Side channel does not contain "+i(e))},get:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return u(e,n)}else if(c){if(t)return h(t,n)}else if(r)return function(e,t){var r=g(e,t);return r&&r.value}(r,n)},has:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return p(e,n)}else if(c){if(t)return d(t,n)}else if(r)return function(e,t){return!!g(e,t)}(r,n);return!1},set:function(n,o){a&&n&&("object"==typeof n||"function"==typeof n)?(e||(e=new a),l(e,n,o)):c?(t||(t=new c),f(t,n,o)):(r||(r={key:{},next:null}),function(e,t,r){var n=g(e,t);n?n.value=r:e.next={key:t,next:e.next,value:r}}(r,n,o))}};return n}},2858:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function r(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert","disableTLSCerts"].forEach((function(e){r.prototype[e]=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return this._defaults.push({fn:e,args:r}),this}})),r.prototype._setDefaults=function(e){this._defaults.forEach((function(r){var n;e[r.fn].apply(e,function(e){if(Array.isArray(e))return t(e)}(n=r.args)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}))},e.exports=r},5391:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o;"undefined"!=typeof window?o=window:"undefined"==typeof self?(console.warn("Using browser-only version of superagent in non-browser environment"),o=void 0):o=self;var i=r(1069),s=r(5799),a=r(3065),c=r(4287),u=r(1960),l=r(969),p=r(2858);function h(){}e.exports=function(e,r){return"function"==typeof r?new t.Request("GET",e).end(r):1===arguments.length?new t.Request("GET",e):new t.Request(e,r)};var f=t=e.exports;t.Request=v,f.getXHR=function(){if(o.XMLHttpRequest&&(!o.location||"file:"!==o.location.protocol||!o.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw new Error("Browser-only version of superagent could not find XHR")};var d="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function g(e){if(!u(e))return e;var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&y(t,r,e[r]);return t.join("&")}function y(e,t,r){if(void 0!==r)if(null!==r)if(Array.isArray(r))r.forEach((function(r){y(e,t,r)}));else if(u(r))for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&y(e,"".concat(t,"[").concat(n,"]"),r[n]);else e.push(encodeURI(t)+"="+encodeURIComponent(r));else e.push(encodeURI(t))}function m(e){for(var t,r,n={},o=e.split("&"),i=0,s=o.length;i<s;++i)-1===(r=(t=o[i]).indexOf("="))?n[decodeURIComponent(t)]="":n[decodeURIComponent(t.slice(0,r))]=decodeURIComponent(t.slice(r+1));return n}function b(e){return/[/+]json($|[^-\w])/i.test(e)}function w(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!==this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.headers=function(e){for(var t,r,n,o,i=e.split(/\r?\n/),s={},a=0,c=i.length;a<c;++a)-1!==(t=(r=i[a]).indexOf(":"))&&(n=r.slice(0,t).toLowerCase(),o=d(r.slice(t+1)),s[n]=o);return s}(this.xhr.getAllResponseHeaders()),this.header=this.headers,this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"===this.req.method?null:this._parseBody(this.text?this.text:this.xhr.response)}function v(e,t){var r=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",(function(){var e,t=null,n=null;try{n=new w(r)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,r.xhr?(t.rawResponse=void 0===r.xhr.responseType?r.xhr.responseText:r.xhr.response,t.status=r.xhr.status?r.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),r.callback(t)}r.emit("response",n);try{r._isResponseOK(n)||(e=new Error(n.statusText||n.text||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=n,e.status=n.status,r.callback(e,n)):r.callback(null,n)}))}function A(e,t,r){var n=f("DELETE",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}f.serializeObject=g,f.parseString=m,f.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},f.serialize={"application/x-www-form-urlencoded":a.stringify,"application/json":s},f.parse={"application/x-www-form-urlencoded":m,"application/json":JSON.parse},l(w.prototype),w.prototype._parseBody=function(e){var t=f.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&b(this.type)&&(t=f.parse["application/json"]),t&&e&&(e.length>0||e instanceof Object)?t(e):null)},w.prototype.toError=function(){var e=this.req,t=e.method,r=e.url,n="cannot ".concat(t," ").concat(r," (").concat(this.status,")"),o=new Error(n);return o.status=this.status,o.method=t,o.url=r,o},f.Response=w,i(v.prototype),c(v.prototype),v.prototype.type=function(e){return this.set("Content-Type",f.types[e]||e),this},v.prototype.accept=function(e){return this.set("Accept",f.types[e]||e),this},v.prototype.auth=function(e,t,r){1===arguments.length&&(t=""),"object"===n(t)&&null!==t&&(r=t,t=""),r||(r={type:"function"==typeof btoa?"basic":"auto"});var o=function(e){if("function"==typeof btoa)return btoa(e);throw new Error("Cannot use basic auth, btoa is not a function")};return this._auth(e,t,r,o)},v.prototype.query=function(e){return"string"!=typeof e&&(e=g(e)),e&&this._query.push(e),this},v.prototype.attach=function(e,t,r){if(t){if(this._data)throw new Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,r||t.name)}return this},v.prototype._getFormData=function(){return this._formData||(this._formData=new o.FormData),this._formData},v.prototype.callback=function(e,t){if(this._shouldRetry(e,t))return this._retry();var r=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),r(e,t)},v.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},v.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},v.prototype.ca=v.prototype.agent,v.prototype.buffer=v.prototype.ca,v.prototype.write=function(){throw new Error("Streaming is not supported in browser version of superagent")},v.prototype.pipe=v.prototype.write,v.prototype._isHost=function(e){return e&&"object"===n(e)&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},v.prototype.end=function(e){this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||h,this._finalizeQueryString(),this._end()},v.prototype._setUploadTimeout=function(){var e=this;this._uploadTimeout&&!this._uploadTimeoutTimer&&(this._uploadTimeoutTimer=setTimeout((function(){e._timeoutError("Upload timeout of ",e._uploadTimeout,"ETIMEDOUT")}),this._uploadTimeout))},v.prototype._end=function(){if(this._aborted)return this.callback(new Error("The request has been aborted even before .end() was called"));var e=this;this.xhr=f.getXHR();var t=this.xhr,r=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var r=t.readyState;if(r>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4===r){var n;try{n=t.status}catch(e){n=0}if(!n){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var n=function(t,r){r.total>0&&(r.percent=r.loaded/r.total*100,100===r.percent&&clearTimeout(e._uploadTimeoutTimer)),r.direction=t,e.emit("progress",r)};if(this.hasListeners("progress"))try{t.addEventListener("progress",n.bind(null,"download")),t.upload&&t.upload.addEventListener("progress",n.bind(null,"upload"))}catch(e){}t.upload&&this._setUploadTimeout();try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!==this.method&&"HEAD"!==this.method&&"string"!=typeof r&&!this._isHost(r)){var o=this._header["content-type"],i=this._serializer||f.serialize[o?o.split(";")[0]:""];!i&&b(o)&&(i=f.serialize["application/json"]),i&&(r=i(r))}for(var s in this.header)null!==this.header[s]&&Object.prototype.hasOwnProperty.call(this.header,s)&&t.setRequestHeader(s,this.header[s]);this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0===r?null:r)},f.agent=function(){return new p},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach((function(e){p.prototype[e.toLowerCase()]=function(t,r){var n=new f.Request(e,t);return this._setDefaults(n),r&&n.end(r),n}})),p.prototype.del=p.prototype.delete,f.get=function(e,t,r){var n=f("GET",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},f.head=function(e,t,r){var n=f("HEAD",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},f.options=function(e,t,r){var n=f("OPTIONS",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.del=A,f.delete=A,f.patch=function(e,t,r){var n=f("PATCH",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.post=function(e,t,r){var n=f("POST",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.put=function(e,t,r){var n=f("PUT",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}},1960:e=>{"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=function(e){return null!==e&&"object"===t(e)}},4287:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(1960);function i(e){if(e)return function(e){for(var t in i.prototype)Object.prototype.hasOwnProperty.call(i.prototype,t)&&(e[t]=i.prototype[t]);return e}(e)}e.exports=i,i.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),clearTimeout(this._uploadTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,delete this._uploadTimeoutTimer,this},i.prototype.parse=function(e){return this._parser=e,this},i.prototype.responseType=function(e){return this._responseType=e,this},i.prototype.serialize=function(e){return this._serializer=e,this},i.prototype.timeout=function(e){if(!e||"object"!==n(e))return this._timeout=e,this._responseTimeout=0,this._uploadTimeout=0,this;for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;case"upload":this._uploadTimeout=e.upload;break;default:console.warn("Unknown timeout option",t)}return this},i.prototype.retry=function(e,t){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this._retryCallback=t,this};var s=new Set(["ETIMEDOUT","ECONNRESET","EADDRINUSE","ECONNREFUSED","EPIPE","ENOTFOUND","ENETUNREACH","EAI_AGAIN"]),a=new Set([408,413,429,500,502,503,504,521,522,524]);i.prototype._shouldRetry=function(e,t){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var r=this._retryCallback(e,t);if(!0===r)return!0;if(!1===r)return!1}catch(e){console.error(e)}if(t&&t.status&&a.has(t.status))return!0;if(e){if(e.code&&s.has(e.code))return!0;if(e.timeout&&"ECONNABORTED"===e.code)return!0;if(e.crossDomain)return!0}return!1},i.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this.timedoutError=null,this._end()},i.prototype.then=function(e,t){var r=this;if(!this._fullfilledPromise){var n=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(e,t){n.on("abort",(function(){if(!(r._maxRetries&&r._maxRetries>r._retries))if(r.timedout&&r.timedoutError)t(r.timedoutError);else{var e=new Error("Aborted");e.code="ABORTED",e.status=r.status,e.method=r.method,e.url=r.url,t(e)}})),n.end((function(r,n){r?t(r):e(n)}))}))}return this._fullfilledPromise.then(e,t)},i.prototype.catch=function(e){return this.then(void 0,e)},i.prototype.use=function(e){return e(this),this},i.prototype.ok=function(e){if("function"!=typeof e)throw new Error("Callback required");return this._okCallback=e,this},i.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},i.prototype.get=function(e){return this._header[e.toLowerCase()]},i.prototype.getHeader=i.prototype.get,i.prototype.set=function(e,t){if(o(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.set(r,e[r]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},i.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},i.prototype.field=function(e,t){if(null==e)throw new Error(".field(name, val) name can not be empty");if(this._data)throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");if(o(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.field(r,e[r]);return this}if(Array.isArray(t)){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&this.field(e,t[n]);return this}if(null==t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=String(t)),this._getFormData().append(e,t),this},i.prototype.abort=function(){return this._aborted||(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort")),this},i.prototype._auth=function(e,t,r,n){switch(r.type){case"basic":this.set("Authorization","Basic ".concat(n("".concat(e,":").concat(t))));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer ".concat(e))}return this},i.prototype.withCredentials=function(e){return void 0===e&&(e=!0),this._withCredentials=e,this},i.prototype.redirects=function(e){return this._maxRedirects=e,this},i.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw new TypeError("Invalid argument");return this._maxResponseSize=e,this},i.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},i.prototype.send=function(e){var t=o(e),r=this._header["content-type"];if(this._formData)throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");if(t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw new Error("Can't merge these send calls");if(t&&o(this._data))for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(this._data[n]=e[n]);else"string"==typeof e?(r||this.type("form"),(r=this._header["content-type"])&&(r=r.toLowerCase().trim()),this._data="application/x-www-form-urlencoded"===r?this._data?"".concat(this._data,"&").concat(e):e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)||r||this.type("json"),this},i.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},i.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.includes("?")?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var r=this.url.slice(t+1).split("&");"function"==typeof this._sort?r.sort(this._sort):r.sort(),this.url=this.url.slice(0,t)+"?"+r.join("&")}}},i.prototype._appendQueryString=function(){console.warn("Unsupported")},i.prototype._timeoutError=function(e,t,r){if(!this._aborted){var n=new Error("".concat(e+t,"ms exceeded"));n.timeout=t,n.code="ECONNABORTED",n.errno=r,this.timedout=!0,this.timedoutError=n,this.abort(),this.callback(n)}},i.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},969:(e,t,r)=>{"use strict";var n=r(3094);function o(e){if(e)return function(e){for(var t in o.prototype)Object.prototype.hasOwnProperty.call(o.prototype,t)&&(e[t]=o.prototype[t]);return e}(e)}e.exports=o,o.prototype.get=function(e){return this.header[e.toLowerCase()]},o.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=n.type(t);var r=n.params(t);for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(this[o]=r[o]);this.links={};try{e.link&&(this.links=n.parseLinks(e.link))}catch(e){}},o.prototype._setStatusProperties=function(e){var t=e/100|0;this.statusCode=e,this.status=this.statusCode,this.statusType=t,this.info=1===t,this.ok=2===t,this.redirect=3===t,this.clientError=4===t,this.serverError=5===t,this.error=(4===t||5===t)&&this.toError(),this.created=201===e,this.accepted=202===e,this.noContent=204===e,this.badRequest=400===e,this.unauthorized=401===e,this.notAcceptable=406===e,this.forbidden=403===e,this.notFound=404===e,this.unprocessableEntity=422===e}},3094:(e,t)=>{"use strict";function r(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,a=!0,c=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return a=e.done,e},e:function(e){c=!0,s=e},f:function(){try{a||null==r.return||r.return()}finally{if(c)throw s}}}}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){var t,n={},o=r(e.split(/ *; */));try{for(o.s();!(t=o.n()).done;){var i=t.value.split(/ *= */),s=i.shift(),a=i.shift();s&&a&&(n[s]=a)}}catch(e){o.e(e)}finally{o.f()}return n},t.parseLinks=function(e){var t,n={},o=r(e.split(/ *, */));try{for(o.s();!(t=o.n()).done;){var i=t.value.split(/ *; */),s=i[0].slice(1,-1);n[i[1].split(/ *= */)[1].slice(1,-1)]=s}}catch(e){o.e(e)}finally{o.f()}return n},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&(delete e.authorization,delete e.cookie),e}},5335:e=>{"use strict";var t=String.prototype.replace,r=/%20/g,n="RFC3986";e.exports={default:n,formatters:{RFC1738:function(e){return t.call(e,r,"+")},RFC3986:function(e){return String(e)}},RFC1738:"RFC1738",RFC3986:n}},3065:(e,t,r)=>{"use strict";var n=r(4246),o=r(1688),i=r(5335);e.exports={formats:i,parse:o,stringify:n}},1688:(e,t,r)=>{"use strict";var n=r(4562),o=Object.prototype.hasOwnProperty,i=Array.isArray,s={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:n.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},c=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},u=function(e,t,r,n){if(e){var i=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,s=/(\[[^[\]]*])/g,a=r.depth>0&&/(\[[^[\]]*])/.exec(i),u=a?i.slice(0,a.index):i,l=[];if(u){if(!r.plainObjects&&o.call(Object.prototype,u)&&!r.allowPrototypes)return;l.push(u)}for(var p=0;r.depth>0&&null!==(a=s.exec(i))&&p<r.depth;){if(p+=1,!r.plainObjects&&o.call(Object.prototype,a[1].slice(1,-1))&&!r.allowPrototypes)return;l.push(a[1])}return a&&l.push("["+i.slice(a.index)+"]"),function(e,t,r,n){for(var o=n?t:c(t,r),i=e.length-1;i>=0;--i){var s,a=e[i];if("[]"===a&&r.parseArrays)s=[].concat(o);else{s=r.plainObjects?Object.create(null):{};var u="["===a.charAt(0)&&"]"===a.charAt(a.length-1)?a.slice(1,-1):a,l=parseInt(u,10);r.parseArrays||""!==u?!isNaN(l)&&a!==u&&String(l)===u&&l>=0&&r.parseArrays&&l<=r.arrayLimit?(s=[])[l]=o:s[u]=o:s={0:o}}o=s}return o}(l,t,r,n)}};e.exports=function(e,t){var r=function(e){if(!e)return s;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?s.charset:e.charset;return{allowDots:void 0===e.allowDots?s.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:s.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:s.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:s.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:s.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:s.comma,decoder:"function"==typeof e.decoder?e.decoder:s.decoder,delimiter:"string"==typeof e.delimiter||n.isRegExp(e.delimiter)?e.delimiter:s.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:s.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:s.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:s.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:s.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:s.strictNullHandling}}(t);if(""===e||null==e)return r.plainObjects?Object.create(null):{};for(var l="string"==typeof e?function(e,t){var r,u={},l=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,p=t.parameterLimit===1/0?void 0:t.parameterLimit,h=l.split(t.delimiter,p),f=-1,d=t.charset;if(t.charsetSentinel)for(r=0;r<h.length;++r)0===h[r].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[r]?d="utf-8":"utf8=%26%2310003%3B"===h[r]&&(d="iso-8859-1"),f=r,r=h.length);for(r=0;r<h.length;++r)if(r!==f){var g,y,m=h[r],b=m.indexOf("]="),w=-1===b?m.indexOf("="):b+1;-1===w?(g=t.decoder(m,s.decoder,d,"key"),y=t.strictNullHandling?null:""):(g=t.decoder(m.slice(0,w),s.decoder,d,"key"),y=n.maybeMap(c(m.slice(w+1),t),(function(e){return t.decoder(e,s.decoder,d,"value")}))),y&&t.interpretNumericEntities&&"iso-8859-1"===d&&(y=a(y)),m.indexOf("[]=")>-1&&(y=i(y)?[y]:y),o.call(u,g)?u[g]=n.combine(u[g],y):u[g]=y}return u}(e,r):e,p=r.plainObjects?Object.create(null):{},h=Object.keys(l),f=0;f<h.length;++f){var d=h[f],g=u(d,l[d],r,"string"==typeof e);p=n.merge(p,g,r)}return!0===r.allowSparse?p:n.compact(p)}},4246:(e,t,r)=>{"use strict";var n=r(3680),o=r(4562),i=r(5335),s=Object.prototype.hasOwnProperty,a={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},c=Array.isArray,u=Array.prototype.push,l=function(e,t){u.apply(e,c(t)?t:[t])},p=Date.prototype.toISOString,h=i.default,f={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:o.encode,encodeValuesOnly:!1,format:h,formatter:i.formatters[h],indices:!1,serializeDate:function(e){return p.call(e)},skipNulls:!1,strictNullHandling:!1},d=function e(t,r,i,s,a,u,p,h,d,g,y,m,b,w,v){var A,x=t;if(v.has(t))throw new RangeError("Cyclic object value");if("function"==typeof p?x=p(r,x):x instanceof Date?x=g(x):"comma"===i&&c(x)&&(x=o.maybeMap(x,(function(e){return e instanceof Date?g(e):e}))),null===x){if(s)return u&&!b?u(r,f.encoder,w,"key",y):r;x=""}if("string"==typeof(A=x)||"number"==typeof A||"boolean"==typeof A||"symbol"==typeof A||"bigint"==typeof A||o.isBuffer(x))return u?[m(b?r:u(r,f.encoder,w,"key",y))+"="+m(u(x,f.encoder,w,"value",y))]:[m(r)+"="+m(String(x))];var S,_=[];if(void 0===x)return _;if("comma"===i&&c(x))S=[{value:x.length>0?x.join(",")||null:void 0}];else if(c(p))S=p;else{var E=Object.keys(x);S=h?E.sort(h):E}for(var T=0;T<S.length;++T){var B=S[T],k="object"==typeof B&&void 0!==B.value?B.value:x[B];if(!a||null!==k){var U=c(x)?"function"==typeof i?i(r,B):r:r+(d?"."+B:"["+B+"]");v.set(t,!0);var I=n();l(_,e(k,U,i,s,a,u,p,h,d,g,y,m,b,w,I))}}return _};e.exports=function(e,t){var r,o=e,u=function(e){if(!e)return f;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||f.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=i.default;if(void 0!==e.format){if(!s.call(i.formatters,e.format))throw new TypeError("Unknown format option provided.");r=e.format}var n=i.formatters[r],o=f.filter;return("function"==typeof e.filter||c(e.filter))&&(o=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:f.addQueryPrefix,allowDots:void 0===e.allowDots?f.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:f.charsetSentinel,delimiter:void 0===e.delimiter?f.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:f.encode,encoder:"function"==typeof e.encoder?e.encoder:f.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:f.encodeValuesOnly,filter:o,format:r,formatter:n,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:f.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:f.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:f.strictNullHandling}}(t);"function"==typeof u.filter?o=(0,u.filter)("",o):c(u.filter)&&(r=u.filter);var p,h=[];if("object"!=typeof o||null===o)return"";p=t&&t.arrayFormat in a?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var g=a[p];r||(r=Object.keys(o)),u.sort&&r.sort(u.sort);for(var y=n(),m=0;m<r.length;++m){var b=r[m];u.skipNulls&&null===o[b]||l(h,d(o[b],b,g,u.strictNullHandling,u.skipNulls,u.encode?u.encoder:null,u.filter,u.sort,u.allowDots,u.serializeDate,u.format,u.formatter,u.encodeValuesOnly,u.charset,y))}var w=h.join(u.delimiter),v=!0===u.addQueryPrefix?"?":"";return u.charsetSentinel&&("iso-8859-1"===u.charset?v+="utf8=%26%2310003%3B&":v+="utf8=%E2%9C%93&"),w.length>0?v+w:""}},4562:(e,t,r)=>{"use strict";var n=r(5335),o=Object.prototype.hasOwnProperty,i=Array.isArray,s=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),a=function(e,t){for(var r=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r};e.exports={arrayToObject:a,assign:function(e,t){return Object.keys(t).reduce((function(e,r){return e[r]=t[r],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],r=[],n=0;n<t.length;++n)for(var o=t[n],s=o.obj[o.prop],a=Object.keys(s),c=0;c<a.length;++c){var u=a[c],l=s[u];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:s,prop:u}),r.push(l))}return function(e){for(;e.length>1;){var t=e.pop(),r=t.obj[t.prop];if(i(r)){for(var n=[],o=0;o<r.length;++o)void 0!==r[o]&&n.push(r[o]);t.obj[t.prop]=n}}}(t),e},decode:function(e,t,r){var n=e.replace(/\+/g," ");if("iso-8859-1"===r)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(e){return n}},encode:function(e,t,r,o,i){if(0===e.length)return e;var a=e;if("symbol"==typeof e?a=Symbol.prototype.toString.call(e):"string"!=typeof e&&(a=String(e)),"iso-8859-1"===r)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var c="",u=0;u<a.length;++u){var l=a.charCodeAt(u);45===l||46===l||95===l||126===l||l>=48&&l<=57||l>=65&&l<=90||l>=97&&l<=122||i===n.RFC1738&&(40===l||41===l)?c+=a.charAt(u):l<128?c+=s[l]:l<2048?c+=s[192|l>>6]+s[128|63&l]:l<55296||l>=57344?c+=s[224|l>>12]+s[128|l>>6&63]+s[128|63&l]:(u+=1,l=65536+((1023&l)<<10|1023&a.charCodeAt(u)),c+=s[240|l>>18]+s[128|l>>12&63]+s[128|l>>6&63]+s[128|63&l])}return c},isBuffer:function(e){return!(!e||"object"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(i(e)){for(var r=[],n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)},merge:function e(t,r,n){if(!r)return t;if("object"!=typeof r){if(i(t))t.push(r);else{if(!t||"object"!=typeof t)return[t,r];(n&&(n.plainObjects||n.allowPrototypes)||!o.call(Object.prototype,r))&&(t[r]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(r);var s=t;return i(t)&&!i(r)&&(s=a(t,n)),i(t)&&i(r)?(r.forEach((function(r,i){if(o.call(t,i)){var s=t[i];s&&"object"==typeof s&&r&&"object"==typeof r?t[i]=e(s,r,n):t.push(r)}else t[i]=r})),t):Object.keys(r).reduce((function(t,i){var s=r[i];return o.call(t,i)?t[i]=e(t[i],s,n):t[i]=s,t}),s)}}},7765:function(e,t){!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var i=t(),s=t([1]),a=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),p=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function f(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function d(e,t,r,n,o){var i,s=0;for(i=0;i<o;i++)s|=e[t+i]^r[n+i];return(1&s-1>>>8)-1}function g(e,t,r,n){return d(e,t,r,n,16)}function y(e,t,r,n){return d(e,t,r,n,32)}function m(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,d=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,m=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=i,x=s,S=a,_=c,E=u,T=l,B=p,k=h,U=f,I=d,C=g,R=y,O=m,D=b,N=w,P=v,L=0;L<20;L+=2)A^=(o=(O^=(o=(U^=(o=(E^=(o=A+O|0)<<7|o>>>25)+A|0)<<9|o>>>23)+E|0)<<13|o>>>19)+U|0)<<18|o>>>14,T^=(o=(x^=(o=(D^=(o=(I^=(o=T+x|0)<<7|o>>>25)+T|0)<<9|o>>>23)+I|0)<<13|o>>>19)+D|0)<<18|o>>>14,C^=(o=(B^=(o=(S^=(o=(N^=(o=C+B|0)<<7|o>>>25)+C|0)<<9|o>>>23)+N|0)<<13|o>>>19)+S|0)<<18|o>>>14,P^=(o=(R^=(o=(k^=(o=(_^=(o=P+R|0)<<7|o>>>25)+P|0)<<9|o>>>23)+_|0)<<13|o>>>19)+k|0)<<18|o>>>14,A^=(o=(_^=(o=(S^=(o=(x^=(o=A+_|0)<<7|o>>>25)+A|0)<<9|o>>>23)+x|0)<<13|o>>>19)+S|0)<<18|o>>>14,T^=(o=(E^=(o=(k^=(o=(B^=(o=T+E|0)<<7|o>>>25)+T|0)<<9|o>>>23)+B|0)<<13|o>>>19)+k|0)<<18|o>>>14,C^=(o=(I^=(o=(U^=(o=(R^=(o=C+I|0)<<7|o>>>25)+C|0)<<9|o>>>23)+R|0)<<13|o>>>19)+U|0)<<18|o>>>14,P^=(o=(N^=(o=(D^=(o=(O^=(o=P+N|0)<<7|o>>>25)+P|0)<<9|o>>>23)+O|0)<<13|o>>>19)+D|0)<<18|o>>>14;A=A+i|0,x=x+s|0,S=S+a|0,_=_+c|0,E=E+u|0,T=T+l|0,B=B+p|0,k=k+h|0,U=U+f|0,I=I+d|0,C=C+g|0,R=R+y|0,O=O+m|0,D=D+b|0,N=N+w|0,P=P+v|0,e[0]=A>>>0&255,e[1]=A>>>8&255,e[2]=A>>>16&255,e[3]=A>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=S>>>0&255,e[9]=S>>>8&255,e[10]=S>>>16&255,e[11]=S>>>24&255,e[12]=_>>>0&255,e[13]=_>>>8&255,e[14]=_>>>16&255,e[15]=_>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=T>>>0&255,e[21]=T>>>8&255,e[22]=T>>>16&255,e[23]=T>>>24&255,e[24]=B>>>0&255,e[25]=B>>>8&255,e[26]=B>>>16&255,e[27]=B>>>24&255,e[28]=k>>>0&255,e[29]=k>>>8&255,e[30]=k>>>16&255,e[31]=k>>>24&255,e[32]=U>>>0&255,e[33]=U>>>8&255,e[34]=U>>>16&255,e[35]=U>>>24&255,e[36]=I>>>0&255,e[37]=I>>>8&255,e[38]=I>>>16&255,e[39]=I>>>24&255,e[40]=C>>>0&255,e[41]=C>>>8&255,e[42]=C>>>16&255,e[43]=C>>>24&255,e[44]=R>>>0&255,e[45]=R>>>8&255,e[46]=R>>>16&255,e[47]=R>>>24&255,e[48]=O>>>0&255,e[49]=O>>>8&255,e[50]=O>>>16&255,e[51]=O>>>24&255,e[52]=D>>>0&255,e[53]=D>>>8&255,e[54]=D>>>16&255,e[55]=D>>>24&255,e[56]=N>>>0&255,e[57]=N>>>8&255,e[58]=N>>>16&255,e[59]=N>>>24&255,e[60]=P>>>0&255,e[61]=P>>>8&255,e[62]=P>>>16&255,e[63]=P>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,d=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,m=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=0;A<20;A+=2)i^=(o=(m^=(o=(f^=(o=(u^=(o=i+m|0)<<7|o>>>25)+i|0)<<9|o>>>23)+u|0)<<13|o>>>19)+f|0)<<18|o>>>14,l^=(o=(s^=(o=(b^=(o=(d^=(o=l+s|0)<<7|o>>>25)+l|0)<<9|o>>>23)+d|0)<<13|o>>>19)+b|0)<<18|o>>>14,g^=(o=(p^=(o=(a^=(o=(w^=(o=g+p|0)<<7|o>>>25)+g|0)<<9|o>>>23)+w|0)<<13|o>>>19)+a|0)<<18|o>>>14,v^=(o=(y^=(o=(h^=(o=(c^=(o=v+y|0)<<7|o>>>25)+v|0)<<9|o>>>23)+c|0)<<13|o>>>19)+h|0)<<18|o>>>14,i^=(o=(c^=(o=(a^=(o=(s^=(o=i+c|0)<<7|o>>>25)+i|0)<<9|o>>>23)+s|0)<<13|o>>>19)+a|0)<<18|o>>>14,l^=(o=(u^=(o=(h^=(o=(p^=(o=l+u|0)<<7|o>>>25)+l|0)<<9|o>>>23)+p|0)<<13|o>>>19)+h|0)<<18|o>>>14,g^=(o=(d^=(o=(f^=(o=(y^=(o=g+d|0)<<7|o>>>25)+g|0)<<9|o>>>23)+y|0)<<13|o>>>19)+f|0)<<18|o>>>14,v^=(o=(w^=(o=(b^=(o=(m^=(o=v+w|0)<<7|o>>>25)+v|0)<<9|o>>>23)+m|0)<<13|o>>>19)+b|0)<<18|o>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=g>>>0&255,e[9]=g>>>8&255,e[10]=g>>>16&255,e[11]=g>>>24&255,e[12]=v>>>0&255,e[13]=v>>>8&255,e[14]=v>>>16&255,e[15]=v>>>24&255,e[16]=p>>>0&255,e[17]=p>>>8&255,e[18]=p>>>16&255,e[19]=p>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=f>>>0&255,e[25]=f>>>8&255,e[26]=f>>>16&255,e[27]=f>>>24&255,e[28]=d>>>0&255,e[29]=d>>>8&255,e[30]=d>>>16&255,e[31]=d>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function v(e,t,r,n,o,i,s){var a,c,u=new Uint8Array(16),l=new Uint8Array(64);for(c=0;c<16;c++)u[c]=0;for(c=0;c<8;c++)u[c]=i[c];for(;o>=64;){for(m(l,u,s,w),c=0;c<64;c++)e[t+c]=r[n+c]^l[c];for(a=1,c=8;c<16;c++)a=a+(255&u[c])|0,u[c]=255&a,a>>>=8;o-=64,t+=64,n+=64}if(o>0)for(m(l,u,s,w),c=0;c<o;c++)e[t+c]=r[n+c]^l[c];return 0}function A(e,t,r,n,o){var i,s,a=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)a[s]=0;for(s=0;s<8;s++)a[s]=n[s];for(;r>=64;){for(m(c,a,o,w),s=0;s<64;s++)e[t+s]=c[s];for(i=1,s=8;s<16;s++)i=i+(255&a[s])|0,a[s]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(m(c,a,o,w),s=0;s<r;s++)e[t+s]=c[s];return 0}function x(e,t,r,n,o){var i=new Uint8Array(32);b(i,n,o,w);for(var s=new Uint8Array(8),a=0;a<8;a++)s[a]=n[a+16];return A(e,t,r,s,i)}function S(e,t,r,n,o,i,s){var a=new Uint8Array(32);b(a,i,s,w);for(var c=new Uint8Array(8),u=0;u<8;u++)c[u]=i[u+16];return v(e,t,r,n,o,c,a)}var _=function(e){var t,r,n,o,i,s,a,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,s=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|s<<2),a=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(s>>>11|a<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(a>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,t,r,n,o,i){var s=new _(i);return s.update(r,n,o),s.finish(e,t),0}function T(e,t,r,n,o,i){var s=new Uint8Array(16);return E(s,0,r,n,o,i),g(e,t,s,0)}function B(e,t,r,n,o){var i;if(r<32)return-1;for(S(e,0,t,0,r,n,o),E(e,16,e,32,r-32,e),i=0;i<16;i++)e[i]=0;return 0}function k(e,t,r,n,o){var i,s=new Uint8Array(32);if(r<32)return-1;if(x(s,0,32,n,o),0!==T(t,16,t,32,r-32,s))return-1;for(S(e,0,t,0,r,n,o),i=0;i<32;i++)e[i]=0;return 0}function U(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function I(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function C(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function R(e,r){var n,o,i,s=t(),a=t();for(n=0;n<16;n++)a[n]=r[n];for(I(a),I(a),I(a),o=0;o<2;o++){for(s[0]=a[0]-65517,n=1;n<15;n++)s[n]=a[n]-65535-(s[n-1]>>16&1),s[n-1]&=65535;s[15]=a[15]-32767-(s[14]>>16&1),i=s[15]>>16&1,s[14]&=65535,C(a,s,1-i)}for(n=0;n<16;n++)e[2*n]=255&a[n],e[2*n+1]=a[n]>>8}function O(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return R(r,e),R(n,t),y(r,0,n,0)}function D(e){var t=new Uint8Array(32);return R(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function P(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function L(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function j(e,t,r){var n,o,i=0,s=0,a=0,c=0,u=0,l=0,p=0,h=0,f=0,d=0,g=0,y=0,m=0,b=0,w=0,v=0,A=0,x=0,S=0,_=0,E=0,T=0,B=0,k=0,U=0,I=0,C=0,R=0,O=0,D=0,N=0,P=r[0],L=r[1],j=r[2],z=r[3],F=r[4],M=r[5],H=r[6],G=r[7],q=r[8],K=r[9],$=r[10],V=r[11],W=r[12],X=r[13],Y=r[14],J=r[15];i+=(n=t[0])*P,s+=n*L,a+=n*j,c+=n*z,u+=n*F,l+=n*M,p+=n*H,h+=n*G,f+=n*q,d+=n*K,g+=n*$,y+=n*V,m+=n*W,b+=n*X,w+=n*Y,v+=n*J,s+=(n=t[1])*P,a+=n*L,c+=n*j,u+=n*z,l+=n*F,p+=n*M,h+=n*H,f+=n*G,d+=n*q,g+=n*K,y+=n*$,m+=n*V,b+=n*W,w+=n*X,v+=n*Y,A+=n*J,a+=(n=t[2])*P,c+=n*L,u+=n*j,l+=n*z,p+=n*F,h+=n*M,f+=n*H,d+=n*G,g+=n*q,y+=n*K,m+=n*$,b+=n*V,w+=n*W,v+=n*X,A+=n*Y,x+=n*J,c+=(n=t[3])*P,u+=n*L,l+=n*j,p+=n*z,h+=n*F,f+=n*M,d+=n*H,g+=n*G,y+=n*q,m+=n*K,b+=n*$,w+=n*V,v+=n*W,A+=n*X,x+=n*Y,S+=n*J,u+=(n=t[4])*P,l+=n*L,p+=n*j,h+=n*z,f+=n*F,d+=n*M,g+=n*H,y+=n*G,m+=n*q,b+=n*K,w+=n*$,v+=n*V,A+=n*W,x+=n*X,S+=n*Y,_+=n*J,l+=(n=t[5])*P,p+=n*L,h+=n*j,f+=n*z,d+=n*F,g+=n*M,y+=n*H,m+=n*G,b+=n*q,w+=n*K,v+=n*$,A+=n*V,x+=n*W,S+=n*X,_+=n*Y,E+=n*J,p+=(n=t[6])*P,h+=n*L,f+=n*j,d+=n*z,g+=n*F,y+=n*M,m+=n*H,b+=n*G,w+=n*q,v+=n*K,A+=n*$,x+=n*V,S+=n*W,_+=n*X,E+=n*Y,T+=n*J,h+=(n=t[7])*P,f+=n*L,d+=n*j,g+=n*z,y+=n*F,m+=n*M,b+=n*H,w+=n*G,v+=n*q,A+=n*K,x+=n*$,S+=n*V,_+=n*W,E+=n*X,T+=n*Y,B+=n*J,f+=(n=t[8])*P,d+=n*L,g+=n*j,y+=n*z,m+=n*F,b+=n*M,w+=n*H,v+=n*G,A+=n*q,x+=n*K,S+=n*$,_+=n*V,E+=n*W,T+=n*X,B+=n*Y,k+=n*J,d+=(n=t[9])*P,g+=n*L,y+=n*j,m+=n*z,b+=n*F,w+=n*M,v+=n*H,A+=n*G,x+=n*q,S+=n*K,_+=n*$,E+=n*V,T+=n*W,B+=n*X,k+=n*Y,U+=n*J,g+=(n=t[10])*P,y+=n*L,m+=n*j,b+=n*z,w+=n*F,v+=n*M,A+=n*H,x+=n*G,S+=n*q,_+=n*K,E+=n*$,T+=n*V,B+=n*W,k+=n*X,U+=n*Y,I+=n*J,y+=(n=t[11])*P,m+=n*L,b+=n*j,w+=n*z,v+=n*F,A+=n*M,x+=n*H,S+=n*G,_+=n*q,E+=n*K,T+=n*$,B+=n*V,k+=n*W,U+=n*X,I+=n*Y,C+=n*J,m+=(n=t[12])*P,b+=n*L,w+=n*j,v+=n*z,A+=n*F,x+=n*M,S+=n*H,_+=n*G,E+=n*q,T+=n*K,B+=n*$,k+=n*V,U+=n*W,I+=n*X,C+=n*Y,R+=n*J,b+=(n=t[13])*P,w+=n*L,v+=n*j,A+=n*z,x+=n*F,S+=n*M,_+=n*H,E+=n*G,T+=n*q,B+=n*K,k+=n*$,U+=n*V,I+=n*W,C+=n*X,R+=n*Y,O+=n*J,w+=(n=t[14])*P,v+=n*L,A+=n*j,x+=n*z,S+=n*F,_+=n*M,E+=n*H,T+=n*G,B+=n*q,k+=n*K,U+=n*$,I+=n*V,C+=n*W,R+=n*X,O+=n*Y,D+=n*J,v+=(n=t[15])*P,s+=38*(x+=n*j),a+=38*(S+=n*z),c+=38*(_+=n*F),u+=38*(E+=n*M),l+=38*(T+=n*H),p+=38*(B+=n*G),h+=38*(k+=n*q),f+=38*(U+=n*K),d+=38*(I+=n*$),g+=38*(C+=n*V),y+=38*(R+=n*W),m+=38*(O+=n*X),b+=38*(D+=n*Y),w+=38*(N+=n*J),i=(n=(i+=38*(A+=n*L))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),i+=o-1+37*(o-1),e[0]=i,e[1]=s,e[2]=a,e[3]=c,e[4]=u,e[5]=l,e[6]=p,e[7]=h,e[8]=f,e[9]=d,e[10]=g,e[11]=y,e[12]=m,e[13]=b,e[14]=w,e[15]=v}function z(e,t){j(e,t,t)}function F(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)z(o,o),2!==n&&4!==n&&j(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function M(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)z(o,o),1!==n&&j(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function H(e,r,n){var o,i,s=new Uint8Array(32),c=new Float64Array(80),u=t(),l=t(),p=t(),h=t(),f=t(),d=t();for(i=0;i<31;i++)s[i]=r[i];for(s[31]=127&r[31]|64,s[0]&=248,N(c,n),i=0;i<16;i++)l[i]=c[i],h[i]=u[i]=p[i]=0;for(u[0]=h[0]=1,i=254;i>=0;--i)C(u,l,o=s[i>>>3]>>>(7&i)&1),C(p,h,o),P(f,u,p),L(u,u,p),P(p,l,h),L(l,l,h),z(h,f),z(d,u),j(u,p,u),j(p,l,f),P(f,u,p),L(u,u,p),z(l,u),L(p,h,d),j(u,p,a),P(u,u,h),j(p,p,u),j(u,h,d),j(h,l,c),z(l,f),C(u,l,o),C(p,h,o);for(i=0;i<16;i++)c[i+16]=u[i],c[i+32]=p[i],c[i+48]=l[i],c[i+64]=h[i];var g=c.subarray(32),y=c.subarray(16);return F(g,g),j(y,y,g),R(e,y),0}function G(e,t){return H(e,t,o)}function q(e,t){return r(t,32),G(e,t)}function K(e,t,r){var o=new Uint8Array(32);return H(o,r,t),b(e,n,o,w)}_.prototype.blocks=function(e,t,r){for(var n,o,i,s,a,c,u,l,p,h,f,d,g,y,m,b,w,v,A,x=this.fin?0:2048,S=this.h[0],_=this.h[1],E=this.h[2],T=this.h[3],B=this.h[4],k=this.h[5],U=this.h[6],I=this.h[7],C=this.h[8],R=this.h[9],O=this.r[0],D=this.r[1],N=this.r[2],P=this.r[3],L=this.r[4],j=this.r[5],z=this.r[6],F=this.r[7],M=this.r[8],H=this.r[9];r>=16;)h=p=0,h+=(S+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*O,h+=(_+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*H),h+=(E+=8191&(o>>>10|(i=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*M),h+=(T+=8191&(i>>>7|(s=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),p=(h+=(B+=8191&(s>>>4|(a=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*z))>>>13,h&=8191,h+=(k+=a>>>1&8191)*(5*j),h+=(U+=8191&(a>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),h+=(I+=8191&(c>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*P),h+=(C+=8191&(u>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*N),f=p+=(h+=(R+=l>>>5|x)*(5*D))>>>13,f+=S*D,f+=_*O,f+=E*(5*H),f+=T*(5*M),p=(f+=B*(5*F))>>>13,f&=8191,f+=k*(5*z),f+=U*(5*j),f+=I*(5*L),f+=C*(5*P),p+=(f+=R*(5*N))>>>13,f&=8191,d=p,d+=S*N,d+=_*D,d+=E*O,d+=T*(5*H),p=(d+=B*(5*M))>>>13,d&=8191,d+=k*(5*F),d+=U*(5*z),d+=I*(5*j),d+=C*(5*L),g=p+=(d+=R*(5*P))>>>13,g+=S*P,g+=_*N,g+=E*D,g+=T*O,p=(g+=B*(5*H))>>>13,g&=8191,g+=k*(5*M),g+=U*(5*F),g+=I*(5*z),g+=C*(5*j),y=p+=(g+=R*(5*L))>>>13,y+=S*L,y+=_*P,y+=E*N,y+=T*D,p=(y+=B*O)>>>13,y&=8191,y+=k*(5*H),y+=U*(5*M),y+=I*(5*F),y+=C*(5*z),m=p+=(y+=R*(5*j))>>>13,m+=S*j,m+=_*L,m+=E*P,m+=T*N,p=(m+=B*D)>>>13,m&=8191,m+=k*O,m+=U*(5*H),m+=I*(5*M),m+=C*(5*F),b=p+=(m+=R*(5*z))>>>13,b+=S*z,b+=_*j,b+=E*L,b+=T*P,p=(b+=B*N)>>>13,b&=8191,b+=k*D,b+=U*O,b+=I*(5*H),b+=C*(5*M),w=p+=(b+=R*(5*F))>>>13,w+=S*F,w+=_*z,w+=E*j,w+=T*L,p=(w+=B*P)>>>13,w&=8191,w+=k*N,w+=U*D,w+=I*O,w+=C*(5*H),v=p+=(w+=R*(5*M))>>>13,v+=S*M,v+=_*F,v+=E*z,v+=T*j,p=(v+=B*L)>>>13,v&=8191,v+=k*P,v+=U*N,v+=I*D,v+=C*O,A=p+=(v+=R*(5*H))>>>13,A+=S*H,A+=_*M,A+=E*F,A+=T*z,p=(A+=B*j)>>>13,A&=8191,A+=k*L,A+=U*P,A+=I*N,A+=C*D,S=h=8191&(p=(p=((p+=(A+=R*O)>>>13)<<2)+p|0)+(h&=8191)|0),_=f+=p>>>=13,E=d&=8191,T=g&=8191,B=y&=8191,k=m&=8191,U=b&=8191,I=w&=8191,C=v&=8191,R=A&=8191,t+=16,r-=16;this.h[0]=S,this.h[1]=_,this.h[2]=E,this.h[3]=T,this.h[4]=B,this.h[5]=k,this.h[6]=U,this.h[7]=I,this.h[8]=C,this.h[9]=R},_.prototype.finish=function(e,t){var r,n,o,i,s=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=r,r=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,s[0]=this.h[0]+5,r=s[0]>>>13,s[0]&=8191,i=1;i<10;i++)s[i]=this.h[i]+r,r=s[i]>>>13,s[i]&=8191;for(s[9]-=8192,n=(1^r)-1,i=0;i<10;i++)s[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|s[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},_.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var $=B,V=k,W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function X(e,t,r,n){for(var o,i,s,a,c,u,l,p,h,f,d,g,y,m,b,w,v,A,x,S,_,E,T,B,k,U,I=new Int32Array(16),C=new Int32Array(16),R=e[0],O=e[1],D=e[2],N=e[3],P=e[4],L=e[5],j=e[6],z=e[7],F=t[0],M=t[1],H=t[2],G=t[3],q=t[4],K=t[5],$=t[6],V=t[7],X=0;n>=128;){for(x=0;x<16;x++)S=8*x+X,I[x]=r[S+0]<<24|r[S+1]<<16|r[S+2]<<8|r[S+3],C[x]=r[S+4]<<24|r[S+5]<<16|r[S+6]<<8|r[S+7];for(x=0;x<80;x++)if(o=R,i=O,s=D,a=N,c=P,u=L,l=j,h=F,f=M,d=H,g=G,y=q,m=K,b=$,T=65535&(E=V),B=E>>>16,k=65535&(_=z),U=_>>>16,T+=65535&(E=(q>>>14|P<<18)^(q>>>18|P<<14)^(P>>>9|q<<23)),B+=E>>>16,k+=65535&(_=(P>>>14|q<<18)^(P>>>18|q<<14)^(q>>>9|P<<23)),U+=_>>>16,T+=65535&(E=q&K^~q&$),B+=E>>>16,k+=65535&(_=P&L^~P&j),U+=_>>>16,T+=65535&(E=W[2*x+1]),B+=E>>>16,k+=65535&(_=W[2*x]),U+=_>>>16,_=I[x%16],B+=(E=C[x%16])>>>16,k+=65535&_,U+=_>>>16,k+=(B+=(T+=65535&E)>>>16)>>>16,T=65535&(E=A=65535&T|B<<16),B=E>>>16,k=65535&(_=v=65535&k|(U+=k>>>16)<<16),U=_>>>16,T+=65535&(E=(F>>>28|R<<4)^(R>>>2|F<<30)^(R>>>7|F<<25)),B+=E>>>16,k+=65535&(_=(R>>>28|F<<4)^(F>>>2|R<<30)^(F>>>7|R<<25)),U+=_>>>16,B+=(E=F&M^F&H^M&H)>>>16,k+=65535&(_=R&O^R&D^O&D),U+=_>>>16,p=65535&(k+=(B+=(T+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,w=65535&T|B<<16,T=65535&(E=g),B=E>>>16,k=65535&(_=a),U=_>>>16,B+=(E=A)>>>16,k+=65535&(_=v),U+=_>>>16,O=o,D=i,N=s,P=a=65535&(k+=(B+=(T+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,L=c,j=u,z=l,R=p,M=h,H=f,G=d,q=g=65535&T|B<<16,K=y,$=m,V=b,F=w,x%16==15)for(S=0;S<16;S++)_=I[S],T=65535&(E=C[S]),B=E>>>16,k=65535&_,U=_>>>16,_=I[(S+9)%16],T+=65535&(E=C[(S+9)%16]),B+=E>>>16,k+=65535&_,U+=_>>>16,v=I[(S+1)%16],T+=65535&(E=((A=C[(S+1)%16])>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25)),B+=E>>>16,k+=65535&(_=(v>>>1|A<<31)^(v>>>8|A<<24)^v>>>7),U+=_>>>16,v=I[(S+14)%16],B+=(E=((A=C[(S+14)%16])>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26))>>>16,k+=65535&(_=(v>>>19|A<<13)^(A>>>29|v<<3)^v>>>6),U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,I[S]=65535&k|U<<16,C[S]=65535&T|B<<16;T=65535&(E=F),B=E>>>16,k=65535&(_=R),U=_>>>16,_=e[0],B+=(E=t[0])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[0]=R=65535&k|U<<16,t[0]=F=65535&T|B<<16,T=65535&(E=M),B=E>>>16,k=65535&(_=O),U=_>>>16,_=e[1],B+=(E=t[1])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[1]=O=65535&k|U<<16,t[1]=M=65535&T|B<<16,T=65535&(E=H),B=E>>>16,k=65535&(_=D),U=_>>>16,_=e[2],B+=(E=t[2])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[2]=D=65535&k|U<<16,t[2]=H=65535&T|B<<16,T=65535&(E=G),B=E>>>16,k=65535&(_=N),U=_>>>16,_=e[3],B+=(E=t[3])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[3]=N=65535&k|U<<16,t[3]=G=65535&T|B<<16,T=65535&(E=q),B=E>>>16,k=65535&(_=P),U=_>>>16,_=e[4],B+=(E=t[4])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[4]=P=65535&k|U<<16,t[4]=q=65535&T|B<<16,T=65535&(E=K),B=E>>>16,k=65535&(_=L),U=_>>>16,_=e[5],B+=(E=t[5])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[5]=L=65535&k|U<<16,t[5]=K=65535&T|B<<16,T=65535&(E=$),B=E>>>16,k=65535&(_=j),U=_>>>16,_=e[6],B+=(E=t[6])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[6]=j=65535&k|U<<16,t[6]=$=65535&T|B<<16,T=65535&(E=V),B=E>>>16,k=65535&(_=z),U=_>>>16,_=e[7],B+=(E=t[7])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[7]=z=65535&k|U<<16,t[7]=V=65535&T|B<<16,X+=128,n-=128}return n}function Y(e,t,r){var n,o=new Int32Array(8),i=new Int32Array(8),s=new Uint8Array(256),a=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,X(o,i,t,r),r%=128,n=0;n<r;n++)s[n]=t[a-r+n];for(s[r]=128,s[(r=256-128*(r<112?1:0))-9]=0,f(s,r-8,a/536870912|0,a<<3),X(o,i,s,r),n=0;n<8;n++)f(e,8*n,o[n],i[n]);return 0}function J(e,r){var n=t(),o=t(),i=t(),s=t(),a=t(),c=t(),l=t(),p=t(),h=t();L(n,e[1],e[0]),L(h,r[1],r[0]),j(n,n,h),P(o,e[0],e[1]),P(h,r[0],r[1]),j(o,o,h),j(i,e[3],r[3]),j(i,i,u),j(s,e[2],r[2]),P(s,s,s),L(a,o,n),L(c,s,i),P(l,s,i),P(p,o,n),j(e[0],a,c),j(e[1],p,l),j(e[2],l,c),j(e[3],a,p)}function Z(e,t,r){var n;for(n=0;n<4;n++)C(e[n],t[n],r)}function Q(e,r){var n=t(),o=t(),i=t();F(i,r[2]),j(n,r[0],i),j(o,r[1],i),R(e,o),e[31]^=D(n)<<7}function ee(e,t,r){var n,o;for(U(e[0],i),U(e[1],s),U(e[2],s),U(e[3],i),o=255;o>=0;--o)Z(e,t,n=r[o/8|0]>>(7&o)&1),J(t,e),J(e,e),Z(e,t,n)}function te(e,r){var n=[t(),t(),t(),t()];U(n[0],l),U(n[1],p),U(n[2],s),j(n[3],l,p),ee(e,n,r)}function re(e,n,o){var i,s=new Uint8Array(64),a=[t(),t(),t(),t()];for(o||r(n,32),Y(s,n,32),s[0]&=248,s[31]&=127,s[31]|=64,te(a,s),Q(e,a),i=0;i<32;i++)n[i+32]=e[i];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var r,n,o,i;for(n=63;n>=32;--n){for(r=0,o=n-32,i=n-12;o<i;++o)t[o]+=r-16*t[n]*ne[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*ne[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*ne[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ie(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,r)}function se(e,r,n,o){var i,s,a=new Uint8Array(64),c=new Uint8Array(64),u=new Uint8Array(64),l=new Float64Array(64),p=[t(),t(),t(),t()];Y(a,o,32),a[0]&=248,a[31]&=127,a[31]|=64;var h=n+64;for(i=0;i<n;i++)e[64+i]=r[i];for(i=0;i<32;i++)e[32+i]=a[32+i];for(Y(u,e.subarray(32),n+32),ie(u),te(p,u),Q(e,p),i=32;i<64;i++)e[i]=o[i];for(Y(c,e,n+64),ie(c),i=0;i<64;i++)l[i]=0;for(i=0;i<32;i++)l[i]=u[i];for(i=0;i<32;i++)for(s=0;s<32;s++)l[i+s]+=c[i]*a[s];return oe(e.subarray(32),l),h}function ae(e,r,n,o){var a,u=new Uint8Array(32),l=new Uint8Array(64),p=[t(),t(),t(),t()],f=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),a=t(),u=t(),l=t(),p=t(),f=t();return U(e[2],s),N(e[1],r),z(a,e[1]),j(u,a,c),L(a,a,e[2]),P(u,e[2],u),z(l,u),z(p,l),j(f,p,l),j(n,f,a),j(n,n,u),M(n,n),j(n,n,a),j(n,n,u),j(n,n,u),j(e[0],n,u),z(o,e[0]),j(o,o,u),O(o,a)&&j(e[0],e[0],h),z(o,e[0]),j(o,o,u),O(o,a)?-1:(D(e[0])===r[31]>>7&&L(e[0],i,e[0]),j(e[3],e[0],e[1]),0)}(f,o))return-1;for(a=0;a<n;a++)e[a]=r[a];for(a=0;a<32;a++)e[a+32]=o[a];if(Y(l,e,n),ie(l),ee(p,f,l),te(f,r.subarray(32)),J(p,f),Q(u,p),n-=64,y(r,0,u,0)){for(a=0;a<n;a++)e[a]=0;return-1}for(a=0;a<n;a++)e[a]=r[a+64];return n}var ce=64,ue=32,le=64;function pe(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function fe(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:S,crypto_stream:x,crypto_stream_salsa20_xor:v,crypto_stream_salsa20:A,crypto_onetimeauth:E,crypto_onetimeauth_verify:T,crypto_verify_16:g,crypto_verify_32:y,crypto_secretbox:B,crypto_secretbox_open:k,crypto_scalarmult:H,crypto_scalarmult_base:G,crypto_box_beforenm:K,crypto_box_afternm:$,crypto_box:function(e,t,r,n,o,i){var s=new Uint8Array(32);return K(s,o,i),$(e,t,r,n,s)},crypto_box_open:function(e,t,r,n,o,i){var s=new Uint8Array(32);return K(s,o,i),V(e,t,r,n,s)},crypto_box_keypair:q,crypto_hash:Y,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:ae,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:ue,crypto_sign_SECRETKEYBYTES:le,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:ne,pack25519:R,unpack25519:N,M:j,A:P,S:z,Z:L,pow2523:M,add:J,set25519:U,modL:oe,scalarmult:ee,scalarbase:te},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+32]=e[i];return B(o,n,n.length,t,r),o.subarray(16)},e.secretbox.open=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(16+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+16]=e[i];return n.length<32||0!==k(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return H(r,e,t),r},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return G(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox(t,r,i)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return K(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox.open(t,r,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return G(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==le)throw new Error("bad secret key size");var r=new Uint8Array(ce+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(he(e,t),t.length!==ue)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ae(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=r[i];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(ce),i=0;i<o.length;i++)o[i]=n[i];return o},e.sign.detached.verify=function(e,t,r){if(he(e,t,r),t.length!==ce)throw new Error("bad signature size");if(r.length!==ue)throw new Error("bad public key size");var n,o=new Uint8Array(ce+e.length),i=new Uint8Array(ce+e.length);for(n=0;n<ce;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+ce]=e[n];return ae(i,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(ue),t=new Uint8Array(le);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==le)throw new Error("bad secret key size");for(var t=new Uint8Array(ue),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(ue),r=new Uint8Array(le),n=0;n<32;n++)r[n]=e[n];return re(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=ue,e.sign.secretKeyLength=le,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){he(e);var t=new Uint8Array(64);return Y(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===d(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;t&&t.getRandomValues?e.setPRNG((function(e,r){var n,o=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(o.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=o[n];fe(o)})):(t=__webpack_require__(9699))&&t.randomBytes&&e.setPRNG((function(e,r){var n,o=t.randomBytes(r);for(n=0;n<r;n++)e[n]=o[n];fe(o)}))}()}(void 0!==e&&e.exports?e.exports:self.nacl=self.nacl||{})},5922:(e,t,r)=>{var n=r(2486).Buffer;const{default:o}=r(1113),{setSendTransactionHeaders:i}=r(5180);e.exports={Algod:function(e="",t="http://r2.algorand.network",r=4180,s={}){let a=e;"string"==typeof a&&(a={"X-Algo-API-Token":a});const c=new o(a,t,r,s);function u(e){return void 0!==e.noteb64&&null!==e.noteb64&&(e.note=n.from(e.noteb64,"base64")),e}this.status=async(e={})=>(await c.get("/v1/status",{},e)).body,this.healthCheck=async(e={})=>{const t=await c.get("/health",{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}},this.statusAfterBlock=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");return(await c.get(`/v1/status/wait-for-block-after/${e}`,{},t)).body},this.pendingTransactions=async(e,t={})=>{if(!Number.isInteger(e))throw Error("maxTxns should be an integer");const r=await c.get("/v1/transactions/pending",{max:e},t);if(200===r.statusCode&&void 0!==r.body.truncatedTxns.transactions)for(let e=0;e<r.body.truncatedTxns.transactions.length;e++)r.body.truncatedTxns.transactions[e]=u(r.body.truncatedTxns.transactions[e]);return r.body},this.versions=async(e={})=>(await c.get("/versions",{},e)).body,this.ledgerSupply=async(e={})=>(await c.get("/v1/ledger/supply",{},e)).body,this.transactionByAddress=async(e,t=null,r=null,n=null,o={})=>{if(null!==t&&!Number.isInteger(t))throw Error("first round should be an integer");if(null!==r&&!Number.isInteger(r))throw Error("last round should be an integer");const i=await c.get(`/v1/account/${e}/transactions`,{firstRound:t,lastRound:r,max:n},o);if(200===i.statusCode&&void 0!==i.body.transactions)for(let e=0;e<i.body.transactions.length;e++)i.body.transactions[e]=u(i.body.transactions[e]);return i.body},this.transactionByAddressAndDate=async(e,t,r,n=null,o={})=>{const i=await c.get(`/v1/account/${e}/transactions`,{fromDate:t,toDate:r,max:n},o);if(200===i.statusCode&&void 0!==i.body.transactions)for(let e=0;e<i.body.transactions.length;e++)i.body.transactions[e]=u(i.body.transactions[e]);return i.body},this.transactionById=async(e,t={})=>{const r=await c.get(`/v1/transaction/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.transactionInformation=async(e,t,r={})=>{const n=await c.get(`/v1/account/${e}/transaction/${t}`,{},r);return 200===n.statusCode&&(n.body=u(n.body)),n.body},this.pendingTransactionInformation=async(e,t={})=>{const r=await c.get(`/v1/transactions/pending/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.accountInformation=async(e,t={})=>(await c.get(`/v1/account/${e}`,{},t)).body,this.assetInformation=async(e,t={})=>(await c.get(`/v1/asset/${e}`,{},t)).body,this.suggestedFee=async(e={})=>(await c.get("/v1/transactions/fee",{},e)).body,this.sendRawTransaction=async(e,t={})=>{const r=i(t);return(await c.post("/v1/transactions",n.from(e),r)).body},this.sendRawTransactions=async(e,t={})=>{const r=i(t),o=Array.prototype.concat(...e.map((e=>Array.from(e))));return(await c.post("/v1/transactions",n.from(o),r)).body},this.getTransactionParams=async(e={})=>(await c.get("/v1/transactions/params",{},e)).body,this.suggestParams=async(e={})=>{const t=await this.getTransactionParams(e);return{flatFee:!1,fee:t.fee,firstRound:t.lastRound,lastRound:t.lastRound+1e3,genesisID:t.genesisID,genesisHash:t.genesishashb64}},this.block=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");const r=await c.get(`/v1/block/${e}`,{},t);if(200===r.statusCode&&void 0!==r.body.txns.transactions)for(let e=0;e<r.body.txns.transactions.length;e++)r.body.txns.transactions[e]=u(r.body.txns.transactions[e]);return r.body}}}},1834:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(3033),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(9417);e.exports={DynamicFee:class{constructor(e,t,r,i,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("firstValid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("lastValid must be a positive number and smaller than 2^53-1");if(void 0===s&&(s=o.ALGORAND_ZERO_ADDRESS_STRING),void 0===a){const e=u.randomBytes(32);a=n.from(e).toString("base64")}const p=n.from("ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ","base64"),h=[t,r,i,e,s,a],f=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS,l.valTypes.ADDRESS,l.valTypes.BASE64],d=l.inject(p,[5,6,7,11,44,76],h,f);this.programBytes=d;const g=new c.LogicSig(d,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getDynamicFeeTransactions:function(e,t,r,n){if(!t.verify(o.decodeAddress(e.from).publicKey))throw new Error("invalid signature");e.fee=n,e.fee<p.ALGORAND_MIN_TX_FEE&&(e.fee=p.ALGORAND_MIN_TX_FEE);const a=u.keyPairFromSecretKey(r),c=o.encodeAddress(a.publicKey),{lease:l}=e;delete e.lease;const h=new p.Transaction(e);h.addLease(l,n);const f={from:c,to:e.from,fee:n,amount:h.fee,firstRound:e.firstRound,lastRound:e.lastRound,genesisHash:e.genesisHash,type:"pay"},d=new p.Transaction(f);d.addLease(l,n);const g=s.assignGroupID([d,h],void 0),y=g[0],m=g[1],b={lsig:t.get_obj_for_encoding(),txn:m.get_obj_for_encoding()},w=y.signTxn(r),v=i.encode(b),A=new Uint8Array(w.length+v.length);return A.set(w),A.set(v,w.length),A},signDynamicFee:function(e,t,r){const n=a.readProgram(e,void 0),i=n[0],s=n[1],l=u.keyPairFromSecretKey(t),p={from:o.encodeAddress(l.publicKey),to:o.encodeAddress(s[0]),fee:0,amount:i[2],closeRemainderTo:o.encodeAddress(s[1]),firstRound:i[3],lastRound:i[4],genesisHash:r,type:"pay",lease:new Uint8Array(s[2])},h=new c.LogicSig(e,void 0);return h.sign(t),{txn:p,lsig:h}}}},1786:(e,t,r)=>{var n=r(2486).Buffer;const o=r(3477),{keccak256:i}=r(583),s=r(5583),a=r(8800),c=r(2514),u=r(9417);e.exports={HTLC:class{constructor(e,t,r,o,i,s){if(!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");let u="";if("sha256"===r)u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==";else{if("keccak256"!==r)throw Error("hash function unrecognized");u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA=="}if(32!==n.from(o,"base64").length)throw Error("hash image must be 32 bytes");const l=n.from(u,"base64"),p=[s,i,t,o,e],h=[c.valTypes.INT,c.valTypes.INT,c.valTypes.ADDRESS,c.valTypes.BASE64,c.valTypes.ADDRESS],f=c.inject(l,[3,6,10,42,76],p,h);this.programBytes=f;const d=new a.LogicSig(f,void 0);this.address=d.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},signTransactionWithHTLCUnlock:function(e,t,r){const c=n.from(r,"base64"),l=s.readProgram(e,void 0),p=l[0],h=l[1][1],f=e[e.length-15];if(1===f){const e=o.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("sha256 hash of preimage did not match stored contract hash")}else{if(2!==f)throw new Error("hash function in contract unrecognized");{const e=i.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("keccak256 hash of preimage did not match stored contract hash")}}const d=[c],g=new a.LogicSig(e,d);delete t.to;const y=p[0],m=new u.Transaction(t);if(m.fee>y)throw new Error(`final fee of payment transaction${m.fee.toString()}greater than transaction max fee${y.toString()}`);return a.signLogicSigTransaction(t,g)}}},8886:(e,t,r)=>{const n=r(1834),o=r(1786),i=r(4748),s=r(3758),a=r(2200);e.exports={DynamicFee:n.DynamicFee,getDynamicFeeTransactions:n.getDynamicFeeTransactions,signDynamicFee:n.signDynamicFee,HTLC:o.HTLC,signTransactionWithHTLCUnlock:o.signTransactionWithHTLCUnlock,LimitOrder:i.LimitOrder,getSwapAssetsTransaction:i.getSwapAssetsTransaction,Split:s.Split,getSplitFundsTransaction:s.getSplitFundsTransaction,PeriodicPayment:a.PeriodicPayment,getPeriodicPaymentWithdrawalTransaction:a.getPeriodicPaymentWithdrawalTransaction}},4748:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(413);e.exports={LimitOrder:class{constructor(e,t,r,o,i,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("assetid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("ratn must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("ratd must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("minTrade must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(a)||a<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const u=n.from("ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=","base64"),p=[a,s,t,o,r,i,e],h=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS],f=l.inject(u,[5,7,9,10,11,12,16],p,h);this.programBytes=f;const d=new c.LogicSig(f,void 0);this.address=d.address(),this.owner=e,this.assetid=t}getProgram(){return this.programBytes}getAddress(){return this.address}},getSwapAssetsTransaction:function(e,t,r,n,l,h,f,d){const g=u.keyPairFromSecretKey(n),y=o.encodeAddress(g.publicKey),m=a.readProgram(e,void 0),b=m[0],w=m[1];let v;const A=b[6],x=o.encodeAddress(w[0]),S=c.makeLogicSig(e,void 0),_=S.address(),E=[i.makePaymentTxn(_,y,l,r,v,h,f,void 0,d,void 0),i.makeAssetTransferTxn(y,x,v,void 0,l,t,h,f,void 0,d,void 0,A)],T=s.assignGroupID(E),B=b[7],k=b[8];if(t*B<r*k)throw new Error(`bad payment ratio, ${t.toString()}*${B.toString()} !>= ${r.toString()}*${k.toString()}`);const U=b[4];if(r<U)throw new Error(`payment amount ${r.toString()} less than minimum trade ${U.toString()}`);const I=b[2];if(T[0].fee>I)throw new Error(`final fee of payment transaction ${T[0].fee.toString()} greater than transaction max fee ${I.toString()}`);if(T[1].fee>I)throw new Error(`final fee of asset transaction ${T[1].fee.toString()} greater than transaction max fee ${I.toString()}`);const C=c.signLogicSigTransactionObject(T[0],S),R=T[1].signTxn(n);return p.concatArrays(C.blob,R)}}},2200:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(5583),a=r(8800),c=r(9404),u=r(2514);e.exports={PeriodicPayment:class{constructor(e,t,r,o,i,s,u){if(this.receiver=e,!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(this.amount=t,!Number.isSafeInteger(r)||r<0)throw Error("withdrawalWindow must be a positive number and smaller than 2^53-1");if(this.withdrawalWindow=r,!Number.isSafeInteger(o)||o<0)throw Error("period must be a positive number and smaller than 2^53-1");if(this.period=o,!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(this.expiryRound=i,!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");if(this.maxFee=s,void 0===u){const e=c.randomBytes(32);this.lease=n.from(e).toString("base64")}else this.lease=u;this.programBytes=this.getProgram();const l=new a.LogicSig(this.programBytes,void 0);this.address=l.address()}getProgram(){const e=n.from("ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ","base64"),t=[this.maxFee,this.period,this.withdrawalWindow,this.amount,this.expiryRound,this.lease,this.receiver],r=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.BASE64,u.valTypes.ADDRESS];return u.inject(e,[4,5,7,8,9,12,46],t,r)}getAddress(){return this.address}},getPeriodicPaymentWithdrawalTransaction:function(e,t,r,n){const c=s.readProgram(e,void 0),u=c[0],l=c[1],p=u[2],h=u[4],f=u[5];if(r%p!=0)throw new Error(`firstValid round ${r.toString()} was not a multiple of contract period ${p.toString()}`);const d=l[1],g=o.encodeAddress(d),y=l[0],m=new Uint8Array(y),b=r+h,w=g;let v,A;const x=a.makeLogicSig(e,void 0),S=x.address(),_={from:S,to:w,fee:t,amount:f,closeRemainderTo:v,firstRound:r,lastRound:b,note:A,genesisHash:n,genesisID:"",type:"pay",lease:m},E=i.makePaymentTxn(S,w,t,f,v,r,b,A,n,"");if(E.fee>u[1])throw new Error(`final fee of payment transaction${E.fee.toString()}greater than transaction max fee${u[1].toString()}`);return a.signLogicSigTransaction(_,x)}}},3758:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(1063),a=r(8800),c=r(5583),u=r(2514),l=r(413);e.exports={Split:class{constructor(e,t,r,o,i,s,c,l){if(!Number.isSafeInteger(i)||i<0)throw Error("rat2 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("rat1 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(c)||c<0)throw Error("minPay must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(l)||l<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const p=n.from("ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=","base64"),h=[l,s,i,o,c,e,t,r],f=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS,u.valTypes.ADDRESS,u.valTypes.ADDRESS],d=u.inject(p,[4,7,8,9,10,14,47,80],h,f);this.programBytes=d;const g=a.makeLogicSig(d,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getSplitFundsTransaction:function(e,t,r,n,u,p){const h=c.readProgram(e,void 0),f=h[0],d=h[1];let g=f[6],y=f[5],m=0;const b=(e,t)=>{if("number"!=typeof e||"number"!=typeof t)throw new Error("gcd operates only on positive integers");return t?b(t,e%t):e},w=b(g,y);g=Math.floor(g/w),y=Math.floor(y/w);const v=y/g;m=Math.round(t/(1+v));const A=t-m;if(y*m!=g*A)throw Error("could not split funds in a way that satisfied the contract ratio");const x=a.makeLogicSig(e,void 0).address(),S=o.encodeAddress(d[1]),_=o.encodeAddress(d[2]),E=[i.makePaymentTxn(x,S,u,m,void 0,r,n,void 0,p),i.makePaymentTxn(x,_,u,A,void 0,r,n,void 0,p)],T=s.assignGroupID(E).map((e=>a.signLogicSigTransactionObject(e,a).blob));return l.concatArrays(T[0],T[1])}}},2514:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116);function i(e,t){let r=0;for(;t>128;)e.push(255&t|128),t>>=7,r+=1;return e.push(255&t),r+1}const s={INT:1,ADDRESS:2,BASE64:3};e.exports={inject:function(e,t,r,a){if(t.length!==r.length||t.length!==a.length)throw new Error("Lengths do not match");let c=e;function u(e,t,r,o){const i=e.slice(0,r),s=e.slice(r+o,e.length),a=[i,n.from(t),s];return n.concat(a)}for(let e=0;e<t.length;e++){let l=0,p=r[e];switch(a[e]){case s.INT:const r=[];l=i(r,p),c=u(c,r,t[e],1);break;case s.ADDRESS:p=o.decodeAddress(p),c=u(c,p.publicKey,t[e],32);break;case s.BASE64:const a=[];p=n.from(p,"base64"),i(a,p.length),p=n.concat([n.from(a),p]),c=u(c,p,t[e],33);break;default:throw new Error("unrecognized value type")}if(0!==l)for(let e=0;e<t.length;e++)t[e]+=l-1}return c},valTypes:s}},7677:(e,t,r)=>{"use strict";r.d(t,{JQ:()=>m,_4:()=>x,X3:()=>A,R0:()=>b,jD:()=>w,Yh:()=>D,bL:()=>N,Ls:()=>R,UV:()=>B,Ax:()=>v,A9:()=>T,w1:()=>S,NK:()=>d,RY:()=>y,Pu:()=>g,Vk:()=>c,nh:()=>p,kG:()=>a,qH:()=>l,JH:()=>u,vJ:()=>I,o5:()=>C,AE:()=>U,I5:()=>O});var n=r(7116),o=r(8922),i=r(413),s=r(2486).Buffer;const a=65535,c=32,u=1,l=1,p=2,h=/^([a-z\d[\](),]+)\[([1-9][\d]*)]$/,f=/^ufixed([1-9][\d]*)x([1-9][\d]*)$/;class d{static from(e){if(e.endsWith("[]")){const t=d.from(e.slice(0,e.length-2));return new x(t)}if(e.endsWith("]")){const t=e.match(h);if(3!==t.length)throw new Error(`malformed static array string: ${e}`);const r=t[2],n=parseInt(r,10);if(n>a)throw new Error(`array length exceeds limit ${a}`);const o=d.from(t[1]);return new A(o,n)}if(e.startsWith("uint")){const t=e=>[...e].every((e=>"0123456789".includes(e))),r=e.slice(4,e.length);if(!t(r))throw new Error(`malformed uint string: ${r}`);const n=parseInt(r,10);if(n>a)throw new Error(`malformed uint string: ${n}`);return new g(n)}if("byte"===e)return new w;if(e.startsWith("ufixed")){const t=e.match(f);if(3!==t.length)throw new Error(`malformed ufixed type: ${e}`);const r=parseInt(t[1],10),n=parseInt(t[2],10);return new y(r,n)}if("bool"===e)return new b;if("address"===e)return new m;if("string"===e)return new v;if(e.length>=2&&"("===e[0]&&")"===e[e.length-1]){const t=S.parseTupleContent(e.slice(1,e.length-1)),r=[];for(let e=0;e<t.length;e++){const n=d.from(t[e]);r.push(n)}return new S(r)}throw new Error(`cannot convert a string ${e} to an ABI type`)}}class g extends d{constructor(e){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported uint type bitSize: ${e}`);this.bitSize=e}toString(){return`uint${this.bitSize}`}equals(e){return e instanceof g&&this.bitSize===e.bitSize}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as uint${this.bitSize}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size uint${this.bitSize}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,o.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a uint${this.bitSize}`);return(0,o.v)(e)}}class y extends d{constructor(e,t){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported ufixed type bitSize: ${e}`);if(t>160||t<1)throw new Error(`unsupported ufixed type precision: ${t}`);this.bitSize=e,this.precision=t}toString(){return`ufixed${this.bitSize}x${this.precision}`}equals(e){return e instanceof y&&this.bitSize===e.bitSize&&this.precision===e.precision}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size ${this.toString()}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,o.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a ${this.toString()}`);return(0,o.v)(e)}}class m extends d{toString(){return"address"}equals(e){return e instanceof m}isDynamic(){return!1}byteLen(){return c}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if("string"==typeof e)return(0,n.decodeAddress)(e).publicKey;if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return e}decode(e){if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return(0,n.encodeAddress)(e)}}class b extends d{toString(){return"bool"}equals(e){return e instanceof b}isDynamic(){return!1}byteLen(){return l}encode(e){if("boolean"!=typeof e)throw new Error(`Cannot encode value as bool: ${e}`);return e?new Uint8Array([128]):new Uint8Array([0])}decode(e){if(1!==e.byteLength)throw new Error("bool string must be 1 byte long");const t=e[0];if(128===t)return!0;if(0===t)return!1;throw new Error("boolean could not be decoded from the byte string")}}class w extends d{toString(){return"byte"}equals(e){return e instanceof w}isDynamic(){return!1}byteLen(){return u}encode(e){if("number"!=typeof e&&"bigint"!=typeof e)throw new Error(`Cannot encode value as byte: ${e}`);if("bigint"==typeof e&&(e=Number(e)),e<0||e>255)throw new Error(`${e} cannot be encoded into a byte`);return new Uint8Array([e])}decode(e){if(1!==e.byteLength)throw new Error("byte string must be 1 byte long");return e[0]}}class v extends d{toString(){return"string"}equals(e){return e instanceof v}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as string: ${e}`);const t=s.from(e),r=(0,o.j)(e.length,p),n=new Uint8Array(e.length+p);return n.set(r),n.set(t,p),n}decode(e){if(e.length<p)throw new Error(`byte string is too short to be decoded. Actual length is ${e.length}, but expected at least ${p}`);const t=s.from(e).readUIntBE(0,p),r=e.slice(p,e.length);if(t!==r.length)throw new Error(`string length bytes do not match the actual length of string. Expected ${t}, got ${r.length}`);return s.from(r).toString("utf-8")}}class A extends d{constructor(e,t){if(super(),t<1)throw new Error(`static array must have a length greater than 0: ${t}`);this.childType=e,this.staticLength=t}toString(){return`${this.childType.toString()}[${this.staticLength}]`}equals(e){return e instanceof A&&this.staticLength===e.staticLength&&this.childType.equals(e.childType)}isDynamic(){return this.childType.isDynamic()}byteLen(){return this.childType.constructor===b?Math.ceil(this.staticLength/8):this.staticLength*this.childType.byteLen()}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e.length!==this.staticLength)throw new Error(`Value array does not match static array length. Expected ${this.staticLength}, got ${e.length}`);return this.toABITupleType().encode(e)}decode(e){return this.toABITupleType().decode(e)}toABITupleType(){return new S(Array(this.staticLength).fill(this.childType))}}class x extends d{constructor(e){super(),this.childType=e}toString(){return`${this.childType.toString()}[]`}equals(e){return e instanceof x&&this.childType.equals(e.childType)}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=this.toABITupleType(e.length),r=t.encode(e),n=(0,o.j)(t.childTypes.length,p);return(0,i.concatArrays)(n,r)}decode(e){const t=s.from(e).readUIntBE(0,p);return this.toABITupleType(t).decode(e.slice(p,e.length))}toABITupleType(e){return new S(Array(e).fill(this.childType))}}class S extends d{constructor(e){if(super(),e.length>=a)throw new Error("tuple type child type number larger than maximum uint16 error");this.childTypes=e}toString(){const e=[];for(let t=0;t<this.childTypes.length;t++)e[t]=this.childTypes[t].toString();return`(${e.join(",")})`}equals(e){return e instanceof S&&this.childTypes.length===e.childTypes.length&&this.childTypes.every(((t,r)=>t.equals(e.childTypes[r])))}isDynamic(){return this.childTypes.some((e=>e.isDynamic()))}byteLen(){let e=0;for(let t=0;t<this.childTypes.length;t++)if(this.childTypes[t].constructor===b){const r=E(this.childTypes,t,1),n=r+1;t+=r,e+=Math.trunc((n+7)/8)}else e+=this.childTypes[t].byteLen();return e}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=Array.from(e);if(e.length>a)throw new Error("length of tuple array should not exceed a uint16");const r=this.childTypes,n=[],s=[],c=new Map;let u=0;for(;u<r.length;){const e=r[u];if(e.isDynamic())c.set(n.length,!0),n.push(new Uint8Array([0,0])),s.push(e.encode(t[u]));else{if(e.constructor===b){const e=E(r,u,-1);let i=E(r,u,1);if(e%8!=0)throw new Error("expected before index should have number of bool mod 8 equal 0");i=Math.min(7,i);const s=_(t.slice(u,u+i+1));n.push((0,o.j)(s,1)),u+=i}else{const r=e.encode(t[u]);n.push(r)}c.set(u,!1),s.push(new Uint8Array)}u+=1}let l=0;for(const e of n)l+=e.length;let h=0;for(let e=0;e<n.length;e++){if(c.get(e)){const t=l+h;if(t>a)throw new Error(`byte length of ${t} should not exceed a uint16`);n[e]=(0,o.j)(t,p)}h+=s[e].length}return(0,i.concatArrays)(...n,...s)}decode(e){const t=this.childTypes,r=[],n=[];let o=0,i=0;const a=s.from(e);for(;o<t.length;){const s=t[o];if(s.isDynamic()){if(e.slice(i,e.length).length<p)throw new Error("dynamic type in tuple is too short to be decoded");const t=a.readUIntBE(i,p);if(r.length>0&&(r[r.length-1].right=t,t<r[r.length-1].left))throw new Error("dynamic index segment miscalculation: left is greater than right index");const o={left:t,right:-1};r.push(o),n.push(null),i+=p}else if(s.constructor===b){const t=E(this.childTypes,o,-1);let r=E(this.childTypes,o,1);if(t%8!=0)throw new Error("expected before bool number mod 8 === 0");r=Math.min(7,r);for(let t=0;t<=r;t++){const r=128>>t;(e[i]&r)>0?n.push(new Uint8Array([128])):n.push(new Uint8Array([0]))}o+=r,i+=1}else{const t=s.byteLen();n.push(e.slice(i,i+t)),i+=t}if(o!==t.length-1&&i>=e.length)throw new Error("input byte not enough to decode");o+=1}if(r.length>0&&(r[r.length-1].right=e.length,i=e.length),i<e.length)throw new Error("input byte not fully consumed");for(let e=0;e<r.length;e++){const t=r[e];if(t.left>t.right)throw new Error("dynamic segment should display a [l, r] space with l <= r");if(e!==r.length-1&&t.right!==r[e+1].left)throw new Error("dynamic segment should be consecutive")}let c=0;for(let o=0;o<t.length;o++)t[o].isDynamic()&&(n[o]=e.slice(r[c].left,r[c].right),c+=1);const u=[];for(let e=0;e<t.length;e++){const r=t[e].decode(n[e]);u.push(r)}return u}static parseTupleContent(e){if(0===e.length)return[];if(e.endsWith(",")||e.startsWith(","))throw new Error("tuple string should not start with comma");if(e.includes(",,"))throw new Error("tuple string should not have consecutive commas");const t=[];let r=0,n="";for(const o of e)n+=o,"("===o?r+=1:")"===o?r-=1:","===o&&0===r&&(t.push(n.slice(0,n.length-1)),n="");if(0!==n.length&&t.push(n),0!==r)throw new Error("tuple string has mismatched parentheses");return t}}function _(e){let t=0;if(e.length>8)throw new Error("value list passed in should be no greater than length 8");for(let r=0;r<e.length;r++){const n=e[r];if("boolean"!=typeof n)throw new Error("non-boolean values cannot be compressed into a byte");n&&(t|=1<<7-r)}return t}function E(e,t,r){let n=0;for(;;){const o=t+r*n;if(e[o].constructor!==b){n-=1;break}if(o!==e.length-1&&1===r)n+=1;else{if(!(o>0&&-1===r))break;n+=1}}return n}var T,B,k=r(9404);function U(e){return e===T.any||e===T.pay||e===T.keyreg||e===T.acfg||e===T.axfer||e===T.afrz||e===T.appl}function I(e,t){return e===T.any||t.type&&t.type.toString()===e.toString()}function C(e){return e===B.account||e===B.application||e===B.asset}!function(e){e.any="txn",e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(T||(T={})),function(e){e.account="account",e.application="application",e.asset="asset"}(B||(B={}));class R{constructor(e){if("string"!=typeof e.name||"object"!=typeof e.returns||!Array.isArray(e.args))throw new Error("Invalid ABIMethod parameters");this.name=e.name,this.description=e.desc,this.args=e.args.map((({type:e,name:t,desc:r})=>U(e)||C(e)?{type:e,name:t,description:r}:{type:d.from(e),name:t,description:r})),this.returns={type:"void"===e.returns.type?e.returns.type:d.from(e.returns.type),description:e.returns.desc}}getSignature(){const e=this.args.map((e=>e.type.toString())).join(","),t=this.returns.type.toString();return`${this.name}(${e})${t}`}getSelector(){const e=(0,k.genericHash)(this.getSignature());return new Uint8Array(e.slice(0,4))}txnCount(){let e=1;for(const t of this.args)"string"==typeof t.type&&U(t.type)&&(e+=1);return e}toJSON(){return{name:this.name,desc:this.description,args:this.args.map((({type:e,name:t,description:r})=>({type:e.toString(),name:t,desc:r}))),returns:{type:this.returns.type.toString(),desc:this.returns.description}}}static fromSignature(e){const{name:t,args:r,returns:n}=function(e){const t=e.indexOf("(");if(-1===t)throw new Error(`Invalid method signature: ${e}`);let r=-1,n=0;for(let o=t;o<e.length;o++){const t=e[o];if("("===t)n+=1;else if(")"===t){if(0===n)break;if(n-=1,0===n){r=o;break}}}if(-1===r)throw new Error(`Invalid method signature: ${e}`);return{name:e.slice(0,t),args:S.parseTupleContent(e.slice(t+1,r)),returns:e.slice(r+1)}}(e);return new R({name:t,args:r.map((e=>({type:e}))),returns:{type:n}})}}function O(e,t){if(null===e||!Array.isArray(e)||!e.every((e=>e instanceof R)))throw new Error("Methods list provided is null or not the correct type");const r=e.filter((e=>e.name===t));if(r.length>1)throw new Error(`found ${r.length} methods with the same name ${r.map((e=>e.getSignature())).join(",")}`);if(0===r.length)throw new Error(`found 0 methods with the name ${t}`);return r[0]}class D{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods)||e.networks&&"object"!=typeof e.networks)throw new Error("Invalid ABIContract parameters");this.name=e.name,this.description=e.desc,this.networks=e.networks?{...e.networks}:{},this.methods=e.methods.map((e=>new R(e)))}toJSON(){return{name:this.name,desc:this.description,networks:this.networks,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return O(this.methods,e)}}class N{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods))throw new Error("Invalid ABIInterface parameters");this.name=e.name,this.description=e.desc,this.methods=e.methods.map((e=>new R(e)))}toJSON(){return{name:this.name,desc:this.description,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return O(this.methods,e)}}},7988:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(9404),o=r(7116);function i(){const e=n.keyPair();return{addr:o.encodeAddress(e.publicKey),sk:e.secretKey}}},2691:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(7116),o=r(3033),i=r(9404),s=r(413),a=r(2486).Buffer;class c{constructor({bidderKey:e,bidAmount:t,bidID:r,auctionKey:o,auctionID:i,maxPrice:s}){this.name="Bid",this.tag=a.from([97,66]);const c=n.decodeAddress(e),u=n.decodeAddress(o);if(!Number.isSafeInteger(t)||t<0)throw Error("Bid amount must be positive and 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("BidID must be positive and 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("auctionID must be positive");Object.assign(this,{bidderKey:c,bidAmount:t,bidID:r,auctionKey:u,auctionID:i,maxPrice:s})}get_obj_for_encoding(){return{bidder:a.from(this.bidderKey.publicKey),cur:this.bidAmount,price:this.maxPrice,id:this.bidID,auc:a.from(this.auctionKey.publicKey),aid:this.auctionID}}signBid(e){const t=o.encode(this.get_obj_for_encoding()),r=a.from(s.concatArrays(this.tag,t)),n=i.sign(r,e),c={t:"b",b:{sig:a.from(n),bid:this.get_obj_for_encoding()}};return new Uint8Array(o.encode(c))}}},1113:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>u});var n=r(413),o=r(5391),i=r(2486).Buffer;class s{constructor(e,t,r,n={}){this.defaultHeaders=n;const o=t.endsWith("/")?t:`${t}/`,i=new URL(o);if(void 0!==r&&(i.port=r.toString()),0===i.protocol.length)throw new Error("Invalid base server URL, protocol must be defined.");this.baseURL=i,this.tokenHeader=e}addressWithPath(e){let t;return t=e.startsWith("./")?e:e.startsWith("/")?`.${e}`:`./${e}`,new URL(t,this.baseURL).toString()}static superagentToHTTPClientResponse(e){return e.body instanceof ArrayBuffer&&(e.body=new Uint8Array(e.body)),e}static formatSuperagentError(e){if(e.response)try{const t=JSON.parse(i.from(e.response.body).toString());e.message=`Network request error. Received status ${e.response.status}: ${t.message}`}catch(e){}return e}async get(e,t,r={}){const n=o.get(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(r).responseType("arraybuffer").query(t);try{const e=await n;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async post(e,t,r,n={}){const a=o.post(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(i.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async delete(e,t,r,n={}){const a=o.delete(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(i.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}}var a=r(2486).Buffer;function c(e){return Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})}class u{constructor(e,t,r,n={}){this.bc=void 0!==t?new s(e,t,r,n):e}static parseJSON(e,t,r={}){try{return 0===Object.keys(r).length?e&&JSON.parse(e):e&&n.parseJSON(e,r)}catch(r){const n=r;throw n.rawResponse=e||null,n.statusCode=t,n}}static serializeData(e,t){if(!e)return new Uint8Array(0);if("application/json"===t["content-type"])return new Uint8Array(a.from(JSON.stringify(e)));if("string"==typeof e)return new Uint8Array(a.from(e));if(e instanceof Uint8Array)return e;throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json")}static prepareResponse(e,t,r={}){let n,{body:o}=e;return"application/msgpack"!==t&&(n=o&&a.from(o).toString()||""),"application/json"===t&&(o=u.parseJSON(n,e.status,r)),{...e,body:o,text:n,ok:2===Math.trunc(e.status/100)}}static prepareResponseError(e){return e.response&&(e.response=u.prepareResponse(e.response,"application/json"),e.status=e.response.status),e}async get(e,t,r={},n={}){const o=function(e){return void 0!==e&&Object.prototype.hasOwnProperty.call(e,"format")&&"msgpack"===e.format?"application/msgpack":"application/json"}(t),i={...r,accept:o};try{const r=await this.bc.get(e,function(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(e[t]&&0!==e[t].length||delete e[t]);return e}(t),i);return u.prepareResponse(r,o,n)}catch(e){throw u.prepareResponseError(e)}}async post(e,t,r={}){const n={"content-type":"application/json",...c(r)};try{const r=await this.bc.post(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(r,"application/json")}catch(e){throw u.prepareResponseError(e)}}async delete(e,t,r={}){const n={"content-type":"application/json",...c(r)},o=await this.bc.delete(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(o,"application/json")}}},6477:(e,t,r)=>{"use strict";r.d(t,{Z:()=>s});var n=r(3480),o=r(9417),i=r(2486).Buffer;class s extends n.Z{constructor(e,t="http://127.0.0.1",r=7833,n={}){super("X-KMD-API-Token",e,t,r,n)}async versions(){return(await this.c.get("/versions")).body}async listWallets(){return(await this.c.get("/v1/wallets")).body}async createWallet(e,t,r=new Uint8Array,n="sqlite"){const o={wallet_name:e,wallet_driver_name:n,wallet_password:t,master_derivation_key:i.from(r).toString("base64")};return(await this.c.post("/v1/wallet",o)).body}async initWalletHandle(e,t){const r={wallet_id:e,wallet_password:t};return(await this.c.post("/v1/wallet/init",r)).body}async releaseWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/release",t)).body}async renewWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/renew",t)).body}async renameWallet(e,t,r){const n={wallet_id:e,wallet_password:t,wallet_name:r};return(await this.c.post("/v1/wallet/rename",n)).body}async getWallet(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/info",t)).body}async exportMasterDerivationKey(e,t){const r={wallet_handle_token:e,wallet_password:t},n=await this.c.post("/v1/master-key/export",r);return{master_derivation_key:i.from(n.body.master_derivation_key,"base64")}}async importKey(e,t){const r={wallet_handle_token:e,private_key:i.from(t).toString("base64")};return(await this.c.post("/v1/key/import",r)).body}async exportKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t},o=await this.c.post("/v1/key/export",n);return{private_key:i.from(o.body.private_key,"base64")}}async generateKey(e){const t={wallet_handle_token:e,display_mnemonic:!1};return(await this.c.post("/v1/key",t)).body}async deleteKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/key",n)).body}async listKeys(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/key/list",t)).body}async signTransaction(e,t,r){const n=o.instantiateTxnIfNeeded(r),s={wallet_handle_token:e,wallet_password:t,transaction:i.from(n.toByte()).toString("base64")},a=await this.c.post("/v1/transaction/sign",s);return 200===a.status?i.from(a.body.signed_transaction,"base64"):a.body}async signTransactionWithSpecificPublicKey(e,t,r,n){const s=o.instantiateTxnIfNeeded(r),a={wallet_handle_token:e,wallet_password:t,transaction:i.from(s.toByte()).toString("base64"),public_key:i.from(n).toString("base64")},c=await this.c.post("/v1/transaction/sign",a);return 200===c.status?i.from(c.body.signed_transaction,"base64"):c.body}async listMultisig(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/multisig/list",t)).body}async importMultisig(e,t,r,n){const o={wallet_handle_token:e,multisig_version:t,threshold:r,pks:n};return(await this.c.post("/v1/multisig/import",o)).body}async exportMultisig(e,t){const r={wallet_handle_token:e,address:t};return(await this.c.post("/v1/multisig/export",r)).body}async signMultisigTransaction(e,t,r,n,s){const a=o.instantiateTxnIfNeeded(r),c={wallet_handle_token:e,transaction:i.from(a.toByte()).toString("base64"),public_key:i.from(n).toString("base64"),partial_multisig:s,wallet_password:t};return(await this.c.post("/v1/multisig/sign",c)).body}async deleteMultisig(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/multisig",n)).body}}},1663:(e,t,r)=>{"use strict";r.d(t,{Z:()=>U});var n=r(3480),o=r(8680);class i extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}exclude(e){return this.query.exclude=e,this}}class s extends o.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.assetID=n,this.account=r,this.assetID=n}path(){return`/v2/accounts/${this.account}/assets/${this.assetID}`}}class a extends o.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.applicationID=n,this.account=r,this.applicationID=n}path(){return`/v2/accounts/${this.account}/applications/${this.applicationID}`}}var c=r(3033);class u extends o.Z{constructor(e,t){if(super(e),!Number.isInteger(t))throw Error("roundNumber should be an integer");this.round=t,this.query={format:"msgpack"}}path(){return`/v2/blocks/${this.round}`}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}}var l=r(2486).Buffer;function p(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="text/plain"),t}class h extends o.Z{constructor(e,t){super(e),this.source=t,this.source=t}path(){return"/v2/teal/compile"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),l.from(this.source),t)).body}}var f=r(2486).Buffer;class d extends o.Z{constructor(e,t){super(e),this.blob=c.encode(t.get_obj_for_encoding(!0))}path(){return"/v2/teal/dryrun"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),f.from(this.blob),t)).body}}class g extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}}class y extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}}class m extends o.Z{path(){return"/health"}async do(e={}){const t=await this.c.get(this.path(),{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}}}class b extends o.Z{constructor(e,t){super(e),this.txid=t,this.txid=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/transactions/pending/${this.txid}`}max(e){return this.query.max=e,this}}class w extends o.Z{constructor(e){super(e),this.query.format="msgpack"}path(){return"/v2/transactions/pending"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}max(e){return this.query.max=e,this}}class v extends o.Z{constructor(e,t){super(e),this.address=t,this.address=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/accounts/${this.address}/transactions/pending`}max(e){return this.query.max=e,this}}var A=r(5180);class x extends o.Z{path(){return"/v2/status"}}class S extends o.Z{constructor(e,t,r){if(super(e,t),this.round=r,!Number.isInteger(r))throw Error("round should be an integer");this.round=r}path(){return`/v2/status/wait-for-block-after/${this.round}`}}class _ extends o.Z{path(){return"/v2/transactions/params"}prepare(e){return{flatFee:!1,fee:e.fee,firstRound:e["last-round"],lastRound:e["last-round"]+1e3,genesisID:e["genesis-id"],genesisHash:e["genesis-hash"]}}}class E extends o.Z{path(){return"/v2/ledger/supply"}}class T extends o.Z{path(){return"/versions"}}class B extends o.Z{path(){return"/genesis"}}class k extends o.Z{constructor(e,t,r,n){super(e,t),this.round=r,this.txID=n,this.round=r,this.txID=n}path(){return`/v2/blocks/${this.round}/transactions/${this.txID}/proof`}}class U extends n.Z{constructor(e,t="http://r2.algorand.network",r=4180,n={}){super("X-Algo-API-Token",e,t,r,n)}healthCheck(){return new m(this.c)}versionsCheck(){return new T(this.c)}sendRawTransaction(e){return new A.default(this.c,e)}accountInformation(e){return new i(this.c,this.intDecoding,e)}accountAssetInformation(e,t){return new s(this.c,this.intDecoding,e,t)}accountApplicationInformation(e,t){return new a(this.c,this.intDecoding,e,t)}block(e){return new u(this.c,e)}pendingTransactionInformation(e){return new b(this.c,e)}pendingTransactionsInformation(){return new w(this.c)}pendingTransactionByAddress(e){return new v(this.c,e)}status(){return new x(this.c,this.intDecoding)}statusAfterBlock(e){return new S(this.c,this.intDecoding,e)}getTransactionParams(){return new _(this.c)}supply(){return new E(this.c,this.intDecoding)}compile(e){return new h(this.c,e)}dryrun(e){return new d(this.c,e)}getAssetByID(e){return new g(this.c,this.intDecoding,e)}getApplicationByID(e){return new y(this.c,this.intDecoding,e)}genesis(){return new B(this.c,this.intDecoding)}getProof(e,t){return new k(this.c,this.intDecoding,e,t)}}},227:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Account:()=>a,AccountApplicationResponse:()=>c,AccountAssetResponse:()=>u,AccountParticipation:()=>l,AccountStateDelta:()=>p,Application:()=>h,ApplicationLocalState:()=>f,ApplicationParams:()=>d,ApplicationStateSchema:()=>g,Asset:()=>y,AssetHolding:()=>m,AssetParams:()=>b,BlockResponse:()=>w,BuildVersion:()=>v,CatchpointAbortResponse:()=>A,CatchpointStartResponse:()=>x,CompileResponse:()=>S,DisassembleResponse:()=>_,DryrunRequest:()=>E,DryrunResponse:()=>T,DryrunSource:()=>B,DryrunState:()=>k,DryrunTxnResult:()=>U,ErrorResponse:()=>I,EvalDelta:()=>C,EvalDeltaKeyValue:()=>R,NodeStatusResponse:()=>O,PendingTransactionResponse:()=>D,PendingTransactionsResponse:()=>N,PostTransactionsResponse:()=>P,ProofResponse:()=>L,SupplyResponse:()=>j,TealKeyValue:()=>z,TealValue:()=>F,TransactionParametersResponse:()=>M,Version:()=>H});var n=r(2486).Buffer;function o(e,t){let r;if(e instanceof Uint8Array)r=t?e:n.from(e).toString("base64");else if("function"==typeof e.get_obj_for_encoding)r=e.get_obj_for_encoding(t);else if(Array.isArray(e)){r=[];for(const n of e)r.push(o(n,t))}else if("object"==typeof e){const n={};for(const r of Object.keys(e))n[r]=o(e[r],t);r=n}else{if(!function(e){return void 0===e||null==e||"object"!=typeof e&&"function"!=typeof e}(e))throw new Error(`Unsupported value: ${String(e)}`);r=e}return r}class i{get_obj_for_encoding(e=!1){const t={};for(const r of Object.keys(this.attribute_map)){const n=this.attribute_map[r],i=this[r];void 0!==i&&(t[n]=null===i?null:o(i,e))}return t}}var s=r(2486).Buffer;class a extends i{constructor({address:e,amount:t,amountWithoutPendingRewards:r,minBalance:n,pendingRewards:o,rewards:i,round:s,status:a,totalAppsOptedIn:c,totalAssetsOptedIn:u,totalCreatedApps:l,totalCreatedAssets:p,appsLocalState:h,appsTotalExtraPages:f,appsTotalSchema:d,assets:g,authAddr:y,createdApps:m,createdAssets:b,participation:w,rewardBase:v,sigType:A}){super(),this.address=e,this.amount=t,this.amountWithoutPendingRewards=r,this.minBalance=n,this.pendingRewards=o,this.rewards=i,this.round=s,this.status=a,this.totalAppsOptedIn=c,this.totalAssetsOptedIn=u,this.totalCreatedApps=l,this.totalCreatedAssets=p,this.appsLocalState=h,this.appsTotalExtraPages=f,this.appsTotalSchema=d,this.assets=g,this.authAddr=y,this.createdApps=m,this.createdAssets=b,this.participation=w,this.rewardBase=v,this.sigType=A,this.attribute_map={address:"address",amount:"amount",amountWithoutPendingRewards:"amount-without-pending-rewards",minBalance:"min-balance",pendingRewards:"pending-rewards",rewards:"rewards",round:"round",status:"status",totalAppsOptedIn:"total-apps-opted-in",totalAssetsOptedIn:"total-assets-opted-in",totalCreatedApps:"total-created-apps",totalCreatedAssets:"total-created-assets",appsLocalState:"apps-local-state",appsTotalExtraPages:"apps-total-extra-pages",appsTotalSchema:"apps-total-schema",assets:"assets",authAddr:"auth-addr",createdApps:"created-apps",createdAssets:"created-assets",participation:"participation",rewardBase:"reward-base",sigType:"sig-type"}}}class c extends i{constructor(e,t,r){super(),this.round=e,this.appLocalState=t,this.createdApp=r,this.attribute_map={round:"round",appLocalState:"app-local-state",createdApp:"created-app"}}}class u extends i{constructor(e,t,r){super(),this.round=e,this.assetHolding=t,this.createdAsset=r,this.attribute_map={round:"round",assetHolding:"asset-holding",createdAsset:"created-asset"}}}class l extends i{constructor({selectionParticipationKey:e,voteFirstValid:t,voteKeyDilution:r,voteLastValid:n,voteParticipationKey:o,stateProofKey:i}){super(),this.selectionParticipationKey="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.voteFirstValid=t,this.voteKeyDilution=r,this.voteLastValid=n,this.voteParticipationKey="string"==typeof o?new Uint8Array(s.from(o,"base64")):o,this.stateProofKey="string"==typeof i?new Uint8Array(s.from(i,"base64")):i,this.attribute_map={selectionParticipationKey:"selection-participation-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key",stateProofKey:"state-proof-key"}}}class p extends i{constructor(e,t){super(),this.address=e,this.delta=t,this.attribute_map={address:"address",delta:"delta"}}}class h extends i{constructor(e,t){super(),this.id=e,this.params=t,this.attribute_map={id:"id",params:"params"}}}class f extends i{constructor(e,t,r){super(),this.id=e,this.schema=t,this.keyValue=r,this.attribute_map={id:"id",schema:"schema",keyValue:"key-value"}}}class d extends i{constructor({approvalProgram:e,clearStateProgram:t,creator:r,extraProgramPages:n,globalState:o,globalStateSchema:i,localStateSchema:a}){super(),this.approvalProgram="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.clearStateProgram="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.creator=r,this.extraProgramPages=n,this.globalState=o,this.globalStateSchema=i,this.localStateSchema=a,this.attribute_map={approvalProgram:"approval-program",clearStateProgram:"clear-state-program",creator:"creator",extraProgramPages:"extra-program-pages",globalState:"global-state",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema"}}}class g extends i{constructor(e,t){super(),this.numUint=e,this.numByteSlice=t,this.attribute_map={numUint:"num-uint",numByteSlice:"num-byte-slice"}}}class y extends i{constructor(e,t){super(),this.index=e,this.params=t,this.attribute_map={index:"index",params:"params"}}}class m extends i{constructor(e,t,r){super(),this.amount=e,this.assetId=t,this.isFrozen=r,this.attribute_map={amount:"amount",assetId:"asset-id",isFrozen:"is-frozen"}}}class b extends i{constructor({creator:e,decimals:t,total:r,clawback:n,defaultFrozen:o,freeze:i,manager:a,metadataHash:c,name:u,nameB64:l,reserve:p,unitName:h,unitNameB64:f,url:d,urlB64:g}){super(),this.creator=e,this.decimals=t,this.total=r,this.clawback=n,this.defaultFrozen=o,this.freeze=i,this.manager=a,this.metadataHash="string"==typeof c?new Uint8Array(s.from(c,"base64")):c,this.name=u,this.nameB64="string"==typeof l?new Uint8Array(s.from(l,"base64")):l,this.reserve=p,this.unitName=h,this.unitNameB64="string"==typeof f?new Uint8Array(s.from(f,"base64")):f,this.url=d,this.urlB64="string"==typeof g?new Uint8Array(s.from(g,"base64")):g,this.attribute_map={creator:"creator",decimals:"decimals",total:"total",clawback:"clawback",defaultFrozen:"default-frozen",freeze:"freeze",manager:"manager",metadataHash:"metadata-hash",name:"name",nameB64:"name-b64",reserve:"reserve",unitName:"unit-name",unitNameB64:"unit-name-b64",url:"url",urlB64:"url-b64"}}}class w extends i{constructor(e,t){super(),this.block=e,this.cert=t,this.attribute_map={block:"block",cert:"cert"}}}class v extends i{constructor({branch:e,buildNumber:t,channel:r,commitHash:n,major:o,minor:i}){super(),this.branch=e,this.buildNumber=t,this.channel=r,this.commitHash=n,this.major=o,this.minor=i,this.attribute_map={branch:"branch",buildNumber:"build_number",channel:"channel",commitHash:"commit_hash",major:"major",minor:"minor"}}}class A extends i{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class x extends i{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class S extends i{constructor(e,t,r){super(),this.hash=e,this.result=t,this.sourcemap=r,this.attribute_map={hash:"hash",result:"result",sourcemap:"sourcemap"}}}class _ extends i{constructor(e){super(),this.result=e,this.attribute_map={result:"result"}}}class E extends i{constructor({accounts:e,apps:t,latestTimestamp:r,protocolVersion:n,round:o,sources:i,txns:s}){super(),this.accounts=e,this.apps=t,this.latestTimestamp=r,this.protocolVersion=n,this.round=o,this.sources=i,this.txns=s,this.attribute_map={accounts:"accounts",apps:"apps",latestTimestamp:"latest-timestamp",protocolVersion:"protocol-version",round:"round",sources:"sources",txns:"txns"}}}class T extends i{constructor(e,t,r){super(),this.error=e,this.protocolVersion=t,this.txns=r,this.attribute_map={error:"error",protocolVersion:"protocol-version",txns:"txns"}}}class B extends i{constructor(e,t,r,n){super(),this.fieldName=e,this.source=t,this.txnIndex=r,this.appIndex=n,this.attribute_map={fieldName:"field-name",source:"source",txnIndex:"txn-index",appIndex:"app-index"}}}class k extends i{constructor({line:e,pc:t,stack:r,error:n,scratch:o}){super(),this.line=e,this.pc=t,this.stack=r,this.error=n,this.scratch=o,this.attribute_map={line:"line",pc:"pc",stack:"stack",error:"error",scratch:"scratch"}}}class U extends i{constructor({disassembly:e,appCallMessages:t,appCallTrace:r,budgetAdded:n,budgetConsumed:o,cost:i,globalDelta:s,localDeltas:a,logicSigDisassembly:c,logicSigMessages:u,logicSigTrace:l,logs:p}){super(),this.disassembly=e,this.appCallMessages=t,this.appCallTrace=r,this.budgetAdded=n,this.budgetConsumed=o,this.cost=i,this.globalDelta=s,this.localDeltas=a,this.logicSigDisassembly=c,this.logicSigMessages=u,this.logicSigTrace=l,this.logs=p,this.attribute_map={disassembly:"disassembly",appCallMessages:"app-call-messages",appCallTrace:"app-call-trace",budgetAdded:"budget-added",budgetConsumed:"budget-consumed",cost:"cost",globalDelta:"global-delta",localDeltas:"local-deltas",logicSigDisassembly:"logic-sig-disassembly",logicSigMessages:"logic-sig-messages",logicSigTrace:"logic-sig-trace",logs:"logs"}}}class I extends i{constructor(e,t){super(),this.message=e,this.data=t,this.attribute_map={message:"message",data:"data"}}}class C extends i{constructor(e,t,r){super(),this.action=e,this.bytes=t,this.uint=r,this.attribute_map={action:"action",bytes:"bytes",uint:"uint"}}}class R extends i{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class O extends i{constructor({catchupTime:e,lastRound:t,lastVersion:r,nextVersion:n,nextVersionRound:o,nextVersionSupported:i,stoppedAtUnsupportedRound:s,timeSinceLastRound:a,catchpoint:c,catchpointAcquiredBlocks:u,catchpointProcessedAccounts:l,catchpointTotalAccounts:p,catchpointTotalBlocks:h,catchpointVerifiedAccounts:f,lastCatchpoint:d}){super(),this.catchupTime=e,this.lastRound=t,this.lastVersion=r,this.nextVersion=n,this.nextVersionRound=o,this.nextVersionSupported=i,this.stoppedAtUnsupportedRound=s,this.timeSinceLastRound=a,this.catchpoint=c,this.catchpointAcquiredBlocks=u,this.catchpointProcessedAccounts=l,this.catchpointTotalAccounts=p,this.catchpointTotalBlocks=h,this.catchpointVerifiedAccounts=f,this.lastCatchpoint=d,this.attribute_map={catchupTime:"catchup-time",lastRound:"last-round",lastVersion:"last-version",nextVersion:"next-version",nextVersionRound:"next-version-round",nextVersionSupported:"next-version-supported",stoppedAtUnsupportedRound:"stopped-at-unsupported-round",timeSinceLastRound:"time-since-last-round",catchpoint:"catchpoint",catchpointAcquiredBlocks:"catchpoint-acquired-blocks",catchpointProcessedAccounts:"catchpoint-processed-accounts",catchpointTotalAccounts:"catchpoint-total-accounts",catchpointTotalBlocks:"catchpoint-total-blocks",catchpointVerifiedAccounts:"catchpoint-verified-accounts",lastCatchpoint:"last-catchpoint"}}}class D extends i{constructor({poolError:e,txn:t,applicationIndex:r,assetClosingAmount:n,assetIndex:o,closeRewards:i,closingAmount:s,confirmedRound:a,globalStateDelta:c,innerTxns:u,localStateDelta:l,logs:p,receiverRewards:h,senderRewards:f}){super(),this.poolError=e,this.txn=t,this.applicationIndex=r,this.assetClosingAmount=n,this.assetIndex=o,this.closeRewards=i,this.closingAmount=s,this.confirmedRound=a,this.globalStateDelta=c,this.innerTxns=u,this.localStateDelta=l,this.logs=p,this.receiverRewards=h,this.senderRewards=f,this.attribute_map={poolError:"pool-error",txn:"txn",applicationIndex:"application-index",assetClosingAmount:"asset-closing-amount",assetIndex:"asset-index",closeRewards:"close-rewards",closingAmount:"closing-amount",confirmedRound:"confirmed-round",globalStateDelta:"global-state-delta",innerTxns:"inner-txns",localStateDelta:"local-state-delta",logs:"logs",receiverRewards:"receiver-rewards",senderRewards:"sender-rewards"}}}class N extends i{constructor(e,t){super(),this.topTransactions=e,this.totalTransactions=t,this.attribute_map={topTransactions:"top-transactions",totalTransactions:"total-transactions"}}}class P extends i{constructor(e){super(),this.txid=e,this.attribute_map={txid:"txId"}}}class L extends i{constructor({idx:e,proof:t,stibhash:r,treedepth:n,hashtype:o}){super(),this.idx=e,this.proof="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.stibhash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.treedepth=n,this.hashtype=o,this.attribute_map={idx:"idx",proof:"proof",stibhash:"stibhash",treedepth:"treedepth",hashtype:"hashtype"}}}class j extends i{constructor(e,t,r){super(),this.currentRound=e,this.onlineMoney=t,this.totalMoney=r,this.attribute_map={currentRound:"current_round",onlineMoney:"online-money",totalMoney:"total-money"}}}class z extends i{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class F extends i{constructor(e,t,r){super(),this.type=e,this.bytes=t,this.uint=r,this.attribute_map={type:"type",bytes:"bytes",uint:"uint"}}}class M extends i{constructor({consensusVersion:e,fee:t,genesisHash:r,genesisId:n,lastRound:o,minFee:i}){super(),this.consensusVersion=e,this.fee=t,this.genesisHash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.genesisId=n,this.lastRound=o,this.minFee=i,this.attribute_map={consensusVersion:"consensus-version",fee:"fee",genesisHash:"genesis-hash",genesisId:"genesis-id",lastRound:"last-round",minFee:"min-fee"}}}class H extends i{constructor(e,t,r,n){super(),this.build=e,this.genesisHashB64="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.genesisId=r,this.versions=n,this.attribute_map={build:"build",genesisHashB64:"genesis_hash_b64",genesisId:"genesis_id",versions:"versions"}}}},5180:(e,t,r)=>{"use strict";r.r(t),r.d(t,{setSendTransactionHeaders:()=>s,default:()=>c});var n=r(8680),o=r(413),i=r(2486).Buffer;function s(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="application/x-binary"),t}function a(e){return e&&void 0!==e.byteLength}class c extends n.Z{constructor(e,t){super(e);let r=t;if(Array.isArray(t)){if(!t.every(a))throw new TypeError("Array elements must be byte arrays");r=(0,o.concatArrays)(...t)}else if(!a(r))throw new TypeError("Argument must be byte array");this.txnBytesToPost=r}path(){return"/v2/transactions"}async do(e={}){const t=s(e);return(await this.c.post(this.path(),i.from(this.txnBytesToPost),t)).body}}},9582:(e,t,r)=>{"use strict";r.d(t,{Z:()=>E});var n=r(3480),o=r(8680);class i extends o.Z{path(){return"/health"}}class s extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/balances`}limit(e){return this.query.limit=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}var a=r(2486).Buffer;function c(e){return"string"==typeof e?e:a.from(e).toString("base64")}class u extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class l extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class p extends o.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/blocks/${this.round}`}}class h extends o.Z{constructor(e,t,r){super(e,t),this.txID=r,this.txID=r}path(){return`/v2/transactions/${this.txID}`}}class f extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}round(e){return this.query.round=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class d extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetId(e){return this.query["asset-id"]=e,this}}class g extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetID(e){return this.query["asset-id"]=e,this}}class y extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/apps-local-state`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class m extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-applications`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class b extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class w extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class v extends o.Z{constructor(e,t,r){super(e,t),this.appID=r,this.appID=r}path(){return`/v2/applications/${this.appID}/logs`}limit(e){return this.query.limit=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}nextToken(e){return this.query.next=e,this}sender(e){return this.query["sender-address"]=e,this}txid(e){return this.query.txid=e,this}}class A extends o.Z{path(){return"/v2/accounts"}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}limit(e){return this.query.limit=e,this}assetID(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}round(e){return this.query.round=e,this}authAddr(e){return this.query["auth-addr"]=e,this}applicationID(e){return this.query["application-id"]=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class x extends o.Z{path(){return"/v2/transactions"}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class S extends o.Z{path(){return"/v2/assets"}limit(e){return this.query.limit=e,this}creator(e){return this.query.creator=e,this}name(e){return this.query.name=e,this}unit(e){return this.query.unit=e,this}index(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class _ extends o.Z{path(){return"/v2/applications"}index(e){return this.query["application-id"]=e,this}creator(e){return this.query.creator=e,this}nextToken(e){return this.query.next=e,this}limit(e){return this.query.limit=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class E extends n.Z{constructor(e,t="http://127.0.0.1",r=8080,n={}){super("X-Indexer-API-Token",e,t,r,n)}makeHealthCheck(){return new i(this.c,this.intDecoding)}lookupAssetBalances(e){return new s(this.c,this.intDecoding,e)}lookupAssetTransactions(e){return new l(this.c,this.intDecoding,e)}lookupAccountTransactions(e){return new u(this.c,this.intDecoding,e)}lookupBlock(e){return new p(this.c,this.intDecoding,e)}lookupTransactionByID(e){return new h(this.c,this.intDecoding,e)}lookupAccountByID(e){return new f(this.c,this.intDecoding,e)}lookupAccountAssets(e){return new d(this.c,this.intDecoding,e)}lookupAccountCreatedAssets(e){return new g(this.c,this.intDecoding,e)}lookupAccountAppLocalStates(e){return new y(this.c,this.intDecoding,e)}lookupAccountCreatedApplications(e){return new m(this.c,this.intDecoding,e)}lookupAssetByID(e){return new b(this.c,this.intDecoding,e)}lookupApplications(e){return new w(this.c,this.intDecoding,e)}lookupApplicationLogs(e){return new v(this.c,this.intDecoding,e)}searchAccounts(){return new A(this.c,this.intDecoding)}searchForTransactions(){return new x(this.c,this.intDecoding)}searchForAssets(){return new S(this.c,this.intDecoding)}searchForApplications(){return new _(this.c,this.intDecoding)}}},8680:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(7197);class o{constructor(e,t){this.c=e,this.query={},this.intDecoding=t||n.Z.DEFAULT}prepare(e){return e}async do(e={}){const t={};"default"!==this.intDecoding&&(t.intDecoding=this.intDecoding);const r=await this.c.get(this.path(),this.query,e,t);return this.prepare(r.body)}setIntDecoding(e){if("default"!==e&&"safe"!==e&&"mixed"!==e&&"bigint"!==e)throw new Error(`Invalid method for int decoding: ${e}`);return this.intDecoding=e,this}}},3480:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(1113),o=r(7197);class i{constructor(e,t,r,i,s={}){if("function"==typeof t.get)this.c=new n.default(t);else{let o;o="string"==typeof t?function(e="",t){const r={};return r[t]=e,r}(t,e):t,this.c=new n.default(o,r,i,s)}this.intDecoding=o.Z.DEFAULT}setIntEncoding(e){this.intDecoding=e}getIntEncoding(){return this.intDecoding}}},3458:(e,t,r)=>{"use strict";r.d(t,{b:()=>h,A:()=>d});var n=r(7677),o=r(9417),i=r(1988),s=r(1063),a=r(5062),c=r(834),u=r(1624),l=r(2486).Buffer;const p=l.from([21,31,124,117]);var h;function f(e,t,r){if(null!=r&&e===r)return 0;const n=null==r?0:1;for(let r=0;r<t.length;r++)if(e===t[r])return r+n;return t.push(e),t.length-1+n}!function(e){e[e.BUILDING=0]="BUILDING",e[e.BUILT=1]="BUILT",e[e.SIGNED=2]="SIGNED",e[e.SUBMITTED=3]="SUBMITTED",e[e.COMMITTED=4]="COMMITTED"}(h||(h={}));class d{constructor(){this.status=h.BUILDING,this.transactions=[],this.methodCalls=new Map,this.signedTxns=[],this.txIDs=[]}getStatus(){return this.status}count(){return this.transactions.length}clone(){const e=new d;return e.transactions=this.transactions.map((({txn:e,signer:t})=>({txn:o.Transaction.from_obj_for_encoding({...e.get_obj_for_encoding(),grp:void 0}),signer:t}))),e.methodCalls=new Map(this.methodCalls),e}addTransaction(e){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length===d.MAX_GROUP_SIZE)throw new Error(`Adding an additional transaction exceeds the maximum atomic group size of ${d.MAX_GROUP_SIZE}`);if(e.txn.group&&e.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");this.transactions.push(e)}addMethodCall({appID:e,method:t,methodArgs:r,sender:o,suggestedParams:s,onComplete:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:y,numLocalInts:m,numLocalByteSlices:b,extraPages:w,note:v,lease:A,rekeyTo:x,signer:S}){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length+t.txnCount()>d.MAX_GROUP_SIZE)throw new Error(`Adding additional transactions exceeds the maximum atomic group size of ${d.MAX_GROUP_SIZE}`);if(0===e){if(null==l||null==p||null==g||null==y||null==m||null==b)throw new Error("One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices")}else if(a===u.hq.UpdateApplicationOC){if(null==l||null==p)throw new Error("One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram");if(null!=g||null!=y||null!=m||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages")}else if(null!=l||null!=p||null!=g||null!=y||null!=m||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");if(null==r&&(r=[]),r.length!==t.args.length)throw new Error(`Incorrect number of method arguments. Expected ${t.args.length}, got ${r.length}`);let _=[],E=[];const T=[],B=[],k=[],U=new Map;for(let e=0;e<r.length;e++){let o=t.args[e].type;const i=r[e];if((0,n.AE)(o)){if(!(0,c.Xw)(i)||!(0,n.vJ)(o,i.txn))throw new Error(`Expected ${o} transaction for argument at index ${e}`);if(i.txn.group&&i.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");T.push(i)}else{if((0,c.Xw)(i))throw new Error(`Expected non-transaction value for argument at index ${e}`);if((0,n.o5)(o)&&(U.set(B.length,_.length),B.push(o),k.push(i),o=new n.Pu(8)),"string"==typeof o)throw new Error(`Unknown ABI type: ${o}`);_.push(o),E.push(i)}}const I=[],C=[],R=[],O=[];for(let t=0;t<B.length;t++){const r=B[t],i=k[t];let s=0;switch(r){case n.UV.account:{const e=new n.JQ;s=f(e.decode(e.encode(i)),C,o);break}case n.UV.application:{const t=new n.Pu(64),r=t.decode(t.encode(i));if(r>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for application value, got ${r}`);s=f(Number(r),R,e);break}case n.UV.asset:{const e=new n.Pu(64),t=e.decode(e.encode(i));if(t>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for asset value, got ${t}`);s=f(Number(t),O);break}default:throw new Error(`Unknown reference type: ${r}`)}I.push(s)}for(let e=0;e<I.length;e++)E[U.get(e)]=I[e];if(_.length>15){const e=_.slice(14),t=E.slice(14);_=_.slice(0,14),E=E.slice(0,14),_.push(new n.w1(e)),E.push(t)}const D=[t.getSelector()];for(let e=0;e<_.length;e++)D.push(_[e].encode(E[e]));const N={txn:(0,i.makeApplicationCallTxnFromObject)({from:o,appIndex:e,appArgs:D,accounts:C,foreignApps:R,foreignAssets:O,onComplete:null==a?u.hq.NoOpOC:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:y,numLocalInts:m,numLocalByteSlices:b,extraPages:w,lease:A,note:v,rekeyTo:x,suggestedParams:s}),signer:S};this.transactions.push(...T,N),this.methodCalls.set(this.transactions.length-1,t)}buildGroup(){if(this.status===h.BUILDING){if(0===this.transactions.length)throw new Error("Cannot build a group with 0 transactions");this.transactions.length>1&&(0,s.assignGroupID)(this.transactions.map((e=>e.txn))),this.status=h.BUILT}return this.transactions}async gatherSignatures(){if(this.status>=h.SIGNED)return this.signedTxns;const e=this.buildGroup(),t=e.map((e=>e.txn)),r=new Map;for(let t=0;t<e.length;t++){const{signer:n}=e[t];r.has(n)||r.set(n,[]),r.get(n).push(t)}const n=Array.from(r),i=await Promise.all(n.map((([e,r])=>e(t,r)))),s=e.map((()=>null));for(let e=0;e<n.length;e++){const t=n[e][1],r=i[e];for(let e=0;e<t.length;e++)s[t[e]]=r[e]}if(!s.every((e=>null!=e)))throw new Error(`Missing signatures. Got ${s}`);const a=s.map(((e,t)=>{try{return(0,o.decodeSignedTransaction)(e).txn.txID()}catch(e){throw new Error(`Cannot decode signed transaction at index ${t}. ${e}`)}}));return this.signedTxns=s,this.txIDs=a,this.status=h.SIGNED,s}async submit(e){if(this.status>h.SUBMITTED)throw new Error("Transaction group cannot be resubmitted");const t=await this.gatherSignatures();return await e.sendRawTransaction(t).do(),this.status=h.SUBMITTED,this.txIDs}async execute(e,t){if(this.status===h.COMMITTED)throw new Error("Transaction group has already been executed successfully");const r=await this.submit(e);this.status=h.SUBMITTED;const n=this.transactions.findIndex(((e,t)=>this.methodCalls.has(t))),o=-1===n?0:n,i=await(0,a.K)(e,r[o],t);this.status=h.COMMITTED;const s=i["confirmed-round"],c=[];for(const[t,o]of this.methodCalls){const s=r[t],a={txID:s,rawReturnValue:new Uint8Array,method:o};try{const r=t===n?i:await e.pendingTransactionInformation(s).do();if(a.txInfo=r,"void"!==o.returns.type){const e=r.logs||[];if(0===e.length)throw new Error("App call transaction did not log a return value");const t=l.from(e[e.length-1],"base64");if(t.byteLength<4||!t.slice(0,4).equals(p))throw new Error("App call transaction did not log a return value");a.rawReturnValue=new Uint8Array(t.slice(4)),a.returnValue=o.returns.type.decode(a.rawReturnValue)}}catch(e){a.decodeError=e}c.push(a)}return{confirmedRound:s,txIDs:r,methodResults:c}}}d.MAX_GROUP_SIZE=16},9070:(e,t,r)=>{"use strict";r.d(t,{rD:()=>o,_:()=>i,HN:()=>s});const n=1e6,o="Microalgos should be positive and less than 2^53 - 1.";function i(e){if(e<0||!Number.isSafeInteger(e))throw new Error(o);return e/n}function s(e){const t=e*n;return Math.round(t)}},4383:(e,t,r)=>{"use strict";r.d(t,{P:()=>c,x:()=>y});var n=r(227),o=r(1824),i=r(7116),s=r(2486).Buffer;function a(e){return e.params["approval-program"]=s.from(e.params["approval-program"].toString(),"base64"),e.params["clear-state-program"]=s.from(e.params["clear-state-program"].toString(),"base64"),e}async function c({client:e,txns:t,protocolVersion:r,latestTimestamp:s,round:c,sources:u}){const l=[],p=[],h=[],f=[],d=[];for(const e of t)e.txn.type===o.i.appl&&(d.push((0,i.encodeAddress)(e.txn.from.publicKey)),e.txn.appAccounts&&d.push(...e.txn.appAccounts.map((e=>(0,i.encodeAddress)(e.publicKey)))),e.txn.appForeignApps&&(h.push(...e.txn.appForeignApps),d.push(...e.txn.appForeignApps.map((e=>(0,i.getApplicationAddress)(e))))),e.txn.appForeignAssets&&f.push(...e.txn.appForeignAssets),void 0===e.txn.appIndex||0===e.txn.appIndex?l.push(new n.Application(1380011588,new n.ApplicationParams({creator:(0,i.encodeAddress)(e.txn.from.publicKey),approvalProgram:e.txn.appApprovalProgram,clearStateProgram:e.txn.appClearProgram,localStateSchema:new n.ApplicationStateSchema(e.txn.appLocalInts,e.txn.appLocalByteSlices),globalStateSchema:new n.ApplicationStateSchema(e.txn.appGlobalInts,e.txn.appGlobalByteSlices)}))):(h.push(e.txn.appIndex),d.push((0,i.getApplicationAddress)(e.txn.appIndex))));const g=[];for(const t of[...new Set(f)])g.push(e.getAssetByID(t).do().then((e=>{d.push(e.params.creator)})));await Promise.all(g);const y=[];for(const t of[...new Set(h)])y.push(e.getApplicationByID(t).do().then((e=>{const t=a(e);l.push(t),d.push(t.params.creator)})));await Promise.all(y);const m=[];for(const t of[...new Set(d)])m.push(e.accountInformation(t).do().then((e=>{"created-apps"in e&&(e["created-apps"]=e["created-apps"].map((e=>a(e)))),p.push(e)})));return await Promise.all(m),new n.DryrunRequest({txns:t.map((e=>({...e,txn:e.txn.get_obj_for_encoding()}))),accounts:p,apps:l,latestTimestamp:s,round:c,protocolVersion:r,sources:u})}class u{constructor(e){this.type=0,this.bytes="",this.uint=0,this.type=e.type,this.bytes=e.bytes,this.uint=e.uint}toString(){return 1===this.type?`0x${s.from(this.bytes,"base64").toString("hex")}`:this.uint.toString()}}class l{constructor(e){this.error="",this.line=0,this.pc=0,this.scratch=[],this.stack=[],this.error=void 0===e.error?"":e.error,this.line=e.line,this.pc=e.pc,this.scratch=e.scratch,this.stack=e.stack.map((e=>new u(e)))}}class p{constructor(e){this.trace=[],void 0!==e&&(this.trace=e.map((e=>new l(e))))}}function h(e,t){return e.length>t&&t>0?`${e.slice(0,t)}...`:e}function f(e,t){if(0===t.length)return"";let r=null;for(let n=0;n<t.length;n++)(n>e.length||JSON.stringify(e[n])!==JSON.stringify(t[n]))&&(r=n);if(null==r)return"";const n=t[r];return n.bytes.length>0?`${r} = 0x${s.from(n.bytes,"base64").toString("hex")}`:`${r} = ${n.uint.toString()}`}function d(e,t){return`[${(t?e.reverse():e).map((e=>{switch(e.type){case 1:return`0x${s.from(e.bytes,"base64").toString("hex")}`;case 2:return`${e.uint.toString()}`;default:return""}})).join(", ")}]`}class g{constructor(e){this.disassembly=[],this.appCallMessages=[],this.localDeltas=[],this.globalDelta=[],this.cost=0,this.logicSigMessages=[],this.logicSigDisassembly=[],this.logs=[],this.appCallTrace=void 0,this.logicSigTrace=void 0,this.required=["disassembly"],this.optionals=["app-call-messages","local-deltas","global-delta","cost","logic-sig-messages","logic-sig-disassembly","logs"],this.traces=["app-call-trace","logic-sig-trace"],this.disassembly=e.disassembly,this.appCallMessages=e["app-call-messages"],this.localDeltas=e["local-deltas"],this.globalDelta=e["global-delta"],this.cost=e.cost,this.logicSigMessages=e["logic-sig-messages"],this.logicSigDisassembly=e["logic-sig-disassembly"],this.logs=e.logs,this.appCallTrace=new p(e["app-call-trace"]),this.logicSigTrace=new p(e["logic-sig-trace"])}appCallRejected(){return void 0!==this.appCallMessages&&this.appCallMessages.includes("REJECT")}logicSigRejected(){return void 0!==this.logicSigMessages&&this.logicSigMessages.includes("REJECT")}static trace(e,t,r){const n=r.maxValueWidth||30,o=[["pc#","ln#","source","scratch","stack"]];for(let i=0;i<e.trace.length;i++){const{line:s,error:a,pc:c,scratch:u,stack:l}=e.trace[i],p=void 0!==u?u:[],g=i>0&&void 0!==e.trace[i-1].scratch?e.trace[i-1].scratch:[],y=""===a?t[s]:`!! ${a} !!`;o.push([c.toString().padEnd(3," "),s.toString().padEnd(3," "),h(y,n),h(f(g,p),n),h(d(l,r.topOfStackFirst),n)])}const i=o.reduce(((e,t)=>{const r=new Array(o[0].length).fill(0);for(let n=0;n<e.length;n++)r[n]=t[n].length>e[n]?t[n].length:e[n];return r}),new Array(o[0].length).fill(0));return`${o.map((e=>e.map(((e,t)=>e.padEnd(i[t]+1," "))).join("|").trim())).join("\n")}\n`}appTrace(e){if(void 0===this.appCallTrace||!this.disassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!1}),g.trace(this.appCallTrace,this.disassembly,t)}lsigTrace(e){if(void 0===this.logicSigTrace||void 0===this.logicSigDisassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!0}),g.trace(this.logicSigTrace,this.logicSigDisassembly,t)}}class y{constructor(e){this.error="",this.protocolVersion="",this.txns=[],this.error=e.error,this.protocolVersion=e["protocol-version"],this.txns=e.txns.map((e=>new g(e)))}}},7116:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_ZERO_ADDRESS_STRING:()=>u,MALFORMED_ADDRESS_ERROR_MSG:()=>h,CHECKSUM_ADDRESS_ERROR_MSG:()=>f,INVALID_MSIG_VERSION_ERROR_MSG:()=>d,INVALID_MSIG_THRESHOLD_ERROR_MSG:()=>g,INVALID_MSIG_PK_ERROR_MSG:()=>y,UNEXPECTED_PK_LEN_ERROR_MSG:()=>m,decodeAddress:()=>b,isValidAddress:()=>w,encodeAddress:()=>v,fromMultisigPreImg:()=>A,fromMultisigPreImgAddrs:()=>x,getApplicationAddress:()=>S});var n=r(7267),o=r.n(n),i=r(9404),s=r(413),a=r(6963),c=r(2486).Buffer;const u="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",l=new Uint8Array([77,117,108,116,105,115,105,103,65,100,100,114]),p=c.from("appID"),h="address seems to be malformed",f="wrong checksum for address",d="invalid multisig version",g="bad multisig threshold",y="bad multisig public key - wrong length",m="nacl public key length is not 32 bytes";function b(e){if("string"!=typeof e||58!==e.length)throw new Error(h);const t=o().decode.asBytes(e.toString());if(36!==t.length)throw new Error(h);const r=new Uint8Array(t.slice(0,32)),n=new Uint8Array(t.slice(i.PUBLIC_KEY_LENGTH,36)),a=i.genericHash(r).slice(i.HASH_BYTES_LENGTH-4,i.HASH_BYTES_LENGTH);if(!s.arrayEqual(a,n))throw new Error(f);return{publicKey:r,checksum:n}}function w(e){try{b(e)}catch(e){return!1}return!0}function v(e){const t=i.genericHash(e).slice(i.PUBLIC_KEY_LENGTH-4,i.PUBLIC_KEY_LENGTH);return o().encode(s.concatArrays(e,t)).toString().slice(0,58)}function A({version:e,threshold:t,pks:r}){if(1!==e||e>255||e<0)throw new Error(d);if(0===t||0===r.length||t>r.length||t>255)throw new Error(g);if(32!==i.PUBLIC_KEY_LENGTH)throw new Error(m);const n=new Uint8Array(l.length+2+32*r.length);n.set(l,0),n.set([e],l.length),n.set([t],l.length+1);for(let e=0;e<r.length;e++){if(32!==r[e].length)throw new Error(y);n.set(r[e],l.length+2+32*e)}return new Uint8Array(i.genericHash(n))}function x({version:e,threshold:t,addrs:r}){return v(A({version:e,threshold:t,pks:r.map((e=>b(e).publicKey))}))}function S(e){const t=s.concatArrays(p,(0,a.T)(e)),r=i.genericHash(t);return v(new Uint8Array(r))}},8922:(e,t,r)=>{"use strict";r.d(t,{j:()=>o,v:()=>i});var n=r(2486).Buffer;function o(e,t){let r=e.toString(16);r.length!==2*t&&(r=r.padStart(2*t,"0"));const n=new Uint8Array(r.length/2);for(let e=0,t=0;e<r.length/2;e++,t+=2)n[e]=parseInt(r.slice(t,t+2),16);return n}function i(e){let t=BigInt(0);const r=n.from(e);for(let n=0;n<e.length;n++)t=BigInt(Number(r.readUIntBE(n,1)))+t*BigInt(256);return t}},3033:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ERROR_CONTAINS_EMPTY_STRING:()=>o,encode:()=>i,decode:()=>s});var n=r(5406);const o="The object contains empty or 0 values. First empty or 0 value encountered during encoding: ";function i(e){const t=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&(!e[t]||0===e[t].length))return{containsEmpty:!0,firstEmptyKey:t};return{containsEmpty:!1,firstEmptyKey:void 0}}(e);if(t.containsEmpty)throw new Error(o+t.firstEmptyKey);return n.encode(e,{sortKeys:!0})}function s(e){return n.decode(e)}},6963:(e,t,r)=>{"use strict";r.d(t,{T:()=>o,u:()=>i});var n=r(2486).Buffer;function o(e){if("bigint"!=typeof e&&!Number.isInteger(e)||e<0||e>BigInt("0xffffffffffffffff"))throw new Error("Input is not a 64-bit unsigned integer");const t=n.allocUnsafe(8);return t.writeBigUInt64BE(BigInt(e)),new Uint8Array(t)}function i(e,t="safe"){if("safe"!==t&&"mixed"!==t&&"bigint"!==t)throw new Error(`Unknown decodingMode option: ${t}`);if(0===e.byteLength||e.byteLength>8)throw new Error(`Data has unacceptable length. Expected length is between 1 and 8, got ${e.byteLength}`);const r=n.allocUnsafe(8-e.byteLength);r.fill(0);const o=n.concat([r,n.from(e)]).readBigUInt64BE(),i=o>Number.MAX_SAFE_INTEGER;if("safe"===t){if(i)throw new Error(`Integer exceeds maximum safe integer: ${o.toString()}. Try decoding with "mixed" or "safe" decodingMode.`);return Number(o)}return"mixed"!==t||i?o:Number(o)}},1063:(e,t,r)=>{"use strict";r.r(t),r.d(t,{TxGroup:()=>u,computeGroupID:()=>l,assignGroupID:()=>p,default:()=>h});var n=r(9417),o=r(9404),i=r(3033),s=r(7116),a=r(413),c=r(2486).Buffer;class u{constructor(e){if(this.name="Transaction group",this.tag=c.from("TG"),e.length>16){const t=`${e.length.toString()} transactions grouped together but max group size is ${16..toString()}`;throw Error(t)}this.txGroupHashes=e}get_obj_for_encoding(){return{txlist:this.txGroupHashes}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);t.name="Transaction group",t.tag=c.from("TG"),t.txGroupHashes=[];for(const r of e.txlist)t.txGroupHashes.push(c.from(r));return t}toByte(){return i.encode(this.get_obj_for_encoding())}}function l(e){const t=[];for(const r of e){const e=n.instantiateTxnIfNeeded(r);t.push(e.rawTxID())}const r=new u(t),i=r.toByte(),s=c.from(a.concatArrays(r.tag,i)),l=o.genericHash(s);return c.from(l)}function p(e,t){const r=l(e),o=[];for(const i of e){const e=n.instantiateTxnIfNeeded(i);t&&s.encodeAddress(e.from.publicKey)!==t||(e.group=r,o.push(e))}return o}const h=u},5583:(e,t,r)=>{"use strict";r.r(t),r.d(t,{checkByteConstBlock:()=>f,checkIntConstBlock:()=>h,checkProgram:()=>p,checkPushByteOp:()=>g,checkPushIntOp:()=>d,langspecEvalMaxVersion:()=>y,langspecLogicSigVersion:()=>m,parseUvarint:()=>i,readProgram:()=>l});const n=JSON.parse('{"z_":6,"BV":5,"AP":[{"Opcode":0,"Name":"err","Cost":1,"Size":1,"Doc":"Fail immediately.","Groups":["Flow Control"]},{"Opcode":1,"Name":"sha256","Args":"B","Returns":"B","Cost":35,"Size":1,"Doc":"SHA256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":2,"Name":"keccak256","Args":"B","Returns":"B","Cost":130,"Size":1,"Doc":"Keccak256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":3,"Name":"sha512_256","Args":"B","Returns":"B","Cost":45,"Size":1,"Doc":"SHA512_256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":4,"Name":"ed25519verify","Args":"BBB","Returns":"U","Cost":1900,"Size":1,"Doc":"for (data A, signature B, pubkey C) verify the signature of (\\"ProgData\\" || program_hash || data) against the pubkey => {0 or 1}","DocExtra":"The 32 byte public key is the last element on the stack, preceded by the 64 byte signature at the second-to-last element on the stack, preceded by the data which was signed at the third-to-last element on the stack.","Groups":["Arithmetic"]},{"Opcode":5,"Name":"ecdsa_verify","Args":"BBBBB","Returns":"U","Cost":1700,"Size":2,"Doc":"for (data A, signature B, C and pubkey D, E) verify the signature of the data against the pubkey => {0 or 1}","DocExtra":"The 32 byte Y-component of a public key is the last element on the stack, preceded by X-component of a pubkey, preceded by S and R components of a signature, preceded by the data that is fifth element on the stack. All values are big-endian encoded. The signed data must be 32 bytes long, and signatures in lower-S form are only accepted.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":6,"Name":"ecdsa_pk_decompress","Args":"B","Returns":"BB","Cost":650,"Size":2,"Doc":"decompress pubkey A into components X, Y","DocExtra":"The 33 byte public key in a compressed form to be decompressed into X and Y (top) components. All values are big-endian encoded.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":7,"Name":"ecdsa_pk_recover","Args":"BUBB","Returns":"BB","Cost":2000,"Size":2,"Doc":"for (data A, recovery id B, signature C, D) recover a public key","DocExtra":"S (top) and R elements of a signature, recovery id and data (bottom) are expected on the stack and used to deriver a public key. All values are big-endian encoded. The signed data must be 32 bytes long.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":8,"Name":"+","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A plus B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `addw`.","Groups":["Arithmetic"]},{"Opcode":9,"Name":"-","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A minus B. Fail if B > A.","Groups":["Arithmetic"]},{"Opcode":10,"Name":"/","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by B (truncated division). Fail if B == 0.","DocExtra":"`divmodw` is available to divide the two-element values produced by `mulw` and `addw`.","Groups":["Arithmetic"]},{"Opcode":11,"Name":"*","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `mulw`.","Groups":["Arithmetic"]},{"Opcode":12,"Name":"<","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":13,"Name":">","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":14,"Name":"<=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":15,"Name":">=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":16,"Name":"&&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero and B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":17,"Name":"||","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero or B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":18,"Name":"==","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":19,"Name":"!=","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is not equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":20,"Name":"!","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"A == 0 yields 1; else 0","Groups":["Arithmetic"]},{"Opcode":21,"Name":"len","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"yields length of byte value A","Groups":["Arithmetic"]},{"Opcode":22,"Name":"itob","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"converts uint64 A to big endian bytes","Groups":["Arithmetic"]},{"Opcode":23,"Name":"btoi","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"converts bytes A as big endian to uint64","DocExtra":"`btoi` fails if the input is longer than 8 bytes.","Groups":["Arithmetic"]},{"Opcode":24,"Name":"%","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A modulo B. Fail if B == 0.","Groups":["Arithmetic"]},{"Opcode":25,"Name":"|","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-or B","Groups":["Arithmetic"]},{"Opcode":26,"Name":"&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-and B","Groups":["Arithmetic"]},{"Opcode":27,"Name":"^","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-xor B","Groups":["Arithmetic"]},{"Opcode":28,"Name":"~","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"bitwise invert value A","Groups":["Arithmetic"]},{"Opcode":29,"Name":"mulw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A times B as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low","Groups":["Arithmetic"]},{"Opcode":30,"Name":"addw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A plus B as a 128-bit result. X is the carry-bit, Y is the low-order 64 bits.","Groups":["Arithmetic"]},{"Opcode":31,"Name":"divmodw","Args":"UUUU","Returns":"UUUU","Cost":20,"Size":1,"Doc":"W,X = (A,B / C,D); Y,Z = (A,B modulo C,D)","DocExtra":"The notation J,K indicates that two uint64 values J and K are interpreted as a uint128 value, with J as the high uint64 and K the low.","Groups":["Arithmetic"]},{"Opcode":32,"Name":"intcblock","Cost":1,"Size":0,"Doc":"prepare block of uint64 constants for use by intc","DocExtra":"`intcblock` loads following program bytes into an array of integer constants in the evaluator. These integer constants can be referred to by `intc` and `intc_*` which will push the value onto the stack. Subsequent calls to `intcblock` reset and replace the integer constants available to the script.","ImmediateNote":"{varuint length} [{varuint value}, ...]","Groups":["Loading Values"]},{"Opcode":33,"Name":"intc","Returns":"U","Cost":1,"Size":2,"Doc":"Ith constant from intcblock","ImmediateNote":"{uint8 int constant index}","Groups":["Loading Values"]},{"Opcode":34,"Name":"intc_0","Returns":"U","Cost":1,"Size":1,"Doc":"constant 0 from intcblock","Groups":["Loading Values"]},{"Opcode":35,"Name":"intc_1","Returns":"U","Cost":1,"Size":1,"Doc":"constant 1 from intcblock","Groups":["Loading Values"]},{"Opcode":36,"Name":"intc_2","Returns":"U","Cost":1,"Size":1,"Doc":"constant 2 from intcblock","Groups":["Loading Values"]},{"Opcode":37,"Name":"intc_3","Returns":"U","Cost":1,"Size":1,"Doc":"constant 3 from intcblock","Groups":["Loading Values"]},{"Opcode":38,"Name":"bytecblock","Cost":1,"Size":0,"Doc":"prepare block of byte-array constants for use by bytec","DocExtra":"`bytecblock` loads the following program bytes into an array of byte-array constants in the evaluator. These constants can be referred to by `bytec` and `bytec_*` which will push the value onto the stack. Subsequent calls to `bytecblock` reset and replace the bytes constants available to the script.","ImmediateNote":"{varuint length} [({varuint value length} bytes), ...]","Groups":["Loading Values"]},{"Opcode":39,"Name":"bytec","Returns":"B","Cost":1,"Size":2,"Doc":"Ith constant from bytecblock","ImmediateNote":"{uint8 byte constant index}","Groups":["Loading Values"]},{"Opcode":40,"Name":"bytec_0","Returns":"B","Cost":1,"Size":1,"Doc":"constant 0 from bytecblock","Groups":["Loading Values"]},{"Opcode":41,"Name":"bytec_1","Returns":"B","Cost":1,"Size":1,"Doc":"constant 1 from bytecblock","Groups":["Loading Values"]},{"Opcode":42,"Name":"bytec_2","Returns":"B","Cost":1,"Size":1,"Doc":"constant 2 from bytecblock","Groups":["Loading Values"]},{"Opcode":43,"Name":"bytec_3","Returns":"B","Cost":1,"Size":1,"Doc":"constant 3 from bytecblock","Groups":["Loading Values"]},{"Opcode":44,"Name":"arg","Returns":"B","Cost":1,"Size":2,"Doc":"Nth LogicSig argument","ImmediateNote":"{uint8 arg index N}","Groups":["Loading Values"]},{"Opcode":45,"Name":"arg_0","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 0","Groups":["Loading Values"]},{"Opcode":46,"Name":"arg_1","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 1","Groups":["Loading Values"]},{"Opcode":47,"Name":"arg_2","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 2","Groups":["Loading Values"]},{"Opcode":48,"Name":"arg_3","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 3","Groups":["Loading Values"]},{"Opcode":49,"Name":"txn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of current transaction","DocExtra":"FirstValidTime causes the program to fail. The field is reserved for future use.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":50,"Name":"global","Returns":".","Cost":1,"Size":2,"Doc":"global field F","ImmediateNote":"{uint8 global field index}","Groups":["Loading Values"]},{"Opcode":51,"Name":"gtxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If this transaction is _i_ in the group, `gtxn i field` is equivalent to `txn field`.","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":52,"Name":"load","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value. All scratch spaces are 0 at program start.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":53,"Name":"store","Args":".","Cost":1,"Size":2,"Doc":"store A to the Ith scratch space","ImmediateNote":"{uint8 position in scratch space to store to}","Groups":["Loading Values"]},{"Opcode":54,"Name":"txna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":55,"Name":"gtxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":56,"Name":"gtxns","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Ath transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If top of stack is _i_, `gtxns field` is equivalent to `gtxn _i_ field`. gtxns exists so that _i_ can be calculated, often based on the index of the current transaction.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":57,"Name":"gtxnsa","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":58,"Name":"gload","Returns":".","Cost":1,"Size":3,"Doc":"Ith scratch space value of the Tth transaction in the current group","DocExtra":"`gload` fails unless the requested transaction is an ApplicationCall and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index} {uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":59,"Name":"gloads","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value of the Ath transaction in the current group","DocExtra":"`gloads` fails unless the requested transaction is an ApplicationCall and A < GroupIndex.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":60,"Name":"gaid","Returns":"U","Cost":1,"Size":2,"Doc":"ID of the asset or application created in the Tth transaction of the current group","DocExtra":"`gaid` fails unless the requested transaction created an asset or application and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index}","Groups":["Loading Values"]},{"Opcode":61,"Name":"gaids","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"ID of the asset or application created in the Ath transaction of the current group","DocExtra":"`gaids` fails unless the requested transaction created an asset or application and A < GroupIndex.","Groups":["Loading Values"]},{"Opcode":62,"Name":"loads","Args":"U","Returns":".","Cost":1,"Size":1,"Doc":"Ath scratch space value.  All scratch spaces are 0 at program start.","Groups":["Loading Values"]},{"Opcode":63,"Name":"stores","Args":"U.","Cost":1,"Size":1,"Doc":"store B to the Ath scratch space","Groups":["Loading Values"]},{"Opcode":64,"Name":"bnz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is not zero","DocExtra":"The `bnz` instruction opcode 0x40 is followed by two immediate data bytes which are a high byte first and low byte second which together form a 16 bit offset which the instruction may branch to. For a bnz instruction at `pc`, if the last element of the stack is not zero then branch to instruction at `pc + 3 + N`, else proceed to next instruction at `pc + 3`. Branch targets must be aligned instructions. (e.g. Branching to the second byte of a 2 byte op will be rejected.) Starting at v4, the offset is treated as a signed 16 bit integer allowing for backward branches and looping. In prior version (v1 to v3), branch offsets are limited to forward branches only, 0-0x7fff.\\n\\nAt v2 it became allowed to branch to the end of the program exactly after the last instruction: bnz to byte N (with 0-indexing) was illegal for a TEAL program with N bytes before v2, and is legal after it. This change eliminates the need for a last instruction of no-op as a branch target at the end. (Branching beyond the end--in other words, to a byte larger than N--is still illegal and will cause the program to fail.)","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":65,"Name":"bz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is zero","DocExtra":"See `bnz` for details on how branches work. `bz` inverts the behavior of `bnz`.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":66,"Name":"b","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET","DocExtra":"See `bnz` for details on how branches work. `b` always jumps to the offset.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":67,"Name":"return","Args":"U","Cost":1,"Size":1,"Doc":"use A as success value; end","Groups":["Flow Control"]},{"Opcode":68,"Name":"assert","Args":"U","Cost":1,"Size":1,"Doc":"immediately fail unless A is a non-zero number","Groups":["Flow Control"]},{"Opcode":72,"Name":"pop","Args":".","Cost":1,"Size":1,"Doc":"discard A","Groups":["Flow Control"]},{"Opcode":73,"Name":"dup","Args":".","Returns":"..","Cost":1,"Size":1,"Doc":"duplicate A","Groups":["Flow Control"]},{"Opcode":74,"Name":"dup2","Args":"..","Returns":"....","Cost":1,"Size":1,"Doc":"duplicate A and B","Groups":["Flow Control"]},{"Opcode":75,"Name":"dig","Args":".","Returns":"..","Cost":1,"Size":2,"Doc":"Nth value from the top of the stack. dig 0 is equivalent to dup","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":76,"Name":"swap","Args":"..","Returns":"..","Cost":1,"Size":1,"Doc":"swaps A and B on stack","Groups":["Flow Control"]},{"Opcode":77,"Name":"select","Args":"..U","Returns":".","Cost":1,"Size":1,"Doc":"selects one of two values based on top-of-stack: B if C != 0, else A","Groups":["Flow Control"]},{"Opcode":78,"Name":"cover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove top of stack, and place it deeper in the stack such that N elements are above it. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":79,"Name":"uncover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove the value at depth N in the stack and shift above items down so the Nth deep value is on top of the stack. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":80,"Name":"concat","Args":"BB","Returns":"B","Cost":1,"Size":1,"Doc":"join A and B","DocExtra":"`concat` fails if the result would be greater than 4096 bytes.","Groups":["Arithmetic"]},{"Opcode":81,"Name":"substring","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including E. If E < S, or either is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 end position}","Groups":["Byte Array Manipulation"]},{"Opcode":82,"Name":"substring3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including C. If C < B, or either is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":83,"Name":"getbit","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"Bth bit of (byte-array or integer) A.","DocExtra":"see explanation of bit ordering in setbit","Groups":["Arithmetic"]},{"Opcode":84,"Name":"setbit","Args":".UU","Returns":".","Cost":1,"Size":1,"Doc":"Copy of (byte-array or integer) A, with the Bth bit set to (0 or 1) C","DocExtra":"When A is a uint64, index 0 is the least significant bit. Setting bit 3 to 1 on the integer 0 yields 8, or 2^3. When A is a byte array, index 0 is the leftmost bit of the leftmost byte. Setting bits 0 through 11 to 1 in a 4-byte-array of 0s yields the byte array 0xfff00000. Setting bit 3 to 1 on the 1-byte-array 0x00 yields the byte array 0x10.","Groups":["Arithmetic"]},{"Opcode":85,"Name":"getbyte","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"Bth byte of A, as an integer","Groups":["Arithmetic"]},{"Opcode":86,"Name":"setbyte","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"Copy of A with the Bth byte set to small integer (between 0..255) C","Groups":["Arithmetic"]},{"Opcode":87,"Name":"extract","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including S+L. If L is 0, then extract to the end of the string. If S or S+L is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 length}","Groups":["Byte Array Manipulation"]},{"Opcode":88,"Name":"extract3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including B+C. If B+C is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":89,"Name":"extract_uint16","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint16 formed from a range of big-endian bytes from A starting at B up to but not including B+2. If B+2 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":90,"Name":"extract_uint32","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint32 formed from a range of big-endian bytes from A starting at B up to but not including B+4. If B+4 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":91,"Name":"extract_uint64","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint64 formed from a range of big-endian bytes from A starting at B up to but not including B+8. If B+8 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":96,"Name":"balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get balance for account A, in microalgos. The balance is observed after the effects of previous transactions in the group, and after the fee for the current transaction is deducted.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":97,"Name":"app_opted_in","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"1 if account A is opted in to application B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: 1 if opted in and 0 otherwise.","Groups":["State Access"]},{"Opcode":98,"Name":"app_local_get","Args":".B","Returns":".","Cost":1,"Size":1,"Doc":"local state of the key B in the current application in account A","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":99,"Name":"app_local_get_ex","Args":".UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the local state of application B, key C in account A. Y is 1 if key existed, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":100,"Name":"app_global_get","Args":"B","Returns":".","Cost":1,"Size":1,"Doc":"global state of the key A in the current application","DocExtra":"params: state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":101,"Name":"app_global_get_ex","Args":"UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the global state of application A, key B. Y is 1 if key existed, else 0","DocExtra":"params: Txn.ForeignApps offset (or, since v4, an _available_ application id), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":102,"Name":"app_local_put","Args":".B.","Cost":1,"Size":1,"Doc":"write C to key B in account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key, value.","Groups":["State Access"]},{"Opcode":103,"Name":"app_global_put","Args":"B.","Cost":1,"Size":1,"Doc":"write B to key A in the global state of the current application","Groups":["State Access"]},{"Opcode":104,"Name":"app_local_del","Args":".B","Cost":1,"Size":1,"Doc":"delete key B from account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key.\\n\\nDeleting a key which is already absent has no effect on the application local state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":105,"Name":"app_global_del","Args":"B","Cost":1,"Size":1,"Doc":"delete key A from the global state of the current application","DocExtra":"params: state key.\\n\\nDeleting a key which is already absent has no effect on the application global state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":112,"Name":"asset_holding_get","Args":".U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetBalance","AssetFrozen"],"ArgEnumTypes":"UU","Doc":"X is field F from account A\'s holding of asset B. Y is 1 if A is opted into B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ address), asset id (or, since v4, a Txn.ForeignAssets offset). Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset holding field index}","Groups":["State Access"]},{"Opcode":113,"Name":"asset_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetTotal","AssetDecimals","AssetDefaultFrozen","AssetUnitName","AssetName","AssetURL","AssetMetadataHash","AssetManager","AssetReserve","AssetFreeze","AssetClawback","AssetCreator"],"ArgEnumTypes":"UUUBBBBBBBBB","Doc":"X is field F from asset A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignAssets offset (or, since v4, an _available_ asset id. Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset params field index}","Groups":["State Access"]},{"Opcode":114,"Name":"app_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AppApprovalProgram","AppClearStateProgram","AppGlobalNumUint","AppGlobalNumByteSlice","AppLocalNumUint","AppLocalNumByteSlice","AppExtraProgramPages","AppCreator","AppAddress"],"ArgEnumTypes":"BBUUUUUBB","Doc":"X is field F from app A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignApps offset or an _available_ app id. Return: did_exist flag (1 if the application existed and 0 otherwise), value.","ImmediateNote":"{uint8 app params field index}","Groups":["State Access"]},{"Opcode":115,"Name":"acct_params_get","Args":".","Returns":".U","Cost":1,"Size":2,"Doc":"X is field F from account A. Y is 1 if A owns positive algos, else 0","ImmediateNote":"{uint8 account params field index}","Groups":["State Access"]},{"Opcode":120,"Name":"min_balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get minimum required balance for account A, in microalgos. Required balance is affected by [ASA](https://developer.algorand.org/docs/features/asa/#assets-overview) and [App](https://developer.algorand.org/docs/features/asc1/stateful/#minimum-balance-requirement-for-a-smart-contract) usage. When creating or opting into an app, the minimum balance grows before the app code runs, therefore the increase is visible there. When deleting or closing out, the minimum balance decreases after the app executes.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":128,"Name":"pushbytes","Returns":"B","Cost":1,"Size":0,"Doc":"immediate BYTES","DocExtra":"pushbytes args are not added to the bytecblock during assembly processes","ImmediateNote":"{varuint length} {bytes}","Groups":["Loading Values"]},{"Opcode":129,"Name":"pushint","Returns":"U","Cost":1,"Size":0,"Doc":"immediate UINT","DocExtra":"pushint args are not added to the intcblock during assembly processes","ImmediateNote":"{varuint int}","Groups":["Loading Values"]},{"Opcode":136,"Name":"callsub","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET, saving the next instruction on the call stack","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":137,"Name":"retsub","Cost":1,"Size":1,"Doc":"pop the top instruction from the call stack and branch to it","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","Groups":["Flow Control"]},{"Opcode":144,"Name":"shl","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times 2^B, modulo 2^64","Groups":["Arithmetic"]},{"Opcode":145,"Name":"shr","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by 2^B","Groups":["Arithmetic"]},{"Opcode":146,"Name":"sqrt","Args":"U","Returns":"U","Cost":4,"Size":1,"Doc":"The largest integer I such that I^2 <= A","Groups":["Arithmetic"]},{"Opcode":147,"Name":"bitlen","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"The highest set bit in A. If A is a byte-array, it is interpreted as a big-endian unsigned integer. bitlen of 0 is 0, bitlen of 8 is 4","DocExtra":"bitlen interprets arrays as big-endian integers, unlike setbit/getbit","Groups":["Arithmetic"]},{"Opcode":148,"Name":"exp","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A raised to the Bth power. Fail if A == B == 0 and on overflow","Groups":["Arithmetic"]},{"Opcode":149,"Name":"expw","Args":"UU","Returns":"UU","Cost":10,"Size":1,"Doc":"A raised to the Bth power as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low. Fail if A == B == 0 or if the results exceeds 2^128-1","Groups":["Arithmetic"]},{"Opcode":150,"Name":"bsqrt","Args":"B","Returns":"B","Cost":40,"Size":1,"Doc":"The largest integer I such that I^2 <= A. A and I are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":151,"Name":"divw","Args":"UUU","Returns":"U","Cost":1,"Size":1,"Doc":"A,B / C. Fail if C == 0 or if result overflows.","DocExtra":"The notation A,B indicates that A and B are interpreted as a uint128 value, with A as the high uint64 and B the low.","Groups":["Arithmetic"]},{"Opcode":160,"Name":"b+","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A plus B. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":161,"Name":"b-","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A minus B. A and B are interpreted as big-endian unsigned integers. Fail on underflow.","Groups":["Byte Array Arithmetic"]},{"Opcode":162,"Name":"b/","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A divided by B (truncated division). A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":163,"Name":"b*","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A times B. A and B are interpreted as big-endian unsigned integers.","Groups":["Byte Array Arithmetic"]},{"Opcode":164,"Name":"b<","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":165,"Name":"b>","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":166,"Name":"b<=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":167,"Name":"b>=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":168,"Name":"b==","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":169,"Name":"b!=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"0 if A is equal to B, else 1. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":170,"Name":"b%","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A modulo B. A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":171,"Name":"b|","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-or B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":172,"Name":"b&","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-and B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":173,"Name":"b^","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-xor B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":174,"Name":"b~","Args":"B","Returns":"B","Cost":4,"Size":1,"Doc":"A with all bits inverted","Groups":["Byte Array Logic"]},{"Opcode":175,"Name":"bzero","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"zero filled byte-array of length A","Groups":["Loading Values"]},{"Opcode":176,"Name":"log","Args":"B","Cost":1,"Size":1,"Doc":"write A to log state of the current application","DocExtra":"`log` fails if called more than MaxLogCalls times in a program, or if the sum of logged bytes exceeds 1024 bytes.","Groups":["State Access"]},{"Opcode":177,"Name":"itxn_begin","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in a new transaction group","DocExtra":"`itxn_begin` initializes Sender to the application address; Fee to the minimum allowable, taking into account MinTxnFee and credit from overpaying in earlier transactions; FirstValid/LastValid to the values in the invoking transaction, and all other fields to zero or empty values.","Groups":["Inner Transactions"]},{"Opcode":178,"Name":"itxn_field","Args":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"set field F of the current inner transaction to A","DocExtra":"`itxn_field` fails if A is of the wrong type for F, including a byte array of the wrong size for use as an address when F is an address field. `itxn_field` also fails if A is an account, asset, or app that is not _available_, or an attempt is made extend an array field beyond the limit imposed by consensus parameters. (Addresses set into asset params of acfg transactions need not be _available_.)","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":179,"Name":"itxn_submit","Cost":1,"Size":1,"Doc":"execute the current inner transaction group. Fail if executing this group would exceed the inner transaction limit, or if any transaction in the group fails.","DocExtra":"`itxn_submit` resets the current transaction so that it can not be resubmitted. A new `itxn_begin` is required to prepare another inner transaction.","Groups":["Inner Transactions"]},{"Opcode":180,"Name":"itxn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":181,"Name":"itxna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":182,"Name":"itxn_next","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in the same transaction group","DocExtra":"`itxn_next` initializes the transaction exactly as `itxn_begin` does","Groups":["Inner Transactions"]},{"Opcode":183,"Name":"gitxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":184,"Name":"gitxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":192,"Name":"txnas","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":193,"Name":"gtxnas","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":194,"Name":"gtxnsas","Args":"UU","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Bth value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":195,"Name":"args","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"Ath LogicSig argument","Groups":["Loading Values"]},{"Opcode":196,"Name":"gloadss","Args":"UU","Returns":".","Cost":1,"Size":1,"Doc":"Bth scratch space value of the Ath transaction in the current group","Groups":["Loading Values"]},{"Opcode":197,"Name":"itxnas","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ath value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":198,"Name":"gitxnas","Args":"U","Returns":".","Cost":1,"Size":3,"Doc":"Ath value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]}]}');let o;function i(e){let t=0,r=0;for(let n=0;n<e.length;n++){const o=e[n];if(o<128)return n>9||9===n&&o>1?[0,-(n+1)]:[t|o<<r,n+1];t+=(127&o)<<r,r+=7}return[0,0]}function s(e,t){let r=1;const n=i(e.slice(t+r)),o=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode int const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<o;n++){if(t+r>=e.length)throw new Error("intcblock ran past end of program");let o;if([o,s]=i(e.slice(t+r)),s<=0)throw new Error(`could not decode int const[${n}] block size at pc=${t+r}`);a.push(o),r+=s}return[r,a]}function a(e,t){let r=1;const n=i(e.slice(t+r)),o=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode []byte const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<o;n++){if(t+r>=e.length)throw new Error("bytecblock ran past end of program");let o;if([o,s]=i(e.slice(t+r)),s<=0)throw new Error(`could not decode []byte] const[${n}] block size at pc=${t+r}`);if(r+=s,t+r+o>e.length)throw new Error("bytecblock ran past end of program");const c=e.slice(t+r,t+r+o);a.push(c),r+=o}return[r,a]}function c(e,t){let r=1;const[n,o]=i(e.slice(t+r));if(o<=0)throw new Error(`could not decode push int const at pc=${t+r}`);return r+=o,[r,n]}function u(e,t){let r=1;const[n,o]=i(e.slice(t+r));if(o<=0)throw new Error(`could not decode push []byte const size at pc=${t+r}`);if(r+=o,t+r+n>e.length)throw new Error("pushbytes ran past end of program");const s=e.slice(t+r,t+r+n);return r+=n,[r,s]}function l(e,t){if(!e)throw new Error("empty program");if(void 0===t&&(t=[]),!Array.isArray(t))throw new Error("invalid arguments");const[r,l]=i(e);if(l<=0)throw new Error("version parsing error");if(r>n.z_)throw new Error("unsupported version");let p=0,{length:h}=e;for(const e of t)h+=e.length;if(h>1e3)throw new Error("program too long");if(!o){o={};for(const e of n.AP)o[e.Opcode]=e}let f=l,d=[],g=[];for(;f<e.length;){const t=o[e[f]];if(void 0===t)throw new Error("invalid instruction");p+=t.Cost;let r=t.Size;if(0===r)switch(t.Opcode){case 32:{let t;[r,t]=s(e,f),d=d.concat(t);break}case 38:{let t;[r,t]=a(e,f),g=g.concat(t);break}case 129:{let t;[r,t]=c(e,f),d.push(t);break}case 128:{let t;[r,t]=u(e,f),g.push(t);break}default:throw new Error("invalid instruction")}f+=r}if(r<4&&p>2e4)throw new Error("program too costly for Teal version < 4. consider using v4.");return[d,g,!0]}function p(e,t){const[,,r]=l(e,t);return r}function h(e,t){const[r]=s(e,t);return r}function f(e,t){const[r]=a(e,t);return r}function d(e,t){const[r]=c(e,t);return r}function g(e,t){const[r]=u(e,t);return r}const y=n.z_,m=n.BV},8800:(e,t,r)=>{"use strict";r.r(t),r.d(t,{LogicSig:()=>p,LogicSigAccount:()=>h,makeLogicSig:()=>f,signLogicSigTransactionObject:()=>d,signLogicSigTransaction:()=>g,logicSigFromByte:()=>y,tealSign:()=>b,tealSignFromProgram:()=>w});var n=r(9404),o=r(7116),i=r(3033),s=r(5583),a=r(4158),c=r(413),u=r(9417),l=r(2486).Buffer;class p{constructor(e,t){if(this.tag=l.from("Program"),t&&(!Array.isArray(t)||!t.every((e=>e.constructor===Uint8Array||l.isBuffer(e)))))throw new TypeError("Invalid arguments");let r;if(null!=t&&(r=t.map((e=>new Uint8Array(e)))),!s.checkProgram(e,r))throw new Error("Invalid program");this.logic=e,this.args=r,this.sig=void 0,this.msig=void 0}get_obj_for_encoding(){const e={l:this.logic};return this.args&&(e.arg=this.args),this.sig?e.sig=this.sig:this.msig&&(e.msig=this.msig),e}static from_obj_for_encoding(e){const t=new p(e.l,e.arg);return t.sig=e.sig,t.msig=e.msig,t}verify(e){if(this.sig&&this.msig)return!1;try{s.checkProgram(this.logic,this.args)}catch(e){return!1}const t=c.concatArrays(this.tag,this.logic);if(!this.sig&&!this.msig){const r=n.genericHash(t);return c.arrayEqual(r,e)}return this.sig?n.verify(t,this.sig,e):(0,a.F2)(t,this.msig,e)}address(){const e=c.concatArrays(this.tag,this.logic),t=n.genericHash(e);return o.encodeAddress(new Uint8Array(t))}sign(e,t){if(null==t)this.sig=this.signProgram(e);else{const r=t.addrs.map((e=>({pk:o.decodeAddress(e).publicKey})));this.msig={v:t.version,thr:t.threshold,subsig:r};const[n,i]=this.singleSignMultisig(e,this.msig);this.msig.subsig[i].s=n}}appendToMultisig(e){if(void 0===this.msig)throw new Error("no multisig present");const[t,r]=this.singleSignMultisig(e,this.msig);this.msig.subsig[r].s=t}signProgram(e){const t=c.concatArrays(this.tag,this.logic);return n.sign(t,e)}singleSignMultisig(e,t){let r=-1;const o=n.keyPairFromSecretKey(e).publicKey;for(let e=0;e<t.subsig.length;e++){const{pk:n}=t.subsig[e];if(c.arrayEqual(n,o)){r=e;break}}if(-1===r)throw new Error("invalid secret key");return[this.signProgram(e),r]}toByte(){return i.encode(this.get_obj_for_encoding())}static fromByte(e){const t=i.decode(e);return p.from_obj_for_encoding(t)}}class h{constructor(e,t){this.lsig=new p(e,t),this.sigkey=void 0}get_obj_for_encoding(){const e={lsig:this.lsig.get_obj_for_encoding()};return this.sigkey&&(e.sigkey=this.sigkey),e}static from_obj_for_encoding(e){const t=new h(e.lsig.l,e.lsig.arg);return t.lsig=p.from_obj_for_encoding(e.lsig),t.sigkey=e.sigkey,t}toByte(){return i.encode(this.get_obj_for_encoding())}static fromByte(e){const t=i.decode(e);return h.from_obj_for_encoding(t)}isDelegated(){return!(!this.lsig.sig&&!this.lsig.msig)}verify(){const e=this.address();return this.lsig.verify(o.decodeAddress(e).publicKey)}address(){if(this.lsig.sig&&this.lsig.msig)throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");if(this.lsig.sig){if(!this.sigkey)throw new Error("Signing key for delegated account is missing");return o.encodeAddress(this.sigkey)}if(this.lsig.msig){const e={version:this.lsig.msig.v,threshold:this.lsig.msig.thr,pks:this.lsig.msig.subsig.map((e=>e.pk))};return o.encodeAddress(o.fromMultisigPreImg(e))}return this.lsig.address()}signMultisig(e,t){this.lsig.sign(t,e)}appendToMultisig(e){this.lsig.appendToMultisig(e)}sign(e){this.lsig.sign(e),this.sigkey=n.keyPairFromSecretKey(e).publicKey}}function f(e,t){return new p(e,t)}function d(e,t){let r,s;if(t instanceof h)r=t.lsig,s=o.decodeAddress(t.address()).publicKey;else if(r=t,r.sig)s=e.from.publicKey;else if(r.msig){const e={version:r.msig.v,threshold:r.msig.thr,pks:r.msig.subsig.map((e=>e.pk))};s=o.fromMultisigPreImg(e)}else s=o.decodeAddress(r.address()).publicKey;return function(e,t,r){if(!t.verify(r))throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");const o={lsig:t.get_obj_for_encoding(),txn:e.get_obj_for_encoding()};return n.bytesEqual(r,e.from.publicKey)||(o.sgnr=l.from(r)),{txID:e.txID().toString(),blob:i.encode(o)}}(e,r,s)}function g(e,t){return d(u.instantiateTxnIfNeeded(e),t)}function y(e){return p.fromByte(e)}const m=l.from("ProgData");function b(e,t,r){const i=c.concatArrays(o.decodeAddress(r).publicKey,t),s=l.from(c.concatArrays(m,i));return n.sign(s,e)}function w(e,t,r){return b(e,t,new p(r).address())}},6608:(e,t,r)=>{"use strict";r.r(t),r.d(t,{MULTISIG_BAD_SENDER_ERROR_MSG:()=>N,signTransaction:()=>P,signBid:()=>L,signBytes:()=>j,verifyBytes:()=>z,encodeObj:()=>F,decodeObj:()=>M,ERROR_MULTISIG_BAD_SENDER:()=>H,ERROR_INVALID_MICROALGOS:()=>G,Algodv2:()=>d.Z,Kmd:()=>g.Z,IntDecoding:()=>y.Z,Indexer:()=>m.Z,waitForConfirmation:()=>b.K,isValidAddress:()=>o.isValidAddress,encodeAddress:()=>o.encodeAddress,decodeAddress:()=>o.decodeAddress,getApplicationAddress:()=>o.getApplicationAddress,bytesToBigInt:()=>w.v,bigIntToBytes:()=>w.j,encodeUint64:()=>v.T,decodeUint64:()=>v.u,generateAccount:()=>A.Z,modelsv2:()=>x,mnemonicToMasterDerivationKey:()=>S.OF,masterDerivationKeyToMnemonic:()=>S.vC,secretKeyToMnemonic:()=>S.QX,mnemonicToSecretKey:()=>S.Ch,seedFromMnemonic:()=>S.mE,mnemonicFromSeed:()=>S.w3,microalgosToAlgos:()=>l._,algosToMicroalgos:()=>l.HN,INVALID_MICROALGOS_ERROR_MSG:()=>l.rD,computeGroupID:()=>_.computeGroupID,assignGroupID:()=>_.assignGroupID,LogicSigAccount:()=>E.LogicSigAccount,makeLogicSig:()=>E.makeLogicSig,signLogicSigTransaction:()=>E.signLogicSigTransaction,signLogicSigTransactionObject:()=>E.signLogicSigTransactionObject,logicSigFromByte:()=>E.logicSigFromByte,tealSign:()=>E.tealSign,tealSignFromProgram:()=>E.tealSignFromProgram,signMultisigTransaction:()=>T.PU,mergeMultisigTransactions:()=>T.J6,appendSignMultisigTransaction:()=>T.PO,multisigAddress:()=>T.vH,LogicTemplates:()=>q,DryrunResult:()=>B.x,createDryrun:()=>B.P,OnApplicationComplete:()=>k.OnApplicationComplete,makeApplicationCallTxnFromObject:()=>k.makeApplicationCallTxnFromObject,makeApplicationClearStateTxn:()=>k.makeApplicationClearStateTxn,makeApplicationClearStateTxnFromObject:()=>k.makeApplicationClearStateTxnFromObject,makeApplicationCloseOutTxn:()=>k.makeApplicationCloseOutTxn,makeApplicationCloseOutTxnFromObject:()=>k.makeApplicationCloseOutTxnFromObject,makeApplicationCreateTxn:()=>k.makeApplicationCreateTxn,makeApplicationCreateTxnFromObject:()=>k.makeApplicationCreateTxnFromObject,makeApplicationDeleteTxn:()=>k.makeApplicationDeleteTxn,makeApplicationDeleteTxnFromObject:()=>k.makeApplicationDeleteTxnFromObject,makeApplicationNoOpTxn:()=>k.makeApplicationNoOpTxn,makeApplicationNoOpTxnFromObject:()=>k.makeApplicationNoOpTxnFromObject,makeApplicationOptInTxn:()=>k.makeApplicationOptInTxn,makeApplicationOptInTxnFromObject:()=>k.makeApplicationOptInTxnFromObject,makeApplicationUpdateTxn:()=>k.makeApplicationUpdateTxn,makeApplicationUpdateTxnFromObject:()=>k.makeApplicationUpdateTxnFromObject,makeAssetConfigTxn:()=>k.makeAssetConfigTxn,makeAssetConfigTxnWithSuggestedParams:()=>k.makeAssetConfigTxnWithSuggestedParams,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>k.makeAssetConfigTxnWithSuggestedParamsFromObject,makeAssetCreateTxn:()=>k.makeAssetCreateTxn,makeAssetCreateTxnWithSuggestedParams:()=>k.makeAssetCreateTxnWithSuggestedParams,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>k.makeAssetCreateTxnWithSuggestedParamsFromObject,makeAssetDestroyTxn:()=>k.makeAssetDestroyTxn,makeAssetDestroyTxnWithSuggestedParams:()=>k.makeAssetDestroyTxnWithSuggestedParams,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>k.makeAssetDestroyTxnWithSuggestedParamsFromObject,makeAssetFreezeTxn:()=>k.makeAssetFreezeTxn,makeAssetFreezeTxnWithSuggestedParams:()=>k.makeAssetFreezeTxnWithSuggestedParams,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>k.makeAssetFreezeTxnWithSuggestedParamsFromObject,makeAssetTransferTxn:()=>k.makeAssetTransferTxn,makeAssetTransferTxnWithSuggestedParams:()=>k.makeAssetTransferTxnWithSuggestedParams,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>k.makeAssetTransferTxnWithSuggestedParamsFromObject,makeKeyRegistrationTxn:()=>k.makeKeyRegistrationTxn,makeKeyRegistrationTxnWithSuggestedParams:()=>k.makeKeyRegistrationTxnWithSuggestedParams,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>k.makeKeyRegistrationTxnWithSuggestedParamsFromObject,makePaymentTxn:()=>k.makePaymentTxn,makePaymentTxnWithSuggestedParams:()=>k.makePaymentTxnWithSuggestedParams,makePaymentTxnWithSuggestedParamsFromObject:()=>k.makePaymentTxnWithSuggestedParamsFromObject,ALGORAND_MIN_TX_FEE:()=>s.ALGORAND_MIN_TX_FEE,Transaction:()=>s.Transaction,decodeSignedTransaction:()=>s.decodeSignedTransaction,decodeUnsignedTransaction:()=>s.decodeUnsignedTransaction,encodeUnsignedTransaction:()=>s.encodeUnsignedTransaction,instantiateTxnIfNeeded:()=>s.instantiateTxnIfNeeded,isTransactionWithSigner:()=>U.Xw,makeBasicAccountTransactionSigner:()=>U.x7,makeLogicSigAccountTransactionSigner:()=>U.i1,makeMultiSigAccountTransactionSigner:()=>U.Vj,AtomicTransactionComposer:()=>I.A,AtomicTransactionComposerStatus:()=>I.b,TransactionType:()=>C.i,ABIAddressType:()=>R.JQ,ABIArrayDynamicType:()=>R._4,ABIArrayStaticType:()=>R.X3,ABIBoolType:()=>R.R0,ABIByteType:()=>R.jD,ABIContract:()=>R.Yh,ABIInterface:()=>R.bL,ABIMethod:()=>R.Ls,ABIReferenceType:()=>R.UV,ABIStringType:()=>R.Ax,ABITransactionType:()=>R.A9,ABITupleType:()=>R.w1,ABIType:()=>R.NK,ABIUfixedType:()=>R.RY,ABIUintType:()=>R.Pu,ADDR_BYTE_SIZE:()=>R.Vk,LENGTH_ENCODE_BYTE_SIZE:()=>R.nh,MAX_LEN:()=>R.kG,SINGLE_BOOL_SIZE:()=>R.qH,SINGLE_BYTE_SIZE:()=>R.JH,abiCheckTransactionType:()=>R.vJ,abiTypeIsReference:()=>R.o5,abiTypeIsTransaction:()=>R.AE,getMethodByName:()=>R.I5});var n=r(9404),o=r(7116),i=r(3033),s=r(9417),a=r(8886),c=r.n(a),u=r(2691),l=r(9070),p=r(413),h=r(5922),f={};for(const e in h)["default","MULTISIG_BAD_SENDER_ERROR_MSG","signTransaction","signBid","signBytes","verifyBytes","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","Algodv2","Kmd","IntDecoding","Indexer","waitForConfirmation","isValidAddress","encodeAddress","decodeAddress","getApplicationAddress","bytesToBigInt","bigIntToBytes","encodeUint64","decodeUint64","generateAccount","modelsv2","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","secretKeyToMnemonic","mnemonicToSecretKey","seedFromMnemonic","mnemonicFromSeed","microalgosToAlgos","algosToMicroalgos","INVALID_MICROALGOS_ERROR_MSG","computeGroupID","assignGroupID","LogicSigAccount","makeLogicSig","signLogicSigTransaction","signLogicSigTransactionObject","logicSigFromByte","tealSign","tealSignFromProgram","signMultisigTransaction","mergeMultisigTransactions","appendSignMultisigTransaction","multisigAddress","LogicTemplates"].indexOf(e)<0&&(f[e]=()=>h[e]);r.d(t,f);var d=r(1663),g=r(6477),y=r(7197),m=r(9582),b=r(5062),w=r(8922),v=r(6963),A=r(7988),x=r(227),S=r(3510),_=r(1063),E=r(8800),T=r(4158),B=r(4383),k=r(1988),U=r(834),I=r(3458),C=r(2380),R=r(7677),O=r(2486).Buffer;const D=O.from([77,88]),N="The transaction sender address and multisig preimage do not match.";function P(e,t){if(void 0===e.from){const r=n.keyPairFromSecretKey(t);e.from=o.encodeAddress(r.publicKey)}const r=s.instantiateTxnIfNeeded(e);return{txID:r.txID().toString(),blob:r.signTxn(t)}}function L(e,t){return new u.Z(e).signBid(t)}function j(e,t){const r=O.from(p.concatArrays(D,e));return n.sign(r,t)}function z(e,t,r){const i=O.from(p.concatArrays(D,e)),s=o.decodeAddress(r).publicKey;return n.verify(i,t,s)}function F(e){return new Uint8Array(i.encode(e))}function M(e){return i.decode(e)}const H=new Error(N),G=new Error(l.rD),q=c()},1988:(e,t,r)=>{"use strict";r.r(t),r.d(t,{makePaymentTxnWithSuggestedParams:()=>s,makePaymentTxn:()=>a,makePaymentTxnWithSuggestedParamsFromObject:()=>c,makeKeyRegistrationTxnWithSuggestedParams:()=>u,makeKeyRegistrationTxn:()=>l,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>p,makeAssetCreateTxnWithSuggestedParams:()=>h,makeAssetCreateTxn:()=>f,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>d,makeAssetConfigTxnWithSuggestedParams:()=>g,makeAssetConfigTxn:()=>y,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>m,makeAssetDestroyTxnWithSuggestedParams:()=>b,makeAssetDestroyTxn:()=>w,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>v,makeAssetFreezeTxnWithSuggestedParams:()=>A,makeAssetFreezeTxn:()=>x,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>S,makeAssetTransferTxnWithSuggestedParams:()=>_,makeAssetTransferTxn:()=>E,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>T,makeApplicationCreateTxn:()=>B,makeApplicationCreateTxnFromObject:()=>k,makeApplicationUpdateTxn:()=>U,makeApplicationUpdateTxnFromObject:()=>I,makeApplicationDeleteTxn:()=>C,makeApplicationDeleteTxnFromObject:()=>R,makeApplicationOptInTxn:()=>O,makeApplicationOptInTxnFromObject:()=>D,makeApplicationCloseOutTxn:()=>N,makeApplicationCloseOutTxnFromObject:()=>P,makeApplicationClearStateTxn:()=>L,makeApplicationClearStateTxnFromObject:()=>j,makeApplicationNoOpTxn:()=>z,makeApplicationNoOpTxnFromObject:()=>F,OnApplicationComplete:()=>o.hq,makeApplicationCallTxnFromObject:()=>M});var n=r(9417),o=r(1624),i=r(1824);function s(e,t,r,o,s,a,c){const u={from:e,to:t,amount:r,closeRemainderTo:o,note:s,suggestedParams:a,type:i.i.pay,reKeyTo:c};return new n.Transaction(u)}function a(e,t,r,n,o,i,a,c,u,l,p){return s(e,t,n,o,c,{genesisHash:u,genesisID:l,firstRound:i,lastRound:a,fee:r},p)}function c(e){return s(e.from,e.to,e.amount,e.closeRemainderTo,e.note,e.suggestedParams,e.rekeyTo)}function u(e,t,r,o,s,a,c,u,l,p=!1,h){const f={from:e,note:t,voteKey:r,selectionKey:o,voteFirst:s,voteLast:a,voteKeyDilution:c,suggestedParams:u,type:i.i.keyreg,reKeyTo:l,nonParticipation:p,stateProofKey:h};return new n.Transaction(f)}function l(e,t,r,n,o,i,s,a,c,l,p,h,f,d=!1,g){return u(e,o,a,c,l,p,h,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},f,d,g)}function p(e){return u(e.from,e.note,e.voteKey,e.selectionKey,e.voteFirst,e.voteLast,e.voteKeyDilution,e.suggestedParams,e.rekeyTo,e.nonParticipation,e.stateProofKey)}function h(e,t,r,o,s,a,c,u,l,p,h,f,d,g,y){const m={from:e,note:t,suggestedParams:g,assetTotal:r,assetDecimals:o,assetDefaultFrozen:s,assetUnitName:p,assetName:h,assetURL:f,assetMetadataHash:d,assetManager:a,assetReserve:c,assetFreeze:u,assetClawback:l,type:i.i.acfg,reKeyTo:y};return new n.Transaction(m)}function f(e,t,r,n,o,i,s,a,c,u,l,p,f,d,g,y,m,b,w){return h(e,o,a,c,u,l,p,f,d,g,y,m,b,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},w)}function d(e){return h(e.from,e.note,e.total,e.decimals,e.defaultFrozen,e.manager,e.reserve,e.freeze,e.clawback,e.unitName,e.assetName,e.assetURL,e.assetMetadataHash,e.suggestedParams,e.rekeyTo)}function g(e,t,r,o,s,a,c,u,l=!0,p){if(l&&(void 0===o||void 0===s||void 0===a||void 0===c))throw Error("strict empty address checking was turned on, but at least one empty address was provided");const h={from:e,suggestedParams:u,assetIndex:r,assetManager:o,assetReserve:s,assetFreeze:a,assetClawback:c,type:i.i.acfg,note:t,reKeyTo:p};return new n.Transaction(h)}function y(e,t,r,n,o,i,s,a,c,u,l,p,h=!0,f){return g(e,o,a,c,u,l,p,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},h,f)}function m(e){return g(e.from,e.note,e.assetIndex,e.manager,e.reserve,e.freeze,e.clawback,e.suggestedParams,e.strictEmptyAddressChecking,e.rekeyTo)}function b(e,t,r,o,s){const a={from:e,suggestedParams:o,assetIndex:r,type:i.i.acfg,note:t,reKeyTo:s};return new n.Transaction(a)}function w(e,t,r,n,o,i,s,a,c){return b(e,o,a,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},c)}function v(e){return b(e.from,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function A(e,t,r,o,s,a,c){const u={from:e,type:i.i.afrz,freezeAccount:o,assetIndex:r,freezeState:s,note:t,suggestedParams:a,reKeyTo:c};return new n.Transaction(u)}function x(e,t,r,n,o,i,s,a,c,u,l){return A(e,o,a,c,u,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},l)}function S(e){return A(e.from,e.note,e.assetIndex,e.freezeTarget,e.freezeState,e.suggestedParams,e.rekeyTo)}function _(e,t,r,o,s,a,c,u,l){const p={type:i.i.axfer,from:e,to:t,amount:s,suggestedParams:u,assetIndex:c,note:a,assetRevocationTarget:o,closeRemainderTo:r,reKeyTo:l};return new n.Transaction(p)}function E(e,t,r,n,o,i,s,a,c,u,l,p,h){return _(e,t,r,n,i,c,p,{genesisHash:u,genesisID:l,firstRound:s,lastRound:a,fee:o},h)}function T(e){return _(e.from,e.to,e.closeRemainderTo,e.revocationTarget,e.amount,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function B(e,t,r,o,s,a,c,u,l,p,h,f,d,g,y,m,b){const w={type:i.i.appl,from:e,suggestedParams:t,appIndex:0,appOnComplete:r,appLocalInts:a,appLocalByteSlices:c,appGlobalInts:u,appGlobalByteSlices:l,appApprovalProgram:o,appClearProgram:s,appArgs:p,appAccounts:h,appForeignApps:f,appForeignAssets:d,note:g,lease:y,reKeyTo:m,extraPages:b};return new n.Transaction(w)}function k(e){return B(e.from,e.suggestedParams,e.onComplete,e.approvalProgram,e.clearProgram,e.numLocalInts,e.numLocalByteSlices,e.numGlobalInts,e.numGlobalByteSlices,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.extraPages)}function U(e,t,r,s,a,c,u,l,p,h,f,d){const g={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appApprovalProgram:s,appOnComplete:o.hq.UpdateApplicationOC,appClearProgram:a,appArgs:c,appAccounts:u,appForeignApps:l,appForeignAssets:p,note:h,lease:f,reKeyTo:d};return new n.Transaction(g)}function I(e){return U(e.from,e.suggestedParams,e.appIndex,e.approvalProgram,e.clearProgram,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function C(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.DeleteApplicationOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function R(e){return C(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function O(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.OptInOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function D(e){return O(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function N(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.CloseOutOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function P(e){return N(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function L(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.ClearStateOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function j(e){return L(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function z(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.NoOpOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function F(e){return z(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function M(e){const t={type:i.i.appl,from:e.from,suggestedParams:e.suggestedParams,appIndex:e.appIndex,appOnComplete:e.onComplete,appLocalInts:e.numLocalInts,appLocalByteSlices:e.numLocalByteSlices,appGlobalInts:e.numGlobalInts,appGlobalByteSlices:e.numGlobalByteSlices,appApprovalProgram:e.approvalProgram,appClearProgram:e.clearProgram,appArgs:e.appArgs,appAccounts:e.accounts,appForeignApps:e.foreignApps,appForeignAssets:e.foreignAssets,note:e.note,lease:e.lease,reKeyTo:e.rekeyTo,extraPages:e.extraPages};return new n.Transaction(t)}},3510:(e,t,r)=>{"use strict";r.d(t,{vC:()=>g,w3:()=>l,OF:()=>d,Ch:()=>h,QX:()=>f,mE:()=>p});const n=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var o=r(9404),i=r(7116);const s="failed to decode mnemonic";function a(e){const t=[];let r=0,n=0;return e.forEach((function(e){r|=e<<n,n+=8,n>=11&&(t.push(2047&r),r>>=11,n-=11)})),n&&t.push(r),t}function c(e){return e.map((e=>n[e]))}function u(e){return c(a(o.genericHash(e)))[0]}function l(e){if(e.length!==o.SEED_BTYES_LENGTH)throw new RangeError(`Seed length must be ${o.SEED_BTYES_LENGTH}`);const t=c(a(e)),r=u(e);return`${t.join(" ")} ${r}`}function p(e){const t=e.split(" "),r=t.slice(0,24);for(const e of r)if(-1===n.indexOf(e))throw new Error("the mnemonic contains a word that is not in the wordlist");const o=t[t.length-1];let i=function(e){const t=[];let r=0,n=0;return e.forEach((function(e){for(r|=e<<n,n+=11;n>=8;)t.push(255&r),r>>=8,n-=8})),n&&t.push(r),new Uint8Array(t)}(r.map((e=>n.indexOf(e))));if(33!==i.length)throw new Error(s);if(0!==i[i.length-1])throw new Error(s);if(i=i.slice(0,i.length-1),u(i)===o)return i;throw new Error(s)}function h(e){const t=p(e),r=o.keyPairFromSeed(t);return{addr:i.encodeAddress(r.publicKey),sk:r.secretKey}}function f(e){return l(e.slice(0,o.SEED_BTYES_LENGTH))}function d(e){return p(e)}function g(e){return l(e)}},4158:(e,t,r)=>{"use strict";r.d(t,{J6:()=>h,F2:()=>f,PU:()=>d,PO:()=>g,vH:()=>y});var n=r(9404),o=r(7116),i=r(3033),s=r(9417),a=r(413),c=r(2486).Buffer;const u="Cannot merge txs. Multisig preimages differ",l="Cannot mutate a multisig field as it would invalidate all existing signatures.";class p extends s.Transaction{addLease(){throw new Error(l)}addRekey(){throw new Error(l)}signTxn(e){throw new Error("Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.")}partialSignTxn({version:e,threshold:t,pks:r},s){const a=n.keyPairFromSecretKey(s).publicKey;return function(e,{rawSig:t,myPk:r},{version:s,threshold:a,pks:u}){let l=!1;const p=u.map((e=>n.bytesEqual(e,r)?(l=!0,{pk:c.from(e),s:t}):{pk:c.from(e)}));if(!1===l)throw new Error("Key does not exist");const h={msig:{v:s,thr:a,subsig:p},txn:e},f=o.fromMultisigPreImg({version:s,threshold:a,pks:u});return o.encodeAddress(e.snd)!==o.encodeAddress(f)&&(h.sgnr=c.from(f)),new Uint8Array(i.encode(h))}(this.get_obj_for_encoding(),{rawSig:this.rawSignTxn(s),myPk:a},{version:e,threshold:t,pks:r})}static from_obj_for_encoding(e){return super.from_obj_for_encoding(e)}}function h(e){if(e.length<2)throw new Error("Not enough multisig transactions to merge. Need at least two");const t=i.decode(e[0]),r=p.from_obj_for_encoding(t.txn).txID(),n=t.sgnr?o.encodeAddress(t.sgnr):void 0,s={version:t.msig.v,threshold:t.msig.thr,pks:t.msig.subsig.map((e=>e.pk))},a=o.encodeAddress(o.fromMultisigPreImg(s));let l=t.msig.subsig;for(let s=0;s<e.length;s++){const h=i.decode(e[s]);if(p.from_obj_for_encoding(h.txn).txID()!==r)throw new Error("Cannot merge txs. txIDs differ");if(n!==(h.sgnr?o.encodeAddress(h.sgnr):void 0))throw new Error("Cannot merge txs. Auth addrs differ");if(h.msig.subsig.length!==t.msig.subsig.length)throw new Error(u);const f={version:h.msig.v,threshold:h.msig.thr,pks:h.msig.subsig.map((e=>e.pk))};if(a!==o.encodeAddress(o.fromMultisigPreImg(f)))throw new Error(u);l=h.msig.subsig.map(((e,r)=>{const n=t.msig.subsig[r];if(n.s){if(e.s&&0!==c.compare(c.from(e.s),c.from(n.s)))throw new Error("Cannot merge txs. subsigs are mismatched.");return{pk:n.pk,s:n.s}}return e.s?{pk:n.pk,s:e.s}:n}))}const h={msig:{v:t.msig.v,thr:t.msig.thr,subsig:l},txn:t.txn};return void 0!==n&&(h.sgnr=c.from(o.decodeAddress(n).publicKey)),new Uint8Array(i.encode(h))}function f(e,t,r){const i=t.v,s=t.thr,c=t.subsig,u=c.map((e=>e.pk));if(t.subsig.length<s)return!1;let l;try{l=o.fromMultisigPreImg({version:i,threshold:s,pks:u})}catch(e){return!1}if(!a.arrayEqual(l,r))return!1;let p=0;for(const e of c)void 0!==e.s&&(p+=1);if(p<s)return!1;let h=0;for(const t of c)void 0!==t.s&&n.verify(e,t.s,t.pk)&&(h+=1);return!(h<s)}function d(e,{version:t,threshold:r,addrs:n},i){const a=o.fromMultisigPreImgAddrs({version:t,threshold:r,addrs:n});Object.prototype.hasOwnProperty.call(e,"from")||(e.from=a);const c=n.map((e=>o.decodeAddress(e).publicKey));let u,l;return e instanceof s.Transaction?(u=e,l=p.prototype.partialSignTxn.call(u,{version:t,threshold:r,pks:c},i)):(u=new p(e),l=u.partialSignTxn({version:t,threshold:r,pks:c},i)),{txID:u.txID().toString(),blob:l}}function g(e,{version:t,threshold:r,addrs:n},s){const a=n.map((e=>o.decodeAddress(e).publicKey)),c=i.decode(e),u=p.from_obj_for_encoding(c.txn),l=u.partialSignTxn({version:t,threshold:r,pks:a},s);return{txID:u.txID().toString(),blob:h([e,l])}}function y({version:e,threshold:t,addrs:r}){return o.fromMultisigPreImgAddrs({version:e,threshold:t,addrs:r})}},9404:(e,t,r)=>{"use strict";r.r(t),r.d(t,{genericHash:()=>a,randomBytes:()=>c,keyPairFromSeed:()=>u,keyPair:()=>l,keyPairFromSecretKey:()=>p,sign:()=>h,bytesEqual:()=>f,verify:()=>d,PUBLIC_KEY_LENGTH:()=>g,SECRET_KEY_LENGTH:()=>y,HASH_BYTES_LENGTH:()=>m,SEED_BTYES_LENGTH:()=>b});var n=r(7765),o=r.n(n),i=r(9757),s=r.n(i);function a(e){return s().sha512_256.array(e)}function c(e){return o().randomBytes(e)}function u(e){return o().sign.keyPair.fromSeed(e)}function l(){return u(c(o().box.secretKeyLength))}function p(e){return o().sign.keyPair.fromSecretKey(e)}function h(e,t){return o().sign.detached(e,t)}function f(e,t){return o().verify(e,t)}function d(e,t,r){return o().sign.detached.verify(e,t,r)}const g=o().sign.publicKeyLength,y=o().sign.secretKeyLength,m=32,b=32},834:(e,t,r)=>{"use strict";r.d(t,{x7:()=>i,i1:()=>s,Vj:()=>a,Xw:()=>c});var n=r(8800),o=r(4158);function i(e){return(t,r)=>{const n=[];for(const o of r)n.push(t[o].signTxn(e.sk));return Promise.resolve(n)}}function s(e){return(t,r)=>{const o=[];for(const i of r){const{blob:r}=(0,n.signLogicSigTransactionObject)(t[i],e);o.push(r)}return Promise.resolve(o)}}function a(e,t){return(r,n)=>{const i=[];for(const s of n){const n=r[s],a=[];for(const r of t){const{blob:t}=(0,o.PU)(n,e,r);a.push(t)}i.push((0,o.J6)(a))}return Promise.resolve(i)}}function c(e){return"object"==typeof e&&2===Object.keys(e).length&&"object"==typeof e.txn&&"function"==typeof e.signer}},9417:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_MIN_TX_FEE:()=>p,Transaction:()=>f,encodeUnsignedTransaction:()=>d,decodeUnsignedTransaction:()=>g,decodeSignedTransaction:()=>y,instantiateTxnIfNeeded:()=>m,default:()=>b});var n=r(7267),o=r.n(n),i=r(7116),s=r(3033),a=r(9404),c=r(413),u=r(1624),l=r(2486).Buffer;const p=1e3;function h(e,t,r){if(null==e)return;let n;if("string"==typeof e?n=l.from(e,"base64"):e.constructor===Uint8Array?n=l.from(e):l.isBuffer(e)&&(n=e),null==n||n.byteLength!==r)throw Error(`${t} must be a ${r} byte Uint8Array or Buffer or base64 string.`);return n}class f{constructor({...e}){this.name="Transaction",this.tag=l.from("TX");const t={type:u.iU.pay,flatFee:!1,nonParticipation:!1};if(void 0===e.type&&(e.type=t.type),void 0===e.flatFee&&(e.flatFee=t.flatFee),e.type===u.iU.keyreg&&void 0!==e.voteKey&&void 0===e.nonParticipation&&(e.nonParticipation=t.nonParticipation),void 0!==e.suggestedParams){const t=e;t.genesisHash=t.suggestedParams.genesisHash,t.fee=t.suggestedParams.fee,void 0!==t.suggestedParams.flatFee&&(t.flatFee=t.suggestedParams.flatFee),t.firstRound=t.suggestedParams.firstRound,t.lastRound=t.suggestedParams.lastRound,t.genesisID=t.suggestedParams.genesisID}const r=e;if(r.from=i.decodeAddress(r.from),void 0!==r.to&&(r.to=i.decodeAddress(r.to)),void 0!==r.closeRemainderTo&&(r.closeRemainderTo=i.decodeAddress(r.closeRemainderTo)),void 0!==r.assetManager&&(r.assetManager=i.decodeAddress(r.assetManager)),void 0!==r.assetReserve&&(r.assetReserve=i.decodeAddress(r.assetReserve)),void 0!==r.assetFreeze&&(r.assetFreeze=i.decodeAddress(r.assetFreeze)),void 0!==r.assetClawback&&(r.assetClawback=i.decodeAddress(r.assetClawback)),void 0!==r.assetRevocationTarget&&(r.assetRevocationTarget=i.decodeAddress(r.assetRevocationTarget)),void 0!==r.freezeAccount&&(r.freezeAccount=i.decodeAddress(r.freezeAccount)),void 0!==r.reKeyTo&&(r.reKeyTo=i.decodeAddress(r.reKeyTo)),void 0===r.genesisHash)throw Error("genesis hash must be specified and in a base64 string.");if(r.genesisHash=l.from(r.genesisHash,"base64"),void 0!==r.amount&&(!(Number.isSafeInteger(r.amount)||"bigint"==typeof r.amount&&r.amount<=BigInt("0xffffffffffffffff"))||r.amount<0))throw Error("Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(!Number.isSafeInteger(r.fee)||r.fee<0)throw Error("fee must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r.firstRound)||r.firstRound<0)throw Error("firstRound must be a positive number");if(!Number.isSafeInteger(r.lastRound)||r.lastRound<0)throw Error("lastRound must be a positive number");if(void 0!==r.extraPages&&(!Number.isInteger(r.extraPages)||r.extraPages<0||r.extraPages>3))throw Error("extraPages must be an Integer between and including 0 to 3");if(void 0!==r.assetTotal&&(!(Number.isSafeInteger(r.assetTotal)||"bigint"==typeof r.assetTotal&&r.assetTotal<=BigInt("0xffffffffffffffff"))||r.assetTotal<0))throw Error("Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(void 0!==r.assetDecimals&&(!Number.isSafeInteger(r.assetDecimals)||r.assetDecimals<0||r.assetDecimals>19))throw Error(`assetDecimals must be a positive number and smaller than ${19..toString()}`);if(void 0!==r.assetIndex&&(!Number.isSafeInteger(r.assetIndex)||r.assetIndex<0))throw Error("Asset index must be a positive number and smaller than 2^53-1");if(void 0!==r.appIndex&&(!Number.isSafeInteger(r.appIndex)||r.appIndex<0))throw Error("Application index must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalInts&&(!Number.isSafeInteger(r.appLocalInts)||r.appLocalInts<0))throw Error("Application local ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalByteSlices&&(!Number.isSafeInteger(r.appLocalByteSlices)||r.appLocalByteSlices<0))throw Error("Application local byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalInts&&(!Number.isSafeInteger(r.appGlobalInts)||r.appGlobalInts<0))throw Error("Application global ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalByteSlices&&(!Number.isSafeInteger(r.appGlobalByteSlices)||r.appGlobalByteSlices<0))throw Error("Application global byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appApprovalProgram&&r.appApprovalProgram.constructor!==Uint8Array)throw Error("appApprovalProgram must be a Uint8Array.");if(void 0!==r.appClearProgram&&r.appClearProgram.constructor!==Uint8Array)throw Error("appClearProgram must be a Uint8Array.");if(void 0!==r.appArgs){if(!Array.isArray(r.appArgs))throw Error("appArgs must be an Array of Uint8Array.");r.appArgs=r.appArgs.slice(),r.appArgs.forEach((e=>{if(e.constructor!==Uint8Array)throw Error("each element of AppArgs must be a Uint8Array.")}))}else r.appArgs=[];if(void 0!==r.appAccounts){if(!Array.isArray(r.appAccounts))throw Error("appAccounts must be an Array of addresses.");r.appAccounts=r.appAccounts.map((e=>i.decodeAddress(e)))}if(void 0!==r.appForeignApps){if(!Array.isArray(r.appForeignApps))throw Error("appForeignApps must be an Array of integers.");r.appForeignApps=r.appForeignApps.slice(),r.appForeignApps.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign application index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.appForeignAssets){if(!Array.isArray(r.appForeignAssets))throw Error("appForeignAssets must be an Array of integers.");r.appForeignAssets=r.appForeignAssets.slice(),r.appForeignAssets.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign asset index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.assetMetadataHash&&0!==r.assetMetadataHash.length){if("string"==typeof r.assetMetadataHash&&(r.assetMetadataHash=new Uint8Array(l.from(r.assetMetadataHash))),r.assetMetadataHash.constructor!==Uint8Array||32!==r.assetMetadataHash.byteLength)throw Error("assetMetadataHash must be a 32 byte Uint8Array or string.");r.assetMetadataHash.every((e=>0===e))&&(r.assetMetadataHash=void 0)}else r.assetMetadataHash=void 0;if(void 0!==r.note){if(r.note.constructor!==Uint8Array)throw Error("note must be a Uint8Array.")}else r.note=new Uint8Array(0);if(void 0!==r.lease){if(r.lease.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==r.lease.length)throw Error(`lease must be of length ${32..toString()}.`);r.lease.every((e=>0===e))&&(r.lease=new Uint8Array(0))}else r.lease=new Uint8Array(0);if(r.voteKey=h(r.voteKey,"voteKey",32),r.selectionKey=h(r.selectionKey,"selectionKey",32),r.stateProofKey=h(r.stateProofKey,"stateProofKey",64),r.nonParticipation&&(r.voteKey||r.selectionKey||r.voteFirst||r.stateProofKey||r.voteLast||r.voteKeyDilution))throw new Error("nonParticipation is true but participation params are present.");if(!r.nonParticipation&&(r.voteKey||r.selectionKey||r.stateProofKey||r.voteFirst||r.voteLast||r.voteKeyDilution)&&!(r.voteKey&&r.selectionKey&&r.voteFirst&&r.voteLast&&r.voteKeyDilution))throw new Error("online key registration missing at least one of the following fields: voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution");delete r.suggestedParams,Object.assign(this,c.removeUndefinedProperties(r)),r.flatFee||(this.fee*=this.estimateSize(),this.fee<p&&(this.fee=p)),this.group=void 0}get_obj_for_encoding(){if("pay"===this.type){const e={amt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:"pay",gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group};return void 0!==this.closeRemainderTo&&i.encodeAddress(this.closeRemainderTo.publicKey)!==i.ALGORAND_ZERO_ADDRESS_STRING&&(e.close=l.from(this.closeRemainderTo.publicKey)),void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.to&&(e.rcv=l.from(this.to.publicKey)),e.note.length||delete e.note,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.lx.length||delete e.lx,e.rekey||delete e.rekey,e}if("keyreg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,votekey:this.voteKey,selkey:this.selectionKey,sprfkey:this.stateProofKey,votefst:this.voteFirst,votelst:this.voteLast,votekd:this.voteKeyDilution};return e.note.length||delete e.note,e.lx.length||delete e.lx,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),this.nonParticipation&&(e.nonpart=!0),e.selkey||delete e.selkey,e.votekey||delete e.votekey,e.sprfkey||delete e.sprfkey,e.votefst||delete e.votefst,e.votelst||delete e.votelst,e.votekd||delete e.votekd,e}if("acfg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,caid:this.assetIndex,apar:{t:this.assetTotal,df:this.assetDefaultFrozen,dc:this.assetDecimals}};return void 0!==this.assetManager&&(e.apar.m=l.from(this.assetManager.publicKey)),void 0!==this.assetReserve&&(e.apar.r=l.from(this.assetReserve.publicKey)),void 0!==this.assetFreeze&&(e.apar.f=l.from(this.assetFreeze.publicKey)),void 0!==this.assetClawback&&(e.apar.c=l.from(this.assetClawback.publicKey)),void 0!==this.assetName&&(e.apar.an=this.assetName),void 0!==this.assetUnitName&&(e.apar.un=this.assetUnitName),void 0!==this.assetURL&&(e.apar.au=this.assetURL),void 0!==this.assetMetadataHash&&(e.apar.am=l.from(this.assetMetadataHash)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e.caid||delete e.caid,e.apar.t||e.apar.un||e.apar.an||e.apar.df||e.apar.m||e.apar.r||e.apar.f||e.apar.c||e.apar.au||e.apar.am||e.apar.dc?(e.apar.t||delete e.apar.t,e.apar.dc||delete e.apar.dc,e.apar.un||delete e.apar.un,e.apar.an||delete e.apar.an,e.apar.df||delete e.apar.df,e.apar.m||delete e.apar.m,e.apar.r||delete e.apar.r,e.apar.f||delete e.apar.f,e.apar.c||delete e.apar.c,e.apar.au||delete e.apar.au,e.apar.am||delete e.apar.am):delete e.apar,void 0===e.grp&&delete e.grp,e}if("axfer"===this.type){const e={aamt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),arcv:l.from(this.to.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,xaid:this.assetIndex};return void 0!==this.closeRemainderTo&&(e.aclose=l.from(this.closeRemainderTo.publicKey)),void 0!==this.assetRevocationTarget&&(e.asnd=l.from(this.assetRevocationTarget.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.aamt||delete e.aamt,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.aclose||delete e.aclose,e.asnd||delete e.asnd,e.rekey||delete e.rekey,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("afrz"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,faid:this.assetIndex,afrz:this.freezeState};return void 0!==this.freezeAccount&&(e.fadd=l.from(this.freezeAccount.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.afrz||delete e.afrz,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("appl"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,apid:this.appIndex,apan:this.appOnComplete,apls:{nui:this.appLocalInts,nbs:this.appLocalByteSlices},apgs:{nui:this.appGlobalInts,nbs:this.appGlobalByteSlices},apfa:this.appForeignApps,apas:this.appForeignAssets,apep:this.extraPages};return void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.appApprovalProgram&&(e.apap=l.from(this.appApprovalProgram)),void 0!==this.appClearProgram&&(e.apsu=l.from(this.appClearProgram)),void 0!==this.appArgs&&(e.apaa=this.appArgs.map((e=>l.from(e)))),void 0!==this.appAccounts&&(e.apat=this.appAccounts.map((e=>l.from(e.publicKey)))),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.apid||delete e.apid,e.apls.nui||delete e.apls.nui,e.apls.nbs||delete e.apls.nbs,e.apls.nui||e.apls.nbs||delete e.apls,e.apgs.nui||delete e.apgs.nui,e.apgs.nbs||delete e.apgs.nbs,e.apaa&&e.apaa.length||delete e.apaa,e.apgs.nui||e.apgs.nbs||delete e.apgs,e.apap||delete e.apap,e.apsu||delete e.apsu,e.apan||delete e.apan,e.apfa&&e.apfa.length||delete e.apfa,e.apas&&e.apas.length||delete e.apas,e.apat&&e.apat.length||delete e.apat,e.apep||delete e.apep,void 0===e.grp&&delete e.grp,e}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);if(t.name="Transaction",t.tag=l.from("TX"),t.genesisID=e.gen,t.genesisHash=l.from(e.gh),!(0,u.v8)(e.type))throw new Error(`Unrecognized transaction type: ${e.type}`);return t.type=e.type,t.fee=e.fee,t.firstRound=e.fv,t.lastRound=e.lv,t.note=new Uint8Array(e.note),t.lease=new Uint8Array(e.lx),t.from=i.decodeAddress(i.encodeAddress(new Uint8Array(e.snd))),void 0!==e.grp&&(t.group=l.from(e.grp)),void 0!==e.rekey&&(t.reKeyTo=i.decodeAddress(i.encodeAddress(new Uint8Array(e.rekey)))),"pay"===e.type?(t.amount=e.amt,t.to=i.decodeAddress(i.encodeAddress(new Uint8Array(e.rcv))),void 0!==e.close&&(t.closeRemainderTo=i.decodeAddress(i.encodeAddress(e.close)))):"keyreg"===e.type?(void 0!==e.votekey&&(t.voteKey=l.from(e.votekey)),void 0!==e.selkey&&(t.selectionKey=l.from(e.selkey)),void 0!==e.sprfkey&&(t.stateProofKey=l.from(e.sprfkey)),void 0!==e.votekd&&(t.voteKeyDilution=e.votekd),void 0!==e.votefst&&(t.voteFirst=e.votefst),void 0!==e.votelst&&(t.voteLast=e.votelst),void 0!==e.nonpart&&(t.nonParticipation=e.nonpart)):"acfg"===e.type?(void 0!==e.caid&&(t.assetIndex=e.caid),void 0!==e.apar&&(t.assetTotal=e.apar.t,t.assetDefaultFrozen=e.apar.df,void 0!==e.apar.dc&&(t.assetDecimals=e.apar.dc),void 0!==e.apar.m&&(t.assetManager=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.m)))),void 0!==e.apar.r&&(t.assetReserve=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.r)))),void 0!==e.apar.f&&(t.assetFreeze=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.f)))),void 0!==e.apar.c&&(t.assetClawback=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.c)))),void 0!==e.apar.un&&(t.assetUnitName=e.apar.un),void 0!==e.apar.an&&(t.assetName=e.apar.an),void 0!==e.apar.au&&(t.assetURL=e.apar.au),void 0!==e.apar.am&&(t.assetMetadataHash=e.apar.am))):"axfer"===e.type?(void 0!==e.xaid&&(t.assetIndex=e.xaid),void 0!==e.aamt&&(t.amount=e.aamt),void 0!==e.aclose&&(t.closeRemainderTo=i.decodeAddress(i.encodeAddress(new Uint8Array(e.aclose)))),void 0!==e.asnd&&(t.assetRevocationTarget=i.decodeAddress(i.encodeAddress(new Uint8Array(e.asnd)))),t.to=i.decodeAddress(i.encodeAddress(new Uint8Array(e.arcv)))):"afrz"===e.type?(void 0!==e.afrz&&(t.freezeState=e.afrz),void 0!==e.faid&&(t.assetIndex=e.faid),t.freezeAccount=i.decodeAddress(i.encodeAddress(new Uint8Array(e.fadd)))):"appl"===e.type&&(void 0!==e.apid&&(t.appIndex=e.apid),void 0!==e.apan&&(t.appOnComplete=e.apan),void 0!==e.apls&&(void 0!==e.apls.nui&&(t.appLocalInts=e.apls.nui),void 0!==e.apls.nbs&&(t.appLocalByteSlices=e.apls.nbs)),void 0!==e.apgs&&(void 0!==e.apgs.nui&&(t.appGlobalInts=e.apgs.nui),void 0!==e.apgs.nbs&&(t.appGlobalByteSlices=e.apgs.nbs)),void 0!==e.apep&&(t.extraPages=e.apep),void 0!==e.apap&&(t.appApprovalProgram=new Uint8Array(e.apap)),void 0!==e.apsu&&(t.appClearProgram=new Uint8Array(e.apsu)),void 0!==e.apaa&&(t.appArgs=e.apaa.map((e=>new Uint8Array(e)))),void 0!==e.apat&&(t.appAccounts=e.apat.map((e=>i.decodeAddress(i.encodeAddress(new Uint8Array(e)))))),void 0!==e.apfa&&(t.appForeignApps=e.apfa),void 0!==e.apas&&(t.appForeignAssets=e.apas)),t}estimateSize(){return this.toByte().length+75}bytesToSign(){const e=this.toByte();return l.from(c.concatArrays(this.tag,e))}toByte(){return s.encode(this.get_obj_for_encoding())}rawSignTxn(e){const t=this.bytesToSign(),r=a.sign(t,e);return l.from(r)}signTxn(e){const t={sig:this.rawSignTxn(e),txn:this.get_obj_for_encoding()},r=a.keyPairFromSecretKey(e).publicKey;return i.encodeAddress(r)!==i.encodeAddress(this.from.publicKey)&&(t.sgnr=l.from(r)),new Uint8Array(s.encode(t))}rawTxID(){const e=this.toByte(),t=l.from(c.concatArrays(this.tag,e));return l.from(a.genericHash(t))}txID(){const e=this.rawTxID();return o().encode(e).slice(0,52)}addLease(e,t=0){let r;if(void 0!==e){if(e.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==e.length)throw Error(`lease must be of length ${32..toString()}.`);r=new Uint8Array(e)}else r=new Uint8Array(0);this.lease=r,0!==t&&(this.fee+=37*t)}addRekey(e,t=0){void 0!==e&&(this.reKeyTo=i.decodeAddress(e)),0!==t&&(this.fee+=37*t)}_getDictForDisplay(){const e={...this};return e.tag=e.tag.toString(),e.from=i.encodeAddress(e.from.publicKey),void 0!==e.to&&(e.to=i.encodeAddress(e.to.publicKey)),void 0!==e.freezeAccount&&(e.freezeAccount=i.encodeAddress(e.freezeAccount.publicKey)),void 0!==e.closeRemainderTo&&(e.closeRemainderTo=i.encodeAddress(e.closeRemainderTo.publicKey)),void 0!==e.assetManager&&(e.assetManager=i.encodeAddress(e.assetManager.publicKey)),void 0!==e.assetReserve&&(e.assetReserve=i.encodeAddress(e.assetReserve.publicKey)),void 0!==e.assetFreeze&&(e.assetFreeze=i.encodeAddress(e.assetFreeze.publicKey)),void 0!==e.assetClawback&&(e.assetClawback=i.encodeAddress(e.assetClawback.publicKey)),void 0!==e.assetRevocationTarget&&(e.assetRevocationTarget=i.encodeAddress(e.assetRevocationTarget.publicKey)),void 0!==e.reKeyTo&&(e.reKeyTo=i.encodeAddress(e.reKeyTo.publicKey)),e.genesisHash=e.genesisHash.toString("base64"),e}prettyPrint(){console.log(this._getDictForDisplay())}toString(){return JSON.stringify(this._getDictForDisplay())}}function d(e){const t=e.get_obj_for_encoding();return s.encode(t)}function g(e){const t=s.decode(e);return f.from_obj_for_encoding(t)}function y(e){const t=s.decode(e);return{...t,txn:f.from_obj_for_encoding(t.txn)}}function m(e){return e instanceof f?e:new f(e)}const b=f},2380:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.i});var n=r(1824)},7197:(e,t,r)=>{"use strict";var n;r.d(t,{Z:()=>o}),function(e){e.DEFAULT="default",e.SAFE="safe",e.MIXED="mixed",e.BIGINT="bigint"}(n||(n={}));const o=n},1624:(e,t,r)=>{"use strict";var n,o;function i(e){return e===n.pay||e===n.keyreg||e===n.acfg||e===n.axfer||e===n.afrz||e===n.appl}r.d(t,{iU:()=>n,v8:()=>i,hq:()=>o}),function(e){e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(n||(n={})),function(e){e[e.NoOpOC=0]="NoOpOC",e[e.OptInOC=1]="OptInOC",e[e.CloseOutOC=2]="CloseOutOC",e[e.ClearStateOC=3]="ClearStateOC",e[e.UpdateApplicationOC=4]="UpdateApplicationOC",e[e.DeleteApplicationOC=5]="DeleteApplicationOC"}(o||(o={}))},1824:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.iU});var n=r(1624)},413:(e,t,r)=>{"use strict";r.r(t),r.d(t,{parseJSON:()=>a,arrayEqual:()=>c,concatArrays:()=>u,removeUndefinedProperties:()=>l,isNode:()=>p});var n=r(4360),o=r.n(n),i=r(7197);const s=o()({useNativeBigInt:!0,strict:!0});function a(e,t){const r=t&&t.intDecoding?t.intDecoding:i.Z.DEFAULT;return s.parse(e,((e,t)=>{if(null!=t&&"object"==typeof t&&null==Object.getPrototypeOf(t)&&Object.setPrototypeOf(t,Object.prototype),"bigint"==typeof t){if("safe"===r&&t>Number.MAX_SAFE_INTEGER)throw new Error(`Integer exceeds maximum safe integer: ${t.toString()}. Try parsing with a different intDecoding option.`);return"bigint"===r||"mixed"===r&&t>Number.MAX_SAFE_INTEGER?t:Number(t)}return"number"==typeof t&&"bigint"===r&&Number.isInteger(t)?BigInt(t):t}))}function c(e,t){return e.length===t.length&&Array.from(e).every(((e,r)=>e===t[r]))}function u(...e){const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);let n=0;for(let t=0;t<e.length;t++)r.set(e[t],n),n+=e[t].length;return r}function l(e){const t={...e};return Object.keys(t).forEach((e=>{void 0===t[e]&&delete t[e]})),t}function p(){return"object"==typeof process&&"object"==typeof process.versions&&void 0!==process.versions.node}},5062:(e,t,r)=>{"use strict";async function n(e,t,r){const n=await e.status().do();if(void 0===n)throw new Error("Unable to get node status");const o=n["last-round"]+1;let i=o;for(;i<o+r;){let r=!1;try{const n=await e.pendingTransactionInformation(t).do();if(n["confirmed-round"])return n;if(n["pool-error"])throw r=!0,new Error(`Transaction Rejected: ${n["pool-error"]}`)}catch(e){if(r)throw e}await e.statusAfterBlock(i).do(),i+=1}throw new Error(`Transaction not confirmed after ${r} rounds`)}r.d(t,{K:()=>n})},4654:()=>{}},__webpack_module_cache__={};function __nested_webpack_require_407828__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__nested_webpack_require_407828__),r.exports}__nested_webpack_require_407828__.amdO={},__nested_webpack_require_407828__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_407828__.d(t,{a:t}),t},__nested_webpack_require_407828__.d=(e,t)=>{for(var r in t)__nested_webpack_require_407828__.o(t,r)&&!__nested_webpack_require_407828__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_407828__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__nested_webpack_require_407828__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_407828__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_407828__.r(__webpack_exports__),__nested_webpack_require_407828__.d(__webpack_exports__,{default:()=>r});var e=__nested_webpack_require_407828__(6608),t={};for(const r in e)"default"!==r&&(t[r]=()=>e[r]);__nested_webpack_require_407828__.d(__webpack_exports__,t);const r=e})(),__webpack_exports__})()},module.exports=t()},5392:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=c(e),s=i[0],a=i[1],u=new o(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],s=16383,a=0,c=n-o;a<c;a+=s)i.push(u(e,a,a+s>c?c:a+s));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),i.join("")};for(var r=[],n=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=i.length;s<a;++s)r[s]=i[s],n[i.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var o,i,s=[],a=t;a<n;a+=3)o=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},6905:(e,t,r)=>{"use strict";const n=r(5392),o=r(862),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const o=n.write(e,t);return o!==r&&(n=n.slice(0,o)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(X(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(X(e,ArrayBuffer)||e&&X(e.buffer,ArrayBuffer))return f(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(X(e,SharedArrayBuffer)||e&&X(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const o=function(e){if(c.isBuffer(e)){const t=0|d(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|d(e))}function h(e){const t=e.length<0?0:0|d(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function d(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||X(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return $(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(o)return n?-1:$(e).length;t=(""+t).toLowerCase(),o=!0}}function y(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return T(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Y(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,o){let i,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(o){let n=-1;for(i=r;i<a;i++)if(u(e,i)===u(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===c)return n*s}else-1!==n&&(i-=i-n),n=-1}else for(r+c>a&&(r=a-c),i=r;i>=0;i--){let r=!0;for(let n=0;n<c;n++)if(u(e,i+n)!==u(t,n)){r=!1;break}if(r)return i}return-1}function v(e,t,r,n){r=Number(r)||0;const o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=t.length;let s;for(n>i/2&&(n=i/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(Y(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W($(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function S(e,t,r,n){return W(V(t),e,r,n)}function _(e,t,r,n){return W(function(e,t){let r,n,o;const i=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function T(e,t,r){r=Math.min(e.length,r);const n=[];let o=t;for(;o<r;){const t=e[o];let i=null,s=t>239?4:t>223?3:t>191?2:1;if(o+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(i=t);break;case 2:r=e[o+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(i=c));break;case 3:r=e[o+1],n=e[o+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(i=c));break;case 4:r=e[o+1],n=e[o+2],a=e[o+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(i=c))}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=s}return function(e){const t=e.length;if(t<=B)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=B));return r}(n)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),X(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if(X(t,Uint8Array))o+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,o)):Uint8Array.prototype.set.call(n,t,o);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,o)}o+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?T(this,0,e):y.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},i&&(c.prototype[i]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,o){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(i,s),u=this.slice(n,o),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){i=u[e],s=l[e];break}return i<s?-1:s<i?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return S(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const B=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let o="";for(let n=t;n<r;++n)o+=J[e[n]];return o}function C(e,t,r){const n=e.slice(t,r);let o="";for(let e=0;e<n.length-1;e+=2)o+=String.fromCharCode(n[e]+256*n[e+1]);return o}function R(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function O(e,t,r,n,o,i){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function D(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,8),o.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e+--t],o=1;for(;t>0&&(o*=256);)n+=this[e+--t]*o;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),c.prototype.readBigUInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=t,o=1,i=this[e+--n];for(;n>0&&(o*=256);)i+=this[e+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i},c.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=Z((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=Z((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=0,i=1,s=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=r-1,i=1,s=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=Z((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=Z((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const o=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const i=c.isBuffer(e)?e:c.from(e,n),s=i.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=i[o%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function H(e,t,r,n,o,i){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let o;throw o=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,r){G(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||q(t,e.length-(r+1))}(n,o,i)}function G(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function q(e,t,r){if(Math.floor(e)!==e)throw G(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=M(String(r)):"bigint"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=M(o)),o+="n"),n+=` It must be ${t}. Received ${o}`,n}),RangeError);const K=/[^+/0-9A-Za-z-_]/g;function $(e,t){let r;t=t||1/0;const n=e.length;let o=null;const i=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(K,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let o;for(o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function X(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)t[n+o]=e[r]+e[o]}return t}();function Z(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},490:function(e,t){var r="undefined"!=typeof self?self:this,n=function(){function e(){this.fetch=!1,this.DOMException=r.DOMException}return e.prototype=r,new e}();!function(e){!function(t){var r="URLSearchParams"in e,n="Symbol"in e&&"iterator"in Symbol,o="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),i="FormData"in e,s="ArrayBuffer"in e;if(s)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(e){return e&&a.indexOf(Object.prototype.toString.call(e))>-1};function u(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function l(e){return"string"!=typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return n&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function f(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function d(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function g(e){var t=new FileReader,r=d(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function m(){return this.bodyUsed=!1,this._initBody=function(e){var t;this._bodyInit=e,e?"string"==typeof e?this._bodyText=e:o&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:i&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:r&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():s&&o&&(t=e)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):s&&(ArrayBuffer.prototype.isPrototypeOf(e)||c(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},o&&(this.blob=function(){var e=f(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?f(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=f(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=d(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=u(e),t=l(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[u(e)]},h.prototype.get=function(e){return e=u(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(u(e))},h.prototype.set=function(e,t){this.map[u(e)]=l(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},n&&(h.prototype[Symbol.iterator]=h.prototype.entries);var b=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function w(e,t){var r,n,o=(t=t||{}).body;if(e instanceof w){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(n=(r=t.method||this.method||"GET").toUpperCase(),b.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(o)}function v(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),o=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function A(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},m.call(w.prototype),m.call(A.prototype),A.prototype.clone=function(){return new A(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},A.error=function(){var e=new A(null,{status:0,statusText:""});return e.type="error",e};var x=[301,302,303,307,308];A.redirect=function(e,t){if(-1===x.indexOf(t))throw new RangeError("Invalid status code");return new A(null,{status:t,headers:{location:e}})},t.DOMException=e.DOMException;try{new t.DOMException}catch(e){t.DOMException=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack},t.DOMException.prototype=Object.create(Error.prototype),t.DOMException.prototype.constructor=t.DOMException}function S(e,r){return new Promise((function(n,i){var s=new w(e,r);if(s.signal&&s.signal.aborted)return i(new t.DOMException("Aborted","AbortError"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var e,t,r={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||"",t=new h,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};r.url="responseURL"in a?a.responseURL:r.headers.get("X-Request-URL");var o="response"in a?a.response:a.responseText;n(new A(o,r))},a.onerror=function(){i(new TypeError("Network request failed"))},a.ontimeout=function(){i(new TypeError("Network request failed"))},a.onabort=function(){i(new t.DOMException("Aborted","AbortError"))},a.open(s.method,s.url,!0),"include"===s.credentials?a.withCredentials=!0:"omit"===s.credentials&&(a.withCredentials=!1),"responseType"in a&&o&&(a.responseType="blob"),s.headers.forEach((function(e,t){a.setRequestHeader(t,e)})),s.signal&&(s.signal.addEventListener("abort",c),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener("abort",c)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}S.polyfill=!0,e.fetch||(e.fetch=S,e.Headers=h,e.Request=w,e.Response=A),t.Headers=h,t.Request=w,t.Response=A,t.fetch=S,Object.defineProperty(t,"__esModule",{value:!0})}({})}(n),n.fetch.ponyfill=!0,delete n.fetch.polyfill;var o=n;(t=o.fetch).default=o.fetch,t.fetch=o.fetch,t.Headers=o.Headers,t.Request=o.Request,t.Response=o.Response,e.exports=t},862:(e,t)=>{t.read=function(e,t,r,n,o){var i,s,a=8*o-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?o-1:0,h=r?-1:1,f=e[t+p];for(p+=h,i=f&(1<<-l)-1,f>>=-l,l+=a;l>0;i=256*i+e[t+p],p+=h,l-=8);for(s=i&(1<<-l)-1,i>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===i)i=1-u;else{if(i===c)return s?NaN:1/0*(f?-1:1);s+=Math.pow(2,n),i-=u}return(f?-1:1)*s*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var s,a,c,u=8*i-o-1,l=(1<<u)-1,p=l>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:i-1,d=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,o),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,o),s=0));o>=8;e[r+f]=255&a,f+=d,a/=256,o-=8);for(s=s<<o|a,u+=o;u>0;e[r+f]=255&s,f+=d,s/=256,u-=8);e[r+f-d]|=128*g}},6184:e=>{"use strict";function t(){this._types=Object.create(null),this._extensions=Object.create(null);for(let e=0;e<arguments.length;e++)this.define(arguments[e]);this.define=this.define.bind(this),this.getType=this.getType.bind(this),this.getExtension=this.getExtension.bind(this)}t.prototype.define=function(e,t){for(let r in e){let n=e[r].map((function(e){return e.toLowerCase()}));r=r.toLowerCase();for(let e=0;e<n.length;e++){const o=n[e];if("*"!==o[0]){if(!t&&o in this._types)throw new Error('Attempt to change mapping for "'+o+'" extension from "'+this._types[o]+'" to "'+r+'". Pass `force=true` to allow this, otherwise remove "'+o+'" from the list of extensions for "'+r+'".');this._types[o]=r}}if(t||!this._extensions[r]){const e=n[0];this._extensions[r]="*"!==e[0]?e:e.substr(1)}}},t.prototype.getType=function(e){let t=(e=String(e)).replace(/^.*[/\\]/,"").toLowerCase(),r=t.replace(/^.*\./,"").toLowerCase(),n=t.length<e.length;return(r.length<t.length-1||!n)&&this._types[r]||null},t.prototype.getExtension=function(e){return(e=/^\s*([^;\s]*)/.test(e)&&RegExp.$1)&&this._extensions[e.toLowerCase()]||null},e.exports=t},5894:(e,t,r)=>{"use strict";let n=r(6184);e.exports=new n(r(8680),r(1593))},1593:e=>{e.exports={"application/prs.cww":["cww"],"application/vnd.1000minds.decision-model+xml":["1km"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.keynote":["key"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.numbers":["numbers"],"application/vnd.apple.pages":["pages"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.balsamiq.bmml+xml":["bmml"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.citationstyles.style+xml":["csl"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dbf":["dbf"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mapbox-vector-tile":["mvt"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["*stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.ac+xml":["*ac"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openblox.game+xml":["obgx"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openstreetmap.data+xml":["osm"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.rar":["rar"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.software602.filler.form+xml":["fo"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.syncml.dmddf+xml":["ddf"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["*dmg"],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":["*bdoc"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["*deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["*iso"],"application/x-iwork-keynote-sffkey":["*key"],"application/x-iwork-numbers-sffnumbers":["*numbers"],"application/x-iwork-pages-sffpages":["*pages"],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-keepass2":["kdbx"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":["*exe"],"application/x-msdownload":["*exe","*dll","com","bat","*msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["*wmf","*wmz","*emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":["*prc","*pdb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["*rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["*obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["*xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":["*m4a"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":["*ra"],"audio/x-wav":["*wav"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"image/prs.btif":["btif"],"image/prs.pti":["pti"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.airzip.accelerator.azv":["azv"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["*sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.microsoft.icon":["ico"],"image/vnd.ms-dds":["dds"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.pco.b16":["b16"],"image/vnd.tencent.tap":["tap"],"image/vnd.valve.source.texture":["vtf"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/vnd.zbrush.pcx":["pcx"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["*ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":["*bmp"],"image/x-pcx":["*pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/vnd.wfa.wsc":["wsc"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.opengex":["ogex"],"model/vnd.parasolid.transmit.binary":["x_b"],"model/vnd.parasolid.transmit.text":["x_t"],"model/vnd.sap.vds":["vds"],"model/vnd.usdz+zip":["usdz"],"model/vnd.valve.source.compiled-map":["bsp"],"model/vnd.vtu":["vtu"],"text/prs.lines.tag":["dsc"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":["*org"],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}},8680:e=>{e.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["es","ecma"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/express":["exp"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/trig":["trig"],"application/ttml+xml":["ttml"],"application/ubjson":["ubj"],"application/urc-ressheet+xml":["rsheet"],"application/urc-targetdesc+xml":["td"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["*xsl","xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/amr":["amr"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx","opus"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/avif":["avif"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/ktx2":["ktx2"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/step+xml":["stpx"],"model/step+zip":["stpz"],"model/step-xml+zip":["stpxz"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/spdx":["spdx"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/iso.segment":["m4s"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]}},4050:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(){return(()=>{var __webpack_modules__={5406:function(e){e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"encode",(function(){return k})),r.d(t,"decode",(function(){return H})),r.d(t,"decodeAsync",(function(){return W})),r.d(t,"decodeArrayStream",(function(){return X})),r.d(t,"decodeStream",(function(){return Y})),r.d(t,"Decoder",(function(){return F})),r.d(t,"Encoder",(function(){return T})),r.d(t,"ExtensionCodec",(function(){return S})),r.d(t,"ExtData",(function(){return f})),r.d(t,"EXT_TIMESTAMP",(function(){return y})),r.d(t,"encodeDateToTimeSpec",(function(){return b})),r.d(t,"encodeTimeSpecToTimestamp",(function(){return m})),r.d(t,"decodeTimestampToTimeSpec",(function(){return v})),r.d(t,"encodeTimestampExtension",(function(){return w})),r.d(t,"decodeTimestampExtension",(function(){return A}));var n=function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,i=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s},o=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e},i="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function s(e){for(var t=e.length,r=0,n=0;n<t;){var o=e.charCodeAt(n++);if(0!=(4294967168&o))if(0==(4294965248&o))r+=2;else{if(o>=55296&&o<=56319&&n<t){var i=e.charCodeAt(n);56320==(64512&i)&&(++n,o=((1023&o)<<10)+(1023&i)+65536)}r+=0==(4294901760&o)?3:4}else r++}return r}var a=i?new TextEncoder:void 0,c="undefined"!=typeof process?200:0,u=(null==a?void 0:a.encodeInto)?function(e,t,r){a.encodeInto(e,t.subarray(r))}:function(e,t,r){t.set(a.encode(e),r)};function l(e,t,r){for(var n=t,i=n+r,s=[],a="";n<i;){var c=e[n++];if(0==(128&c))s.push(c);else if(192==(224&c)){var u=63&e[n++];s.push((31&c)<<6|u)}else if(224==(240&c)){u=63&e[n++];var l=63&e[n++];s.push((31&c)<<12|u<<6|l)}else if(240==(248&c)){var p=(7&c)<<18|(u=63&e[n++])<<12|(l=63&e[n++])<<6|63&e[n++];p>65535&&(p-=65536,s.push(p>>>10&1023|55296),p=56320|1023&p),s.push(p)}else s.push(c);s.length>=4096&&(a+=String.fromCharCode.apply(String,o(s)),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,o(s))),a}var p=i?new TextDecoder:null,h="undefined"!=typeof process?200:0,f=function(e,t){this.type=e,this.data=t};function d(e,t,r){var n=Math.floor(r/4294967296),o=r;e.setUint32(t,n),e.setUint32(t+4,o)}function g(e,t){var r=e.getInt32(t),n=e.getUint32(t+4),o=r<Math.floor(Number.MIN_SAFE_INTEGER/4294967296)||r===Math.floor(Number.MIN_SAFE_INTEGER/4294967296)&&0===n,i=r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296);return o||i?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n}var y=-1;function m(e){var t,r=e.sec,n=e.nsec;if(r>=0&&n>=0&&r<=17179869183){if(0===n&&r<=4294967295){var o=new Uint8Array(4);return(t=new DataView(o.buffer)).setUint32(0,r),o}var i=r/4294967296,s=4294967295&r;return o=new Uint8Array(8),(t=new DataView(o.buffer)).setUint32(0,n<<2|3&i),t.setUint32(4,s),o}return o=new Uint8Array(12),(t=new DataView(o.buffer)).setUint32(0,n),d(t,4,r),o}function b(e){var t=e.getTime(),r=Math.floor(t/1e3),n=1e6*(t-1e3*r),o=Math.floor(n/1e9);return{sec:r+o,nsec:n-1e9*o}}function w(e){return e instanceof Date?m(b(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var r=t.getUint32(0);return{sec:4294967296*(3&r)+t.getUint32(4),nsec:r>>>2};case 12:return{sec:g(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function A(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var x={type:y,encode:w,decode:A},S=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(x)}return e.prototype.register=function(e){var t=e.type,r=e.encode,n=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=n;else{var o=1+t;this.builtInEncoders[o]=r,this.builtInDecoders[o]=n}},e.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++)if(null!=(n=this.builtInEncoders[r])&&null!=(o=n(e,t)))return new f(-1-r,o);for(r=0;r<this.encoders.length;r++){var n,o;if(null!=(n=this.encoders[r])&&null!=(o=n(e,t)))return new f(r,o)}return e instanceof f?e:null},e.prototype.decode=function(e,t,r){var n=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return n?n(e,t,r):new f(t,e)},e.defaultCodec=new e,e}();function _(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var E=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,r,n,o,i,s,a){void 0===e&&(e=S.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=100),void 0===n&&(n=2048),void 0===o&&(o=!1),void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=n,this.sortKeys=o,this.forceFloat32=i,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):"bigint"==typeof e?this.encodebigint(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),n=new DataView(t);r.set(this.bytes),this.view=n,this.bytes=r},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.encodebigint=function(e){e>=BigInt(0)?e<BigInt(128)?this.writeU8(Number(e)):e<BigInt(256)?(this.writeU8(204),this.writeU8(Number(e))):e<BigInt(65536)?(this.writeU8(205),this.writeU16(Number(e))):e<BigInt(4294967296)?(this.writeU8(206),this.writeU32(Number(e))):(this.writeU8(207),this.writeBig64(e)):e>=BigInt(-32)?this.writeU8(224|Number(e)+32):e>=BigInt(-128)?(this.writeU8(208),this.writeI8(Number(e))):e>=BigInt(-32768)?(this.writeU8(209),this.writeI16(Number(e))):e>=BigInt(-2147483648)?(this.writeU8(210),this.writeI32(Number(e))):(this.writeU8(211),this.writeBig64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(i&&t>c){var r=s(e);this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),u(e,this.bytes,this.pos),this.pos+=r}else r=s(e),this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),function(e,t,r){for(var n=e.length,o=r,i=0;i<n;){var s=e.charCodeAt(i++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[o++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&i<n){var a=e.charCodeAt(i);56320==(64512&a)&&(++i,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[o++]=s>>12&15|224,t[o++]=s>>6&63|128):(t[o++]=s>>18&7|240,t[o++]=s>>12&63|128,t[o++]=s>>6&63|128)}t[o++]=63&s|128}else t[o++]=s}}(e,this.bytes,this.pos),this.pos+=r},e.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(null!=r)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var r=_(e);this.writeU8a(r)},e.prototype.encodeArray=function(e,t){var r,n,o=e.length;if(o<16)this.writeU8(144+o);else if(o<65536)this.writeU8(220),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large array: "+o);this.writeU8(221),this.writeU32(o)}try{for(var i=E(e),s=i.next();!s.done;s=i.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}},e.prototype.countWithoutUndefined=function(e,t){var r,n,o=0;try{for(var i=E(t),s=i.next();!s.done;s=i.next())void 0!==e[s.value]&&o++}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return o},e.prototype.encodeMap=function(e,t){var r,n,o=Object.keys(e);this.sortKeys&&o.sort();var i=this.ignoreUndefined?this.countWithoutUndefined(e,o):o.length;if(i<16)this.writeU8(128+i);else if(i<65536)this.writeU8(222),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large map object: "+i);this.writeU8(223),this.writeU32(i)}try{for(var s=E(o),a=s.next();!a.done;a=s.next()){var c=a.value,u=e[c];this.ignoreUndefined&&void 0===u||(this.encodeString(c),this.doEncode(u,t+1))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=r/4294967296,o=r;e.setUint32(t,n),e.setUint32(t+4,o)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),d(this.view,this.pos,e),this.pos+=8},e.prototype.writeBig64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=Number(r/BigInt(4294967296)),o=Number(r%BigInt(4294967296));n<0&&0!==o&&(n-=1),e.setUint32(t,n),e.setUint32(t+4,o)}(this.view,this.pos,e),this.pos+=8},e}(),B={};function k(e,t){return void 0===t&&(t=B),new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function U(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var I=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,r){var n=this.caches[r-1],o=n.length;e:for(var i=0;i<o;i++){for(var s=n[i],a=s.bytes,c=0;c<r;c++)if(a[c]!==e[t+c])continue e;return s.value}return null},e.prototype.store=function(e,t){var r=this.caches[e.length-1],n={bytes:e,value:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=n:r.push(n)},e.prototype.decode=function(e,t,r){var n=this.get(e,t,r);if(null!=n)return this.hit++,n;this.miss++;var o=l(e,t,r),i=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(i,o),o},e}(),C=function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},R=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,o){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)}(n,o,(t=e[r](t)).done,t.value)}))}}},O=function(e){return this instanceof O?(this.v=e,this):new O(e)},D=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),i=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){i.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=o[e](t)).value instanceof O?Promise.resolve(r.value.v).then(c,u):l(i[0][2],r)}catch(e){l(i[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),i.shift(),i.length&&a(i[0][0],i[0][1])}},N=new DataView(new ArrayBuffer(0)),P=new Uint8Array(N.buffer),L=function(){try{N.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),j=new L("Insufficient data"),z=new I,F=function(){function e(e,t,r,n,o,i,s,a){void 0===e&&(e=S.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=4294967295),void 0===n&&(n=4294967295),void 0===o&&(o=4294967295),void 0===i&&(i=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=z),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=n,this.maxArrayLength=o,this.maxMapLength=i,this.maxExtLength=s,this.keyDecoder=a,this.totalPos=0,this.pos=0,this.view=N,this.bytes=P,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1},e.prototype.setBuffer=function(e){this.bytes=_(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=_(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),r=_(e),n=new Uint8Array(t.length+r.length);n.set(t),n.set(r,t.length),this.setBuffer(n)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,r=this.pos;return new RangeError("Extra "+(t.byteLength-r)+" of "+t.byteLength+" byte(s) found at buffer["+e+"]")},e.prototype.decode=function(e){return this.reinitializeState(),this.setBuffer(e),this.doDecodeSingleSync()},e.prototype.doDecodeSingleSync=function(){var e=this.doDecodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeAsync=function(e){var t,r,n,o;return function(e,t,r,n){return new(r||(r=Promise))((function(t,o){function i(e){try{a(n.next(e))}catch(e){o(e)}}function s(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var i,s,a,c,u,l,p,h;return C(this,(function(f){switch(f.label){case 0:i=!1,f.label=1;case 1:f.trys.push([1,6,7,12]),t=R(e),f.label=2;case 2:return[4,t.next()];case 3:if((r=f.sent()).done)return[3,5];if(a=r.value,i)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),i=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,f.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=f.sent(),n={error:c},[3,12];case 7:return f.trys.push([7,,10,11]),r&&!r.done&&(o=t.return)?[4,o.call(t)]:[3,9];case 8:f.sent(),f.label=9;case 9:return[3,11];case 10:if(n)throw n.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,s]}throw l=(u=this).headByte,p=u.pos,h=u.totalPos,new RangeError("Insufficient data in parcing "+U(l)+" at "+h+" ("+p+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return D(this,arguments,(function(){var r,n,o,i,s,a,c,u,l;return C(this,(function(p){switch(p.label){case 0:r=t,n=-1,p.label=1;case 1:p.trys.push([1,13,14,19]),o=R(e),p.label=2;case 2:return[4,O(o.next())];case 3:if((i=p.sent()).done)return[3,12];if(s=i.value,t&&0===n)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(s),r&&(n=this.readArraySize(),r=!1,this.complete()),p.label=4;case 4:p.trys.push([4,9,,10]),p.label=5;case 5:return[4,O(this.doDecodeSync())];case 6:return[4,p.sent()];case 7:return p.sent(),0==--n?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=p.sent())instanceof L))throw a;return[3,10];case 10:this.totalPos+=this.pos,p.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=p.sent(),u={error:c},[3,19];case 14:return p.trys.push([14,,17,18]),i&&!i.done&&(l=o.return)?[4,O(l.call(o))]:[3,16];case 15:p.sent(),p.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(n=e-128)){this.pushMapState(n),this.complete();continue e}t={}}else if(e<160){if(0!=(n=e-144)){this.pushArrayState(n),this.complete();continue e}t=[]}else{var r=e-160;t=this.decodeUtf8String(r,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)r=this.lookU8(),t=this.decodeUtf8String(r,1);else if(218===e)r=this.lookU16(),t=this.decodeUtf8String(r,2);else if(219===e)r=this.lookU32(),t=this.decodeUtf8String(r,4);else if(220===e){if(0!==(n=this.readU16())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(221===e){if(0!==(n=this.readU32())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(222===e){if(0!==(n=this.readU16())){this.pushMapState(n),this.complete();continue e}t={}}else if(223===e){if(0!==(n=this.readU32())){this.pushMapState(n),this.complete();continue e}t={}}else if(196===e){var n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e)n=this.lookU16(),t=this.decodeBinary(n,2);else if(198===e)n=this.lookU32(),t=this.decodeBinary(n,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)n=this.lookU8(),t=this.decodeExtension(n,1);else if(200===e)n=this.lookU16(),t=this.decodeExtension(n,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+U(e));n=this.lookU32(),t=this.decodeExtension(n,4)}this.complete();for(var o=this.stack;o.length>0;){var i=o[o.length-1];if(0===i.type){if(i.array[i.position]=t,i.position++,i.position!==i.size)continue e;o.pop(),t=i.array}else{if(1===i.type){if("string"!=(s=typeof t)&&"number"!==s)throw new Error("The type of key must be string or number but "+typeof t);i.key=t,i.type=2;continue e}if(i.map[i.key]=t,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue e}o.pop(),t=i.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+U(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw j;var n,o=this.pos+t;return n=this.stateIsMapKey()&&(null===(r=this.keyDecoder)||void 0===r?void 0:r.canBeCached(e))?this.keyDecoder.decode(this.bytes,o,e):i&&e>h?function(e,t,r){var n=e.subarray(t,t+r);return p.decode(n)}(this.bytes,o,e):l(this.bytes,o,e),this.pos+=t+e,n},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw j;var r=this.pos+t,n=this.bytes.subarray(r,r+e);return this.pos+=t+e,n},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var r=this.view.getInt8(this.pos+t),n=this.decodeBinary(e,t+1);return this.extensionCodec.decode(n,r,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,r,n,o=(e=this.view,t=this.pos,r=e.getUint32(t),n=e.getUint32(t+4),r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296)?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n);return this.pos+=8,o},e.prototype.readI64=function(){var e=g(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),M={};function H(e,t){return void 0===t&&(t=M),new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}var G=function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},q=function(e){return this instanceof q?(this.v=e,this):new q(e)},K=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),i=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){i.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=o[e](t)).value instanceof q?Promise.resolve(r.value.v).then(c,u):l(i[0][2],r)}catch(e){l(i[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),i.shift(),i.length&&a(i[0][0],i[0][1])}};function $(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function V(e){return null!=e[Symbol.asyncIterator]?e:function(e){return K(this,arguments,(function(){var t,r,n,o;return G(this,(function(i){switch(i.label){case 0:t=e.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,q(t.read())];case 3:return r=i.sent(),n=r.done,o=r.value,n?[4,q(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return $(o),[4,q(o)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function W(e,t){return void 0===t&&(t=M),function(e,t,r,n){return new(r||(r=Promise))((function(t,o){function i(e){try{a(n.next(e))}catch(e){o(e)}}function s(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var r;return function(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(n){return r=V(e),[2,new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(r)]}))}))}function X(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(r)}function Y(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(r)}}])},5155:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=c(e),s=i[0],a=i[1],u=new o(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],s=16383,a=0,c=n-o;a<c;a+=s)i.push(u(e,a,a+s>c?c:a+s));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),i.join("")};for(var r=[],n=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=i.length;s<a;++s)r[s]=i[s],n[i.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var o,i,s=[],a=t;a<n;a+=3)o=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},5117:function(e,t,r){var n;!function(o){"use strict";var i,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,a=Math.ceil,c=Math.floor,u="[BigNumber Error] ",l=u+"Number primitive has more than 15 significant digits: ",p=1e14,h=14,f=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,y=1e9;function m(e){var t=0|e;return e>0||e===t?t:t-1}function b(e){for(var t,r,n=1,o=e.length,i=e[0]+"";n<o;){for(t=e[n++]+"",r=h-t.length;r--;t="0"+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function w(e,t){var r,n,o=e.c,i=t.c,s=e.s,a=t.s,c=e.e,u=t.e;if(!s||!a)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-a:s;if(s!=a)return s;if(r=s<0,n=c==u,!o||!i)return n?0:!o^r?1:-1;if(!n)return c>u^r?1:-1;for(a=(c=o.length)<(u=i.length)?c:u,s=0;s<a;s++)if(o[s]!=i[s])return o[s]>i[s]^r?1:-1;return c==u?0:c>u^r?1:-1}function v(e,t,r,n){if(e<t||e>r||e!==c(e))throw Error(u+(n||"Argument")+("number"==typeof e?e<t||e>r?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function A(e){var t=e.c.length-1;return m(e.e/h)==t&&e.c[t]%2!=0}function x(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function S(e,t,r){var n,o;if(t<0){for(o=r+".";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+"."+e.slice(t));return e}(i=function e(t){var r,n,o,i,_,E,T,B,k,U,I=G.prototype={constructor:G,toString:null,valueOf:null},C=new G(1),R=20,O=4,D=-7,N=21,P=-1e7,L=1e7,j=!1,z=1,F=0,M={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},H="0123456789abcdefghijklmnopqrstuvwxyz";function G(e,t){var r,i,a,u,p,d,g,y,m=this;if(!(m instanceof G))return new G(e,t);if(null==t){if(e&&!0===e._isBigNumber)return m.s=e.s,void(!e.c||e.e>L?m.c=m.e=null:e.e<P?m.c=[m.e=0]:(m.e=e.e,m.c=e.c.slice()));if((d="number"==typeof e)&&0*e==0){if(m.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,p=e;p>=10;p/=10,u++);return void(u>L?m.c=m.e=null:(m.e=u,m.c=[e]))}y=String(e)}else{if(!s.test(y=String(e)))return o(m,y,d);m.s=45==y.charCodeAt(0)?(y=y.slice(1),-1):1}(u=y.indexOf("."))>-1&&(y=y.replace(".","")),(p=y.search(/e/i))>0?(u<0&&(u=p),u+=+y.slice(p+1),y=y.substring(0,p)):u<0&&(u=y.length)}else{if(v(t,2,H.length,"Base"),10==t)return V(m=new G(e),R+m.e+1,O);if(y=String(e),d="number"==typeof e){if(0*e!=0)return o(m,y,d,t);if(m.s=1/e<0?(y=y.slice(1),-1):1,G.DEBUG&&y.replace(/^0\.0*|\./,"").length>15)throw Error(l+e)}else m.s=45===y.charCodeAt(0)?(y=y.slice(1),-1):1;for(r=H.slice(0,t),u=p=0,g=y.length;p<g;p++)if(r.indexOf(i=y.charAt(p))<0){if("."==i){if(p>u){u=g;continue}}else if(!a&&(y==y.toUpperCase()&&(y=y.toLowerCase())||y==y.toLowerCase()&&(y=y.toUpperCase()))){a=!0,p=-1,u=0;continue}return o(m,String(e),d,t)}d=!1,(u=(y=n(y,t,10,m.s)).indexOf("."))>-1?y=y.replace(".",""):u=y.length}for(p=0;48===y.charCodeAt(p);p++);for(g=y.length;48===y.charCodeAt(--g););if(y=y.slice(p,++g)){if(g-=p,d&&G.DEBUG&&g>15&&(e>f||e!==c(e)))throw Error(l+m.s*e);if((u=u-p-1)>L)m.c=m.e=null;else if(u<P)m.c=[m.e=0];else{if(m.e=u,m.c=[],p=(u+1)%h,u<0&&(p+=h),p<g){for(p&&m.c.push(+y.slice(0,p)),g-=h;p<g;)m.c.push(+y.slice(p,p+=h));p=h-(y=y.slice(p)).length}else p-=g;for(;p--;y+="0");m.c.push(+y)}}else m.c=[m.e=0]}function q(e,t,r,n){var o,i,s,a,c;if(null==r?r=O:v(r,0,8),!e.c)return e.toString();if(o=e.c[0],s=e.e,null==t)c=b(e.c),c=1==n||2==n&&(s<=D||s>=N)?x(c,s):S(c,s,"0");else if(i=(e=V(new G(e),t,r)).e,a=(c=b(e.c)).length,1==n||2==n&&(t<=i||i<=D)){for(;a<t;c+="0",a++);c=x(c,i)}else if(t-=s,c=S(c,i,"0"),i+1>a){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=i-a)>0)for(i+1==a&&(c+=".");t--;c+="0");return e.s<0&&o?"-"+c:c}function K(e,t){for(var r,n=1,o=new G(e[0]);n<e.length;n++){if(!(r=new G(e[n])).s){o=r;break}t.call(o,r)&&(o=r)}return o}function $(e,t,r){for(var n=1,o=t.length;!t[--o];t.pop());for(o=t[0];o>=10;o/=10,n++);return(r=n+r*h-1)>L?e.c=e.e=null:r<P?e.c=[e.e=0]:(e.e=r,e.c=t),e}function V(e,t,r,n){var o,i,s,u,l,f,g,y=e.c,m=d;if(y){e:{for(o=1,u=y[0];u>=10;u/=10,o++);if((i=t-o)<0)i+=h,s=t,g=(l=y[f=0])/m[o-s-1]%10|0;else if((f=a((i+1)/h))>=y.length){if(!n)break e;for(;y.length<=f;y.push(0));l=g=0,o=1,s=(i%=h)-h+1}else{for(l=u=y[f],o=1;u>=10;u/=10,o++);g=(s=(i%=h)-h+o)<0?0:l/m[o-s-1]%10|0}if(n=n||t<0||null!=y[f+1]||(s<0?l:l%m[o-s-1]),n=r<4?(g||n)&&(0==r||r==(e.s<0?3:2)):g>5||5==g&&(4==r||n||6==r&&(i>0?s>0?l/m[o-s]:0:y[f-1])%10&1||r==(e.s<0?8:7)),t<1||!y[0])return y.length=0,n?(t-=e.e+1,y[0]=m[(h-t%h)%h],e.e=-t||0):y[0]=e.e=0,e;if(0==i?(y.length=f,u=1,f--):(y.length=f+1,u=m[h-i],y[f]=s>0?c(l/m[o-s]%m[s])*u:0),n)for(;;){if(0==f){for(i=1,s=y[0];s>=10;s/=10,i++);for(s=y[0]+=u,u=1;s>=10;s/=10,u++);i!=u&&(e.e++,y[0]==p&&(y[0]=1));break}if(y[f]+=u,y[f]!=p)break;y[f--]=0,u=1}for(i=y.length;0===y[--i];y.pop());}e.e>L?e.c=e.e=null:e.e<P&&(e.c=[e.e=0])}return e}function W(e){var t,r=e.e;return null===r?e.toString():(t=b(e.c),t=r<=D||r>=N?x(t,r):S(t,r,"0"),e.s<0?"-"+t:t)}return G.clone=e,G.ROUND_UP=0,G.ROUND_DOWN=1,G.ROUND_CEIL=2,G.ROUND_FLOOR=3,G.ROUND_HALF_UP=4,G.ROUND_HALF_DOWN=5,G.ROUND_HALF_EVEN=6,G.ROUND_HALF_CEIL=7,G.ROUND_HALF_FLOOR=8,G.EUCLID=9,G.config=G.set=function(e){var t,r;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(v(r=e[t],0,y,t),R=r),e.hasOwnProperty(t="ROUNDING_MODE")&&(v(r=e[t],0,8,t),O=r),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((r=e[t])&&r.pop?(v(r[0],-y,0,t),v(r[1],0,y,t),D=r[0],N=r[1]):(v(r,-y,y,t),D=-(N=r<0?-r:r))),e.hasOwnProperty(t="RANGE"))if((r=e[t])&&r.pop)v(r[0],-y,-1,t),v(r[1],1,y,t),P=r[0],L=r[1];else{if(v(r,-y,y,t),!r)throw Error(u+t+" cannot be zero: "+r);P=-(L=r<0?-r:r)}if(e.hasOwnProperty(t="CRYPTO")){if((r=e[t])!==!!r)throw Error(u+t+" not true or false: "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw j=!r,Error(u+"crypto unavailable");j=r}else j=r}if(e.hasOwnProperty(t="MODULO_MODE")&&(v(r=e[t],0,9,t),z=r),e.hasOwnProperty(t="POW_PRECISION")&&(v(r=e[t],0,y,t),F=r),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(r=e[t]))throw Error(u+t+" not an object: "+r);M=r}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(r=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(r))throw Error(u+t+" invalid: "+r);H=r}}return{DECIMAL_PLACES:R,ROUNDING_MODE:O,EXPONENTIAL_AT:[D,N],RANGE:[P,L],CRYPTO:j,MODULO_MODE:z,POW_PRECISION:F,FORMAT:M,ALPHABET:H}},G.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!G.DEBUG)return!0;var t,r,n=e.c,o=e.e,i=e.s;e:if("[object Array]"=={}.toString.call(n)){if((1===i||-1===i)&&o>=-y&&o<=y&&o===c(o)){if(0===n[0]){if(0===o&&1===n.length)return!0;break e}if((t=(o+1)%h)<1&&(t+=h),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=p||r!==c(r))break e;if(0!==r)return!0}}}else if(null===n&&null===o&&(null===i||1===i||-1===i))return!0;throw Error(u+"Invalid BigNumber: "+e)},G.maximum=G.max=function(){return K(arguments,I.lt)},G.minimum=G.min=function(){return K(arguments,I.gt)},G.random=(i=9007199254740992,_=Math.random()*i&2097151?function(){return c(Math.random()*i)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,o,i,s=0,l=[],p=new G(C);if(null==e?e=R:v(e,0,y),o=a(e/h),j)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));s<o;)(i=131072*t[s]+(t[s+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(l.push(i%1e14),s+=2);s=o/2}else{if(!crypto.randomBytes)throw j=!1,Error(u+"crypto unavailable");for(t=crypto.randomBytes(o*=7);s<o;)(i=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6])>=9e15?crypto.randomBytes(7).copy(t,s):(l.push(i%1e14),s+=7);s=o/7}if(!j)for(;s<o;)(i=_())<9e15&&(l[s++]=i%1e14);for(o=l[--s],e%=h,o&&e&&(i=d[h-e],l[s]=c(o/i)*i);0===l[s];l.pop(),s--);if(s<0)l=[n=0];else{for(n=-1;0===l[0];l.splice(0,1),n-=h);for(s=1,i=l[0];i>=10;i/=10,s++);s<h&&(n-=h-s)}return p.e=n,p.c=l,p}),G.sum=function(){for(var e=1,t=arguments,r=new G(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e="0123456789";function t(e,t,r,n){for(var o,i,s=[0],a=0,c=e.length;a<c;){for(i=s.length;i--;s[i]*=t);for(s[0]+=n.indexOf(e.charAt(a++)),o=0;o<s.length;o++)s[o]>r-1&&(null==s[o+1]&&(s[o+1]=0),s[o+1]+=s[o]/r|0,s[o]%=r)}return s.reverse()}return function(n,o,i,s,a){var c,u,l,p,h,f,d,g,y=n.indexOf("."),m=R,w=O;for(y>=0&&(p=F,F=0,n=n.replace(".",""),f=(g=new G(o)).pow(n.length-y),F=p,g.c=t(S(b(f.c),f.e,"0"),10,i,e),g.e=g.c.length),l=p=(d=t(n,o,i,a?(c=H,e):(c=e,H))).length;0==d[--p];d.pop());if(!d[0])return c.charAt(0);if(y<0?--l:(f.c=d,f.e=l,f.s=s,d=(f=r(f,g,m,w,i)).c,h=f.r,l=f.e),y=d[u=l+m+1],p=i/2,h=h||u<0||null!=d[u+1],h=w<4?(null!=y||h)&&(0==w||w==(f.s<0?3:2)):y>p||y==p&&(4==w||h||6==w&&1&d[u-1]||w==(f.s<0?8:7)),u<1||!d[0])n=h?S(c.charAt(1),-m,c.charAt(0)):c.charAt(0);else{if(d.length=u,h)for(--i;++d[--u]>i;)d[u]=0,u||(++l,d=[1].concat(d));for(p=d.length;!d[--p];);for(y=0,n="";y<=p;n+=c.charAt(d[y++]));n=S(n,l,c.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,o,i,s,a=0,c=e.length,u=t%g,l=t/g|0;for(e=e.slice();c--;)a=((o=u*(i=e[c]%g)+(n=l*i+(s=e[c]/g|0)*u)%g*g+a)/r|0)+(n/g|0)+l*s,e[c]=o%r;return a&&(e=[a].concat(e)),e}function t(e,t,r,n){var o,i;if(r!=n)i=r>n?1:-1;else for(o=i=0;o<r;o++)if(e[o]!=t[o]){i=e[o]>t[o]?1:-1;break}return i}function r(e,t,r,n){for(var o=0;r--;)e[r]-=o,o=e[r]<t[r]?1:0,e[r]=o*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,o,i,s,a){var u,l,f,d,g,y,b,w,v,A,x,S,_,E,T,B,k,U=n.s==o.s?1:-1,I=n.c,C=o.c;if(!(I&&I[0]&&C&&C[0]))return new G(n.s&&o.s&&(I?!C||I[0]!=C[0]:C)?I&&0==I[0]||!C?0*U:U/0:NaN);for(v=(w=new G(U)).c=[],U=i+(l=n.e-o.e)+1,a||(a=p,l=m(n.e/h)-m(o.e/h),U=U/h|0),f=0;C[f]==(I[f]||0);f++);if(C[f]>(I[f]||0)&&l--,U<0)v.push(1),d=!0;else{for(E=I.length,B=C.length,f=0,U+=2,(g=c(a/(C[0]+1)))>1&&(C=e(C,g,a),I=e(I,g,a),B=C.length,E=I.length),_=B,x=(A=I.slice(0,B)).length;x<B;A[x++]=0);k=C.slice(),k=[0].concat(k),T=C[0],C[1]>=a/2&&T++;do{if(g=0,(u=t(C,A,B,x))<0){if(S=A[0],B!=x&&(S=S*a+(A[1]||0)),(g=c(S/T))>1)for(g>=a&&(g=a-1),b=(y=e(C,g,a)).length,x=A.length;1==t(y,A,b,x);)g--,r(y,B<b?k:C,b,a),b=y.length,u=1;else 0==g&&(u=g=1),b=(y=C.slice()).length;if(b<x&&(y=[0].concat(y)),r(A,y,x,a),x=A.length,-1==u)for(;t(C,A,B,x)<1;)g++,r(A,B<x?k:C,x,a),x=A.length}else 0===u&&(g++,A=[0]);v[f++]=g,A[0]?A[x++]=I[_]||0:(A=[I[_]],x=1)}while((_++<E||null!=A[0])&&U--);d=null!=A[0],v[0]||v.splice(0,1)}if(a==p){for(f=1,U=v[0];U>=10;U/=10,f++);V(w,i+(w.e=f+l*h-1)+1,s,d)}else w.e=l,w.r=+d;return w}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,T=/^([^.]+)\.$/,B=/^\.([^.]+)$/,k=/^-?(Infinity|NaN)$/,U=/^\s*\+(?=[\w.])|^\s+|\s+$/g,o=function(e,t,r,n){var o,i=r?t:t.replace(U,"");if(k.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!r&&(i=i.replace(E,(function(e,t,r){return o="x"==(r=r.toLowerCase())?16:"b"==r?2:8,n&&n!=o?e:t})),n&&(o=n,i=i.replace(T,"$1").replace(B,"0.$1")),t!=i))return new G(i,o);if(G.DEBUG)throw Error(u+"Not a"+(n?" base "+n:"")+" number: "+t);e.s=null}e.c=e.e=null},I.absoluteValue=I.abs=function(){var e=new G(this);return e.s<0&&(e.s=1),e},I.comparedTo=function(e,t){return w(this,new G(e,t))},I.decimalPlaces=I.dp=function(e,t){var r,n,o,i=this;if(null!=e)return v(e,0,y),null==t?t=O:v(t,0,8),V(new G(i),e+i.e+1,t);if(!(r=i.c))return null;if(n=((o=r.length-1)-m(this.e/h))*h,o=r[o])for(;o%10==0;o/=10,n--);return n<0&&(n=0),n},I.dividedBy=I.div=function(e,t){return r(this,new G(e,t),R,O)},I.dividedToIntegerBy=I.idiv=function(e,t){return r(this,new G(e,t),0,1)},I.exponentiatedBy=I.pow=function(e,t){var r,n,o,i,s,l,p,f,d=this;if((e=new G(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+W(e));if(null!=t&&(t=new G(t)),s=e.e>14,!d.c||!d.c[0]||1==d.c[0]&&!d.e&&1==d.c.length||!e.c||!e.c[0])return f=new G(Math.pow(+W(d),s?2-A(e):+W(e))),t?f.mod(t):f;if(l=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new G(NaN);(n=!l&&d.isInteger()&&t.isInteger())&&(d=d.mod(t))}else{if(e.e>9&&(d.e>0||d.e<-1||(0==d.e?d.c[0]>1||s&&d.c[1]>=24e7:d.c[0]<8e13||s&&d.c[0]<=9999975e7)))return i=d.s<0&&A(e)?-0:0,d.e>-1&&(i=1/i),new G(l?1/i:i);F&&(i=a(F/h+2))}for(s?(r=new G(.5),l&&(e.s=1),p=A(e)):p=(o=Math.abs(+W(e)))%2,f=new G(C);;){if(p){if(!(f=f.times(d)).c)break;i?f.c.length>i&&(f.c.length=i):n&&(f=f.mod(t))}if(o){if(0===(o=c(o/2)))break;p=o%2}else if(V(e=e.times(r),e.e+1,1),e.e>14)p=A(e);else{if(0==(o=+W(e)))break;p=o%2}d=d.times(d),i?d.c&&d.c.length>i&&(d.c.length=i):n&&(d=d.mod(t))}return n?f:(l&&(f=C.div(f)),t?f.mod(t):i?V(f,F,O,void 0):f)},I.integerValue=function(e){var t=new G(this);return null==e?e=O:v(e,0,8),V(t,t.e+1,e)},I.isEqualTo=I.eq=function(e,t){return 0===w(this,new G(e,t))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(e,t){return w(this,new G(e,t))>0},I.isGreaterThanOrEqualTo=I.gte=function(e,t){return 1===(t=w(this,new G(e,t)))||0===t},I.isInteger=function(){return!!this.c&&m(this.e/h)>this.c.length-2},I.isLessThan=I.lt=function(e,t){return w(this,new G(e,t))<0},I.isLessThanOrEqualTo=I.lte=function(e,t){return-1===(t=w(this,new G(e,t)))||0===t},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(e,t){var r,n,o,i,s=this,a=s.s;if(t=(e=new G(e,t)).s,!a||!t)return new G(NaN);if(a!=t)return e.s=-t,s.plus(e);var c=s.e/h,u=e.e/h,l=s.c,f=e.c;if(!c||!u){if(!l||!f)return l?(e.s=-t,e):new G(f?s:NaN);if(!l[0]||!f[0])return f[0]?(e.s=-t,e):new G(l[0]?s:3==O?-0:0)}if(c=m(c),u=m(u),l=l.slice(),a=c-u){for((i=a<0)?(a=-a,o=l):(u=c,o=f),o.reverse(),t=a;t--;o.push(0));o.reverse()}else for(n=(i=(a=l.length)<(t=f.length))?a:t,a=t=0;t<n;t++)if(l[t]!=f[t]){i=l[t]<f[t];break}if(i&&(o=l,l=f,f=o,e.s=-e.s),(t=(n=f.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=p-1;n>a;){if(l[--n]<f[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=p}l[n]-=f[n]}for(;0==l[0];l.splice(0,1),--u);return l[0]?$(e,l,u):(e.s=3==O?-1:1,e.c=[e.e=0],e)},I.modulo=I.mod=function(e,t){var n,o,i=this;return e=new G(e,t),!i.c||!e.s||e.c&&!e.c[0]?new G(NaN):!e.c||i.c&&!i.c[0]?new G(i):(9==z?(o=e.s,e.s=1,n=r(i,e,0,3),e.s=o,n.s*=o):n=r(i,e,0,z),(e=i.minus(n.times(e))).c[0]||1!=z||(e.s=i.s),e)},I.multipliedBy=I.times=function(e,t){var r,n,o,i,s,a,c,u,l,f,d,y,b,w,v,A=this,x=A.c,S=(e=new G(e,t)).c;if(!(x&&S&&x[0]&&S[0]))return!A.s||!e.s||x&&!x[0]&&!S||S&&!S[0]&&!x?e.c=e.e=e.s=null:(e.s*=A.s,x&&S?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=m(A.e/h)+m(e.e/h),e.s*=A.s,(c=x.length)<(f=S.length)&&(b=x,x=S,S=b,o=c,c=f,f=o),o=c+f,b=[];o--;b.push(0));for(w=p,v=g,o=f;--o>=0;){for(r=0,d=S[o]%v,y=S[o]/v|0,i=o+(s=c);i>o;)r=((u=d*(u=x[--s]%v)+(a=y*u+(l=x[s]/v|0)*d)%v*v+b[i]+r)/w|0)+(a/v|0)+y*l,b[i--]=u%w;b[i]=r}return r?++n:b.splice(0,1),$(e,b,n)},I.negated=function(){var e=new G(this);return e.s=-e.s||null,e},I.plus=function(e,t){var r,n=this,o=n.s;if(t=(e=new G(e,t)).s,!o||!t)return new G(NaN);if(o!=t)return e.s=-t,n.minus(e);var i=n.e/h,s=e.e/h,a=n.c,c=e.c;if(!i||!s){if(!a||!c)return new G(o/0);if(!a[0]||!c[0])return c[0]?e:new G(a[0]?n:0*o)}if(i=m(i),s=m(s),a=a.slice(),o=i-s){for(o>0?(s=i,r=c):(o=-o,r=a),r.reverse();o--;r.push(0));r.reverse()}for((o=a.length)-(t=c.length)<0&&(r=c,c=a,a=r,t=o),o=0;t;)o=(a[--t]=a[t]+c[t]+o)/p|0,a[t]=p===a[t]?0:a[t]%p;return o&&(a=[o].concat(a),++s),$(e,a,s)},I.precision=I.sd=function(e,t){var r,n,o,i=this;if(null!=e&&e!==!!e)return v(e,1,y),null==t?t=O:v(t,0,8),V(new G(i),e,t);if(!(r=i.c))return null;if(n=(o=r.length-1)*h+1,o=r[o]){for(;o%10==0;o/=10,n--);for(o=r[0];o>=10;o/=10,n++);}return e&&i.e+1>n&&(n=i.e+1),n},I.shiftedBy=function(e){return v(e,-9007199254740991,f),this.times("1e"+e)},I.squareRoot=I.sqrt=function(){var e,t,n,o,i,s=this,a=s.c,c=s.s,u=s.e,l=R+4,p=new G("0.5");if(1!==c||!a||!a[0])return new G(!c||c<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(c=Math.sqrt(+W(s)))||c==1/0?(((t=b(a)).length+u)%2==0&&(t+="0"),c=Math.sqrt(+t),u=m((u+1)/2)-(u<0||u%2),n=new G(t=c==1/0?"5e"+u:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new G(c+""),n.c[0])for((c=(u=n.e)+l)<3&&(c=0);;)if(i=n,n=p.times(i.plus(r(s,i,l,1))),b(i.c).slice(0,c)===(t=b(n.c)).slice(0,c)){if(n.e<u&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(o||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(V(n,n.e+R+2,1),e=!n.times(n).eq(s));break}if(!o&&(V(i,i.e+R+2,0),i.times(i).eq(s))){n=i;break}l+=4,c+=4,o=1}return V(n,n.e+R+1,O,e)},I.toExponential=function(e,t){return null!=e&&(v(e,0,y),e++),q(this,e,t,1)},I.toFixed=function(e,t){return null!=e&&(v(e,0,y),e=e+this.e+1),q(this,e,t)},I.toFormat=function(e,t,r){var n,o=this;if(null==r)null!=e&&t&&"object"==typeof t?(r=t,t=null):e&&"object"==typeof e?(r=e,e=t=null):r=M;else if("object"!=typeof r)throw Error(u+"Argument not an object: "+r);if(n=o.toFixed(e,t),o.c){var i,s=n.split("."),a=+r.groupSize,c=+r.secondaryGroupSize,l=r.groupSeparator||"",p=s[0],h=s[1],f=o.s<0,d=f?p.slice(1):p,g=d.length;if(c&&(i=a,a=c,c=i,g-=i),a>0&&g>0){for(i=g%a||a,p=d.substr(0,i);i<g;i+=a)p+=l+d.substr(i,a);c>0&&(p+=l+d.slice(i)),f&&(p="-"+p)}n=h?p+(r.decimalSeparator||"")+((c=+r.fractionGroupSize)?h.replace(new RegExp("\\d{"+c+"}\\B","g"),"$&"+(r.fractionGroupSeparator||"")):h):p}return(r.prefix||"")+n+(r.suffix||"")},I.toFraction=function(e){var t,n,o,i,s,a,c,l,p,f,g,y,m=this,w=m.c;if(null!=e&&(!(c=new G(e)).isInteger()&&(c.c||1!==c.s)||c.lt(C)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+W(c));if(!w)return new G(m);for(t=new G(C),p=n=new G(C),o=l=new G(C),y=b(w),s=t.e=y.length-m.e-1,t.c[0]=d[(a=s%h)<0?h+a:a],e=!e||c.comparedTo(t)>0?s>0?t:p:c,a=L,L=1/0,c=new G(y),l.c[0]=0;f=r(c,t,0,1),1!=(i=n.plus(f.times(o))).comparedTo(e);)n=o,o=i,p=l.plus(f.times(i=p)),l=i,t=c.minus(f.times(i=t)),c=i;return i=r(e.minus(n),o,0,1),l=l.plus(i.times(p)),n=n.plus(i.times(o)),l.s=p.s=m.s,g=r(p,o,s*=2,O).minus(m).abs().comparedTo(r(l,n,s,O).minus(m).abs())<1?[p,o]:[l,n],L=a,g},I.toNumber=function(){return+W(this)},I.toPrecision=function(e,t){return null!=e&&v(e,1,y),q(this,e,t,2)},I.toString=function(e){var t,r=this,o=r.s,i=r.e;return null===i?o?(t="Infinity",o<0&&(t="-"+t)):t="NaN":(null==e?t=i<=D||i>=N?x(b(r.c),i):S(b(r.c),i,"0"):10===e?t=S(b((r=V(new G(r),R+i+1,O)).c),r.e,"0"):(v(e,2,H.length,"Base"),t=n(S(b(r.c),i,"0"),10,e,o,!0)),o<0&&r.c[0]&&(t="-"+t)),t},I.valueOf=I.toJSON=function(){return W(this)},I._isBigNumber=!0,null!=t&&G.set(t),G}()).default=i.BigNumber=i,void 0===(n=function(){return i}.call(t,r,t,e))||(e.exports=n)}()},2486:(e,t,r)=>{"use strict";const n=r(5155),o=r(4525),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const o=n.write(e,t);return o!==r&&(n=n.slice(0,o)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(X(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(X(e,ArrayBuffer)||e&&X(e.buffer,ArrayBuffer))return f(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(X(e,SharedArrayBuffer)||e&&X(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const o=function(e){if(c.isBuffer(e)){const t=0|d(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|d(e))}function h(e){const t=e.length<0?0:0|d(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function d(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||X(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return $(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(o)return n?-1:$(e).length;t=(""+t).toLowerCase(),o=!0}}function y(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return T(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Y(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,o){let i,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(o){let n=-1;for(i=r;i<a;i++)if(u(e,i)===u(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===c)return n*s}else-1!==n&&(i-=i-n),n=-1}else for(r+c>a&&(r=a-c),i=r;i>=0;i--){let r=!0;for(let n=0;n<c;n++)if(u(e,i+n)!==u(t,n)){r=!1;break}if(r)return i}return-1}function v(e,t,r,n){r=Number(r)||0;const o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=t.length;let s;for(n>i/2&&(n=i/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(Y(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W($(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function S(e,t,r,n){return W(V(t),e,r,n)}function _(e,t,r,n){return W(function(e,t){let r,n,o;const i=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function T(e,t,r){r=Math.min(e.length,r);const n=[];let o=t;for(;o<r;){const t=e[o];let i=null,s=t>239?4:t>223?3:t>191?2:1;if(o+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(i=t);break;case 2:r=e[o+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(i=c));break;case 3:r=e[o+1],n=e[o+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(i=c));break;case 4:r=e[o+1],n=e[o+2],a=e[o+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(i=c))}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=s}return function(e){const t=e.length;if(t<=B)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=B));return r}(n)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),X(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if(X(t,Uint8Array))o+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,o)):Uint8Array.prototype.set.call(n,t,o);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,o)}o+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?T(this,0,e):y.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},i&&(c.prototype[i]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,o){if(X(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(i,s),u=this.slice(n,o),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){i=u[e],s=l[e];break}return i<s?-1:s<i?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return S(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const B=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let o="";for(let n=t;n<r;++n)o+=J[e[n]];return o}function C(e,t,r){const n=e.slice(t,r);let o="";for(let e=0;e<n.length-1;e+=2)o+=String.fromCharCode(n[e]+256*n[e+1]);return o}function R(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function O(e,t,r,n,o,i){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function D(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,o){H(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,i){return t=+t,r>>>=0,i||P(e,0,r,8),o.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e+--t],o=1;for(;t>0&&(o*=256);)n+=this[e+--t]*o;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),c.prototype.readBigUInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);let n=t,o=1,i=this[e+--n];for(;n>0&&(o*=256);)i+=this[e+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i},c.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=Z((function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||q(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),o.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),o.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||O(this,e,t,r,Math.pow(2,8*r)-1,0);let o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=Z((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=Z((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=0,i=1,s=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);O(this,e,t,r,n-1,-n)}let o=r-1,i=1,s=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=Z((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=Z((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const o=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const i=c.isBuffer(e)?e:c.from(e,n),s=i.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=i[o%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function H(e,t,r,n,o,i){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let o;throw o=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,r){G(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||q(t,e.length-(r+1))}(n,o,i)}function G(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function q(e,t,r){if(Math.floor(e)!==e)throw G(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=M(String(r)):"bigint"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=M(o)),o+="n"),n+=` It must be ${t}. Received ${o}`,n}),RangeError);const K=/[^+/0-9A-Za-z-_]/g;function $(e,t){let r;t=t||1/0;const n=e.length;let o=null;const i=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(K,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let o;for(o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function X(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)t[n+o]=e[r]+e[o]}return t}();function Z(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},7615:(e,t,r)=>{"use strict";var n=r(1801),o=r(2550),i=o(n("String.prototype.indexOf"));e.exports=function(e,t){var r=n(e,!!t);return"function"==typeof r&&i(e,".prototype.")>-1?o(r):r}},2550:(e,t,r)=>{"use strict";var n=r(1930),o=r(1801),i=o("%Function.prototype.apply%"),s=o("%Function.prototype.call%"),a=o("%Reflect.apply%",!0)||n.call(s,i),c=o("%Object.getOwnPropertyDescriptor%",!0),u=o("%Object.defineProperty%",!0),l=o("%Math.max%");if(u)try{u({},"a",{value:1})}catch(e){u=null}e.exports=function(e){var t=a(n,s,arguments);if(c&&u){var r=c(t,"length");r.configurable&&u(t,"length",{value:1+l(0,e.length-(arguments.length-1))})}return t};var p=function(){return a(n,i,arguments)};u?u(e.exports,"apply",{value:p}):e.exports.apply=p},1069:e=>{function t(e){if(e)return function(e){for(var r in t.prototype)e[r]=t.prototype[r];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function r(){this.off(e,r),t.apply(this,arguments)}return r.fn=t,this.on(e,r),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var r,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<n.length;o++)if((r=n[o])===t||r.fn===t){n.splice(o,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),r=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(r){n=0;for(var o=(r=r.slice(0)).length;n<o;++n)r[n].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}},5799:e=>{e.exports=n,n.default=n,n.stable=s,n.stableStringify=s;var t=[],r=[];function n(e,n,i){var s;for(o(e,"",[],void 0),s=0===r.length?JSON.stringify(e,n,i):JSON.stringify(e,c(n),i);0!==t.length;){var a=t.pop();4===a.length?Object.defineProperty(a[0],a[1],a[3]):a[0][a[1]]=a[2]}return s}function o(e,n,i,s){var a;if("object"==typeof e&&null!==e){for(a=0;a<i.length;a++)if(i[a]===e){var c=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==c.get?c.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,c])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if(i.push(e),Array.isArray(e))for(a=0;a<e.length;a++)o(e[a],a,i,e);else{var u=Object.keys(e);for(a=0;a<u.length;a++){var l=u[a];o(e[l],l,i,e)}}i.pop()}}function i(e,t){return e<t?-1:e>t?1:0}function s(e,n,o){var i,s=a(e,"",[],void 0)||e;for(i=0===r.length?JSON.stringify(s,n,o):JSON.stringify(s,c(n),o);0!==t.length;){var u=t.pop();4===u.length?Object.defineProperty(u[0],u[1],u[3]):u[0][u[1]]=u[2]}return i}function a(e,n,o,s){var c;if("object"==typeof e&&null!==e){for(c=0;c<o.length;c++)if(o[c]===e){var u=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==u.get?u.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,u])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if("function"==typeof e.toJSON)return;if(o.push(e),Array.isArray(e))for(c=0;c<e.length;c++)a(e[c],c,o,e);else{var l={},p=Object.keys(e).sort(i);for(c=0;c<p.length;c++){var h=p[c];a(e[h],h,o,e),l[h]=e[h]}if(void 0===s)return l;t.push([s,n,e]),s[n]=l}o.pop()}}function c(e){return e=void 0!==e?e:function(e,t){return t},function(t,n){if(r.length>0)for(var o=0;o<r.length;o++){var i=r[o];if(i[1]===t&&i[0]===n){n="[Circular]",r.splice(o,1);break}}return e.call(this,t,n)}}},9930:e=>{"use strict";var t="Function.prototype.bind called on incompatible ",r=Array.prototype.slice,n=Object.prototype.toString,o="[object Function]";e.exports=function(e){var i=this;if("function"!=typeof i||n.call(i)!==o)throw new TypeError(t+i);for(var s,a=r.call(arguments,1),c=function(){if(this instanceof s){var t=i.apply(this,a.concat(r.call(arguments)));return Object(t)===t?t:this}return i.apply(e,a.concat(r.call(arguments)))},u=Math.max(0,i.length-a.length),l=[],p=0;p<u;p++)l.push("$"+p);if(s=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(c),i.prototype){var h=function(){};h.prototype=i.prototype,s.prototype=new h,h.prototype=null}return s}},1930:(e,t,r)=>{"use strict";var n=r(9930);e.exports=Function.prototype.bind||n},1801:(e,t,r)=>{"use strict";var n,o=SyntaxError,i=Function,s=TypeError,a=function(e){try{return i('"use strict"; return ('+e+").constructor;")()}catch(e){}},c=Object.getOwnPropertyDescriptor;if(c)try{c({},"")}catch(e){c=null}var u=function(){throw new s},l=c?function(){try{return u}catch(e){try{return c(arguments,"callee").get}catch(e){return u}}}():u,p=r(9905)(),h=Object.getPrototypeOf||function(e){return e.__proto__},f={},d="undefined"==typeof Uint8Array?n:h(Uint8Array),g={"%AggregateError%":"undefined"==typeof AggregateError?n:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?n:ArrayBuffer,"%ArrayIteratorPrototype%":p?h([][Symbol.iterator]()):n,"%AsyncFromSyncIteratorPrototype%":n,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?n:Atomics,"%BigInt%":"undefined"==typeof BigInt?n:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?n:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?n:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?n:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?n:FinalizationRegistry,"%Function%":i,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?n:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?n:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?n:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":p?h(h([][Symbol.iterator]())):n,"%JSON%":"object"==typeof JSON?JSON:n,"%Map%":"undefined"==typeof Map?n:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&p?h((new Map)[Symbol.iterator]()):n,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?n:Promise,"%Proxy%":"undefined"==typeof Proxy?n:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?n:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?n:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&p?h((new Set)[Symbol.iterator]()):n,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?n:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":p?h(""[Symbol.iterator]()):n,"%Symbol%":p?Symbol:n,"%SyntaxError%":o,"%ThrowTypeError%":l,"%TypedArray%":d,"%TypeError%":s,"%Uint8Array%":"undefined"==typeof Uint8Array?n:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?n:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?n:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?n:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?n:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?n:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?n:WeakSet},y=function e(t){var r;if("%AsyncFunction%"===t)r=a("async function () {}");else if("%GeneratorFunction%"===t)r=a("function* () {}");else if("%AsyncGeneratorFunction%"===t)r=a("async function* () {}");else if("%AsyncGenerator%"===t){var n=e("%AsyncGeneratorFunction%");n&&(r=n.prototype)}else if("%AsyncIteratorPrototype%"===t){var o=e("%AsyncGenerator%");o&&(r=h(o.prototype))}return g[t]=r,r},m={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},b=r(1930),w=r(9284),v=b.call(Function.call,Array.prototype.concat),A=b.call(Function.apply,Array.prototype.splice),x=b.call(Function.call,String.prototype.replace),S=b.call(Function.call,String.prototype.slice),_=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,E=/\\(\\)?/g,T=function(e){var t=S(e,0,1),r=S(e,-1);if("%"===t&&"%"!==r)throw new o("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==t)throw new o("invalid intrinsic syntax, expected opening `%`");var n=[];return x(e,_,(function(e,t,r,o){n[n.length]=r?x(o,E,"$1"):t||e})),n},B=function(e,t){var r,n=e;if(w(m,n)&&(n="%"+(r=m[n])[0]+"%"),w(g,n)){var i=g[n];if(i===f&&(i=y(n)),void 0===i&&!t)throw new s("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:r,name:n,value:i}}throw new o("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new s("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new s('"allowMissing" argument must be a boolean');var r=T(e),n=r.length>0?r[0]:"",i=B("%"+n+"%",t),a=i.name,u=i.value,l=!1,p=i.alias;p&&(n=p[0],A(r,v([0,1],p)));for(var h=1,f=!0;h<r.length;h+=1){var d=r[h],y=S(d,0,1),m=S(d,-1);if(('"'===y||"'"===y||"`"===y||'"'===m||"'"===m||"`"===m)&&y!==m)throw new o("property names with quotes must have matching quotes");if("constructor"!==d&&f||(l=!0),w(g,a="%"+(n+="."+d)+"%"))u=g[a];else if(null!=u){if(!(d in u)){if(!t)throw new s("base intrinsic for "+e+" exists, but the property is not available.");return}if(c&&h+1>=r.length){var b=c(u,d);u=(f=!!b)&&"get"in b&&!("originalValue"in b.get)?b.get:u[d]}else f=w(u,d),u=u[d];f&&!l&&(g[a]=u)}}return u}},9905:(e,t,r)=>{"use strict";var n="undefined"!=typeof Symbol&&Symbol,o=r(5682);e.exports=function(){return"function"==typeof n&&"function"==typeof Symbol&&"symbol"==typeof n("foo")&&"symbol"==typeof Symbol("bar")&&o()}},5682:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},9284:(e,t,r)=>{"use strict";var n=r(1930);e.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},7267:(e,t,r)=>{var n;!function(){"use strict";var t="object"==typeof window?window:{};!t.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(t=r.g);var o=!t.HI_BASE32_NO_COMMON_JS&&e.exports,i=r.amdO,s="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),a={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],u=function(e,t){t.length>10&&(t="..."+t.substr(-10));var r=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+t+" <-");throw r.position=e,r},l=function(e){if(""===e)return[];if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var t,r,n,o,i,s,c,u,l=[],p=0,h=(e=e.replace(/=/g,"")).length,f=0,d=h>>3<<3;f<d;)t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],s=a[e.charAt(f++)],c=a[e.charAt(f++)],u=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1),l[p++]=255&(i<<7|s<<2|c>>>3),l[p++]=255&(c<<5|u);var g=h-d;return 2===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2)):4===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4)):5===g?(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1)):7===g&&(t=a[e.charAt(f++)],r=a[e.charAt(f++)],n=a[e.charAt(f++)],o=a[e.charAt(f++)],i=a[e.charAt(f++)],s=a[e.charAt(f++)],c=a[e.charAt(f++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|o>>>4),l[p++]=255&(o<<4|i>>>1),l[p++]=255&(i<<7|s<<2|c>>>3)),l},p=function(e,t){if(!t)return function(e){for(var t,r,n="",o=e.length,i=0,s=0;i<o;)if((t=e[i++])<=127)n+=String.fromCharCode(t);else{t>191&&t<=223?(r=31&t,s=1):t<=239?(r=15&t,s=2):t<=247?(r=7&t,s=3):u(i,n);for(var a=0;a<s;++a)((t=e[i++])<128||t>191)&&u(i,n),r<<=6,r+=63&t;r>=55296&&r<=57343&&u(i,n),r>1114111&&u(i,n),r<=65535?n+=String.fromCharCode(r):(r-=65536,n+=String.fromCharCode(55296+(r>>10)),n+=String.fromCharCode(56320+(1023&r)))}return n}(l(e));if(""===e)return"";if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var r,n,o,i,s,c,p,h,f="",d=e.indexOf("=");-1===d&&(d=e.length);for(var g=0,y=d>>3<<3;g<y;)r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],h=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))+String.fromCharCode(255&(p<<5|h));var m=d-y;return 2===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))):4===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))):5===m?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))):7===m&&(r=a[e.charAt(g++)],n=a[e.charAt(g++)],o=a[e.charAt(g++)],i=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],f+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|o<<1|i>>>4))+String.fromCharCode(255&(i<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))),f},h={encode:function(e,t){var r="string"!=typeof e;return r&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),r?function(e){for(var t,r,n,o,i,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e[u++],r=e[u++],n=e[u++],o=e[u++],i=e[u++],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i];var p=c-l;return 1===p?(t=e[u],a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e[u++],r=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e[u++],r=e[u++],n=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e[u++],r=e[u++],n=e[u++],o=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"="),a}(e):t?function(e){for(var t,r,n,o,i,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),o=e.charCodeAt(u++),i=e.charCodeAt(u++),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i];var p=c-l;return 1===p?(t=e.charCodeAt(u),a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),o=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"="),a}(e):function(e){var t,r,n,o,i,a,u,l=!1,p="",h=0,f=0,d=e.length;if(""===e)return p;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],u=f;h<d&&u<5;++h)(a=e.charCodeAt(h))<128?c[u++]=a:a<2048?(c[u++]=192|a>>6,c[u++]=128|63&a):a<55296||a>=57344?(c[u++]=224|a>>12,c[u++]=128|a>>6&63,c[u++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++h)),c[u++]=240|a>>18,c[u++]=128|a>>12&63,c[u++]=128|a>>6&63,c[u++]=128|63&a);f=u-5,h===d&&++h,h>d&&u<6&&(l=!0),t=c[0],u>4?(r=c[1],n=c[2],o=c[3],i=c[4],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[31&(o<<3|i>>>5)]+s[31&i]):1===u?p+=s[t>>>3]+s[t<<2&31]+"======":2===u?(r=c[1],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===u?(r=c[1],n=c[2],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):(r=c[1],n=c[2],o=c[3],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|o>>>7)]+s[o>>>2&31]+s[o<<3&31]+"=")}while(!l);return p}(e)},decode:p};p.asBytes=l,o?e.exports=h:(t.base32=h,i&&(void 0===(n=function(){return h}.call(h,r,h,e))||(e.exports=n)))}()},4525:(e,t)=>{t.read=function(e,t,r,n,o){var i,s,a=8*o-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?o-1:0,h=r?-1:1,f=e[t+p];for(p+=h,i=f&(1<<-l)-1,f>>=-l,l+=a;l>0;i=256*i+e[t+p],p+=h,l-=8);for(s=i&(1<<-l)-1,i>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===i)i=1-u;else{if(i===c)return s?NaN:1/0*(f?-1:1);s+=Math.pow(2,n),i-=u}return(f?-1:1)*s*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var s,a,c,u=8*i-o-1,l=(1<<u)-1,p=l>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:i-1,d=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,o),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,o),s=0));o>=8;e[r+f]=255&a,f+=d,a/=256,o-=8);for(s=s<<o|a,u+=o;u>0;e[r+f]=255&s,f+=d,s/=256,u-=8);e[r+f-d]|=128*g}},3477:(module,exports,__nested_webpack_require_96669__)=>{var __WEBPACK_AMD_DEFINE_RESULT__;(function(){"use strict";var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=__nested_webpack_require_96669__.g:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD=__nested_webpack_require_96669__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,r){var n,o=typeof e;if("string"===o){var i,s=[],a=e.length,c=0;for(n=0;n<a;++n)(i=e.charCodeAt(n))<128?s[c++]=i:i<2048?(s[c++]=192|i>>6,s[c++]=128|63&i):i<55296||i>=57344?(s[c++]=224|i>>12,s[c++]=128|i>>6&63,s[c++]=128|63&i):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++n)),s[c++]=240|i>>18,s[c++]=128|i>>12&63,s[c++]=128|i>>6&63,s[c++]=128|63&i);e=s}else{if("object"!==o)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var u=[],l=[];for(n=0;n<64;++n){var p=e[n]||0;u[n]=92^p,l[n]=54^p}Sha256.call(this,t,r),this.update(l),this.oKeyPad=u,this.inner=!0,this.sharedMemory=r}Sha256.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,o,i=0,s=e.length,a=this.blocks;i<s;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(o=this.start;i<s&&o<64;++i)a[o>>2]|=e[i]<<SHIFT[3&o++];else for(o=this.start;i<s&&o<64;++i)(n=e.charCodeAt(i))<128?a[o>>2]|=n<<SHIFT[3&o++]:n<2048?(a[o>>2]|=(192|n>>6)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]):n<55296||n>=57344?(a[o>>2]|=(224|n>>12)<<SHIFT[3&o++],a[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++i)),a[o>>2]|=(240|n>>18)<<SHIFT[3&o++],a[o>>2]|=(128|n>>12&63)<<SHIFT[3&o++],a[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],a[o>>2]|=(128|63&n)<<SHIFT[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=a[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,o,i,s,a,c,u=this.h0,l=this.h1,p=this.h2,h=this.h3,f=this.h4,d=this.h5,g=this.h6,y=this.h7,m=this.blocks;for(e=16;e<64;++e)t=((o=m[e-15])>>>7|o<<25)^(o>>>18|o<<14)^o>>>3,r=((o=m[e-2])>>>17|o<<15)^(o>>>19|o<<13)^o>>>10,m[e]=m[e-16]+t+m[e-7]+r<<0;for(c=l&p,e=0;e<64;e+=4)this.first?(this.is224?(i=300032,y=(o=m[0]-1413257819)-150054599<<0,h=o+24177077<<0):(i=704751109,y=(o=m[0]-210244248)-1521486534<<0,h=o+143694565<<0),this.first=!1):(t=(u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),n=(i=u&l)^u&p^c,y=h+(o=y+(r=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&d^~f&g)+K[e]+m[e])<<0,h=o+(t+n)<<0),t=(h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10),n=(s=h&u)^h&l^i,g=p+(o=g+(r=(y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(y&f^~y&d)+K[e+1]+m[e+1])<<0,t=((p=o+(t+n)<<0)>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),n=(a=p&h)^p&u^s,d=l+(o=d+(r=(g>>>6|g<<26)^(g>>>11|g<<21)^(g>>>25|g<<7))+(g&y^~g&f)+K[e+2]+m[e+2])<<0,t=((l=o+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(c=l&p)^l&h^a,f=u+(o=f+(r=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&g^~d&y)+K[e+3]+m[e+3])<<0,u=o+(t+n)<<0;this.h0=this.h0+u<<0,this.h1=this.h1+l<<0,this.h2=this.h2+p<<0,this.h3=this.h3+h<<0,this.h4=this.h4+f<<0,this.h5=this.h5+d<<0,this.h6=this.h6+g<<0,this.h7=this.h7+y<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,i=this.h5,s=this.h6,a=this.h7,c=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s];return this.is224||(c+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]),c},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,i=this.h5,s=this.h6,a=this.h7,c=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,o>>24&255,o>>16&255,o>>8&255,255&o,i>>24&255,i>>16&255,i>>8&255,255&i,s>>24&255,s>>16&255,s>>8&255,255&s];return this.is224||c.push(a>>24&255,a>>16&255,a>>8&255,255&a),c},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__nested_webpack_require_96669__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))})()},583:(e,t,r)=>{var n;!function(){"use strict";var o="input is invalid type",i="object"==typeof window,s=i?window:{};s.JS_SHA3_NO_WINDOW&&(i=!1);var a=!i&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var c=!s.JS_SHA3_NO_COMMON_JS&&e.exports,u=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,p="0123456789abcdef".split(""),h=[4,1024,262144,67108864],f=[0,8,16,24],d=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],g=[224,256,384,512],y=[128,256],m=["hex","buffer","arrayBuffer","array","digest"],b={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var w=function(e,t,r){return function(n){return new D(e,t,e).update(n)[r]()}},v=function(e,t,r){return function(n,o){return new D(e,t,o).update(n)[r]()}},A=function(e,t,r){return function(t,n,o,i){return T["cshake"+e].update(t,n,o,i)[r]()}},x=function(e,t,r){return function(t,n,o,i){return T["kmac"+e].update(t,n,o,i)[r]()}},S=function(e,t,r,n){for(var o=0;o<m.length;++o){var i=m[o];e[i]=t(r,n,i)}return e},_=function(e,t){var r=w(e,t,"hex");return r.create=function(){return new D(e,t,e)},r.update=function(e){return r.create().update(e)},S(r,w,e,t)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:g,createMethod:_},{name:"sha3",padding:[6,1536,393216,100663296],bits:g,createMethod:_},{name:"shake",padding:[31,7936,2031616,520093696],bits:y,createMethod:function(e,t){var r=v(e,t,"hex");return r.create=function(r){return new D(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},S(r,v,e,t)}},{name:"cshake",padding:h,bits:y,createMethod:function(e,t){var r=b[e],n=A(e,0,"hex");return n.create=function(n,o,i){return o||i?new D(e,t,n).bytepad([o,i],r):T["shake"+e].create(n)},n.update=function(e,t,r,o){return n.create(t,r,o).update(e)},S(n,A,e,t)}},{name:"kmac",padding:h,bits:y,createMethod:function(e,t){var r=b[e],n=x(e,0,"hex");return n.create=function(n,o,i){return new N(e,t,o).bytepad(["KMAC",i],r).bytepad([n],r)},n.update=function(e,t,r,o){return n.create(e,r,o).update(t)},S(n,x,e,t)}}],T={},B=[],k=0;k<E.length;++k)for(var U=E[k],I=U.bits,C=0;C<I.length;++C){var R=U.name+"_"+I[C];if(B.push(R),T[R]=U.createMethod(I[C],U.padding),"sha3"!==U.name){var O=U.name+I[C];B.push(O),T[O]=T[R]}}function D(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function N(e,t,r){D.call(this,e,t,r)}D.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(o);t=!0}for(var n,i,s=this.blocks,a=this.byteCount,c=e.length,u=this.blockCount,p=0,h=this.s;p<c;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<u+1;++n)s[n]=0;if(t)for(n=this.start;p<c&&n<a;++p)s[n>>2]|=e[p]<<f[3&n++];else for(n=this.start;p<c&&n<a;++p)(i=e.charCodeAt(p))<128?s[n>>2]|=i<<f[3&n++]:i<2048?(s[n>>2]|=(192|i>>6)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]):i<55296||i>=57344?(s[n>>2]|=(224|i>>12)<<f[3&n++],s[n>>2]|=(128|i>>6&63)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++p)),s[n>>2]|=(240|i>>18)<<f[3&n++],s[n>>2]|=(128|i>>12&63)<<f[3&n++],s[n>>2]|=(128|i>>6&63)<<f[3&n++],s[n>>2]|=(128|63&i)<<f[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[u],n=0;n<u;++n)h[n]^=s[n];P(h),this.reset=!0}else this.start=n}return this},D.prototype.encode=function(e,t){var r=255&e,n=1,o=[r];for(r=255&(e>>=8);r>0;)o.unshift(r),r=255&(e>>=8),++n;return t?o.push(n):o.unshift(n),this.update(o),o.length},D.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(o);t=!0}var n=0,i=e.length;if(t)n=i;else for(var s=0;s<e.length;++s){var a=e.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(e),n},D.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var o=t-r%t,i=[];return i.length=o,this.update(i),this},D.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];P(n)}},D.prototype.toString=D.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,s=0,a="";s<n;){for(i=0;i<t&&s<n;++i,++s)e=r[i],a+=p[e>>4&15]+p[15&e]+p[e>>12&15]+p[e>>8&15]+p[e>>20&15]+p[e>>16&15]+p[e>>28&15]+p[e>>24&15];s%t==0&&(P(r),i=0)}return o&&(e=r[i],a+=p[e>>4&15]+p[15&e],o>1&&(a+=p[e>>12&15]+p[e>>8&15]),o>2&&(a+=p[e>>20&15]+p[e>>16&15])),a},D.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,s=0,a=this.outputBits>>3;e=o?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(e);s<n;){for(i=0;i<t&&s<n;++i,++s)c[s]=r[i];s%t==0&&P(r)}return o&&(c[i]=r[i],e=e.slice(0,a)),e},D.prototype.buffer=D.prototype.arrayBuffer,D.prototype.digest=D.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,o=this.outputBlocks,i=this.extraBytes,s=0,a=0,c=[];a<o;){for(s=0;s<r&&a<o;++s,++a)e=a<<2,t=n[s],c[e]=255&t,c[e+1]=t>>8&255,c[e+2]=t>>16&255,c[e+3]=t>>24&255;a%r==0&&P(n)}return i&&(e=a<<2,t=n[s],c[e]=255&t,i>1&&(c[e+1]=t>>8&255),i>2&&(c[e+2]=t>>16&255)),c},N.prototype=new D,N.prototype.finalize=function(){return this.encode(this.outputBits,!0),D.prototype.finalize.call(this)};var P=function(e){var t,r,n,o,i,s,a,c,u,l,p,h,f,g,y,m,b,w,v,A,x,S,_,E,T,B,k,U,I,C,R,O,D,N,P,L,j,z,F,M,H,G,q,K,$,V,W,X,Y,J,Z,Q,ee,te,re,ne,oe,ie,se,ae,ce,ue,le;for(n=0;n<48;n+=2)o=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],c=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],l=e[6]^e[16]^e[26]^e[36]^e[46],p=e[7]^e[17]^e[27]^e[37]^e[47],t=(h=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(f=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=o^(c<<1|u>>>31),r=i^(u<<1|c>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(l<<1|p>>>31),r=a^(p<<1|l>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=c^(h<<1|f>>>31),r=u^(f<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=l^(o<<1|i>>>31),r=p^(i<<1|o>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,g=e[0],y=e[1],V=e[11]<<4|e[10]>>>28,W=e[10]<<4|e[11]>>>28,U=e[20]<<3|e[21]>>>29,I=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,ce=e[30]<<9|e[31]>>>23,G=e[40]<<18|e[41]>>>14,q=e[41]<<18|e[40]>>>14,N=e[2]<<1|e[3]>>>31,P=e[3]<<1|e[2]>>>31,m=e[13]<<12|e[12]>>>20,b=e[12]<<12|e[13]>>>20,X=e[22]<<10|e[23]>>>22,Y=e[23]<<10|e[22]>>>22,C=e[33]<<13|e[32]>>>19,R=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,le=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,j=e[15]<<6|e[14]>>>26,w=e[25]<<11|e[24]>>>21,v=e[24]<<11|e[25]>>>21,J=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,O=e[45]<<29|e[44]>>>3,D=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,T=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,oe=e[16]<<23|e[17]>>>9,z=e[26]<<25|e[27]>>>7,F=e[27]<<25|e[26]>>>7,A=e[36]<<21|e[37]>>>11,x=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,K=e[8]<<27|e[9]>>>5,$=e[9]<<27|e[8]>>>5,B=e[18]<<20|e[19]>>>12,k=e[19]<<20|e[18]>>>12,ie=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,M=e[38]<<8|e[39]>>>24,H=e[39]<<8|e[38]>>>24,S=e[48]<<14|e[49]>>>18,_=e[49]<<14|e[48]>>>18,e[0]=g^~m&w,e[1]=y^~b&v,e[10]=E^~B&U,e[11]=T^~k&I,e[20]=N^~L&z,e[21]=P^~j&F,e[30]=K^~V&X,e[31]=$^~W&Y,e[40]=te^~ne&ie,e[41]=re^~oe&se,e[2]=m^~w&A,e[3]=b^~v&x,e[12]=B^~U&C,e[13]=k^~I&R,e[22]=L^~z&M,e[23]=j^~F&H,e[32]=V^~X&J,e[33]=W^~Y&Z,e[42]=ne^~ie&ae,e[43]=oe^~se&ce,e[4]=w^~A&S,e[5]=v^~x&_,e[14]=U^~C&O,e[15]=I^~R&D,e[24]=z^~M&G,e[25]=F^~H&q,e[34]=X^~J&Q,e[35]=Y^~Z&ee,e[44]=ie^~ae&ue,e[45]=se^~ce&le,e[6]=A^~S&g,e[7]=x^~_&y,e[16]=C^~O&E,e[17]=R^~D&T,e[26]=M^~G&N,e[27]=H^~q&P,e[36]=J^~Q&K,e[37]=Z^~ee&$,e[46]=ae^~ue&te,e[47]=ce^~le&re,e[8]=S^~g&m,e[9]=_^~y&b,e[18]=O^~E&B,e[19]=D^~T&k,e[28]=G^~N&L,e[29]=q^~P&j,e[38]=Q^~K&V,e[39]=ee^~$&W,e[48]=ue^~te&ne,e[49]=le^~re&oe,e[0]^=d[n],e[1]^=d[n+1]};if(c)e.exports=T;else{for(k=0;k<B.length;++k)s[B[k]]=T[B[k]];u&&(void 0===(n=function(){return T}.call(t,r,t,e))||(e.exports=n))}}()},9757:(e,t,r)=>{var n;!function(){"use strict";var t="input is invalid type",o="object"==typeof window,i=o?window:{};i.JS_SHA512_NO_WINDOW&&(o=!1);var s=!o&&"object"==typeof self;!i.JS_SHA512_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?i=r.g:s&&(i=self);var a=!i.JS_SHA512_NO_COMMON_JS&&e.exports,c=r.amdO,u=!i.JS_SHA512_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,l="0123456789abcdef".split(""),p=[-2147483648,8388608,32768,128],h=[24,16,8,0],f=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],d=["hex","array","digest","arrayBuffer"],g=[];!i.JS_SHA512_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!u||!i.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var y=function(e,t){return function(r){return new v(t,!0).update(r)[e]()}},m=function(e){var t=y("hex",e);t.create=function(){return new v(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<d.length;++r){var n=d[r];t[n]=y(n,e)}return t},b=function(e,t){return function(r,n){return new A(r,t,!0).update(n)[e]()}},w=function(e){var t=b("hex",e);t.create=function(t){return new A(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<d.length;++r){var n=d[r];t[n]=b(n,e)}return t};function v(e,t){t?(g[0]=g[1]=g[2]=g[3]=g[4]=g[5]=g[6]=g[7]=g[8]=g[9]=g[10]=g[11]=g[12]=g[13]=g[14]=g[15]=g[16]=g[17]=g[18]=g[19]=g[20]=g[21]=g[22]=g[23]=g[24]=g[25]=g[26]=g[27]=g[28]=g[29]=g[30]=g[31]=g[32]=0,this.blocks=g):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],384==e?(this.h0h=3418070365,this.h0l=3238371032,this.h1h=1654270250,this.h1l=914150663,this.h2h=2438529370,this.h2l=812702999,this.h3h=355462360,this.h3l=4144912697,this.h4h=1731405415,this.h4l=4290775857,this.h5h=2394180231,this.h5l=1750603025,this.h6h=3675008525,this.h6l=1694076839,this.h7h=1203062813,this.h7l=3204075428):256==e?(this.h0h=573645204,this.h0l=4230739756,this.h1h=2673172387,this.h1l=3360449730,this.h2h=596883563,this.h2l=1867755857,this.h3h=2520282905,this.h3l=1497426621,this.h4h=2519219938,this.h4l=2827943907,this.h5h=3193839141,this.h5l=1401305490,this.h6h=721525244,this.h6l=746961066,this.h7h=246885852,this.h7l=2177182882):224==e?(this.h0h=2352822216,this.h0l=424955298,this.h1h=1944164710,this.h1l=2312950998,this.h2h=502970286,this.h2l=855612546,this.h3h=1738396948,this.h3l=1479516111,this.h4h=258812777,this.h4l=2077511080,this.h5h=2011393907,this.h5l=79989058,this.h6h=1067287976,this.h6l=1780299464,this.h7h=286451373,this.h7l=2446758561):(this.h0h=1779033703,this.h0l=4089235720,this.h1h=3144134277,this.h1l=2227873595,this.h2h=1013904242,this.h2l=4271175723,this.h3h=2773480762,this.h3l=1595750129,this.h4h=1359893119,this.h4l=2917565137,this.h5h=2600822924,this.h5l=725511199,this.h6h=528734635,this.h6l=4215389547,this.h7h=1541459225,this.h7l=327033209),this.bits=e,this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1}function A(e,r,n){var o,i=typeof e;if("string"!==i){if("object"!==i)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);o=!0}var s=e.length;if(!o){for(var a,c=[],l=(s=e.length,0),p=0;p<s;++p)(a=e.charCodeAt(p))<128?c[l++]=a:a<2048?(c[l++]=192|a>>6,c[l++]=128|63&a):a<55296||a>=57344?(c[l++]=224|a>>12,c[l++]=128|a>>6&63,c[l++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++p)),c[l++]=240|a>>18,c[l++]=128|a>>12&63,c[l++]=128|a>>6&63,c[l++]=128|63&a);e=c}e.length>128&&(e=new v(r,!0).update(e).array());var h=[],f=[];for(p=0;p<128;++p){var d=e[p]||0;h[p]=92^d,f[p]=54^d}v.call(this,r,n),this.update(f),this.oKeyPad=h,this.inner=!0,this.sharedMemory=n}v.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var r,n=typeof e;if("string"!==n){if("object"!==n)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);r=!0}for(var o,i,s=0,a=e.length,c=this.blocks;s<a;){if(this.hashed&&(this.hashed=!1,c[0]=this.block,c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=c[16]=c[17]=c[18]=c[19]=c[20]=c[21]=c[22]=c[23]=c[24]=c[25]=c[26]=c[27]=c[28]=c[29]=c[30]=c[31]=c[32]=0),r)for(i=this.start;s<a&&i<128;++s)c[i>>2]|=e[s]<<h[3&i++];else for(i=this.start;s<a&&i<128;++s)(o=e.charCodeAt(s))<128?c[i>>2]|=o<<h[3&i++]:o<2048?(c[i>>2]|=(192|o>>6)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]):o<55296||o>=57344?(c[i>>2]|=(224|o>>12)<<h[3&i++],c[i>>2]|=(128|o>>6&63)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++s)),c[i>>2]|=(240|o>>18)<<h[3&i++],c[i>>2]|=(128|o>>12&63)<<h[3&i++],c[i>>2]|=(128|o>>6&63)<<h[3&i++],c[i>>2]|=(128|63&o)<<h[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=128?(this.block=c[32],this.start=i-128,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this},v.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[32]=this.block,e[t>>2]|=p[3&t],this.block=e[32],t>=112&&(this.hashed||this.hash(),e[0]=this.block,e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=e[16]=e[17]=e[18]=e[19]=e[20]=e[21]=e[22]=e[23]=e[24]=e[25]=e[26]=e[27]=e[28]=e[29]=e[30]=e[31]=e[32]=0),e[30]=this.hBytes<<3|this.bytes>>>29,e[31]=this.bytes<<3,this.hash()}},v.prototype.hash=function(){var e,t,r,n,o,i,s,a,c,u,l,p,h,d,g,y,m,b,w,v,A,x,S,_,E,T=this.h0h,B=this.h0l,k=this.h1h,U=this.h1l,I=this.h2h,C=this.h2l,R=this.h3h,O=this.h3l,D=this.h4h,N=this.h4l,P=this.h5h,L=this.h5l,j=this.h6h,z=this.h6l,F=this.h7h,M=this.h7l,H=this.blocks;for(e=32;e<160;e+=2)t=((v=H[e-30])>>>1|(A=H[e-29])<<31)^(v>>>8|A<<24)^v>>>7,r=(A>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25),n=((v=H[e-4])>>>19|(A=H[e-3])<<13)^(A>>>29|v<<3)^v>>>6,o=(A>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26),v=H[e-32],A=H[e-31],c=((x=H[e-14])>>>16)+(v>>>16)+(t>>>16)+(n>>>16)+((a=(65535&x)+(65535&v)+(65535&t)+(65535&n)+((s=((S=H[e-13])>>>16)+(A>>>16)+(r>>>16)+(o>>>16)+((i=(65535&S)+(65535&A)+(65535&r)+(65535&o))>>>16))>>>16))>>>16),H[e]=c<<16|65535&a,H[e+1]=s<<16|65535&i;var G=T,q=B,K=k,$=U,V=I,W=C,X=R,Y=O,J=D,Z=N,Q=P,ee=L,te=j,re=z,ne=F,oe=M;for(y=K&V,m=$&W,e=0;e<160;e+=8)t=(G>>>28|q<<4)^(q>>>2|G<<30)^(q>>>7|G<<25),r=(q>>>28|G<<4)^(G>>>2|q<<30)^(G>>>7|q<<25),n=(J>>>14|Z<<18)^(J>>>18|Z<<14)^(Z>>>9|J<<23),o=(Z>>>14|J<<18)^(Z>>>18|J<<14)^(J>>>9|Z<<23),b=(u=G&K)^G&V^y,w=(l=q&$)^q&W^m,_=J&Q^~J&te,E=Z&ee^~Z&re,v=H[e],A=H[e+1],v=(c=((x=f[e])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(ne>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&ne)+((s=((S=f[e+1])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(oe>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&oe))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,ne=(c=(X>>>16)+(v>>>16)+((a=(65535&X)+(65535&v)+((s=(Y>>>16)+(A>>>16)+((i=(65535&Y)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,oe=s<<16|65535&i,t=((X=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(Y=s<<16|65535&i)<<4)^(Y>>>2|X<<30)^(Y>>>7|X<<25),r=(Y>>>28|X<<4)^(X>>>2|Y<<30)^(X>>>7|Y<<25),n=(ne>>>14|oe<<18)^(ne>>>18|oe<<14)^(oe>>>9|ne<<23),o=(oe>>>14|ne<<18)^(oe>>>18|ne<<14)^(ne>>>9|oe<<23),b=(p=X&G)^X&K^u,w=(h=Y&q)^Y&$^l,_=ne&J^~ne&Q,E=oe&Z^~oe&ee,v=H[e+2],A=H[e+3],v=(c=((x=f[e+2])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(te>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&te)+((s=((S=f[e+3])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(re>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&re))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,te=(c=(V>>>16)+(v>>>16)+((a=(65535&V)+(65535&v)+((s=(W>>>16)+(A>>>16)+((i=(65535&W)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,re=s<<16|65535&i,t=((V=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(W=s<<16|65535&i)<<4)^(W>>>2|V<<30)^(W>>>7|V<<25),r=(W>>>28|V<<4)^(V>>>2|W<<30)^(V>>>7|W<<25),n=(te>>>14|re<<18)^(te>>>18|re<<14)^(re>>>9|te<<23),o=(re>>>14|te<<18)^(re>>>18|te<<14)^(te>>>9|re<<23),b=(d=V&X)^V&G^p,w=(g=W&Y)^W&q^h,_=te&ne^~te&J,E=re&oe^~re&Z,v=H[e+4],A=H[e+5],v=(c=((x=f[e+4])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(Q>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&Q)+((s=((S=f[e+5])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(ee>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&ee))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,Q=(c=(K>>>16)+(v>>>16)+((a=(65535&K)+(65535&v)+((s=($>>>16)+(A>>>16)+((i=(65535&$)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ee=s<<16|65535&i,t=((K=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|($=s<<16|65535&i)<<4)^($>>>2|K<<30)^($>>>7|K<<25),r=($>>>28|K<<4)^(K>>>2|$<<30)^(K>>>7|$<<25),n=(Q>>>14|ee<<18)^(Q>>>18|ee<<14)^(ee>>>9|Q<<23),o=(ee>>>14|Q<<18)^(ee>>>18|Q<<14)^(Q>>>9|ee<<23),b=(y=K&V)^K&X^d,w=(m=$&W)^$&Y^g,_=Q&te^~Q&ne,E=ee&re^~ee&oe,v=H[e+6],A=H[e+7],v=(c=((x=f[e+6])>>>16)+(v>>>16)+(_>>>16)+(n>>>16)+(J>>>16)+((a=(65535&x)+(65535&v)+(65535&_)+(65535&n)+(65535&J)+((s=((S=f[e+7])>>>16)+(A>>>16)+(E>>>16)+(o>>>16)+(Z>>>16)+((i=(65535&S)+(65535&A)+(65535&E)+(65535&o)+(65535&Z))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&i,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((i=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,S=s<<16|65535&i,J=(c=(G>>>16)+(v>>>16)+((a=(65535&G)+(65535&v)+((s=(q>>>16)+(A>>>16)+((i=(65535&q)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,Z=s<<16|65535&i,G=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(S>>>16)+(A>>>16)+((i=(65535&S)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,q=s<<16|65535&i;c=(T>>>16)+(G>>>16)+((a=(65535&T)+(65535&G)+((s=(B>>>16)+(q>>>16)+((i=(65535&B)+(65535&q))>>>16))>>>16))>>>16),this.h0h=c<<16|65535&a,this.h0l=s<<16|65535&i,c=(k>>>16)+(K>>>16)+((a=(65535&k)+(65535&K)+((s=(U>>>16)+($>>>16)+((i=(65535&U)+(65535&$))>>>16))>>>16))>>>16),this.h1h=c<<16|65535&a,this.h1l=s<<16|65535&i,c=(I>>>16)+(V>>>16)+((a=(65535&I)+(65535&V)+((s=(C>>>16)+(W>>>16)+((i=(65535&C)+(65535&W))>>>16))>>>16))>>>16),this.h2h=c<<16|65535&a,this.h2l=s<<16|65535&i,c=(R>>>16)+(X>>>16)+((a=(65535&R)+(65535&X)+((s=(O>>>16)+(Y>>>16)+((i=(65535&O)+(65535&Y))>>>16))>>>16))>>>16),this.h3h=c<<16|65535&a,this.h3l=s<<16|65535&i,c=(D>>>16)+(J>>>16)+((a=(65535&D)+(65535&J)+((s=(N>>>16)+(Z>>>16)+((i=(65535&N)+(65535&Z))>>>16))>>>16))>>>16),this.h4h=c<<16|65535&a,this.h4l=s<<16|65535&i,c=(P>>>16)+(Q>>>16)+((a=(65535&P)+(65535&Q)+((s=(L>>>16)+(ee>>>16)+((i=(65535&L)+(65535&ee))>>>16))>>>16))>>>16),this.h5h=c<<16|65535&a,this.h5l=s<<16|65535&i,c=(j>>>16)+(te>>>16)+((a=(65535&j)+(65535&te)+((s=(z>>>16)+(re>>>16)+((i=(65535&z)+(65535&re))>>>16))>>>16))>>>16),this.h6h=c<<16|65535&a,this.h6l=s<<16|65535&i,c=(F>>>16)+(ne>>>16)+((a=(65535&F)+(65535&ne)+((s=(M>>>16)+(oe>>>16)+((i=(65535&M)+(65535&oe))>>>16))>>>16))>>>16),this.h7h=c<<16|65535&a,this.h7l=s<<16|65535&i},v.prototype.hex=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,o=this.h2h,i=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,p=this.h5h,h=this.h5l,f=this.h6h,d=this.h6l,g=this.h7h,y=this.h7l,m=this.bits,b=l[e>>28&15]+l[e>>24&15]+l[e>>20&15]+l[e>>16&15]+l[e>>12&15]+l[e>>8&15]+l[e>>4&15]+l[15&e]+l[t>>28&15]+l[t>>24&15]+l[t>>20&15]+l[t>>16&15]+l[t>>12&15]+l[t>>8&15]+l[t>>4&15]+l[15&t]+l[r>>28&15]+l[r>>24&15]+l[r>>20&15]+l[r>>16&15]+l[r>>12&15]+l[r>>8&15]+l[r>>4&15]+l[15&r]+l[n>>28&15]+l[n>>24&15]+l[n>>20&15]+l[n>>16&15]+l[n>>12&15]+l[n>>8&15]+l[n>>4&15]+l[15&n]+l[o>>28&15]+l[o>>24&15]+l[o>>20&15]+l[o>>16&15]+l[o>>12&15]+l[o>>8&15]+l[o>>4&15]+l[15&o]+l[i>>28&15]+l[i>>24&15]+l[i>>20&15]+l[i>>16&15]+l[i>>12&15]+l[i>>8&15]+l[i>>4&15]+l[15&i]+l[s>>28&15]+l[s>>24&15]+l[s>>20&15]+l[s>>16&15]+l[s>>12&15]+l[s>>8&15]+l[s>>4&15]+l[15&s];return m>=256&&(b+=l[a>>28&15]+l[a>>24&15]+l[a>>20&15]+l[a>>16&15]+l[a>>12&15]+l[a>>8&15]+l[a>>4&15]+l[15&a]),m>=384&&(b+=l[c>>28&15]+l[c>>24&15]+l[c>>20&15]+l[c>>16&15]+l[c>>12&15]+l[c>>8&15]+l[c>>4&15]+l[15&c]+l[u>>28&15]+l[u>>24&15]+l[u>>20&15]+l[u>>16&15]+l[u>>12&15]+l[u>>8&15]+l[u>>4&15]+l[15&u]+l[p>>28&15]+l[p>>24&15]+l[p>>20&15]+l[p>>16&15]+l[p>>12&15]+l[p>>8&15]+l[p>>4&15]+l[15&p]+l[h>>28&15]+l[h>>24&15]+l[h>>20&15]+l[h>>16&15]+l[h>>12&15]+l[h>>8&15]+l[h>>4&15]+l[15&h]),512==m&&(b+=l[f>>28&15]+l[f>>24&15]+l[f>>20&15]+l[f>>16&15]+l[f>>12&15]+l[f>>8&15]+l[f>>4&15]+l[15&f]+l[d>>28&15]+l[d>>24&15]+l[d>>20&15]+l[d>>16&15]+l[d>>12&15]+l[d>>8&15]+l[d>>4&15]+l[15&d]+l[g>>28&15]+l[g>>24&15]+l[g>>20&15]+l[g>>16&15]+l[g>>12&15]+l[g>>8&15]+l[g>>4&15]+l[15&g]+l[y>>28&15]+l[y>>24&15]+l[y>>20&15]+l[y>>16&15]+l[y>>12&15]+l[y>>8&15]+l[y>>4&15]+l[15&y]),b},v.prototype.toString=v.prototype.hex,v.prototype.digest=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,o=this.h2h,i=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,l=this.h5h,p=this.h5l,h=this.h6h,f=this.h6l,d=this.h7h,g=this.h7l,y=this.bits,m=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,o>>24&255,o>>16&255,o>>8&255,255&o,i>>24&255,i>>16&255,i>>8&255,255&i,s>>24&255,s>>16&255,s>>8&255,255&s];return y>=256&&m.push(a>>24&255,a>>16&255,a>>8&255,255&a),y>=384&&m.push(c>>24&255,c>>16&255,c>>8&255,255&c,u>>24&255,u>>16&255,u>>8&255,255&u,l>>24&255,l>>16&255,l>>8&255,255&l,p>>24&255,p>>16&255,p>>8&255,255&p),512==y&&m.push(h>>24&255,h>>16&255,h>>8&255,255&h,f>>24&255,f>>16&255,f>>8&255,255&f,d>>24&255,d>>16&255,d>>8&255,255&d,g>>24&255,g>>16&255,g>>8&255,255&g),m},v.prototype.array=v.prototype.digest,v.prototype.arrayBuffer=function(){this.finalize();var e=this.bits,t=new ArrayBuffer(e/8),r=new DataView(t);return r.setUint32(0,this.h0h),r.setUint32(4,this.h0l),r.setUint32(8,this.h1h),r.setUint32(12,this.h1l),r.setUint32(16,this.h2h),r.setUint32(20,this.h2l),r.setUint32(24,this.h3h),e>=256&&r.setUint32(28,this.h3l),e>=384&&(r.setUint32(32,this.h4h),r.setUint32(36,this.h4l),r.setUint32(40,this.h5h),r.setUint32(44,this.h5l)),512==e&&(r.setUint32(48,this.h6h),r.setUint32(52,this.h6l),r.setUint32(56,this.h7h),r.setUint32(60,this.h7l)),t},v.prototype.clone=function(){var e=new v(this.bits,!1);return this.copyTo(e),e},v.prototype.copyTo=function(e){var t=0,r=["h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","start","bytes","hBytes","finalized","hashed","lastByteIndex"];for(t=0;t<r.length;++t)e[r[t]]=this[r[t]];for(t=0;t<this.blocks.length;++t)e.blocks[t]=this.blocks[t]},A.prototype=new v,A.prototype.finalize=function(){if(v.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();v.call(this,this.bits,this.sharedMemory),this.update(this.oKeyPad),this.update(e),v.prototype.finalize.call(this)}},A.prototype.clone=function(){var e=new A([],this.bits,!1);this.copyTo(e),e.inner=this.inner;for(var t=0;t<this.oKeyPad.length;++t)e.oKeyPad[t]=this.oKeyPad[t];return e};var x=m(512);x.sha512=x,x.sha384=m(384),x.sha512_256=m(256),x.sha512_224=m(224),x.sha512.hmac=w(512),x.sha384.hmac=w(384),x.sha512_256.hmac=w(256),x.sha512_224.hmac=w(224),a?e.exports=x:(i.sha512=x.sha512,i.sha384=x.sha384,i.sha512_256=x.sha512_256,i.sha512_224=x.sha512_224,c&&(void 0===(n=function(){return x}.call(x,r,x,e))||(e.exports=n)))}()},4360:(e,t,r)=>{var n=r(592).stringify,o=r(9385);e.exports=function(e){return{parse:o(e),stringify:n}},e.exports.parse=o(),e.exports.stringify=n},9385:(e,t,r)=>{var n=null;const o=/(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/,i=/(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;e.exports=function(e){"use strict";var t={strict:!1,storeAsString:!1,alwaysParseAsBig:!1,useNativeBigInt:!1,protoAction:"error",constructorAction:"error"};if(null!=e){if(!0===e.strict&&(t.strict=!0),!0===e.storeAsString&&(t.storeAsString=!0),t.alwaysParseAsBig=!0===e.alwaysParseAsBig&&e.alwaysParseAsBig,t.useNativeBigInt=!0===e.useNativeBigInt&&e.useNativeBigInt,void 0!==e.constructorAction){if("error"!==e.constructorAction&&"ignore"!==e.constructorAction&&"preserve"!==e.constructorAction)throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e.constructorAction}`);t.constructorAction=e.constructorAction}if(void 0!==e.protoAction){if("error"!==e.protoAction&&"ignore"!==e.protoAction&&"preserve"!==e.protoAction)throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e.protoAction}`);t.protoAction=e.protoAction}}var s,a,c,u,l={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},p=function(e){throw{name:"SyntaxError",message:e,at:s,text:c}},h=function(e){return e&&e!==a&&p("Expected '"+e+"' instead of '"+a+"'"),a=c.charAt(s),s+=1,a},f=function(){var e,o="";for("-"===a&&(o="-",h("-"));a>="0"&&a<="9";)o+=a,h();if("."===a)for(o+=".";h()&&a>="0"&&a<="9";)o+=a;if("e"===a||"E"===a)for(o+=a,h(),"-"!==a&&"+"!==a||(o+=a,h());a>="0"&&a<="9";)o+=a,h();if(e=+o,isFinite(e))return null==n&&(n=r(5117)),o.length>15?t.storeAsString?o:t.useNativeBigInt?BigInt(o):new n(o):t.alwaysParseAsBig?t.useNativeBigInt?BigInt(e):new n(e):e;p("Bad number")},d=function(){var e,t,r,n="";if('"'===a)for(var o=s;h();){if('"'===a)return s-1>o&&(n+=c.substring(o,s-1)),h(),n;if("\\"===a){if(s-1>o&&(n+=c.substring(o,s-1)),h(),"u"===a){for(r=0,t=0;t<4&&(e=parseInt(h(),16),isFinite(e));t+=1)r=16*r+e;n+=String.fromCharCode(r)}else{if("string"!=typeof l[a])break;n+=l[a]}o=s}}p("Bad string")},g=function(){for(;a&&a<=" ";)h()};return u=function(){switch(g(),a){case"{":return function(){var e,r=Object.create(null);if("{"===a){if(h("{"),g(),"}"===a)return h("}"),r;for(;a;){if(e=d(),g(),h(":"),!0===t.strict&&Object.hasOwnProperty.call(r,e)&&p('Duplicate key "'+e+'"'),!0===o.test(e)?"error"===t.protoAction?p("Object contains forbidden prototype property"):"ignore"===t.protoAction?u():r[e]=u():!0===i.test(e)?"error"===t.constructorAction?p("Object contains forbidden constructor property"):"ignore"===t.constructorAction?u():r[e]=u():r[e]=u(),g(),"}"===a)return h("}"),r;h(","),g()}}p("Bad object")}();case"[":return function(){var e=[];if("["===a){if(h("["),g(),"]"===a)return h("]"),e;for(;a;){if(e.push(u()),g(),"]"===a)return h("]"),e;h(","),g()}}p("Bad array")}();case'"':return d();case"-":return f();default:return a>="0"&&a<="9"?f():function(){switch(a){case"t":return h("t"),h("r"),h("u"),h("e"),!0;case"f":return h("f"),h("a"),h("l"),h("s"),h("e"),!1;case"n":return h("n"),h("u"),h("l"),h("l"),null}p("Unexpected '"+a+"'")}()}},function(e,t){var r;return c=e+"",s=0,a=" ",r=u(),g(),a&&p("Syntax error"),"function"==typeof t?function e(r,n){var o,i=r[n];return i&&"object"==typeof i&&Object.keys(i).forEach((function(t){void 0!==(o=e(i,t))?i[t]=o:delete i[t]})),t.call(r,n,i)}({"":r},""):r}}},592:(e,t,r)=>{var n=r(5117),o=e.exports;!function(){"use strict";var e,t,r,i=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function a(e){return i.lastIndex=0,i.test(e)?'"'+e.replace(i,(function(e){var t=s[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function c(o,i){var s,u,l,p,h,f=e,d=i[o],g=null!=d&&(d instanceof n||n.isBigNumber(d));switch(d&&"object"==typeof d&&"function"==typeof d.toJSON&&(d=d.toJSON(o)),"function"==typeof r&&(d=r.call(i,o,d)),typeof d){case"string":return g?d:a(d);case"number":return isFinite(d)?String(d):"null";case"boolean":case"null":case"bigint":return String(d);case"object":if(!d)return"null";if(e+=t,h=[],"[object Array]"===Object.prototype.toString.apply(d)){for(p=d.length,s=0;s<p;s+=1)h[s]=c(s,d)||"null";return l=0===h.length?"[]":e?"[\n"+e+h.join(",\n"+e)+"\n"+f+"]":"["+h.join(",")+"]",e=f,l}if(r&&"object"==typeof r)for(p=r.length,s=0;s<p;s+=1)"string"==typeof r[s]&&(l=c(u=r[s],d))&&h.push(a(u)+(e?": ":":")+l);else Object.keys(d).forEach((function(t){var r=c(t,d);r&&h.push(a(t)+(e?": ":":")+r)}));return l=0===h.length?"{}":e?"{\n"+e+h.join(",\n"+e)+"\n"+f+"}":"{"+h.join(",")+"}",e=f,l}}"function"!=typeof o.stringify&&(o.stringify=function(n,o,i){var s;if(e="",t="","number"==typeof i)for(s=0;s<i;s+=1)t+=" ";else"string"==typeof i&&(t=i);if(r=o,o&&"function"!=typeof o&&("object"!=typeof o||"number"!=typeof o.length))throw new Error("JSON.stringify");return c("",{"":n})})}()},3126:(e,t,r)=>{var n="function"==typeof Map&&Map.prototype,o=Object.getOwnPropertyDescriptor&&n?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,i=n&&o&&"function"==typeof o.get?o.get:null,s=n&&Map.prototype.forEach,a="function"==typeof Set&&Set.prototype,c=Object.getOwnPropertyDescriptor&&a?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,u=a&&c&&"function"==typeof c.get?c.get:null,l=a&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,h="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,f="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,d=Boolean.prototype.valueOf,g=Object.prototype.toString,y=Function.prototype.toString,m=String.prototype.match,b="function"==typeof BigInt?BigInt.prototype.valueOf:null,w=Object.getOwnPropertySymbols,v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,A="function"==typeof Symbol&&"object"==typeof Symbol.iterator,x=Object.prototype.propertyIsEnumerable,S=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null),_=r(4654).custom,E=_&&I(_)?_:null,T="function"==typeof Symbol&&void 0!==Symbol.toStringTag?Symbol.toStringTag:null;function B(e,t,r){var n="double"===(r.quoteStyle||t)?'"':"'";return n+e+n}function k(e){return String(e).replace(/"/g,"&quot;")}function U(e){return!("[object Array]"!==O(e)||T&&"object"==typeof e&&T in e)}function I(e){if(A)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!v)return!1;try{return v.call(e),!0}catch(e){}return!1}e.exports=function e(t,r,n,o){var a=r||{};if(R(a,"quoteStyle")&&"single"!==a.quoteStyle&&"double"!==a.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(R(a,"maxStringLength")&&("number"==typeof a.maxStringLength?a.maxStringLength<0&&a.maxStringLength!==1/0:null!==a.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var c=!R(a,"customInspect")||a.customInspect;if("boolean"!=typeof c)throw new TypeError('option "customInspect", if provided, must be `true` or `false`');if(R(a,"indent")&&null!==a.indent&&"\t"!==a.indent&&!(parseInt(a.indent,10)===a.indent&&a.indent>0))throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return N(t,a);if("number"==typeof t)return 0===t?1/0/t>0?"0":"-0":String(t);if("bigint"==typeof t)return String(t)+"n";var g=void 0===a.depth?5:a.depth;if(void 0===n&&(n=0),n>=g&&g>0&&"object"==typeof t)return U(t)?"[Array]":"[Object]";var w,x=function(e,t){var r;if("\t"===e.indent)r="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;r=Array(e.indent+1).join(" ")}return{base:r,prev:Array(t+1).join(r)}}(a,n);if(void 0===o)o=[];else if(D(o,t)>=0)return"[Circular]";function _(t,r,i){if(r&&(o=o.slice()).push(r),i){var s={depth:a.depth};return R(a,"quoteStyle")&&(s.quoteStyle=a.quoteStyle),e(t,s,n+1,o)}return e(t,a,n+1,o)}if("function"==typeof t){var C=function(e){if(e.name)return e.name;var t=m.call(y.call(e),/^function\s*([\w$]+)/);return t?t[1]:null}(t),P=M(t,_);return"[Function"+(C?": "+C:" (anonymous)")+"]"+(P.length>0?" { "+P.join(", ")+" }":"")}if(I(t)){var H=A?String(t).replace(/^(Symbol\(.*\))_[^)]*$/,"$1"):v.call(t);return"object"!=typeof t||A?H:L(H)}if((w=t)&&"object"==typeof w&&("undefined"!=typeof HTMLElement&&w instanceof HTMLElement||"string"==typeof w.nodeName&&"function"==typeof w.getAttribute)){for(var G="<"+String(t.nodeName).toLowerCase(),q=t.attributes||[],K=0;K<q.length;K++)G+=" "+q[K].name+"="+B(k(q[K].value),"double",a);return G+=">",t.childNodes&&t.childNodes.length&&(G+="..."),G+"</"+String(t.nodeName).toLowerCase()+">"}if(U(t)){if(0===t.length)return"[]";var $=M(t,_);return x&&!function(e){for(var t=0;t<e.length;t++)if(D(e[t],"\n")>=0)return!1;return!0}($)?"["+F($,x)+"]":"[ "+$.join(", ")+" ]"}if(function(e){return!("[object Error]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)){var V=M(t,_);return 0===V.length?"["+String(t)+"]":"{ ["+String(t)+"] "+V.join(", ")+" }"}if("object"==typeof t&&c){if(E&&"function"==typeof t[E])return t[E]();if("function"==typeof t.inspect)return t.inspect()}if(function(e){if(!i||!e||"object"!=typeof e)return!1;try{i.call(e);try{u.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var W=[];return s.call(t,(function(e,r){W.push(_(r,t,!0)+" => "+_(e,t))})),z("Map",i.call(t),W,x)}if(function(e){if(!u||!e||"object"!=typeof e)return!1;try{u.call(e);try{i.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var X=[];return l.call(t,(function(e){X.push(_(e,t))})),z("Set",u.call(t),X,x)}if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{p.call(e,p);try{h.call(e,h)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return j("WeakMap");if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{h.call(e,h);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return j("WeakSet");if(function(e){if(!f||!e||"object"!=typeof e)return!1;try{return f.call(e),!0}catch(e){}return!1}(t))return j("WeakRef");if(function(e){return!("[object Number]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(_(Number(t)));if(function(e){if(!e||"object"!=typeof e||!b)return!1;try{return b.call(e),!0}catch(e){}return!1}(t))return L(_(b.call(t)));if(function(e){return!("[object Boolean]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(d.call(t));if(function(e){return!("[object String]"!==O(e)||T&&"object"==typeof e&&T in e)}(t))return L(_(String(t)));if(!function(e){return!("[object Date]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)&&!function(e){return!("[object RegExp]"!==O(e)||T&&"object"==typeof e&&T in e)}(t)){var Y=M(t,_),J=S?S(t)===Object.prototype:t instanceof Object||t.constructor===Object,Z=t instanceof Object?"":"null prototype",Q=!J&&T&&Object(t)===t&&T in t?O(t).slice(8,-1):Z?"Object":"",ee=(J||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(Q||Z?"["+[].concat(Q||[],Z||[]).join(": ")+"] ":"");return 0===Y.length?ee+"{}":x?ee+"{"+F(Y,x)+"}":ee+"{ "+Y.join(", ")+" }"}return String(t)};var C=Object.prototype.hasOwnProperty||function(e){return e in this};function R(e,t){return C.call(e,t)}function O(e){return g.call(e)}function D(e,t){if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function N(e,t){if(e.length>t.maxStringLength){var r=e.length-t.maxStringLength,n="... "+r+" more character"+(r>1?"s":"");return N(e.slice(0,t.maxStringLength),t)+n}return B(e.replace(/(['\\])/g,"\\$1").replace(/[\x00-\x1f]/g,P),"single",t)}function P(e){var t=e.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return r?"\\"+r:"\\x"+(t<16?"0":"")+t.toString(16).toUpperCase()}function L(e){return"Object("+e+")"}function j(e){return e+" { ? }"}function z(e,t,r,n){return e+" ("+t+") {"+(n?F(r,n):r.join(", "))+"}"}function F(e,t){if(0===e.length)return"";var r="\n"+t.prev+t.base;return r+e.join(","+r)+"\n"+t.prev}function M(e,t){var r=U(e),n=[];if(r){n.length=e.length;for(var o=0;o<e.length;o++)n[o]=R(e,o)?t(e[o],e):""}var i,s="function"==typeof w?w(e):[];if(A){i={};for(var a=0;a<s.length;a++)i["$"+s[a]]=s[a]}for(var c in e)R(e,c)&&(r&&String(Number(c))===c&&c<e.length||A&&i["$"+c]instanceof Symbol||(/[^\w$]/.test(c)?n.push(t(c,e)+": "+t(e[c],e)):n.push(c+": "+t(e[c],e))));if("function"==typeof w)for(var u=0;u<s.length;u++)x.call(e,s[u])&&n.push("["+t(s[u])+"]: "+t(e[s[u]],e));return n}},3680:(e,t,r)=>{"use strict";var n=r(1801),o=r(7615),i=r(3126),s=n("%TypeError%"),a=n("%WeakMap%",!0),c=n("%Map%",!0),u=o("WeakMap.prototype.get",!0),l=o("WeakMap.prototype.set",!0),p=o("WeakMap.prototype.has",!0),h=o("Map.prototype.get",!0),f=o("Map.prototype.set",!0),d=o("Map.prototype.has",!0),g=function(e,t){for(var r,n=e;null!==(r=n.next);n=r)if(r.key===t)return n.next=r.next,r.next=e.next,e.next=r,r};e.exports=function(){var e,t,r,n={assert:function(e){if(!n.has(e))throw new s("Side channel does not contain "+i(e))},get:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return u(e,n)}else if(c){if(t)return h(t,n)}else if(r)return function(e,t){var r=g(e,t);return r&&r.value}(r,n)},has:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return p(e,n)}else if(c){if(t)return d(t,n)}else if(r)return function(e,t){return!!g(e,t)}(r,n);return!1},set:function(n,o){a&&n&&("object"==typeof n||"function"==typeof n)?(e||(e=new a),l(e,n,o)):c?(t||(t=new c),f(t,n,o)):(r||(r={key:{},next:null}),function(e,t,r){var n=g(e,t);n?n.value=r:e.next={key:t,next:e.next,value:r}}(r,n,o))}};return n}},2858:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function r(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert","disableTLSCerts"].forEach((function(e){r.prototype[e]=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return this._defaults.push({fn:e,args:r}),this}})),r.prototype._setDefaults=function(e){this._defaults.forEach((function(r){var n;e[r.fn].apply(e,function(e){if(Array.isArray(e))return t(e)}(n=r.args)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}))},e.exports=r},5391:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o;"undefined"!=typeof window?o=window:"undefined"==typeof self?(console.warn("Using browser-only version of superagent in non-browser environment"),o=void 0):o=self;var i=r(1069),s=r(5799),a=r(3065),c=r(4287),u=r(1960),l=r(969),p=r(2858);function h(){}e.exports=function(e,r){return"function"==typeof r?new t.Request("GET",e).end(r):1===arguments.length?new t.Request("GET",e):new t.Request(e,r)};var f=t=e.exports;t.Request=v,f.getXHR=function(){if(o.XMLHttpRequest&&(!o.location||"file:"!==o.location.protocol||!o.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw new Error("Browser-only version of superagent could not find XHR")};var d="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function g(e){if(!u(e))return e;var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&y(t,r,e[r]);return t.join("&")}function y(e,t,r){if(void 0!==r)if(null!==r)if(Array.isArray(r))r.forEach((function(r){y(e,t,r)}));else if(u(r))for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&y(e,"".concat(t,"[").concat(n,"]"),r[n]);else e.push(encodeURI(t)+"="+encodeURIComponent(r));else e.push(encodeURI(t))}function m(e){for(var t,r,n={},o=e.split("&"),i=0,s=o.length;i<s;++i)-1===(r=(t=o[i]).indexOf("="))?n[decodeURIComponent(t)]="":n[decodeURIComponent(t.slice(0,r))]=decodeURIComponent(t.slice(r+1));return n}function b(e){return/[/+]json($|[^-\w])/i.test(e)}function w(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!==this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.headers=function(e){for(var t,r,n,o,i=e.split(/\r?\n/),s={},a=0,c=i.length;a<c;++a)-1!==(t=(r=i[a]).indexOf(":"))&&(n=r.slice(0,t).toLowerCase(),o=d(r.slice(t+1)),s[n]=o);return s}(this.xhr.getAllResponseHeaders()),this.header=this.headers,this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"===this.req.method?null:this._parseBody(this.text?this.text:this.xhr.response)}function v(e,t){var r=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",(function(){var e,t=null,n=null;try{n=new w(r)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,r.xhr?(t.rawResponse=void 0===r.xhr.responseType?r.xhr.responseText:r.xhr.response,t.status=r.xhr.status?r.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),r.callback(t)}r.emit("response",n);try{r._isResponseOK(n)||(e=new Error(n.statusText||n.text||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=n,e.status=n.status,r.callback(e,n)):r.callback(null,n)}))}function A(e,t,r){var n=f("DELETE",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}f.serializeObject=g,f.parseString=m,f.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},f.serialize={"application/x-www-form-urlencoded":a.stringify,"application/json":s},f.parse={"application/x-www-form-urlencoded":m,"application/json":JSON.parse},l(w.prototype),w.prototype._parseBody=function(e){var t=f.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&b(this.type)&&(t=f.parse["application/json"]),t&&e&&(e.length>0||e instanceof Object)?t(e):null)},w.prototype.toError=function(){var e=this.req,t=e.method,r=e.url,n="cannot ".concat(t," ").concat(r," (").concat(this.status,")"),o=new Error(n);return o.status=this.status,o.method=t,o.url=r,o},f.Response=w,i(v.prototype),c(v.prototype),v.prototype.type=function(e){return this.set("Content-Type",f.types[e]||e),this},v.prototype.accept=function(e){return this.set("Accept",f.types[e]||e),this},v.prototype.auth=function(e,t,r){1===arguments.length&&(t=""),"object"===n(t)&&null!==t&&(r=t,t=""),r||(r={type:"function"==typeof btoa?"basic":"auto"});var o=function(e){if("function"==typeof btoa)return btoa(e);throw new Error("Cannot use basic auth, btoa is not a function")};return this._auth(e,t,r,o)},v.prototype.query=function(e){return"string"!=typeof e&&(e=g(e)),e&&this._query.push(e),this},v.prototype.attach=function(e,t,r){if(t){if(this._data)throw new Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,r||t.name)}return this},v.prototype._getFormData=function(){return this._formData||(this._formData=new o.FormData),this._formData},v.prototype.callback=function(e,t){if(this._shouldRetry(e,t))return this._retry();var r=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),r(e,t)},v.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},v.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},v.prototype.ca=v.prototype.agent,v.prototype.buffer=v.prototype.ca,v.prototype.write=function(){throw new Error("Streaming is not supported in browser version of superagent")},v.prototype.pipe=v.prototype.write,v.prototype._isHost=function(e){return e&&"object"===n(e)&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},v.prototype.end=function(e){this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||h,this._finalizeQueryString(),this._end()},v.prototype._setUploadTimeout=function(){var e=this;this._uploadTimeout&&!this._uploadTimeoutTimer&&(this._uploadTimeoutTimer=setTimeout((function(){e._timeoutError("Upload timeout of ",e._uploadTimeout,"ETIMEDOUT")}),this._uploadTimeout))},v.prototype._end=function(){if(this._aborted)return this.callback(new Error("The request has been aborted even before .end() was called"));var e=this;this.xhr=f.getXHR();var t=this.xhr,r=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var r=t.readyState;if(r>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4===r){var n;try{n=t.status}catch(e){n=0}if(!n){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var n=function(t,r){r.total>0&&(r.percent=r.loaded/r.total*100,100===r.percent&&clearTimeout(e._uploadTimeoutTimer)),r.direction=t,e.emit("progress",r)};if(this.hasListeners("progress"))try{t.addEventListener("progress",n.bind(null,"download")),t.upload&&t.upload.addEventListener("progress",n.bind(null,"upload"))}catch(e){}t.upload&&this._setUploadTimeout();try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!==this.method&&"HEAD"!==this.method&&"string"!=typeof r&&!this._isHost(r)){var o=this._header["content-type"],i=this._serializer||f.serialize[o?o.split(";")[0]:""];!i&&b(o)&&(i=f.serialize["application/json"]),i&&(r=i(r))}for(var s in this.header)null!==this.header[s]&&Object.prototype.hasOwnProperty.call(this.header,s)&&t.setRequestHeader(s,this.header[s]);this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0===r?null:r)},f.agent=function(){return new p},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach((function(e){p.prototype[e.toLowerCase()]=function(t,r){var n=new f.Request(e,t);return this._setDefaults(n),r&&n.end(r),n}})),p.prototype.del=p.prototype.delete,f.get=function(e,t,r){var n=f("GET",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},f.head=function(e,t,r){var n=f("HEAD",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},f.options=function(e,t,r){var n=f("OPTIONS",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.del=A,f.delete=A,f.patch=function(e,t,r){var n=f("PATCH",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.post=function(e,t,r){var n=f("POST",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},f.put=function(e,t,r){var n=f("PUT",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}},1960:e=>{"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=function(e){return null!==e&&"object"===t(e)}},4287:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(1960);function i(e){if(e)return function(e){for(var t in i.prototype)Object.prototype.hasOwnProperty.call(i.prototype,t)&&(e[t]=i.prototype[t]);return e}(e)}e.exports=i,i.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),clearTimeout(this._uploadTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,delete this._uploadTimeoutTimer,this},i.prototype.parse=function(e){return this._parser=e,this},i.prototype.responseType=function(e){return this._responseType=e,this},i.prototype.serialize=function(e){return this._serializer=e,this},i.prototype.timeout=function(e){if(!e||"object"!==n(e))return this._timeout=e,this._responseTimeout=0,this._uploadTimeout=0,this;for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;case"upload":this._uploadTimeout=e.upload;break;default:console.warn("Unknown timeout option",t)}return this},i.prototype.retry=function(e,t){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this._retryCallback=t,this};var s=new Set(["ETIMEDOUT","ECONNRESET","EADDRINUSE","ECONNREFUSED","EPIPE","ENOTFOUND","ENETUNREACH","EAI_AGAIN"]),a=new Set([408,413,429,500,502,503,504,521,522,524]);i.prototype._shouldRetry=function(e,t){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var r=this._retryCallback(e,t);if(!0===r)return!0;if(!1===r)return!1}catch(e){console.error(e)}if(t&&t.status&&a.has(t.status))return!0;if(e){if(e.code&&s.has(e.code))return!0;if(e.timeout&&"ECONNABORTED"===e.code)return!0;if(e.crossDomain)return!0}return!1},i.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this.timedoutError=null,this._end()},i.prototype.then=function(e,t){var r=this;if(!this._fullfilledPromise){var n=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(e,t){n.on("abort",(function(){if(!(r._maxRetries&&r._maxRetries>r._retries))if(r.timedout&&r.timedoutError)t(r.timedoutError);else{var e=new Error("Aborted");e.code="ABORTED",e.status=r.status,e.method=r.method,e.url=r.url,t(e)}})),n.end((function(r,n){r?t(r):e(n)}))}))}return this._fullfilledPromise.then(e,t)},i.prototype.catch=function(e){return this.then(void 0,e)},i.prototype.use=function(e){return e(this),this},i.prototype.ok=function(e){if("function"!=typeof e)throw new Error("Callback required");return this._okCallback=e,this},i.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},i.prototype.get=function(e){return this._header[e.toLowerCase()]},i.prototype.getHeader=i.prototype.get,i.prototype.set=function(e,t){if(o(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.set(r,e[r]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},i.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},i.prototype.field=function(e,t){if(null==e)throw new Error(".field(name, val) name can not be empty");if(this._data)throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");if(o(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.field(r,e[r]);return this}if(Array.isArray(t)){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&this.field(e,t[n]);return this}if(null==t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=String(t)),this._getFormData().append(e,t),this},i.prototype.abort=function(){return this._aborted||(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort")),this},i.prototype._auth=function(e,t,r,n){switch(r.type){case"basic":this.set("Authorization","Basic ".concat(n("".concat(e,":").concat(t))));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer ".concat(e))}return this},i.prototype.withCredentials=function(e){return void 0===e&&(e=!0),this._withCredentials=e,this},i.prototype.redirects=function(e){return this._maxRedirects=e,this},i.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw new TypeError("Invalid argument");return this._maxResponseSize=e,this},i.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},i.prototype.send=function(e){var t=o(e),r=this._header["content-type"];if(this._formData)throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");if(t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw new Error("Can't merge these send calls");if(t&&o(this._data))for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(this._data[n]=e[n]);else"string"==typeof e?(r||this.type("form"),(r=this._header["content-type"])&&(r=r.toLowerCase().trim()),this._data="application/x-www-form-urlencoded"===r?this._data?"".concat(this._data,"&").concat(e):e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)||r||this.type("json"),this},i.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},i.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.includes("?")?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var r=this.url.slice(t+1).split("&");"function"==typeof this._sort?r.sort(this._sort):r.sort(),this.url=this.url.slice(0,t)+"?"+r.join("&")}}},i.prototype._appendQueryString=function(){console.warn("Unsupported")},i.prototype._timeoutError=function(e,t,r){if(!this._aborted){var n=new Error("".concat(e+t,"ms exceeded"));n.timeout=t,n.code="ECONNABORTED",n.errno=r,this.timedout=!0,this.timedoutError=n,this.abort(),this.callback(n)}},i.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},969:(e,t,r)=>{"use strict";var n=r(3094);function o(e){if(e)return function(e){for(var t in o.prototype)Object.prototype.hasOwnProperty.call(o.prototype,t)&&(e[t]=o.prototype[t]);return e}(e)}e.exports=o,o.prototype.get=function(e){return this.header[e.toLowerCase()]},o.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=n.type(t);var r=n.params(t);for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(this[o]=r[o]);this.links={};try{e.link&&(this.links=n.parseLinks(e.link))}catch(e){}},o.prototype._setStatusProperties=function(e){var t=e/100|0;this.statusCode=e,this.status=this.statusCode,this.statusType=t,this.info=1===t,this.ok=2===t,this.redirect=3===t,this.clientError=4===t,this.serverError=5===t,this.error=(4===t||5===t)&&this.toError(),this.created=201===e,this.accepted=202===e,this.noContent=204===e,this.badRequest=400===e,this.unauthorized=401===e,this.notAcceptable=406===e,this.forbidden=403===e,this.notFound=404===e,this.unprocessableEntity=422===e}},3094:(e,t)=>{"use strict";function r(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,a=!0,c=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return a=e.done,e},e:function(e){c=!0,s=e},f:function(){try{a||null==r.return||r.return()}finally{if(c)throw s}}}}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){var t,n={},o=r(e.split(/ *; */));try{for(o.s();!(t=o.n()).done;){var i=t.value.split(/ *= */),s=i.shift(),a=i.shift();s&&a&&(n[s]=a)}}catch(e){o.e(e)}finally{o.f()}return n},t.parseLinks=function(e){var t,n={},o=r(e.split(/ *, */));try{for(o.s();!(t=o.n()).done;){var i=t.value.split(/ *; */),s=i[0].slice(1,-1);n[i[1].split(/ *= */)[1].slice(1,-1)]=s}}catch(e){o.e(e)}finally{o.f()}return n},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&(delete e.authorization,delete e.cookie),e}},5335:e=>{"use strict";var t=String.prototype.replace,r=/%20/g,n="RFC3986";e.exports={default:n,formatters:{RFC1738:function(e){return t.call(e,r,"+")},RFC3986:function(e){return String(e)}},RFC1738:"RFC1738",RFC3986:n}},3065:(e,t,r)=>{"use strict";var n=r(4246),o=r(1688),i=r(5335);e.exports={formats:i,parse:o,stringify:n}},1688:(e,t,r)=>{"use strict";var n=r(4562),o=Object.prototype.hasOwnProperty,i=Array.isArray,s={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:n.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},c=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},u=function(e,t,r,n){if(e){var i=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,s=/(\[[^[\]]*])/g,a=r.depth>0&&/(\[[^[\]]*])/.exec(i),u=a?i.slice(0,a.index):i,l=[];if(u){if(!r.plainObjects&&o.call(Object.prototype,u)&&!r.allowPrototypes)return;l.push(u)}for(var p=0;r.depth>0&&null!==(a=s.exec(i))&&p<r.depth;){if(p+=1,!r.plainObjects&&o.call(Object.prototype,a[1].slice(1,-1))&&!r.allowPrototypes)return;l.push(a[1])}return a&&l.push("["+i.slice(a.index)+"]"),function(e,t,r,n){for(var o=n?t:c(t,r),i=e.length-1;i>=0;--i){var s,a=e[i];if("[]"===a&&r.parseArrays)s=[].concat(o);else{s=r.plainObjects?Object.create(null):{};var u="["===a.charAt(0)&&"]"===a.charAt(a.length-1)?a.slice(1,-1):a,l=parseInt(u,10);r.parseArrays||""!==u?!isNaN(l)&&a!==u&&String(l)===u&&l>=0&&r.parseArrays&&l<=r.arrayLimit?(s=[])[l]=o:s[u]=o:s={0:o}}o=s}return o}(l,t,r,n)}};e.exports=function(e,t){var r=function(e){if(!e)return s;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?s.charset:e.charset;return{allowDots:void 0===e.allowDots?s.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:s.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:s.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:s.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:s.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:s.comma,decoder:"function"==typeof e.decoder?e.decoder:s.decoder,delimiter:"string"==typeof e.delimiter||n.isRegExp(e.delimiter)?e.delimiter:s.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:s.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:s.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:s.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:s.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:s.strictNullHandling}}(t);if(""===e||null==e)return r.plainObjects?Object.create(null):{};for(var l="string"==typeof e?function(e,t){var r,u={},l=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,p=t.parameterLimit===1/0?void 0:t.parameterLimit,h=l.split(t.delimiter,p),f=-1,d=t.charset;if(t.charsetSentinel)for(r=0;r<h.length;++r)0===h[r].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[r]?d="utf-8":"utf8=%26%2310003%3B"===h[r]&&(d="iso-8859-1"),f=r,r=h.length);for(r=0;r<h.length;++r)if(r!==f){var g,y,m=h[r],b=m.indexOf("]="),w=-1===b?m.indexOf("="):b+1;-1===w?(g=t.decoder(m,s.decoder,d,"key"),y=t.strictNullHandling?null:""):(g=t.decoder(m.slice(0,w),s.decoder,d,"key"),y=n.maybeMap(c(m.slice(w+1),t),(function(e){return t.decoder(e,s.decoder,d,"value")}))),y&&t.interpretNumericEntities&&"iso-8859-1"===d&&(y=a(y)),m.indexOf("[]=")>-1&&(y=i(y)?[y]:y),o.call(u,g)?u[g]=n.combine(u[g],y):u[g]=y}return u}(e,r):e,p=r.plainObjects?Object.create(null):{},h=Object.keys(l),f=0;f<h.length;++f){var d=h[f],g=u(d,l[d],r,"string"==typeof e);p=n.merge(p,g,r)}return!0===r.allowSparse?p:n.compact(p)}},4246:(e,t,r)=>{"use strict";var n=r(3680),o=r(4562),i=r(5335),s=Object.prototype.hasOwnProperty,a={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},c=Array.isArray,u=Array.prototype.push,l=function(e,t){u.apply(e,c(t)?t:[t])},p=Date.prototype.toISOString,h=i.default,f={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:o.encode,encodeValuesOnly:!1,format:h,formatter:i.formatters[h],indices:!1,serializeDate:function(e){return p.call(e)},skipNulls:!1,strictNullHandling:!1},d=function e(t,r,i,s,a,u,p,h,d,g,y,m,b,w,v){var A,x=t;if(v.has(t))throw new RangeError("Cyclic object value");if("function"==typeof p?x=p(r,x):x instanceof Date?x=g(x):"comma"===i&&c(x)&&(x=o.maybeMap(x,(function(e){return e instanceof Date?g(e):e}))),null===x){if(s)return u&&!b?u(r,f.encoder,w,"key",y):r;x=""}if("string"==typeof(A=x)||"number"==typeof A||"boolean"==typeof A||"symbol"==typeof A||"bigint"==typeof A||o.isBuffer(x))return u?[m(b?r:u(r,f.encoder,w,"key",y))+"="+m(u(x,f.encoder,w,"value",y))]:[m(r)+"="+m(String(x))];var S,_=[];if(void 0===x)return _;if("comma"===i&&c(x))S=[{value:x.length>0?x.join(",")||null:void 0}];else if(c(p))S=p;else{var E=Object.keys(x);S=h?E.sort(h):E}for(var T=0;T<S.length;++T){var B=S[T],k="object"==typeof B&&void 0!==B.value?B.value:x[B];if(!a||null!==k){var U=c(x)?"function"==typeof i?i(r,B):r:r+(d?"."+B:"["+B+"]");v.set(t,!0);var I=n();l(_,e(k,U,i,s,a,u,p,h,d,g,y,m,b,w,I))}}return _};e.exports=function(e,t){var r,o=e,u=function(e){if(!e)return f;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||f.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=i.default;if(void 0!==e.format){if(!s.call(i.formatters,e.format))throw new TypeError("Unknown format option provided.");r=e.format}var n=i.formatters[r],o=f.filter;return("function"==typeof e.filter||c(e.filter))&&(o=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:f.addQueryPrefix,allowDots:void 0===e.allowDots?f.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:f.charsetSentinel,delimiter:void 0===e.delimiter?f.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:f.encode,encoder:"function"==typeof e.encoder?e.encoder:f.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:f.encodeValuesOnly,filter:o,format:r,formatter:n,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:f.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:f.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:f.strictNullHandling}}(t);"function"==typeof u.filter?o=(0,u.filter)("",o):c(u.filter)&&(r=u.filter);var p,h=[];if("object"!=typeof o||null===o)return"";p=t&&t.arrayFormat in a?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var g=a[p];r||(r=Object.keys(o)),u.sort&&r.sort(u.sort);for(var y=n(),m=0;m<r.length;++m){var b=r[m];u.skipNulls&&null===o[b]||l(h,d(o[b],b,g,u.strictNullHandling,u.skipNulls,u.encode?u.encoder:null,u.filter,u.sort,u.allowDots,u.serializeDate,u.format,u.formatter,u.encodeValuesOnly,u.charset,y))}var w=h.join(u.delimiter),v=!0===u.addQueryPrefix?"?":"";return u.charsetSentinel&&("iso-8859-1"===u.charset?v+="utf8=%26%2310003%3B&":v+="utf8=%E2%9C%93&"),w.length>0?v+w:""}},4562:(e,t,r)=>{"use strict";var n=r(5335),o=Object.prototype.hasOwnProperty,i=Array.isArray,s=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),a=function(e,t){for(var r=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r};e.exports={arrayToObject:a,assign:function(e,t){return Object.keys(t).reduce((function(e,r){return e[r]=t[r],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],r=[],n=0;n<t.length;++n)for(var o=t[n],s=o.obj[o.prop],a=Object.keys(s),c=0;c<a.length;++c){var u=a[c],l=s[u];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:s,prop:u}),r.push(l))}return function(e){for(;e.length>1;){var t=e.pop(),r=t.obj[t.prop];if(i(r)){for(var n=[],o=0;o<r.length;++o)void 0!==r[o]&&n.push(r[o]);t.obj[t.prop]=n}}}(t),e},decode:function(e,t,r){var n=e.replace(/\+/g," ");if("iso-8859-1"===r)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(e){return n}},encode:function(e,t,r,o,i){if(0===e.length)return e;var a=e;if("symbol"==typeof e?a=Symbol.prototype.toString.call(e):"string"!=typeof e&&(a=String(e)),"iso-8859-1"===r)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var c="",u=0;u<a.length;++u){var l=a.charCodeAt(u);45===l||46===l||95===l||126===l||l>=48&&l<=57||l>=65&&l<=90||l>=97&&l<=122||i===n.RFC1738&&(40===l||41===l)?c+=a.charAt(u):l<128?c+=s[l]:l<2048?c+=s[192|l>>6]+s[128|63&l]:l<55296||l>=57344?c+=s[224|l>>12]+s[128|l>>6&63]+s[128|63&l]:(u+=1,l=65536+((1023&l)<<10|1023&a.charCodeAt(u)),c+=s[240|l>>18]+s[128|l>>12&63]+s[128|l>>6&63]+s[128|63&l])}return c},isBuffer:function(e){return!(!e||"object"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(i(e)){for(var r=[],n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)},merge:function e(t,r,n){if(!r)return t;if("object"!=typeof r){if(i(t))t.push(r);else{if(!t||"object"!=typeof t)return[t,r];(n&&(n.plainObjects||n.allowPrototypes)||!o.call(Object.prototype,r))&&(t[r]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(r);var s=t;return i(t)&&!i(r)&&(s=a(t,n)),i(t)&&i(r)?(r.forEach((function(r,i){if(o.call(t,i)){var s=t[i];s&&"object"==typeof s&&r&&"object"==typeof r?t[i]=e(s,r,n):t.push(r)}else t[i]=r})),t):Object.keys(r).reduce((function(t,i){var s=r[i];return o.call(t,i)?t[i]=e(t[i],s,n):t[i]=s,t}),s)}}},7765:function(e,t){!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var i=t(),s=t([1]),a=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),p=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function f(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function d(e,t,r,n,o){var i,s=0;for(i=0;i<o;i++)s|=e[t+i]^r[n+i];return(1&s-1>>>8)-1}function g(e,t,r,n){return d(e,t,r,n,16)}function y(e,t,r,n){return d(e,t,r,n,32)}function m(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,d=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,m=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=i,x=s,S=a,_=c,E=u,T=l,B=p,k=h,U=f,I=d,C=g,R=y,O=m,D=b,N=w,P=v,L=0;L<20;L+=2)A^=(o=(O^=(o=(U^=(o=(E^=(o=A+O|0)<<7|o>>>25)+A|0)<<9|o>>>23)+E|0)<<13|o>>>19)+U|0)<<18|o>>>14,T^=(o=(x^=(o=(D^=(o=(I^=(o=T+x|0)<<7|o>>>25)+T|0)<<9|o>>>23)+I|0)<<13|o>>>19)+D|0)<<18|o>>>14,C^=(o=(B^=(o=(S^=(o=(N^=(o=C+B|0)<<7|o>>>25)+C|0)<<9|o>>>23)+N|0)<<13|o>>>19)+S|0)<<18|o>>>14,P^=(o=(R^=(o=(k^=(o=(_^=(o=P+R|0)<<7|o>>>25)+P|0)<<9|o>>>23)+_|0)<<13|o>>>19)+k|0)<<18|o>>>14,A^=(o=(_^=(o=(S^=(o=(x^=(o=A+_|0)<<7|o>>>25)+A|0)<<9|o>>>23)+x|0)<<13|o>>>19)+S|0)<<18|o>>>14,T^=(o=(E^=(o=(k^=(o=(B^=(o=T+E|0)<<7|o>>>25)+T|0)<<9|o>>>23)+B|0)<<13|o>>>19)+k|0)<<18|o>>>14,C^=(o=(I^=(o=(U^=(o=(R^=(o=C+I|0)<<7|o>>>25)+C|0)<<9|o>>>23)+R|0)<<13|o>>>19)+U|0)<<18|o>>>14,P^=(o=(N^=(o=(D^=(o=(O^=(o=P+N|0)<<7|o>>>25)+P|0)<<9|o>>>23)+O|0)<<13|o>>>19)+D|0)<<18|o>>>14;A=A+i|0,x=x+s|0,S=S+a|0,_=_+c|0,E=E+u|0,T=T+l|0,B=B+p|0,k=k+h|0,U=U+f|0,I=I+d|0,C=C+g|0,R=R+y|0,O=O+m|0,D=D+b|0,N=N+w|0,P=P+v|0,e[0]=A>>>0&255,e[1]=A>>>8&255,e[2]=A>>>16&255,e[3]=A>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=S>>>0&255,e[9]=S>>>8&255,e[10]=S>>>16&255,e[11]=S>>>24&255,e[12]=_>>>0&255,e[13]=_>>>8&255,e[14]=_>>>16&255,e[15]=_>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=T>>>0&255,e[21]=T>>>8&255,e[22]=T>>>16&255,e[23]=T>>>24&255,e[24]=B>>>0&255,e[25]=B>>>8&255,e[26]=B>>>16&255,e[27]=B>>>24&255,e[28]=k>>>0&255,e[29]=k>>>8&255,e[30]=k>>>16&255,e[31]=k>>>24&255,e[32]=U>>>0&255,e[33]=U>>>8&255,e[34]=U>>>16&255,e[35]=U>>>24&255,e[36]=I>>>0&255,e[37]=I>>>8&255,e[38]=I>>>16&255,e[39]=I>>>24&255,e[40]=C>>>0&255,e[41]=C>>>8&255,e[42]=C>>>16&255,e[43]=C>>>24&255,e[44]=R>>>0&255,e[45]=R>>>8&255,e[46]=R>>>16&255,e[47]=R>>>24&255,e[48]=O>>>0&255,e[49]=O>>>8&255,e[50]=O>>>16&255,e[51]=O>>>24&255,e[52]=D>>>0&255,e[53]=D>>>8&255,e[54]=D>>>16&255,e[55]=D>>>24&255,e[56]=N>>>0&255,e[57]=N>>>8&255,e[58]=N>>>16&255,e[59]=N>>>24&255,e[60]=P>>>0&255,e[61]=P>>>8&255,e[62]=P>>>16&255,e[63]=P>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,d=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,m=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=0;A<20;A+=2)i^=(o=(m^=(o=(f^=(o=(u^=(o=i+m|0)<<7|o>>>25)+i|0)<<9|o>>>23)+u|0)<<13|o>>>19)+f|0)<<18|o>>>14,l^=(o=(s^=(o=(b^=(o=(d^=(o=l+s|0)<<7|o>>>25)+l|0)<<9|o>>>23)+d|0)<<13|o>>>19)+b|0)<<18|o>>>14,g^=(o=(p^=(o=(a^=(o=(w^=(o=g+p|0)<<7|o>>>25)+g|0)<<9|o>>>23)+w|0)<<13|o>>>19)+a|0)<<18|o>>>14,v^=(o=(y^=(o=(h^=(o=(c^=(o=v+y|0)<<7|o>>>25)+v|0)<<9|o>>>23)+c|0)<<13|o>>>19)+h|0)<<18|o>>>14,i^=(o=(c^=(o=(a^=(o=(s^=(o=i+c|0)<<7|o>>>25)+i|0)<<9|o>>>23)+s|0)<<13|o>>>19)+a|0)<<18|o>>>14,l^=(o=(u^=(o=(h^=(o=(p^=(o=l+u|0)<<7|o>>>25)+l|0)<<9|o>>>23)+p|0)<<13|o>>>19)+h|0)<<18|o>>>14,g^=(o=(d^=(o=(f^=(o=(y^=(o=g+d|0)<<7|o>>>25)+g|0)<<9|o>>>23)+y|0)<<13|o>>>19)+f|0)<<18|o>>>14,v^=(o=(w^=(o=(b^=(o=(m^=(o=v+w|0)<<7|o>>>25)+v|0)<<9|o>>>23)+m|0)<<13|o>>>19)+b|0)<<18|o>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=g>>>0&255,e[9]=g>>>8&255,e[10]=g>>>16&255,e[11]=g>>>24&255,e[12]=v>>>0&255,e[13]=v>>>8&255,e[14]=v>>>16&255,e[15]=v>>>24&255,e[16]=p>>>0&255,e[17]=p>>>8&255,e[18]=p>>>16&255,e[19]=p>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=f>>>0&255,e[25]=f>>>8&255,e[26]=f>>>16&255,e[27]=f>>>24&255,e[28]=d>>>0&255,e[29]=d>>>8&255,e[30]=d>>>16&255,e[31]=d>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function v(e,t,r,n,o,i,s){var a,c,u=new Uint8Array(16),l=new Uint8Array(64);for(c=0;c<16;c++)u[c]=0;for(c=0;c<8;c++)u[c]=i[c];for(;o>=64;){for(m(l,u,s,w),c=0;c<64;c++)e[t+c]=r[n+c]^l[c];for(a=1,c=8;c<16;c++)a=a+(255&u[c])|0,u[c]=255&a,a>>>=8;o-=64,t+=64,n+=64}if(o>0)for(m(l,u,s,w),c=0;c<o;c++)e[t+c]=r[n+c]^l[c];return 0}function A(e,t,r,n,o){var i,s,a=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)a[s]=0;for(s=0;s<8;s++)a[s]=n[s];for(;r>=64;){for(m(c,a,o,w),s=0;s<64;s++)e[t+s]=c[s];for(i=1,s=8;s<16;s++)i=i+(255&a[s])|0,a[s]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(m(c,a,o,w),s=0;s<r;s++)e[t+s]=c[s];return 0}function x(e,t,r,n,o){var i=new Uint8Array(32);b(i,n,o,w);for(var s=new Uint8Array(8),a=0;a<8;a++)s[a]=n[a+16];return A(e,t,r,s,i)}function S(e,t,r,n,o,i,s){var a=new Uint8Array(32);b(a,i,s,w);for(var c=new Uint8Array(8),u=0;u<8;u++)c[u]=i[u+16];return v(e,t,r,n,o,c,a)}var _=function(e){var t,r,n,o,i,s,a,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,s=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|s<<2),a=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(s>>>11|a<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(a>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,t,r,n,o,i){var s=new _(i);return s.update(r,n,o),s.finish(e,t),0}function T(e,t,r,n,o,i){var s=new Uint8Array(16);return E(s,0,r,n,o,i),g(e,t,s,0)}function B(e,t,r,n,o){var i;if(r<32)return-1;for(S(e,0,t,0,r,n,o),E(e,16,e,32,r-32,e),i=0;i<16;i++)e[i]=0;return 0}function k(e,t,r,n,o){var i,s=new Uint8Array(32);if(r<32)return-1;if(x(s,0,32,n,o),0!==T(t,16,t,32,r-32,s))return-1;for(S(e,0,t,0,r,n,o),i=0;i<32;i++)e[i]=0;return 0}function U(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function I(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function C(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function R(e,r){var n,o,i,s=t(),a=t();for(n=0;n<16;n++)a[n]=r[n];for(I(a),I(a),I(a),o=0;o<2;o++){for(s[0]=a[0]-65517,n=1;n<15;n++)s[n]=a[n]-65535-(s[n-1]>>16&1),s[n-1]&=65535;s[15]=a[15]-32767-(s[14]>>16&1),i=s[15]>>16&1,s[14]&=65535,C(a,s,1-i)}for(n=0;n<16;n++)e[2*n]=255&a[n],e[2*n+1]=a[n]>>8}function O(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return R(r,e),R(n,t),y(r,0,n,0)}function D(e){var t=new Uint8Array(32);return R(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function P(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function L(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function j(e,t,r){var n,o,i=0,s=0,a=0,c=0,u=0,l=0,p=0,h=0,f=0,d=0,g=0,y=0,m=0,b=0,w=0,v=0,A=0,x=0,S=0,_=0,E=0,T=0,B=0,k=0,U=0,I=0,C=0,R=0,O=0,D=0,N=0,P=r[0],L=r[1],j=r[2],z=r[3],F=r[4],M=r[5],H=r[6],G=r[7],q=r[8],K=r[9],$=r[10],V=r[11],W=r[12],X=r[13],Y=r[14],J=r[15];i+=(n=t[0])*P,s+=n*L,a+=n*j,c+=n*z,u+=n*F,l+=n*M,p+=n*H,h+=n*G,f+=n*q,d+=n*K,g+=n*$,y+=n*V,m+=n*W,b+=n*X,w+=n*Y,v+=n*J,s+=(n=t[1])*P,a+=n*L,c+=n*j,u+=n*z,l+=n*F,p+=n*M,h+=n*H,f+=n*G,d+=n*q,g+=n*K,y+=n*$,m+=n*V,b+=n*W,w+=n*X,v+=n*Y,A+=n*J,a+=(n=t[2])*P,c+=n*L,u+=n*j,l+=n*z,p+=n*F,h+=n*M,f+=n*H,d+=n*G,g+=n*q,y+=n*K,m+=n*$,b+=n*V,w+=n*W,v+=n*X,A+=n*Y,x+=n*J,c+=(n=t[3])*P,u+=n*L,l+=n*j,p+=n*z,h+=n*F,f+=n*M,d+=n*H,g+=n*G,y+=n*q,m+=n*K,b+=n*$,w+=n*V,v+=n*W,A+=n*X,x+=n*Y,S+=n*J,u+=(n=t[4])*P,l+=n*L,p+=n*j,h+=n*z,f+=n*F,d+=n*M,g+=n*H,y+=n*G,m+=n*q,b+=n*K,w+=n*$,v+=n*V,A+=n*W,x+=n*X,S+=n*Y,_+=n*J,l+=(n=t[5])*P,p+=n*L,h+=n*j,f+=n*z,d+=n*F,g+=n*M,y+=n*H,m+=n*G,b+=n*q,w+=n*K,v+=n*$,A+=n*V,x+=n*W,S+=n*X,_+=n*Y,E+=n*J,p+=(n=t[6])*P,h+=n*L,f+=n*j,d+=n*z,g+=n*F,y+=n*M,m+=n*H,b+=n*G,w+=n*q,v+=n*K,A+=n*$,x+=n*V,S+=n*W,_+=n*X,E+=n*Y,T+=n*J,h+=(n=t[7])*P,f+=n*L,d+=n*j,g+=n*z,y+=n*F,m+=n*M,b+=n*H,w+=n*G,v+=n*q,A+=n*K,x+=n*$,S+=n*V,_+=n*W,E+=n*X,T+=n*Y,B+=n*J,f+=(n=t[8])*P,d+=n*L,g+=n*j,y+=n*z,m+=n*F,b+=n*M,w+=n*H,v+=n*G,A+=n*q,x+=n*K,S+=n*$,_+=n*V,E+=n*W,T+=n*X,B+=n*Y,k+=n*J,d+=(n=t[9])*P,g+=n*L,y+=n*j,m+=n*z,b+=n*F,w+=n*M,v+=n*H,A+=n*G,x+=n*q,S+=n*K,_+=n*$,E+=n*V,T+=n*W,B+=n*X,k+=n*Y,U+=n*J,g+=(n=t[10])*P,y+=n*L,m+=n*j,b+=n*z,w+=n*F,v+=n*M,A+=n*H,x+=n*G,S+=n*q,_+=n*K,E+=n*$,T+=n*V,B+=n*W,k+=n*X,U+=n*Y,I+=n*J,y+=(n=t[11])*P,m+=n*L,b+=n*j,w+=n*z,v+=n*F,A+=n*M,x+=n*H,S+=n*G,_+=n*q,E+=n*K,T+=n*$,B+=n*V,k+=n*W,U+=n*X,I+=n*Y,C+=n*J,m+=(n=t[12])*P,b+=n*L,w+=n*j,v+=n*z,A+=n*F,x+=n*M,S+=n*H,_+=n*G,E+=n*q,T+=n*K,B+=n*$,k+=n*V,U+=n*W,I+=n*X,C+=n*Y,R+=n*J,b+=(n=t[13])*P,w+=n*L,v+=n*j,A+=n*z,x+=n*F,S+=n*M,_+=n*H,E+=n*G,T+=n*q,B+=n*K,k+=n*$,U+=n*V,I+=n*W,C+=n*X,R+=n*Y,O+=n*J,w+=(n=t[14])*P,v+=n*L,A+=n*j,x+=n*z,S+=n*F,_+=n*M,E+=n*H,T+=n*G,B+=n*q,k+=n*K,U+=n*$,I+=n*V,C+=n*W,R+=n*X,O+=n*Y,D+=n*J,v+=(n=t[15])*P,s+=38*(x+=n*j),a+=38*(S+=n*z),c+=38*(_+=n*F),u+=38*(E+=n*M),l+=38*(T+=n*H),p+=38*(B+=n*G),h+=38*(k+=n*q),f+=38*(U+=n*K),d+=38*(I+=n*$),g+=38*(C+=n*V),y+=38*(R+=n*W),m+=38*(O+=n*X),b+=38*(D+=n*Y),w+=38*(N+=n*J),i=(n=(i+=38*(A+=n*L))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),i+=o-1+37*(o-1),e[0]=i,e[1]=s,e[2]=a,e[3]=c,e[4]=u,e[5]=l,e[6]=p,e[7]=h,e[8]=f,e[9]=d,e[10]=g,e[11]=y,e[12]=m,e[13]=b,e[14]=w,e[15]=v}function z(e,t){j(e,t,t)}function F(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)z(o,o),2!==n&&4!==n&&j(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function M(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)z(o,o),1!==n&&j(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function H(e,r,n){var o,i,s=new Uint8Array(32),c=new Float64Array(80),u=t(),l=t(),p=t(),h=t(),f=t(),d=t();for(i=0;i<31;i++)s[i]=r[i];for(s[31]=127&r[31]|64,s[0]&=248,N(c,n),i=0;i<16;i++)l[i]=c[i],h[i]=u[i]=p[i]=0;for(u[0]=h[0]=1,i=254;i>=0;--i)C(u,l,o=s[i>>>3]>>>(7&i)&1),C(p,h,o),P(f,u,p),L(u,u,p),P(p,l,h),L(l,l,h),z(h,f),z(d,u),j(u,p,u),j(p,l,f),P(f,u,p),L(u,u,p),z(l,u),L(p,h,d),j(u,p,a),P(u,u,h),j(p,p,u),j(u,h,d),j(h,l,c),z(l,f),C(u,l,o),C(p,h,o);for(i=0;i<16;i++)c[i+16]=u[i],c[i+32]=p[i],c[i+48]=l[i],c[i+64]=h[i];var g=c.subarray(32),y=c.subarray(16);return F(g,g),j(y,y,g),R(e,y),0}function G(e,t){return H(e,t,o)}function q(e,t){return r(t,32),G(e,t)}function K(e,t,r){var o=new Uint8Array(32);return H(o,r,t),b(e,n,o,w)}_.prototype.blocks=function(e,t,r){for(var n,o,i,s,a,c,u,l,p,h,f,d,g,y,m,b,w,v,A,x=this.fin?0:2048,S=this.h[0],_=this.h[1],E=this.h[2],T=this.h[3],B=this.h[4],k=this.h[5],U=this.h[6],I=this.h[7],C=this.h[8],R=this.h[9],O=this.r[0],D=this.r[1],N=this.r[2],P=this.r[3],L=this.r[4],j=this.r[5],z=this.r[6],F=this.r[7],M=this.r[8],H=this.r[9];r>=16;)h=p=0,h+=(S+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*O,h+=(_+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*H),h+=(E+=8191&(o>>>10|(i=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*M),h+=(T+=8191&(i>>>7|(s=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),p=(h+=(B+=8191&(s>>>4|(a=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*z))>>>13,h&=8191,h+=(k+=a>>>1&8191)*(5*j),h+=(U+=8191&(a>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),h+=(I+=8191&(c>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*P),h+=(C+=8191&(u>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*N),f=p+=(h+=(R+=l>>>5|x)*(5*D))>>>13,f+=S*D,f+=_*O,f+=E*(5*H),f+=T*(5*M),p=(f+=B*(5*F))>>>13,f&=8191,f+=k*(5*z),f+=U*(5*j),f+=I*(5*L),f+=C*(5*P),p+=(f+=R*(5*N))>>>13,f&=8191,d=p,d+=S*N,d+=_*D,d+=E*O,d+=T*(5*H),p=(d+=B*(5*M))>>>13,d&=8191,d+=k*(5*F),d+=U*(5*z),d+=I*(5*j),d+=C*(5*L),g=p+=(d+=R*(5*P))>>>13,g+=S*P,g+=_*N,g+=E*D,g+=T*O,p=(g+=B*(5*H))>>>13,g&=8191,g+=k*(5*M),g+=U*(5*F),g+=I*(5*z),g+=C*(5*j),y=p+=(g+=R*(5*L))>>>13,y+=S*L,y+=_*P,y+=E*N,y+=T*D,p=(y+=B*O)>>>13,y&=8191,y+=k*(5*H),y+=U*(5*M),y+=I*(5*F),y+=C*(5*z),m=p+=(y+=R*(5*j))>>>13,m+=S*j,m+=_*L,m+=E*P,m+=T*N,p=(m+=B*D)>>>13,m&=8191,m+=k*O,m+=U*(5*H),m+=I*(5*M),m+=C*(5*F),b=p+=(m+=R*(5*z))>>>13,b+=S*z,b+=_*j,b+=E*L,b+=T*P,p=(b+=B*N)>>>13,b&=8191,b+=k*D,b+=U*O,b+=I*(5*H),b+=C*(5*M),w=p+=(b+=R*(5*F))>>>13,w+=S*F,w+=_*z,w+=E*j,w+=T*L,p=(w+=B*P)>>>13,w&=8191,w+=k*N,w+=U*D,w+=I*O,w+=C*(5*H),v=p+=(w+=R*(5*M))>>>13,v+=S*M,v+=_*F,v+=E*z,v+=T*j,p=(v+=B*L)>>>13,v&=8191,v+=k*P,v+=U*N,v+=I*D,v+=C*O,A=p+=(v+=R*(5*H))>>>13,A+=S*H,A+=_*M,A+=E*F,A+=T*z,p=(A+=B*j)>>>13,A&=8191,A+=k*L,A+=U*P,A+=I*N,A+=C*D,S=h=8191&(p=(p=((p+=(A+=R*O)>>>13)<<2)+p|0)+(h&=8191)|0),_=f+=p>>>=13,E=d&=8191,T=g&=8191,B=y&=8191,k=m&=8191,U=b&=8191,I=w&=8191,C=v&=8191,R=A&=8191,t+=16,r-=16;this.h[0]=S,this.h[1]=_,this.h[2]=E,this.h[3]=T,this.h[4]=B,this.h[5]=k,this.h[6]=U,this.h[7]=I,this.h[8]=C,this.h[9]=R},_.prototype.finish=function(e,t){var r,n,o,i,s=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=r,r=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,s[0]=this.h[0]+5,r=s[0]>>>13,s[0]&=8191,i=1;i<10;i++)s[i]=this.h[i]+r,r=s[i]>>>13,s[i]&=8191;for(s[9]-=8192,n=(1^r)-1,i=0;i<10;i++)s[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|s[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},_.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var $=B,V=k,W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function X(e,t,r,n){for(var o,i,s,a,c,u,l,p,h,f,d,g,y,m,b,w,v,A,x,S,_,E,T,B,k,U,I=new Int32Array(16),C=new Int32Array(16),R=e[0],O=e[1],D=e[2],N=e[3],P=e[4],L=e[5],j=e[6],z=e[7],F=t[0],M=t[1],H=t[2],G=t[3],q=t[4],K=t[5],$=t[6],V=t[7],X=0;n>=128;){for(x=0;x<16;x++)S=8*x+X,I[x]=r[S+0]<<24|r[S+1]<<16|r[S+2]<<8|r[S+3],C[x]=r[S+4]<<24|r[S+5]<<16|r[S+6]<<8|r[S+7];for(x=0;x<80;x++)if(o=R,i=O,s=D,a=N,c=P,u=L,l=j,h=F,f=M,d=H,g=G,y=q,m=K,b=$,T=65535&(E=V),B=E>>>16,k=65535&(_=z),U=_>>>16,T+=65535&(E=(q>>>14|P<<18)^(q>>>18|P<<14)^(P>>>9|q<<23)),B+=E>>>16,k+=65535&(_=(P>>>14|q<<18)^(P>>>18|q<<14)^(q>>>9|P<<23)),U+=_>>>16,T+=65535&(E=q&K^~q&$),B+=E>>>16,k+=65535&(_=P&L^~P&j),U+=_>>>16,T+=65535&(E=W[2*x+1]),B+=E>>>16,k+=65535&(_=W[2*x]),U+=_>>>16,_=I[x%16],B+=(E=C[x%16])>>>16,k+=65535&_,U+=_>>>16,k+=(B+=(T+=65535&E)>>>16)>>>16,T=65535&(E=A=65535&T|B<<16),B=E>>>16,k=65535&(_=v=65535&k|(U+=k>>>16)<<16),U=_>>>16,T+=65535&(E=(F>>>28|R<<4)^(R>>>2|F<<30)^(R>>>7|F<<25)),B+=E>>>16,k+=65535&(_=(R>>>28|F<<4)^(F>>>2|R<<30)^(F>>>7|R<<25)),U+=_>>>16,B+=(E=F&M^F&H^M&H)>>>16,k+=65535&(_=R&O^R&D^O&D),U+=_>>>16,p=65535&(k+=(B+=(T+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,w=65535&T|B<<16,T=65535&(E=g),B=E>>>16,k=65535&(_=a),U=_>>>16,B+=(E=A)>>>16,k+=65535&(_=v),U+=_>>>16,O=o,D=i,N=s,P=a=65535&(k+=(B+=(T+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,L=c,j=u,z=l,R=p,M=h,H=f,G=d,q=g=65535&T|B<<16,K=y,$=m,V=b,F=w,x%16==15)for(S=0;S<16;S++)_=I[S],T=65535&(E=C[S]),B=E>>>16,k=65535&_,U=_>>>16,_=I[(S+9)%16],T+=65535&(E=C[(S+9)%16]),B+=E>>>16,k+=65535&_,U+=_>>>16,v=I[(S+1)%16],T+=65535&(E=((A=C[(S+1)%16])>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25)),B+=E>>>16,k+=65535&(_=(v>>>1|A<<31)^(v>>>8|A<<24)^v>>>7),U+=_>>>16,v=I[(S+14)%16],B+=(E=((A=C[(S+14)%16])>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26))>>>16,k+=65535&(_=(v>>>19|A<<13)^(A>>>29|v<<3)^v>>>6),U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,I[S]=65535&k|U<<16,C[S]=65535&T|B<<16;T=65535&(E=F),B=E>>>16,k=65535&(_=R),U=_>>>16,_=e[0],B+=(E=t[0])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[0]=R=65535&k|U<<16,t[0]=F=65535&T|B<<16,T=65535&(E=M),B=E>>>16,k=65535&(_=O),U=_>>>16,_=e[1],B+=(E=t[1])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[1]=O=65535&k|U<<16,t[1]=M=65535&T|B<<16,T=65535&(E=H),B=E>>>16,k=65535&(_=D),U=_>>>16,_=e[2],B+=(E=t[2])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[2]=D=65535&k|U<<16,t[2]=H=65535&T|B<<16,T=65535&(E=G),B=E>>>16,k=65535&(_=N),U=_>>>16,_=e[3],B+=(E=t[3])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[3]=N=65535&k|U<<16,t[3]=G=65535&T|B<<16,T=65535&(E=q),B=E>>>16,k=65535&(_=P),U=_>>>16,_=e[4],B+=(E=t[4])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[4]=P=65535&k|U<<16,t[4]=q=65535&T|B<<16,T=65535&(E=K),B=E>>>16,k=65535&(_=L),U=_>>>16,_=e[5],B+=(E=t[5])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[5]=L=65535&k|U<<16,t[5]=K=65535&T|B<<16,T=65535&(E=$),B=E>>>16,k=65535&(_=j),U=_>>>16,_=e[6],B+=(E=t[6])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[6]=j=65535&k|U<<16,t[6]=$=65535&T|B<<16,T=65535&(E=V),B=E>>>16,k=65535&(_=z),U=_>>>16,_=e[7],B+=(E=t[7])>>>16,k+=65535&_,U+=_>>>16,U+=(k+=(B+=(T+=65535&E)>>>16)>>>16)>>>16,e[7]=z=65535&k|U<<16,t[7]=V=65535&T|B<<16,X+=128,n-=128}return n}function Y(e,t,r){var n,o=new Int32Array(8),i=new Int32Array(8),s=new Uint8Array(256),a=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,X(o,i,t,r),r%=128,n=0;n<r;n++)s[n]=t[a-r+n];for(s[r]=128,s[(r=256-128*(r<112?1:0))-9]=0,f(s,r-8,a/536870912|0,a<<3),X(o,i,s,r),n=0;n<8;n++)f(e,8*n,o[n],i[n]);return 0}function J(e,r){var n=t(),o=t(),i=t(),s=t(),a=t(),c=t(),l=t(),p=t(),h=t();L(n,e[1],e[0]),L(h,r[1],r[0]),j(n,n,h),P(o,e[0],e[1]),P(h,r[0],r[1]),j(o,o,h),j(i,e[3],r[3]),j(i,i,u),j(s,e[2],r[2]),P(s,s,s),L(a,o,n),L(c,s,i),P(l,s,i),P(p,o,n),j(e[0],a,c),j(e[1],p,l),j(e[2],l,c),j(e[3],a,p)}function Z(e,t,r){var n;for(n=0;n<4;n++)C(e[n],t[n],r)}function Q(e,r){var n=t(),o=t(),i=t();F(i,r[2]),j(n,r[0],i),j(o,r[1],i),R(e,o),e[31]^=D(n)<<7}function ee(e,t,r){var n,o;for(U(e[0],i),U(e[1],s),U(e[2],s),U(e[3],i),o=255;o>=0;--o)Z(e,t,n=r[o/8|0]>>(7&o)&1),J(t,e),J(e,e),Z(e,t,n)}function te(e,r){var n=[t(),t(),t(),t()];U(n[0],l),U(n[1],p),U(n[2],s),j(n[3],l,p),ee(e,n,r)}function re(e,n,o){var i,s=new Uint8Array(64),a=[t(),t(),t(),t()];for(o||r(n,32),Y(s,n,32),s[0]&=248,s[31]&=127,s[31]|=64,te(a,s),Q(e,a),i=0;i<32;i++)n[i+32]=e[i];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var r,n,o,i;for(n=63;n>=32;--n){for(r=0,o=n-32,i=n-12;o<i;++o)t[o]+=r-16*t[n]*ne[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*ne[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*ne[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ie(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,r)}function se(e,r,n,o){var i,s,a=new Uint8Array(64),c=new Uint8Array(64),u=new Uint8Array(64),l=new Float64Array(64),p=[t(),t(),t(),t()];Y(a,o,32),a[0]&=248,a[31]&=127,a[31]|=64;var h=n+64;for(i=0;i<n;i++)e[64+i]=r[i];for(i=0;i<32;i++)e[32+i]=a[32+i];for(Y(u,e.subarray(32),n+32),ie(u),te(p,u),Q(e,p),i=32;i<64;i++)e[i]=o[i];for(Y(c,e,n+64),ie(c),i=0;i<64;i++)l[i]=0;for(i=0;i<32;i++)l[i]=u[i];for(i=0;i<32;i++)for(s=0;s<32;s++)l[i+s]+=c[i]*a[s];return oe(e.subarray(32),l),h}function ae(e,r,n,o){var a,u=new Uint8Array(32),l=new Uint8Array(64),p=[t(),t(),t(),t()],f=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),a=t(),u=t(),l=t(),p=t(),f=t();return U(e[2],s),N(e[1],r),z(a,e[1]),j(u,a,c),L(a,a,e[2]),P(u,e[2],u),z(l,u),z(p,l),j(f,p,l),j(n,f,a),j(n,n,u),M(n,n),j(n,n,a),j(n,n,u),j(n,n,u),j(e[0],n,u),z(o,e[0]),j(o,o,u),O(o,a)&&j(e[0],e[0],h),z(o,e[0]),j(o,o,u),O(o,a)?-1:(D(e[0])===r[31]>>7&&L(e[0],i,e[0]),j(e[3],e[0],e[1]),0)}(f,o))return-1;for(a=0;a<n;a++)e[a]=r[a];for(a=0;a<32;a++)e[a+32]=o[a];if(Y(l,e,n),ie(l),ee(p,f,l),te(f,r.subarray(32)),J(p,f),Q(u,p),n-=64,y(r,0,u,0)){for(a=0;a<n;a++)e[a]=0;return-1}for(a=0;a<n;a++)e[a]=r[a+64];return n}var ce=64,ue=32,le=64;function pe(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function fe(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:S,crypto_stream:x,crypto_stream_salsa20_xor:v,crypto_stream_salsa20:A,crypto_onetimeauth:E,crypto_onetimeauth_verify:T,crypto_verify_16:g,crypto_verify_32:y,crypto_secretbox:B,crypto_secretbox_open:k,crypto_scalarmult:H,crypto_scalarmult_base:G,crypto_box_beforenm:K,crypto_box_afternm:$,crypto_box:function(e,t,r,n,o,i){var s=new Uint8Array(32);return K(s,o,i),$(e,t,r,n,s)},crypto_box_open:function(e,t,r,n,o,i){var s=new Uint8Array(32);return K(s,o,i),V(e,t,r,n,s)},crypto_box_keypair:q,crypto_hash:Y,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:ae,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:ue,crypto_sign_SECRETKEYBYTES:le,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:ne,pack25519:R,unpack25519:N,M:j,A:P,S:z,Z:L,pow2523:M,add:J,set25519:U,modL:oe,scalarmult:ee,scalarbase:te},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+32]=e[i];return B(o,n,n.length,t,r),o.subarray(16)},e.secretbox.open=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(16+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+16]=e[i];return n.length<32||0!==k(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return H(r,e,t),r},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return G(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox(t,r,i)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return K(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox.open(t,r,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return G(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==le)throw new Error("bad secret key size");var r=new Uint8Array(ce+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(he(e,t),t.length!==ue)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ae(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=r[i];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(ce),i=0;i<o.length;i++)o[i]=n[i];return o},e.sign.detached.verify=function(e,t,r){if(he(e,t,r),t.length!==ce)throw new Error("bad signature size");if(r.length!==ue)throw new Error("bad public key size");var n,o=new Uint8Array(ce+e.length),i=new Uint8Array(ce+e.length);for(n=0;n<ce;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+ce]=e[n];return ae(i,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(ue),t=new Uint8Array(le);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==le)throw new Error("bad secret key size");for(var t=new Uint8Array(ue),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(ue),r=new Uint8Array(le),n=0;n<32;n++)r[n]=e[n];return re(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=ue,e.sign.secretKeyLength=le,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){he(e);var t=new Uint8Array(64);return Y(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===d(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;t&&t.getRandomValues?e.setPRNG((function(e,r){var n,o=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(o.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=o[n];fe(o)})):(t=__webpack_require__(2921))&&t.randomBytes&&e.setPRNG((function(e,r){var n,o=t.randomBytes(r);for(n=0;n<r;n++)e[n]=o[n];fe(o)}))}()}(void 0!==e&&e.exports?e.exports:self.nacl=self.nacl||{})},5922:(e,t,r)=>{var n=r(2486).Buffer;const{default:o}=r(1113),{setSendTransactionHeaders:i}=r(5180);e.exports={Algod:function(e="",t="http://r2.algorand.network",r=4180,s={}){let a=e;"string"==typeof a&&(a={"X-Algo-API-Token":a});const c=new o(a,t,r,s);function u(e){return void 0!==e.noteb64&&null!==e.noteb64&&(e.note=n.from(e.noteb64,"base64")),e}this.status=async(e={})=>(await c.get("/v1/status",{},e)).body,this.healthCheck=async(e={})=>{const t=await c.get("/health",{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}},this.statusAfterBlock=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");return(await c.get(`/v1/status/wait-for-block-after/${e}`,{},t)).body},this.pendingTransactions=async(e,t={})=>{if(!Number.isInteger(e))throw Error("maxTxns should be an integer");const r=await c.get("/v1/transactions/pending",{max:e},t);if(200===r.statusCode&&void 0!==r.body.truncatedTxns.transactions)for(let e=0;e<r.body.truncatedTxns.transactions.length;e++)r.body.truncatedTxns.transactions[e]=u(r.body.truncatedTxns.transactions[e]);return r.body},this.versions=async(e={})=>(await c.get("/versions",{},e)).body,this.ledgerSupply=async(e={})=>(await c.get("/v1/ledger/supply",{},e)).body,this.transactionByAddress=async(e,t=null,r=null,n=null,o={})=>{if(null!==t&&!Number.isInteger(t))throw Error("first round should be an integer");if(null!==r&&!Number.isInteger(r))throw Error("last round should be an integer");const i=await c.get(`/v1/account/${e}/transactions`,{firstRound:t,lastRound:r,max:n},o);if(200===i.statusCode&&void 0!==i.body.transactions)for(let e=0;e<i.body.transactions.length;e++)i.body.transactions[e]=u(i.body.transactions[e]);return i.body},this.transactionByAddressAndDate=async(e,t,r,n=null,o={})=>{const i=await c.get(`/v1/account/${e}/transactions`,{fromDate:t,toDate:r,max:n},o);if(200===i.statusCode&&void 0!==i.body.transactions)for(let e=0;e<i.body.transactions.length;e++)i.body.transactions[e]=u(i.body.transactions[e]);return i.body},this.transactionById=async(e,t={})=>{const r=await c.get(`/v1/transaction/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.transactionInformation=async(e,t,r={})=>{const n=await c.get(`/v1/account/${e}/transaction/${t}`,{},r);return 200===n.statusCode&&(n.body=u(n.body)),n.body},this.pendingTransactionInformation=async(e,t={})=>{const r=await c.get(`/v1/transactions/pending/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.accountInformation=async(e,t={})=>(await c.get(`/v1/account/${e}`,{},t)).body,this.assetInformation=async(e,t={})=>(await c.get(`/v1/asset/${e}`,{},t)).body,this.suggestedFee=async(e={})=>(await c.get("/v1/transactions/fee",{},e)).body,this.sendRawTransaction=async(e,t={})=>{const r=i(t);return(await c.post("/v1/transactions",n.from(e),r)).body},this.sendRawTransactions=async(e,t={})=>{const r=i(t),o=Array.prototype.concat(...e.map((e=>Array.from(e))));return(await c.post("/v1/transactions",n.from(o),r)).body},this.getTransactionParams=async(e={})=>(await c.get("/v1/transactions/params",{},e)).body,this.suggestParams=async(e={})=>{const t=await this.getTransactionParams(e);return{flatFee:!1,fee:t.fee,firstRound:t.lastRound,lastRound:t.lastRound+1e3,genesisID:t.genesisID,genesisHash:t.genesishashb64}},this.block=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");const r=await c.get(`/v1/block/${e}`,{},t);if(200===r.statusCode&&void 0!==r.body.txns.transactions)for(let e=0;e<r.body.txns.transactions.length;e++)r.body.txns.transactions[e]=u(r.body.txns.transactions[e]);return r.body}}}},1834:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(3033),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(9417);e.exports={DynamicFee:class{constructor(e,t,r,i,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("firstValid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("lastValid must be a positive number and smaller than 2^53-1");if(void 0===s&&(s=o.ALGORAND_ZERO_ADDRESS_STRING),void 0===a){const e=u.randomBytes(32);a=n.from(e).toString("base64")}const p=n.from("ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ","base64"),h=[t,r,i,e,s,a],f=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS,l.valTypes.ADDRESS,l.valTypes.BASE64],d=l.inject(p,[5,6,7,11,44,76],h,f);this.programBytes=d;const g=new c.LogicSig(d,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getDynamicFeeTransactions:function(e,t,r,n){if(!t.verify(o.decodeAddress(e.from).publicKey))throw new Error("invalid signature");e.fee=n,e.fee<p.ALGORAND_MIN_TX_FEE&&(e.fee=p.ALGORAND_MIN_TX_FEE);const a=u.keyPairFromSecretKey(r),c=o.encodeAddress(a.publicKey),{lease:l}=e;delete e.lease;const h=new p.Transaction(e);h.addLease(l,n);const f={from:c,to:e.from,fee:n,amount:h.fee,firstRound:e.firstRound,lastRound:e.lastRound,genesisHash:e.genesisHash,type:"pay"},d=new p.Transaction(f);d.addLease(l,n);const g=s.assignGroupID([d,h],void 0),y=g[0],m=g[1],b={lsig:t.get_obj_for_encoding(),txn:m.get_obj_for_encoding()},w=y.signTxn(r),v=i.encode(b),A=new Uint8Array(w.length+v.length);return A.set(w),A.set(v,w.length),A},signDynamicFee:function(e,t,r){const n=a.readProgram(e,void 0),i=n[0],s=n[1],l=u.keyPairFromSecretKey(t),p={from:o.encodeAddress(l.publicKey),to:o.encodeAddress(s[0]),fee:0,amount:i[2],closeRemainderTo:o.encodeAddress(s[1]),firstRound:i[3],lastRound:i[4],genesisHash:r,type:"pay",lease:new Uint8Array(s[2])},h=new c.LogicSig(e,void 0);return h.sign(t),{txn:p,lsig:h}}}},1786:(e,t,r)=>{var n=r(2486).Buffer;const o=r(3477),{keccak256:i}=r(583),s=r(5583),a=r(8800),c=r(2514),u=r(9417);e.exports={HTLC:class{constructor(e,t,r,o,i,s){if(!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");let u="";if("sha256"===r)u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==";else{if("keccak256"!==r)throw Error("hash function unrecognized");u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA=="}if(32!==n.from(o,"base64").length)throw Error("hash image must be 32 bytes");const l=n.from(u,"base64"),p=[s,i,t,o,e],h=[c.valTypes.INT,c.valTypes.INT,c.valTypes.ADDRESS,c.valTypes.BASE64,c.valTypes.ADDRESS],f=c.inject(l,[3,6,10,42,76],p,h);this.programBytes=f;const d=new a.LogicSig(f,void 0);this.address=d.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},signTransactionWithHTLCUnlock:function(e,t,r){const c=n.from(r,"base64"),l=s.readProgram(e,void 0),p=l[0],h=l[1][1],f=e[e.length-15];if(1===f){const e=o.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("sha256 hash of preimage did not match stored contract hash")}else{if(2!==f)throw new Error("hash function in contract unrecognized");{const e=i.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("keccak256 hash of preimage did not match stored contract hash")}}const d=[c],g=new a.LogicSig(e,d);delete t.to;const y=p[0],m=new u.Transaction(t);if(m.fee>y)throw new Error(`final fee of payment transaction${m.fee.toString()}greater than transaction max fee${y.toString()}`);return a.signLogicSigTransaction(t,g)}}},8886:(e,t,r)=>{const n=r(1834),o=r(1786),i=r(4748),s=r(3758),a=r(2200);e.exports={DynamicFee:n.DynamicFee,getDynamicFeeTransactions:n.getDynamicFeeTransactions,signDynamicFee:n.signDynamicFee,HTLC:o.HTLC,signTransactionWithHTLCUnlock:o.signTransactionWithHTLCUnlock,LimitOrder:i.LimitOrder,getSwapAssetsTransaction:i.getSwapAssetsTransaction,Split:s.Split,getSplitFundsTransaction:s.getSplitFundsTransaction,PeriodicPayment:a.PeriodicPayment,getPeriodicPaymentWithdrawalTransaction:a.getPeriodicPaymentWithdrawalTransaction}},4748:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(413);e.exports={LimitOrder:class{constructor(e,t,r,o,i,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("assetid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("ratn must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("ratd must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("minTrade must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(a)||a<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const u=n.from("ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=","base64"),p=[a,s,t,o,r,i,e],h=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS],f=l.inject(u,[5,7,9,10,11,12,16],p,h);this.programBytes=f;const d=new c.LogicSig(f,void 0);this.address=d.address(),this.owner=e,this.assetid=t}getProgram(){return this.programBytes}getAddress(){return this.address}},getSwapAssetsTransaction:function(e,t,r,n,l,h,f,d){const g=u.keyPairFromSecretKey(n),y=o.encodeAddress(g.publicKey),m=a.readProgram(e,void 0),b=m[0],w=m[1];let v;const A=b[6],x=o.encodeAddress(w[0]),S=c.makeLogicSig(e,void 0),_=S.address(),E=[i.makePaymentTxn(_,y,l,r,v,h,f,void 0,d,void 0),i.makeAssetTransferTxn(y,x,v,void 0,l,t,h,f,void 0,d,void 0,A)],T=s.assignGroupID(E),B=b[7],k=b[8];if(t*B<r*k)throw new Error(`bad payment ratio, ${t.toString()}*${B.toString()} !>= ${r.toString()}*${k.toString()}`);const U=b[4];if(r<U)throw new Error(`payment amount ${r.toString()} less than minimum trade ${U.toString()}`);const I=b[2];if(T[0].fee>I)throw new Error(`final fee of payment transaction ${T[0].fee.toString()} greater than transaction max fee ${I.toString()}`);if(T[1].fee>I)throw new Error(`final fee of asset transaction ${T[1].fee.toString()} greater than transaction max fee ${I.toString()}`);const C=c.signLogicSigTransactionObject(T[0],S),R=T[1].signTxn(n);return p.concatArrays(C.blob,R)}}},2200:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(5583),a=r(8800),c=r(9404),u=r(2514);e.exports={PeriodicPayment:class{constructor(e,t,r,o,i,s,u){if(this.receiver=e,!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(this.amount=t,!Number.isSafeInteger(r)||r<0)throw Error("withdrawalWindow must be a positive number and smaller than 2^53-1");if(this.withdrawalWindow=r,!Number.isSafeInteger(o)||o<0)throw Error("period must be a positive number and smaller than 2^53-1");if(this.period=o,!Number.isSafeInteger(i)||i<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(this.expiryRound=i,!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");if(this.maxFee=s,void 0===u){const e=c.randomBytes(32);this.lease=n.from(e).toString("base64")}else this.lease=u;this.programBytes=this.getProgram();const l=new a.LogicSig(this.programBytes,void 0);this.address=l.address()}getProgram(){const e=n.from("ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ","base64"),t=[this.maxFee,this.period,this.withdrawalWindow,this.amount,this.expiryRound,this.lease,this.receiver],r=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.BASE64,u.valTypes.ADDRESS];return u.inject(e,[4,5,7,8,9,12,46],t,r)}getAddress(){return this.address}},getPeriodicPaymentWithdrawalTransaction:function(e,t,r,n){const c=s.readProgram(e,void 0),u=c[0],l=c[1],p=u[2],h=u[4],f=u[5];if(r%p!=0)throw new Error(`firstValid round ${r.toString()} was not a multiple of contract period ${p.toString()}`);const d=l[1],g=o.encodeAddress(d),y=l[0],m=new Uint8Array(y),b=r+h,w=g;let v,A;const x=a.makeLogicSig(e,void 0),S=x.address(),_={from:S,to:w,fee:t,amount:f,closeRemainderTo:v,firstRound:r,lastRound:b,note:A,genesisHash:n,genesisID:"",type:"pay",lease:m},E=i.makePaymentTxn(S,w,t,f,v,r,b,A,n,"");if(E.fee>u[1])throw new Error(`final fee of payment transaction${E.fee.toString()}greater than transaction max fee${u[1].toString()}`);return a.signLogicSigTransaction(_,x)}}},3758:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116),i=r(1988),s=r(1063),a=r(8800),c=r(5583),u=r(2514),l=r(413);e.exports={Split:class{constructor(e,t,r,o,i,s,c,l){if(!Number.isSafeInteger(i)||i<0)throw Error("rat2 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("rat1 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(c)||c<0)throw Error("minPay must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(l)||l<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const p=n.from("ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=","base64"),h=[l,s,i,o,c,e,t,r],f=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS,u.valTypes.ADDRESS,u.valTypes.ADDRESS],d=u.inject(p,[4,7,8,9,10,14,47,80],h,f);this.programBytes=d;const g=a.makeLogicSig(d,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getSplitFundsTransaction:function(e,t,r,n,u,p){const h=c.readProgram(e,void 0),f=h[0],d=h[1];let g=f[6],y=f[5],m=0;const b=(e,t)=>{if("number"!=typeof e||"number"!=typeof t)throw new Error("gcd operates only on positive integers");return t?b(t,e%t):e},w=b(g,y);g=Math.floor(g/w),y=Math.floor(y/w);const v=y/g;m=Math.round(t/(1+v));const A=t-m;if(y*m!=g*A)throw Error("could not split funds in a way that satisfied the contract ratio");const x=a.makeLogicSig(e,void 0).address(),S=o.encodeAddress(d[1]),_=o.encodeAddress(d[2]),E=[i.makePaymentTxn(x,S,u,m,void 0,r,n,void 0,p),i.makePaymentTxn(x,_,u,A,void 0,r,n,void 0,p)],T=s.assignGroupID(E).map((e=>a.signLogicSigTransactionObject(e,a).blob));return l.concatArrays(T[0],T[1])}}},2514:(e,t,r)=>{var n=r(2486).Buffer;const o=r(7116);function i(e,t){let r=0;for(;t>128;)e.push(255&t|128),t>>=7,r+=1;return e.push(255&t),r+1}const s={INT:1,ADDRESS:2,BASE64:3};e.exports={inject:function(e,t,r,a){if(t.length!==r.length||t.length!==a.length)throw new Error("Lengths do not match");let c=e;function u(e,t,r,o){const i=e.slice(0,r),s=e.slice(r+o,e.length),a=[i,n.from(t),s];return n.concat(a)}for(let e=0;e<t.length;e++){let l=0,p=r[e];switch(a[e]){case s.INT:const r=[];l=i(r,p),c=u(c,r,t[e],1);break;case s.ADDRESS:p=o.decodeAddress(p),c=u(c,p.publicKey,t[e],32);break;case s.BASE64:const a=[];p=n.from(p,"base64"),i(a,p.length),p=n.concat([n.from(a),p]),c=u(c,p,t[e],33);break;default:throw new Error("unrecognized value type")}if(0!==l)for(let e=0;e<t.length;e++)t[e]+=l-1}return c},valTypes:s}},7677:(e,t,r)=>{"use strict";r.d(t,{JQ:()=>m,_4:()=>x,X3:()=>A,R0:()=>b,jD:()=>w,Yh:()=>D,bL:()=>N,Ls:()=>R,UV:()=>B,Ax:()=>v,A9:()=>T,w1:()=>S,NK:()=>d,RY:()=>y,Pu:()=>g,Vk:()=>c,nh:()=>p,kG:()=>a,qH:()=>l,JH:()=>u,vJ:()=>I,o5:()=>C,AE:()=>U,I5:()=>O});var n=r(7116),o=r(8922),i=r(413),s=r(2486).Buffer;const a=65535,c=32,u=1,l=1,p=2,h=/^([a-z\d[\](),]+)\[([1-9][\d]*)]$/,f=/^ufixed([1-9][\d]*)x([1-9][\d]*)$/;class d{static from(e){if(e.endsWith("[]")){const t=d.from(e.slice(0,e.length-2));return new x(t)}if(e.endsWith("]")){const t=e.match(h);if(3!==t.length)throw new Error(`malformed static array string: ${e}`);const r=t[2],n=parseInt(r,10);if(n>a)throw new Error(`array length exceeds limit ${a}`);const o=d.from(t[1]);return new A(o,n)}if(e.startsWith("uint")){const t=e=>[...e].every((e=>"0123456789".includes(e))),r=e.slice(4,e.length);if(!t(r))throw new Error(`malformed uint string: ${r}`);const n=parseInt(r,10);if(n>a)throw new Error(`malformed uint string: ${n}`);return new g(n)}if("byte"===e)return new w;if(e.startsWith("ufixed")){const t=e.match(f);if(3!==t.length)throw new Error(`malformed ufixed type: ${e}`);const r=parseInt(t[1],10),n=parseInt(t[2],10);return new y(r,n)}if("bool"===e)return new b;if("address"===e)return new m;if("string"===e)return new v;if(e.length>=2&&"("===e[0]&&")"===e[e.length-1]){const t=S.parseTupleContent(e.slice(1,e.length-1)),r=[];for(let e=0;e<t.length;e++){const n=d.from(t[e]);r.push(n)}return new S(r)}throw new Error(`cannot convert a string ${e} to an ABI type`)}}class g extends d{constructor(e){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported uint type bitSize: ${e}`);this.bitSize=e}toString(){return`uint${this.bitSize}`}equals(e){return e instanceof g&&this.bitSize===e.bitSize}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as uint${this.bitSize}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size uint${this.bitSize}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,o.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a uint${this.bitSize}`);return(0,o.v)(e)}}class y extends d{constructor(e,t){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported ufixed type bitSize: ${e}`);if(t>160||t<1)throw new Error(`unsupported ufixed type precision: ${t}`);this.bitSize=e,this.precision=t}toString(){return`ufixed${this.bitSize}x${this.precision}`}equals(e){return e instanceof y&&this.bitSize===e.bitSize&&this.precision===e.precision}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size ${this.toString()}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,o.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a ${this.toString()}`);return(0,o.v)(e)}}class m extends d{toString(){return"address"}equals(e){return e instanceof m}isDynamic(){return!1}byteLen(){return c}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if("string"==typeof e)return(0,n.decodeAddress)(e).publicKey;if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return e}decode(e){if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return(0,n.encodeAddress)(e)}}class b extends d{toString(){return"bool"}equals(e){return e instanceof b}isDynamic(){return!1}byteLen(){return l}encode(e){if("boolean"!=typeof e)throw new Error(`Cannot encode value as bool: ${e}`);return e?new Uint8Array([128]):new Uint8Array([0])}decode(e){if(1!==e.byteLength)throw new Error("bool string must be 1 byte long");const t=e[0];if(128===t)return!0;if(0===t)return!1;throw new Error("boolean could not be decoded from the byte string")}}class w extends d{toString(){return"byte"}equals(e){return e instanceof w}isDynamic(){return!1}byteLen(){return u}encode(e){if("number"!=typeof e&&"bigint"!=typeof e)throw new Error(`Cannot encode value as byte: ${e}`);if("bigint"==typeof e&&(e=Number(e)),e<0||e>255)throw new Error(`${e} cannot be encoded into a byte`);return new Uint8Array([e])}decode(e){if(1!==e.byteLength)throw new Error("byte string must be 1 byte long");return e[0]}}class v extends d{toString(){return"string"}equals(e){return e instanceof v}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as string: ${e}`);const t=s.from(e),r=(0,o.j)(e.length,p),n=new Uint8Array(e.length+p);return n.set(r),n.set(t,p),n}decode(e){if(e.length<p)throw new Error(`byte string is too short to be decoded. Actual length is ${e.length}, but expected at least ${p}`);const t=s.from(e).readUIntBE(0,p),r=e.slice(p,e.length);if(t!==r.length)throw new Error(`string length bytes do not match the actual length of string. Expected ${t}, got ${r.length}`);return s.from(r).toString("utf-8")}}class A extends d{constructor(e,t){if(super(),t<1)throw new Error(`static array must have a length greater than 0: ${t}`);this.childType=e,this.staticLength=t}toString(){return`${this.childType.toString()}[${this.staticLength}]`}equals(e){return e instanceof A&&this.staticLength===e.staticLength&&this.childType.equals(e.childType)}isDynamic(){return this.childType.isDynamic()}byteLen(){return this.childType.constructor===b?Math.ceil(this.staticLength/8):this.staticLength*this.childType.byteLen()}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e.length!==this.staticLength)throw new Error(`Value array does not match static array length. Expected ${this.staticLength}, got ${e.length}`);return this.toABITupleType().encode(e)}decode(e){return this.toABITupleType().decode(e)}toABITupleType(){return new S(Array(this.staticLength).fill(this.childType))}}class x extends d{constructor(e){super(),this.childType=e}toString(){return`${this.childType.toString()}[]`}equals(e){return e instanceof x&&this.childType.equals(e.childType)}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=this.toABITupleType(e.length),r=t.encode(e),n=(0,o.j)(t.childTypes.length,p);return(0,i.concatArrays)(n,r)}decode(e){const t=s.from(e).readUIntBE(0,p);return this.toABITupleType(t).decode(e.slice(p,e.length))}toABITupleType(e){return new S(Array(e).fill(this.childType))}}class S extends d{constructor(e){if(super(),e.length>=a)throw new Error("tuple type child type number larger than maximum uint16 error");this.childTypes=e}toString(){const e=[];for(let t=0;t<this.childTypes.length;t++)e[t]=this.childTypes[t].toString();return`(${e.join(",")})`}equals(e){return e instanceof S&&this.childTypes.length===e.childTypes.length&&this.childTypes.every(((t,r)=>t.equals(e.childTypes[r])))}isDynamic(){return this.childTypes.some((e=>e.isDynamic()))}byteLen(){let e=0;for(let t=0;t<this.childTypes.length;t++)if(this.childTypes[t].constructor===b){const r=E(this.childTypes,t,1),n=r+1;t+=r,e+=Math.trunc((n+7)/8)}else e+=this.childTypes[t].byteLen();return e}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=Array.from(e);if(e.length>a)throw new Error("length of tuple array should not exceed a uint16");const r=this.childTypes,n=[],s=[],c=new Map;let u=0;for(;u<r.length;){const e=r[u];if(e.isDynamic())c.set(n.length,!0),n.push(new Uint8Array([0,0])),s.push(e.encode(t[u]));else{if(e.constructor===b){const e=E(r,u,-1);let i=E(r,u,1);if(e%8!=0)throw new Error("expected before index should have number of bool mod 8 equal 0");i=Math.min(7,i);const s=_(t.slice(u,u+i+1));n.push((0,o.j)(s,1)),u+=i}else{const r=e.encode(t[u]);n.push(r)}c.set(u,!1),s.push(new Uint8Array)}u+=1}let l=0;for(const e of n)l+=e.length;let h=0;for(let e=0;e<n.length;e++){if(c.get(e)){const t=l+h;if(t>a)throw new Error(`byte length of ${t} should not exceed a uint16`);n[e]=(0,o.j)(t,p)}h+=s[e].length}return(0,i.concatArrays)(...n,...s)}decode(e){const t=this.childTypes,r=[],n=[];let o=0,i=0;const a=s.from(e);for(;o<t.length;){const s=t[o];if(s.isDynamic()){if(e.slice(i,e.length).length<p)throw new Error("dynamic type in tuple is too short to be decoded");const t=a.readUIntBE(i,p);if(r.length>0&&(r[r.length-1].right=t,t<r[r.length-1].left))throw new Error("dynamic index segment miscalculation: left is greater than right index");const o={left:t,right:-1};r.push(o),n.push(null),i+=p}else if(s.constructor===b){const t=E(this.childTypes,o,-1);let r=E(this.childTypes,o,1);if(t%8!=0)throw new Error("expected before bool number mod 8 === 0");r=Math.min(7,r);for(let t=0;t<=r;t++){const r=128>>t;(e[i]&r)>0?n.push(new Uint8Array([128])):n.push(new Uint8Array([0]))}o+=r,i+=1}else{const t=s.byteLen();n.push(e.slice(i,i+t)),i+=t}if(o!==t.length-1&&i>=e.length)throw new Error("input byte not enough to decode");o+=1}if(r.length>0&&(r[r.length-1].right=e.length,i=e.length),i<e.length)throw new Error("input byte not fully consumed");for(let e=0;e<r.length;e++){const t=r[e];if(t.left>t.right)throw new Error("dynamic segment should display a [l, r] space with l <= r");if(e!==r.length-1&&t.right!==r[e+1].left)throw new Error("dynamic segment should be consecutive")}let c=0;for(let o=0;o<t.length;o++)t[o].isDynamic()&&(n[o]=e.slice(r[c].left,r[c].right),c+=1);const u=[];for(let e=0;e<t.length;e++){const r=t[e].decode(n[e]);u.push(r)}return u}static parseTupleContent(e){if(0===e.length)return[];if(e.endsWith(",")||e.startsWith(","))throw new Error("tuple string should not start with comma");if(e.includes(",,"))throw new Error("tuple string should not have consecutive commas");const t=[];let r=0,n="";for(const o of e)n+=o,"("===o?r+=1:")"===o?r-=1:","===o&&0===r&&(t.push(n.slice(0,n.length-1)),n="");if(0!==n.length&&t.push(n),0!==r)throw new Error("tuple string has mismatched parentheses");return t}}function _(e){let t=0;if(e.length>8)throw new Error("value list passed in should be no greater than length 8");for(let r=0;r<e.length;r++){const n=e[r];if("boolean"!=typeof n)throw new Error("non-boolean values cannot be compressed into a byte");n&&(t|=1<<7-r)}return t}function E(e,t,r){let n=0;for(;;){const o=t+r*n;if(e[o].constructor!==b){n-=1;break}if(o!==e.length-1&&1===r)n+=1;else{if(!(o>0&&-1===r))break;n+=1}}return n}var T,B,k=r(9404);function U(e){return e===T.any||e===T.pay||e===T.keyreg||e===T.acfg||e===T.axfer||e===T.afrz||e===T.appl}function I(e,t){return e===T.any||t.type&&t.type.toString()===e.toString()}function C(e){return e===B.account||e===B.application||e===B.asset}!function(e){e.any="txn",e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(T||(T={})),function(e){e.account="account",e.application="application",e.asset="asset"}(B||(B={}));class R{constructor(e){if("string"!=typeof e.name||"object"!=typeof e.returns||!Array.isArray(e.args))throw new Error("Invalid ABIMethod parameters");this.name=e.name,this.description=e.desc,this.args=e.args.map((({type:e,name:t,desc:r})=>U(e)||C(e)?{type:e,name:t,description:r}:{type:d.from(e),name:t,description:r})),this.returns={type:"void"===e.returns.type?e.returns.type:d.from(e.returns.type),description:e.returns.desc}}getSignature(){const e=this.args.map((e=>e.type.toString())).join(","),t=this.returns.type.toString();return`${this.name}(${e})${t}`}getSelector(){const e=(0,k.genericHash)(this.getSignature());return new Uint8Array(e.slice(0,4))}txnCount(){let e=1;for(const t of this.args)"string"==typeof t.type&&U(t.type)&&(e+=1);return e}toJSON(){return{name:this.name,desc:this.description,args:this.args.map((({type:e,name:t,description:r})=>({type:e.toString(),name:t,desc:r}))),returns:{type:this.returns.type.toString(),desc:this.returns.description}}}static fromSignature(e){const{name:t,args:r,returns:n}=function(e){const t=e.indexOf("(");if(-1===t)throw new Error(`Invalid method signature: ${e}`);let r=-1,n=0;for(let o=t;o<e.length;o++){const t=e[o];if("("===t)n+=1;else if(")"===t){if(0===n)break;if(n-=1,0===n){r=o;break}}}if(-1===r)throw new Error(`Invalid method signature: ${e}`);return{name:e.slice(0,t),args:S.parseTupleContent(e.slice(t+1,r)),returns:e.slice(r+1)}}(e);return new R({name:t,args:r.map((e=>({type:e}))),returns:{type:n}})}}function O(e,t){if(null===e||!Array.isArray(e)||!e.every((e=>e instanceof R)))throw new Error("Methods list provided is null or not the correct type");const r=e.filter((e=>e.name===t));if(r.length>1)throw new Error(`found ${r.length} methods with the same name ${r.map((e=>e.getSignature())).join(",")}`);if(0===r.length)throw new Error(`found 0 methods with the name ${t}`);return r[0]}class D{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods)||e.networks&&"object"!=typeof e.networks)throw new Error("Invalid ABIContract parameters");this.name=e.name,this.description=e.desc,this.networks=e.networks?{...e.networks}:{},this.methods=e.methods.map((e=>new R(e)))}toJSON(){return{name:this.name,desc:this.description,networks:this.networks,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return O(this.methods,e)}}class N{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods))throw new Error("Invalid ABIInterface parameters");this.name=e.name,this.description=e.desc,this.methods=e.methods.map((e=>new R(e)))}toJSON(){return{name:this.name,desc:this.description,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return O(this.methods,e)}}},7988:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(9404),o=r(7116);function i(){const e=n.keyPair();return{addr:o.encodeAddress(e.publicKey),sk:e.secretKey}}},2691:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(7116),o=r(3033),i=r(9404),s=r(413),a=r(2486).Buffer;class c{constructor({bidderKey:e,bidAmount:t,bidID:r,auctionKey:o,auctionID:i,maxPrice:s}){this.name="Bid",this.tag=a.from([97,66]);const c=n.decodeAddress(e),u=n.decodeAddress(o);if(!Number.isSafeInteger(t)||t<0)throw Error("Bid amount must be positive and 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("BidID must be positive and 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("auctionID must be positive");Object.assign(this,{bidderKey:c,bidAmount:t,bidID:r,auctionKey:u,auctionID:i,maxPrice:s})}get_obj_for_encoding(){return{bidder:a.from(this.bidderKey.publicKey),cur:this.bidAmount,price:this.maxPrice,id:this.bidID,auc:a.from(this.auctionKey.publicKey),aid:this.auctionID}}signBid(e){const t=o.encode(this.get_obj_for_encoding()),r=a.from(s.concatArrays(this.tag,t)),n=i.sign(r,e),c={t:"b",b:{sig:a.from(n),bid:this.get_obj_for_encoding()}};return new Uint8Array(o.encode(c))}}},1113:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>u});var n=r(413),o=r(5391),i=r(2486).Buffer;class s{constructor(e,t,r,n={}){this.defaultHeaders=n;const o=t.endsWith("/")?t:`${t}/`,i=new URL(o);if(void 0!==r&&(i.port=r.toString()),0===i.protocol.length)throw new Error("Invalid base server URL, protocol must be defined.");this.baseURL=i,this.tokenHeader=e}addressWithPath(e){let t;return t=e.startsWith("./")?e:e.startsWith("/")?`.${e}`:`./${e}`,new URL(t,this.baseURL).toString()}static superagentToHTTPClientResponse(e){return e.body instanceof ArrayBuffer&&(e.body=new Uint8Array(e.body)),e}static formatSuperagentError(e){if(e.response)try{const t=JSON.parse(i.from(e.response.body).toString());e.message=`Network request error. Received status ${e.response.status}: ${t.message}`}catch(e){}return e}async get(e,t,r={}){const n=o.get(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(r).responseType("arraybuffer").query(t);try{const e=await n;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async post(e,t,r,n={}){const a=o.post(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(i.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async delete(e,t,r,n={}){const a=o.delete(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(i.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}}var a=r(2486).Buffer;function c(e){return Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})}class u{constructor(e,t,r,n={}){this.bc=void 0!==t?new s(e,t,r,n):e}static parseJSON(e,t,r={}){try{return 0===Object.keys(r).length?e&&JSON.parse(e):e&&n.parseJSON(e,r)}catch(r){const n=r;throw n.rawResponse=e||null,n.statusCode=t,n}}static serializeData(e,t){if(!e)return new Uint8Array(0);if("application/json"===t["content-type"])return new Uint8Array(a.from(JSON.stringify(e)));if("string"==typeof e)return new Uint8Array(a.from(e));if(e instanceof Uint8Array)return e;throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json")}static prepareResponse(e,t,r={}){let n,{body:o}=e;return"application/msgpack"!==t&&(n=o&&a.from(o).toString()||""),"application/json"===t&&(o=u.parseJSON(n,e.status,r)),{...e,body:o,text:n,ok:2===Math.trunc(e.status/100)}}static prepareResponseError(e){return e.response&&(e.response=u.prepareResponse(e.response,"application/json"),e.status=e.response.status),e}async get(e,t,r={},n={}){const o=function(e){return void 0!==e&&Object.prototype.hasOwnProperty.call(e,"format")&&"msgpack"===e.format?"application/msgpack":"application/json"}(t),i={...r,accept:o};try{const r=await this.bc.get(e,function(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(e[t]&&0!==e[t].length||delete e[t]);return e}(t),i);return u.prepareResponse(r,o,n)}catch(e){throw u.prepareResponseError(e)}}async post(e,t,r={}){const n={"content-type":"application/json",...c(r)};try{const r=await this.bc.post(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(r,"application/json")}catch(e){throw u.prepareResponseError(e)}}async delete(e,t,r={}){const n={"content-type":"application/json",...c(r)},o=await this.bc.delete(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(o,"application/json")}}},6477:(e,t,r)=>{"use strict";r.d(t,{Z:()=>s});var n=r(3480),o=r(9417),i=r(2486).Buffer;class s extends n.Z{constructor(e,t="http://127.0.0.1",r=7833,n={}){super("X-KMD-API-Token",e,t,r,n)}async versions(){return(await this.c.get("/versions")).body}async listWallets(){return(await this.c.get("/v1/wallets")).body}async createWallet(e,t,r=new Uint8Array,n="sqlite"){const o={wallet_name:e,wallet_driver_name:n,wallet_password:t,master_derivation_key:i.from(r).toString("base64")};return(await this.c.post("/v1/wallet",o)).body}async initWalletHandle(e,t){const r={wallet_id:e,wallet_password:t};return(await this.c.post("/v1/wallet/init",r)).body}async releaseWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/release",t)).body}async renewWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/renew",t)).body}async renameWallet(e,t,r){const n={wallet_id:e,wallet_password:t,wallet_name:r};return(await this.c.post("/v1/wallet/rename",n)).body}async getWallet(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/info",t)).body}async exportMasterDerivationKey(e,t){const r={wallet_handle_token:e,wallet_password:t},n=await this.c.post("/v1/master-key/export",r);return{master_derivation_key:i.from(n.body.master_derivation_key,"base64")}}async importKey(e,t){const r={wallet_handle_token:e,private_key:i.from(t).toString("base64")};return(await this.c.post("/v1/key/import",r)).body}async exportKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t},o=await this.c.post("/v1/key/export",n);return{private_key:i.from(o.body.private_key,"base64")}}async generateKey(e){const t={wallet_handle_token:e,display_mnemonic:!1};return(await this.c.post("/v1/key",t)).body}async deleteKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/key",n)).body}async listKeys(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/key/list",t)).body}async signTransaction(e,t,r){const n=o.instantiateTxnIfNeeded(r),s={wallet_handle_token:e,wallet_password:t,transaction:i.from(n.toByte()).toString("base64")},a=await this.c.post("/v1/transaction/sign",s);return 200===a.status?i.from(a.body.signed_transaction,"base64"):a.body}async signTransactionWithSpecificPublicKey(e,t,r,n){const s=o.instantiateTxnIfNeeded(r),a={wallet_handle_token:e,wallet_password:t,transaction:i.from(s.toByte()).toString("base64"),public_key:i.from(n).toString("base64")},c=await this.c.post("/v1/transaction/sign",a);return 200===c.status?i.from(c.body.signed_transaction,"base64"):c.body}async listMultisig(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/multisig/list",t)).body}async importMultisig(e,t,r,n){const o={wallet_handle_token:e,multisig_version:t,threshold:r,pks:n};return(await this.c.post("/v1/multisig/import",o)).body}async exportMultisig(e,t){const r={wallet_handle_token:e,address:t};return(await this.c.post("/v1/multisig/export",r)).body}async signMultisigTransaction(e,t,r,n,s){const a=o.instantiateTxnIfNeeded(r),c={wallet_handle_token:e,transaction:i.from(a.toByte()).toString("base64"),public_key:i.from(n).toString("base64"),partial_multisig:s,wallet_password:t};return(await this.c.post("/v1/multisig/sign",c)).body}async deleteMultisig(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/multisig",n)).body}}},1663:(e,t,r)=>{"use strict";r.d(t,{Z:()=>U});var n=r(3480),o=r(8680);class i extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}exclude(e){return this.query.exclude=e,this}}class s extends o.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.assetID=n,this.account=r,this.assetID=n}path(){return`/v2/accounts/${this.account}/assets/${this.assetID}`}}class a extends o.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.applicationID=n,this.account=r,this.applicationID=n}path(){return`/v2/accounts/${this.account}/applications/${this.applicationID}`}}var c=r(3033);class u extends o.Z{constructor(e,t){if(super(e),!Number.isInteger(t))throw Error("roundNumber should be an integer");this.round=t,this.query={format:"msgpack"}}path(){return`/v2/blocks/${this.round}`}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}}var l=r(2486).Buffer;function p(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="text/plain"),t}class h extends o.Z{constructor(e,t){super(e),this.source=t,this.source=t}path(){return"/v2/teal/compile"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),l.from(this.source),t)).body}}var f=r(2486).Buffer;class d extends o.Z{constructor(e,t){super(e),this.blob=c.encode(t.get_obj_for_encoding(!0))}path(){return"/v2/teal/dryrun"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),f.from(this.blob),t)).body}}class g extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}}class y extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}}class m extends o.Z{path(){return"/health"}async do(e={}){const t=await this.c.get(this.path(),{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}}}class b extends o.Z{constructor(e,t){super(e),this.txid=t,this.txid=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/transactions/pending/${this.txid}`}max(e){return this.query.max=e,this}}class w extends o.Z{constructor(e){super(e),this.query.format="msgpack"}path(){return"/v2/transactions/pending"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}max(e){return this.query.max=e,this}}class v extends o.Z{constructor(e,t){super(e),this.address=t,this.address=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/accounts/${this.address}/transactions/pending`}max(e){return this.query.max=e,this}}var A=r(5180);class x extends o.Z{path(){return"/v2/status"}}class S extends o.Z{constructor(e,t,r){if(super(e,t),this.round=r,!Number.isInteger(r))throw Error("round should be an integer");this.round=r}path(){return`/v2/status/wait-for-block-after/${this.round}`}}class _ extends o.Z{path(){return"/v2/transactions/params"}prepare(e){return{flatFee:!1,fee:e.fee,firstRound:e["last-round"],lastRound:e["last-round"]+1e3,genesisID:e["genesis-id"],genesisHash:e["genesis-hash"]}}}class E extends o.Z{path(){return"/v2/ledger/supply"}}class T extends o.Z{path(){return"/versions"}}class B extends o.Z{path(){return"/genesis"}}class k extends o.Z{constructor(e,t,r,n){super(e,t),this.round=r,this.txID=n,this.round=r,this.txID=n}path(){return`/v2/blocks/${this.round}/transactions/${this.txID}/proof`}}class U extends n.Z{constructor(e,t="http://r2.algorand.network",r=4180,n={}){super("X-Algo-API-Token",e,t,r,n)}healthCheck(){return new m(this.c)}versionsCheck(){return new T(this.c)}sendRawTransaction(e){return new A.default(this.c,e)}accountInformation(e){return new i(this.c,this.intDecoding,e)}accountAssetInformation(e,t){return new s(this.c,this.intDecoding,e,t)}accountApplicationInformation(e,t){return new a(this.c,this.intDecoding,e,t)}block(e){return new u(this.c,e)}pendingTransactionInformation(e){return new b(this.c,e)}pendingTransactionsInformation(){return new w(this.c)}pendingTransactionByAddress(e){return new v(this.c,e)}status(){return new x(this.c,this.intDecoding)}statusAfterBlock(e){return new S(this.c,this.intDecoding,e)}getTransactionParams(){return new _(this.c)}supply(){return new E(this.c,this.intDecoding)}compile(e){return new h(this.c,e)}dryrun(e){return new d(this.c,e)}getAssetByID(e){return new g(this.c,this.intDecoding,e)}getApplicationByID(e){return new y(this.c,this.intDecoding,e)}genesis(){return new B(this.c,this.intDecoding)}getProof(e,t){return new k(this.c,this.intDecoding,e,t)}}},227:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Account:()=>a,AccountApplicationResponse:()=>c,AccountAssetResponse:()=>u,AccountParticipation:()=>l,AccountStateDelta:()=>p,Application:()=>h,ApplicationLocalState:()=>f,ApplicationParams:()=>d,ApplicationStateSchema:()=>g,Asset:()=>y,AssetHolding:()=>m,AssetParams:()=>b,BlockResponse:()=>w,BuildVersion:()=>v,CatchpointAbortResponse:()=>A,CatchpointStartResponse:()=>x,CompileResponse:()=>S,DisassembleResponse:()=>_,DryrunRequest:()=>E,DryrunResponse:()=>T,DryrunSource:()=>B,DryrunState:()=>k,DryrunTxnResult:()=>U,ErrorResponse:()=>I,EvalDelta:()=>C,EvalDeltaKeyValue:()=>R,NodeStatusResponse:()=>O,PendingTransactionResponse:()=>D,PendingTransactionsResponse:()=>N,PostTransactionsResponse:()=>P,ProofResponse:()=>L,SupplyResponse:()=>j,TealKeyValue:()=>z,TealValue:()=>F,TransactionParametersResponse:()=>M,Version:()=>H});var n=r(2486).Buffer;function o(e,t){let r;if(e instanceof Uint8Array)r=t?e:n.from(e).toString("base64");else if("function"==typeof e.get_obj_for_encoding)r=e.get_obj_for_encoding(t);else if(Array.isArray(e)){r=[];for(const n of e)r.push(o(n,t))}else if("object"==typeof e){const n={};for(const r of Object.keys(e))n[r]=o(e[r],t);r=n}else{if(!function(e){return void 0===e||null==e||"object"!=typeof e&&"function"!=typeof e}(e))throw new Error(`Unsupported value: ${String(e)}`);r=e}return r}class i{get_obj_for_encoding(e=!1){const t={};for(const r of Object.keys(this.attribute_map)){const n=this.attribute_map[r],i=this[r];void 0!==i&&(t[n]=null===i?null:o(i,e))}return t}}var s=r(2486).Buffer;class a extends i{constructor({address:e,amount:t,amountWithoutPendingRewards:r,minBalance:n,pendingRewards:o,rewards:i,round:s,status:a,totalAppsOptedIn:c,totalAssetsOptedIn:u,totalCreatedApps:l,totalCreatedAssets:p,appsLocalState:h,appsTotalExtraPages:f,appsTotalSchema:d,assets:g,authAddr:y,createdApps:m,createdAssets:b,participation:w,rewardBase:v,sigType:A}){super(),this.address=e,this.amount=t,this.amountWithoutPendingRewards=r,this.minBalance=n,this.pendingRewards=o,this.rewards=i,this.round=s,this.status=a,this.totalAppsOptedIn=c,this.totalAssetsOptedIn=u,this.totalCreatedApps=l,this.totalCreatedAssets=p,this.appsLocalState=h,this.appsTotalExtraPages=f,this.appsTotalSchema=d,this.assets=g,this.authAddr=y,this.createdApps=m,this.createdAssets=b,this.participation=w,this.rewardBase=v,this.sigType=A,this.attribute_map={address:"address",amount:"amount",amountWithoutPendingRewards:"amount-without-pending-rewards",minBalance:"min-balance",pendingRewards:"pending-rewards",rewards:"rewards",round:"round",status:"status",totalAppsOptedIn:"total-apps-opted-in",totalAssetsOptedIn:"total-assets-opted-in",totalCreatedApps:"total-created-apps",totalCreatedAssets:"total-created-assets",appsLocalState:"apps-local-state",appsTotalExtraPages:"apps-total-extra-pages",appsTotalSchema:"apps-total-schema",assets:"assets",authAddr:"auth-addr",createdApps:"created-apps",createdAssets:"created-assets",participation:"participation",rewardBase:"reward-base",sigType:"sig-type"}}}class c extends i{constructor(e,t,r){super(),this.round=e,this.appLocalState=t,this.createdApp=r,this.attribute_map={round:"round",appLocalState:"app-local-state",createdApp:"created-app"}}}class u extends i{constructor(e,t,r){super(),this.round=e,this.assetHolding=t,this.createdAsset=r,this.attribute_map={round:"round",assetHolding:"asset-holding",createdAsset:"created-asset"}}}class l extends i{constructor({selectionParticipationKey:e,voteFirstValid:t,voteKeyDilution:r,voteLastValid:n,voteParticipationKey:o,stateProofKey:i}){super(),this.selectionParticipationKey="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.voteFirstValid=t,this.voteKeyDilution=r,this.voteLastValid=n,this.voteParticipationKey="string"==typeof o?new Uint8Array(s.from(o,"base64")):o,this.stateProofKey="string"==typeof i?new Uint8Array(s.from(i,"base64")):i,this.attribute_map={selectionParticipationKey:"selection-participation-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key",stateProofKey:"state-proof-key"}}}class p extends i{constructor(e,t){super(),this.address=e,this.delta=t,this.attribute_map={address:"address",delta:"delta"}}}class h extends i{constructor(e,t){super(),this.id=e,this.params=t,this.attribute_map={id:"id",params:"params"}}}class f extends i{constructor(e,t,r){super(),this.id=e,this.schema=t,this.keyValue=r,this.attribute_map={id:"id",schema:"schema",keyValue:"key-value"}}}class d extends i{constructor({approvalProgram:e,clearStateProgram:t,creator:r,extraProgramPages:n,globalState:o,globalStateSchema:i,localStateSchema:a}){super(),this.approvalProgram="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.clearStateProgram="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.creator=r,this.extraProgramPages=n,this.globalState=o,this.globalStateSchema=i,this.localStateSchema=a,this.attribute_map={approvalProgram:"approval-program",clearStateProgram:"clear-state-program",creator:"creator",extraProgramPages:"extra-program-pages",globalState:"global-state",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema"}}}class g extends i{constructor(e,t){super(),this.numUint=e,this.numByteSlice=t,this.attribute_map={numUint:"num-uint",numByteSlice:"num-byte-slice"}}}class y extends i{constructor(e,t){super(),this.index=e,this.params=t,this.attribute_map={index:"index",params:"params"}}}class m extends i{constructor(e,t,r){super(),this.amount=e,this.assetId=t,this.isFrozen=r,this.attribute_map={amount:"amount",assetId:"asset-id",isFrozen:"is-frozen"}}}class b extends i{constructor({creator:e,decimals:t,total:r,clawback:n,defaultFrozen:o,freeze:i,manager:a,metadataHash:c,name:u,nameB64:l,reserve:p,unitName:h,unitNameB64:f,url:d,urlB64:g}){super(),this.creator=e,this.decimals=t,this.total=r,this.clawback=n,this.defaultFrozen=o,this.freeze=i,this.manager=a,this.metadataHash="string"==typeof c?new Uint8Array(s.from(c,"base64")):c,this.name=u,this.nameB64="string"==typeof l?new Uint8Array(s.from(l,"base64")):l,this.reserve=p,this.unitName=h,this.unitNameB64="string"==typeof f?new Uint8Array(s.from(f,"base64")):f,this.url=d,this.urlB64="string"==typeof g?new Uint8Array(s.from(g,"base64")):g,this.attribute_map={creator:"creator",decimals:"decimals",total:"total",clawback:"clawback",defaultFrozen:"default-frozen",freeze:"freeze",manager:"manager",metadataHash:"metadata-hash",name:"name",nameB64:"name-b64",reserve:"reserve",unitName:"unit-name",unitNameB64:"unit-name-b64",url:"url",urlB64:"url-b64"}}}class w extends i{constructor(e,t){super(),this.block=e,this.cert=t,this.attribute_map={block:"block",cert:"cert"}}}class v extends i{constructor({branch:e,buildNumber:t,channel:r,commitHash:n,major:o,minor:i}){super(),this.branch=e,this.buildNumber=t,this.channel=r,this.commitHash=n,this.major=o,this.minor=i,this.attribute_map={branch:"branch",buildNumber:"build_number",channel:"channel",commitHash:"commit_hash",major:"major",minor:"minor"}}}class A extends i{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class x extends i{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class S extends i{constructor(e,t,r){super(),this.hash=e,this.result=t,this.sourcemap=r,this.attribute_map={hash:"hash",result:"result",sourcemap:"sourcemap"}}}class _ extends i{constructor(e){super(),this.result=e,this.attribute_map={result:"result"}}}class E extends i{constructor({accounts:e,apps:t,latestTimestamp:r,protocolVersion:n,round:o,sources:i,txns:s}){super(),this.accounts=e,this.apps=t,this.latestTimestamp=r,this.protocolVersion=n,this.round=o,this.sources=i,this.txns=s,this.attribute_map={accounts:"accounts",apps:"apps",latestTimestamp:"latest-timestamp",protocolVersion:"protocol-version",round:"round",sources:"sources",txns:"txns"}}}class T extends i{constructor(e,t,r){super(),this.error=e,this.protocolVersion=t,this.txns=r,this.attribute_map={error:"error",protocolVersion:"protocol-version",txns:"txns"}}}class B extends i{constructor(e,t,r,n){super(),this.fieldName=e,this.source=t,this.txnIndex=r,this.appIndex=n,this.attribute_map={fieldName:"field-name",source:"source",txnIndex:"txn-index",appIndex:"app-index"}}}class k extends i{constructor({line:e,pc:t,stack:r,error:n,scratch:o}){super(),this.line=e,this.pc=t,this.stack=r,this.error=n,this.scratch=o,this.attribute_map={line:"line",pc:"pc",stack:"stack",error:"error",scratch:"scratch"}}}class U extends i{constructor({disassembly:e,appCallMessages:t,appCallTrace:r,budgetAdded:n,budgetConsumed:o,cost:i,globalDelta:s,localDeltas:a,logicSigDisassembly:c,logicSigMessages:u,logicSigTrace:l,logs:p}){super(),this.disassembly=e,this.appCallMessages=t,this.appCallTrace=r,this.budgetAdded=n,this.budgetConsumed=o,this.cost=i,this.globalDelta=s,this.localDeltas=a,this.logicSigDisassembly=c,this.logicSigMessages=u,this.logicSigTrace=l,this.logs=p,this.attribute_map={disassembly:"disassembly",appCallMessages:"app-call-messages",appCallTrace:"app-call-trace",budgetAdded:"budget-added",budgetConsumed:"budget-consumed",cost:"cost",globalDelta:"global-delta",localDeltas:"local-deltas",logicSigDisassembly:"logic-sig-disassembly",logicSigMessages:"logic-sig-messages",logicSigTrace:"logic-sig-trace",logs:"logs"}}}class I extends i{constructor(e,t){super(),this.message=e,this.data=t,this.attribute_map={message:"message",data:"data"}}}class C extends i{constructor(e,t,r){super(),this.action=e,this.bytes=t,this.uint=r,this.attribute_map={action:"action",bytes:"bytes",uint:"uint"}}}class R extends i{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class O extends i{constructor({catchupTime:e,lastRound:t,lastVersion:r,nextVersion:n,nextVersionRound:o,nextVersionSupported:i,stoppedAtUnsupportedRound:s,timeSinceLastRound:a,catchpoint:c,catchpointAcquiredBlocks:u,catchpointProcessedAccounts:l,catchpointTotalAccounts:p,catchpointTotalBlocks:h,catchpointVerifiedAccounts:f,lastCatchpoint:d}){super(),this.catchupTime=e,this.lastRound=t,this.lastVersion=r,this.nextVersion=n,this.nextVersionRound=o,this.nextVersionSupported=i,this.stoppedAtUnsupportedRound=s,this.timeSinceLastRound=a,this.catchpoint=c,this.catchpointAcquiredBlocks=u,this.catchpointProcessedAccounts=l,this.catchpointTotalAccounts=p,this.catchpointTotalBlocks=h,this.catchpointVerifiedAccounts=f,this.lastCatchpoint=d,this.attribute_map={catchupTime:"catchup-time",lastRound:"last-round",lastVersion:"last-version",nextVersion:"next-version",nextVersionRound:"next-version-round",nextVersionSupported:"next-version-supported",stoppedAtUnsupportedRound:"stopped-at-unsupported-round",timeSinceLastRound:"time-since-last-round",catchpoint:"catchpoint",catchpointAcquiredBlocks:"catchpoint-acquired-blocks",catchpointProcessedAccounts:"catchpoint-processed-accounts",catchpointTotalAccounts:"catchpoint-total-accounts",catchpointTotalBlocks:"catchpoint-total-blocks",catchpointVerifiedAccounts:"catchpoint-verified-accounts",lastCatchpoint:"last-catchpoint"}}}class D extends i{constructor({poolError:e,txn:t,applicationIndex:r,assetClosingAmount:n,assetIndex:o,closeRewards:i,closingAmount:s,confirmedRound:a,globalStateDelta:c,innerTxns:u,localStateDelta:l,logs:p,receiverRewards:h,senderRewards:f}){super(),this.poolError=e,this.txn=t,this.applicationIndex=r,this.assetClosingAmount=n,this.assetIndex=o,this.closeRewards=i,this.closingAmount=s,this.confirmedRound=a,this.globalStateDelta=c,this.innerTxns=u,this.localStateDelta=l,this.logs=p,this.receiverRewards=h,this.senderRewards=f,this.attribute_map={poolError:"pool-error",txn:"txn",applicationIndex:"application-index",assetClosingAmount:"asset-closing-amount",assetIndex:"asset-index",closeRewards:"close-rewards",closingAmount:"closing-amount",confirmedRound:"confirmed-round",globalStateDelta:"global-state-delta",innerTxns:"inner-txns",localStateDelta:"local-state-delta",logs:"logs",receiverRewards:"receiver-rewards",senderRewards:"sender-rewards"}}}class N extends i{constructor(e,t){super(),this.topTransactions=e,this.totalTransactions=t,this.attribute_map={topTransactions:"top-transactions",totalTransactions:"total-transactions"}}}class P extends i{constructor(e){super(),this.txid=e,this.attribute_map={txid:"txId"}}}class L extends i{constructor({idx:e,proof:t,stibhash:r,treedepth:n,hashtype:o}){super(),this.idx=e,this.proof="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.stibhash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.treedepth=n,this.hashtype=o,this.attribute_map={idx:"idx",proof:"proof",stibhash:"stibhash",treedepth:"treedepth",hashtype:"hashtype"}}}class j extends i{constructor(e,t,r){super(),this.currentRound=e,this.onlineMoney=t,this.totalMoney=r,this.attribute_map={currentRound:"current_round",onlineMoney:"online-money",totalMoney:"total-money"}}}class z extends i{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class F extends i{constructor(e,t,r){super(),this.type=e,this.bytes=t,this.uint=r,this.attribute_map={type:"type",bytes:"bytes",uint:"uint"}}}class M extends i{constructor({consensusVersion:e,fee:t,genesisHash:r,genesisId:n,lastRound:o,minFee:i}){super(),this.consensusVersion=e,this.fee=t,this.genesisHash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.genesisId=n,this.lastRound=o,this.minFee=i,this.attribute_map={consensusVersion:"consensus-version",fee:"fee",genesisHash:"genesis-hash",genesisId:"genesis-id",lastRound:"last-round",minFee:"min-fee"}}}class H extends i{constructor(e,t,r,n){super(),this.build=e,this.genesisHashB64="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.genesisId=r,this.versions=n,this.attribute_map={build:"build",genesisHashB64:"genesis_hash_b64",genesisId:"genesis_id",versions:"versions"}}}},5180:(e,t,r)=>{"use strict";r.r(t),r.d(t,{setSendTransactionHeaders:()=>s,default:()=>c});var n=r(8680),o=r(413),i=r(2486).Buffer;function s(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="application/x-binary"),t}function a(e){return e&&void 0!==e.byteLength}class c extends n.Z{constructor(e,t){super(e);let r=t;if(Array.isArray(t)){if(!t.every(a))throw new TypeError("Array elements must be byte arrays");r=(0,o.concatArrays)(...t)}else if(!a(r))throw new TypeError("Argument must be byte array");this.txnBytesToPost=r}path(){return"/v2/transactions"}async do(e={}){const t=s(e);return(await this.c.post(this.path(),i.from(this.txnBytesToPost),t)).body}}},9582:(e,t,r)=>{"use strict";r.d(t,{Z:()=>E});var n=r(3480),o=r(8680);class i extends o.Z{path(){return"/health"}}class s extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/balances`}limit(e){return this.query.limit=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}var a=r(2486).Buffer;function c(e){return"string"==typeof e?e:a.from(e).toString("base64")}class u extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class l extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class p extends o.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/blocks/${this.round}`}}class h extends o.Z{constructor(e,t,r){super(e,t),this.txID=r,this.txID=r}path(){return`/v2/transactions/${this.txID}`}}class f extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}round(e){return this.query.round=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class d extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetId(e){return this.query["asset-id"]=e,this}}class g extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetID(e){return this.query["asset-id"]=e,this}}class y extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/apps-local-state`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class m extends o.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-applications`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class b extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class w extends o.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class v extends o.Z{constructor(e,t,r){super(e,t),this.appID=r,this.appID=r}path(){return`/v2/applications/${this.appID}/logs`}limit(e){return this.query.limit=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}nextToken(e){return this.query.next=e,this}sender(e){return this.query["sender-address"]=e,this}txid(e){return this.query.txid=e,this}}class A extends o.Z{path(){return"/v2/accounts"}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}limit(e){return this.query.limit=e,this}assetID(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}round(e){return this.query.round=e,this}authAddr(e){return this.query["auth-addr"]=e,this}applicationID(e){return this.query["application-id"]=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class x extends o.Z{path(){return"/v2/transactions"}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class S extends o.Z{path(){return"/v2/assets"}limit(e){return this.query.limit=e,this}creator(e){return this.query.creator=e,this}name(e){return this.query.name=e,this}unit(e){return this.query.unit=e,this}index(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class _ extends o.Z{path(){return"/v2/applications"}index(e){return this.query["application-id"]=e,this}creator(e){return this.query.creator=e,this}nextToken(e){return this.query.next=e,this}limit(e){return this.query.limit=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class E extends n.Z{constructor(e,t="http://127.0.0.1",r=8080,n={}){super("X-Indexer-API-Token",e,t,r,n)}makeHealthCheck(){return new i(this.c,this.intDecoding)}lookupAssetBalances(e){return new s(this.c,this.intDecoding,e)}lookupAssetTransactions(e){return new l(this.c,this.intDecoding,e)}lookupAccountTransactions(e){return new u(this.c,this.intDecoding,e)}lookupBlock(e){return new p(this.c,this.intDecoding,e)}lookupTransactionByID(e){return new h(this.c,this.intDecoding,e)}lookupAccountByID(e){return new f(this.c,this.intDecoding,e)}lookupAccountAssets(e){return new d(this.c,this.intDecoding,e)}lookupAccountCreatedAssets(e){return new g(this.c,this.intDecoding,e)}lookupAccountAppLocalStates(e){return new y(this.c,this.intDecoding,e)}lookupAccountCreatedApplications(e){return new m(this.c,this.intDecoding,e)}lookupAssetByID(e){return new b(this.c,this.intDecoding,e)}lookupApplications(e){return new w(this.c,this.intDecoding,e)}lookupApplicationLogs(e){return new v(this.c,this.intDecoding,e)}searchAccounts(){return new A(this.c,this.intDecoding)}searchForTransactions(){return new x(this.c,this.intDecoding)}searchForAssets(){return new S(this.c,this.intDecoding)}searchForApplications(){return new _(this.c,this.intDecoding)}}},8680:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(7197);class o{constructor(e,t){this.c=e,this.query={},this.intDecoding=t||n.Z.DEFAULT}prepare(e){return e}async do(e={}){const t={};"default"!==this.intDecoding&&(t.intDecoding=this.intDecoding);const r=await this.c.get(this.path(),this.query,e,t);return this.prepare(r.body)}setIntDecoding(e){if("default"!==e&&"safe"!==e&&"mixed"!==e&&"bigint"!==e)throw new Error(`Invalid method for int decoding: ${e}`);return this.intDecoding=e,this}}},3480:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(1113),o=r(7197);class i{constructor(e,t,r,i,s={}){if("function"==typeof t.get)this.c=new n.default(t);else{let o;o="string"==typeof t?function(e="",t){const r={};return r[t]=e,r}(t,e):t,this.c=new n.default(o,r,i,s)}this.intDecoding=o.Z.DEFAULT}setIntEncoding(e){this.intDecoding=e}getIntEncoding(){return this.intDecoding}}},3458:(e,t,r)=>{"use strict";r.d(t,{b:()=>h,A:()=>d});var n=r(7677),o=r(9417),i=r(1988),s=r(1063),a=r(5062),c=r(834),u=r(1624),l=r(2486).Buffer;const p=l.from([21,31,124,117]);var h;function f(e,t,r){if(null!=r&&e===r)return 0;const n=null==r?0:1;for(let r=0;r<t.length;r++)if(e===t[r])return r+n;return t.push(e),t.length-1+n}!function(e){e[e.BUILDING=0]="BUILDING",e[e.BUILT=1]="BUILT",e[e.SIGNED=2]="SIGNED",e[e.SUBMITTED=3]="SUBMITTED",e[e.COMMITTED=4]="COMMITTED"}(h||(h={}));class d{constructor(){this.status=h.BUILDING,this.transactions=[],this.methodCalls=new Map,this.signedTxns=[],this.txIDs=[]}getStatus(){return this.status}count(){return this.transactions.length}clone(){const e=new d;return e.transactions=this.transactions.map((({txn:e,signer:t})=>({txn:o.Transaction.from_obj_for_encoding({...e.get_obj_for_encoding(),grp:void 0}),signer:t}))),e.methodCalls=new Map(this.methodCalls),e}addTransaction(e){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length===d.MAX_GROUP_SIZE)throw new Error(`Adding an additional transaction exceeds the maximum atomic group size of ${d.MAX_GROUP_SIZE}`);if(e.txn.group&&e.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");this.transactions.push(e)}addMethodCall({appID:e,method:t,methodArgs:r,sender:o,suggestedParams:s,onComplete:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:y,numLocalInts:m,numLocalByteSlices:b,extraPages:w,note:v,lease:A,rekeyTo:x,signer:S}){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length+t.txnCount()>d.MAX_GROUP_SIZE)throw new Error(`Adding additional transactions exceeds the maximum atomic group size of ${d.MAX_GROUP_SIZE}`);if(0===e){if(null==l||null==p||null==g||null==y||null==m||null==b)throw new Error("One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices")}else if(a===u.hq.UpdateApplicationOC){if(null==l||null==p)throw new Error("One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram");if(null!=g||null!=y||null!=m||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages")}else if(null!=l||null!=p||null!=g||null!=y||null!=m||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");if(null==r&&(r=[]),r.length!==t.args.length)throw new Error(`Incorrect number of method arguments. Expected ${t.args.length}, got ${r.length}`);let _=[],E=[];const T=[],B=[],k=[],U=new Map;for(let e=0;e<r.length;e++){let o=t.args[e].type;const i=r[e];if((0,n.AE)(o)){if(!(0,c.Xw)(i)||!(0,n.vJ)(o,i.txn))throw new Error(`Expected ${o} transaction for argument at index ${e}`);if(i.txn.group&&i.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");T.push(i)}else{if((0,c.Xw)(i))throw new Error(`Expected non-transaction value for argument at index ${e}`);if((0,n.o5)(o)&&(U.set(B.length,_.length),B.push(o),k.push(i),o=new n.Pu(8)),"string"==typeof o)throw new Error(`Unknown ABI type: ${o}`);_.push(o),E.push(i)}}const I=[],C=[],R=[],O=[];for(let t=0;t<B.length;t++){const r=B[t],i=k[t];let s=0;switch(r){case n.UV.account:{const e=new n.JQ;s=f(e.decode(e.encode(i)),C,o);break}case n.UV.application:{const t=new n.Pu(64),r=t.decode(t.encode(i));if(r>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for application value, got ${r}`);s=f(Number(r),R,e);break}case n.UV.asset:{const e=new n.Pu(64),t=e.decode(e.encode(i));if(t>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for asset value, got ${t}`);s=f(Number(t),O);break}default:throw new Error(`Unknown reference type: ${r}`)}I.push(s)}for(let e=0;e<I.length;e++)E[U.get(e)]=I[e];if(_.length>15){const e=_.slice(14),t=E.slice(14);_=_.slice(0,14),E=E.slice(0,14),_.push(new n.w1(e)),E.push(t)}const D=[t.getSelector()];for(let e=0;e<_.length;e++)D.push(_[e].encode(E[e]));const N={txn:(0,i.makeApplicationCallTxnFromObject)({from:o,appIndex:e,appArgs:D,accounts:C,foreignApps:R,foreignAssets:O,onComplete:null==a?u.hq.NoOpOC:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:y,numLocalInts:m,numLocalByteSlices:b,extraPages:w,lease:A,note:v,rekeyTo:x,suggestedParams:s}),signer:S};this.transactions.push(...T,N),this.methodCalls.set(this.transactions.length-1,t)}buildGroup(){if(this.status===h.BUILDING){if(0===this.transactions.length)throw new Error("Cannot build a group with 0 transactions");this.transactions.length>1&&(0,s.assignGroupID)(this.transactions.map((e=>e.txn))),this.status=h.BUILT}return this.transactions}async gatherSignatures(){if(this.status>=h.SIGNED)return this.signedTxns;const e=this.buildGroup(),t=e.map((e=>e.txn)),r=new Map;for(let t=0;t<e.length;t++){const{signer:n}=e[t];r.has(n)||r.set(n,[]),r.get(n).push(t)}const n=Array.from(r),i=await Promise.all(n.map((([e,r])=>e(t,r)))),s=e.map((()=>null));for(let e=0;e<n.length;e++){const t=n[e][1],r=i[e];for(let e=0;e<t.length;e++)s[t[e]]=r[e]}if(!s.every((e=>null!=e)))throw new Error(`Missing signatures. Got ${s}`);const a=s.map(((e,t)=>{try{return(0,o.decodeSignedTransaction)(e).txn.txID()}catch(e){throw new Error(`Cannot decode signed transaction at index ${t}. ${e}`)}}));return this.signedTxns=s,this.txIDs=a,this.status=h.SIGNED,s}async submit(e){if(this.status>h.SUBMITTED)throw new Error("Transaction group cannot be resubmitted");const t=await this.gatherSignatures();return await e.sendRawTransaction(t).do(),this.status=h.SUBMITTED,this.txIDs}async execute(e,t){if(this.status===h.COMMITTED)throw new Error("Transaction group has already been executed successfully");const r=await this.submit(e);this.status=h.SUBMITTED;const n=this.transactions.findIndex(((e,t)=>this.methodCalls.has(t))),o=-1===n?0:n,i=await(0,a.K)(e,r[o],t);this.status=h.COMMITTED;const s=i["confirmed-round"],c=[];for(const[t,o]of this.methodCalls){const s=r[t],a={txID:s,rawReturnValue:new Uint8Array,method:o};try{const r=t===n?i:await e.pendingTransactionInformation(s).do();if(a.txInfo=r,"void"!==o.returns.type){const e=r.logs||[];if(0===e.length)throw new Error("App call transaction did not log a return value");const t=l.from(e[e.length-1],"base64");if(t.byteLength<4||!t.slice(0,4).equals(p))throw new Error("App call transaction did not log a return value");a.rawReturnValue=new Uint8Array(t.slice(4)),a.returnValue=o.returns.type.decode(a.rawReturnValue)}}catch(e){a.decodeError=e}c.push(a)}return{confirmedRound:s,txIDs:r,methodResults:c}}}d.MAX_GROUP_SIZE=16},9070:(e,t,r)=>{"use strict";r.d(t,{rD:()=>o,_:()=>i,HN:()=>s});const n=1e6,o="Microalgos should be positive and less than 2^53 - 1.";function i(e){if(e<0||!Number.isSafeInteger(e))throw new Error(o);return e/n}function s(e){const t=e*n;return Math.round(t)}},4383:(e,t,r)=>{"use strict";r.d(t,{P:()=>c,x:()=>y});var n=r(227),o=r(1824),i=r(7116),s=r(2486).Buffer;function a(e){return e.params["approval-program"]=s.from(e.params["approval-program"].toString(),"base64"),e.params["clear-state-program"]=s.from(e.params["clear-state-program"].toString(),"base64"),e}async function c({client:e,txns:t,protocolVersion:r,latestTimestamp:s,round:c,sources:u}){const l=[],p=[],h=[],f=[],d=[];for(const e of t)e.txn.type===o.i.appl&&(d.push((0,i.encodeAddress)(e.txn.from.publicKey)),e.txn.appAccounts&&d.push(...e.txn.appAccounts.map((e=>(0,i.encodeAddress)(e.publicKey)))),e.txn.appForeignApps&&(h.push(...e.txn.appForeignApps),d.push(...e.txn.appForeignApps.map((e=>(0,i.getApplicationAddress)(e))))),e.txn.appForeignAssets&&f.push(...e.txn.appForeignAssets),void 0===e.txn.appIndex||0===e.txn.appIndex?l.push(new n.Application(1380011588,new n.ApplicationParams({creator:(0,i.encodeAddress)(e.txn.from.publicKey),approvalProgram:e.txn.appApprovalProgram,clearStateProgram:e.txn.appClearProgram,localStateSchema:new n.ApplicationStateSchema(e.txn.appLocalInts,e.txn.appLocalByteSlices),globalStateSchema:new n.ApplicationStateSchema(e.txn.appGlobalInts,e.txn.appGlobalByteSlices)}))):(h.push(e.txn.appIndex),d.push((0,i.getApplicationAddress)(e.txn.appIndex))));const g=[];for(const t of[...new Set(f)])g.push(e.getAssetByID(t).do().then((e=>{d.push(e.params.creator)})));await Promise.all(g);const y=[];for(const t of[...new Set(h)])y.push(e.getApplicationByID(t).do().then((e=>{const t=a(e);l.push(t),d.push(t.params.creator)})));await Promise.all(y);const m=[];for(const t of[...new Set(d)])m.push(e.accountInformation(t).do().then((e=>{"created-apps"in e&&(e["created-apps"]=e["created-apps"].map((e=>a(e)))),p.push(e)})));return await Promise.all(m),new n.DryrunRequest({txns:t.map((e=>({...e,txn:e.txn.get_obj_for_encoding()}))),accounts:p,apps:l,latestTimestamp:s,round:c,protocolVersion:r,sources:u})}class u{constructor(e){this.type=0,this.bytes="",this.uint=0,this.type=e.type,this.bytes=e.bytes,this.uint=e.uint}toString(){return 1===this.type?`0x${s.from(this.bytes,"base64").toString("hex")}`:this.uint.toString()}}class l{constructor(e){this.error="",this.line=0,this.pc=0,this.scratch=[],this.stack=[],this.error=void 0===e.error?"":e.error,this.line=e.line,this.pc=e.pc,this.scratch=e.scratch,this.stack=e.stack.map((e=>new u(e)))}}class p{constructor(e){this.trace=[],void 0!==e&&(this.trace=e.map((e=>new l(e))))}}function h(e,t){return e.length>t&&t>0?`${e.slice(0,t)}...`:e}function f(e,t){if(0===t.length)return"";let r=null;for(let n=0;n<t.length;n++)(n>e.length||JSON.stringify(e[n])!==JSON.stringify(t[n]))&&(r=n);if(null==r)return"";const n=t[r];return n.bytes.length>0?`${r} = 0x${s.from(n.bytes,"base64").toString("hex")}`:`${r} = ${n.uint.toString()}`}function d(e,t){return`[${(t?e.reverse():e).map((e=>{switch(e.type){case 1:return`0x${s.from(e.bytes,"base64").toString("hex")}`;case 2:return`${e.uint.toString()}`;default:return""}})).join(", ")}]`}class g{constructor(e){this.disassembly=[],this.appCallMessages=[],this.localDeltas=[],this.globalDelta=[],this.cost=0,this.logicSigMessages=[],this.logicSigDisassembly=[],this.logs=[],this.appCallTrace=void 0,this.logicSigTrace=void 0,this.required=["disassembly"],this.optionals=["app-call-messages","local-deltas","global-delta","cost","logic-sig-messages","logic-sig-disassembly","logs"],this.traces=["app-call-trace","logic-sig-trace"],this.disassembly=e.disassembly,this.appCallMessages=e["app-call-messages"],this.localDeltas=e["local-deltas"],this.globalDelta=e["global-delta"],this.cost=e.cost,this.logicSigMessages=e["logic-sig-messages"],this.logicSigDisassembly=e["logic-sig-disassembly"],this.logs=e.logs,this.appCallTrace=new p(e["app-call-trace"]),this.logicSigTrace=new p(e["logic-sig-trace"])}appCallRejected(){return void 0!==this.appCallMessages&&this.appCallMessages.includes("REJECT")}logicSigRejected(){return void 0!==this.logicSigMessages&&this.logicSigMessages.includes("REJECT")}static trace(e,t,r){const n=r.maxValueWidth||30,o=[["pc#","ln#","source","scratch","stack"]];for(let i=0;i<e.trace.length;i++){const{line:s,error:a,pc:c,scratch:u,stack:l}=e.trace[i],p=void 0!==u?u:[],g=i>0&&void 0!==e.trace[i-1].scratch?e.trace[i-1].scratch:[],y=""===a?t[s]:`!! ${a} !!`;o.push([c.toString().padEnd(3," "),s.toString().padEnd(3," "),h(y,n),h(f(g,p),n),h(d(l,r.topOfStackFirst),n)])}const i=o.reduce(((e,t)=>{const r=new Array(o[0].length).fill(0);for(let n=0;n<e.length;n++)r[n]=t[n].length>e[n]?t[n].length:e[n];return r}),new Array(o[0].length).fill(0));return`${o.map((e=>e.map(((e,t)=>e.padEnd(i[t]+1," "))).join("|").trim())).join("\n")}\n`}appTrace(e){if(void 0===this.appCallTrace||!this.disassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!1}),g.trace(this.appCallTrace,this.disassembly,t)}lsigTrace(e){if(void 0===this.logicSigTrace||void 0===this.logicSigDisassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!0}),g.trace(this.logicSigTrace,this.logicSigDisassembly,t)}}class y{constructor(e){this.error="",this.protocolVersion="",this.txns=[],this.error=e.error,this.protocolVersion=e["protocol-version"],this.txns=e.txns.map((e=>new g(e)))}}},7116:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_ZERO_ADDRESS_STRING:()=>u,MALFORMED_ADDRESS_ERROR_MSG:()=>h,CHECKSUM_ADDRESS_ERROR_MSG:()=>f,INVALID_MSIG_VERSION_ERROR_MSG:()=>d,INVALID_MSIG_THRESHOLD_ERROR_MSG:()=>g,INVALID_MSIG_PK_ERROR_MSG:()=>y,UNEXPECTED_PK_LEN_ERROR_MSG:()=>m,decodeAddress:()=>b,isValidAddress:()=>w,encodeAddress:()=>v,fromMultisigPreImg:()=>A,fromMultisigPreImgAddrs:()=>x,getApplicationAddress:()=>S});var n=r(7267),o=r.n(n),i=r(9404),s=r(413),a=r(6963),c=r(2486).Buffer;const u="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",l=new Uint8Array([77,117,108,116,105,115,105,103,65,100,100,114]),p=c.from("appID"),h="address seems to be malformed",f="wrong checksum for address",d="invalid multisig version",g="bad multisig threshold",y="bad multisig public key - wrong length",m="nacl public key length is not 32 bytes";function b(e){if("string"!=typeof e||58!==e.length)throw new Error(h);const t=o().decode.asBytes(e.toString());if(36!==t.length)throw new Error(h);const r=new Uint8Array(t.slice(0,32)),n=new Uint8Array(t.slice(i.PUBLIC_KEY_LENGTH,36)),a=i.genericHash(r).slice(i.HASH_BYTES_LENGTH-4,i.HASH_BYTES_LENGTH);if(!s.arrayEqual(a,n))throw new Error(f);return{publicKey:r,checksum:n}}function w(e){try{b(e)}catch(e){return!1}return!0}function v(e){const t=i.genericHash(e).slice(i.PUBLIC_KEY_LENGTH-4,i.PUBLIC_KEY_LENGTH);return o().encode(s.concatArrays(e,t)).toString().slice(0,58)}function A({version:e,threshold:t,pks:r}){if(1!==e||e>255||e<0)throw new Error(d);if(0===t||0===r.length||t>r.length||t>255)throw new Error(g);if(32!==i.PUBLIC_KEY_LENGTH)throw new Error(m);const n=new Uint8Array(l.length+2+32*r.length);n.set(l,0),n.set([e],l.length),n.set([t],l.length+1);for(let e=0;e<r.length;e++){if(32!==r[e].length)throw new Error(y);n.set(r[e],l.length+2+32*e)}return new Uint8Array(i.genericHash(n))}function x({version:e,threshold:t,addrs:r}){return v(A({version:e,threshold:t,pks:r.map((e=>b(e).publicKey))}))}function S(e){const t=s.concatArrays(p,(0,a.T)(e)),r=i.genericHash(t);return v(new Uint8Array(r))}},8922:(e,t,r)=>{"use strict";r.d(t,{j:()=>o,v:()=>i});var n=r(2486).Buffer;function o(e,t){let r=e.toString(16);r.length!==2*t&&(r=r.padStart(2*t,"0"));const n=new Uint8Array(r.length/2);for(let e=0,t=0;e<r.length/2;e++,t+=2)n[e]=parseInt(r.slice(t,t+2),16);return n}function i(e){let t=BigInt(0);const r=n.from(e);for(let n=0;n<e.length;n++)t=BigInt(Number(r.readUIntBE(n,1)))+t*BigInt(256);return t}},3033:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ERROR_CONTAINS_EMPTY_STRING:()=>o,encode:()=>i,decode:()=>s});var n=r(5406);const o="The object contains empty or 0 values. First empty or 0 value encountered during encoding: ";function i(e){const t=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&(!e[t]||0===e[t].length))return{containsEmpty:!0,firstEmptyKey:t};return{containsEmpty:!1,firstEmptyKey:void 0}}(e);if(t.containsEmpty)throw new Error(o+t.firstEmptyKey);return n.encode(e,{sortKeys:!0})}function s(e){return n.decode(e)}},6963:(e,t,r)=>{"use strict";r.d(t,{T:()=>o,u:()=>i});var n=r(2486).Buffer;function o(e){if("bigint"!=typeof e&&!Number.isInteger(e)||e<0||e>BigInt("0xffffffffffffffff"))throw new Error("Input is not a 64-bit unsigned integer");const t=n.allocUnsafe(8);return t.writeBigUInt64BE(BigInt(e)),new Uint8Array(t)}function i(e,t="safe"){if("safe"!==t&&"mixed"!==t&&"bigint"!==t)throw new Error(`Unknown decodingMode option: ${t}`);if(0===e.byteLength||e.byteLength>8)throw new Error(`Data has unacceptable length. Expected length is between 1 and 8, got ${e.byteLength}`);const r=n.allocUnsafe(8-e.byteLength);r.fill(0);const o=n.concat([r,n.from(e)]).readBigUInt64BE(),i=o>Number.MAX_SAFE_INTEGER;if("safe"===t){if(i)throw new Error(`Integer exceeds maximum safe integer: ${o.toString()}. Try decoding with "mixed" or "safe" decodingMode.`);return Number(o)}return"mixed"!==t||i?o:Number(o)}},1063:(e,t,r)=>{"use strict";r.r(t),r.d(t,{TxGroup:()=>u,computeGroupID:()=>l,assignGroupID:()=>p,default:()=>h});var n=r(9417),o=r(9404),i=r(3033),s=r(7116),a=r(413),c=r(2486).Buffer;class u{constructor(e){if(this.name="Transaction group",this.tag=c.from("TG"),e.length>16){const t=`${e.length.toString()} transactions grouped together but max group size is ${16..toString()}`;throw Error(t)}this.txGroupHashes=e}get_obj_for_encoding(){return{txlist:this.txGroupHashes}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);t.name="Transaction group",t.tag=c.from("TG"),t.txGroupHashes=[];for(const r of e.txlist)t.txGroupHashes.push(c.from(r));return t}toByte(){return i.encode(this.get_obj_for_encoding())}}function l(e){const t=[];for(const r of e){const e=n.instantiateTxnIfNeeded(r);t.push(e.rawTxID())}const r=new u(t),i=r.toByte(),s=c.from(a.concatArrays(r.tag,i)),l=o.genericHash(s);return c.from(l)}function p(e,t){const r=l(e),o=[];for(const i of e){const e=n.instantiateTxnIfNeeded(i);t&&s.encodeAddress(e.from.publicKey)!==t||(e.group=r,o.push(e))}return o}const h=u},5583:(e,t,r)=>{"use strict";r.r(t),r.d(t,{checkByteConstBlock:()=>f,checkIntConstBlock:()=>h,checkProgram:()=>p,checkPushByteOp:()=>g,checkPushIntOp:()=>d,langspecEvalMaxVersion:()=>y,langspecLogicSigVersion:()=>m,parseUvarint:()=>i,readProgram:()=>l});const n=JSON.parse('{"z_":6,"BV":5,"AP":[{"Opcode":0,"Name":"err","Cost":1,"Size":1,"Doc":"Fail immediately.","Groups":["Flow Control"]},{"Opcode":1,"Name":"sha256","Args":"B","Returns":"B","Cost":35,"Size":1,"Doc":"SHA256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":2,"Name":"keccak256","Args":"B","Returns":"B","Cost":130,"Size":1,"Doc":"Keccak256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":3,"Name":"sha512_256","Args":"B","Returns":"B","Cost":45,"Size":1,"Doc":"SHA512_256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":4,"Name":"ed25519verify","Args":"BBB","Returns":"U","Cost":1900,"Size":1,"Doc":"for (data A, signature B, pubkey C) verify the signature of (\\"ProgData\\" || program_hash || data) against the pubkey => {0 or 1}","DocExtra":"The 32 byte public key is the last element on the stack, preceded by the 64 byte signature at the second-to-last element on the stack, preceded by the data which was signed at the third-to-last element on the stack.","Groups":["Arithmetic"]},{"Opcode":5,"Name":"ecdsa_verify","Args":"BBBBB","Returns":"U","Cost":1700,"Size":2,"Doc":"for (data A, signature B, C and pubkey D, E) verify the signature of the data against the pubkey => {0 or 1}","DocExtra":"The 32 byte Y-component of a public key is the last element on the stack, preceded by X-component of a pubkey, preceded by S and R components of a signature, preceded by the data that is fifth element on the stack. All values are big-endian encoded. The signed data must be 32 bytes long, and signatures in lower-S form are only accepted.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":6,"Name":"ecdsa_pk_decompress","Args":"B","Returns":"BB","Cost":650,"Size":2,"Doc":"decompress pubkey A into components X, Y","DocExtra":"The 33 byte public key in a compressed form to be decompressed into X and Y (top) components. All values are big-endian encoded.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":7,"Name":"ecdsa_pk_recover","Args":"BUBB","Returns":"BB","Cost":2000,"Size":2,"Doc":"for (data A, recovery id B, signature C, D) recover a public key","DocExtra":"S (top) and R elements of a signature, recovery id and data (bottom) are expected on the stack and used to deriver a public key. All values are big-endian encoded. The signed data must be 32 bytes long.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":8,"Name":"+","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A plus B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `addw`.","Groups":["Arithmetic"]},{"Opcode":9,"Name":"-","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A minus B. Fail if B > A.","Groups":["Arithmetic"]},{"Opcode":10,"Name":"/","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by B (truncated division). Fail if B == 0.","DocExtra":"`divmodw` is available to divide the two-element values produced by `mulw` and `addw`.","Groups":["Arithmetic"]},{"Opcode":11,"Name":"*","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `mulw`.","Groups":["Arithmetic"]},{"Opcode":12,"Name":"<","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":13,"Name":">","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":14,"Name":"<=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":15,"Name":">=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":16,"Name":"&&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero and B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":17,"Name":"||","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero or B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":18,"Name":"==","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":19,"Name":"!=","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is not equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":20,"Name":"!","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"A == 0 yields 1; else 0","Groups":["Arithmetic"]},{"Opcode":21,"Name":"len","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"yields length of byte value A","Groups":["Arithmetic"]},{"Opcode":22,"Name":"itob","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"converts uint64 A to big endian bytes","Groups":["Arithmetic"]},{"Opcode":23,"Name":"btoi","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"converts bytes A as big endian to uint64","DocExtra":"`btoi` fails if the input is longer than 8 bytes.","Groups":["Arithmetic"]},{"Opcode":24,"Name":"%","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A modulo B. Fail if B == 0.","Groups":["Arithmetic"]},{"Opcode":25,"Name":"|","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-or B","Groups":["Arithmetic"]},{"Opcode":26,"Name":"&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-and B","Groups":["Arithmetic"]},{"Opcode":27,"Name":"^","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-xor B","Groups":["Arithmetic"]},{"Opcode":28,"Name":"~","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"bitwise invert value A","Groups":["Arithmetic"]},{"Opcode":29,"Name":"mulw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A times B as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low","Groups":["Arithmetic"]},{"Opcode":30,"Name":"addw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A plus B as a 128-bit result. X is the carry-bit, Y is the low-order 64 bits.","Groups":["Arithmetic"]},{"Opcode":31,"Name":"divmodw","Args":"UUUU","Returns":"UUUU","Cost":20,"Size":1,"Doc":"W,X = (A,B / C,D); Y,Z = (A,B modulo C,D)","DocExtra":"The notation J,K indicates that two uint64 values J and K are interpreted as a uint128 value, with J as the high uint64 and K the low.","Groups":["Arithmetic"]},{"Opcode":32,"Name":"intcblock","Cost":1,"Size":0,"Doc":"prepare block of uint64 constants for use by intc","DocExtra":"`intcblock` loads following program bytes into an array of integer constants in the evaluator. These integer constants can be referred to by `intc` and `intc_*` which will push the value onto the stack. Subsequent calls to `intcblock` reset and replace the integer constants available to the script.","ImmediateNote":"{varuint length} [{varuint value}, ...]","Groups":["Loading Values"]},{"Opcode":33,"Name":"intc","Returns":"U","Cost":1,"Size":2,"Doc":"Ith constant from intcblock","ImmediateNote":"{uint8 int constant index}","Groups":["Loading Values"]},{"Opcode":34,"Name":"intc_0","Returns":"U","Cost":1,"Size":1,"Doc":"constant 0 from intcblock","Groups":["Loading Values"]},{"Opcode":35,"Name":"intc_1","Returns":"U","Cost":1,"Size":1,"Doc":"constant 1 from intcblock","Groups":["Loading Values"]},{"Opcode":36,"Name":"intc_2","Returns":"U","Cost":1,"Size":1,"Doc":"constant 2 from intcblock","Groups":["Loading Values"]},{"Opcode":37,"Name":"intc_3","Returns":"U","Cost":1,"Size":1,"Doc":"constant 3 from intcblock","Groups":["Loading Values"]},{"Opcode":38,"Name":"bytecblock","Cost":1,"Size":0,"Doc":"prepare block of byte-array constants for use by bytec","DocExtra":"`bytecblock` loads the following program bytes into an array of byte-array constants in the evaluator. These constants can be referred to by `bytec` and `bytec_*` which will push the value onto the stack. Subsequent calls to `bytecblock` reset and replace the bytes constants available to the script.","ImmediateNote":"{varuint length} [({varuint value length} bytes), ...]","Groups":["Loading Values"]},{"Opcode":39,"Name":"bytec","Returns":"B","Cost":1,"Size":2,"Doc":"Ith constant from bytecblock","ImmediateNote":"{uint8 byte constant index}","Groups":["Loading Values"]},{"Opcode":40,"Name":"bytec_0","Returns":"B","Cost":1,"Size":1,"Doc":"constant 0 from bytecblock","Groups":["Loading Values"]},{"Opcode":41,"Name":"bytec_1","Returns":"B","Cost":1,"Size":1,"Doc":"constant 1 from bytecblock","Groups":["Loading Values"]},{"Opcode":42,"Name":"bytec_2","Returns":"B","Cost":1,"Size":1,"Doc":"constant 2 from bytecblock","Groups":["Loading Values"]},{"Opcode":43,"Name":"bytec_3","Returns":"B","Cost":1,"Size":1,"Doc":"constant 3 from bytecblock","Groups":["Loading Values"]},{"Opcode":44,"Name":"arg","Returns":"B","Cost":1,"Size":2,"Doc":"Nth LogicSig argument","ImmediateNote":"{uint8 arg index N}","Groups":["Loading Values"]},{"Opcode":45,"Name":"arg_0","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 0","Groups":["Loading Values"]},{"Opcode":46,"Name":"arg_1","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 1","Groups":["Loading Values"]},{"Opcode":47,"Name":"arg_2","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 2","Groups":["Loading Values"]},{"Opcode":48,"Name":"arg_3","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 3","Groups":["Loading Values"]},{"Opcode":49,"Name":"txn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of current transaction","DocExtra":"FirstValidTime causes the program to fail. The field is reserved for future use.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":50,"Name":"global","Returns":".","Cost":1,"Size":2,"Doc":"global field F","ImmediateNote":"{uint8 global field index}","Groups":["Loading Values"]},{"Opcode":51,"Name":"gtxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If this transaction is _i_ in the group, `gtxn i field` is equivalent to `txn field`.","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":52,"Name":"load","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value. All scratch spaces are 0 at program start.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":53,"Name":"store","Args":".","Cost":1,"Size":2,"Doc":"store A to the Ith scratch space","ImmediateNote":"{uint8 position in scratch space to store to}","Groups":["Loading Values"]},{"Opcode":54,"Name":"txna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":55,"Name":"gtxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":56,"Name":"gtxns","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Ath transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If top of stack is _i_, `gtxns field` is equivalent to `gtxn _i_ field`. gtxns exists so that _i_ can be calculated, often based on the index of the current transaction.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":57,"Name":"gtxnsa","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":58,"Name":"gload","Returns":".","Cost":1,"Size":3,"Doc":"Ith scratch space value of the Tth transaction in the current group","DocExtra":"`gload` fails unless the requested transaction is an ApplicationCall and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index} {uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":59,"Name":"gloads","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value of the Ath transaction in the current group","DocExtra":"`gloads` fails unless the requested transaction is an ApplicationCall and A < GroupIndex.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":60,"Name":"gaid","Returns":"U","Cost":1,"Size":2,"Doc":"ID of the asset or application created in the Tth transaction of the current group","DocExtra":"`gaid` fails unless the requested transaction created an asset or application and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index}","Groups":["Loading Values"]},{"Opcode":61,"Name":"gaids","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"ID of the asset or application created in the Ath transaction of the current group","DocExtra":"`gaids` fails unless the requested transaction created an asset or application and A < GroupIndex.","Groups":["Loading Values"]},{"Opcode":62,"Name":"loads","Args":"U","Returns":".","Cost":1,"Size":1,"Doc":"Ath scratch space value.  All scratch spaces are 0 at program start.","Groups":["Loading Values"]},{"Opcode":63,"Name":"stores","Args":"U.","Cost":1,"Size":1,"Doc":"store B to the Ath scratch space","Groups":["Loading Values"]},{"Opcode":64,"Name":"bnz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is not zero","DocExtra":"The `bnz` instruction opcode 0x40 is followed by two immediate data bytes which are a high byte first and low byte second which together form a 16 bit offset which the instruction may branch to. For a bnz instruction at `pc`, if the last element of the stack is not zero then branch to instruction at `pc + 3 + N`, else proceed to next instruction at `pc + 3`. Branch targets must be aligned instructions. (e.g. Branching to the second byte of a 2 byte op will be rejected.) Starting at v4, the offset is treated as a signed 16 bit integer allowing for backward branches and looping. In prior version (v1 to v3), branch offsets are limited to forward branches only, 0-0x7fff.\\n\\nAt v2 it became allowed to branch to the end of the program exactly after the last instruction: bnz to byte N (with 0-indexing) was illegal for a TEAL program with N bytes before v2, and is legal after it. This change eliminates the need for a last instruction of no-op as a branch target at the end. (Branching beyond the end--in other words, to a byte larger than N--is still illegal and will cause the program to fail.)","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":65,"Name":"bz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is zero","DocExtra":"See `bnz` for details on how branches work. `bz` inverts the behavior of `bnz`.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":66,"Name":"b","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET","DocExtra":"See `bnz` for details on how branches work. `b` always jumps to the offset.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":67,"Name":"return","Args":"U","Cost":1,"Size":1,"Doc":"use A as success value; end","Groups":["Flow Control"]},{"Opcode":68,"Name":"assert","Args":"U","Cost":1,"Size":1,"Doc":"immediately fail unless A is a non-zero number","Groups":["Flow Control"]},{"Opcode":72,"Name":"pop","Args":".","Cost":1,"Size":1,"Doc":"discard A","Groups":["Flow Control"]},{"Opcode":73,"Name":"dup","Args":".","Returns":"..","Cost":1,"Size":1,"Doc":"duplicate A","Groups":["Flow Control"]},{"Opcode":74,"Name":"dup2","Args":"..","Returns":"....","Cost":1,"Size":1,"Doc":"duplicate A and B","Groups":["Flow Control"]},{"Opcode":75,"Name":"dig","Args":".","Returns":"..","Cost":1,"Size":2,"Doc":"Nth value from the top of the stack. dig 0 is equivalent to dup","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":76,"Name":"swap","Args":"..","Returns":"..","Cost":1,"Size":1,"Doc":"swaps A and B on stack","Groups":["Flow Control"]},{"Opcode":77,"Name":"select","Args":"..U","Returns":".","Cost":1,"Size":1,"Doc":"selects one of two values based on top-of-stack: B if C != 0, else A","Groups":["Flow Control"]},{"Opcode":78,"Name":"cover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove top of stack, and place it deeper in the stack such that N elements are above it. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":79,"Name":"uncover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove the value at depth N in the stack and shift above items down so the Nth deep value is on top of the stack. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":80,"Name":"concat","Args":"BB","Returns":"B","Cost":1,"Size":1,"Doc":"join A and B","DocExtra":"`concat` fails if the result would be greater than 4096 bytes.","Groups":["Arithmetic"]},{"Opcode":81,"Name":"substring","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including E. If E < S, or either is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 end position}","Groups":["Byte Array Manipulation"]},{"Opcode":82,"Name":"substring3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including C. If C < B, or either is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":83,"Name":"getbit","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"Bth bit of (byte-array or integer) A.","DocExtra":"see explanation of bit ordering in setbit","Groups":["Arithmetic"]},{"Opcode":84,"Name":"setbit","Args":".UU","Returns":".","Cost":1,"Size":1,"Doc":"Copy of (byte-array or integer) A, with the Bth bit set to (0 or 1) C","DocExtra":"When A is a uint64, index 0 is the least significant bit. Setting bit 3 to 1 on the integer 0 yields 8, or 2^3. When A is a byte array, index 0 is the leftmost bit of the leftmost byte. Setting bits 0 through 11 to 1 in a 4-byte-array of 0s yields the byte array 0xfff00000. Setting bit 3 to 1 on the 1-byte-array 0x00 yields the byte array 0x10.","Groups":["Arithmetic"]},{"Opcode":85,"Name":"getbyte","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"Bth byte of A, as an integer","Groups":["Arithmetic"]},{"Opcode":86,"Name":"setbyte","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"Copy of A with the Bth byte set to small integer (between 0..255) C","Groups":["Arithmetic"]},{"Opcode":87,"Name":"extract","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including S+L. If L is 0, then extract to the end of the string. If S or S+L is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 length}","Groups":["Byte Array Manipulation"]},{"Opcode":88,"Name":"extract3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including B+C. If B+C is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":89,"Name":"extract_uint16","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint16 formed from a range of big-endian bytes from A starting at B up to but not including B+2. If B+2 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":90,"Name":"extract_uint32","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint32 formed from a range of big-endian bytes from A starting at B up to but not including B+4. If B+4 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":91,"Name":"extract_uint64","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint64 formed from a range of big-endian bytes from A starting at B up to but not including B+8. If B+8 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":96,"Name":"balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get balance for account A, in microalgos. The balance is observed after the effects of previous transactions in the group, and after the fee for the current transaction is deducted.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":97,"Name":"app_opted_in","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"1 if account A is opted in to application B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: 1 if opted in and 0 otherwise.","Groups":["State Access"]},{"Opcode":98,"Name":"app_local_get","Args":".B","Returns":".","Cost":1,"Size":1,"Doc":"local state of the key B in the current application in account A","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":99,"Name":"app_local_get_ex","Args":".UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the local state of application B, key C in account A. Y is 1 if key existed, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":100,"Name":"app_global_get","Args":"B","Returns":".","Cost":1,"Size":1,"Doc":"global state of the key A in the current application","DocExtra":"params: state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":101,"Name":"app_global_get_ex","Args":"UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the global state of application A, key B. Y is 1 if key existed, else 0","DocExtra":"params: Txn.ForeignApps offset (or, since v4, an _available_ application id), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":102,"Name":"app_local_put","Args":".B.","Cost":1,"Size":1,"Doc":"write C to key B in account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key, value.","Groups":["State Access"]},{"Opcode":103,"Name":"app_global_put","Args":"B.","Cost":1,"Size":1,"Doc":"write B to key A in the global state of the current application","Groups":["State Access"]},{"Opcode":104,"Name":"app_local_del","Args":".B","Cost":1,"Size":1,"Doc":"delete key B from account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key.\\n\\nDeleting a key which is already absent has no effect on the application local state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":105,"Name":"app_global_del","Args":"B","Cost":1,"Size":1,"Doc":"delete key A from the global state of the current application","DocExtra":"params: state key.\\n\\nDeleting a key which is already absent has no effect on the application global state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":112,"Name":"asset_holding_get","Args":".U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetBalance","AssetFrozen"],"ArgEnumTypes":"UU","Doc":"X is field F from account A\'s holding of asset B. Y is 1 if A is opted into B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ address), asset id (or, since v4, a Txn.ForeignAssets offset). Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset holding field index}","Groups":["State Access"]},{"Opcode":113,"Name":"asset_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetTotal","AssetDecimals","AssetDefaultFrozen","AssetUnitName","AssetName","AssetURL","AssetMetadataHash","AssetManager","AssetReserve","AssetFreeze","AssetClawback","AssetCreator"],"ArgEnumTypes":"UUUBBBBBBBBB","Doc":"X is field F from asset A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignAssets offset (or, since v4, an _available_ asset id. Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset params field index}","Groups":["State Access"]},{"Opcode":114,"Name":"app_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AppApprovalProgram","AppClearStateProgram","AppGlobalNumUint","AppGlobalNumByteSlice","AppLocalNumUint","AppLocalNumByteSlice","AppExtraProgramPages","AppCreator","AppAddress"],"ArgEnumTypes":"BBUUUUUBB","Doc":"X is field F from app A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignApps offset or an _available_ app id. Return: did_exist flag (1 if the application existed and 0 otherwise), value.","ImmediateNote":"{uint8 app params field index}","Groups":["State Access"]},{"Opcode":115,"Name":"acct_params_get","Args":".","Returns":".U","Cost":1,"Size":2,"Doc":"X is field F from account A. Y is 1 if A owns positive algos, else 0","ImmediateNote":"{uint8 account params field index}","Groups":["State Access"]},{"Opcode":120,"Name":"min_balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get minimum required balance for account A, in microalgos. Required balance is affected by [ASA](https://developer.algorand.org/docs/features/asa/#assets-overview) and [App](https://developer.algorand.org/docs/features/asc1/stateful/#minimum-balance-requirement-for-a-smart-contract) usage. When creating or opting into an app, the minimum balance grows before the app code runs, therefore the increase is visible there. When deleting or closing out, the minimum balance decreases after the app executes.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":128,"Name":"pushbytes","Returns":"B","Cost":1,"Size":0,"Doc":"immediate BYTES","DocExtra":"pushbytes args are not added to the bytecblock during assembly processes","ImmediateNote":"{varuint length} {bytes}","Groups":["Loading Values"]},{"Opcode":129,"Name":"pushint","Returns":"U","Cost":1,"Size":0,"Doc":"immediate UINT","DocExtra":"pushint args are not added to the intcblock during assembly processes","ImmediateNote":"{varuint int}","Groups":["Loading Values"]},{"Opcode":136,"Name":"callsub","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET, saving the next instruction on the call stack","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":137,"Name":"retsub","Cost":1,"Size":1,"Doc":"pop the top instruction from the call stack and branch to it","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","Groups":["Flow Control"]},{"Opcode":144,"Name":"shl","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times 2^B, modulo 2^64","Groups":["Arithmetic"]},{"Opcode":145,"Name":"shr","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by 2^B","Groups":["Arithmetic"]},{"Opcode":146,"Name":"sqrt","Args":"U","Returns":"U","Cost":4,"Size":1,"Doc":"The largest integer I such that I^2 <= A","Groups":["Arithmetic"]},{"Opcode":147,"Name":"bitlen","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"The highest set bit in A. If A is a byte-array, it is interpreted as a big-endian unsigned integer. bitlen of 0 is 0, bitlen of 8 is 4","DocExtra":"bitlen interprets arrays as big-endian integers, unlike setbit/getbit","Groups":["Arithmetic"]},{"Opcode":148,"Name":"exp","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A raised to the Bth power. Fail if A == B == 0 and on overflow","Groups":["Arithmetic"]},{"Opcode":149,"Name":"expw","Args":"UU","Returns":"UU","Cost":10,"Size":1,"Doc":"A raised to the Bth power as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low. Fail if A == B == 0 or if the results exceeds 2^128-1","Groups":["Arithmetic"]},{"Opcode":150,"Name":"bsqrt","Args":"B","Returns":"B","Cost":40,"Size":1,"Doc":"The largest integer I such that I^2 <= A. A and I are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":151,"Name":"divw","Args":"UUU","Returns":"U","Cost":1,"Size":1,"Doc":"A,B / C. Fail if C == 0 or if result overflows.","DocExtra":"The notation A,B indicates that A and B are interpreted as a uint128 value, with A as the high uint64 and B the low.","Groups":["Arithmetic"]},{"Opcode":160,"Name":"b+","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A plus B. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":161,"Name":"b-","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A minus B. A and B are interpreted as big-endian unsigned integers. Fail on underflow.","Groups":["Byte Array Arithmetic"]},{"Opcode":162,"Name":"b/","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A divided by B (truncated division). A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":163,"Name":"b*","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A times B. A and B are interpreted as big-endian unsigned integers.","Groups":["Byte Array Arithmetic"]},{"Opcode":164,"Name":"b<","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":165,"Name":"b>","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":166,"Name":"b<=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":167,"Name":"b>=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":168,"Name":"b==","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":169,"Name":"b!=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"0 if A is equal to B, else 1. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":170,"Name":"b%","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A modulo B. A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":171,"Name":"b|","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-or B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":172,"Name":"b&","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-and B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":173,"Name":"b^","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-xor B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":174,"Name":"b~","Args":"B","Returns":"B","Cost":4,"Size":1,"Doc":"A with all bits inverted","Groups":["Byte Array Logic"]},{"Opcode":175,"Name":"bzero","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"zero filled byte-array of length A","Groups":["Loading Values"]},{"Opcode":176,"Name":"log","Args":"B","Cost":1,"Size":1,"Doc":"write A to log state of the current application","DocExtra":"`log` fails if called more than MaxLogCalls times in a program, or if the sum of logged bytes exceeds 1024 bytes.","Groups":["State Access"]},{"Opcode":177,"Name":"itxn_begin","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in a new transaction group","DocExtra":"`itxn_begin` initializes Sender to the application address; Fee to the minimum allowable, taking into account MinTxnFee and credit from overpaying in earlier transactions; FirstValid/LastValid to the values in the invoking transaction, and all other fields to zero or empty values.","Groups":["Inner Transactions"]},{"Opcode":178,"Name":"itxn_field","Args":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"set field F of the current inner transaction to A","DocExtra":"`itxn_field` fails if A is of the wrong type for F, including a byte array of the wrong size for use as an address when F is an address field. `itxn_field` also fails if A is an account, asset, or app that is not _available_, or an attempt is made extend an array field beyond the limit imposed by consensus parameters. (Addresses set into asset params of acfg transactions need not be _available_.)","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":179,"Name":"itxn_submit","Cost":1,"Size":1,"Doc":"execute the current inner transaction group. Fail if executing this group would exceed the inner transaction limit, or if any transaction in the group fails.","DocExtra":"`itxn_submit` resets the current transaction so that it can not be resubmitted. A new `itxn_begin` is required to prepare another inner transaction.","Groups":["Inner Transactions"]},{"Opcode":180,"Name":"itxn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":181,"Name":"itxna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":182,"Name":"itxn_next","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in the same transaction group","DocExtra":"`itxn_next` initializes the transaction exactly as `itxn_begin` does","Groups":["Inner Transactions"]},{"Opcode":183,"Name":"gitxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":184,"Name":"gitxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":192,"Name":"txnas","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":193,"Name":"gtxnas","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":194,"Name":"gtxnsas","Args":"UU","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Bth value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":195,"Name":"args","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"Ath LogicSig argument","Groups":["Loading Values"]},{"Opcode":196,"Name":"gloadss","Args":"UU","Returns":".","Cost":1,"Size":1,"Doc":"Bth scratch space value of the Ath transaction in the current group","Groups":["Loading Values"]},{"Opcode":197,"Name":"itxnas","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ath value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":198,"Name":"gitxnas","Args":"U","Returns":".","Cost":1,"Size":3,"Doc":"Ath value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]}]}');let o;function i(e){let t=0,r=0;for(let n=0;n<e.length;n++){const o=e[n];if(o<128)return n>9||9===n&&o>1?[0,-(n+1)]:[t|o<<r,n+1];t+=(127&o)<<r,r+=7}return[0,0]}function s(e,t){let r=1;const n=i(e.slice(t+r)),o=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode int const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<o;n++){if(t+r>=e.length)throw new Error("intcblock ran past end of program");let o;if([o,s]=i(e.slice(t+r)),s<=0)throw new Error(`could not decode int const[${n}] block size at pc=${t+r}`);a.push(o),r+=s}return[r,a]}function a(e,t){let r=1;const n=i(e.slice(t+r)),o=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode []byte const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<o;n++){if(t+r>=e.length)throw new Error("bytecblock ran past end of program");let o;if([o,s]=i(e.slice(t+r)),s<=0)throw new Error(`could not decode []byte] const[${n}] block size at pc=${t+r}`);if(r+=s,t+r+o>e.length)throw new Error("bytecblock ran past end of program");const c=e.slice(t+r,t+r+o);a.push(c),r+=o}return[r,a]}function c(e,t){let r=1;const[n,o]=i(e.slice(t+r));if(o<=0)throw new Error(`could not decode push int const at pc=${t+r}`);return r+=o,[r,n]}function u(e,t){let r=1;const[n,o]=i(e.slice(t+r));if(o<=0)throw new Error(`could not decode push []byte const size at pc=${t+r}`);if(r+=o,t+r+n>e.length)throw new Error("pushbytes ran past end of program");const s=e.slice(t+r,t+r+n);return r+=n,[r,s]}function l(e,t){if(!e)throw new Error("empty program");if(void 0===t&&(t=[]),!Array.isArray(t))throw new Error("invalid arguments");const[r,l]=i(e);if(l<=0)throw new Error("version parsing error");if(r>n.z_)throw new Error("unsupported version");let p=0,{length:h}=e;for(const e of t)h+=e.length;if(h>1e3)throw new Error("program too long");if(!o){o={};for(const e of n.AP)o[e.Opcode]=e}let f=l,d=[],g=[];for(;f<e.length;){const t=o[e[f]];if(void 0===t)throw new Error("invalid instruction");p+=t.Cost;let r=t.Size;if(0===r)switch(t.Opcode){case 32:{let t;[r,t]=s(e,f),d=d.concat(t);break}case 38:{let t;[r,t]=a(e,f),g=g.concat(t);break}case 129:{let t;[r,t]=c(e,f),d.push(t);break}case 128:{let t;[r,t]=u(e,f),g.push(t);break}default:throw new Error("invalid instruction")}f+=r}if(r<4&&p>2e4)throw new Error("program too costly for Teal version < 4. consider using v4.");return[d,g,!0]}function p(e,t){const[,,r]=l(e,t);return r}function h(e,t){const[r]=s(e,t);return r}function f(e,t){const[r]=a(e,t);return r}function d(e,t){const[r]=c(e,t);return r}function g(e,t){const[r]=u(e,t);return r}const y=n.z_,m=n.BV},8800:(e,t,r)=>{"use strict";r.r(t),r.d(t,{LogicSig:()=>p,LogicSigAccount:()=>h,makeLogicSig:()=>f,signLogicSigTransactionObject:()=>d,signLogicSigTransaction:()=>g,logicSigFromByte:()=>y,tealSign:()=>b,tealSignFromProgram:()=>w});var n=r(9404),o=r(7116),i=r(3033),s=r(5583),a=r(4158),c=r(413),u=r(9417),l=r(2486).Buffer;class p{constructor(e,t){if(this.tag=l.from("Program"),t&&(!Array.isArray(t)||!t.every((e=>e.constructor===Uint8Array||l.isBuffer(e)))))throw new TypeError("Invalid arguments");let r;if(null!=t&&(r=t.map((e=>new Uint8Array(e)))),!s.checkProgram(e,r))throw new Error("Invalid program");this.logic=e,this.args=r,this.sig=void 0,this.msig=void 0}get_obj_for_encoding(){const e={l:this.logic};return this.args&&(e.arg=this.args),this.sig?e.sig=this.sig:this.msig&&(e.msig=this.msig),e}static from_obj_for_encoding(e){const t=new p(e.l,e.arg);return t.sig=e.sig,t.msig=e.msig,t}verify(e){if(this.sig&&this.msig)return!1;try{s.checkProgram(this.logic,this.args)}catch(e){return!1}const t=c.concatArrays(this.tag,this.logic);if(!this.sig&&!this.msig){const r=n.genericHash(t);return c.arrayEqual(r,e)}return this.sig?n.verify(t,this.sig,e):(0,a.F2)(t,this.msig,e)}address(){const e=c.concatArrays(this.tag,this.logic),t=n.genericHash(e);return o.encodeAddress(new Uint8Array(t))}sign(e,t){if(null==t)this.sig=this.signProgram(e);else{const r=t.addrs.map((e=>({pk:o.decodeAddress(e).publicKey})));this.msig={v:t.version,thr:t.threshold,subsig:r};const[n,i]=this.singleSignMultisig(e,this.msig);this.msig.subsig[i].s=n}}appendToMultisig(e){if(void 0===this.msig)throw new Error("no multisig present");const[t,r]=this.singleSignMultisig(e,this.msig);this.msig.subsig[r].s=t}signProgram(e){const t=c.concatArrays(this.tag,this.logic);return n.sign(t,e)}singleSignMultisig(e,t){let r=-1;const o=n.keyPairFromSecretKey(e).publicKey;for(let e=0;e<t.subsig.length;e++){const{pk:n}=t.subsig[e];if(c.arrayEqual(n,o)){r=e;break}}if(-1===r)throw new Error("invalid secret key");return[this.signProgram(e),r]}toByte(){return i.encode(this.get_obj_for_encoding())}static fromByte(e){const t=i.decode(e);return p.from_obj_for_encoding(t)}}class h{constructor(e,t){this.lsig=new p(e,t),this.sigkey=void 0}get_obj_for_encoding(){const e={lsig:this.lsig.get_obj_for_encoding()};return this.sigkey&&(e.sigkey=this.sigkey),e}static from_obj_for_encoding(e){const t=new h(e.lsig.l,e.lsig.arg);return t.lsig=p.from_obj_for_encoding(e.lsig),t.sigkey=e.sigkey,t}toByte(){return i.encode(this.get_obj_for_encoding())}static fromByte(e){const t=i.decode(e);return h.from_obj_for_encoding(t)}isDelegated(){return!(!this.lsig.sig&&!this.lsig.msig)}verify(){const e=this.address();return this.lsig.verify(o.decodeAddress(e).publicKey)}address(){if(this.lsig.sig&&this.lsig.msig)throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");if(this.lsig.sig){if(!this.sigkey)throw new Error("Signing key for delegated account is missing");return o.encodeAddress(this.sigkey)}if(this.lsig.msig){const e={version:this.lsig.msig.v,threshold:this.lsig.msig.thr,pks:this.lsig.msig.subsig.map((e=>e.pk))};return o.encodeAddress(o.fromMultisigPreImg(e))}return this.lsig.address()}signMultisig(e,t){this.lsig.sign(t,e)}appendToMultisig(e){this.lsig.appendToMultisig(e)}sign(e){this.lsig.sign(e),this.sigkey=n.keyPairFromSecretKey(e).publicKey}}function f(e,t){return new p(e,t)}function d(e,t){let r,s;if(t instanceof h)r=t.lsig,s=o.decodeAddress(t.address()).publicKey;else if(r=t,r.sig)s=e.from.publicKey;else if(r.msig){const e={version:r.msig.v,threshold:r.msig.thr,pks:r.msig.subsig.map((e=>e.pk))};s=o.fromMultisigPreImg(e)}else s=o.decodeAddress(r.address()).publicKey;return function(e,t,r){if(!t.verify(r))throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");const o={lsig:t.get_obj_for_encoding(),txn:e.get_obj_for_encoding()};return n.bytesEqual(r,e.from.publicKey)||(o.sgnr=l.from(r)),{txID:e.txID().toString(),blob:i.encode(o)}}(e,r,s)}function g(e,t){return d(u.instantiateTxnIfNeeded(e),t)}function y(e){return p.fromByte(e)}const m=l.from("ProgData");function b(e,t,r){const i=c.concatArrays(o.decodeAddress(r).publicKey,t),s=l.from(c.concatArrays(m,i));return n.sign(s,e)}function w(e,t,r){return b(e,t,new p(r).address())}},6608:(e,t,r)=>{"use strict";r.r(t),r.d(t,{MULTISIG_BAD_SENDER_ERROR_MSG:()=>N,signTransaction:()=>P,signBid:()=>L,signBytes:()=>j,verifyBytes:()=>z,encodeObj:()=>F,decodeObj:()=>M,ERROR_MULTISIG_BAD_SENDER:()=>H,ERROR_INVALID_MICROALGOS:()=>G,Algodv2:()=>d.Z,Kmd:()=>g.Z,IntDecoding:()=>y.Z,Indexer:()=>m.Z,waitForConfirmation:()=>b.K,isValidAddress:()=>o.isValidAddress,encodeAddress:()=>o.encodeAddress,decodeAddress:()=>o.decodeAddress,getApplicationAddress:()=>o.getApplicationAddress,bytesToBigInt:()=>w.v,bigIntToBytes:()=>w.j,encodeUint64:()=>v.T,decodeUint64:()=>v.u,generateAccount:()=>A.Z,modelsv2:()=>x,mnemonicToMasterDerivationKey:()=>S.OF,masterDerivationKeyToMnemonic:()=>S.vC,secretKeyToMnemonic:()=>S.QX,mnemonicToSecretKey:()=>S.Ch,seedFromMnemonic:()=>S.mE,mnemonicFromSeed:()=>S.w3,microalgosToAlgos:()=>l._,algosToMicroalgos:()=>l.HN,INVALID_MICROALGOS_ERROR_MSG:()=>l.rD,computeGroupID:()=>_.computeGroupID,assignGroupID:()=>_.assignGroupID,LogicSigAccount:()=>E.LogicSigAccount,makeLogicSig:()=>E.makeLogicSig,signLogicSigTransaction:()=>E.signLogicSigTransaction,signLogicSigTransactionObject:()=>E.signLogicSigTransactionObject,logicSigFromByte:()=>E.logicSigFromByte,tealSign:()=>E.tealSign,tealSignFromProgram:()=>E.tealSignFromProgram,signMultisigTransaction:()=>T.PU,mergeMultisigTransactions:()=>T.J6,appendSignMultisigTransaction:()=>T.PO,multisigAddress:()=>T.vH,LogicTemplates:()=>q,DryrunResult:()=>B.x,createDryrun:()=>B.P,OnApplicationComplete:()=>k.OnApplicationComplete,makeApplicationCallTxnFromObject:()=>k.makeApplicationCallTxnFromObject,makeApplicationClearStateTxn:()=>k.makeApplicationClearStateTxn,makeApplicationClearStateTxnFromObject:()=>k.makeApplicationClearStateTxnFromObject,makeApplicationCloseOutTxn:()=>k.makeApplicationCloseOutTxn,makeApplicationCloseOutTxnFromObject:()=>k.makeApplicationCloseOutTxnFromObject,makeApplicationCreateTxn:()=>k.makeApplicationCreateTxn,makeApplicationCreateTxnFromObject:()=>k.makeApplicationCreateTxnFromObject,makeApplicationDeleteTxn:()=>k.makeApplicationDeleteTxn,makeApplicationDeleteTxnFromObject:()=>k.makeApplicationDeleteTxnFromObject,makeApplicationNoOpTxn:()=>k.makeApplicationNoOpTxn,makeApplicationNoOpTxnFromObject:()=>k.makeApplicationNoOpTxnFromObject,makeApplicationOptInTxn:()=>k.makeApplicationOptInTxn,makeApplicationOptInTxnFromObject:()=>k.makeApplicationOptInTxnFromObject,makeApplicationUpdateTxn:()=>k.makeApplicationUpdateTxn,makeApplicationUpdateTxnFromObject:()=>k.makeApplicationUpdateTxnFromObject,makeAssetConfigTxn:()=>k.makeAssetConfigTxn,makeAssetConfigTxnWithSuggestedParams:()=>k.makeAssetConfigTxnWithSuggestedParams,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>k.makeAssetConfigTxnWithSuggestedParamsFromObject,makeAssetCreateTxn:()=>k.makeAssetCreateTxn,makeAssetCreateTxnWithSuggestedParams:()=>k.makeAssetCreateTxnWithSuggestedParams,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>k.makeAssetCreateTxnWithSuggestedParamsFromObject,makeAssetDestroyTxn:()=>k.makeAssetDestroyTxn,makeAssetDestroyTxnWithSuggestedParams:()=>k.makeAssetDestroyTxnWithSuggestedParams,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>k.makeAssetDestroyTxnWithSuggestedParamsFromObject,makeAssetFreezeTxn:()=>k.makeAssetFreezeTxn,makeAssetFreezeTxnWithSuggestedParams:()=>k.makeAssetFreezeTxnWithSuggestedParams,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>k.makeAssetFreezeTxnWithSuggestedParamsFromObject,makeAssetTransferTxn:()=>k.makeAssetTransferTxn,makeAssetTransferTxnWithSuggestedParams:()=>k.makeAssetTransferTxnWithSuggestedParams,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>k.makeAssetTransferTxnWithSuggestedParamsFromObject,makeKeyRegistrationTxn:()=>k.makeKeyRegistrationTxn,makeKeyRegistrationTxnWithSuggestedParams:()=>k.makeKeyRegistrationTxnWithSuggestedParams,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>k.makeKeyRegistrationTxnWithSuggestedParamsFromObject,makePaymentTxn:()=>k.makePaymentTxn,makePaymentTxnWithSuggestedParams:()=>k.makePaymentTxnWithSuggestedParams,makePaymentTxnWithSuggestedParamsFromObject:()=>k.makePaymentTxnWithSuggestedParamsFromObject,ALGORAND_MIN_TX_FEE:()=>s.ALGORAND_MIN_TX_FEE,Transaction:()=>s.Transaction,decodeSignedTransaction:()=>s.decodeSignedTransaction,decodeUnsignedTransaction:()=>s.decodeUnsignedTransaction,encodeUnsignedTransaction:()=>s.encodeUnsignedTransaction,instantiateTxnIfNeeded:()=>s.instantiateTxnIfNeeded,isTransactionWithSigner:()=>U.Xw,makeBasicAccountTransactionSigner:()=>U.x7,makeLogicSigAccountTransactionSigner:()=>U.i1,makeMultiSigAccountTransactionSigner:()=>U.Vj,AtomicTransactionComposer:()=>I.A,AtomicTransactionComposerStatus:()=>I.b,TransactionType:()=>C.i,ABIAddressType:()=>R.JQ,ABIArrayDynamicType:()=>R._4,ABIArrayStaticType:()=>R.X3,ABIBoolType:()=>R.R0,ABIByteType:()=>R.jD,ABIContract:()=>R.Yh,ABIInterface:()=>R.bL,ABIMethod:()=>R.Ls,ABIReferenceType:()=>R.UV,ABIStringType:()=>R.Ax,ABITransactionType:()=>R.A9,ABITupleType:()=>R.w1,ABIType:()=>R.NK,ABIUfixedType:()=>R.RY,ABIUintType:()=>R.Pu,ADDR_BYTE_SIZE:()=>R.Vk,LENGTH_ENCODE_BYTE_SIZE:()=>R.nh,MAX_LEN:()=>R.kG,SINGLE_BOOL_SIZE:()=>R.qH,SINGLE_BYTE_SIZE:()=>R.JH,abiCheckTransactionType:()=>R.vJ,abiTypeIsReference:()=>R.o5,abiTypeIsTransaction:()=>R.AE,getMethodByName:()=>R.I5});var n=r(9404),o=r(7116),i=r(3033),s=r(9417),a=r(8886),c=r.n(a),u=r(2691),l=r(9070),p=r(413),h=r(5922),f={};for(const e in h)["default","MULTISIG_BAD_SENDER_ERROR_MSG","signTransaction","signBid","signBytes","verifyBytes","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","Algodv2","Kmd","IntDecoding","Indexer","waitForConfirmation","isValidAddress","encodeAddress","decodeAddress","getApplicationAddress","bytesToBigInt","bigIntToBytes","encodeUint64","decodeUint64","generateAccount","modelsv2","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","secretKeyToMnemonic","mnemonicToSecretKey","seedFromMnemonic","mnemonicFromSeed","microalgosToAlgos","algosToMicroalgos","INVALID_MICROALGOS_ERROR_MSG","computeGroupID","assignGroupID","LogicSigAccount","makeLogicSig","signLogicSigTransaction","signLogicSigTransactionObject","logicSigFromByte","tealSign","tealSignFromProgram","signMultisigTransaction","mergeMultisigTransactions","appendSignMultisigTransaction","multisigAddress","LogicTemplates"].indexOf(e)<0&&(f[e]=()=>h[e]);r.d(t,f);var d=r(1663),g=r(6477),y=r(7197),m=r(9582),b=r(5062),w=r(8922),v=r(6963),A=r(7988),x=r(227),S=r(3510),_=r(1063),E=r(8800),T=r(4158),B=r(4383),k=r(1988),U=r(834),I=r(3458),C=r(2380),R=r(7677),O=r(2486).Buffer;const D=O.from([77,88]),N="The transaction sender address and multisig preimage do not match.";function P(e,t){if(void 0===e.from){const r=n.keyPairFromSecretKey(t);e.from=o.encodeAddress(r.publicKey)}const r=s.instantiateTxnIfNeeded(e);return{txID:r.txID().toString(),blob:r.signTxn(t)}}function L(e,t){return new u.Z(e).signBid(t)}function j(e,t){const r=O.from(p.concatArrays(D,e));return n.sign(r,t)}function z(e,t,r){const i=O.from(p.concatArrays(D,e)),s=o.decodeAddress(r).publicKey;return n.verify(i,t,s)}function F(e){return new Uint8Array(i.encode(e))}function M(e){return i.decode(e)}const H=new Error(N),G=new Error(l.rD),q=c()},1988:(e,t,r)=>{"use strict";r.r(t),r.d(t,{makePaymentTxnWithSuggestedParams:()=>s,makePaymentTxn:()=>a,makePaymentTxnWithSuggestedParamsFromObject:()=>c,makeKeyRegistrationTxnWithSuggestedParams:()=>u,makeKeyRegistrationTxn:()=>l,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>p,makeAssetCreateTxnWithSuggestedParams:()=>h,makeAssetCreateTxn:()=>f,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>d,makeAssetConfigTxnWithSuggestedParams:()=>g,makeAssetConfigTxn:()=>y,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>m,makeAssetDestroyTxnWithSuggestedParams:()=>b,makeAssetDestroyTxn:()=>w,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>v,makeAssetFreezeTxnWithSuggestedParams:()=>A,makeAssetFreezeTxn:()=>x,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>S,makeAssetTransferTxnWithSuggestedParams:()=>_,makeAssetTransferTxn:()=>E,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>T,makeApplicationCreateTxn:()=>B,makeApplicationCreateTxnFromObject:()=>k,makeApplicationUpdateTxn:()=>U,makeApplicationUpdateTxnFromObject:()=>I,makeApplicationDeleteTxn:()=>C,makeApplicationDeleteTxnFromObject:()=>R,makeApplicationOptInTxn:()=>O,makeApplicationOptInTxnFromObject:()=>D,makeApplicationCloseOutTxn:()=>N,makeApplicationCloseOutTxnFromObject:()=>P,makeApplicationClearStateTxn:()=>L,makeApplicationClearStateTxnFromObject:()=>j,makeApplicationNoOpTxn:()=>z,makeApplicationNoOpTxnFromObject:()=>F,OnApplicationComplete:()=>o.hq,makeApplicationCallTxnFromObject:()=>M});var n=r(9417),o=r(1624),i=r(1824);function s(e,t,r,o,s,a,c){const u={from:e,to:t,amount:r,closeRemainderTo:o,note:s,suggestedParams:a,type:i.i.pay,reKeyTo:c};return new n.Transaction(u)}function a(e,t,r,n,o,i,a,c,u,l,p){return s(e,t,n,o,c,{genesisHash:u,genesisID:l,firstRound:i,lastRound:a,fee:r},p)}function c(e){return s(e.from,e.to,e.amount,e.closeRemainderTo,e.note,e.suggestedParams,e.rekeyTo)}function u(e,t,r,o,s,a,c,u,l,p=!1,h){const f={from:e,note:t,voteKey:r,selectionKey:o,voteFirst:s,voteLast:a,voteKeyDilution:c,suggestedParams:u,type:i.i.keyreg,reKeyTo:l,nonParticipation:p,stateProofKey:h};return new n.Transaction(f)}function l(e,t,r,n,o,i,s,a,c,l,p,h,f,d=!1,g){return u(e,o,a,c,l,p,h,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},f,d,g)}function p(e){return u(e.from,e.note,e.voteKey,e.selectionKey,e.voteFirst,e.voteLast,e.voteKeyDilution,e.suggestedParams,e.rekeyTo,e.nonParticipation,e.stateProofKey)}function h(e,t,r,o,s,a,c,u,l,p,h,f,d,g,y){const m={from:e,note:t,suggestedParams:g,assetTotal:r,assetDecimals:o,assetDefaultFrozen:s,assetUnitName:p,assetName:h,assetURL:f,assetMetadataHash:d,assetManager:a,assetReserve:c,assetFreeze:u,assetClawback:l,type:i.i.acfg,reKeyTo:y};return new n.Transaction(m)}function f(e,t,r,n,o,i,s,a,c,u,l,p,f,d,g,y,m,b,w){return h(e,o,a,c,u,l,p,f,d,g,y,m,b,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},w)}function d(e){return h(e.from,e.note,e.total,e.decimals,e.defaultFrozen,e.manager,e.reserve,e.freeze,e.clawback,e.unitName,e.assetName,e.assetURL,e.assetMetadataHash,e.suggestedParams,e.rekeyTo)}function g(e,t,r,o,s,a,c,u,l=!0,p){if(l&&(void 0===o||void 0===s||void 0===a||void 0===c))throw Error("strict empty address checking was turned on, but at least one empty address was provided");const h={from:e,suggestedParams:u,assetIndex:r,assetManager:o,assetReserve:s,assetFreeze:a,assetClawback:c,type:i.i.acfg,note:t,reKeyTo:p};return new n.Transaction(h)}function y(e,t,r,n,o,i,s,a,c,u,l,p,h=!0,f){return g(e,o,a,c,u,l,p,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},h,f)}function m(e){return g(e.from,e.note,e.assetIndex,e.manager,e.reserve,e.freeze,e.clawback,e.suggestedParams,e.strictEmptyAddressChecking,e.rekeyTo)}function b(e,t,r,o,s){const a={from:e,suggestedParams:o,assetIndex:r,type:i.i.acfg,note:t,reKeyTo:s};return new n.Transaction(a)}function w(e,t,r,n,o,i,s,a,c){return b(e,o,a,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},c)}function v(e){return b(e.from,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function A(e,t,r,o,s,a,c){const u={from:e,type:i.i.afrz,freezeAccount:o,assetIndex:r,freezeState:s,note:t,suggestedParams:a,reKeyTo:c};return new n.Transaction(u)}function x(e,t,r,n,o,i,s,a,c,u,l){return A(e,o,a,c,u,{genesisHash:i,genesisID:s,firstRound:r,lastRound:n,fee:t},l)}function S(e){return A(e.from,e.note,e.assetIndex,e.freezeTarget,e.freezeState,e.suggestedParams,e.rekeyTo)}function _(e,t,r,o,s,a,c,u,l){const p={type:i.i.axfer,from:e,to:t,amount:s,suggestedParams:u,assetIndex:c,note:a,assetRevocationTarget:o,closeRemainderTo:r,reKeyTo:l};return new n.Transaction(p)}function E(e,t,r,n,o,i,s,a,c,u,l,p,h){return _(e,t,r,n,i,c,p,{genesisHash:u,genesisID:l,firstRound:s,lastRound:a,fee:o},h)}function T(e){return _(e.from,e.to,e.closeRemainderTo,e.revocationTarget,e.amount,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function B(e,t,r,o,s,a,c,u,l,p,h,f,d,g,y,m,b){const w={type:i.i.appl,from:e,suggestedParams:t,appIndex:0,appOnComplete:r,appLocalInts:a,appLocalByteSlices:c,appGlobalInts:u,appGlobalByteSlices:l,appApprovalProgram:o,appClearProgram:s,appArgs:p,appAccounts:h,appForeignApps:f,appForeignAssets:d,note:g,lease:y,reKeyTo:m,extraPages:b};return new n.Transaction(w)}function k(e){return B(e.from,e.suggestedParams,e.onComplete,e.approvalProgram,e.clearProgram,e.numLocalInts,e.numLocalByteSlices,e.numGlobalInts,e.numGlobalByteSlices,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.extraPages)}function U(e,t,r,s,a,c,u,l,p,h,f,d){const g={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appApprovalProgram:s,appOnComplete:o.hq.UpdateApplicationOC,appClearProgram:a,appArgs:c,appAccounts:u,appForeignApps:l,appForeignAssets:p,note:h,lease:f,reKeyTo:d};return new n.Transaction(g)}function I(e){return U(e.from,e.suggestedParams,e.appIndex,e.approvalProgram,e.clearProgram,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function C(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.DeleteApplicationOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function R(e){return C(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function O(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.OptInOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function D(e){return O(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function N(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.CloseOutOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function P(e){return N(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function L(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.ClearStateOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function j(e){return L(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function z(e,t,r,s,a,c,u,l,p,h){const f={type:i.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:o.hq.NoOpOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function F(e){return z(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function M(e){const t={type:i.i.appl,from:e.from,suggestedParams:e.suggestedParams,appIndex:e.appIndex,appOnComplete:e.onComplete,appLocalInts:e.numLocalInts,appLocalByteSlices:e.numLocalByteSlices,appGlobalInts:e.numGlobalInts,appGlobalByteSlices:e.numGlobalByteSlices,appApprovalProgram:e.approvalProgram,appClearProgram:e.clearProgram,appArgs:e.appArgs,appAccounts:e.accounts,appForeignApps:e.foreignApps,appForeignAssets:e.foreignAssets,note:e.note,lease:e.lease,reKeyTo:e.rekeyTo,extraPages:e.extraPages};return new n.Transaction(t)}},3510:(e,t,r)=>{"use strict";r.d(t,{vC:()=>g,w3:()=>l,OF:()=>d,Ch:()=>h,QX:()=>f,mE:()=>p});const n=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var o=r(9404),i=r(7116);const s="failed to decode mnemonic";function a(e){const t=[];let r=0,n=0;return e.forEach((function(e){r|=e<<n,n+=8,n>=11&&(t.push(2047&r),r>>=11,n-=11)})),n&&t.push(r),t}function c(e){return e.map((e=>n[e]))}function u(e){return c(a(o.genericHash(e)))[0]}function l(e){if(e.length!==o.SEED_BTYES_LENGTH)throw new RangeError(`Seed length must be ${o.SEED_BTYES_LENGTH}`);const t=c(a(e)),r=u(e);return`${t.join(" ")} ${r}`}function p(e){const t=e.split(" "),r=t.slice(0,24);for(const e of r)if(-1===n.indexOf(e))throw new Error("the mnemonic contains a word that is not in the wordlist");const o=t[t.length-1];let i=function(e){const t=[];let r=0,n=0;return e.forEach((function(e){for(r|=e<<n,n+=11;n>=8;)t.push(255&r),r>>=8,n-=8})),n&&t.push(r),new Uint8Array(t)}(r.map((e=>n.indexOf(e))));if(33!==i.length)throw new Error(s);if(0!==i[i.length-1])throw new Error(s);if(i=i.slice(0,i.length-1),u(i)===o)return i;throw new Error(s)}function h(e){const t=p(e),r=o.keyPairFromSeed(t);return{addr:i.encodeAddress(r.publicKey),sk:r.secretKey}}function f(e){return l(e.slice(0,o.SEED_BTYES_LENGTH))}function d(e){return p(e)}function g(e){return l(e)}},4158:(e,t,r)=>{"use strict";r.d(t,{J6:()=>h,F2:()=>f,PU:()=>d,PO:()=>g,vH:()=>y});var n=r(9404),o=r(7116),i=r(3033),s=r(9417),a=r(413),c=r(2486).Buffer;const u="Cannot merge txs. Multisig preimages differ",l="Cannot mutate a multisig field as it would invalidate all existing signatures.";class p extends s.Transaction{addLease(){throw new Error(l)}addRekey(){throw new Error(l)}signTxn(e){throw new Error("Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.")}partialSignTxn({version:e,threshold:t,pks:r},s){const a=n.keyPairFromSecretKey(s).publicKey;return function(e,{rawSig:t,myPk:r},{version:s,threshold:a,pks:u}){let l=!1;const p=u.map((e=>n.bytesEqual(e,r)?(l=!0,{pk:c.from(e),s:t}):{pk:c.from(e)}));if(!1===l)throw new Error("Key does not exist");const h={msig:{v:s,thr:a,subsig:p},txn:e},f=o.fromMultisigPreImg({version:s,threshold:a,pks:u});return o.encodeAddress(e.snd)!==o.encodeAddress(f)&&(h.sgnr=c.from(f)),new Uint8Array(i.encode(h))}(this.get_obj_for_encoding(),{rawSig:this.rawSignTxn(s),myPk:a},{version:e,threshold:t,pks:r})}static from_obj_for_encoding(e){return super.from_obj_for_encoding(e)}}function h(e){if(e.length<2)throw new Error("Not enough multisig transactions to merge. Need at least two");const t=i.decode(e[0]),r=p.from_obj_for_encoding(t.txn).txID(),n=t.sgnr?o.encodeAddress(t.sgnr):void 0,s={version:t.msig.v,threshold:t.msig.thr,pks:t.msig.subsig.map((e=>e.pk))},a=o.encodeAddress(o.fromMultisigPreImg(s));let l=t.msig.subsig;for(let s=0;s<e.length;s++){const h=i.decode(e[s]);if(p.from_obj_for_encoding(h.txn).txID()!==r)throw new Error("Cannot merge txs. txIDs differ");if(n!==(h.sgnr?o.encodeAddress(h.sgnr):void 0))throw new Error("Cannot merge txs. Auth addrs differ");if(h.msig.subsig.length!==t.msig.subsig.length)throw new Error(u);const f={version:h.msig.v,threshold:h.msig.thr,pks:h.msig.subsig.map((e=>e.pk))};if(a!==o.encodeAddress(o.fromMultisigPreImg(f)))throw new Error(u);l=h.msig.subsig.map(((e,r)=>{const n=t.msig.subsig[r];if(n.s){if(e.s&&0!==c.compare(c.from(e.s),c.from(n.s)))throw new Error("Cannot merge txs. subsigs are mismatched.");return{pk:n.pk,s:n.s}}return e.s?{pk:n.pk,s:e.s}:n}))}const h={msig:{v:t.msig.v,thr:t.msig.thr,subsig:l},txn:t.txn};return void 0!==n&&(h.sgnr=c.from(o.decodeAddress(n).publicKey)),new Uint8Array(i.encode(h))}function f(e,t,r){const i=t.v,s=t.thr,c=t.subsig,u=c.map((e=>e.pk));if(t.subsig.length<s)return!1;let l;try{l=o.fromMultisigPreImg({version:i,threshold:s,pks:u})}catch(e){return!1}if(!a.arrayEqual(l,r))return!1;let p=0;for(const e of c)void 0!==e.s&&(p+=1);if(p<s)return!1;let h=0;for(const t of c)void 0!==t.s&&n.verify(e,t.s,t.pk)&&(h+=1);return!(h<s)}function d(e,{version:t,threshold:r,addrs:n},i){const a=o.fromMultisigPreImgAddrs({version:t,threshold:r,addrs:n});Object.prototype.hasOwnProperty.call(e,"from")||(e.from=a);const c=n.map((e=>o.decodeAddress(e).publicKey));let u,l;return e instanceof s.Transaction?(u=e,l=p.prototype.partialSignTxn.call(u,{version:t,threshold:r,pks:c},i)):(u=new p(e),l=u.partialSignTxn({version:t,threshold:r,pks:c},i)),{txID:u.txID().toString(),blob:l}}function g(e,{version:t,threshold:r,addrs:n},s){const a=n.map((e=>o.decodeAddress(e).publicKey)),c=i.decode(e),u=p.from_obj_for_encoding(c.txn),l=u.partialSignTxn({version:t,threshold:r,pks:a},s);return{txID:u.txID().toString(),blob:h([e,l])}}function y({version:e,threshold:t,addrs:r}){return o.fromMultisigPreImgAddrs({version:e,threshold:t,addrs:r})}},9404:(e,t,r)=>{"use strict";r.r(t),r.d(t,{genericHash:()=>a,randomBytes:()=>c,keyPairFromSeed:()=>u,keyPair:()=>l,keyPairFromSecretKey:()=>p,sign:()=>h,bytesEqual:()=>f,verify:()=>d,PUBLIC_KEY_LENGTH:()=>g,SECRET_KEY_LENGTH:()=>y,HASH_BYTES_LENGTH:()=>m,SEED_BTYES_LENGTH:()=>b});var n=r(7765),o=r.n(n),i=r(9757),s=r.n(i);function a(e){return s().sha512_256.array(e)}function c(e){return o().randomBytes(e)}function u(e){return o().sign.keyPair.fromSeed(e)}function l(){return u(c(o().box.secretKeyLength))}function p(e){return o().sign.keyPair.fromSecretKey(e)}function h(e,t){return o().sign.detached(e,t)}function f(e,t){return o().verify(e,t)}function d(e,t,r){return o().sign.detached.verify(e,t,r)}const g=o().sign.publicKeyLength,y=o().sign.secretKeyLength,m=32,b=32},834:(e,t,r)=>{"use strict";r.d(t,{x7:()=>i,i1:()=>s,Vj:()=>a,Xw:()=>c});var n=r(8800),o=r(4158);function i(e){return(t,r)=>{const n=[];for(const o of r)n.push(t[o].signTxn(e.sk));return Promise.resolve(n)}}function s(e){return(t,r)=>{const o=[];for(const i of r){const{blob:r}=(0,n.signLogicSigTransactionObject)(t[i],e);o.push(r)}return Promise.resolve(o)}}function a(e,t){return(r,n)=>{const i=[];for(const s of n){const n=r[s],a=[];for(const r of t){const{blob:t}=(0,o.PU)(n,e,r);a.push(t)}i.push((0,o.J6)(a))}return Promise.resolve(i)}}function c(e){return"object"==typeof e&&2===Object.keys(e).length&&"object"==typeof e.txn&&"function"==typeof e.signer}},9417:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_MIN_TX_FEE:()=>p,Transaction:()=>f,encodeUnsignedTransaction:()=>d,decodeUnsignedTransaction:()=>g,decodeSignedTransaction:()=>y,instantiateTxnIfNeeded:()=>m,default:()=>b});var n=r(7267),o=r.n(n),i=r(7116),s=r(3033),a=r(9404),c=r(413),u=r(1624),l=r(2486).Buffer;const p=1e3;function h(e,t,r){if(null==e)return;let n;if("string"==typeof e?n=l.from(e,"base64"):e.constructor===Uint8Array?n=l.from(e):l.isBuffer(e)&&(n=e),null==n||n.byteLength!==r)throw Error(`${t} must be a ${r} byte Uint8Array or Buffer or base64 string.`);return n}class f{constructor({...e}){this.name="Transaction",this.tag=l.from("TX");const t={type:u.iU.pay,flatFee:!1,nonParticipation:!1};if(void 0===e.type&&(e.type=t.type),void 0===e.flatFee&&(e.flatFee=t.flatFee),e.type===u.iU.keyreg&&void 0!==e.voteKey&&void 0===e.nonParticipation&&(e.nonParticipation=t.nonParticipation),void 0!==e.suggestedParams){const t=e;t.genesisHash=t.suggestedParams.genesisHash,t.fee=t.suggestedParams.fee,void 0!==t.suggestedParams.flatFee&&(t.flatFee=t.suggestedParams.flatFee),t.firstRound=t.suggestedParams.firstRound,t.lastRound=t.suggestedParams.lastRound,t.genesisID=t.suggestedParams.genesisID}const r=e;if(r.from=i.decodeAddress(r.from),void 0!==r.to&&(r.to=i.decodeAddress(r.to)),void 0!==r.closeRemainderTo&&(r.closeRemainderTo=i.decodeAddress(r.closeRemainderTo)),void 0!==r.assetManager&&(r.assetManager=i.decodeAddress(r.assetManager)),void 0!==r.assetReserve&&(r.assetReserve=i.decodeAddress(r.assetReserve)),void 0!==r.assetFreeze&&(r.assetFreeze=i.decodeAddress(r.assetFreeze)),void 0!==r.assetClawback&&(r.assetClawback=i.decodeAddress(r.assetClawback)),void 0!==r.assetRevocationTarget&&(r.assetRevocationTarget=i.decodeAddress(r.assetRevocationTarget)),void 0!==r.freezeAccount&&(r.freezeAccount=i.decodeAddress(r.freezeAccount)),void 0!==r.reKeyTo&&(r.reKeyTo=i.decodeAddress(r.reKeyTo)),void 0===r.genesisHash)throw Error("genesis hash must be specified and in a base64 string.");if(r.genesisHash=l.from(r.genesisHash,"base64"),void 0!==r.amount&&(!(Number.isSafeInteger(r.amount)||"bigint"==typeof r.amount&&r.amount<=BigInt("0xffffffffffffffff"))||r.amount<0))throw Error("Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(!Number.isSafeInteger(r.fee)||r.fee<0)throw Error("fee must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r.firstRound)||r.firstRound<0)throw Error("firstRound must be a positive number");if(!Number.isSafeInteger(r.lastRound)||r.lastRound<0)throw Error("lastRound must be a positive number");if(void 0!==r.extraPages&&(!Number.isInteger(r.extraPages)||r.extraPages<0||r.extraPages>3))throw Error("extraPages must be an Integer between and including 0 to 3");if(void 0!==r.assetTotal&&(!(Number.isSafeInteger(r.assetTotal)||"bigint"==typeof r.assetTotal&&r.assetTotal<=BigInt("0xffffffffffffffff"))||r.assetTotal<0))throw Error("Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(void 0!==r.assetDecimals&&(!Number.isSafeInteger(r.assetDecimals)||r.assetDecimals<0||r.assetDecimals>19))throw Error(`assetDecimals must be a positive number and smaller than ${19..toString()}`);if(void 0!==r.assetIndex&&(!Number.isSafeInteger(r.assetIndex)||r.assetIndex<0))throw Error("Asset index must be a positive number and smaller than 2^53-1");if(void 0!==r.appIndex&&(!Number.isSafeInteger(r.appIndex)||r.appIndex<0))throw Error("Application index must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalInts&&(!Number.isSafeInteger(r.appLocalInts)||r.appLocalInts<0))throw Error("Application local ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalByteSlices&&(!Number.isSafeInteger(r.appLocalByteSlices)||r.appLocalByteSlices<0))throw Error("Application local byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalInts&&(!Number.isSafeInteger(r.appGlobalInts)||r.appGlobalInts<0))throw Error("Application global ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalByteSlices&&(!Number.isSafeInteger(r.appGlobalByteSlices)||r.appGlobalByteSlices<0))throw Error("Application global byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appApprovalProgram&&r.appApprovalProgram.constructor!==Uint8Array)throw Error("appApprovalProgram must be a Uint8Array.");if(void 0!==r.appClearProgram&&r.appClearProgram.constructor!==Uint8Array)throw Error("appClearProgram must be a Uint8Array.");if(void 0!==r.appArgs){if(!Array.isArray(r.appArgs))throw Error("appArgs must be an Array of Uint8Array.");r.appArgs=r.appArgs.slice(),r.appArgs.forEach((e=>{if(e.constructor!==Uint8Array)throw Error("each element of AppArgs must be a Uint8Array.")}))}else r.appArgs=[];if(void 0!==r.appAccounts){if(!Array.isArray(r.appAccounts))throw Error("appAccounts must be an Array of addresses.");r.appAccounts=r.appAccounts.map((e=>i.decodeAddress(e)))}if(void 0!==r.appForeignApps){if(!Array.isArray(r.appForeignApps))throw Error("appForeignApps must be an Array of integers.");r.appForeignApps=r.appForeignApps.slice(),r.appForeignApps.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign application index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.appForeignAssets){if(!Array.isArray(r.appForeignAssets))throw Error("appForeignAssets must be an Array of integers.");r.appForeignAssets=r.appForeignAssets.slice(),r.appForeignAssets.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign asset index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.assetMetadataHash&&0!==r.assetMetadataHash.length){if("string"==typeof r.assetMetadataHash&&(r.assetMetadataHash=new Uint8Array(l.from(r.assetMetadataHash))),r.assetMetadataHash.constructor!==Uint8Array||32!==r.assetMetadataHash.byteLength)throw Error("assetMetadataHash must be a 32 byte Uint8Array or string.");r.assetMetadataHash.every((e=>0===e))&&(r.assetMetadataHash=void 0)}else r.assetMetadataHash=void 0;if(void 0!==r.note){if(r.note.constructor!==Uint8Array)throw Error("note must be a Uint8Array.")}else r.note=new Uint8Array(0);if(void 0!==r.lease){if(r.lease.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==r.lease.length)throw Error(`lease must be of length ${32..toString()}.`);r.lease.every((e=>0===e))&&(r.lease=new Uint8Array(0))}else r.lease=new Uint8Array(0);if(r.voteKey=h(r.voteKey,"voteKey",32),r.selectionKey=h(r.selectionKey,"selectionKey",32),r.stateProofKey=h(r.stateProofKey,"stateProofKey",64),r.nonParticipation&&(r.voteKey||r.selectionKey||r.voteFirst||r.stateProofKey||r.voteLast||r.voteKeyDilution))throw new Error("nonParticipation is true but participation params are present.");if(!r.nonParticipation&&(r.voteKey||r.selectionKey||r.stateProofKey||r.voteFirst||r.voteLast||r.voteKeyDilution)&&!(r.voteKey&&r.selectionKey&&r.voteFirst&&r.voteLast&&r.voteKeyDilution))throw new Error("online key registration missing at least one of the following fields: voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution");delete r.suggestedParams,Object.assign(this,c.removeUndefinedProperties(r)),r.flatFee||(this.fee*=this.estimateSize(),this.fee<p&&(this.fee=p)),this.group=void 0}get_obj_for_encoding(){if("pay"===this.type){const e={amt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:"pay",gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group};return void 0!==this.closeRemainderTo&&i.encodeAddress(this.closeRemainderTo.publicKey)!==i.ALGORAND_ZERO_ADDRESS_STRING&&(e.close=l.from(this.closeRemainderTo.publicKey)),void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.to&&(e.rcv=l.from(this.to.publicKey)),e.note.length||delete e.note,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.lx.length||delete e.lx,e.rekey||delete e.rekey,e}if("keyreg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,votekey:this.voteKey,selkey:this.selectionKey,sprfkey:this.stateProofKey,votefst:this.voteFirst,votelst:this.voteLast,votekd:this.voteKeyDilution};return e.note.length||delete e.note,e.lx.length||delete e.lx,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),this.nonParticipation&&(e.nonpart=!0),e.selkey||delete e.selkey,e.votekey||delete e.votekey,e.sprfkey||delete e.sprfkey,e.votefst||delete e.votefst,e.votelst||delete e.votelst,e.votekd||delete e.votekd,e}if("acfg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,caid:this.assetIndex,apar:{t:this.assetTotal,df:this.assetDefaultFrozen,dc:this.assetDecimals}};return void 0!==this.assetManager&&(e.apar.m=l.from(this.assetManager.publicKey)),void 0!==this.assetReserve&&(e.apar.r=l.from(this.assetReserve.publicKey)),void 0!==this.assetFreeze&&(e.apar.f=l.from(this.assetFreeze.publicKey)),void 0!==this.assetClawback&&(e.apar.c=l.from(this.assetClawback.publicKey)),void 0!==this.assetName&&(e.apar.an=this.assetName),void 0!==this.assetUnitName&&(e.apar.un=this.assetUnitName),void 0!==this.assetURL&&(e.apar.au=this.assetURL),void 0!==this.assetMetadataHash&&(e.apar.am=l.from(this.assetMetadataHash)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e.caid||delete e.caid,e.apar.t||e.apar.un||e.apar.an||e.apar.df||e.apar.m||e.apar.r||e.apar.f||e.apar.c||e.apar.au||e.apar.am||e.apar.dc?(e.apar.t||delete e.apar.t,e.apar.dc||delete e.apar.dc,e.apar.un||delete e.apar.un,e.apar.an||delete e.apar.an,e.apar.df||delete e.apar.df,e.apar.m||delete e.apar.m,e.apar.r||delete e.apar.r,e.apar.f||delete e.apar.f,e.apar.c||delete e.apar.c,e.apar.au||delete e.apar.au,e.apar.am||delete e.apar.am):delete e.apar,void 0===e.grp&&delete e.grp,e}if("axfer"===this.type){const e={aamt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),arcv:l.from(this.to.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,xaid:this.assetIndex};return void 0!==this.closeRemainderTo&&(e.aclose=l.from(this.closeRemainderTo.publicKey)),void 0!==this.assetRevocationTarget&&(e.asnd=l.from(this.assetRevocationTarget.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.aamt||delete e.aamt,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.aclose||delete e.aclose,e.asnd||delete e.asnd,e.rekey||delete e.rekey,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("afrz"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,faid:this.assetIndex,afrz:this.freezeState};return void 0!==this.freezeAccount&&(e.fadd=l.from(this.freezeAccount.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.afrz||delete e.afrz,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("appl"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,apid:this.appIndex,apan:this.appOnComplete,apls:{nui:this.appLocalInts,nbs:this.appLocalByteSlices},apgs:{nui:this.appGlobalInts,nbs:this.appGlobalByteSlices},apfa:this.appForeignApps,apas:this.appForeignAssets,apep:this.extraPages};return void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.appApprovalProgram&&(e.apap=l.from(this.appApprovalProgram)),void 0!==this.appClearProgram&&(e.apsu=l.from(this.appClearProgram)),void 0!==this.appArgs&&(e.apaa=this.appArgs.map((e=>l.from(e)))),void 0!==this.appAccounts&&(e.apat=this.appAccounts.map((e=>l.from(e.publicKey)))),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.apid||delete e.apid,e.apls.nui||delete e.apls.nui,e.apls.nbs||delete e.apls.nbs,e.apls.nui||e.apls.nbs||delete e.apls,e.apgs.nui||delete e.apgs.nui,e.apgs.nbs||delete e.apgs.nbs,e.apaa&&e.apaa.length||delete e.apaa,e.apgs.nui||e.apgs.nbs||delete e.apgs,e.apap||delete e.apap,e.apsu||delete e.apsu,e.apan||delete e.apan,e.apfa&&e.apfa.length||delete e.apfa,e.apas&&e.apas.length||delete e.apas,e.apat&&e.apat.length||delete e.apat,e.apep||delete e.apep,void 0===e.grp&&delete e.grp,e}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);if(t.name="Transaction",t.tag=l.from("TX"),t.genesisID=e.gen,t.genesisHash=l.from(e.gh),!(0,u.v8)(e.type))throw new Error(`Unrecognized transaction type: ${e.type}`);return t.type=e.type,t.fee=e.fee,t.firstRound=e.fv,t.lastRound=e.lv,t.note=new Uint8Array(e.note),t.lease=new Uint8Array(e.lx),t.from=i.decodeAddress(i.encodeAddress(new Uint8Array(e.snd))),void 0!==e.grp&&(t.group=l.from(e.grp)),void 0!==e.rekey&&(t.reKeyTo=i.decodeAddress(i.encodeAddress(new Uint8Array(e.rekey)))),"pay"===e.type?(t.amount=e.amt,t.to=i.decodeAddress(i.encodeAddress(new Uint8Array(e.rcv))),void 0!==e.close&&(t.closeRemainderTo=i.decodeAddress(i.encodeAddress(e.close)))):"keyreg"===e.type?(void 0!==e.votekey&&(t.voteKey=l.from(e.votekey)),void 0!==e.selkey&&(t.selectionKey=l.from(e.selkey)),void 0!==e.sprfkey&&(t.stateProofKey=l.from(e.sprfkey)),void 0!==e.votekd&&(t.voteKeyDilution=e.votekd),void 0!==e.votefst&&(t.voteFirst=e.votefst),void 0!==e.votelst&&(t.voteLast=e.votelst),void 0!==e.nonpart&&(t.nonParticipation=e.nonpart)):"acfg"===e.type?(void 0!==e.caid&&(t.assetIndex=e.caid),void 0!==e.apar&&(t.assetTotal=e.apar.t,t.assetDefaultFrozen=e.apar.df,void 0!==e.apar.dc&&(t.assetDecimals=e.apar.dc),void 0!==e.apar.m&&(t.assetManager=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.m)))),void 0!==e.apar.r&&(t.assetReserve=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.r)))),void 0!==e.apar.f&&(t.assetFreeze=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.f)))),void 0!==e.apar.c&&(t.assetClawback=i.decodeAddress(i.encodeAddress(new Uint8Array(e.apar.c)))),void 0!==e.apar.un&&(t.assetUnitName=e.apar.un),void 0!==e.apar.an&&(t.assetName=e.apar.an),void 0!==e.apar.au&&(t.assetURL=e.apar.au),void 0!==e.apar.am&&(t.assetMetadataHash=e.apar.am))):"axfer"===e.type?(void 0!==e.xaid&&(t.assetIndex=e.xaid),void 0!==e.aamt&&(t.amount=e.aamt),void 0!==e.aclose&&(t.closeRemainderTo=i.decodeAddress(i.encodeAddress(new Uint8Array(e.aclose)))),void 0!==e.asnd&&(t.assetRevocationTarget=i.decodeAddress(i.encodeAddress(new Uint8Array(e.asnd)))),t.to=i.decodeAddress(i.encodeAddress(new Uint8Array(e.arcv)))):"afrz"===e.type?(void 0!==e.afrz&&(t.freezeState=e.afrz),void 0!==e.faid&&(t.assetIndex=e.faid),t.freezeAccount=i.decodeAddress(i.encodeAddress(new Uint8Array(e.fadd)))):"appl"===e.type&&(void 0!==e.apid&&(t.appIndex=e.apid),void 0!==e.apan&&(t.appOnComplete=e.apan),void 0!==e.apls&&(void 0!==e.apls.nui&&(t.appLocalInts=e.apls.nui),void 0!==e.apls.nbs&&(t.appLocalByteSlices=e.apls.nbs)),void 0!==e.apgs&&(void 0!==e.apgs.nui&&(t.appGlobalInts=e.apgs.nui),void 0!==e.apgs.nbs&&(t.appGlobalByteSlices=e.apgs.nbs)),void 0!==e.apep&&(t.extraPages=e.apep),void 0!==e.apap&&(t.appApprovalProgram=new Uint8Array(e.apap)),void 0!==e.apsu&&(t.appClearProgram=new Uint8Array(e.apsu)),void 0!==e.apaa&&(t.appArgs=e.apaa.map((e=>new Uint8Array(e)))),void 0!==e.apat&&(t.appAccounts=e.apat.map((e=>i.decodeAddress(i.encodeAddress(new Uint8Array(e)))))),void 0!==e.apfa&&(t.appForeignApps=e.apfa),void 0!==e.apas&&(t.appForeignAssets=e.apas)),t}estimateSize(){return this.toByte().length+75}bytesToSign(){const e=this.toByte();return l.from(c.concatArrays(this.tag,e))}toByte(){return s.encode(this.get_obj_for_encoding())}rawSignTxn(e){const t=this.bytesToSign(),r=a.sign(t,e);return l.from(r)}signTxn(e){const t={sig:this.rawSignTxn(e),txn:this.get_obj_for_encoding()},r=a.keyPairFromSecretKey(e).publicKey;return i.encodeAddress(r)!==i.encodeAddress(this.from.publicKey)&&(t.sgnr=l.from(r)),new Uint8Array(s.encode(t))}rawTxID(){const e=this.toByte(),t=l.from(c.concatArrays(this.tag,e));return l.from(a.genericHash(t))}txID(){const e=this.rawTxID();return o().encode(e).slice(0,52)}addLease(e,t=0){let r;if(void 0!==e){if(e.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==e.length)throw Error(`lease must be of length ${32..toString()}.`);r=new Uint8Array(e)}else r=new Uint8Array(0);this.lease=r,0!==t&&(this.fee+=37*t)}addRekey(e,t=0){void 0!==e&&(this.reKeyTo=i.decodeAddress(e)),0!==t&&(this.fee+=37*t)}_getDictForDisplay(){const e={...this};return e.tag=e.tag.toString(),e.from=i.encodeAddress(e.from.publicKey),void 0!==e.to&&(e.to=i.encodeAddress(e.to.publicKey)),void 0!==e.freezeAccount&&(e.freezeAccount=i.encodeAddress(e.freezeAccount.publicKey)),void 0!==e.closeRemainderTo&&(e.closeRemainderTo=i.encodeAddress(e.closeRemainderTo.publicKey)),void 0!==e.assetManager&&(e.assetManager=i.encodeAddress(e.assetManager.publicKey)),void 0!==e.assetReserve&&(e.assetReserve=i.encodeAddress(e.assetReserve.publicKey)),void 0!==e.assetFreeze&&(e.assetFreeze=i.encodeAddress(e.assetFreeze.publicKey)),void 0!==e.assetClawback&&(e.assetClawback=i.encodeAddress(e.assetClawback.publicKey)),void 0!==e.assetRevocationTarget&&(e.assetRevocationTarget=i.encodeAddress(e.assetRevocationTarget.publicKey)),void 0!==e.reKeyTo&&(e.reKeyTo=i.encodeAddress(e.reKeyTo.publicKey)),e.genesisHash=e.genesisHash.toString("base64"),e}prettyPrint(){console.log(this._getDictForDisplay())}toString(){return JSON.stringify(this._getDictForDisplay())}}function d(e){const t=e.get_obj_for_encoding();return s.encode(t)}function g(e){const t=s.decode(e);return f.from_obj_for_encoding(t)}function y(e){const t=s.decode(e);return{...t,txn:f.from_obj_for_encoding(t.txn)}}function m(e){return e instanceof f?e:new f(e)}const b=f},2380:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.i});var n=r(1824)},7197:(e,t,r)=>{"use strict";var n;r.d(t,{Z:()=>o}),function(e){e.DEFAULT="default",e.SAFE="safe",e.MIXED="mixed",e.BIGINT="bigint"}(n||(n={}));const o=n},1624:(e,t,r)=>{"use strict";var n,o;function i(e){return e===n.pay||e===n.keyreg||e===n.acfg||e===n.axfer||e===n.afrz||e===n.appl}r.d(t,{iU:()=>n,v8:()=>i,hq:()=>o}),function(e){e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(n||(n={})),function(e){e[e.NoOpOC=0]="NoOpOC",e[e.OptInOC=1]="OptInOC",e[e.CloseOutOC=2]="CloseOutOC",e[e.ClearStateOC=3]="ClearStateOC",e[e.UpdateApplicationOC=4]="UpdateApplicationOC",e[e.DeleteApplicationOC=5]="DeleteApplicationOC"}(o||(o={}))},1824:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.iU});var n=r(1624)},413:(e,t,r)=>{"use strict";r.r(t),r.d(t,{parseJSON:()=>a,arrayEqual:()=>c,concatArrays:()=>u,removeUndefinedProperties:()=>l,isNode:()=>p});var n=r(4360),o=r.n(n),i=r(7197);const s=o()({useNativeBigInt:!0,strict:!0});function a(e,t){const r=t&&t.intDecoding?t.intDecoding:i.Z.DEFAULT;return s.parse(e,((e,t)=>{if(null!=t&&"object"==typeof t&&null==Object.getPrototypeOf(t)&&Object.setPrototypeOf(t,Object.prototype),"bigint"==typeof t){if("safe"===r&&t>Number.MAX_SAFE_INTEGER)throw new Error(`Integer exceeds maximum safe integer: ${t.toString()}. Try parsing with a different intDecoding option.`);return"bigint"===r||"mixed"===r&&t>Number.MAX_SAFE_INTEGER?t:Number(t)}return"number"==typeof t&&"bigint"===r&&Number.isInteger(t)?BigInt(t):t}))}function c(e,t){return e.length===t.length&&Array.from(e).every(((e,r)=>e===t[r]))}function u(...e){const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);let n=0;for(let t=0;t<e.length;t++)r.set(e[t],n),n+=e[t].length;return r}function l(e){const t={...e};return Object.keys(t).forEach((e=>{void 0===t[e]&&delete t[e]})),t}function p(){return"object"==typeof process&&"object"==typeof process.versions&&void 0!==process.versions.node}},5062:(e,t,r)=>{"use strict";async function n(e,t,r){const n=await e.status().do();if(void 0===n)throw new Error("Unable to get node status");const o=n["last-round"]+1;let i=o;for(;i<o+r;){let r=!1;try{const n=await e.pendingTransactionInformation(t).do();if(n["confirmed-round"])return n;if(n["pool-error"])throw r=!0,new Error(`Transaction Rejected: ${n["pool-error"]}`)}catch(e){if(r)throw e}await e.statusAfterBlock(i).do(),i+=1}throw new Error(`Transaction not confirmed after ${r} rounds`)}r.d(t,{K:()=>n})},4654:()=>{}},__webpack_module_cache__={};function __nested_webpack_require_407828__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__nested_webpack_require_407828__),r.exports}__nested_webpack_require_407828__.amdO={},__nested_webpack_require_407828__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_407828__.d(t,{a:t}),t},__nested_webpack_require_407828__.d=(e,t)=>{for(var r in t)__nested_webpack_require_407828__.o(t,r)&&!__nested_webpack_require_407828__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_407828__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__nested_webpack_require_407828__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_407828__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_407828__.r(__webpack_exports__),__nested_webpack_require_407828__.d(__webpack_exports__,{default:()=>r});var e=__nested_webpack_require_407828__(6608),t={};for(const r in e)"default"!==r&&(t[r]=()=>e[r]);__nested_webpack_require_407828__.d(__webpack_exports__,t);const r=e})(),__webpack_exports__})()},module.exports=t()},9343:(e,t,r)=>{var n={"./base.js":[6998,998],"./browse.js":[6892,892],"./connect.js":[2641,641],"./good-morning.js":[1117,512,701,810,117],"./grinder-queue.js":[2358,358],"./grinder.js":[6538,701,538],"./home.js":[1271,393,271],"./longboi.js":[4126,512,701,810,126],"./packs.js":[5298,393,468],"./wallet.js":[1049,49]};function o(e){if(!r.o(n,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=n[e],o=t[0];return Promise.all(t.slice(1).map(r.e)).then((()=>r(o)))}o.keys=()=>Object.keys(n),o.id=9343,e.exports=o},9699:()=>{},5234:()=>{},945:()=>{},7429:()=>{},2921:()=>{},7304:(e,t,r)=>{"use strict";r.d(t,{Sm:()=>Y,tf:()=>J,rM:()=>Z});var n=r(2912),o=Math.pow(2,31),i=Math.pow(2,7),s=Math.pow(2,14),a=Math.pow(2,21),c=Math.pow(2,28),u=Math.pow(2,35),l=Math.pow(2,42),p=Math.pow(2,49),h=Math.pow(2,56),f=Math.pow(2,63);const d={encode:function e(t,r,n){r=r||[];for(var i=n=n||0;t>=o;)r[n++]=255&t|128,t/=128;for(;-128&t;)r[n++]=255&t|128,t>>>=7;return r[n]=0|t,e.bytes=n-i+1,r},decode:function e(t,r){var n,o=0,i=0,s=r=r||0,a=t.length;do{if(s>=a)throw e.bytes=0,new RangeError("Could not decode varint");n=t[s++],o+=i<28?(127&n)<<i:(127&n)*Math.pow(2,i),i+=7}while(n>=128);return e.bytes=s-r,o},encodingLength:function(e){return e<i?1:e<s?2:e<a?3:e<c?4:e<u?5:e<l?6:e<p?7:e<h?8:e<f?9:10}},g=e=>[d.decode(e),d.decode.bytes],y=(e,t,r=0)=>(d.encode(e,t,r),t),m=e=>d.encodingLength(e),b=(new Uint8Array(0),e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")}),w=(e,t)=>{const r=t.byteLength,n=m(e),o=n+m(r),i=new Uint8Array(o+r);return y(e,i,0),y(r,i,n),i.set(t,o),new v(e,r,t,i)};class v{constructor(e,t,r,n){this.code=e,this.size=t,this.digest=r,this.bytes=n}}class A{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class x{constructor(e,t,r){if(this.name=e,this.prefix=t,void 0===t.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return _(this,e)}}class S{constructor(e){this.decoders=e}or(e){return _(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const _=(e,t)=>new S({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}});class E{constructor(e,t,r,n){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=n,this.encoder=new A(e,t,r),this.decoder=new x(e,t,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const T=({name:e,prefix:t,encode:r,decode:n})=>new E(e,t,r,n),B=({prefix:e,name:t,alphabet:r})=>{const{encode:n,decode:o}=function(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<e.length;o++){var i=e.charAt(o),s=i.charCodeAt(0);if(255!==r[s])throw new TypeError(i+" is ambiguous");r[s]=o}var a=e.length,c=e.charAt(0),u=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function p(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var n=0,o=0;e[t]===c;)n++,t++;for(var i=(e.length-t)*u+1>>>0,s=new Uint8Array(i);e[t];){var l=r[e.charCodeAt(t)];if(255===l)return;for(var p=0,h=i-1;(0!==l||p<o)&&-1!==h;h--,p++)l+=a*s[h]>>>0,s[h]=l%256>>>0,l=l/256>>>0;if(0!==l)throw new Error("Non-zero carry");o=p,t++}if(" "!==e[t]){for(var f=i-o;f!==i&&0===s[f];)f++;for(var d=new Uint8Array(n+(i-f)),g=n;f!==i;)d[g++]=s[f++];return d}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,n=0,o=0,i=t.length;o!==i&&0===t[o];)o++,r++;for(var s=(i-o)*l+1>>>0,u=new Uint8Array(s);o!==i;){for(var p=t[o],h=0,f=s-1;(0!==p||h<n)&&-1!==f;f--,h++)p+=256*u[f]>>>0,u[f]=p%a>>>0,p=p/a>>>0;if(0!==p)throw new Error("Non-zero carry");n=h,o++}for(var d=s-n;d!==s&&0===u[d];)d++;for(var g=c.repeat(r);d<s;++d)g+=e.charAt(u[d]);return g},decodeUnsafe:p,decode:function(e){var r=p(e);if(r)return r;throw new Error(`Non-${t} character`)}}}(r,t);return T({prefix:e,name:t,encode:n,decode:e=>b(o(e))})},k=({name:e,prefix:t,bitsPerChar:r,alphabet:n})=>T({prefix:t,name:e,encode:e=>((e,t,r)=>{const n="="===t[t.length-1],o=(1<<r)-1;let i="",s=0,a=0;for(let n=0;n<e.length;++n)for(a=a<<8|e[n],s+=8;s>r;)s-=r,i+=t[o&a>>s];if(s&&(i+=t[o&a<<r-s]),n)for(;i.length*r&7;)i+="=";return i})(e,n,r),decode:t=>((e,t,r,n)=>{const o={};for(let e=0;e<t.length;++e)o[t[e]]=e;let i=e.length;for(;"="===e[i-1];)--i;const s=new Uint8Array(i*r/8|0);let a=0,c=0,u=0;for(let t=0;t<i;++t){const i=o[e[t]];if(void 0===i)throw new SyntaxError(`Non-${n} character`);c=c<<r|i,a+=r,a>=8&&(a-=8,s[u++]=255&c>>a)}if(a>=r||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return s})(t,n,r,e)}),U=B({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),I=(B({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),k({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}));k({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),k({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),k({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),k({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),k({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),k({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),k({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),k({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});class C{constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:F,byteLength:F,code:z,version:z,multihash:z,bytes:z,_baseCache:F,asCID:F})}toV0(){if(0===this.version)return this;{const{code:e,multihash:t}=this;if(e!==N)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==P)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return C.createV0(t)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=w(e,t);return C.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&((t=this.multihash)===(r=e.multihash)||t.code===r.code&&t.size===r.size&&((e,t)=>{if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0})(t.bytes,r.bytes));var t,r}toString(e){const{bytes:t,version:r,_baseCache:n}=this;return 0===r?O(t,n,e||U.encoder):D(t,n,e||I.encoder)}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return M(/^0\.0/,H),!(!e||!e[j]&&e.asCID!==e)}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof C)return e;if(null!=e&&e.asCID===e){const{version:t,code:r,multihash:n,bytes:o}=e;return new C(t,r,n,o||L(t,r,n.bytes))}if(null!=e&&!0===e[j]){const{version:t,multihash:r,code:n}=e,o=(e=>{const t=b(e),[r,n]=g(t),[o,i]=g(t.subarray(n)),s=t.subarray(n+i);if(s.byteLength!==o)throw new Error("Incorrect length");return new v(r,o,s,t)})(r);return C.create(t,n,o)}return null}static create(e,t,r){if("number"!=typeof t)throw new Error("String codecs are no longer supported");switch(e){case 0:if(t!==N)throw new Error(`Version 0 CID must use dag-pb (code: ${N}) block encoding`);return new C(e,t,r,r.bytes);case 1:{const n=L(e,t,r.bytes);return new C(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return C.create(0,N,e)}static createV1(e,t){return C.create(1,e,t)}static decode(e){const[t,r]=C.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=C.inspectBytes(e),r=t.size-t.multihashSize,n=b(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");const o=n.subarray(t.multihashSize-t.digestSize),i=new v(t.multihashCode,t.digestSize,o,n);return[0===t.version?C.createV0(i):C.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0;const r=()=>{const[r,n]=g(e.subarray(t));return t+=n,r};let n=r(),o=N;if(18===n?(n=0,t=0):1===n&&(o=r()),0!==n&&1!==n)throw new RangeError(`Invalid CID version ${n}`);const i=t,s=r(),a=r(),c=t+a;return{version:n,codec:o,multihashCode:s,digestSize:a,multihashSize:c-i,size:c}}static parse(e,t){const[r,n]=R(e,t),o=C.decode(n);return o._baseCache.set(r,e),o}}const R=(e,t)=>{switch(e[0]){case"Q":{const r=t||U;return[U.prefix,r.decode(`${U.prefix}${e}`)]}case U.prefix:{const r=t||U;return[U.prefix,r.decode(e)]}case I.prefix:{const r=t||I;return[I.prefix,r.decode(e)]}default:if(null==t)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}},O=(e,t,r)=>{const{prefix:n}=r;if(n!==U.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=t.get(n);if(null==o){const o=r.encode(e).slice(1);return t.set(n,o),o}return o},D=(e,t,r)=>{const{prefix:n}=r,o=t.get(n);if(null==o){const o=r.encode(e);return t.set(n,o),o}return o},N=112,P=18,L=(e,t,r)=>{const n=m(e),o=n+m(t),i=new Uint8Array(o+r.byteLength);return y(e,i,0),y(t,i,n),i.set(r,o),i},j=Symbol.for("@ipld/js-cid/CID"),z={writable:!1,configurable:!1,enumerable:!0},F={writable:!1,enumerable:!1,configurable:!1},M=(e,t)=>{if(!e.test("0.0.0-dev"))throw new Error(t);console.warn(t)},H="CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n",G=({name:e,code:t,encode:r})=>new q(e,t,r);class q{constructor(e,t,r){this.name=e,this.code=t,this.encode=r}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?w(this.code,t):t.then((e=>w(this.code,e)))}throw Error("Unknown type, must be binary type")}}const K=e=>async t=>new Uint8Array(await crypto.subtle.digest(e,t)),$=G({name:"sha2-256",code:18,encode:K("SHA-256")});G({name:"sha2-512",code:19,encode:K("SHA-512")}),r(6905).Buffer;const V="#arc3";r(6905).Buffer,r(6905).Buffer,r(945),r(5894),r(7429);var W=r(2417);r(5234);var X=r(490);class Y{constructor(e,t){this.assetId=e,this.name,this.unitName,this.url,this.total,this.reserve,this.cid,t&&t.params&&(this.name=t.params.name,this.unitName=t.params["unit-name"],this.url=t.params.url,this.total=t.params.total,this.reserve=t.params.reserve),this.amount,this.imageUrl,this.imageUrlAlternate,this.metadata,this.isLoaded=!1}async load(e,t=!1){if(this.url){if(t)try{await this.loadWithPera()}catch(e){console.error(e)}(!this.imageUrl||this.imageUrl.startsWith("null")||this.imageUrl.startsWith("undefined"))&&(this.url.startsWith("template-ipfs://")?(await this.loadARC69(e),await this.loadARC19(e)):this.url.endsWith("#arc3")?await this.loadARC3(e):await this.loadARC69(e)),this.isLoaded=!0}}async loadWithPera(){const e=await X(`${W.Z.peraApiUrl}/assets/${this.assetId}`);if(200!==e.status)throw new Error(`Fetching pera error ${e.status}`);{const t=await e.json();if(t.collectible&&(this.imageUrl=t.collectible.primary_image+"?width=512",t.collectible?.traits?.length>0)){let e={};for(const r of t.collectible.traits)e[r.display_name]=r.display_value;this.metadata={properties:e}}}}async loadARC3(e){let t=this.url.split("//");t=t[1].split("#");const r=t[0];this.cid=r,await this.loadIpfsMetadata(r)}async loadARC19(e){const t=function(e,t){let r;r=e.endsWith(V)?e.slice(0,e.length-V.length):e;let o=r.split("://");if("template-ipfs"===o[0]&&o[1].startsWith("{ipfscid:")){o[0]="ipfs";const e=o[1].split(":");if(5!==e.length)return console.log("unknown ipfscid format"),r;const[,i,s,a,c]=e;if("sha2-256"!==c.split("}")[0])return console.log("unsupported hash:",c),r;if("raw"!==s&&"dag-pb"!==s)return console.log("unsupported codec:",s),r;if("reserve"!==a)return console.log("unsupported asa field:",a),r;let u;"raw"===s?u=85:"dag-pb"===s&&(u=112);const l=(0,n.decodeAddress)(t),p=w($.code,l.publicKey);return C.create(parseInt(i),u,p).toString()}}(this.url,this.reserve);this.cid=t,await this.loadIpfsMetadata(t)}b64DecodeUnicode(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}async loadARC69(e){if(this.url.startsWith("ipfs://")){let e=this.url.split("//");e=e[1].split("#");const t=e[0];this.cid=t,t&&(this.imageUrl=`${W.Z.primaryIpfsGatewayUrl}/${t}`,this.imageUrlAlternate=`${W.Z.secondaryIpfsGatewayUrl}/${t}`)}else(this.url.startsWith("http://")||this.url.startsWith("https://"))&&(this.imageUrl=this.url,this.imageUrlAlternate=this.url);let t=(await e.lookupAssetTransactions(this.assetId).txType("acfg").do()).transactions;t.sort(((e,t)=>t["round-time"]-e["round-time"]));for(const e of t)try{const t=e.note,r=this.b64DecodeUnicode(t),n=JSON.parse(r);if("arc69"===n.standard){this.metadata=n;break}}catch(e){}}async loadIpfsMetadata(e){let t;try{const r=await X(`${W.Z.primaryIpfsGatewayUrl}/${e}`);if(200!==r.status)throw new Error(`Fetching ipfs metadata error ${r.status} (primary gateaway)`);{const n=r.headers.get("Content-Type");if(n.includes("json"))t=await r.json();else{if(!n.includes("image"))throw new Error("Unknown file type for ARC19");this.imageUrl=`${W.Z.primaryIpfsGatewayUrl}/${e}`,this.imageUrlAlternate=`${W.Z.secondaryIpfsGatewayUrl}/${e}`}}}catch(r){console.error(r);const n=await X(`${W.Z.secondaryIpfsGatewayUrl}/${e}`);if(200!==n.status){let e=new Error(`Fetching ipfs metadata error ${n.status} (secondary gateway)`);throw e.status=n.status,e}{const r=n.headers.get("Content-Type");if(r.includes("json"))t=await n.json();else{if(!r.includes("image"))throw new Error("Unknown file type for ARC19");this.imageUrl=`${W.Z.primaryIpfsGatewayUrl}/${e}`,this.imageUrlAlternate=`${W.Z.secondaryIpfsGatewayUrl}/${e}`}}}if(t){const e=t.image.split("//");"ipfs:"===e[0]&&(this.imageUrl=`${W.Z.primaryIpfsGatewayUrl}/${e[1]}`,this.imageUrlAlternate=`${W.Z.secondaryIpfsGatewayUrl}/${e[1]}`)}this.metadata=t}handleImageError(e){e.addEventListener("error",(t=>{this.imageUrlAlternate&&e.src!==this.imageUrlAlternate&&(e.src=this.imageUrlAlternate)}))}}class J{constructor(e){this.collections=e,this.nfts,this.isLoaded=!1}async load(e){this.nfts=[];for(const t of this.collections)for(const r of t.addresses){let n;do{const o=await e.lookupAccountCreatedAssets(r).limit(W.Z.algoIndexerLimit).nextToken(n).do();for(const e of o.assets)e.params["unit-name"].startsWith(t.prefix)&&this.nfts.push(new Y(e.index,e));n=o["next-token"]}while(n)}this.isLoaded=!0}}class Z{constructor(e,t){this.walletAddress=e,this.collections=t,this.nfts,this.isLoaded=!1}async load(e){const t=new J(this.collections);let r;await t.load(e),this.nfts=[];const n=t.nfts.map((e=>e.assetId));do{const o=await e.lookupAccountAssets(this.walletAddress).limit(W.Z.algoIndexerLimit).nextToken(r).do();for(const e of o.assets)if(e.amount>0&&!e.deleted){const r=n.indexOf(e["asset-id"]);if(-1!==r){const n=t.nfts[r];n.amount=e.amount,this.nfts.push(n)}}r=o["next-token"]}while(r);this.isLoaded=!0}}},2417:(e,t,r)=>{"use strict";r.d(t,{Z:()=>n});const n={algodUrl:"https://mainnet-api.algonode.cloud",algoIndexerUrl:"https://mainnet-idx.algonode.cloud",algodUrl:"https://node.algoexplorerapi.io",algoIndexerUrl:"https://algoindexer.algoexplorerapi.io",algoIndexerLimit:1e3,peraApiUrl:"https://mainnet.api.perawallet.app/v1",primaryIpfsGatewayUrl:"https://ipfs.algonode.xyz/ipfs",secondaryIpfsGatewayUrl:"https://ipfs.io/ipfs"}},5190:(e,t,r)=>{"use strict";r.d(t,{Z:()=>n});const n=[{name:"bathers",displayName:"Bathers",addresses:["BATHK3EDDYAYMYZLOMOAH2RLWZI5PS5NJ25N3JUON7A3U47SD6CH5JXWRI"],prefix:"BATH"},{name:"caffeineCards",displayName:"Caffeine Cards",addresses:["CARDRQETHKYFMO6LMGPWJW54KV24NDTRNIID6LZBT3IIXMTK5S7QCUMUAM"],prefix:"CARD"},{name:"coffeebits",displayName:"CoffeeBits Originals",addresses:["CAFEPXFFD3NYSCYWAMZQ75BOLZYACDW37NIXQYJVMHRMRZILAQOVM37BEY"],prefix:"COFF"}]}},__webpack_module_cache__={},leafPrototypes,getProto,inProgress,dataWebpackPrefix;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.loaded=!0,r.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var r=Object.create(null);__webpack_require__.r(r);var n={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var o=2&t&&e;"object"==typeof o&&!~leafPrototypes.indexOf(o);o=getProto(o))Object.getOwnPropertyNames(o).forEach((t=>n[t]=()=>e[t]));return n.default=()=>e,__webpack_require__.d(r,n),r},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.f={},__webpack_require__.e=e=>Promise.all(Object.keys(__webpack_require__.f).reduce(((t,r)=>(__webpack_require__.f[r](e,t),t)),[])),__webpack_require__.u=e=>e+"."+{49:"20af0a61f978dbff718d",72:"d7c7279769af05f9e28a",117:"724988d3fed4c9bda17a",126:"6cb0fc97cd0399f01a06",271:"f5c1c6d98afcebd14e27",298:"6432b95fbd2ce549a8f2",339:"ab656fdca46bd2c83f7d",358:"34c547a625638f39dec5",393:"151d306aff7d169f0ff7",468:"467b5ad8151e6181c28a",512:"de40cb5c2d1399040962",538:"598d7388d6bfa60f3c7b",601:"9c6c06fed26cc0f9c4a8",641:"01db23e0a958012de526",701:"f746ae6e3da92d761618",764:"b332da64e3c30d155aaf",810:"3431b1b2f6d215c4a4f8",892:"a39f6617105dffd2362f",998:"fa56e9f4eb0e600b825f"}[e]+".js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),inProgress={},dataWebpackPrefix="studio:",__webpack_require__.l=(e,t,r,n)=>{if(inProgress[e])inProgress[e].push(t);else{var o,i;if(void 0!==r)for(var s=document.getElementsByTagName("script"),a=0;a<s.length;a++){var c=s[a];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==dataWebpackPrefix+r){o=c;break}}o||(i=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,__webpack_require__.nc&&o.setAttribute("nonce",__webpack_require__.nc),o.setAttribute("data-webpack",dataWebpackPrefix+r),o.src=e),inProgress[e]=[t];var u=(t,r)=>{o.onerror=o.onload=null,clearTimeout(l);var n=inProgress[e];if(delete inProgress[e],o.parentNode&&o.parentNode.removeChild(o),n&&n.forEach((e=>e(r))),t)return t(r)},l=setTimeout(u.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=u.bind(null,o.onerror),o.onload=u.bind(null,o.onload),i&&document.head.appendChild(o)}},__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})(),(()=>{var e={179:0};__webpack_require__.f.j=(t,r)=>{var n=__webpack_require__.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var i=__webpack_require__.p+__webpack_require__.u(t),s=new Error;__webpack_require__.l(i,(r=>{if(__webpack_require__.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",s.name="ChunkLoadError",s.type=o,s.request=i,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[i,s,a]=r,c=0;if(i.some((t=>0!==e[t]))){for(n in s)__webpack_require__.o(s,n)&&(__webpack_require__.m[n]=s[n]);a&&a(__webpack_require__)}for(t&&t(r);c<i.length;c++)o=i[c],__webpack_require__.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self.webpackChunkstudio=self.webpackChunkstudio||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var __webpack_exports__={};(()=>{"use strict";var e=__webpack_require__(4050),t=__webpack_require__(2417),r=__webpack_require__(5190),n=__webpack_require__(7304);const o=917962457,i=[{name:"connect",file:"connect.js",className:"Connect",url:null},{name:"home",file:"home.js",className:"Home"},{name:"wallet",file:"wallet.js",className:"Wallet"},{name:"grinder",file:"grinder.js",className:"Grinder"},{name:"grinder-queue",file:"grinder-queue.js",className:"GrinderQueue"},{name:"good-morning",file:"good-morning.js",className:"GoodMorning"},{name:"longbois",file:"longboi.js",className:"LongBoi"},{name:"cards",file:"browse.js",className:"Browse",args:["caffeineCards"]},{name:"bathers",file:"browse.js",className:"Browse",args:["bathers"]},{name:"packs",file:"packs.js",className:"Packs"}];let s,a;const c=new e.Algodv2("",t.Z.algodUrl,443),u=new e.Indexer("",t.Z.algoIndexerUrl,443),l=new class{constructor(e,t,r=""){this.connectedCallback=e,this.disconnectedCallback=t,this.ui=document.createElement("div"),this.wallet,this.walletType,this.walletAddress,this.nfd,this.btnClass=r,this.loadState().then((()=>{this.walletType&&this.walletAddress?(this.connectedCallback(),this.loadNfd()):this.disconnectedCallback(),this.updateUI()}))}updateUI(){this.ui.textContent="",this.walletType&&this.walletAddress?this.displayConnectedUI():this.displayConnectUI()}displayConnectUI(){this.ui.innerHTML=`\n    <button class="btn-myalgo ${this.btnClass}" id="buttonMyAlgo">MyAlgo</button>\n    <button class="btn-pera ${this.btnClass}" id="buttonPera">Pera</button>\n    `,this.ui.querySelector("#buttonMyAlgo").addEventListener("click",this.connectMyAlgo.bind(this)),this.ui.querySelector("#buttonPera").addEventListener("click",this.connectPera.bind(this))}displayConnectedUI(){let e;e=this.nfd?this.nfd:this.walletAddress,this.ui.innerHTML=`\n    <span style="word-break: break-all;">${e}</span>\n    <a href="#" id="buttonDisconnect"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">\n    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>\n    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>\n  </svg></a>\n    `,this.ui.querySelector("#buttonDisconnect").addEventListener("click",this.disconnect.bind(this))}async loadState(){if(this.walletType=localStorage.getItem("wallet-connect-type"),this.walletAddress=localStorage.getItem("wallet-connect-address"),"myalgo"===this.walletType&&this.walletAddress){const e=await Promise.all([__webpack_require__.e(764),__webpack_require__.e(72)]).then(__webpack_require__.t.bind(__webpack_require__,1072,19));this.wallet=new e.default}else if("pera"===this.walletType&&this.walletAddress){const{PeraWalletConnect:e}=await Promise.all([__webpack_require__.e(764),__webpack_require__.e(339),__webpack_require__.e(601)]).then(__webpack_require__.t.bind(__webpack_require__,2339,19));this.wallet=new e;try{const e=await this.wallet.reconnectSession();e?.[0]&&(this.walletAddress=e[0],this.saveState())}catch(e){console.error(e),this.wallet.disconnect()}}}saveState(){localStorage.setItem("wallet-connect-type",this.walletType),localStorage.setItem("wallet-connect-address",this.walletAddress)}clearState(){this.nfd=null,this.wallet=null,this.walletType=null,this.walletAddress=null,localStorage.removeItem("wallet-connect-type"),localStorage.removeItem("wallet-connect-address")}async loadNfd(){if(this.walletAddress){const e=await fetch("https://api.nf.domains/nfd/address?address="+this.walletAddress+"&limit=1&view=thumbnail");if(200===e.status){const t=await e.json();t.length>0&&t[0].caAlgo&&t[0].caAlgo.includes(this.walletAddress)&&(this.nfd=t[0].name,this.updateUI())}}}async connectMyAlgo(){const e=await Promise.all([__webpack_require__.e(764),__webpack_require__.e(72)]).then(__webpack_require__.t.bind(__webpack_require__,1072,19));this.wallet=new e.default;const t=await this.wallet.connect({shouldSelectOneAccount:!0,openManager:!0});t[0]&&(this.walletType="myalgo",this.walletAddress=t[0].address,this.saveState(),this.updateUI(),this.loadNfd(),this.connectedCallback())}async connectPera(){const{PeraWalletConnect:e}=await Promise.all([__webpack_require__.e(764),__webpack_require__.e(339),__webpack_require__.e(601)]).then(__webpack_require__.t.bind(__webpack_require__,2339,19));this.wallet=new e,this.wallet.connector?.killSession(),await this.wallet.disconnect();try{const e=await this.wallet.connect();e[0]&&(this.walletType="pera",this.walletAddress=e[0],this.saveState(),this.updateUI(),this.loadNfd(),this.wallet.connector?.on("disconnect",this.disconnect.bind(this)),this.connectedCallback())}catch(e){"CONNECT_MODAL_CLOSED"!==e?.data?.type&&alert(e.message)}}disconnect(){"pera"===this.walletType&&this.wallet.disconnect(),this.clearState(),this.updateUI(),this.disconnectedCallback()}async signTransactions(t){let r;if("myalgo"===this.walletType){const n=[];for(const r of t)(0,e.encodeAddress)(r.from.publicKey)===this.walletAddress&&n.push(r.toByte());try{r=await this.wallet.signTransaction(n),r=r.map((e=>e.blob))}catch(e){throw e}}else{if("pera"!==this.walletType)throw new Error("No wallet connected");{const n=t.map((t=>({txn:t,signers:[(0,e.encodeAddress)(t.from.publicKey)]})));try{r=await this.wallet.signTransaction([n])}catch(e){throw e}}}return r}}((function(){f()}),(function(){p=null,d("connect")}));let p;if(window.onpopstate=f,t.Z.algodUrl.includes("testnet")||t.Z.algoIndexerUrl.includes("testnet")){const e=document.createElement("div");e.textContent="TESTNET",e.className="text-center bg-warning text-dark",document.querySelector("body").prepend(e)}function h(){var e=document.getElementsByTagName("a");for(const t of e)t.dataset.pageLink&&t.addEventListener("click",g,!1)}async function f(){const e=window.location.search,t=new URLSearchParams(e);for(const e of t.keys())if(i.filter((t=>t.name===e)).length>0)return void await d(t.toString());d("home")}async function d(e){const t=e.split("&")[0].split("=")[0];if("connect"!=t&&!l.walletAddress)return d("connect");const f=document.getElementById("super-container"),g=document.getElementById("content");if("connect"!==t&&!p&&l.walletAddress){f.className="",g.innerHTML='\n        <div class="container vh-100 text-center d-flex flex-wrap">\n        <div style="margin: auto;" class="text-center">\n        <img src="assets/loading.png" width="128" height="128"><br>\n        Sip sip sip<br>\n        Loading your pixel caffeine...<br>\n        <span id="loading-percent"></span>\n        </div>\n        \n      </div>\n      ';try{const e=g.querySelector("#loading-percent");await(m=t=>{e.textContent=`${t.toFixed(0)}%`},new Promise((async(e,t)=>{p={};for(const e of r.Z)p[e.name]=new n.rM(l.walletAddress,[e]),await p[e.name].load(u);let o=0,i=0;for(const e in p)o+=p[e].nfts.length;if(0!==o)for(const r in p)for(const n of p[r].nfts)n.load(u).then((()=>{i++,m(i/o*100),i===o&&e()})).catch((e=>{console.log(e.status),t(e)}));else e()})))}catch(e){console.error(e)}if(!p||!(p.bathers.nfts.length>0||p.coffeebits.nfts.length))return alert("You need to own at least one NFT from the collection to access this area."),l.disconnect(),!0;await async function(){const e=l.walletAddress,t=e.substring(0,6)+"..."+e.substring(e.length-6,e.length),r=document.getElementById("wallet-address");if(r.textContent=t,document.getElementById("wallet-disconnect").addEventListener("click",y,!1),p.bathers.nfts.length>0){const e=p.bathers.nfts[0].imageUrl;document.getElementById("wallet-img").style.backgroundImage=`url(${e})`}try{const t=await fetch(`https://api.nf.domains/nfd/address?address=${e}`);if(200===t.status){const e=await t.json();r.textContent=e[0].name}}catch(e){console.error(e)}await async function(){try{const e=await c.accountAssetInformation(l.walletAddress,o).do();document.querySelector("#token-balance").innerHTML=`${e["asset-holding"].amount} $ROAR`}catch(e){404===e.status?document.querySelector("#token-balance").innerHTML='<a href="https://atomixwap.xyz/?optin=917962457">Opt-in $ROAR</a>':console.error(e)}}()}()}var m;g.innerHTML="Loading page...";let b=i.filter((e=>e.name===t));if(b[0]){a=null;const r=(await __webpack_require__(9343)(`./${b[0].file}`))[b[0].className],n=b[0].args?b[0].args:[];if("connect"!=t&&s!==t){let t=e;"="===t.substring(t.length-1,t.length)&&(t=t.substring(0,t.length-1)),window.history.pushState("","",`?${t}`)}if(a=new r(l,p,c,u,...n),!a)return!1;a.ui.id=`page-${t}`,g.textContent="",g.append(a.ui),s=t;const o=document.querySelector("nav"),i=document.querySelector("footer");return"connect"===t?(f.className="container-fluid d-flex justify-content-center align-items-center page-connect",o.hidden=!0,i.hidden=!0):(f.className="",o.hidden=!1,i.hidden=!1),h(),!0}return alert(`Error loading page ${t}`),!1}function g(e){d(e.currentTarget.dataset.pageLink),e.preventDefault()}function y(e){l.disconnect(),e.preventDefault()}window.enableNavigationLinks=h})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QSxFQUFFLElBQUlBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlxRCxFQUFFckQsRUFBRSxHQUFHQSxFQUFFLElBQUlBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlTLEVBQUVULEVBQUUsR0FBR0EsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsSUFBSUEsRUFBRSxJQUFJc0QsRUFBRXRELEVBQUUsR0FBR0EsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsSUFBSUEsRUFBRSxJQUFJTSxFQUFFTixFQUFFLEdBQUdBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsSUFBSTJELEVBQUUzRCxFQUFFLEdBQUdBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsSUFBSUgsR0FBRzJCLEVBQUV4QixFQUFFLEdBQUdBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsTUFBTUssR0FBRyxFQUFFZ0QsSUFBSSxJQUFJbkQsR0FBR2dDLEVBQUVsQyxFQUFFLEdBQUdBLEVBQUUsSUFBSUEsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsTUFBTXFELEdBQUcsRUFBRWhELElBQUksSUFBSUwsRUFBRSxJQUFJSCxFQUFFRyxFQUFFLElBQUlFLEVBQUVGLEVBQUUsS0FBS0gsRUFBRUcsRUFBRSxLQUFLRSxFQUFFRixFQUFFLEtBQUtILEVBQUVHLEVBQUUsS0FBS0UsRUFBRUYsRUFBRSxLQUFLSCxFQUFFRyxFQUFFLEtBQUtFLEVBQUVGLEVBQUUsS0FBS0gsRUFBRUcsRUFBRSxLQUFLRSxFQUFFTCxFQUFFTyxHQUFHSyxHQUFHLEVBQUU2QyxJQUFJLElBQUlwRCxFQUFFdUIsR0FBRzZCLEdBQUcsRUFBRTdDLElBQUksSUFBSVQsRUFBRSxJQUFJSCxFQUFFRyxFQUFFLElBQUlFLEVBQUVGLEVBQUUsS0FBS0gsRUFBRUcsRUFBRSxLQUFLRSxFQUFFRixFQUFFLEtBQUtILEVBQUVHLEVBQUUsS0FBS0UsRUFBRUYsRUFBRSxLQUFLSCxF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V0FBVzdpQixLQUFLOGlCLElBQUksVUFBVTlpQixLQUFLK2lCLElBQUksV0FBVy9pQixLQUFLZ2pCLElBQUksV0FBV2hqQixLQUFLaWpCLElBQUksV0FBV2pqQixLQUFLa2pCLElBQUksV0FBV2xqQixLQUFLbWpCLElBQUksV0FBV25qQixLQUFLb2pCLElBQUksV0FBV3BqQixLQUFLcWpCLElBQUksV0FBV3JqQixLQUFLc2pCLElBQUksVUFBVXRqQixLQUFLdWpCLElBQUksVUFBVXZqQixLQUFLd2pCLElBQUksVUFBVXhqQixLQUFLeWpCLElBQUksWUFBWSxLQUFLeG5CLEdBQUcrRCxLQUFLMGlCLElBQUksV0FBVzFpQixLQUFLMmlCLElBQUksVUFBVTNpQixLQUFLNGlCLElBQUksV0FBVzVpQixLQUFLNmlCLElBQUksV0FBVzdpQixLQUFLOGlCLElBQUksVUFBVTlpQixLQUFLK2lCLElBQUksVUFBVS9pQixLQUFLZ2pCLElBQUksV0FBV2hqQixLQUFLaWpCLElBQUksV0FBV2pqQixLQUFLa2pCLElBQUksVUFBVWxqQixLQUFLbWpCLElBQUksV0FBV25qQixLQUFLb2pCLElBQUksV0FBV3BqQixLQUFLcWpCLElBQUksU0FBU3JqQixLQUFLc2pCLElBQUksV0FBV3RqQixLQUFLdWpCLElBQUksV0FBV3ZqQixLQUFLd2pCLElBQUksVUFBVXhqQixLQUFLeWpCLElBQUksYUFBYXpqQixLQUFLMGlCLElBQUksV0FBVzFpQixLQUFLMmlCLElBQUksV0FBVzNpQixLQUFLNGlCLElBQUksV0FBVzVpQixLQUFLNmlCLElBQUksV0FBVzdpQixLQUFLOGlCLElBQUksV0FBVzlpQixLQUFLK2lCLElBQUksV0FBVy9pQixLQUFLZ2pCLElBQUksV0FBV2hqQixLQUFLaWpCLElBQUksV0FBV2pqQixLQUFLa2pCLElBQUksV0FBV2xqQixLQUFLbWpCLElBQUksV0FBV25qQixLQUFLb2pCLElBQUksV0FBV3BqQixLQUFLcWpCLElBQUksVUFBVXJqQixLQUFLc2pCLElBQUksVUFBVXRqQixLQUFLdWpCLElBQUksV0FBV3Zq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QUFJRyxFQUFFSCxHQUFHLEdBQUcsSUFBSUcsRUFBRUgsR0FBRyxHQUFHLElBQUlHLEVBQUVILEdBQUcsRUFBRSxJQUFJRyxFQUFFSCxHQUFHLEVBQUUsSUFBSUcsRUFBRSxHQUFHSCxHQUFHRyxFQUFFRixHQUFHLEdBQUcsSUFBSUUsRUFBRUYsR0FBRyxHQUFHLElBQUlFLEVBQUVGLEdBQUcsR0FBRyxJQUFJRSxFQUFFRixHQUFHLEdBQUcsSUFBSUUsRUFBRUYsR0FBRyxHQUFHLElBQUlFLEVBQUVGLEdBQUcsRUFBRSxJQUFJRSxFQUFFRixHQUFHLEVBQUUsSUFBSUUsRUFBRSxHQUFHRixHQUFHRSxFQUFFbUIsR0FBRyxHQUFHLElBQUluQixFQUFFbUIsR0FBRyxHQUFHLElBQUluQixFQUFFbUIsR0FBRyxHQUFHLElBQUluQixFQUFFbUIsR0FBRyxHQUFHLElBQUluQixFQUFFbUIsR0FBRyxHQUFHLElBQUluQixFQUFFbUIsR0FBRyxFQUFFLElBQUluQixFQUFFbUIsR0FBRyxFQUFFLElBQUluQixFQUFFLEdBQUdtQixHQUFHbkIsRUFBRUQsR0FBRyxHQUFHLElBQUlDLEVBQUVELEdBQUcsR0FBRyxJQUFJQyxFQUFFRCxHQUFHLEdBQUcsSUFBSUMsRUFBRUQsR0FBRyxHQUFHLElBQUlDLEVBQUVELEdBQUcsR0FBRyxJQUFJQyxFQUFFRCxHQUFHLEVBQUUsSUFBSUMsRUFBRUQsR0FBRyxFQUFFLElBQUlDLEVBQUUsR0FBR0QsR0FBRyxPQUFPRyxHQUFHLE1BQU00QixHQUFHOUIsRUFBRStDLEdBQUcsR0FBRyxJQUFJL0MsRUFBRStDLEdBQUcsR0FBRyxJQUFJL0MsRUFBRStDLEdBQUcsR0FBRyxJQUFJL0MsRUFBRStDLEdBQUcsR0FBRyxJQUFJL0MsRUFBRStDLEdBQUcsR0FBRyxJQUFJL0MsRUFBRStDLEdBQUcsRUFBRSxJQUFJL0MsRUFBRStDLEdBQUcsRUFBRSxJQUFJL0MsRUFBRSxHQUFHK0MsSUFBSTdDLEdBQUcsTUFBTTRCLEdBQUc5QixFQUFFRyxHQUFHLEdBQUcsSUFBSUgsRUFBRUcsR0FBRyxHQUFHLElBQUlILEVBQUVHLEdBQUcsR0FBRyxJQUFJSCxFQUFFRyxHQUFHLEdBQUcsSUFBSUgsRUFBRUcsR0FBRyxHQUFHLElBQUlILEVBQUVHLEdBQUcsRUFBRSxJQUFJSCxFQUFFRyxHQUFHLEVBQUUsSUFBSUgsRUFBRSxHQUFHRyxHQUFHSCxFQUFFZ0QsR0FBRyxHQUFHLElBQUloRCxFQUFFZ0QsR0FBRyxHQUFHLElBQUloRCxFQUFFZ0QsR0FBRyxHQUFHLElBQUloRCxFQUFFZ0QsR0FBRyxHQUFHLElBQUloRCxFQUFFZ0QsR0FBRyxHQUFHLElBQUloRCxFQUFFZ0QsR0FBRyxFQUFFLElBQUloRCxFQUFFZ0QsR0FBRyxFQUFFLElBQUloRCxFQUFFLEdBQUdnRCxHQUFHaEQsRUFBRXFELEdBQUcsR0FBRyxJQUFJckQsRUFBRXFELEdBQUcsR0FBRyxJQUFJckQsRUFBRXFELEdBQUcsR0FBRyxJQUFJckQsRUFBRXFELEdBQUcsR0FBRyxJQUFJckQsRUFBRXFELEdBQUcsR0FBRyxJQUFJckQsRUFBRXFELEdBQUcsRUFBRSxJQUFJckQsRUFBRXFELEdBQUcsRUFBRSxJQUFJckQsRUFBRSxHQUFHcUQsR0FBR3JELEVBQUVrQixHQUFHLEdBQUcsSUFBSWxCLEVBQUVrQixHQUFHLEdBQUcsSUFBSWxCLEVBQUVrQixHQUFHLEdBQUcsSUFBSWxCLEVBQUVrQixHQUFHLEdBQUcsSUFBSWxCLEVBQUVrQixHQUFHLEdBQUcsSUFBSWxCLEVBQUVrQixHQUFHLEVBQUUsSUFBSWxCLEVBQUVrQixHQUFHLEVBQUUsSUFBSWxCLEVBQUUsR0FBR2tCLElBQUksS0FBS2hCLElBQUk0QixHQUFHOUIsRUFBRTRCLEdBQUcsR0FBRyxJQUFJNUIsRUFBRTRCLEdBQUcsR0FBRyxJQUFJNUIsRUFBRTRCLEdBQUcsR0FBRyxJQUFJNUIsRUFBRTRCLEdBQUcsR0FBRyxJQUFJNUIsRUFBRTRCLEdBQUcsR0FBRyxJQUFJNUIsRUFBRTRCLEdBQUcsRUFBRSxJQUFJNUIsRUFBRTRCLEdBQUcsRUFBRSxJQUFJNUIsRUFBRSxHQUFHNEIsR0FBRzVCLEVBQUVJLEdBQUcsR0FBRyxJQUFJSixFQUFFSSxHQUFHLEdBQUcsSUFBSUosRUFBRUksR0FBRyxHQUFHLElBQUlKLEVBQUVJLEdBQUcsR0FBRyxJQUFJSixFQUFFSSxHQUFHLEdBQUcsSUFBSUosRUFBRUksR0FBRyxFQUFFLElBQUlKLEVBQUVJLEdBQUcsRUFBRSxJQUFJSixFQUFFLEdBQUdJLEdBQUdKLEVBQUUrRCxHQUFHLEdBQUcsSUFBSS9ELEVBQUUrRCxHQUFHLEdBQUcsSUFBSS9ELEVBQUUrRCxHQUFHLEdBQUcsSUFBSS9ELEVBQUUrRCxHQUFHLEdBQUcsSUFBSS9ELEVBQUUrRCxHQUFHLEdBQUcsSUFBSS9ELEVBQUUrRCxHQUFHLEVBQUUsSUFBSS9ELEVBQUUrRCxHQUFHLEVBQUUsSUFBSS9ELEVBQUUsR0FBRytELEdBQUcvRCxFQUFFNkIsR0FBRyxHQUFHLElBQUk3QixFQUFFNkIsR0FBRyxHQUFHLElBQUk3QixFQUFFNkIsR0FBRyxHQUFHLElBQUk3QixFQUFFNkIsR0FBRyxHQUFHLElBQUk3QixFQUFFNkIsR0FBRyxHQUFHLElBQUk3QixFQUFFNkIsR0FBRyxFQUFFLElBQUk3QixFQUFFNkIsR0FBRyxFQUFFLElBQUk3QixFQUFFLEdBQUc2QixJQUFJQyxDQUFDLEVBQUVDLEVBQUVmLFVBQVV1SCxTQUFTeEcsRUFBRWYsVUFBVStpQixJQUFJaGlCLEVBQUVmLFVBQVV1aEIsT0FBTyxXQUFXOWUsS0FBS3FnQixXQUFXLElBQUlwa0IsRUFBRStELEtBQUswaUIsSUFBSTVtQixFQUFFa0UsS0FBSzJpQixJQUFJeG1CLEVBQUU2RCxLQUFLNGlCLElBQUl4bUIsRUFBRTRELEtBQUs2aUIsSUFBSXhtQixFQUFFMkQsS0FBSzhpQixJQUFJcGxCLEVBQUVzQyxLQUFLK2lCLElBQUl6bUIsRUFBRTBELEtBQUtnakIsSUFBSTFqQixFQUFFVSxLQUFLaWpCLElBQUl2bUIsRUFBRXNELEtBQUtrakIsSUFBSTNqQixFQUFFUyxLQUFLbWpCLElBQUk1bUIsRUFBRXlELEtBQUtvakIsSUFBSXhqQixFQUFFSSxLQUFLcWpCLElBQUk1bEIsRUFBRXVDLEtBQUtzakIsSUFBSW5sQixFQUFFNkIsS0FBS3VqQixJQUFJNW1CLEVBQUVxRCxLQUFLd2pCLElBQUlsakIsRUFBRU4sS0FBS3lqQixJQUFJcmxCLEVBQUU0QixLQUFLaWhCLEtBQUt4a0IsRUFBRSxDQUFDUixHQUFHLEdBQUcsSUFBSUEsR0FBRyxHQUFHLElBQUlBLEdBQUcsRUFBRSxJQUFJLElBQUlBLEVBQUVILEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsRUFBRUssR0FBRyxHQUFHLElBQUlBLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEVBQUUsSUFBSSxJQUFJQSxFQUFFQyxHQUFHLEdBQUcsSUFBSUEsR0FBRyxHQUFHLElBQUlBLEdBQUcsRUFBRSxJQUFJLElBQUlBLEVBQUVDLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsRUFBRXFCLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsRUFBRXBCLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsR0FBRyxPQUFPOEIsR0FBRyxLQUFLM0IsRUFBRW1DLEtBQUtVLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsR0FBR2xCLEdBQUcsS0FBSzNCLEVBQUVtQyxLQUFLbEMsR0FBRyxHQUFHLElBQUlBLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEVBQUUsSUFBSSxJQUFJQSxFQUFFNkMsR0FBRyxHQUFHLElBQUlBLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEVBQUUsSUFBSSxJQUFJQSxFQUFFaEQsR0FBRyxHQUFHLElBQUlBLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEVBQUUsSUFBSSxJQUFJQSxFQUFFcUQsR0FBRyxHQUFHLElBQUlBLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEVBQUUsSUFBSSxJQUFJQSxHQUFHLEtBQUt4QixHQUFHM0IsRUFBRW1DLEtBQUtuQixHQUFHLEdBQUcsSUFBSUEsR0FBRyxHQUFHLElBQUlBLEdBQUcsRUFBRSxJQUFJLElBQUlBLEVBQUVVLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsRUFBRXhCLEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsRUFBRTJELEdBQUcsR0FBRyxJQUFJQSxHQUFHLEdBQUcsSUFBSUEsR0FBRyxFQUFFLElBQUksSUFBSUEsR0FBRzdELENBQUMsRUFBRTZCLEVBQUVmLFVBQVVrTixNQUFNbk0sRUFBRWYsVUFBVXVoQixPQUFPeGdCLEVBQUVmLFVBQVVnakIsWUFBWSxXQUFXdmdCLEtBQUtxZ0IsV0FBVyxJQUFJcGtCLEVBQUUrRCxLQUFLaWhCLEtBQUtubEIsRUFBRSxJQUFJbUcsWUFBWWhHLEVBQUUsR0FBR0UsRUFBRSxJQUFJNkUsU0FBU2xGLEdBQUcsT0FBT0ssRUFBRWtFLFVBQVUsRUFBRUwsS0FBSzBpQixLQUFLdm1CLEVBQUVrRSxVQUFVLEVBQUVMLEtBQUsyaUIsS0FBS3htQixFQUFFa0UsVUFBVSxFQUFFTCxLQUFLNGlCLEtBQUt6bUIsRUFBRWtFLFVBQVUsR0FBR0wsS0FBSzZpQixLQUFLMW1CLEVBQUVrRSxVQUFVLEdBQUdMLEtBQUs4aUIsS0FBSzNtQixFQUFFa0UsVUFBVSxHQUFHTCxLQUFLK2lCLEtBQUs1bUIsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS2dqQixLQUFLL21CLEdBQUcsS0FBS0UsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS2lqQixLQUFLaG5CLEdBQUcsTUFBTUUsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS2tqQixLQUFLL21CLEVBQUVrRSxVQUFVLEdBQUdMLEtBQUttakIsS0FBS2huQixFQUFFa0UsVUFBVSxHQUFHTCxLQUFLb2pCLEtBQUtqbkIsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS3FqQixNQUFNLEtBQUtwbkIsSUFBSUUsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS3NqQixLQUFLbm5CLEVBQUVrRSxVQUFVLEdBQUdMLEtBQUt1akIsS0FBS3BuQixFQUFFa0UsVUFBVSxHQUFHTCxLQUFLd2pCLEtBQUtybkIsRUFBRWtFLFVBQVUsR0FBR0wsS0FBS3lqQixNQUFNM25CLENBQUMsRUFBRXdDLEVBQUVmLFVBQVU4UCxNQUFNLFdBQVcsSUFBSXBSLEVBQUUsSUFBSXFDLEVBQUUwQixLQUFLaWhCLE1BQUssR0FBSSxPQUFPamhCLEtBQUswakIsT0FBT3puQixHQUFHQSxDQUFDLEVBQUVxQyxFQUFFZixVQUFVbW1CLE9BQU8sU0FBU3puQixHQUFHLElBQUlILEVBQUUsRUFBRUssRUFBRSxDQUFDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sUUFBUSxRQUFRLFNBQVMsWUFBWSxTQUFTLGlCQUFpQixJQUFJTCxFQUFFLEVBQUVBLEVBQUVLLEVBQUU2QyxTQUFTbEQsRUFBRUcsRUFBRUUsRUFBRUwsSUFBSWtFLEtBQUs3RCxFQUFFTCxJQUFJLElBQUlBLEVBQUUsRUFBRUEsRUFBRWtFLEtBQUtrZSxPQUFPbGYsU0FBU2xELEVBQUVHLEVBQUVpaUIsT0FBT3BpQixHQUFHa0UsS0FBS2tlLE9BQU9waUIsRUFBRSxFQUFFMEMsRUFBRWpCLFVBQVUsSUFBSWUsRUFBRUUsRUFBRWpCLFVBQVU4aUIsU0FBUyxXQUFXLEdBQUcvaEIsRUFBRWYsVUFBVThpQixTQUFTN2pCLEtBQUt3RCxNQUFNQSxLQUFLaWdCLE1BQU0sQ0FBQ2pnQixLQUFLaWdCLE9BQU0sRUFBRyxJQUFJaGtCLEVBQUUrRCxLQUFLeUssUUFBUW5NLEVBQUU5QixLQUFLd0QsS0FBS0EsS0FBS2loQixLQUFLamhCLEtBQUtrZ0IsY0FBY2xnQixLQUFLc2UsT0FBT3RlLEtBQUtnZ0IsU0FBU2hnQixLQUFLc2UsT0FBT3JpQixHQUFHcUMsRUFBRWYsVUFBVThpQixTQUFTN2pCLEtBQUt3RCxLQUFLLENBQUMsRUFBRXhCLEVBQUVqQixVQUFVOFAsTUFBTSxXQUFXLElBQUlwUixFQUFFLElBQUl1QyxFQUFFLEdBQUd3QixLQUFLaWhCLE1BQUssR0FBSWpoQixLQUFLMGpCLE9BQU96bkIsR0FBR0EsRUFBRWdrQixNQUFNamdCLEtBQUtpZ0IsTUFBTSxJQUFJLElBQUlua0IsRUFBRSxFQUFFQSxFQUFFa0UsS0FBS2dnQixRQUFRaGhCLFNBQVNsRCxFQUFFRyxFQUFFK2pCLFFBQVFsa0IsR0FBR2tFLEtBQUtnZ0IsUUFBUWxrQixHQUFHLE9BQU9HLENBQUMsRUFBRSxJQUFJc0YsRUFBRTlFLEVBQUUsS0FBSzhFLEVBQUVvaUIsT0FBT3BpQixFQUFFQSxFQUFFcWlCLE9BQU9ubkIsRUFBRSxLQUFLOEUsRUFBRXNpQixXQUFXcG5CLEVBQUUsS0FBSzhFLEVBQUV1aUIsV0FBV3JuQixFQUFFLEtBQUs4RSxFQUFFb2lCLE9BQU9qRCxLQUFLbmlCLEVBQUUsS0FBS2dELEVBQUVxaUIsT0FBT2xELEtBQUtuaUIsRUFBRSxLQUFLZ0QsRUFBRXNpQixXQUFXbkQsS0FBS25pQixFQUFFLEtBQUtnRCxFQUFFdWlCLFdBQVdwRCxLQUFLbmlCLEVBQUUsS0FBS2UsRUFBRXJELEVBQUVDLFFBQVFxRixHQUFHN0QsRUFBRWltQixPQUFPcGlCLEVBQUVvaUIsT0FBT2ptQixFQUFFa21CLE9BQU9yaUIsRUFBRXFpQixPQUFPbG1CLEVBQUVtbUIsV0FBV3RpQixFQUFFc2lCLFdBQVdubUIsRUFBRW9tQixXQUFXdmlCLEVBQUV1aUIsV0FBV3BuQixTQUFJLEtBQVVOLEVBQUUsV0FBVyxPQUFPbUYsQ0FBQyxFQUFFL0UsS0FBSytFLEVBQUVwRixFQUFFb0YsRUFBRXRGLE1BQU1BLEVBQUVDLFFBQVFFLElBQUksQ0FBN3dpQixFQUErd2lCLEVBQUcsS0FBSyxDQUFDSCxFQUFFSCxFQUFFSyxLQUFLLElBQUlDLEVBQUVELEVBQUUsS0FBSzhkLFVBQVU1ZCxFQUFFRixFQUFFLE1BQU1GLEVBQUVDLFFBQVEsU0FBU0QsR0FBRyxNQUFNLENBQUM4bkIsTUFBTTFuQixFQUFFSixHQUFHZ2UsVUFBVTdkLEVBQUUsRUFBRUgsRUFBRUMsUUFBUTZuQixNQUFNMW5CLElBQUlKLEVBQUVDLFFBQVErZCxVQUFVN2QsR0FBRyxLQUFLLENBQUNILEVBQUVILEVBQUVLLEtBQUssSUFBSUMsRUFBRSxLQUFLLE1BQU1DLEVBQUUsMElBQTBJcUIsRUFBRSwySkFBMkp6QixFQUFFQyxRQUFRLFNBQVNELEdBQUcsYUFBYSxJQUFJSCxFQUFFLENBQUNrb0IsUUFBTyxFQUFHQyxlQUFjLEVBQUdDLGtCQUFpQixFQUFHQyxpQkFBZ0IsRUFBR0MsWUFBWSxRQUFRQyxrQkFBa0IsU0FBUyxHQUFHLE1BQU1wb0IsRUFBRSxDQUFDLElBQUcsSUFBS0EsRUFBRStuQixTQUFTbG9CLEVBQUVrb0IsUUFBTyxJQUFJLElBQUsvbkIsRUFBRWdvQixnQkFBZ0Jub0IsRUFBRW1vQixlQUFjLEdBQUlub0IsRUFBRW9vQixrQkFBaUIsSUFBS2pvQixFQUFFaW9CLGtCQUFrQmpvQixFQUFFaW9CLGlCQUFpQnBvQixFQUFFcW9CLGlCQUFnQixJQUFLbG9CLEVBQUVrb0IsaUJBQWlCbG9CLEVBQUVrb0IscUJBQWdCLElBQVNsb0IsRUFBRW9vQixrQkFBa0IsQ0FBQyxHQUFHLFVBQVVwb0IsRUFBRW9vQixtQkFBbUIsV0FBV3BvQixFQUFFb29CLG1CQUFtQixhQUFhcG9CLEVBQUVvb0Isa0JBQWtCLE1BQU0sSUFBSS9pQixNQUFNLG1HQUFtR3JGLEVBQUVvb0IscUJBQXFCdm9CLEVBQUV1b0Isa0JBQWtCcG9CLEVBQUVvb0IsaUJBQWlCLENBQUMsUUFBRyxJQUFTcG9CLEVBQUVtb0IsWUFBWSxDQUFDLEdBQUcsVUFBVW5vQixFQUFFbW9CLGFBQWEsV0FBV25vQixFQUFFbW9CLGFBQWEsYUFBYW5vQixFQUFFbW9CLFlBQVksTUFBTSxJQUFJOWlCLE1BQU0sNkZBQTZGckYsRUFBRW1vQixlQUFldG9CLEVBQUVzb0IsWUFBWW5vQixFQUFFbW9CLFdBQVcsQ0FBQyxDQUFDLElBQUk5bkIsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEVBQUUsQ0FBQyxJQUFJLElBQUksS0FBSyxLQUFLLElBQUksSUFBSThCLEVBQUUsS0FBS0YsRUFBRSxLQUFLL0IsRUFBRSxLQUFLRCxFQUFFLEtBQUtMLEVBQUUsTUFBTThELEVBQUUsU0FBUzNELEdBQUcsS0FBSyxDQUFDMGMsS0FBSyxjQUFjRSxRQUFRNWMsRUFBRXFvQixHQUFHaG9CLEVBQUVpb0IsS0FBSzduQixFQUFFLEVBQUVlLEVBQUUsU0FBU3hCLEdBQUcsT0FBT0EsR0FBR0EsSUFBSXFELEdBQUdNLEVBQUUsYUFBYTNELEVBQUUsaUJBQWlCcUQsRUFBRSxLQUFLQSxFQUFFNUMsRUFBRXlQLE9BQU83UCxHQUFHQSxHQUFHLEVBQUVnRCxDQUFDLEVBQUVuQixFQUFFLFdBQVcsSUFBSWxDLEVBQUVJLEVBQUUsR0FBRyxJQUFJLE1BQU1pRCxJQUFJakQsRUFBRSxJQUFJb0IsRUFBRSxNQUFNNkIsR0FBRyxLQUFLQSxHQUFHLEtBQUtqRCxHQUFHaUQsRUFBRTdCLElBQUksR0FBRyxNQUFNNkIsRUFBRSxJQUFJakQsR0FBRyxJQUFJb0IsS0FBSzZCLEdBQUcsS0FBS0EsR0FBRyxLQUFLakQsR0FBR2lELEVBQUUsR0FBRyxNQUFNQSxHQUFHLE1BQU1BLEVBQUUsSUFBSWpELEdBQUdpRCxFQUFFN0IsSUFBSSxNQUFNNkIsR0FBRyxNQUFNQSxJQUFJakQsR0FBR2lELEVBQUU3QixLQUFLNkIsR0FBRyxLQUFLQSxHQUFHLEtBQUtqRCxHQUFHaUQsRUFBRTdCLElBQUksR0FBR3hCLEdBQUdJLEVBQUV1VSxTQUFTM1UsR0FBRyxPQUFPLE1BQU1HLElBQUlBLEVBQUVELEVBQUUsT0FBT0UsRUFBRTJDLE9BQU8sR0FBR2xELEVBQUVtb0IsY0FBYzVuQixFQUFFUCxFQUFFcW9CLGdCQUFnQnZqQixPQUFPdkUsR0FBRyxJQUFJRCxFQUFFQyxHQUFHUCxFQUFFb29CLGlCQUFpQnBvQixFQUFFcW9CLGdCQUFnQnZqQixPQUFPM0UsR0FBRyxJQUFJRyxFQUFFSCxHQUFHQSxFQUFFMkQsRUFBRSxhQUFhLEVBQUVqRCxFQUFFLFdBQVcsSUFBSVYsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxHQUFHLEdBQUcsTUFBTWtELEVBQUUsSUFBSSxJQUFJakQsRUFBRUMsRUFBRW1CLEtBQUssQ0FBQyxHQUFHLE1BQU02QixFQUFFLE9BQU9oRCxFQUFFLEVBQUVELElBQUlELEdBQUdNLEVBQUV1USxVQUFVNVEsRUFBRUMsRUFBRSxJQUFJbUIsSUFBSXJCLEVBQUUsR0FBRyxPQUFPa0QsRUFBRSxDQUFDLEdBQUdoRCxFQUFFLEVBQUVELElBQUlELEdBQUdNLEVBQUV1USxVQUFVNVEsRUFBRUMsRUFBRSxJQUFJbUIsSUFBSSxNQUFNNkIsRUFBRSxDQUFDLElBQUluRCxFQUFFLEVBQUVMLEVBQUUsRUFBRUEsRUFBRSxJQUFJRyxFQUFFc1gsU0FBUzlWLElBQUksSUFBSW1ULFNBQVMzVSxJQUFJSCxHQUFHLEVBQUVLLEVBQUUsR0FBR0EsRUFBRUYsRUFBRUcsR0FBR3lELE9BQU9DLGFBQWEzRCxFQUFFLEtBQUssQ0FBQyxHQUFHLGlCQUFpQkksRUFBRStDLEdBQUcsTUFBTWxELEdBQUdHLEVBQUUrQyxFQUFFLENBQUNqRCxFQUFFQyxDQUFDLENBQUMsQ0FBQ3NELEVBQUUsYUFBYSxFQUFFVSxFQUFFLFdBQVcsS0FBS2hCLEdBQUdBLEdBQUcsS0FBSzdCLEdBQUcsRUFBRSxPQUFPOEIsRUFBRSxXQUFXLE9BQU9lLElBQUloQixHQUFHLElBQUksSUFBSSxPQUFPLFdBQVcsSUFBSXJELEVBQUVFLEVBQUVTLE9BQU9RLE9BQU8sTUFBTSxHQUFHLE1BQU1rQyxFQUFFLENBQUMsR0FBRzdCLEVBQUUsS0FBSzZDLElBQUksTUFBTWhCLEVBQUUsT0FBTzdCLEVBQUUsS0FBS3RCLEVBQUUsS0FBS21ELEdBQUcsQ0FBQyxHQUFHckQsRUFBRVUsSUFBSTJELElBQUk3QyxFQUFFLE1BQUssSUFBSzNCLEVBQUVrb0IsUUFBUXBuQixPQUFPWSxlQUFlaEIsS0FBS0wsRUFBRUYsSUFBSTJELEVBQUUsa0JBQWtCM0QsRUFBRSxNQUFLLElBQUtJLEVBQUV5USxLQUFLN1EsR0FBRyxVQUFVSCxFQUFFc29CLFlBQVl4a0IsRUFBRSxnREFBZ0QsV0FBVzlELEVBQUVzb0IsWUFBWTdrQixJQUFJcEQsRUFBRUYsR0FBR3NELEtBQUksSUFBSzdCLEVBQUVvUCxLQUFLN1EsR0FBRyxVQUFVSCxFQUFFdW9CLGtCQUFrQnprQixFQUFFLGtEQUFrRCxXQUFXOUQsRUFBRXVvQixrQkFBa0I5a0IsSUFBSXBELEVBQUVGLEdBQUdzRCxJQUFJcEQsRUFBRUYsR0FBR3NELElBQUllLElBQUksTUFBTWhCLEVBQUUsT0FBTzdCLEVBQUUsS0FBS3RCLEVBQUVzQixFQUFFLEtBQUs2QyxHQUFHLENBQUMsQ0FBQ1YsRUFBRSxhQUFhLENBQTdnQixHQUFpaEIsSUFBSSxJQUFJLE9BQU8sV0FBVyxJQUFJM0QsRUFBRSxHQUFHLEdBQUcsTUFBTXFELEVBQUUsQ0FBQyxHQUFHN0IsRUFBRSxLQUFLNkMsSUFBSSxNQUFNaEIsRUFBRSxPQUFPN0IsRUFBRSxLQUFLeEIsRUFBRSxLQUFLcUQsR0FBRyxDQUFDLEdBQUdyRCxFQUFFMkMsS0FBS1csS0FBS2UsSUFBSSxNQUFNaEIsRUFBRSxPQUFPN0IsRUFBRSxLQUFLeEIsRUFBRXdCLEVBQUUsS0FBSzZDLEdBQUcsQ0FBQyxDQUFDVixFQUFFLFlBQVksQ0FBcEosR0FBd0osSUFBSSxJQUFJLE9BQU9qRCxJQUFJLElBQUksSUFBSSxPQUFPd0IsSUFBSSxRQUFRLE9BQU9tQixHQUFHLEtBQUtBLEdBQUcsSUFBSW5CLElBQUksV0FBVyxPQUFPbUIsR0FBRyxJQUFJLElBQUksT0FBTzdCLEVBQUUsS0FBS0EsRUFBRSxLQUFLQSxFQUFFLEtBQUtBLEVBQUUsTUFBSyxFQUFHLElBQUksSUFBSSxPQUFPQSxFQUFFLEtBQUtBLEVBQUUsS0FBS0EsRUFBRSxLQUFLQSxFQUFFLEtBQUtBLEVBQUUsTUFBSyxFQUFHLElBQUksSUFBSSxPQUFPQSxFQUFFLEtBQUtBLEVBQUUsS0FBS0EsRUFBRSxLQUFLQSxFQUFFLEtBQUssS0FBS21DLEVBQUUsZUFBZU4sRUFBRSxJQUFJLENBQS9MLEdBQW1NLEVBQUUsU0FBU3JELEVBQUVILEdBQUcsSUFBSUssRUFBRSxPQUFPTyxFQUFFVCxFQUFFLEdBQUdLLEVBQUUsRUFBRWdELEVBQUUsSUFBSW5ELEVBQUVvRCxJQUFJZSxJQUFJaEIsR0FBR00sRUFBRSxnQkFBZ0IsbUJBQW1COUQsRUFBRSxTQUFTRyxFQUFFRSxFQUFFQyxHQUFHLElBQUlDLEVBQUVxQixFQUFFdkIsRUFBRUMsR0FBRyxPQUFPc0IsR0FBRyxpQkFBaUJBLEdBQUdkLE9BQU9zSSxLQUFLeEgsR0FBRzhtQixTQUFRLFNBQVUxb0IsUUFBRyxLQUFVTyxFQUFFSixFQUFFeUIsRUFBRTVCLElBQUk0QixFQUFFNUIsR0FBR08sU0FBU3FCLEVBQUU1QixFQUFHLElBQUdBLEVBQUVVLEtBQUtMLEVBQUVDLEVBQUVzQixFQUFFLENBQXRKLENBQXdKLENBQUMsR0FBR3ZCLEdBQUcsSUFBSUEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDRixFQUFFSCxFQUFFSyxLQUFLLElBQUlDLEVBQUVELEVBQUUsTUFBTUUsRUFBRUosRUFBRUMsU0FBUyxXQUFXLGFBQWEsSUFBSUQsRUFBRUgsRUFBRUssRUFBRXVCLEVBQUUsMkhBQTJIcEIsRUFBRSxDQUFDLEtBQUssTUFBTSxLQUFLLE1BQU0sS0FBSyxNQUFNLEtBQUssTUFBTSxLQUFLLE1BQU0sSUFBSSxNQUFNLEtBQUssUUFBUSxTQUFTZ0QsRUFBRXJELEdBQUcsT0FBT3lCLEVBQUUrbUIsVUFBVSxFQUFFL21CLEVBQUVvUCxLQUFLN1EsR0FBRyxJQUFJQSxFQUFFOFEsUUFBUXJQLEdBQUUsU0FBVXpCLEdBQUcsSUFBSUgsRUFBRVEsRUFBRUwsR0FBRyxNQUFNLGlCQUFpQkgsRUFBRUEsRUFBRSxPQUFPLE9BQU9HLEVBQUVvRCxXQUFXLEdBQUd5RixTQUFTLEtBQUswQixPQUFPLEVBQUcsSUFBRyxJQUFJLElBQUl2SyxFQUFFLEdBQUcsQ0FBQyxTQUFTUyxFQUFFTCxFQUFFcUIsR0FBRyxJQUFJcEIsRUFBRWlELEVBQUVoRCxFQUFFcUQsRUFBRW5DLEVBQUVVLEVBQUVsQyxFQUFFVSxFQUFFZSxFQUFFckIsR0FBR2lFLEVBQUUsTUFBTTNELElBQUlBLGFBQWFQLEdBQUdBLEVBQUV5UyxZQUFZbFMsSUFBSSxPQUFPQSxHQUFHLGlCQUFpQkEsR0FBRyxtQkFBbUJBLEVBQUU2VixTQUFTN1YsRUFBRUEsRUFBRTZWLE9BQU9uVyxJQUFJLG1CQUFtQkYsSUFBSVEsRUFBRVIsRUFBRUssS0FBS2tCLEVBQUVyQixFQUFFTSxXQUFXQSxHQUFHLElBQUksU0FBUyxPQUFPMkQsRUFBRTNELEVBQUUyQyxFQUFFM0MsR0FBRyxJQUFJLFNBQVMsT0FBT2lVLFNBQVNqVSxHQUFHa0QsT0FBT2xELEdBQUcsT0FBTyxJQUFJLFVBQVUsSUFBSSxPQUFPLElBQUksU0FBUyxPQUFPa0QsT0FBT2xELEdBQUcsSUFBSSxTQUFTLElBQUlBLEVBQUUsTUFBTSxPQUFPLEdBQUdWLEdBQUdILEVBQUUyQixFQUFFLEdBQUcsbUJBQW1CYixPQUFPVyxVQUFVdUgsU0FBUy9FLE1BQU1wRCxHQUFHLENBQUMsSUFBSWlELEVBQUVqRCxFQUFFcUMsT0FBTzFDLEVBQUUsRUFBRUEsRUFBRXNELEVBQUV0RCxHQUFHLEVBQUVtQixFQUFFbkIsR0FBR0ksRUFBRUosRUFBRUssSUFBSSxPQUFPLE9BQU9KLEVBQUUsSUFBSWtCLEVBQUV1QixPQUFPLEtBQUsvQyxFQUFFLE1BQU1BLEVBQUV3QixFQUFFdU8sS0FBSyxNQUFNL1AsR0FBRyxLQUFLa0MsRUFBRSxJQUFJLElBQUlWLEVBQUV1TyxLQUFLLEtBQUssSUFBSS9QLEVBQUVrQyxFQUFFNUIsQ0FBQyxDQUFDLEdBQUdKLEdBQUcsaUJBQWlCQSxFQUFFLElBQUl5RCxFQUFFekQsRUFBRTZDLE9BQU8xQyxFQUFFLEVBQUVBLEVBQUVzRCxFQUFFdEQsR0FBRyxFQUFFLGlCQUFpQkgsRUFBRUcsS0FBS0MsRUFBRUcsRUFBRTZDLEVBQUVwRCxFQUFFRyxHQUFHSyxLQUFLYyxFQUFFbUIsS0FBS1UsRUFBRUMsSUFBSXRELEVBQUUsS0FBSyxLQUFLTSxRQUFRSyxPQUFPc0ksS0FBS3ZJLEdBQUc2bkIsU0FBUSxTQUFVMW9CLEdBQUcsSUFBSUssRUFBRU8sRUFBRVosRUFBRWEsR0FBR1IsR0FBR3NCLEVBQUVtQixLQUFLVSxFQUFFeEQsSUFBSUcsRUFBRSxLQUFLLEtBQUtFLEVBQUcsSUFBRyxPQUFPSSxFQUFFLElBQUlrQixFQUFFdUIsT0FBTyxLQUFLL0MsRUFBRSxNQUFNQSxFQUFFd0IsRUFBRXVPLEtBQUssTUFBTS9QLEdBQUcsS0FBS2tDLEVBQUUsSUFBSSxJQUFJVixFQUFFdU8sS0FBSyxLQUFLLElBQUkvUCxFQUFFa0MsRUFBRTVCLEVBQUUsQ0FBQyxtQkFBbUJGLEVBQUU0ZCxZQUFZNWQsRUFBRTRkLFVBQVUsU0FBUzdkLEVBQUVDLEVBQUVxQixHQUFHLElBQUlwQixFQUFFLEdBQUdMLEVBQUUsR0FBR0gsRUFBRSxHQUFHLGlCQUFpQjRCLEVBQUUsSUFBSXBCLEVBQUUsRUFBRUEsRUFBRW9CLEVBQUVwQixHQUFHLEVBQUVSLEdBQUcsUUFBUSxpQkFBaUI0QixJQUFJNUIsRUFBRTRCLEdBQUcsR0FBR3ZCLEVBQUVFLEVBQUVBLEdBQUcsbUJBQW1CQSxJQUFJLGlCQUFpQkEsR0FBRyxpQkFBaUJBLEVBQUUyQyxRQUFRLE1BQU0sSUFBSXNDLE1BQU0sa0JBQWtCLE9BQU81RSxFQUFFLEdBQUcsQ0FBQyxHQUFHTixHQUFHLEVBQUUsQ0FBMWpELEVBQTRqRCxFQUFHLEtBQUssQ0FBQ0gsRUFBRUgsRUFBRUssS0FBSyxJQUFJQyxFQUFFLG1CQUFtQmtmLEtBQUtBLElBQUkvZCxVQUFVbEIsRUFBRU8sT0FBT3NkLDBCQUEwQjlkLEVBQUVRLE9BQU9zZCx5QkFBeUJvQixJQUFJL2QsVUFBVSxRQUFRLEtBQUtHLEVBQUV0QixHQUFHQyxHQUFHLG1CQUFtQkEsRUFBRVUsSUFBSVYsRUFBRVUsSUFBSSxLQUFLVCxFQUFFRixHQUFHa2YsSUFBSS9kLFVBQVVpbkIsUUFBUWxsQixFQUFFLG1CQUFtQnFjLEtBQUtBLElBQUlwZSxVQUFVYixFQUFFRSxPQUFPc2QsMEJBQTBCNWEsRUFBRTFDLE9BQU9zZCx5QkFBeUJ5QixJQUFJcGUsVUFBVSxRQUFRLEtBQUtnQyxFQUFFRCxHQUFHNUMsR0FBRyxtQkFBbUJBLEVBQUVLLElBQUlMLEVBQUVLLElBQUksS0FBS1IsRUFBRStDLEdBQUdxYyxJQUFJcGUsVUFBVWluQixRQUFRNWtCLEVBQUUsbUJBQW1CbWMsU0FBU0EsUUFBUXhlLFVBQVV3ZSxRQUFReGUsVUFBVW1uQixJQUFJLEtBQUtqbkIsRUFBRSxtQkFBbUJ3ZSxTQUFTQSxRQUFRMWUsVUFBVTBlLFFBQVExZSxVQUFVbW5CLElBQUksS0FBS3ZtQixFQUFFLG1CQUFtQjZkLFNBQVNBLFFBQVF6ZSxVQUFVeWUsUUFBUXplLFVBQVVvbkIsTUFBTSxLQUFLaG9CLEVBQUU4ZCxRQUFRbGQsVUFBVTZPLFFBQVE5TCxFQUFFMUQsT0FBT1csVUFBVXVILFNBQVMxRyxFQUFFK2IsU0FBUzVjLFVBQVV1SCxTQUFTckksRUFBRW9ELE9BQU90QyxVQUFVcW5CLE1BQU12bUIsRUFBRSxtQkFBbUJ1QyxPQUFPQSxPQUFPckQsVUFBVTZPLFFBQVEsS0FBSzdOLEVBQUUzQixPQUFPdWYsc0JBQXNCN2QsRUFBRSxtQkFBbUJ0QixRQUFRLGlCQUFpQkEsT0FBT3lCLFNBQVN6QixPQUFPTyxVQUFVdUgsU0FBUyxLQUFLdEcsRUFBRSxtQkFBbUJ4QixRQUFRLGlCQUFpQkEsT0FBT3lCLFNBQVM4QyxFQUFFM0UsT0FBT1csVUFBVThlLHFCQUFxQm5lLEdBQUcsbUJBQW1Cd2QsUUFBUUEsUUFBUXJCLGVBQWV6ZCxPQUFPeWQsa0JBQWtCLEdBQUdDLFlBQVk1VixNQUFNbkgsVUFBVSxTQUFTdEIsR0FBRyxPQUFPQSxFQUFFcWUsU0FBUyxFQUFFLE1BQU10WSxFQUFFN0YsRUFBRSxNQUFNMG9CLE9BQU96aUIsRUFBRUosR0FBRytELEVBQUUvRCxHQUFHQSxFQUFFLEtBQUsvRCxFQUFFLG1CQUFtQmpCLGFBQVEsSUFBU0EsT0FBT0MsWUFBWUQsT0FBT0MsWUFBWSxLQUFLLFNBQVMwSSxFQUFFMUosRUFBRUgsRUFBRUssR0FBRyxJQUFJQyxFQUFFLFlBQVlELEVBQUUyb0IsWUFBWWhwQixHQUFHLElBQUksSUFBSSxPQUFPTSxFQUFFSCxFQUFFRyxDQUFDLENBQUMsU0FBU3VCLEVBQUUxQixHQUFHLE9BQU80RCxPQUFPNUQsR0FBRzhRLFFBQVEsS0FBSyxTQUFTLENBQUMsU0FBU25ILEVBQUUzSixHQUFHLFFBQVEsbUJBQW1CcUwsRUFBRXJMLElBQUlnQyxHQUFHLGlCQUFpQmhDLEdBQUdnQyxLQUFLaEMsRUFBRSxDQUFDLFNBQVM4SixFQUFFOUosR0FBRyxHQUFHdUMsRUFBRSxPQUFPdkMsR0FBRyxpQkFBaUJBLEdBQUdBLGFBQWFlLE9BQU8sR0FBRyxpQkFBaUJmLEVBQUUsT0FBTSxFQUFHLElBQUlBLEdBQUcsaUJBQWlCQSxJQUFJcUMsRUFBRSxPQUFNLEVBQUcsSUFBSSxPQUFPQSxFQUFFOUIsS0FBS1AsSUFBRyxDQUFZLENBQVQsTUFBTUEsR0FBRyxDQUFDLE9BQU0sQ0FBRSxDQUFDQSxFQUFFQyxRQUFRLFNBQVNELEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWlELEVBQUVuRCxHQUFHLENBQUMsRUFBRSxHQUFHNkssRUFBRTFILEVBQUUsZUFBZSxXQUFXQSxFQUFFd2xCLFlBQVksV0FBV3hsQixFQUFFd2xCLFdBQVcsTUFBTSxJQUFJemlCLFVBQVUsb0RBQW9ELEdBQUcyRSxFQUFFMUgsRUFBRSxxQkFBcUIsaUJBQWlCQSxFQUFFeWxCLGdCQUFnQnpsQixFQUFFeWxCLGdCQUFnQixHQUFHemxCLEVBQUV5bEIsa0JBQWtCLElBQUksT0FBT3psQixFQUFFeWxCLGlCQUFpQixNQUFNLElBQUkxaUIsVUFBVSwwRkFBMEYsSUFBSTNGLEdBQUdzSyxFQUFFMUgsRUFBRSxrQkFBa0JBLEVBQUUwbEIsY0FBYyxHQUFHLGtCQUFrQnRvQixFQUFFLE1BQU0sSUFBSTJGLFVBQVUsa0VBQWtFLEdBQUcyRSxFQUFFMUgsRUFBRSxXQUFXLE9BQU9BLEVBQUUybEIsUUFBUSxPQUFPM2xCLEVBQUUybEIsVUFBVTFSLFNBQVNqVSxFQUFFMmxCLE9BQU8sTUFBTTNsQixFQUFFMmxCLFFBQVEzbEIsRUFBRTJsQixPQUFPLEdBQUcsTUFBTSxJQUFJNWlCLFVBQVUsNkRBQTZELFFBQUcsSUFBU3ZHLEVBQUUsTUFBTSxZQUFZLEdBQUcsT0FBT0EsRUFBRSxNQUFNLE9BQU8sR0FBRyxrQkFBa0JBLEVBQUUsT0FBT0EsRUFBRSxPQUFPLFFBQVEsR0FBRyxpQkFBaUJBLEVBQUUsT0FBTzJMLEVBQUUzTCxFQUFFd0QsR0FBRyxHQUFHLGlCQUFpQnhELEVBQUUsT0FBTyxJQUFJQSxFQUFFLElBQUlBLEVBQUUsRUFBRSxJQUFJLEtBQUsrRCxPQUFPL0QsR0FBRyxHQUFHLGlCQUFpQkEsRUFBRSxPQUFPK0QsT0FBTy9ELEdBQUcsSUFBSSxJQUFJd0UsT0FBRSxJQUFTaEIsRUFBRTRsQixNQUFNLEVBQUU1bEIsRUFBRTRsQixNQUFNLFFBQUcsSUFBUzlvQixJQUFJQSxFQUFFLEdBQUdBLEdBQUdrRSxHQUFHQSxFQUFFLEdBQUcsaUJBQWlCeEUsRUFBRSxPQUFPOEosRUFBRTlKLEdBQUcsVUFBVSxXQUFXLElBQUl5QyxFQUFFZ0QsRUFBRSxTQUFTdEYsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEdBQUcsT0FBT0YsRUFBRWdwQixPQUFPOW9CLEVBQUUsU0FBUyxDQUFDLEtBQUssaUJBQWlCRixFQUFFZ3BCLFFBQVFocEIsRUFBRWdwQixPQUFPLEdBQUcsT0FBTyxLQUFLOW9CLEVBQUV1SSxNQUFNekksRUFBRWdwQixPQUFPLEdBQUdqWixLQUFLLElBQUksQ0FBQyxNQUFNLENBQUNtWixLQUFLaHBCLEVBQUVpcEIsS0FBSzFnQixNQUFNNUksRUFBRSxHQUFHa1EsS0FBSzdQLEdBQUcsQ0FBL0ssQ0FBaUxtRCxFQUFFbEQsR0FBRyxRQUFHLElBQVNDLEVBQUVBLEVBQUUsUUFBUSxHQUFHa0wsRUFBRWxMLEVBQUVQLElBQUksRUFBRSxNQUFNLGFBQWEsU0FBU2tHLEVBQUVsRyxFQUFFSyxFQUFFdUIsR0FBRyxHQUFHdkIsSUFBSUUsRUFBRUEsRUFBRW1LLFNBQVM1SCxLQUFLekMsR0FBR3VCLEVBQUUsQ0FBQyxJQUFJcEIsRUFBRSxDQUFDNG9CLE1BQU01bEIsRUFBRTRsQixPQUFPLE9BQU9sZSxFQUFFMUgsRUFBRSxnQkFBZ0JoRCxFQUFFd29CLFdBQVd4bEIsRUFBRXdsQixZQUFZN29CLEVBQUVILEVBQUVRLEVBQUVGLEVBQUUsRUFBRUMsRUFBRSxDQUFDLE9BQU9KLEVBQUVILEVBQUV3RCxFQUFFbEQsRUFBRSxFQUFFQyxFQUFFLENBQUMsR0FBRyxtQkFBbUJQLEVBQUUsQ0FBQyxJQUFJMkssRUFBRSxTQUFTeEssR0FBRyxHQUFHQSxFQUFFMGMsS0FBSyxPQUFPMWMsRUFBRTBjLEtBQUssSUFBSTdjLEVBQUVXLEVBQUVELEtBQUs0QixFQUFFNUIsS0FBS1AsR0FBRyx3QkFBd0IsT0FBT0gsRUFBRUEsRUFBRSxHQUFHLElBQUksQ0FBckcsQ0FBdUdBLEdBQUc0TCxFQUFFMkQsRUFBRXZQLEVBQUVrRyxHQUFHLE1BQU0sYUFBYXlFLEVBQUUsS0FBS0EsRUFBRSxnQkFBZ0IsS0FBS2lCLEVBQUUxSSxPQUFPLEVBQUUsTUFBTTBJLEVBQUVzRSxLQUFLLE1BQU0sS0FBSyxHQUFHLENBQUMsR0FBR2pHLEVBQUVqSyxHQUFHLENBQUMsSUFBSThCLEVBQUVZLEVBQUVxQixPQUFPL0QsR0FBR2lSLFFBQVEseUJBQXlCLE1BQU16TyxFQUFFOUIsS0FBS1YsR0FBRyxNQUFNLGlCQUFpQkEsR0FBRzBDLEVBQUVaLEVBQUUrSixFQUFFL0osRUFBRSxDQUFDLElBQUlXLEVBQUV6QyxJQUFJLGlCQUFpQnlDLElBQUksb0JBQW9COG1CLGFBQWE5bUIsYUFBYThtQixhQUFhLGlCQUFpQjltQixFQUFFK21CLFVBQVUsbUJBQW1CL21CLEVBQUVnbkIsY0FBYyxDQUFDLElBQUksSUFBSWphLEVBQUUsSUFBSXpMLE9BQU8vRCxFQUFFd3BCLFVBQVVsWSxjQUFjN0IsRUFBRXpQLEVBQUUwcEIsWUFBWSxHQUFHaGEsRUFBRSxFQUFFQSxFQUFFRCxFQUFFdk0sT0FBT3dNLElBQUlGLEdBQUcsSUFBSUMsRUFBRUMsR0FBR21OLEtBQUssSUFBSWhULEVBQUVoSSxFQUFFNE4sRUFBRUMsR0FBR3RPLE9BQU8sU0FBU29DLEdBQUcsT0FBT2dNLEdBQUcsSUFBSXhQLEVBQUUycEIsWUFBWTNwQixFQUFFMnBCLFdBQVd6bUIsU0FBU3NNLEdBQUcsT0FBT0EsRUFBRSxLQUFLekwsT0FBTy9ELEVBQUV3cEIsVUFBVWxZLGNBQWMsR0FBRyxDQUFDLEdBQUd4SCxFQUFFOUosR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRWtELE9BQU8sTUFBTSxLQUFLLElBQUl5TSxFQUFFSixFQUFFdlAsRUFBRWtHLEdBQUcsT0FBT1QsSUFBSSxTQUFTdEYsR0FBRyxJQUFJLElBQUlILEVBQUUsRUFBRUEsRUFBRUcsRUFBRStDLE9BQU9sRCxJQUFJLEdBQUd5TCxFQUFFdEwsRUFBRUgsR0FBRyxPQUFPLEVBQUUsT0FBTSxFQUFHLE9BQU0sQ0FBRSxDQUEzRSxDQUE2RTJQLEdBQUcsSUFBSXpOLEVBQUV5TixFQUFFbEssR0FBRyxJQUFJLEtBQUtrSyxFQUFFTyxLQUFLLE1BQU0sSUFBSSxDQUFDLEdBQUcsU0FBUy9QLEdBQUcsUUFBUSxtQkFBbUJxTCxFQUFFckwsSUFBSWdDLEdBQUcsaUJBQWlCaEMsR0FBR2dDLEtBQUtoQyxFQUFFLENBQTNFLENBQTZFSCxHQUFHLENBQUMsSUFBSTRQLEVBQUVMLEVBQUV2UCxFQUFFa0csR0FBRyxPQUFPLElBQUkwSixFQUFFMU0sT0FBTyxJQUFJYSxPQUFPL0QsR0FBRyxJQUFJLE1BQU0rRCxPQUFPL0QsR0FBRyxLQUFLNFAsRUFBRU0sS0FBSyxNQUFNLElBQUksQ0FBQyxHQUFHLGlCQUFpQmxRLEdBQUdZLEVBQUUsQ0FBQyxHQUFHMEYsR0FBRyxtQkFBbUJ0RyxFQUFFc0csR0FBRyxPQUFPdEcsRUFBRXNHLEtBQUssR0FBRyxtQkFBbUJ0RyxFQUFFMFksUUFBUSxPQUFPMVksRUFBRTBZLFNBQVMsQ0FBQyxHQUFHLFNBQVN2WSxHQUFHLElBQUl5QixJQUFJekIsR0FBRyxpQkFBaUJBLEVBQUUsT0FBTSxFQUFHLElBQUl5QixFQUFFbEIsS0FBS1AsR0FBRyxJQUFJc0QsRUFBRS9DLEtBQUtQLEVBQW9CLENBQWpCLE1BQU1BLEdBQUcsT0FBTSxDQUFFLENBQUMsT0FBT0EsYUFBYXFmLEdBQWEsQ0FBVCxNQUFNcmYsR0FBRyxDQUFDLE9BQU0sQ0FBRSxDQUEzSSxDQUE2SUgsR0FBRyxDQUFDLElBQUkrQixFQUFFLEdBQUcsT0FBT3ZCLEVBQUVFLEtBQUtWLEdBQUUsU0FBVUcsRUFBRUUsR0FBRzBCLEVBQUVlLEtBQUtvRCxFQUFFN0YsRUFBRUwsR0FBRSxHQUFJLE9BQU9rRyxFQUFFL0YsRUFBRUgsR0FBSSxJQUFHaU0sRUFBRSxNQUFNckssRUFBRWxCLEtBQUtWLEdBQUcrQixFQUFFMEQsRUFBRSxDQUFDLEdBQUcsU0FBU3RGLEdBQUcsSUFBSXNELElBQUl0RCxHQUFHLGlCQUFpQkEsRUFBRSxPQUFNLEVBQUcsSUFBSXNELEVBQUUvQyxLQUFLUCxHQUFHLElBQUl5QixFQUFFbEIsS0FBS1AsRUFBb0IsQ0FBakIsTUFBTUEsR0FBRyxPQUFNLENBQUUsQ0FBQyxPQUFPQSxhQUFhMGYsR0FBYSxDQUFULE1BQU0xZixHQUFHLENBQUMsT0FBTSxDQUFFLENBQTNJLENBQTZJSCxHQUFHLENBQUMsSUFBSWdDLEVBQUUsR0FBRyxPQUFPdkIsRUFBRUMsS0FBS1YsR0FBRSxTQUFVRyxHQUFHNkIsRUFBRWMsS0FBS29ELEVBQUUvRixFQUFFSCxHQUFJLElBQUdpTSxFQUFFLE1BQU14SSxFQUFFL0MsS0FBS1YsR0FBR2dDLEVBQUV5RCxFQUFFLENBQUMsR0FBRyxTQUFTdEYsR0FBRyxJQUFJMkQsSUFBSTNELEdBQUcsaUJBQWlCQSxFQUFFLE9BQU0sRUFBRyxJQUFJMkQsRUFBRXBELEtBQUtQLEVBQUUyRCxHQUFHLElBQUluQyxFQUFFakIsS0FBS1AsRUFBRXdCLEVBQW9CLENBQWpCLE1BQU14QixHQUFHLE9BQU0sQ0FBRSxDQUFDLE9BQU9BLGFBQWE4ZixPQUFpQixDQUFULE1BQU05ZixHQUFHLENBQUMsT0FBTSxDQUFFLENBQW5KLENBQXFKSCxHQUFHLE9BQU9nTSxFQUFFLFdBQVcsR0FBRyxTQUFTN0wsR0FBRyxJQUFJd0IsSUFBSXhCLEdBQUcsaUJBQWlCQSxFQUFFLE9BQU0sRUFBRyxJQUFJd0IsRUFBRWpCLEtBQUtQLEVBQUV3QixHQUFHLElBQUltQyxFQUFFcEQsS0FBS1AsRUFBRTJELEVBQW9CLENBQWpCLE1BQU0zRCxHQUFHLE9BQU0sQ0FBRSxDQUFDLE9BQU9BLGFBQWFnZ0IsT0FBaUIsQ0FBVCxNQUFNaGdCLEdBQUcsQ0FBQyxPQUFNLENBQUUsQ0FBbkosQ0FBcUpILEdBQUcsT0FBT2dNLEVBQUUsV0FBVyxHQUFHLFNBQVM3TCxHQUFHLElBQUlrQyxJQUFJbEMsR0FBRyxpQkFBaUJBLEVBQUUsT0FBTSxFQUFHLElBQUksT0FBT2tDLEVBQUUzQixLQUFLUCxJQUFHLENBQVksQ0FBVCxNQUFNQSxHQUFHLENBQUMsT0FBTSxDQUFFLENBQTdGLENBQStGSCxHQUFHLE9BQU9nTSxFQUFFLFdBQVcsR0FBRyxTQUFTN0wsR0FBRyxRQUFRLG9CQUFvQnFMLEVBQUVyTCxJQUFJZ0MsR0FBRyxpQkFBaUJoQyxHQUFHZ0MsS0FBS2hDLEVBQUUsQ0FBNUUsQ0FBOEVILEdBQUcsT0FBTzZMLEVBQUUzRixFQUFFdkIsT0FBTzNFLEtBQUssR0FBRyxTQUFTRyxHQUFHLElBQUlBLEdBQUcsaUJBQWlCQSxJQUFJb0MsRUFBRSxPQUFNLEVBQUcsSUFBSSxPQUFPQSxFQUFFN0IsS0FBS1AsSUFBRyxDQUFZLENBQVQsTUFBTUEsR0FBRyxDQUFDLE9BQU0sQ0FBRSxDQUE3RixDQUErRkgsR0FBRyxPQUFPNkwsRUFBRTNGLEVBQUUzRCxFQUFFN0IsS0FBS1YsS0FBSyxHQUFHLFNBQVNHLEdBQUcsUUFBUSxxQkFBcUJxTCxFQUFFckwsSUFBSWdDLEdBQUcsaUJBQWlCaEMsR0FBR2dDLEtBQUtoQyxFQUFFLENBQTdFLENBQStFSCxHQUFHLE9BQU82TCxFQUFFaEwsRUFBRUgsS0FBS1YsSUFBSSxHQUFHLFNBQVNHLEdBQUcsUUFBUSxvQkFBb0JxTCxFQUFFckwsSUFBSWdDLEdBQUcsaUJBQWlCaEMsR0FBR2dDLEtBQUtoQyxFQUFFLENBQTVFLENBQThFSCxHQUFHLE9BQU82TCxFQUFFM0YsRUFBRW5DLE9BQU8vRCxLQUFLLElBQUksU0FBU0csR0FBRyxRQUFRLGtCQUFrQnFMLEVBQUVyTCxJQUFJZ0MsR0FBRyxpQkFBaUJoQyxHQUFHZ0MsS0FBS2hDLEVBQUUsQ0FBMUUsQ0FBNEVILEtBQUssU0FBU0csR0FBRyxRQUFRLG9CQUFvQnFMLEVBQUVyTCxJQUFJZ0MsR0FBRyxpQkFBaUJoQyxHQUFHZ0MsS0FBS2hDLEVBQUUsQ0FBNUUsQ0FBOEVILEdBQUcsQ0FBQyxJQUFJaUMsRUFBRXNOLEVBQUV2UCxFQUFFa0csR0FBRzRTLEVBQUUxVyxFQUFFQSxFQUFFcEMsS0FBS2MsT0FBT1csVUFBVXpCLGFBQWFjLFFBQVFkLEVBQUUrTCxjQUFjakwsT0FBTytZLEVBQUU3WixhQUFhYyxPQUFPLEdBQUcsaUJBQWlCcWMsR0FBR3JFLEdBQUczVyxHQUFHckIsT0FBT2QsS0FBS0EsR0FBR21DLEtBQUtuQyxFQUFFd0wsRUFBRXhMLEdBQUcwSyxNQUFNLEdBQUcsR0FBR21QLEVBQUUsU0FBUyxHQUFHK0wsSUFBSTlNLEdBQUcsbUJBQW1COVksRUFBRStMLFlBQVksR0FBRy9MLEVBQUUrTCxZQUFZOFEsS0FBSzdjLEVBQUUrTCxZQUFZOFEsS0FBSyxJQUFJLEtBQUtNLEdBQUd0RCxFQUFFLElBQUksR0FBRzFXLE9BQU9nYSxHQUFHLEdBQUd0RCxHQUFHLElBQUkzSixLQUFLLE1BQU0sS0FBSyxJQUFJLE9BQU8sSUFBSWpPLEVBQUVpQixPQUFPMGlCLEdBQUcsS0FBS25nQixFQUFFbWdCLEdBQUcsSUFBSTFqQixFQUFFRCxFQUFFd0QsR0FBRyxJQUFJbWdCLEdBQUcsS0FBSzNqQixFQUFFaU8sS0FBSyxNQUFNLElBQUksQ0FBQyxPQUFPbk0sT0FBTy9ELEVBQUUsRUFBRSxJQUFJMkssRUFBRTdKLE9BQU9XLFVBQVVDLGdCQUFnQixTQUFTdkIsR0FBRyxPQUFPQSxLQUFLK0QsSUFBSSxFQUFFLFNBQVNnSCxFQUFFL0ssRUFBRUgsR0FBRyxPQUFPMkssRUFBRWpLLEtBQUtQLEVBQUVILEVBQUUsQ0FBQyxTQUFTd0wsRUFBRXJMLEdBQUcsT0FBT3FFLEVBQUU5RCxLQUFLUCxFQUFFLENBQUMsU0FBU3NMLEVBQUV0TCxFQUFFSCxHQUFHLEdBQUdHLEVBQUVnUSxRQUFRLE9BQU9oUSxFQUFFZ1EsUUFBUW5RLEdBQUcsSUFBSSxJQUFJSyxFQUFFLEVBQUVDLEVBQUVILEVBQUUrQyxPQUFPN0MsRUFBRUMsRUFBRUQsSUFBSSxHQUFHRixFQUFFRSxLQUFLTCxFQUFFLE9BQU9LLEVBQUUsT0FBTyxDQUFDLENBQUMsU0FBU3NMLEVBQUV4TCxFQUFFSCxHQUFHLEdBQUdHLEVBQUUrQyxPQUFPbEQsRUFBRWlwQixnQkFBZ0IsQ0FBQyxJQUFJNW9CLEVBQUVGLEVBQUUrQyxPQUFPbEQsRUFBRWlwQixnQkFBZ0Izb0IsRUFBRSxPQUFPRCxFQUFFLG1CQUFtQkEsRUFBRSxFQUFFLElBQUksSUFBSSxPQUFPc0wsRUFBRXhMLEVBQUV1SyxNQUFNLEVBQUUxSyxFQUFFaXBCLGlCQUFpQmpwQixHQUFHTSxDQUFDLENBQUMsT0FBT3VKLEVBQUUxSixFQUFFOFEsUUFBUSxXQUFXLFFBQVFBLFFBQVEsZUFBZXJGLEdBQUcsU0FBUzVMLEVBQUUsQ0FBQyxTQUFTNEwsRUFBRXpMLEdBQUcsSUFBSUgsRUFBRUcsRUFBRW9ELFdBQVcsR0FBR2xELEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksR0FBRyxLQUFLTCxHQUFHLE9BQU9LLEVBQUUsS0FBS0EsRUFBRSxPQUFPTCxFQUFFLEdBQUcsSUFBSSxJQUFJQSxFQUFFZ0osU0FBUyxJQUFJcUksYUFBYSxDQUFDLFNBQVN4RixFQUFFMUwsR0FBRyxNQUFNLFVBQVVBLEVBQUUsR0FBRyxDQUFDLFNBQVM2TCxFQUFFN0wsR0FBRyxPQUFPQSxFQUFFLFFBQVEsQ0FBQyxTQUFTOEwsRUFBRTlMLEVBQUVILEVBQUVLLEVBQUVDLEdBQUcsT0FBT0gsRUFBRSxLQUFLSCxFQUFFLE9BQU9NLEVBQUU0QixFQUFFN0IsRUFBRUMsR0FBR0QsRUFBRTZQLEtBQUssT0FBTyxHQUFHLENBQUMsU0FBU2hPLEVBQUUvQixFQUFFSCxHQUFHLEdBQUcsSUFBSUcsRUFBRStDLE9BQU8sTUFBTSxHQUFHLElBQUk3QyxFQUFFLEtBQUtMLEVBQUVzcEIsS0FBS3RwQixFQUFFcXBCLEtBQUssT0FBT2hwQixFQUFFRixFQUFFK1AsS0FBSyxJQUFJN1AsR0FBRyxLQUFLTCxFQUFFc3BCLElBQUksQ0FBQyxTQUFTL1osRUFBRXBQLEVBQUVILEdBQUcsSUFBSUssRUFBRXlKLEVBQUUzSixHQUFHRyxFQUFFLEdBQUcsR0FBR0QsRUFBRSxDQUFDQyxFQUFFNEMsT0FBTy9DLEVBQUUrQyxPQUFPLElBQUksSUFBSTNDLEVBQUUsRUFBRUEsRUFBRUosRUFBRStDLE9BQU8zQyxJQUFJRCxFQUFFQyxHQUFHMkssRUFBRS9LLEVBQUVJLEdBQUdQLEVBQUVHLEVBQUVJLEdBQUdKLEdBQUcsRUFBRSxDQUFDLElBQUl5QixFQUFFcEIsRUFBRSxtQkFBbUJpQyxFQUFFQSxFQUFFdEMsR0FBRyxHQUFHLEdBQUd1QyxFQUFFLENBQUNkLEVBQUUsQ0FBQyxFQUFFLElBQUksSUFBSTRCLEVBQUUsRUFBRUEsRUFBRWhELEVBQUUwQyxPQUFPTSxJQUFJNUIsRUFBRSxJQUFJcEIsRUFBRWdELElBQUloRCxFQUFFZ0QsRUFBRSxDQUFDLElBQUksSUFBSTVDLEtBQUtULEVBQUUrSyxFQUFFL0ssRUFBRVMsS0FBS1AsR0FBRzBELE9BQU9ZLE9BQU8vRCxNQUFNQSxHQUFHQSxFQUFFVCxFQUFFK0MsUUFBUVIsR0FBR2QsRUFBRSxJQUFJaEIsYUFBYU0sU0FBUyxTQUFTOFAsS0FBS3BRLEdBQUdOLEVBQUV3QyxLQUFLOUMsRUFBRVksRUFBRVQsR0FBRyxLQUFLSCxFQUFFRyxFQUFFUyxHQUFHVCxJQUFJRyxFQUFFd0MsS0FBS2xDLEVBQUUsS0FBS1osRUFBRUcsRUFBRVMsR0FBR1QsTUFBTSxHQUFHLG1CQUFtQnNDLEVBQUUsSUFBSSxJQUFJZ0IsRUFBRSxFQUFFQSxFQUFFakQsRUFBRTBDLE9BQU9PLElBQUlnQyxFQUFFL0UsS0FBS1AsRUFBRUssRUFBRWlELEtBQUtuRCxFQUFFd0MsS0FBSyxJQUFJOUMsRUFBRVEsRUFBRWlELElBQUksTUFBTXpELEVBQUVHLEVBQUVLLEVBQUVpRCxJQUFJdEQsSUFBSSxPQUFPRyxDQUFDLEdBQUcsS0FBSyxDQUFDSCxFQUFFSCxFQUFFSyxLQUFLLGFBQWEsSUFBSUMsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRyxFQUFFRixFQUFFLGVBQWVrRCxFQUFFbEQsRUFBRSxhQUFZLEdBQUlNLEVBQUVOLEVBQUUsU0FBUSxHQUFJbUQsRUFBRWxELEVBQUUseUJBQXdCLEdBQUlFLEVBQUVGLEVBQUUseUJBQXdCLEdBQUl1RCxFQUFFdkQsRUFBRSx5QkFBd0IsR0FBSW9CLEVBQUVwQixFQUFFLHFCQUFvQixHQUFJOEIsRUFBRTlCLEVBQUUscUJBQW9CLEdBQUlNLEVBQUVOLEVBQUUscUJBQW9CLEdBQUlpRSxFQUFFLFNBQVNyRSxFQUFFSCxHQUFHLElBQUksSUFBSUssRUFBRUMsRUFBRUgsRUFBRSxRQUFRRSxFQUFFQyxFQUFFc0MsTUFBTXRDLEVBQUVELEVBQUUsR0FBR0EsRUFBRXlPLE1BQU05TyxFQUFFLE9BQU9NLEVBQUVzQyxLQUFLdkMsRUFBRXVDLEtBQUt2QyxFQUFFdUMsS0FBS3pDLEVBQUV5QyxLQUFLekMsRUFBRXlDLEtBQUt2QyxFQUFFQSxDQUFDLEVBQUVGLEVBQUVDLFFBQVEsV0FBVyxJQUFJRCxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLENBQUNzcEIsT0FBTyxTQUFTenBCLEdBQUcsSUFBSUcsRUFBRXNvQixJQUFJem9CLEdBQUcsTUFBTSxJQUFJSyxFQUFFLGlDQUFpQ29CLEVBQUV6QixHQUFHLEVBQUVjLElBQUksU0FBU1gsR0FBRyxHQUFHa0QsR0FBR2xELElBQUksaUJBQWlCQSxHQUFHLG1CQUFtQkEsSUFBSSxHQUFHSCxFQUFFLE9BQU9zRCxFQUFFdEQsRUFBRUcsUUFBUSxHQUFHTSxHQUFHLEdBQUdaLEVBQUUsT0FBTzJCLEVBQUUzQixFQUFFTSxRQUFRLEdBQUdELEVBQUUsT0FBTyxTQUFTRixFQUFFSCxHQUFHLElBQUlLLEVBQUVtRSxFQUFFckUsRUFBRUgsR0FBRyxPQUFPSyxHQUFHQSxFQUFFZSxLQUFLLENBQTVDLENBQThDZixFQUFFQyxFQUFFLEVBQUVzb0IsSUFBSSxTQUFTdG9CLEdBQUcsR0FBR2tELEdBQUdsRCxJQUFJLGlCQUFpQkEsR0FBRyxtQkFBbUJBLElBQUksR0FBR0gsRUFBRSxPQUFPMkQsRUFBRTNELEVBQUVHLFFBQVEsR0FBR00sR0FBRyxHQUFHWixFQUFFLE9BQU9hLEVBQUViLEVBQUVNLFFBQVEsR0FBR0QsRUFBRSxPQUFPLFNBQVNGLEVBQUVILEdBQUcsUUFBUXdFLEVBQUVyRSxFQUFFSCxFQUFFLENBQTVCLENBQThCSyxFQUFFQyxHQUFHLE9BQU0sQ0FBRSxFQUFFc0QsSUFBSSxTQUFTdEQsRUFBRUMsR0FBR2lELEdBQUdsRCxJQUFJLGlCQUFpQkEsR0FBRyxtQkFBbUJBLElBQUlILElBQUlBLEVBQUUsSUFBSXFELEdBQUcvQyxFQUFFTixFQUFFRyxFQUFFQyxJQUFJSyxHQUFHWixJQUFJQSxFQUFFLElBQUlZLEdBQUd5QixFQUFFckMsRUFBRU0sRUFBRUMsS0FBS0YsSUFBSUEsRUFBRSxDQUFDeU8sSUFBSSxDQUFDLEVBQUVsTSxLQUFLLE9BQU8sU0FBU3pDLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRWtFLEVBQUVyRSxFQUFFSCxHQUFHTSxFQUFFQSxFQUFFYyxNQUFNZixFQUFFRixFQUFFeUMsS0FBSyxDQUFDa00sSUFBSTlPLEVBQUU0QyxLQUFLekMsRUFBRXlDLEtBQUt4QixNQUFNZixFQUFFLENBQTNFLENBQTZFQSxFQUFFQyxFQUFFQyxHQUFHLEdBQUcsT0FBT0QsQ0FBQyxHQUFHLEtBQUtILElBQUksYUFBYSxTQUFTSCxFQUFFRyxFQUFFSCxJQUFJLE1BQU1BLEdBQUdBLEVBQUVHLEVBQUUrQyxVQUFVbEQsRUFBRUcsRUFBRStDLFFBQVEsSUFBSSxJQUFJN0MsRUFBRSxFQUFFQyxFQUFFLElBQUlzSSxNQUFNNUksR0FBR0ssRUFBRUwsRUFBRUssSUFBSUMsRUFBRUQsR0FBR0YsRUFBRUUsR0FBRyxPQUFPQyxDQUFDLENBQUMsU0FBU0QsSUFBSTZELEtBQUsybEIsVUFBVSxFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssT0FBTyxNQUFNLFFBQVEsT0FBTyxTQUFTLE9BQU8sa0JBQWtCLFlBQVksUUFBUSxLQUFLLFlBQVksVUFBVSxTQUFTLFlBQVksUUFBUSxLQUFLLE1BQU0sTUFBTSxPQUFPLG1CQUFtQm5CLFNBQVEsU0FBVXZvQixHQUFHRSxFQUFFb0IsVUFBVXRCLEdBQUcsV0FBVyxJQUFJLElBQUlILEVBQUVpRCxVQUFVQyxPQUFPN0MsRUFBRSxJQUFJdUksTUFBTTVJLEdBQUdNLEVBQUUsRUFBRUEsRUFBRU4sRUFBRU0sSUFBSUQsRUFBRUMsR0FBRzJDLFVBQVUzQyxHQUFHLE9BQU80RCxLQUFLMmxCLFVBQVUvbUIsS0FBSyxDQUFDMmEsR0FBR3RkLEVBQUUycEIsS0FBS3pwQixJQUFJNkQsSUFBSSxDQUFFLElBQUc3RCxFQUFFb0IsVUFBVXNvQixhQUFhLFNBQVM1cEIsR0FBRytELEtBQUsybEIsVUFBVW5CLFNBQVEsU0FBVXJvQixHQUFHLElBQUlDLEVBQUVILEVBQUVFLEVBQUVvZCxJQUFJeFosTUFBTTlELEVBQUUsU0FBU0EsR0FBRyxHQUFHeUksTUFBTUMsUUFBUTFJLEdBQUcsT0FBT0gsRUFBRUcsRUFBRSxDQUEzQyxDQUE2Q0csRUFBRUQsRUFBRXlwQixPQUFPLFNBQVMzcEIsR0FBRyxHQUFHLG9CQUFvQmUsUUFBUUEsT0FBT3lCLFlBQVk3QixPQUFPWCxHQUFHLE9BQU95SSxNQUFNdkMsS0FBS2xHLEVBQUUsQ0FBNUYsQ0FBOEZHLElBQUksU0FBU0gsRUFBRUUsR0FBRyxHQUFHRixFQUFFLENBQUMsR0FBRyxpQkFBaUJBLEVBQUUsT0FBT0gsRUFBRUcsRUFBRUUsR0FBRyxJQUFJQyxFQUFFUSxPQUFPVyxVQUFVdUgsU0FBU3RJLEtBQUtQLEdBQUd1SyxNQUFNLEdBQUcsR0FBRyxNQUFNLFdBQVdwSyxHQUFHSCxFQUFFNEwsY0FBY3pMLEVBQUVILEVBQUU0TCxZQUFZOFEsTUFBTSxRQUFRdmMsR0FBRyxRQUFRQSxFQUFFc0ksTUFBTXZDLEtBQUtsRyxHQUFHLGNBQWNHLEdBQUcsMkNBQTJDMFEsS0FBSzFRLEdBQUdOLEVBQUVHLEVBQUVFLFFBQUcsQ0FBTSxDQUFDLENBQTNSLENBQTZSQyxJQUFJLFdBQVcsTUFBTSxJQUFJaUcsVUFBVSx1SUFBdUksQ0FBdEssR0FBMkssR0FBRSxFQUFFcEcsRUFBRUMsUUFBUUMsR0FBRyxLQUFLLENBQUNGLEVBQUVILEVBQUVLLEtBQUssYUFBYSxTQUFTQyxFQUFFSCxHQUFHLE9BQU9HLEVBQUUsbUJBQW1CWSxRQUFRLGlCQUFpQkEsT0FBT3lCLFNBQVMsU0FBU3hDLEdBQUcsY0FBY0EsQ0FBQyxFQUFFLFNBQVNBLEdBQUcsT0FBT0EsR0FBRyxtQkFBbUJlLFFBQVFmLEVBQUU0TCxjQUFjN0ssUUFBUWYsSUFBSWUsT0FBT08sVUFBVSxnQkFBZ0J0QixDQUFDLEdBQUdBLEVBQUUsQ0FBQyxJQUFJSSxFQUFFLG9CQUFvQmlnQixPQUFPamdCLEVBQUVpZ0IsT0FBTyxvQkFBb0J2Z0IsTUFBTTRYLFFBQVFtUyxLQUFLLHVFQUF1RXpwQixPQUFFLEdBQVFBLEVBQUVOLEtBQUssSUFBSTJCLEVBQUV2QixFQUFFLE1BQU1HLEVBQUVILEVBQUUsTUFBTW1ELEVBQUVuRCxFQUFFLE1BQU1PLEVBQUVQLEVBQUUsTUFBTW9ELEVBQUVwRCxFQUFFLE1BQU1JLEVBQUVKLEVBQUUsS0FBS3lELEVBQUV6RCxFQUFFLE1BQU0sU0FBU3NCLElBQUksQ0FBQ3hCLEVBQUVDLFFBQVEsU0FBU0QsRUFBRUUsR0FBRyxNQUFNLG1CQUFtQkEsRUFBRSxJQUFJTCxFQUFFaXFCLFFBQVEsTUFBTTlwQixHQUFHK3BCLElBQUk3cEIsR0FBRyxJQUFJNEMsVUFBVUMsT0FBTyxJQUFJbEQsRUFBRWlxQixRQUFRLE1BQU05cEIsR0FBRyxJQUFJSCxFQUFFaXFCLFFBQVE5cEIsRUFBRUUsRUFBRSxFQUFFLElBQUlnQyxFQUFFckMsRUFBRUcsRUFBRUMsUUFBUUosRUFBRWlxQixRQUFRem5CLEVBQUVILEVBQUU4bkIsT0FBTyxXQUFXLEdBQUc1cEIsRUFBRTZwQixrQkFBa0I3cEIsRUFBRThwQixVQUFVLFVBQVU5cEIsRUFBRThwQixTQUFTQyxXQUFXL3BCLEVBQUVncUIsZUFBZSxPQUFPLElBQUlILGVBQWUsSUFBSSxPQUFPLElBQUlHLGNBQWMsb0JBQThCLENBQVQsTUFBTXBxQixHQUFHLENBQUMsSUFBSSxPQUFPLElBQUlvcUIsY0FBYyxxQkFBK0IsQ0FBVCxNQUFNcHFCLEdBQUcsQ0FBQyxJQUFJLE9BQU8sSUFBSW9xQixjQUFjLHFCQUErQixDQUFULE1BQU1wcUIsR0FBRyxDQUFDLElBQUksT0FBTyxJQUFJb3FCLGNBQWMsaUJBQTJCLENBQVQsTUFBTXBxQixHQUFHLENBQUMsTUFBTSxJQUFJcUYsTUFBTSx3REFBd0QsRUFBRSxJQUFJM0UsRUFBRSxHQUFHOFgsS0FBSyxTQUFTeFksR0FBRyxPQUFPQSxFQUFFd1ksTUFBTSxFQUFFLFNBQVN4WSxHQUFHLE9BQU9BLEVBQUU4USxRQUFRLGVBQWUsR0FBRyxFQUFFLFNBQVN6TSxFQUFFckUsR0FBRyxJQUFJc0QsRUFBRXRELEdBQUcsT0FBT0EsRUFBRSxJQUFJSCxFQUFFLEdBQUcsSUFBSSxJQUFJSyxLQUFLRixFQUFFVyxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS1AsRUFBRUUsSUFBSWlDLEVBQUV0QyxFQUFFSyxFQUFFRixFQUFFRSxJQUFJLE9BQU9MLEVBQUVrUSxLQUFLLElBQUksQ0FBQyxTQUFTNU4sRUFBRW5DLEVBQUVILEVBQUVLLEdBQUcsUUFBRyxJQUFTQSxFQUFFLEdBQUcsT0FBT0EsRUFBRSxHQUFHdUksTUFBTUMsUUFBUXhJLEdBQUdBLEVBQUVxb0IsU0FBUSxTQUFVcm9CLEdBQUdpQyxFQUFFbkMsRUFBRUgsRUFBRUssRUFBRyxTQUFRLEdBQUdvRCxFQUFFcEQsR0FBRyxJQUFJLElBQUlDLEtBQUtELEVBQUVTLE9BQU9XLFVBQVVDLGVBQWVoQixLQUFLTCxFQUFFQyxJQUFJZ0MsRUFBRW5DLEVBQUUsR0FBR2dELE9BQU9uRCxFQUFFLEtBQUttRCxPQUFPN0MsRUFBRSxLQUFLRCxFQUFFQyxTQUFTSCxFQUFFMkMsS0FBS2djLFVBQVU5ZSxHQUFHLElBQUkrZSxtQkFBbUIxZSxTQUFTRixFQUFFMkMsS0FBS2djLFVBQVU5ZSxHQUFHLENBQUMsU0FBU1csRUFBRVIsR0FBRyxJQUFJLElBQUlILEVBQUVLLEVBQUVDLEVBQUUsQ0FBQyxFQUFFQyxFQUFFSixFQUFFaVcsTUFBTSxLQUFLeFUsRUFBRSxFQUFFcEIsRUFBRUQsRUFBRTJDLE9BQU90QixFQUFFcEIsSUFBSW9CLEdBQUcsS0FBS3ZCLEdBQUdMLEVBQUVPLEVBQUVxQixJQUFJdU8sUUFBUSxNQUFNN1AsRUFBRXVlLG1CQUFtQjdlLElBQUksR0FBR00sRUFBRXVlLG1CQUFtQjdlLEVBQUUwSyxNQUFNLEVBQUVySyxLQUFLd2UsbUJBQW1CN2UsRUFBRTBLLE1BQU1ySyxFQUFFLElBQUksT0FBT0MsQ0FBQyxDQUFDLFNBQVNpQyxFQUFFcEMsR0FBRyxNQUFNLHNCQUFzQjZRLEtBQUs3USxFQUFFLENBQUMsU0FBU3NDLEVBQUV0QyxHQUFHK0QsS0FBS3NtQixJQUFJcnFCLEVBQUUrRCxLQUFLdW1CLElBQUl2bUIsS0FBS3NtQixJQUFJQyxJQUFJdm1CLEtBQUt1a0IsS0FBSyxTQUFTdmtCLEtBQUtzbUIsSUFBSTdILFNBQVMsS0FBS3plLEtBQUt1bUIsSUFBSUMsY0FBYyxTQUFTeG1CLEtBQUt1bUIsSUFBSUMsb0JBQWUsSUFBU3htQixLQUFLdW1CLElBQUlDLGFBQWF4bUIsS0FBS3VtQixJQUFJRSxhQUFhLEtBQUt6bUIsS0FBSzBtQixXQUFXMW1CLEtBQUtzbUIsSUFBSUMsSUFBSUcsV0FBVyxJQUFJNXFCLEVBQUVrRSxLQUFLdW1CLElBQUlJLE9BQU8sT0FBTzdxQixJQUFJQSxFQUFFLEtBQUtrRSxLQUFLNG1CLHFCQUFxQjlxQixHQUFHa0UsS0FBSzZtQixRQUFRLFNBQVM1cUIsR0FBRyxJQUFJLElBQUlILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixFQUFFekIsRUFBRWlXLE1BQU0sU0FBUzVWLEVBQUUsQ0FBQyxFQUFFZ0QsRUFBRSxFQUFFNUMsRUFBRWdCLEVBQUVzQixPQUFPTSxFQUFFNUMsSUFBSTRDLEdBQUcsS0FBS3hELEdBQUdLLEVBQUV1QixFQUFFNEIsSUFBSTJNLFFBQVEsUUFBUTdQLEVBQUVELEVBQUVxSyxNQUFNLEVBQUUxSyxHQUFHc1IsY0FBYy9RLEVBQUVNLEVBQUVSLEVBQUVxSyxNQUFNMUssRUFBRSxJQUFJUSxFQUFFRixHQUFHQyxHQUFHLE9BQU9DLENBQUMsQ0FBM0ssQ0FBNkswRCxLQUFLdW1CLElBQUlPLHlCQUF5QjltQixLQUFLK21CLE9BQU8vbUIsS0FBSzZtQixRQUFRN21CLEtBQUsrbUIsT0FBTyxnQkFBZ0IvbUIsS0FBS3VtQixJQUFJUyxrQkFBa0IsZ0JBQWdCaG5CLEtBQUtpbkIscUJBQXFCam5CLEtBQUsrbUIsUUFBUSxPQUFPL21CLEtBQUt1a0IsTUFBTXRvQixFQUFFaXJCLGNBQWNsbkIsS0FBS21uQixLQUFLbm5CLEtBQUt1bUIsSUFBSWEsU0FBU3BuQixLQUFLbW5CLEtBQUssU0FBU25uQixLQUFLc21CLElBQUk3SCxPQUFPLEtBQUt6ZSxLQUFLcW5CLFdBQVdybkIsS0FBS3VrQixLQUFLdmtCLEtBQUt1a0IsS0FBS3ZrQixLQUFLdW1CLElBQUlhLFNBQVMsQ0FBQyxTQUFTOW9CLEVBQUVyQyxFQUFFSCxHQUFHLElBQUlLLEVBQUU2RCxLQUFLQSxLQUFLc25CLE9BQU90bkIsS0FBS3NuQixRQUFRLEdBQUd0bkIsS0FBS3llLE9BQU94aUIsRUFBRStELEtBQUt1bkIsSUFBSXpyQixFQUFFa0UsS0FBSyttQixPQUFPLENBQUMsRUFBRS9tQixLQUFLd25CLFFBQVEsQ0FBQyxFQUFFeG5CLEtBQUtrWixHQUFHLE9BQU0sV0FBWSxJQUFJamQsRUFBRUgsRUFBRSxLQUFLTSxFQUFFLEtBQUssSUFBSUEsRUFBRSxJQUFJbUMsRUFBRXBDLEVBQWtTLENBQS9SLE1BQU1GLEdBQUcsT0FBT0gsRUFBRSxJQUFJd0YsTUFBTSwyQ0FBMkN5aUIsT0FBTSxFQUFHam9CLEVBQUUyckIsU0FBU3hyQixFQUFFRSxFQUFFb3FCLEtBQUt6cUIsRUFBRTRyQixpQkFBWSxJQUFTdnJCLEVBQUVvcUIsSUFBSUMsYUFBYXJxQixFQUFFb3FCLElBQUlFLGFBQWF0cUIsRUFBRW9xQixJQUFJYSxTQUFTdHJCLEVBQUU2cUIsT0FBT3hxQixFQUFFb3FCLElBQUlJLE9BQU94cUIsRUFBRW9xQixJQUFJSSxPQUFPLEtBQUs3cUIsRUFBRTZyQixXQUFXN3JCLEVBQUU2cUIsU0FBUzdxQixFQUFFNHJCLFlBQVksS0FBSzVyQixFQUFFNnFCLE9BQU8sTUFBTXhxQixFQUFFeXJCLFNBQVM5ckIsRUFBRSxDQUFDSyxFQUFFd2QsS0FBSyxXQUFXdmQsR0FBRyxJQUFJRCxFQUFFMHJCLGNBQWN6ckIsS0FBS0gsRUFBRSxJQUFJcUYsTUFBTWxGLEVBQUVzcUIsWUFBWXRxQixFQUFFbW9CLE1BQU0sOEJBQTJDLENBQVosTUFBTXpvQixHQUFHRyxFQUFFSCxDQUFDLENBQUNHLEdBQUdBLEVBQUV3ckIsU0FBUzNyQixFQUFFRyxFQUFFbXJCLFNBQVNockIsRUFBRUgsRUFBRTBxQixPQUFPdnFCLEVBQUV1cUIsT0FBT3hxQixFQUFFeXJCLFNBQVMzckIsRUFBRUcsSUFBSUQsRUFBRXlyQixTQUFTLEtBQUt4ckIsRUFBRyxHQUFFLENBQUMsU0FBU29DLEVBQUV2QyxFQUFFSCxFQUFFSyxHQUFHLElBQUlDLEVBQUUrQixFQUFFLFNBQVNsQyxHQUFHLE1BQU0sbUJBQW1CSCxJQUFJSyxFQUFFTCxFQUFFQSxFQUFFLE1BQU1BLEdBQUdNLEVBQUUwckIsS0FBS2hzQixHQUFHSyxHQUFHQyxFQUFFNHBCLElBQUk3cEIsR0FBR0MsQ0FBQyxDQUFDK0IsRUFBRTRwQixnQkFBZ0J6bkIsRUFBRW5DLEVBQUU2cEIsWUFBWXZyQixFQUFFMEIsRUFBRThwQixNQUFNLENBQUNDLEtBQUssWUFBWUMsS0FBSyxtQkFBbUJDLElBQUksV0FBV0MsV0FBVyxvQ0FBb0NDLEtBQUssb0NBQW9DLFlBQVkscUNBQXFDbnFCLEVBQUVvcUIsVUFBVSxDQUFDLG9DQUFvQ2pwQixFQUFFMmEsVUFBVSxtQkFBbUIzZCxHQUFHNkIsRUFBRTRsQixNQUFNLENBQUMsb0NBQW9DdG5CLEVBQUUsbUJBQW1CdWQsS0FBSytKLE9BQU94bkIsRUFBRWdDLEVBQUVoQixXQUFXZ0IsRUFBRWhCLFVBQVU4cEIsV0FBVyxTQUFTcHJCLEdBQUcsSUFBSUgsRUFBRXFDLEVBQUU0bEIsTUFBTS9qQixLQUFLQyxNQUFNLE9BQU9ELEtBQUtzbUIsSUFBSWtDLFFBQVF4b0IsS0FBS3NtQixJQUFJa0MsUUFBUXhvQixLQUFLL0QsS0FBS0gsR0FBR3VDLEVBQUUyQixLQUFLQyxRQUFRbkUsRUFBRXFDLEVBQUU0bEIsTUFBTSxxQkFBcUJqb0IsR0FBR0csSUFBSUEsRUFBRStDLE9BQU8sR0FBRy9DLGFBQWFXLFFBQVFkLEVBQUVHLEdBQUcsS0FBSyxFQUFFc0MsRUFBRWhCLFVBQVVrckIsUUFBUSxXQUFXLElBQUl4c0IsRUFBRStELEtBQUtzbUIsSUFBSXhxQixFQUFFRyxFQUFFd2lCLE9BQU90aUIsRUFBRUYsRUFBRXNyQixJQUFJbnJCLEVBQUUsVUFBVTZDLE9BQU9uRCxFQUFFLEtBQUttRCxPQUFPOUMsRUFBRSxNQUFNOEMsT0FBT2UsS0FBSzJtQixPQUFPLEtBQUt0cUIsRUFBRSxJQUFJaUYsTUFBTWxGLEdBQUcsT0FBT0MsRUFBRXNxQixPQUFPM21CLEtBQUsybUIsT0FBT3RxQixFQUFFb2lCLE9BQU8zaUIsRUFBRU8sRUFBRWtyQixJQUFJcHJCLEVBQUVFLENBQUMsRUFBRThCLEVBQUV1cUIsU0FBU25xQixFQUFFYixFQUFFWSxFQUFFZixXQUFXYixFQUFFNEIsRUFBRWYsV0FBV2UsRUFBRWYsVUFBVTBDLEtBQUssU0FBU2hFLEdBQUcsT0FBTytELEtBQUtOLElBQUksZUFBZXZCLEVBQUU4cEIsTUFBTWhzQixJQUFJQSxHQUFHK0QsSUFBSSxFQUFFMUIsRUFBRWYsVUFBVW9yQixPQUFPLFNBQVMxc0IsR0FBRyxPQUFPK0QsS0FBS04sSUFBSSxTQUFTdkIsRUFBRThwQixNQUFNaHNCLElBQUlBLEdBQUcrRCxJQUFJLEVBQUUxQixFQUFFZixVQUFVcXJCLEtBQUssU0FBUzNzQixFQUFFSCxFQUFFSyxHQUFHLElBQUk0QyxVQUFVQyxTQUFTbEQsRUFBRSxJQUFJLFdBQVdNLEVBQUVOLElBQUksT0FBT0EsSUFBSUssRUFBRUwsRUFBRUEsRUFBRSxJQUFJSyxJQUFJQSxFQUFFLENBQUM4RCxLQUFLLG1CQUFtQjRvQixLQUFLLFFBQVEsU0FBUyxJQUFJeHNCLEVBQUUsU0FBU0osR0FBRyxHQUFHLG1CQUFtQjRzQixLQUFLLE9BQU9BLEtBQUs1c0IsR0FBRyxNQUFNLElBQUlxRixNQUFNLGdEQUFnRCxFQUFFLE9BQU90QixLQUFLOG9CLE1BQU03c0IsRUFBRUgsRUFBRUssRUFBRUUsRUFBRSxFQUFFaUMsRUFBRWYsVUFBVXdyQixNQUFNLFNBQVM5c0IsR0FBRyxNQUFNLGlCQUFpQkEsSUFBSUEsRUFBRXFFLEVBQUVyRSxJQUFJQSxHQUFHK0QsS0FBS3NuQixPQUFPMW9CLEtBQUszQyxHQUFHK0QsSUFBSSxFQUFFMUIsRUFBRWYsVUFBVXlyQixPQUFPLFNBQVMvc0IsRUFBRUgsRUFBRUssR0FBRyxHQUFHTCxFQUFFLENBQUMsR0FBR2tFLEtBQUtpcEIsTUFBTSxNQUFNLElBQUkzbkIsTUFBTSw4Q0FBOEN0QixLQUFLa3BCLGVBQWVDLE9BQU9sdEIsRUFBRUgsRUFBRUssR0FBR0wsRUFBRTZjLEtBQUssQ0FBQyxPQUFPM1ksSUFBSSxFQUFFMUIsRUFBRWYsVUFBVTJyQixhQUFhLFdBQVcsT0FBT2xwQixLQUFLb3BCLFlBQVlwcEIsS0FBS29wQixVQUFVLElBQUkvc0IsRUFBRWd0QixVQUFVcnBCLEtBQUtvcEIsU0FBUyxFQUFFOXFCLEVBQUVmLFVBQVVxcUIsU0FBUyxTQUFTM3JCLEVBQUVILEdBQUcsR0FBR2tFLEtBQUtzcEIsYUFBYXJ0QixFQUFFSCxHQUFHLE9BQU9rRSxLQUFLdXBCLFNBQVMsSUFBSXB0QixFQUFFNkQsS0FBS3dwQixVQUFVeHBCLEtBQUt5cEIsZUFBZXh0QixJQUFJK0QsS0FBSzBwQixjQUFjenRCLEVBQUUwdEIsUUFBUTNwQixLQUFLNHBCLFNBQVMsR0FBRzVwQixLQUFLMlosS0FBSyxRQUFRMWQsSUFBSUUsRUFBRUYsRUFBRUgsRUFBRSxFQUFFd0MsRUFBRWYsVUFBVXNzQixpQkFBaUIsV0FBVyxJQUFJNXRCLEVBQUUsSUFBSXFGLE1BQU0sZ0tBQWdLckYsRUFBRTZ0QixhQUFZLEVBQUc3dEIsRUFBRTBxQixPQUFPM21CLEtBQUsybUIsT0FBTzFxQixFQUFFd2lCLE9BQU96ZSxLQUFLeWUsT0FBT3hpQixFQUFFc3JCLElBQUl2bkIsS0FBS3VuQixJQUFJdm5CLEtBQUs0bkIsU0FBUzNyQixFQUFFLEVBQUVxQyxFQUFFZixVQUFVd3NCLE1BQU0sV0FBVyxPQUFPcFcsUUFBUW1TLEtBQUssMERBQTBEOWxCLElBQUksRUFBRTFCLEVBQUVmLFVBQVV5c0IsR0FBRzFyQixFQUFFZixVQUFVd3NCLE1BQU16ckIsRUFBRWYsVUFBVTBELE9BQU8zQyxFQUFFZixVQUFVeXNCLEdBQUcxckIsRUFBRWYsVUFBVTBWLE1BQU0sV0FBVyxNQUFNLElBQUkzUixNQUFNLDhEQUE4RCxFQUFFaEQsRUFBRWYsVUFBVTBzQixLQUFLM3JCLEVBQUVmLFVBQVUwVixNQUFNM1UsRUFBRWYsVUFBVTJzQixRQUFRLFNBQVNqdUIsR0FBRyxPQUFPQSxHQUFHLFdBQVdHLEVBQUVILEtBQUt5SSxNQUFNQyxRQUFRMUksSUFBSSxvQkFBb0JXLE9BQU9XLFVBQVV1SCxTQUFTdEksS0FBS1AsRUFBRSxFQUFFcUMsRUFBRWYsVUFBVXlvQixJQUFJLFNBQVMvcEIsR0FBRytELEtBQUttcUIsWUFBWXhXLFFBQVFtUyxLQUFLLHlFQUF5RTlsQixLQUFLbXFCLFlBQVcsRUFBR25xQixLQUFLd3BCLFVBQVV2dEIsR0FBR3dCLEVBQUV1QyxLQUFLb3FCLHVCQUF1QnBxQixLQUFLcXFCLE1BQU0sRUFBRS9yQixFQUFFZixVQUFVK3NCLGtCQUFrQixXQUFXLElBQUlydUIsRUFBRStELEtBQUtBLEtBQUt1cUIsaUJBQWlCdnFCLEtBQUt3cUIsc0JBQXNCeHFCLEtBQUt3cUIsb0JBQW9CQyxZQUFXLFdBQVl4dUIsRUFBRXl1QixjQUFjLHFCQUFxQnp1QixFQUFFc3VCLGVBQWUsWUFBYSxHQUFFdnFCLEtBQUt1cUIsZ0JBQWdCLEVBQUVqc0IsRUFBRWYsVUFBVThzQixLQUFLLFdBQVcsR0FBR3JxQixLQUFLMnFCLFNBQVMsT0FBTzNxQixLQUFLNG5CLFNBQVMsSUFBSXRtQixNQUFNLCtEQUErRCxJQUFJckYsRUFBRStELEtBQUtBLEtBQUt1bUIsSUFBSXBvQixFQUFFOG5CLFNBQVMsSUFBSW5xQixFQUFFa0UsS0FBS3VtQixJQUFJcHFCLEVBQUU2RCxLQUFLb3BCLFdBQVdwcEIsS0FBS2lwQixNQUFNanBCLEtBQUs0cUIsZUFBZTl1QixFQUFFK3VCLG1CQUFtQixXQUFXLElBQUkxdUIsRUFBRUwsRUFBRWd2QixXQUFXLEdBQUczdUIsR0FBRyxHQUFHRixFQUFFOHVCLHVCQUF1QnRCLGFBQWF4dEIsRUFBRTh1Qix1QkFBdUIsSUFBSTV1QixFQUFFLENBQUMsSUFBSUMsRUFBRSxJQUFJQSxFQUFFTixFQUFFNnFCLE1BQW1CLENBQVosTUFBTTFxQixHQUFHRyxFQUFFLENBQUMsQ0FBQyxJQUFJQSxFQUFFLENBQUMsR0FBR0gsRUFBRSt1QixVQUFVL3VCLEVBQUUwdUIsU0FBUyxPQUFPLE9BQU8xdUIsRUFBRTR0QixrQkFBa0IsQ0FBQzV0QixFQUFFMGQsS0FBSyxNQUFNLENBQUMsRUFBRSxJQUFJdmQsRUFBRSxTQUFTTixFQUFFSyxHQUFHQSxFQUFFOHVCLE1BQU0sSUFBSTl1QixFQUFFK3VCLFFBQVEvdUIsRUFBRWd2QixPQUFPaHZCLEVBQUU4dUIsTUFBTSxJQUFJLE1BQU05dUIsRUFBRSt1QixTQUFTekIsYUFBYXh0QixFQUFFdXVCLHNCQUFzQnJ1QixFQUFFaXZCLFVBQVV0dkIsRUFBRUcsRUFBRTBkLEtBQUssV0FBV3hkLEVBQUUsRUFBRSxHQUFHNkQsS0FBSzZaLGFBQWEsWUFBWSxJQUFJL2QsRUFBRXFkLGlCQUFpQixXQUFXL2MsRUFBRWlCLEtBQUssS0FBSyxhQUFhdkIsRUFBRXV2QixRQUFRdnZCLEVBQUV1dkIsT0FBT2xTLGlCQUFpQixXQUFXL2MsRUFBRWlCLEtBQUssS0FBSyxVQUFvQixDQUFULE1BQU1wQixHQUFHLENBQUNILEVBQUV1dkIsUUFBUXJyQixLQUFLc3FCLG9CQUFvQixJQUFJdHFCLEtBQUtzckIsVUFBVXRyQixLQUFLdXJCLFNBQVN6dkIsRUFBRTB2QixLQUFLeHJCLEtBQUt5ZSxPQUFPemUsS0FBS3VuQixLQUFJLEVBQUd2bkIsS0FBS3NyQixTQUFTdHJCLEtBQUt1ckIsVUFBVXp2QixFQUFFMHZCLEtBQUt4ckIsS0FBS3llLE9BQU96ZSxLQUFLdW5CLEtBQUksRUFBb0MsQ0FBaEMsTUFBTXRyQixHQUFHLE9BQU8rRCxLQUFLNG5CLFNBQVMzckIsRUFBRSxDQUFDLEdBQUcrRCxLQUFLeXJCLG1CQUFtQjN2QixFQUFFNHZCLGlCQUFnQixJQUFLMXJCLEtBQUtvcEIsV0FBVyxRQUFRcHBCLEtBQUt5ZSxRQUFRLFNBQVN6ZSxLQUFLeWUsUUFBUSxpQkFBaUJ0aUIsSUFBSTZELEtBQUtrcUIsUUFBUS90QixHQUFHLENBQUMsSUFBSUUsRUFBRTJELEtBQUt3bkIsUUFBUSxnQkFBZ0I5cEIsRUFBRXNDLEtBQUsyckIsYUFBYXh0QixFQUFFb3FCLFVBQVVsc0IsRUFBRUEsRUFBRTZWLE1BQU0sS0FBSyxHQUFHLEtBQUt4VSxHQUFHVyxFQUFFaEMsS0FBS3FCLEVBQUVTLEVBQUVvcUIsVUFBVSxxQkFBcUI3cUIsSUFBSXZCLEVBQUV1QixFQUFFdkIsR0FBRyxDQUFDLElBQUksSUFBSUcsS0FBSzBELEtBQUsrbUIsT0FBTyxPQUFPL21CLEtBQUsrbUIsT0FBT3pxQixJQUFJTSxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS3dELEtBQUsrbUIsT0FBT3pxQixJQUFJUixFQUFFOHZCLGlCQUFpQnR2QixFQUFFMEQsS0FBSyttQixPQUFPenFCLElBQUkwRCxLQUFLa25CLGdCQUFnQnByQixFQUFFMHFCLGFBQWF4bUIsS0FBS2tuQixlQUFlbG5CLEtBQUsyWixLQUFLLFVBQVUzWixNQUFNbEUsRUFBRWdzQixVQUFLLElBQVMzckIsRUFBRSxLQUFLQSxFQUFFLEVBQUVnQyxFQUFFNHJCLE1BQU0sV0FBVyxPQUFPLElBQUlucUIsQ0FBQyxFQUFFLENBQUMsTUFBTSxPQUFPLFVBQVUsUUFBUSxNQUFNLFVBQVU0a0IsU0FBUSxTQUFVdm9CLEdBQUcyRCxFQUFFckMsVUFBVXRCLEVBQUVtUixlQUFlLFNBQVN0UixFQUFFSyxHQUFHLElBQUlDLEVBQUUsSUFBSStCLEVBQUU0bkIsUUFBUTlwQixFQUFFSCxHQUFHLE9BQU9rRSxLQUFLNmxCLGFBQWF6cEIsR0FBR0QsR0FBR0MsRUFBRTRwQixJQUFJN3BCLEdBQUdDLENBQUMsQ0FBRSxJQUFHd0QsRUFBRXJDLFVBQVVzdUIsSUFBSWpzQixFQUFFckMsVUFBVXV1QixPQUFPM3RCLEVBQUVwQixJQUFJLFNBQVNkLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRStCLEVBQUUsTUFBTWxDLEdBQUcsTUFBTSxtQkFBbUJILElBQUlLLEVBQUVMLEVBQUVBLEVBQUUsTUFBTUEsR0FBR00sRUFBRTJzQixNQUFNanRCLEdBQUdLLEdBQUdDLEVBQUU0cEIsSUFBSTdwQixHQUFHQyxDQUFDLEVBQUUrQixFQUFFNHRCLEtBQUssU0FBUzl2QixFQUFFSCxFQUFFSyxHQUFHLElBQUlDLEVBQUUrQixFQUFFLE9BQU9sQyxHQUFHLE1BQU0sbUJBQW1CSCxJQUFJSyxFQUFFTCxFQUFFQSxFQUFFLE1BQU1BLEdBQUdNLEVBQUUyc0IsTUFBTWp0QixHQUFHSyxHQUFHQyxFQUFFNHBCLElBQUk3cEIsR0FBR0MsQ0FBQyxFQUFFK0IsRUFBRTZ0QixRQUFRLFNBQVMvdkIsRUFBRUgsRUFBRUssR0FBRyxJQUFJQyxFQUFFK0IsRUFBRSxVQUFVbEMsR0FBRyxNQUFNLG1CQUFtQkgsSUFBSUssRUFBRUwsRUFBRUEsRUFBRSxNQUFNQSxHQUFHTSxFQUFFMHJCLEtBQUtoc0IsR0FBR0ssR0FBR0MsRUFBRTRwQixJQUFJN3BCLEdBQUdDLENBQUMsRUFBRStCLEVBQUUwdEIsSUFBSXJ0QixFQUFFTCxFQUFFMnRCLE9BQU90dEIsRUFBRUwsRUFBRTh0QixNQUFNLFNBQVNod0IsRUFBRUgsRUFBRUssR0FBRyxJQUFJQyxFQUFFK0IsRUFBRSxRQUFRbEMsR0FBRyxNQUFNLG1CQUFtQkgsSUFBSUssRUFBRUwsRUFBRUEsRUFBRSxNQUFNQSxHQUFHTSxFQUFFMHJCLEtBQUtoc0IsR0FBR0ssR0FBR0MsRUFBRTRwQixJQUFJN3BCLEdBQUdDLENBQUMsRUFBRStCLEVBQUUrdEIsS0FBSyxTQUFTandCLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRStCLEVBQUUsT0FBT2xDLEdBQUcsTUFBTSxtQkFBbUJILElBQUlLLEVBQUVMLEVBQUVBLEVBQUUsTUFBTUEsR0FBR00sRUFBRTByQixLQUFLaHNCLEdBQUdLLEdBQUdDLEVBQUU0cEIsSUFBSTdwQixHQUFHQyxDQUFDLEVBQUUrQixFQUFFZ3VCLElBQUksU0FBU2x3QixFQUFFSCxFQUFFSyxHQUFHLElBQUlDLEVBQUUrQixFQUFFLE1BQU1sQyxHQUFHLE1BQU0sbUJBQW1CSCxJQUFJSyxFQUFFTCxFQUFFQSxFQUFFLE1BQU1BLEdBQUdNLEVBQUUwckIsS0FBS2hzQixHQUFHSyxHQUFHQyxFQUFFNHBCLElBQUk3cEIsR0FBR0MsQ0FBQyxHQUFHLEtBQUtILElBQUksYUFBYSxTQUFTSCxFQUFFRyxHQUFHLE9BQU9ILEVBQUUsbUJBQW1Ca0IsUUFBUSxpQkFBaUJBLE9BQU95QixTQUFTLFNBQVN4QyxHQUFHLGNBQWNBLENBQUMsRUFBRSxTQUFTQSxHQUFHLE9BQU9BLEdBQUcsbUJBQW1CZSxRQUFRZixFQUFFNEwsY0FBYzdLLFFBQVFmLElBQUllLE9BQU9PLFVBQVUsZ0JBQWdCdEIsQ0FBQyxHQUFHQSxFQUFFLENBQUNBLEVBQUVDLFFBQVEsU0FBU0QsR0FBRyxPQUFPLE9BQU9BLEdBQUcsV0FBV0gsRUFBRUcsRUFBRSxHQUFHLEtBQUssQ0FBQ0EsRUFBRUgsRUFBRUssS0FBSyxhQUFhLFNBQVNDLEVBQUVILEdBQUcsT0FBT0csRUFBRSxtQkFBbUJZLFFBQVEsaUJBQWlCQSxPQUFPeUIsU0FBUyxTQUFTeEMsR0FBRyxjQUFjQSxDQUFDLEVBQUUsU0FBU0EsR0FBRyxPQUFPQSxHQUFHLG1CQUFtQmUsUUFBUWYsRUFBRTRMLGNBQWM3SyxRQUFRZixJQUFJZSxPQUFPTyxVQUFVLGdCQUFnQnRCLENBQUMsR0FBR0EsRUFBRSxDQUFDLElBQUlJLEVBQUVGLEVBQUUsTUFBTSxTQUFTdUIsRUFBRXpCLEdBQUcsR0FBR0EsRUFBRSxPQUFPLFNBQVNBLEdBQUcsSUFBSSxJQUFJSCxLQUFLNEIsRUFBRUgsVUFBVVgsT0FBT1csVUFBVUMsZUFBZWhCLEtBQUtrQixFQUFFSCxVQUFVekIsS0FBS0csRUFBRUgsR0FBRzRCLEVBQUVILFVBQVV6QixJQUFJLE9BQU9HLENBQUMsQ0FBeEgsQ0FBMEhBLEVBQUUsQ0FBQ0EsRUFBRUMsUUFBUXdCLEVBQUVBLEVBQUVILFVBQVVrc0IsYUFBYSxXQUFXLE9BQU9BLGFBQWF6cEIsS0FBS29zQixRQUFRM0MsYUFBYXpwQixLQUFLK3FCLHVCQUF1QnRCLGFBQWF6cEIsS0FBS3dxQiw0QkFBNEJ4cUIsS0FBS29zQixjQUFjcHNCLEtBQUsrcUIsNkJBQTZCL3FCLEtBQUt3cUIsb0JBQW9CeHFCLElBQUksRUFBRXRDLEVBQUVILFVBQVV3bUIsTUFBTSxTQUFTOW5CLEdBQUcsT0FBTytELEtBQUt3b0IsUUFBUXZzQixFQUFFK0QsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVWlwQixhQUFhLFNBQVN2cUIsR0FBRyxPQUFPK0QsS0FBS2tuQixjQUFjanJCLEVBQUUrRCxJQUFJLEVBQUV0QyxFQUFFSCxVQUFVZ3JCLFVBQVUsU0FBU3RzQixHQUFHLE9BQU8rRCxLQUFLMnJCLFlBQVkxdkIsRUFBRStELElBQUksRUFBRXRDLEVBQUVILFVBQVU4dUIsUUFBUSxTQUFTcHdCLEdBQUcsSUFBSUEsR0FBRyxXQUFXRyxFQUFFSCxHQUFHLE9BQU8rRCxLQUFLc3NCLFNBQVNyd0IsRUFBRStELEtBQUt1c0IsaUJBQWlCLEVBQUV2c0IsS0FBS3VxQixlQUFlLEVBQUV2cUIsS0FBSyxJQUFJLElBQUlsRSxLQUFLRyxFQUFFLEdBQUdXLE9BQU9XLFVBQVVDLGVBQWVoQixLQUFLUCxFQUFFSCxHQUFHLE9BQU9BLEdBQUcsSUFBSSxXQUFXa0UsS0FBS3NzQixTQUFTcndCLEVBQUV1d0IsU0FBUyxNQUFNLElBQUksV0FBV3hzQixLQUFLdXNCLGlCQUFpQnR3QixFQUFFbXJCLFNBQVMsTUFBTSxJQUFJLFNBQVNwbkIsS0FBS3VxQixlQUFldHVCLEVBQUVvdkIsT0FBTyxNQUFNLFFBQVExWCxRQUFRbVMsS0FBSyx5QkFBeUJocUIsR0FBRyxPQUFPa0UsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVWt2QixNQUFNLFNBQVN4d0IsRUFBRUgsR0FBRyxPQUFPLElBQUlpRCxVQUFVQyxTQUFRLElBQUsvQyxJQUFJQSxFQUFFLEdBQUdBLEdBQUcsSUFBSUEsRUFBRSxHQUFHK0QsS0FBSzBwQixZQUFZenRCLEVBQUUrRCxLQUFLNHBCLFNBQVMsRUFBRTVwQixLQUFLMHNCLGVBQWU1d0IsRUFBRWtFLElBQUksRUFBRSxJQUFJMUQsRUFBRSxJQUFJcWYsSUFBSSxDQUFDLFlBQVksYUFBYSxhQUFhLGVBQWUsUUFBUSxZQUFZLGNBQWMsY0FBY3JjLEVBQUUsSUFBSXFjLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxNQUFNamUsRUFBRUgsVUFBVStyQixhQUFhLFNBQVNydEIsRUFBRUgsR0FBRyxJQUFJa0UsS0FBSzBwQixhQUFhMXBCLEtBQUs0cEIsWUFBWTVwQixLQUFLMHBCLFlBQVksT0FBTSxFQUFHLEdBQUcxcEIsS0FBSzBzQixlQUFlLElBQUksSUFBSXZ3QixFQUFFNkQsS0FBSzBzQixlQUFlendCLEVBQUVILEdBQUcsSUFBRyxJQUFLSyxFQUFFLE9BQU0sRUFBRyxJQUFHLElBQUtBLEVBQUUsT0FBTSxDQUE0QixDQUF6QixNQUFNRixHQUFHMFgsUUFBUTlVLE1BQU01QyxFQUFFLENBQUMsR0FBR0gsR0FBR0EsRUFBRTZxQixRQUFRcm5CLEVBQUVvbEIsSUFBSTVvQixFQUFFNnFCLFFBQVEsT0FBTSxFQUFHLEdBQUcxcUIsRUFBRSxDQUFDLEdBQUdBLEVBQUUyYyxNQUFNdGMsRUFBRW9vQixJQUFJem9CLEVBQUUyYyxNQUFNLE9BQU0sRUFBRyxHQUFHM2MsRUFBRW93QixTQUFTLGlCQUFpQnB3QixFQUFFMmMsS0FBSyxPQUFNLEVBQUcsR0FBRzNjLEVBQUU2dEIsWUFBWSxPQUFNLENBQUUsQ0FBQyxPQUFNLENBQUUsRUFBRXBzQixFQUFFSCxVQUFVZ3NCLE9BQU8sV0FBVyxPQUFPdnBCLEtBQUt5cEIsZUFBZXpwQixLQUFLc21CLE1BQU10bUIsS0FBS3NtQixJQUFJLEtBQUt0bUIsS0FBS3NtQixJQUFJdG1CLEtBQUsyc0IsV0FBVzNzQixLQUFLMnFCLFVBQVMsRUFBRzNxQixLQUFLZ3JCLFVBQVMsRUFBR2hyQixLQUFLNHNCLGNBQWMsS0FBSzVzQixLQUFLcXFCLE1BQU0sRUFBRTNzQixFQUFFSCxVQUFVOEosS0FBSyxTQUFTcEwsRUFBRUgsR0FBRyxJQUFJSyxFQUFFNkQsS0FBSyxJQUFJQSxLQUFLNnNCLG1CQUFtQixDQUFDLElBQUl6d0IsRUFBRTRELEtBQUtBLEtBQUttcUIsWUFBWXhXLFFBQVFtUyxLQUFLLGtJQUFrSTlsQixLQUFLNnNCLG1CQUFtQixJQUFJMWxCLFNBQVEsU0FBVWxMLEVBQUVILEdBQUdNLEVBQUU4YyxHQUFHLFNBQVEsV0FBWSxLQUFLL2MsRUFBRXV0QixhQUFhdnRCLEVBQUV1dEIsWUFBWXZ0QixFQUFFeXRCLFVBQVUsR0FBR3p0QixFQUFFNnVCLFVBQVU3dUIsRUFBRXl3QixjQUFjOXdCLEVBQUVLLEVBQUV5d0IsbUJBQW1CLENBQUMsSUFBSTN3QixFQUFFLElBQUlxRixNQUFNLFdBQVdyRixFQUFFMmMsS0FBSyxVQUFVM2MsRUFBRTBxQixPQUFPeHFCLEVBQUV3cUIsT0FBTzFxQixFQUFFd2lCLE9BQU90aUIsRUFBRXNpQixPQUFPeGlCLEVBQUVzckIsSUFBSXByQixFQUFFb3JCLElBQUl6ckIsRUFBRUcsRUFBRSxDQUFFLElBQUdHLEVBQUU0cEIsS0FBSSxTQUFVN3BCLEVBQUVDLEdBQUdELEVBQUVMLEVBQUVLLEdBQUdGLEVBQUVHLEVBQUcsR0FBRyxHQUFFLENBQUMsT0FBTzRELEtBQUs2c0IsbUJBQW1CeGxCLEtBQUtwTCxFQUFFSCxFQUFFLEVBQUU0QixFQUFFSCxVQUFVdXZCLE1BQU0sU0FBUzd3QixHQUFHLE9BQU8rRCxLQUFLcUgsVUFBSyxFQUFPcEwsRUFBRSxFQUFFeUIsRUFBRUgsVUFBVXd2QixJQUFJLFNBQVM5d0IsR0FBRyxPQUFPQSxFQUFFK0QsTUFBTUEsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVXl2QixHQUFHLFNBQVMvd0IsR0FBRyxHQUFHLG1CQUFtQkEsRUFBRSxNQUFNLElBQUlxRixNQUFNLHFCQUFxQixPQUFPdEIsS0FBS2l0QixZQUFZaHhCLEVBQUUrRCxJQUFJLEVBQUV0QyxFQUFFSCxVQUFVc3FCLGNBQWMsU0FBUzVyQixHQUFHLFFBQVFBLElBQUkrRCxLQUFLaXRCLFlBQVlqdEIsS0FBS2l0QixZQUFZaHhCLEdBQUdBLEVBQUUwcUIsUUFBUSxLQUFLMXFCLEVBQUUwcUIsT0FBTyxJQUFJLEVBQUVqcEIsRUFBRUgsVUFBVVIsSUFBSSxTQUFTZCxHQUFHLE9BQU8rRCxLQUFLd25CLFFBQVF2ckIsRUFBRW1SLGNBQWMsRUFBRTFQLEVBQUVILFVBQVUydkIsVUFBVXh2QixFQUFFSCxVQUFVUixJQUFJVyxFQUFFSCxVQUFVbUMsSUFBSSxTQUFTekQsRUFBRUgsR0FBRyxHQUFHTyxFQUFFSixHQUFHLENBQUMsSUFBSSxJQUFJRSxLQUFLRixFQUFFVyxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS1AsRUFBRUUsSUFBSTZELEtBQUtOLElBQUl2RCxFQUFFRixFQUFFRSxJQUFJLE9BQU82RCxJQUFJLENBQUMsT0FBT0EsS0FBS3duQixRQUFRdnJCLEVBQUVtUixlQUFldFIsRUFBRWtFLEtBQUsrbUIsT0FBTzlxQixHQUFHSCxFQUFFa0UsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVTR2QixNQUFNLFNBQVNseEIsR0FBRyxjQUFjK0QsS0FBS3duQixRQUFRdnJCLEVBQUVtUixzQkFBc0JwTixLQUFLK21CLE9BQU85cUIsR0FBRytELElBQUksRUFBRXRDLEVBQUVILFVBQVU2dkIsTUFBTSxTQUFTbnhCLEVBQUVILEdBQUcsR0FBRyxNQUFNRyxFQUFFLE1BQU0sSUFBSXFGLE1BQU0sMkNBQTJDLEdBQUd0QixLQUFLaXBCLE1BQU0sTUFBTSxJQUFJM25CLE1BQU0sbUdBQW1HLEdBQUdqRixFQUFFSixHQUFHLENBQUMsSUFBSSxJQUFJRSxLQUFLRixFQUFFVyxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS1AsRUFBRUUsSUFBSTZELEtBQUtvdEIsTUFBTWp4QixFQUFFRixFQUFFRSxJQUFJLE9BQU82RCxJQUFJLENBQUMsR0FBRzBFLE1BQU1DLFFBQVE3SSxHQUFHLENBQUMsSUFBSSxJQUFJTSxLQUFLTixFQUFFYyxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS1YsRUFBRU0sSUFBSTRELEtBQUtvdEIsTUFBTW54QixFQUFFSCxFQUFFTSxJQUFJLE9BQU80RCxJQUFJLENBQUMsR0FBRyxNQUFNbEUsRUFBRSxNQUFNLElBQUl3RixNQUFNLDBDQUEwQyxNQUFNLGtCQUFrQnhGLElBQUlBLEVBQUUrRCxPQUFPL0QsSUFBSWtFLEtBQUtrcEIsZUFBZUMsT0FBT2x0QixFQUFFSCxHQUFHa0UsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVTh2QixNQUFNLFdBQVcsT0FBT3J0QixLQUFLMnFCLFdBQVczcUIsS0FBSzJxQixVQUFTLEVBQUczcUIsS0FBS3VtQixLQUFLdm1CLEtBQUt1bUIsSUFBSThHLFFBQVFydEIsS0FBS3NtQixLQUFLdG1CLEtBQUtzbUIsSUFBSStHLFFBQVFydEIsS0FBS3lwQixlQUFlenBCLEtBQUsyWixLQUFLLFVBQVUzWixJQUFJLEVBQUV0QyxFQUFFSCxVQUFVdXJCLE1BQU0sU0FBUzdzQixFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLE9BQU9ELEVBQUU4RCxNQUFNLElBQUksUUFBUUQsS0FBS04sSUFBSSxnQkFBZ0IsU0FBU1QsT0FBTzdDLEVBQUUsR0FBRzZDLE9BQU9oRCxFQUFFLEtBQUtnRCxPQUFPbkQsTUFBTSxNQUFNLElBQUksT0FBT2tFLEtBQUtzckIsU0FBU3J2QixFQUFFK0QsS0FBS3VyQixTQUFTenZCLEVBQUUsTUFBTSxJQUFJLFNBQVNrRSxLQUFLTixJQUFJLGdCQUFnQixVQUFVVCxPQUFPaEQsSUFBSSxPQUFPK0QsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVW11QixnQkFBZ0IsU0FBU3p2QixHQUFHLFlBQU8sSUFBU0EsSUFBSUEsR0FBRSxHQUFJK0QsS0FBS3lyQixpQkFBaUJ4dkIsRUFBRStELElBQUksRUFBRXRDLEVBQUVILFVBQVUrdkIsVUFBVSxTQUFTcnhCLEdBQUcsT0FBTytELEtBQUt1dEIsY0FBY3R4QixFQUFFK0QsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVWl3QixnQkFBZ0IsU0FBU3Z4QixHQUFHLEdBQUcsaUJBQWlCQSxFQUFFLE1BQU0sSUFBSW9HLFVBQVUsb0JBQW9CLE9BQU9yQyxLQUFLeXRCLGlCQUFpQnh4QixFQUFFK0QsSUFBSSxFQUFFdEMsRUFBRUgsVUFBVWlWLE9BQU8sV0FBVyxNQUFNLENBQUNpTSxPQUFPemUsS0FBS3llLE9BQU84SSxJQUFJdm5CLEtBQUt1bkIsSUFBSXJuQixLQUFLRixLQUFLaXBCLE1BQU1wQyxRQUFRN21CLEtBQUt3bkIsUUFBUSxFQUFFOXBCLEVBQUVILFVBQVV1cUIsS0FBSyxTQUFTN3JCLEdBQUcsSUFBSUgsRUFBRU8sRUFBRUosR0FBR0UsRUFBRTZELEtBQUt3bkIsUUFBUSxnQkFBZ0IsR0FBR3huQixLQUFLb3BCLFVBQVUsTUFBTSxJQUFJOW5CLE1BQU0sZ0hBQWdILEdBQUd4RixJQUFJa0UsS0FBS2lwQixNQUFNdmtCLE1BQU1DLFFBQVExSSxHQUFHK0QsS0FBS2lwQixNQUFNLEdBQUdqcEIsS0FBS2txQixRQUFRanVCLEtBQUsrRCxLQUFLaXBCLE1BQU0sQ0FBQyxRQUFRLEdBQUdodEIsR0FBRytELEtBQUtpcEIsT0FBT2pwQixLQUFLa3FCLFFBQVFscUIsS0FBS2lwQixPQUFPLE1BQU0sSUFBSTNuQixNQUFNLGdDQUFnQyxHQUFHeEYsR0FBR08sRUFBRTJELEtBQUtpcEIsT0FBTyxJQUFJLElBQUk3c0IsS0FBS0gsRUFBRVcsT0FBT1csVUFBVUMsZUFBZWhCLEtBQUtQLEVBQUVHLEtBQUs0RCxLQUFLaXBCLE1BQU03c0IsR0FBR0gsRUFBRUcsUUFBUSxpQkFBaUJILEdBQUdFLEdBQUc2RCxLQUFLQyxLQUFLLFNBQVM5RCxFQUFFNkQsS0FBS3duQixRQUFRLG1CQUFtQnJyQixFQUFFQSxFQUFFaVIsY0FBY3FILFFBQVF6VSxLQUFLaXBCLE1BQU0sc0NBQXNDOXNCLEVBQUU2RCxLQUFLaXBCLE1BQU0sR0FBR2hxQixPQUFPZSxLQUFLaXBCLE1BQU0sS0FBS2hxQixPQUFPaEQsR0FBR0EsR0FBRytELEtBQUtpcEIsT0FBTyxJQUFJaHRCLEdBQUcrRCxLQUFLaXBCLE1BQU1odEIsRUFBRSxPQUFPSCxHQUFHa0UsS0FBS2txQixRQUFRanVCLElBQUlFLEdBQUc2RCxLQUFLQyxLQUFLLFFBQVFELElBQUksRUFBRXRDLEVBQUVILFVBQVVtd0IsVUFBVSxTQUFTenhCLEdBQUcsT0FBTytELEtBQUsydEIsV0FBTSxJQUFTMXhCLEdBQUdBLEVBQUUrRCxJQUFJLEVBQUV0QyxFQUFFSCxVQUFVNnNCLHFCQUFxQixXQUFXLElBQUludUIsRUFBRStELEtBQUtzbkIsT0FBT3RiLEtBQUssS0FBSyxHQUFHL1AsSUFBSStELEtBQUt1bkIsTUFBTXZuQixLQUFLdW5CLElBQUk3UyxTQUFTLEtBQUssSUFBSSxLQUFLelksR0FBRytELEtBQUtzbkIsT0FBT3RvQixPQUFPLEVBQUVnQixLQUFLMnRCLE1BQU0sQ0FBQyxJQUFJN3hCLEVBQUVrRSxLQUFLdW5CLElBQUl0YixRQUFRLEtBQUssR0FBR25RLEdBQUcsRUFBRSxDQUFDLElBQUlLLEVBQUU2RCxLQUFLdW5CLElBQUkvZ0IsTUFBTTFLLEVBQUUsR0FBR29XLE1BQU0sS0FBSyxtQkFBbUJsUyxLQUFLMnRCLE1BQU14eEIsRUFBRWdKLEtBQUtuRixLQUFLMnRCLE9BQU94eEIsRUFBRWdKLE9BQU9uRixLQUFLdW5CLElBQUl2bkIsS0FBS3VuQixJQUFJL2dCLE1BQU0sRUFBRTFLLEdBQUcsSUFBSUssRUFBRTZQLEtBQUssSUFBSSxDQUFDLENBQUMsRUFBRXRPLEVBQUVILFVBQVVxd0IsbUJBQW1CLFdBQVdqYSxRQUFRbVMsS0FBSyxjQUFjLEVBQUVwb0IsRUFBRUgsVUFBVW10QixjQUFjLFNBQVN6dUIsRUFBRUgsRUFBRUssR0FBRyxJQUFJNkQsS0FBSzJxQixTQUFTLENBQUMsSUFBSXZ1QixFQUFFLElBQUlrRixNQUFNLEdBQUdyQyxPQUFPaEQsRUFBRUgsRUFBRSxnQkFBZ0JNLEVBQUVpd0IsUUFBUXZ3QixFQUFFTSxFQUFFd2MsS0FBSyxlQUFleGMsRUFBRXl4QixNQUFNMXhCLEVBQUU2RCxLQUFLZ3JCLFVBQVMsRUFBR2hyQixLQUFLNHNCLGNBQWN4d0IsRUFBRTRELEtBQUtxdEIsUUFBUXJ0QixLQUFLNG5CLFNBQVN4ckIsRUFBRSxDQUFDLEVBQUVzQixFQUFFSCxVQUFVcXRCLGFBQWEsV0FBVyxJQUFJM3VCLEVBQUUrRCxLQUFLQSxLQUFLc3NCLFdBQVd0c0IsS0FBS29zQixTQUFTcHNCLEtBQUtvc0IsT0FBTzNCLFlBQVcsV0FBWXh1QixFQUFFeXVCLGNBQWMsY0FBY3p1QixFQUFFcXdCLFNBQVMsUUFBUyxHQUFFdHNCLEtBQUtzc0IsV0FBV3RzQixLQUFLdXNCLG1CQUFtQnZzQixLQUFLK3FCLHdCQUF3Qi9xQixLQUFLK3FCLHNCQUFzQk4sWUFBVyxXQUFZeHVCLEVBQUV5dUIsY0FBYyx1QkFBdUJ6dUIsRUFBRXN3QixpQkFBaUIsWUFBYSxHQUFFdnNCLEtBQUt1c0Isa0JBQWtCLEdBQUcsSUFBSSxDQUFDdHdCLEVBQUVILEVBQUVLLEtBQUssYUFBYSxJQUFJQyxFQUFFRCxFQUFFLE1BQU0sU0FBU0UsRUFBRUosR0FBRyxHQUFHQSxFQUFFLE9BQU8sU0FBU0EsR0FBRyxJQUFJLElBQUlILEtBQUtPLEVBQUVrQixVQUFVWCxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS0gsRUFBRWtCLFVBQVV6QixLQUFLRyxFQUFFSCxHQUFHTyxFQUFFa0IsVUFBVXpCLElBQUksT0FBT0csQ0FBQyxDQUF4SCxDQUEwSEEsRUFBRSxDQUFDQSxFQUFFQyxRQUFRRyxFQUFFQSxFQUFFa0IsVUFBVVIsSUFBSSxTQUFTZCxHQUFHLE9BQU8rRCxLQUFLK21CLE9BQU85cUIsRUFBRW1SLGNBQWMsRUFBRS9RLEVBQUVrQixVQUFVMHBCLHFCQUFxQixTQUFTaHJCLEdBQUcsSUFBSUgsRUFBRUcsRUFBRSxpQkFBaUIsR0FBRytELEtBQUtDLEtBQUs3RCxFQUFFNkQsS0FBS25FLEdBQUcsSUFBSUssRUFBRUMsRUFBRTB4QixPQUFPaHlCLEdBQUcsSUFBSSxJQUFJTyxLQUFLRixFQUFFUyxPQUFPVyxVQUFVQyxlQUFlaEIsS0FBS0wsRUFBRUUsS0FBSzJELEtBQUszRCxHQUFHRixFQUFFRSxJQUFJMkQsS0FBSyt0QixNQUFNLENBQUMsRUFBRSxJQUFJOXhCLEVBQUUreEIsT0FBT2h1QixLQUFLK3RCLE1BQU0zeEIsRUFBRTZ4QixXQUFXaHlCLEVBQUUreEIsTUFBZ0IsQ0FBVCxNQUFNL3hCLEdBQUcsQ0FBQyxFQUFFSSxFQUFFa0IsVUFBVXFwQixxQkFBcUIsU0FBUzNxQixHQUFHLElBQUlILEVBQUVHLEVBQUUsSUFBSSxFQUFFK0QsS0FBSzJuQixXQUFXMXJCLEVBQUUrRCxLQUFLMm1CLE9BQU8zbUIsS0FBSzJuQixXQUFXM25CLEtBQUtrdUIsV0FBV3B5QixFQUFFa0UsS0FBS211QixLQUFLLElBQUlyeUIsRUFBRWtFLEtBQUtndEIsR0FBRyxJQUFJbHhCLEVBQUVrRSxLQUFLb3VCLFNBQVMsSUFBSXR5QixFQUFFa0UsS0FBS3F1QixZQUFZLElBQUl2eUIsRUFBRWtFLEtBQUtzdUIsWUFBWSxJQUFJeHlCLEVBQUVrRSxLQUFLbkIsT0FBTyxJQUFJL0MsR0FBRyxJQUFJQSxJQUFJa0UsS0FBS3lvQixVQUFVem9CLEtBQUt1dUIsUUFBUSxNQUFNdHlCLEVBQUUrRCxLQUFLd3VCLFNBQVMsTUFBTXZ5QixFQUFFK0QsS0FBS3l1QixVQUFVLE1BQU14eUIsRUFBRStELEtBQUswdUIsV0FBVyxNQUFNenlCLEVBQUUrRCxLQUFLMnVCLGFBQWEsTUFBTTF5QixFQUFFK0QsS0FBSzR1QixjQUFjLE1BQU0zeUIsRUFBRStELEtBQUs2dUIsVUFBVSxNQUFNNXlCLEVBQUUrRCxLQUFLOHVCLFNBQVMsTUFBTTd5QixFQUFFK0QsS0FBSyt1QixvQkFBb0IsTUFBTTl5QixDQUFDLEdBQUcsS0FBSyxDQUFDQSxFQUFFSCxLQUFLLGFBQWEsU0FBU0ssRUFBRUYsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEdBQUcsb0JBQW9CYSxRQUFRLE1BQU1mLEVBQUVlLE9BQU95QixVQUFVLENBQUMsR0FBR2lHLE1BQU1DLFFBQVExSSxLQUFLRSxFQUFFLFNBQVNGLEVBQUVILEdBQUcsR0FBR0csRUFBRSxDQUFDLEdBQUcsaUJBQWlCQSxFQUFFLE9BQU9HLEVBQUVILEVBQUVILEdBQUcsSUFBSUssRUFBRVMsT0FBT1csVUFBVXVILFNBQVN0SSxLQUFLUCxHQUFHdUssTUFBTSxHQUFHLEdBQUcsTUFBTSxXQUFXckssR0FBR0YsRUFBRTRMLGNBQWMxTCxFQUFFRixFQUFFNEwsWUFBWThRLE1BQU0sUUFBUXhjLEdBQUcsUUFBUUEsRUFBRXVJLE1BQU12QyxLQUFLbEcsR0FBRyxjQUFjRSxHQUFHLDJDQUEyQzJRLEtBQUszUSxHQUFHQyxFQUFFSCxFQUFFSCxRQUFHLENBQU0sQ0FBQyxDQUEzUixDQUE2UkcsS0FBS0gsR0FBR0csR0FBRyxpQkFBaUJBLEVBQUUrQyxPQUFPLENBQUM3QyxJQUFJRixFQUFFRSxHQUFHLElBQUlFLEVBQUUsRUFBRXFCLEVBQUUsV0FBVyxFQUFFLE1BQU0sQ0FBQ0EsSUFBRXRCLEVBQUUsV0FBVyxPQUFPQyxHQUFHSixFQUFFK0MsT0FBTyxDQUFDTCxNQUFLLEdBQUksQ0FBQ0EsTUFBSyxFQUFHekIsTUFBTWpCLEVBQUVJLEtBQUssRUFBRUosRUFBRSxTQUFTQSxHQUFHLE1BQU1BLENBQUMsRUFBRWtDLEVBQUVULEVBQUUsQ0FBQyxNQUFNLElBQUkyRSxVQUFVLHdJQUF3SSxDQUFDLElBQUkvRixFQUFFZ0QsR0FBRSxFQUFHNUMsR0FBRSxFQUFHLE1BQU0sQ0FBQ2dCLEVBQUUsV0FBV3ZCLEVBQUVGLEVBQUVlLE9BQU95QixXQUFXLEVBQUVyQyxFQUFFLFdBQVcsSUFBSUgsRUFBRUUsRUFBRXVDLE9BQU8sT0FBT1ksRUFBRXJELEVBQUUwQyxLQUFLMUMsQ0FBQyxFQUFFQSxFQUFFLFNBQVNBLEdBQUdTLEdBQUUsRUFBR0osRUFBRUwsQ0FBQyxFQUFFa0MsRUFBRSxXQUFXLElBQUltQixHQUFHLE1BQU1uRCxFQUFFMkMsUUFBUTNDLEVBQUUyQyxRQUE2QixDQUFwQixRQUFRLEdBQUdwQyxFQUFFLE1BQU1KLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBU0YsRUFBRUgsRUFBRUgsSUFBSSxNQUFNQSxHQUFHQSxFQUFFRyxFQUFFK0MsVUFBVWxELEVBQUVHLEVBQUUrQyxRQUFRLElBQUksSUFBSTdDLEVBQUUsRUFBRUMsRUFBRSxJQUFJc0ksTUFBTTVJLEdBQUdLLEVBQUVMLEVBQUVLLElBQUlDLEVBQUVELEdBQUdGLEVBQUVFLEdBQUcsT0FBT0MsQ0FBQyxDQUFDTixFQUFFbUUsS0FBSyxTQUFTaEUsR0FBRyxPQUFPQSxFQUFFaVcsTUFBTSxTQUFTMUssT0FBTyxFQUFFMUwsRUFBRWd5QixPQUFPLFNBQVM3eEIsR0FBRyxJQUFJSCxFQUFFTSxFQUFFLENBQUMsRUFBRUMsRUFBRUYsRUFBRUYsRUFBRWlXLE1BQU0sVUFBVSxJQUFJLElBQUk3VixFQUFFcUIsTUFBTTVCLEVBQUVPLEVBQUVELEtBQUt1QyxNQUFNLENBQUMsSUFBSWpCLEVBQUU1QixFQUFFb0IsTUFBTWdWLE1BQU0sU0FBUzVWLEVBQUVvQixFQUFFOEosUUFBUWxJLEVBQUU1QixFQUFFOEosUUFBUWxMLEdBQUdnRCxJQUFJbEQsRUFBRUUsR0FBR2dELEVBQUUsQ0FBK0IsQ0FBN0IsTUFBTXJELEdBQUdJLEVBQUVKLEVBQUVBLEVBQUUsQ0FBQyxRQUFRSSxFQUFFOEIsR0FBRyxDQUFDLE9BQU8vQixDQUFDLEVBQUVOLEVBQUVteUIsV0FBVyxTQUFTaHlCLEdBQUcsSUFBSUgsRUFBRU0sRUFBRSxDQUFDLEVBQUVDLEVBQUVGLEVBQUVGLEVBQUVpVyxNQUFNLFVBQVUsSUFBSSxJQUFJN1YsRUFBRXFCLE1BQU01QixFQUFFTyxFQUFFRCxLQUFLdUMsTUFBTSxDQUFDLElBQUlqQixFQUFFNUIsRUFBRW9CLE1BQU1nVixNQUFNLFNBQVM1VixFQUFFb0IsRUFBRSxHQUFHOEksTUFBTSxHQUFHLEdBQUdwSyxFQUFFc0IsRUFBRSxHQUFHd1UsTUFBTSxTQUFTLEdBQUcxTCxNQUFNLEdBQUcsSUFBSWxLLENBQUMsQ0FBK0IsQ0FBN0IsTUFBTUwsR0FBR0ksRUFBRUosRUFBRUEsRUFBRSxDQUFDLFFBQVFJLEVBQUU4QixHQUFHLENBQUMsT0FBTy9CLENBQUMsRUFBRU4sRUFBRWt6QixZQUFZLFNBQVMveUIsRUFBRUgsR0FBRyxjQUFjRyxFQUFFLHVCQUF1QkEsRUFBRSx5QkFBeUJBLEVBQUUsNEJBQTRCQSxFQUFFZ3pCLEtBQUtuekIsV0FBV0csRUFBRWl6QixxQkFBcUJqekIsRUFBRWt6QixRQUFRbHpCLENBQUMsR0FBRyxLQUFLQSxJQUFJLGFBQWEsSUFBSUgsRUFBRStELE9BQU90QyxVQUFVd1AsUUFBUTVRLEVBQUUsT0FBT0MsRUFBRSxVQUFVSCxFQUFFQyxRQUFRLENBQUNvQixRQUFRbEIsRUFBRWd6QixXQUFXLENBQUNDLFFBQVEsU0FBU3B6QixHQUFHLE9BQU9ILEVBQUVVLEtBQUtQLEVBQUVFLEVBQUUsSUFBSSxFQUFFbXpCLFFBQVEsU0FBU3J6QixHQUFHLE9BQU80RCxPQUFPNUQsRUFBRSxHQUFHb3pCLFFBQVEsVUFBVUMsUUFBUWx6QixFQUFDLEVBQUcsS0FBSyxDQUFDSCxFQUFFSCxFQUFFSyxLQUFLLGFBQWEsSUFBSUMsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRixFQUFFQyxRQUFRLENBQUNxekIsUUFBUTd4QixFQUFFcW1CLE1BQU0xbkIsRUFBRTRkLFVBQVU3ZCxFQUFDLEVBQUcsS0FBSyxDQUFDSCxFQUFFSCxFQUFFSyxLQUFLLGFBQWEsSUFBSUMsRUFBRUQsRUFBRSxNQUFNRSxFQUFFTyxPQUFPVyxVQUFVQyxlQUFlRSxFQUFFZ0gsTUFBTUMsUUFBUXJJLEVBQUUsQ0FBQ2t6QixXQUFVLEVBQUdDLGlCQUFnQixFQUFHQyxhQUFZLEVBQUdDLFdBQVcsR0FBR0MsUUFBUSxRQUFRQyxpQkFBZ0IsRUFBR0MsT0FBTSxFQUFHQyxRQUFRM3pCLEVBQUVvRixPQUFPd3VCLFVBQVUsSUFBSTlLLE1BQU0sRUFBRStLLG1CQUFrQixFQUFHQywwQkFBeUIsRUFBR0MsZUFBZSxJQUFJQyxhQUFZLEVBQUdDLGNBQWEsRUFBR0Msb0JBQW1CLEdBQUloeEIsRUFBRSxTQUFTckQsR0FBRyxPQUFPQSxFQUFFOFEsUUFBUSxhQUFZLFNBQVU5USxFQUFFSCxHQUFHLE9BQU8rRCxPQUFPQyxhQUFheVQsU0FBU3pYLEVBQUUsSUFBSyxHQUFFLEVBQUVZLEVBQUUsU0FBU1QsRUFBRUgsR0FBRyxPQUFPRyxHQUFHLGlCQUFpQkEsR0FBR0gsRUFBRWcwQixPQUFPN3pCLEVBQUVnUSxRQUFRLE1BQU0sRUFBRWhRLEVBQUVpVyxNQUFNLEtBQUtqVyxDQUFDLEVBQUVzRCxFQUFFLFNBQVN0RCxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLEdBQUdILEVBQUUsQ0FBQyxJQUFJeUIsRUFBRXZCLEVBQUVxekIsVUFBVXZ6QixFQUFFOFEsUUFBUSxjQUFjLFFBQVE5USxFQUFFSyxFQUFFLGdCQUFnQmdELEVBQUVuRCxFQUFFK29CLE1BQU0sR0FBRyxlQUFlcUwsS0FBSzd5QixHQUFHNkIsRUFBRUQsRUFBRTVCLEVBQUU4SSxNQUFNLEVBQUVsSCxFQUFFa3hCLE9BQU85eUIsRUFBRW5CLEVBQUUsR0FBRyxHQUFHZ0QsRUFBRSxDQUFDLElBQUlwRCxFQUFFazBCLGNBQWNoMEIsRUFBRUcsS0FBS0ksT0FBT1csVUFBVWdDLEtBQUtwRCxFQUFFc3pCLGdCQUFnQixPQUFPbHpCLEVBQUVxQyxLQUFLVyxFQUFFLENBQUMsSUFBSSxJQUFJSyxFQUFFLEVBQUV6RCxFQUFFK29CLE1BQU0sR0FBRyxRQUFRNWxCLEVBQUVoRCxFQUFFaTBCLEtBQUs3eUIsS0FBS2tDLEVBQUV6RCxFQUFFK29CLE9BQU8sQ0FBQyxHQUFHdGxCLEdBQUcsR0FBR3pELEVBQUVrMEIsY0FBY2gwQixFQUFFRyxLQUFLSSxPQUFPVyxVQUFVK0IsRUFBRSxHQUFHa0gsTUFBTSxHQUFHLE1BQU1ySyxFQUFFc3pCLGdCQUFnQixPQUFPbHpCLEVBQUVxQyxLQUFLVSxFQUFFLEdBQUcsQ0FBQyxPQUFPQSxHQUFHL0MsRUFBRXFDLEtBQUssSUFBSWxCLEVBQUU4SSxNQUFNbEgsRUFBRWt4QixPQUFPLEtBQUssU0FBU3YwQixFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLElBQUksSUFBSUMsRUFBRUQsRUFBRU4sRUFBRVksRUFBRVosRUFBRUssR0FBR3VCLEVBQUV6QixFQUFFK0MsT0FBTyxFQUFFdEIsR0FBRyxJQUFJQSxFQUFFLENBQUMsSUFBSXBCLEVBQUVnRCxFQUFFckQsRUFBRXlCLEdBQUcsR0FBRyxPQUFPNEIsR0FBR25ELEVBQUVpMEIsWUFBWTl6QixFQUFFLEdBQUcyQyxPQUFPNUMsT0FBTyxDQUFDQyxFQUFFSCxFQUFFazBCLGFBQWF6ekIsT0FBT1EsT0FBTyxNQUFNLENBQUMsRUFBRSxJQUFJbUMsRUFBRSxNQUFNRCxFQUFFNk0sT0FBTyxJQUFJLE1BQU03TSxFQUFFNk0sT0FBTzdNLEVBQUVOLE9BQU8sR0FBR00sRUFBRWtILE1BQU0sR0FBRyxHQUFHbEgsRUFBRS9DLEVBQUVnWCxTQUFTaFUsRUFBRSxJQUFJcEQsRUFBRWkwQixhQUFhLEtBQUs3d0IsR0FBR3FRLE1BQU1yVCxJQUFJK0MsSUFBSUMsR0FBR00sT0FBT3RELEtBQUtnRCxHQUFHaEQsR0FBRyxHQUFHSixFQUFFaTBCLGFBQWE3ekIsR0FBR0osRUFBRXd6QixZQUFZcnpCLEVBQUUsSUFBSUMsR0FBR0YsRUFBRUMsRUFBRWlELEdBQUdsRCxFQUFFQyxFQUFFLENBQUMsRUFBRUQsRUFBRSxDQUFDQSxFQUFFQyxDQUFDLENBQUMsT0FBT0QsQ0FBQyxDQUExWCxDQUE0WEUsRUFBRVQsRUFBRUssRUFBRUMsRUFBRSxDQUFDLEVBQUVILEVBQUVDLFFBQVEsU0FBU0QsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLFNBQVNGLEdBQUcsSUFBSUEsRUFBRSxPQUFPSyxFQUFFLEdBQUcsT0FBT0wsRUFBRTh6QixjQUFTLElBQVM5ekIsRUFBRTh6QixTQUFTLG1CQUFtQjl6QixFQUFFOHpCLFFBQVEsTUFBTSxJQUFJMXRCLFVBQVUsaUNBQWlDLFFBQUcsSUFBU3BHLEVBQUUyekIsU0FBUyxVQUFVM3pCLEVBQUUyekIsU0FBUyxlQUFlM3pCLEVBQUUyekIsUUFBUSxNQUFNLElBQUl2dEIsVUFBVSxxRUFBcUUsSUFBSXZHLE9BQUUsSUFBU0csRUFBRTJ6QixRQUFRdHpCLEVBQUVzekIsUUFBUTN6QixFQUFFMnpCLFFBQVEsTUFBTSxDQUFDSixlQUFVLElBQVN2ekIsRUFBRXV6QixVQUFVbHpCLEVBQUVrekIsWUFBWXZ6QixFQUFFdXpCLFVBQVVDLGdCQUFnQixrQkFBa0J4ekIsRUFBRXd6QixnQkFBZ0J4ekIsRUFBRXd6QixnQkFBZ0JuekIsRUFBRW16QixnQkFBZ0JDLFlBQVksa0JBQWtCenpCLEVBQUV5ekIsWUFBWXp6QixFQUFFeXpCLFlBQVlwekIsRUFBRW96QixZQUFZQyxXQUFXLGlCQUFpQjF6QixFQUFFMHpCLFdBQVcxekIsRUFBRTB6QixXQUFXcnpCLEVBQUVxekIsV0FBV0MsUUFBUTl6QixFQUFFK3pCLGdCQUFnQixrQkFBa0I1ekIsRUFBRTR6QixnQkFBZ0I1ekIsRUFBRTR6QixnQkFBZ0J2ekIsRUFBRXV6QixnQkFBZ0JDLE1BQU0sa0JBQWtCN3pCLEVBQUU2ekIsTUFBTTd6QixFQUFFNnpCLE1BQU14ekIsRUFBRXd6QixNQUFNQyxRQUFRLG1CQUFtQjl6QixFQUFFOHpCLFFBQVE5ekIsRUFBRTh6QixRQUFRenpCLEVBQUV5ekIsUUFBUUMsVUFBVSxpQkFBaUIvekIsRUFBRSt6QixXQUFXNXpCLEVBQUVxMEIsU0FBU3gwQixFQUFFK3pCLFdBQVcvekIsRUFBRSt6QixVQUFVMXpCLEVBQUUwekIsVUFBVTlLLE1BQU0saUJBQWlCanBCLEVBQUVpcEIsUUFBTyxJQUFLanBCLEVBQUVpcEIsT0FBT2pwQixFQUFFaXBCLE1BQU01b0IsRUFBRTRvQixNQUFNK0ssbUJBQWtCLElBQUtoMEIsRUFBRWcwQixrQkFBa0JDLHlCQUF5QixrQkFBa0JqMEIsRUFBRWkwQix5QkFBeUJqMEIsRUFBRWkwQix5QkFBeUI1ekIsRUFBRTR6Qix5QkFBeUJDLGVBQWUsaUJBQWlCbDBCLEVBQUVrMEIsZUFBZWwwQixFQUFFazBCLGVBQWU3ekIsRUFBRTZ6QixlQUFlQyxhQUFZLElBQUtuMEIsRUFBRW0wQixZQUFZQyxhQUFhLGtCQUFrQnAwQixFQUFFbzBCLGFBQWFwMEIsRUFBRW8wQixhQUFhL3pCLEVBQUUrekIsYUFBYUMsbUJBQW1CLGtCQUFrQnIwQixFQUFFcTBCLG1CQUFtQnIwQixFQUFFcTBCLG1CQUFtQmgwQixFQUFFZzBCLG1CQUFtQixDQUE5NkMsQ0FBZzdDeDBCLEdBQUcsR0FBRyxLQUFLRyxHQUFHLE1BQU1BLEVBQUUsT0FBT0UsRUFBRWswQixhQUFhenpCLE9BQU9RLE9BQU8sTUFBTSxDQUFDLEVBQUUsSUFBSSxJQUFJYixFQUFFLGlCQUFpQk4sRUFBRSxTQUFTQSxFQUFFSCxHQUFHLElBQUlLLEVBQUVvRCxFQUFFLENBQUMsRUFBRWhELEVBQUVULEVBQUVtMEIsa0JBQWtCaDBCLEVBQUU4USxRQUFRLE1BQU0sSUFBSTlRLEVBQUUyRCxFQUFFOUQsRUFBRXEwQixpQkFBaUIsU0FBSSxFQUFPcjBCLEVBQUVxMEIsZUFBZTF5QixFQUFFbEIsRUFBRTJWLE1BQU1wVyxFQUFFazBCLFVBQVVwd0IsR0FBR3pCLEdBQUcsRUFBRXhCLEVBQUViLEVBQUU4ekIsUUFBUSxHQUFHOXpCLEVBQUUrekIsZ0JBQWdCLElBQUkxekIsRUFBRSxFQUFFQSxFQUFFc0IsRUFBRXVCLFNBQVM3QyxFQUFFLElBQUlzQixFQUFFdEIsR0FBRzhQLFFBQVEsV0FBVyxtQkFBbUJ4TyxFQUFFdEIsR0FBR1EsRUFBRSxRQUFRLHdCQUF3QmMsRUFBRXRCLEtBQUtRLEVBQUUsY0FBY3dCLEVBQUVoQyxFQUFFQSxFQUFFc0IsRUFBRXVCLFFBQVEsSUFBSTdDLEVBQUUsRUFBRUEsRUFBRXNCLEVBQUV1QixTQUFTN0MsRUFBRSxHQUFHQSxJQUFJZ0MsRUFBRSxDQUFDLElBQUltQyxFQUFFbEMsRUFBRTNCLEVBQUVnQixFQUFFdEIsR0FBR2tDLEVBQUU1QixFQUFFd1AsUUFBUSxNQUFNMU4sR0FBRyxJQUFJRixFQUFFNUIsRUFBRXdQLFFBQVEsS0FBSzVOLEVBQUUsR0FBRyxJQUFJRSxHQUFHK0IsRUFBRXhFLEVBQUVpMEIsUUFBUXR6QixFQUFFSCxFQUFFeXpCLFFBQVFwekIsRUFBRSxPQUFPeUIsRUFBRXRDLEVBQUV3MEIsbUJBQW1CLEtBQUssS0FBS2h3QixFQUFFeEUsRUFBRWkwQixRQUFRdHpCLEVBQUUrSixNQUFNLEVBQUVqSSxHQUFHakMsRUFBRXl6QixRQUFRcHpCLEVBQUUsT0FBT3lCLEVBQUVoQyxFQUFFczBCLFNBQVNoMEIsRUFBRUQsRUFBRStKLE1BQU1qSSxFQUFFLEdBQUd6QyxJQUFHLFNBQVVHLEdBQUcsT0FBT0gsRUFBRWkwQixRQUFROXpCLEVBQUVLLEVBQUV5ekIsUUFBUXB6QixFQUFFLFFBQVMsS0FBSXlCLEdBQUd0QyxFQUFFbzBCLDBCQUEwQixlQUFldnpCLElBQUl5QixFQUFFa0IsRUFBRWxCLElBQUkzQixFQUFFd1AsUUFBUSxRQUFRLElBQUk3TixFQUFFVixFQUFFVSxHQUFHLENBQUNBLEdBQUdBLEdBQUcvQixFQUFFRyxLQUFLK0MsRUFBRWUsR0FBR2YsRUFBRWUsR0FBR2xFLEVBQUV1MEIsUUFBUXB4QixFQUFFZSxHQUFHbEMsR0FBR21CLEVBQUVlLEdBQUdsQyxDQUFDLENBQUMsT0FBT21CLENBQUMsQ0FBcndCLENBQXV3QnRELEVBQUVFLEdBQUdGLEVBQUUyRCxFQUFFekQsRUFBRWswQixhQUFhenpCLE9BQU9RLE9BQU8sTUFBTSxDQUFDLEVBQUVLLEVBQUViLE9BQU9zSSxLQUFLM0ksR0FBRzRCLEVBQUUsRUFBRUEsRUFBRVYsRUFBRXVCLFNBQVNiLEVBQUUsQ0FBQyxJQUFJeEIsRUFBRWMsRUFBRVUsR0FBR21DLEVBQUVmLEVBQUU1QyxFQUFFSixFQUFFSSxHQUFHUixFQUFFLGlCQUFpQkYsR0FBRzJELEVBQUV4RCxFQUFFdzBCLE1BQU1oeEIsRUFBRVUsRUFBRW5FLEVBQUUsQ0FBQyxPQUFNLElBQUtBLEVBQUV1ekIsWUFBWTl2QixFQUFFeEQsRUFBRXkwQixRQUFRanhCLEVBQUUsR0FBRyxLQUFLLENBQUMzRCxFQUFFSCxFQUFFSyxLQUFLLGFBQWEsSUFBSUMsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRyxFQUFFTSxPQUFPVyxVQUFVQyxlQUFlOEIsRUFBRSxDQUFDd3hCLFNBQVMsU0FBUzcwQixHQUFHLE9BQU9BLEVBQUUsSUFBSSxFQUFFNnpCLE1BQU0sUUFBUWlCLFFBQVEsU0FBUzkwQixFQUFFSCxHQUFHLE9BQU9HLEVBQUUsSUFBSUgsRUFBRSxHQUFHLEVBQUVrMUIsT0FBTyxTQUFTLzBCLEdBQUcsT0FBT0EsQ0FBQyxHQUFHUyxFQUFFZ0ksTUFBTUMsUUFBUXBGLEVBQUVtRixNQUFNbkgsVUFBVXFCLEtBQUtyQyxFQUFFLFNBQVNOLEVBQUVILEdBQUd5RCxFQUFFUSxNQUFNOUQsRUFBRVMsRUFBRVosR0FBR0EsRUFBRSxDQUFDQSxHQUFHLEVBQUU4RCxFQUFFdUIsS0FBSzVELFVBQVUwekIsWUFBWXh6QixFQUFFQyxFQUFFSixRQUFRYSxFQUFFLENBQUMreUIsZ0JBQWUsRUFBRzFCLFdBQVUsRUFBR0ksUUFBUSxRQUFRQyxpQkFBZ0IsRUFBR0csVUFBVSxJQUFJcndCLFFBQU8sRUFBR3d4QixRQUFROTBCLEVBQUVzRCxPQUFPeXhCLGtCQUFpQixFQUFHQyxPQUFPNXpCLEVBQUU2ekIsVUFBVTV6QixFQUFFMHhCLFdBQVczeEIsR0FBR3N6QixTQUFRLEVBQUdRLGNBQWMsU0FBU3QxQixHQUFHLE9BQU8yRCxFQUFFcEQsS0FBS1AsRUFBRSxFQUFFdTFCLFdBQVUsRUFBR2xCLG9CQUFtQixHQUFJM3pCLEVBQUUsU0FBU1YsRUFBRUgsRUFBRUssRUFBRXVCLEVBQUVwQixFQUFFZ0QsRUFBRUMsRUFBRUssRUFBRW5DLEVBQUVkLEVBQUUyRCxFQUFFbEMsRUFBRTNCLEVBQUU0QixFQUFFRSxFQUFFRCxHQUFHLElBQUlFLEVBQUUrQyxFQUFFekYsRUFBRSxHQUFHd0MsRUFBRW9tQixJQUFJNW9CLEdBQUcsTUFBTSxJQUFJK00sV0FBVyx1QkFBdUIsR0FBRyxtQkFBbUJqSixFQUFFMkIsRUFBRTNCLEVBQUV6RCxFQUFFb0YsR0FBR0EsYUFBYUosS0FBS0ksRUFBRWpCLEVBQUVpQixHQUFHLFVBQVU3RCxHQUFHaEIsRUFBRTZFLEtBQUtBLEVBQUVsRixFQUFFcTBCLFNBQVNudkIsR0FBRSxTQUFVdEYsR0FBRyxPQUFPQSxhQUFha0YsS0FBS2IsRUFBRXJFLEdBQUdBLENBQUUsS0FBSSxPQUFPc0YsRUFBRSxDQUFDLEdBQUdqRixFQUFFLE9BQU9pRCxJQUFJbEIsRUFBRWtCLEVBQUVwRCxFQUFFZ0MsRUFBRWd6QixRQUFRNXlCLEVBQUUsTUFBTUgsR0FBR2pDLEVBQUVvRixFQUFFLEVBQUUsQ0FBQyxHQUFHLGlCQUFpQi9DLEVBQUUrQyxJQUFJLGlCQUFpQi9DLEdBQUcsa0JBQWtCQSxHQUFHLGlCQUFpQkEsR0FBRyxpQkFBaUJBLEdBQUduQyxFQUFFOFcsU0FBUzVSLEdBQUcsT0FBT2hDLEVBQUUsQ0FBQzlDLEVBQUU0QixFQUFFbEMsRUFBRW9ELEVBQUVwRCxFQUFFZ0MsRUFBRWd6QixRQUFRNXlCLEVBQUUsTUFBTUgsSUFBSSxJQUFJM0IsRUFBRThDLEVBQUVnQyxFQUFFcEQsRUFBRWd6QixRQUFRNXlCLEVBQUUsUUFBUUgsS0FBSyxDQUFDM0IsRUFBRU4sR0FBRyxJQUFJTSxFQUFFb0QsT0FBTzBCLEtBQUssSUFBSXJELEVBQUU4RCxFQUFFLEdBQUcsUUFBRyxJQUFTVCxFQUFFLE9BQU9TLEVBQUUsR0FBRyxVQUFVdEUsR0FBR2hCLEVBQUU2RSxHQUFHckQsRUFBRSxDQUFDLENBQUNoQixNQUFNcUUsRUFBRXZDLE9BQU8sRUFBRXVDLEVBQUV5SyxLQUFLLE1BQU0sVUFBSyxTQUFjLEdBQUd0UCxFQUFFa0QsR0FBRzFCLEVBQUUwQixNQUFNLENBQUMsSUFBSXdDLEVBQUV4RixPQUFPc0ksS0FBSzNELEdBQUdyRCxFQUFFVCxFQUFFMkUsRUFBRStDLEtBQUsxSCxHQUFHMkUsQ0FBQyxDQUFDLElBQUksSUFBSW5FLEVBQUUsRUFBRUEsRUFBRUMsRUFBRWMsU0FBU2YsRUFBRSxDQUFDLElBQUkwSCxFQUFFekgsRUFBRUQsR0FBR04sRUFBRSxpQkFBaUJnSSxRQUFHLElBQVNBLEVBQUV6SSxNQUFNeUksRUFBRXpJLE1BQU1xRSxFQUFFb0UsR0FBRyxJQUFJckcsR0FBRyxPQUFPM0IsRUFBRSxDQUFDLElBQUlpSSxFQUFFbEosRUFBRTZFLEdBQUcsbUJBQW1CN0QsRUFBRUEsRUFBRXZCLEVBQUV3SixHQUFHeEosRUFBRUEsR0FBR1EsRUFBRSxJQUFJZ0osRUFBRSxJQUFJQSxFQUFFLEtBQUtySCxFQUFFb0IsSUFBSTVELEdBQUUsR0FBSSxJQUFJaUssRUFBRTNKLElBQUlHLEVBQUV5RixFQUFFL0YsRUFBRTBCLEVBQUVpSSxFQUFFbEksRUFBRXBCLEVBQUVnRCxFQUFFQyxFQUFFSyxFQUFFbkMsRUFBRWQsRUFBRTJELEVBQUVsQyxFQUFFM0IsRUFBRTRCLEVBQUVFLEVBQUV3SCxHQUFHLENBQUMsQ0FBQyxPQUFPL0QsQ0FBQyxFQUFFL0YsRUFBRUMsUUFBUSxTQUFTRCxFQUFFSCxHQUFHLElBQUlLLEVBQUVFLEVBQUVKLEVBQUVzRCxFQUFFLFNBQVN0RCxHQUFHLElBQUlBLEVBQUUsT0FBT2tDLEVBQUUsR0FBRyxPQUFPbEMsRUFBRWsxQixjQUFTLElBQVNsMUIsRUFBRWsxQixTQUFTLG1CQUFtQmwxQixFQUFFazFCLFFBQVEsTUFBTSxJQUFJOXVCLFVBQVUsaUNBQWlDLElBQUl2RyxFQUFFRyxFQUFFMnpCLFNBQVN6eEIsRUFBRXl4QixRQUFRLFFBQUcsSUFBUzN6QixFQUFFMnpCLFNBQVMsVUFBVTN6QixFQUFFMnpCLFNBQVMsZUFBZTN6QixFQUFFMnpCLFFBQVEsTUFBTSxJQUFJdnRCLFVBQVUscUVBQXFFLElBQUlsRyxFQUFFdUIsRUFBRUosUUFBUSxRQUFHLElBQVNyQixFQUFFbzFCLE9BQU8sQ0FBQyxJQUFJLzBCLEVBQUVFLEtBQUtrQixFQUFFMHhCLFdBQVduekIsRUFBRW8xQixRQUFRLE1BQU0sSUFBSWh2QixVQUFVLG1DQUFtQ2xHLEVBQUVGLEVBQUVvMUIsTUFBTSxDQUFDLElBQUlqMUIsRUFBRXNCLEVBQUUweEIsV0FBV2p6QixHQUFHRSxFQUFFOEIsRUFBRXN6QixPQUFPLE9BQU8sbUJBQW1CeDFCLEVBQUV3MUIsUUFBUS8wQixFQUFFVCxFQUFFdzFCLFdBQVdwMUIsRUFBRUosRUFBRXcxQixRQUFRLENBQUNQLGVBQWUsa0JBQWtCajFCLEVBQUVpMUIsZUFBZWoxQixFQUFFaTFCLGVBQWUveUIsRUFBRSt5QixlQUFlMUIsZUFBVSxJQUFTdnpCLEVBQUV1ekIsVUFBVXJ4QixFQUFFcXhCLFlBQVl2ekIsRUFBRXV6QixVQUFVSSxRQUFROXpCLEVBQUUrekIsZ0JBQWdCLGtCQUFrQjV6QixFQUFFNHpCLGdCQUFnQjV6QixFQUFFNHpCLGdCQUFnQjF4QixFQUFFMHhCLGdCQUFnQkcsZUFBVSxJQUFTL3pCLEVBQUUrekIsVUFBVTd4QixFQUFFNnhCLFVBQVUvekIsRUFBRSt6QixVQUFVcndCLE9BQU8sa0JBQWtCMUQsRUFBRTBELE9BQU8xRCxFQUFFMEQsT0FBT3hCLEVBQUV3QixPQUFPd3hCLFFBQVEsbUJBQW1CbDFCLEVBQUVrMUIsUUFBUWwxQixFQUFFazFCLFFBQVFoekIsRUFBRWd6QixRQUFRQyxpQkFBaUIsa0JBQWtCbjFCLEVBQUVtMUIsaUJBQWlCbjFCLEVBQUVtMUIsaUJBQWlCanpCLEVBQUVpekIsaUJBQWlCSyxPQUFPcDFCLEVBQUVnMUIsT0FBT2wxQixFQUFFbTFCLFVBQVVsMUIsRUFBRW0xQixjQUFjLG1CQUFtQnQxQixFQUFFczFCLGNBQWN0MUIsRUFBRXMxQixjQUFjcHpCLEVBQUVvekIsY0FBY0MsVUFBVSxrQkFBa0J2MUIsRUFBRXUxQixVQUFVdjFCLEVBQUV1MUIsVUFBVXJ6QixFQUFFcXpCLFVBQVVyc0IsS0FBSyxtQkFBbUJsSixFQUFFa0osS0FBS2xKLEVBQUVrSixLQUFLLEtBQUttckIsbUJBQW1CLGtCQUFrQnIwQixFQUFFcTBCLG1CQUFtQnIwQixFQUFFcTBCLG1CQUFtQm55QixFQUFFbXlCLG1CQUFtQixDQUF2MkMsQ0FBeTJDeDBCLEdBQUcsbUJBQW1CeUQsRUFBRWt5QixPQUFPcDFCLEdBQUUsRUFBR2tELEVBQUVreUIsUUFBUSxHQUFHcDFCLEdBQUdLLEVBQUU2QyxFQUFFa3lCLFVBQVV0MUIsRUFBRW9ELEVBQUVreUIsUUFBUSxJQUFJN3hCLEVBQUVuQyxFQUFFLEdBQUcsR0FBRyxpQkFBaUJwQixHQUFHLE9BQU9BLEVBQUUsTUFBTSxHQUFHdUQsRUFBRTlELEdBQUdBLEVBQUU0MUIsZUFBZXB5QixFQUFFeEQsRUFBRTQxQixZQUFZNTFCLEdBQUcsWUFBWUEsRUFBRUEsRUFBRWkxQixRQUFRLFVBQVUsU0FBUyxVQUFVLElBQUl6d0IsRUFBRWhCLEVBQUVNLEdBQUd6RCxJQUFJQSxFQUFFUyxPQUFPc0ksS0FBSzdJLElBQUlrRCxFQUFFNEYsTUFBTWhKLEVBQUVnSixLQUFLNUYsRUFBRTRGLE1BQU0sSUFBSSxJQUFJL0csRUFBRWhDLElBQUlLLEVBQUUsRUFBRUEsRUFBRU4sRUFBRTZDLFNBQVN2QyxFQUFFLENBQUMsSUFBSTRCLEVBQUVsQyxFQUFFTSxHQUFHOEMsRUFBRWl5QixXQUFXLE9BQU9uMUIsRUFBRWdDLElBQUk5QixFQUFFa0IsRUFBRWQsRUFBRU4sRUFBRWdDLEdBQUdBLEVBQUVpQyxFQUFFZixFQUFFK3dCLG1CQUFtQi93QixFQUFFaXlCLFVBQVVqeUIsRUFBRUksT0FBT0osRUFBRTR4QixRQUFRLEtBQUs1eEIsRUFBRWt5QixPQUFPbHlCLEVBQUU0RixLQUFLNUYsRUFBRWl3QixVQUFVandCLEVBQUVneUIsY0FBY2h5QixFQUFFOHhCLE9BQU85eEIsRUFBRSt4QixVQUFVL3hCLEVBQUU2eEIsaUJBQWlCN3hCLEVBQUVxd0IsUUFBUXh4QixHQUFHLENBQUMsSUFBSUcsRUFBRWQsRUFBRXVPLEtBQUt6TSxFQUFFeXdCLFdBQVcxeEIsR0FBRSxJQUFLaUIsRUFBRTJ4QixlQUFlLElBQUksR0FBRyxPQUFPM3hCLEVBQUVzd0Isa0JBQWtCLGVBQWV0d0IsRUFBRXF3QixRQUFRdHhCLEdBQUcsdUJBQXVCQSxHQUFHLG1CQUFtQkMsRUFBRVMsT0FBTyxFQUFFVixFQUFFQyxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUN0QyxFQUFFSCxFQUFFSyxLQUFLLGFBQWEsSUFBSUMsRUFBRUQsRUFBRSxNQUFNRSxFQUFFTyxPQUFPVyxVQUFVQyxlQUFlRSxFQUFFZ0gsTUFBTUMsUUFBUXJJLEVBQUUsV0FBVyxJQUFJLElBQUlMLEVBQUUsR0FBR0gsRUFBRSxFQUFFQSxFQUFFLE1BQU1BLEVBQUVHLEVBQUUyQyxLQUFLLE1BQU05QyxFQUFFLEdBQUcsSUFBSSxJQUFJQSxFQUFFZ0osU0FBUyxLQUFLcUksZUFBZSxPQUFPbFIsQ0FBQyxDQUF2RyxHQUEyR3FELEVBQUUsU0FBU3JELEVBQUVILEdBQUcsSUFBSSxJQUFJSyxFQUFFTCxHQUFHQSxFQUFFdTBCLGFBQWF6ekIsT0FBT1EsT0FBTyxNQUFNLENBQUMsRUFBRWhCLEVBQUUsRUFBRUEsRUFBRUgsRUFBRStDLFNBQVM1QyxPQUFFLElBQVNILEVBQUVHLEtBQUtELEVBQUVDLEdBQUdILEVBQUVHLElBQUksT0FBT0QsQ0FBQyxFQUFFRixFQUFFQyxRQUFRLENBQUN5MUIsY0FBY3J5QixFQUFFc3lCLE9BQU8sU0FBUzMxQixFQUFFSCxHQUFHLE9BQU9jLE9BQU9zSSxLQUFLcEosR0FBRysxQixRQUFPLFNBQVU1MUIsRUFBRUUsR0FBRyxPQUFPRixFQUFFRSxHQUFHTCxFQUFFSyxHQUFHRixDQUFFLEdBQUVBLEVBQUUsRUFBRTAwQixRQUFRLFNBQVMxMEIsRUFBRUgsR0FBRyxNQUFNLEdBQUdtRCxPQUFPaEQsRUFBRUgsRUFBRSxFQUFFKzBCLFFBQVEsU0FBUzUwQixHQUFHLElBQUksSUFBSUgsRUFBRSxDQUFDLENBQUNnMkIsSUFBSSxDQUFDejFCLEVBQUVKLEdBQUc4MUIsS0FBSyxNQUFNNTFCLEVBQUUsR0FBR0MsRUFBRSxFQUFFQSxFQUFFTixFQUFFa0QsU0FBUzVDLEVBQUUsSUFBSSxJQUFJQyxFQUFFUCxFQUFFTSxHQUFHRSxFQUFFRCxFQUFFeTFCLElBQUl6MUIsRUFBRTAxQixNQUFNenlCLEVBQUUxQyxPQUFPc0ksS0FBSzVJLEdBQUdJLEVBQUUsRUFBRUEsRUFBRTRDLEVBQUVOLFNBQVN0QyxFQUFFLENBQUMsSUFBSTZDLEVBQUVELEVBQUU1QyxHQUFHSCxFQUFFRCxFQUFFaUQsR0FBRyxpQkFBaUJoRCxHQUFHLE9BQU9BLElBQUksSUFBSUosRUFBRThQLFFBQVExUCxLQUFLVCxFQUFFOEMsS0FBSyxDQUFDa3pCLElBQUl4MUIsRUFBRXkxQixLQUFLeHlCLElBQUlwRCxFQUFFeUMsS0FBS3JDLEdBQUcsQ0FBQyxPQUFPLFNBQVNOLEdBQUcsS0FBS0EsRUFBRStDLE9BQU8sR0FBRyxDQUFDLElBQUlsRCxFQUFFRyxFQUFFOEssTUFBTTVLLEVBQUVMLEVBQUVnMkIsSUFBSWgyQixFQUFFaTJCLE1BQU0sR0FBR3IwQixFQUFFdkIsR0FBRyxDQUFDLElBQUksSUFBSUMsRUFBRSxHQUFHQyxFQUFFLEVBQUVBLEVBQUVGLEVBQUU2QyxTQUFTM0MsT0FBRSxJQUFTRixFQUFFRSxJQUFJRCxFQUFFd0MsS0FBS3pDLEVBQUVFLElBQUlQLEVBQUVnMkIsSUFBSWgyQixFQUFFaTJCLE1BQU0zMUIsQ0FBQyxDQUFDLENBQUMsQ0FBbEosQ0FBb0pOLEdBQUdHLENBQUMsRUFBRXVGLE9BQU8sU0FBU3ZGLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRUgsRUFBRThRLFFBQVEsTUFBTSxLQUFLLEdBQUcsZUFBZTVRLEVBQUUsT0FBT0MsRUFBRTJRLFFBQVEsaUJBQWlCaWxCLFVBQVUsSUFBSSxPQUFPclgsbUJBQW1CdmUsRUFBb0IsQ0FBakIsTUFBTUgsR0FBRyxPQUFPRyxDQUFDLENBQUMsRUFBRXVELE9BQU8sU0FBUzFELEVBQUVILEVBQUVLLEVBQUVFLEVBQUVxQixHQUFHLEdBQUcsSUFBSXpCLEVBQUUrQyxPQUFPLE9BQU8vQyxFQUFFLElBQUlxRCxFQUFFckQsRUFBRSxHQUFHLGlCQUFpQkEsRUFBRXFELEVBQUV0QyxPQUFPTyxVQUFVdUgsU0FBU3RJLEtBQUtQLEdBQUcsaUJBQWlCQSxJQUFJcUQsRUFBRU8sT0FBTzVELElBQUksZUFBZUUsRUFBRSxPQUFPODFCLE9BQU8zeUIsR0FBR3lOLFFBQVEsbUJBQWtCLFNBQVU5USxHQUFHLE1BQU0sU0FBU3NYLFNBQVN0WCxFQUFFdUssTUFBTSxHQUFHLElBQUksS0FBTSxJQUFHLElBQUksSUFBSTlKLEVBQUUsR0FBRzZDLEVBQUUsRUFBRUEsRUFBRUQsRUFBRU4sU0FBU08sRUFBRSxDQUFDLElBQUloRCxFQUFFK0MsRUFBRUQsV0FBV0UsR0FBRyxLQUFLaEQsR0FBRyxLQUFLQSxHQUFHLEtBQUtBLEdBQUcsTUFBTUEsR0FBR0EsR0FBRyxJQUFJQSxHQUFHLElBQUlBLEdBQUcsSUFBSUEsR0FBRyxJQUFJQSxHQUFHLElBQUlBLEdBQUcsS0FBS21CLElBQUl0QixFQUFFaXpCLFVBQVUsS0FBSzl5QixHQUFHLEtBQUtBLEdBQUdHLEdBQUc0QyxFQUFFNk0sT0FBTzVNLEdBQUdoRCxFQUFFLElBQUlHLEdBQUdKLEVBQUVDLEdBQUdBLEVBQUUsS0FBS0csR0FBR0osRUFBRSxJQUFJQyxHQUFHLEdBQUdELEVBQUUsSUFBSSxHQUFHQyxHQUFHQSxFQUFFLE9BQU9BLEdBQUcsTUFBTUcsR0FBR0osRUFBRSxJQUFJQyxHQUFHLElBQUlELEVBQUUsSUFBSUMsR0FBRyxFQUFFLElBQUlELEVBQUUsSUFBSSxHQUFHQyxJQUFJZ0QsR0FBRyxFQUFFaEQsRUFBRSxRQUFRLEtBQUtBLElBQUksR0FBRyxLQUFLK0MsRUFBRUQsV0FBV0UsSUFBSTdDLEdBQUdKLEVBQUUsSUFBSUMsR0FBRyxJQUFJRCxFQUFFLElBQUlDLEdBQUcsR0FBRyxJQUFJRCxFQUFFLElBQUlDLEdBQUcsRUFBRSxJQUFJRCxFQUFFLElBQUksR0FBR0MsR0FBRyxDQUFDLE9BQU9HLENBQUMsRUFBRXlXLFNBQVMsU0FBU2xYLEdBQUcsU0FBU0EsR0FBRyxpQkFBaUJBLEtBQUtBLEVBQUU0TCxhQUFhNUwsRUFBRTRMLFlBQVlzTCxVQUFVbFgsRUFBRTRMLFlBQVlzTCxTQUFTbFgsSUFBSSxFQUFFdzBCLFNBQVMsU0FBU3gwQixHQUFHLE1BQU0sb0JBQW9CVyxPQUFPVyxVQUFVdUgsU0FBU3RJLEtBQUtQLEVBQUUsRUFBRXkwQixTQUFTLFNBQVN6MEIsRUFBRUgsR0FBRyxHQUFHNEIsRUFBRXpCLEdBQUcsQ0FBQyxJQUFJLElBQUlFLEVBQUUsR0FBR0MsRUFBRSxFQUFFQSxFQUFFSCxFQUFFK0MsT0FBTzVDLEdBQUcsRUFBRUQsRUFBRXlDLEtBQUs5QyxFQUFFRyxFQUFFRyxLQUFLLE9BQU9ELENBQUMsQ0FBQyxPQUFPTCxFQUFFRyxFQUFFLEVBQUUyMEIsTUFBTSxTQUFTMzBCLEVBQUVILEVBQUVLLEVBQUVDLEdBQUcsSUFBSUQsRUFBRSxPQUFPTCxFQUFFLEdBQUcsaUJBQWlCSyxFQUFFLENBQUMsR0FBR3VCLEVBQUU1QixHQUFHQSxFQUFFOEMsS0FBS3pDLE9BQU8sQ0FBQyxJQUFJTCxHQUFHLGlCQUFpQkEsRUFBRSxNQUFNLENBQUNBLEVBQUVLLElBQUlDLElBQUlBLEVBQUVpMEIsY0FBY2owQixFQUFFcXpCLG1CQUFtQnB6QixFQUFFRyxLQUFLSSxPQUFPVyxVQUFVcEIsTUFBTUwsRUFBRUssSUFBRyxFQUFHLENBQUMsT0FBT0wsQ0FBQyxDQUFDLElBQUlBLEdBQUcsaUJBQWlCQSxFQUFFLE1BQU0sQ0FBQ0EsR0FBR21ELE9BQU85QyxHQUFHLElBQUlHLEVBQUVSLEVBQUUsT0FBTzRCLEVBQUU1QixLQUFLNEIsRUFBRXZCLEtBQUtHLEVBQUVnRCxFQUFFeEQsRUFBRU0sSUFBSXNCLEVBQUU1QixJQUFJNEIsRUFBRXZCLElBQUlBLEVBQUVxb0IsU0FBUSxTQUFVcm9CLEVBQUV1QixHQUFHLEdBQUdyQixFQUFFRyxLQUFLVixFQUFFNEIsR0FBRyxDQUFDLElBQUlwQixFQUFFUixFQUFFNEIsR0FBR3BCLEdBQUcsaUJBQWlCQSxHQUFHSCxHQUFHLGlCQUFpQkEsRUFBRUwsRUFBRTRCLEdBQUd6QixFQUFFSyxFQUFFSCxFQUFFQyxHQUFHTixFQUFFOEMsS0FBS3pDLEVBQUUsTUFBTUwsRUFBRTRCLEdBQUd2QixDQUFFLElBQUdMLEdBQUdjLE9BQU9zSSxLQUFLL0ksR0FBRzAxQixRQUFPLFNBQVUvMUIsRUFBRTRCLEdBQUcsSUFBSXBCLEVBQUVILEVBQUV1QixHQUFHLE9BQU9yQixFQUFFRyxLQUFLVixFQUFFNEIsR0FBRzVCLEVBQUU0QixHQUFHekIsRUFBRUgsRUFBRTRCLEdBQUdwQixFQUFFRixHQUFHTixFQUFFNEIsR0FBR3BCLEVBQUVSLENBQUUsR0FBRVEsRUFBRSxFQUFDLEVBQUcsS0FBSyxTQUFTTCxFQUFFSCxJQUFJLFNBQVNHLEdBQUcsYUFBYSxJQUFJSCxFQUFFLFNBQVNHLEdBQUcsSUFBSUgsRUFBRUssRUFBRSxJQUFJOGUsYUFBYSxJQUFJLEdBQUdoZixFQUFFLElBQUlILEVBQUUsRUFBRUEsRUFBRUcsRUFBRStDLE9BQU9sRCxJQUFJSyxFQUFFTCxHQUFHRyxFQUFFSCxHQUFHLE9BQU9LLENBQUMsRUFBRUEsRUFBRSxXQUFXLE1BQU0sSUFBSW1GLE1BQU0sVUFBVSxFQUFFbEYsRUFBRSxJQUFJMkUsV0FBVyxJQUFJMUUsRUFBRSxJQUFJMEUsV0FBVyxJQUFJMUUsRUFBRSxHQUFHLEVBQUUsSUFBSXFCLEVBQUU1QixJQUFJUSxFQUFFUixFQUFFLENBQUMsSUFBSXdELEVBQUV4RCxFQUFFLENBQUMsTUFBTSxJQUFJWSxFQUFFWixFQUFFLENBQUMsTUFBTSxLQUFLLE1BQU0sTUFBTSxNQUFNLE1BQU0sS0FBSyxJQUFJLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sUUFBUXlELEVBQUV6RCxFQUFFLENBQUMsTUFBTSxLQUFLLE1BQU0sTUFBTSxNQUFNLE1BQU0sS0FBSyxJQUFJLE1BQU0sTUFBTSxNQUFNLEtBQUssTUFBTSxNQUFNLE1BQU0sT0FBT1MsRUFBRVQsRUFBRSxDQUFDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE9BQU84RCxFQUFFOUQsRUFBRSxDQUFDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLFFBQVEyQixFQUFFM0IsRUFBRSxDQUFDLE1BQU0sTUFBTSxLQUFLLE1BQU0sTUFBTSxNQUFNLEtBQUssTUFBTSxNQUFNLE1BQU0sSUFBSSxNQUFNLE1BQU0sTUFBTSxLQUFLLFFBQVEsU0FBU3FDLEVBQUVsQyxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHSCxFQUFFSCxHQUFHSyxHQUFHLEdBQUcsSUFBSUYsRUFBRUgsRUFBRSxHQUFHSyxHQUFHLEdBQUcsSUFBSUYsRUFBRUgsRUFBRSxHQUFHSyxHQUFHLEVBQUUsSUFBSUYsRUFBRUgsRUFBRSxHQUFHLElBQUlLLEVBQUVGLEVBQUVILEVBQUUsR0FBR00sR0FBRyxHQUFHLElBQUlILEVBQUVILEVBQUUsR0FBR00sR0FBRyxHQUFHLElBQUlILEVBQUVILEVBQUUsR0FBR00sR0FBRyxFQUFFLElBQUlILEVBQUVILEVBQUUsR0FBRyxJQUFJTSxDQUFDLENBQUMsU0FBU08sRUFBRVYsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsR0FBRyxJQUFJcUIsRUFBRXBCLEVBQUUsRUFBRSxJQUFJb0IsRUFBRSxFQUFFQSxFQUFFckIsRUFBRXFCLElBQUlwQixHQUFHTCxFQUFFSCxFQUFFNEIsR0FBR3ZCLEVBQUVDLEVBQUVzQixHQUFHLE9BQU8sRUFBRXBCLEVBQUUsSUFBSSxHQUFHLENBQUMsQ0FBQyxTQUFTZ0UsRUFBRXJFLEVBQUVILEVBQUVLLEVBQUVDLEdBQUcsT0FBT08sRUFBRVYsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxHQUFHLENBQUMsU0FBU2dDLEVBQUVuQyxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLE9BQU9PLEVBQUVWLEVBQUVILEVBQUVLLEVBQUVDLEVBQUUsR0FBRyxDQUFDLFNBQVNLLEVBQUVSLEVBQUVILEVBQUVLLEVBQUVDLElBQUksU0FBU0gsRUFBRUgsRUFBRUssRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUVxQixFQUFFLElBQUl0QixFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdFLEVBQUUsSUFBSUgsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHbUQsRUFBRSxJQUFJbkQsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHTyxFQUFFLElBQUlQLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29ELEVBQUUsSUFBSXBELEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR0ksRUFBRSxJQUFJSCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUd3RCxFQUFFLElBQUk5RCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcyQixFQUFFLElBQUkzQixFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdxQyxFQUFFLElBQUlyQyxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdhLEVBQUUsSUFBSWIsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHd0UsRUFBRSxJQUFJbEUsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHZ0MsRUFBRSxJQUFJakMsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHTSxFQUFFLElBQUlOLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR2tDLEVBQUUsSUFBSWxDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29DLEVBQUUsSUFBSXBDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR21DLEVBQUUsSUFBSWxDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29DLEVBQUVkLEVBQUU2RCxFQUFFakYsRUFBRTRCLEVBQUVvQixFQUFFMEMsRUFBRXRGLEVBQUUwRixFQUFFN0MsRUFBRXRCLEVBQUUxQixFQUFFb0osRUFBRS9GLEVBQUVqQyxFQUFFRixFQUFFbUksRUFBRXpILEVBQUU0SCxFQUFFcEosRUFBRThKLEVBQUVuRyxFQUFFMEcsRUFBRTVJLEVBQUVrSixFQUFFN0ssRUFBRThLLEVBQUVsSixFQUFFb0osRUFBRWxKLEVBQUVtSixFQUFFcEosRUFBRXFKLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxHQUFHLEVBQUVuSixJQUFJbkMsR0FBR2lMLElBQUlqTCxHQUFHdUosSUFBSXZKLEdBQUcrRixJQUFJL0YsRUFBRW1DLEVBQUU4SSxFQUFFLElBQUksRUFBRWpMLElBQUksSUFBSW1DLEVBQUUsSUFBSSxFQUFFbkMsSUFBSSxJQUFJK0YsRUFBRSxJQUFJLEdBQUcvRixJQUFJLElBQUl1SixFQUFFLElBQUksR0FBR3ZKLElBQUksR0FBRzRCLElBQUk1QixHQUFHa0YsSUFBSWxGLEdBQUdrTCxJQUFJbEwsR0FBRzBKLElBQUkxSixFQUFFNEIsRUFBRXNELEVBQUUsSUFBSSxFQUFFbEYsSUFBSSxJQUFJNEIsRUFBRSxJQUFJLEVBQUU1QixJQUFJLElBQUkwSixFQUFFLElBQUksR0FBRzFKLElBQUksSUFBSWtMLEVBQUUsSUFBSSxHQUFHbEwsSUFBSSxHQUFHb0ssSUFBSXBLLEdBQUdzSixJQUFJdEosR0FBRzZCLElBQUk3QixHQUFHb0wsSUFBSXBMLEVBQUVvSyxFQUFFZCxFQUFFLElBQUksRUFBRXRKLElBQUksSUFBSW9LLEVBQUUsSUFBSSxFQUFFcEssSUFBSSxJQUFJb0wsRUFBRSxJQUFJLEdBQUdwTCxJQUFJLElBQUk2QixFQUFFLElBQUksR0FBRzdCLElBQUksR0FBR3FMLElBQUlyTCxHQUFHMkssSUFBSTNLLEdBQUdzQixJQUFJdEIsR0FBRzJGLElBQUkzRixFQUFFcUwsRUFBRVYsRUFBRSxJQUFJLEVBQUUzSyxJQUFJLElBQUlxTCxFQUFFLElBQUksRUFBRXJMLElBQUksSUFBSTJGLEVBQUUsSUFBSSxHQUFHM0YsSUFBSSxJQUFJc0IsRUFBRSxJQUFJLEdBQUd0QixJQUFJLEdBQUdtQyxJQUFJbkMsR0FBRzJGLElBQUkzRixHQUFHNkIsSUFBSTdCLEdBQUdrRixJQUFJbEYsRUFBRW1DLEVBQUV3RCxFQUFFLElBQUksRUFBRTNGLElBQUksSUFBSW1DLEVBQUUsSUFBSSxFQUFFbkMsSUFBSSxJQUFJa0YsRUFBRSxJQUFJLEdBQUdsRixJQUFJLElBQUk2QixFQUFFLElBQUksR0FBRzdCLElBQUksR0FBRzRCLElBQUk1QixHQUFHK0YsSUFBSS9GLEdBQUdzQixJQUFJdEIsR0FBR3NKLElBQUl0SixFQUFFNEIsRUFBRW1FLEVBQUUsSUFBSSxFQUFFL0YsSUFBSSxJQUFJNEIsRUFBRSxJQUFJLEVBQUU1QixJQUFJLElBQUlzSixFQUFFLElBQUksR0FBR3RKLElBQUksSUFBSXNCLEVBQUUsSUFBSSxHQUFHdEIsSUFBSSxHQUFHb0ssSUFBSXBLLEdBQUcwSixJQUFJMUosR0FBR3VKLElBQUl2SixHQUFHMkssSUFBSTNLLEVBQUVvSyxFQUFFVixFQUFFLElBQUksRUFBRTFKLElBQUksSUFBSW9LLEVBQUUsSUFBSSxFQUFFcEssSUFBSSxJQUFJMkssRUFBRSxJQUFJLEdBQUczSyxJQUFJLElBQUl1SixFQUFFLElBQUksR0FBR3ZKLElBQUksR0FBR3FMLElBQUlyTCxHQUFHb0wsSUFBSXBMLEdBQUdrTCxJQUFJbEwsR0FBR2lMLElBQUlqTCxFQUFFcUwsRUFBRUQsRUFBRSxJQUFJLEVBQUVwTCxJQUFJLElBQUlxTCxFQUFFLElBQUksRUFBRXJMLElBQUksSUFBSWlMLEVBQUUsSUFBSSxHQUFHakwsSUFBSSxJQUFJa0wsRUFBRSxJQUFJLEdBQUdsTCxJQUFJLEdBQUdtQyxFQUFFQSxFQUFFZCxFQUFFLEVBQUU2RCxFQUFFQSxFQUFFakYsRUFBRSxFQUFFNEIsRUFBRUEsRUFBRW9CLEVBQUUsRUFBRTBDLEVBQUVBLEVBQUV0RixFQUFFLEVBQUUwRixFQUFFQSxFQUFFN0MsRUFBRSxFQUFFdEIsRUFBRUEsRUFBRTFCLEVBQUUsRUFBRW9KLEVBQUVBLEVBQUUvRixFQUFFLEVBQUVqQyxFQUFFQSxFQUFFRixFQUFFLEVBQUVtSSxFQUFFQSxFQUFFekgsRUFBRSxFQUFFNEgsRUFBRUEsRUFBRXBKLEVBQUUsRUFBRThKLEVBQUVBLEVBQUVuRyxFQUFFLEVBQUUwRyxFQUFFQSxFQUFFNUksRUFBRSxFQUFFa0osRUFBRUEsRUFBRTdLLEVBQUUsRUFBRThLLEVBQUVBLEVBQUVsSixFQUFFLEVBQUVvSixFQUFFQSxFQUFFbEosRUFBRSxFQUFFbUosRUFBRUEsRUFBRXBKLEVBQUUsRUFBRXJDLEVBQUUsR0FBR3VDLElBQUksRUFBRSxJQUFJdkMsRUFBRSxHQUFHdUMsSUFBSSxFQUFFLElBQUl2QyxFQUFFLEdBQUd1QyxJQUFJLEdBQUcsSUFBSXZDLEVBQUUsR0FBR3VDLElBQUksR0FBRyxJQUFJdkMsRUFBRSxHQUFHc0YsSUFBSSxFQUFFLElBQUl0RixFQUFFLEdBQUdzRixJQUFJLEVBQUUsSUFBSXRGLEVBQUUsR0FBR3NGLElBQUksR0FBRyxJQUFJdEYsRUFBRSxHQUFHc0YsSUFBSSxHQUFHLElBQUl0RixFQUFFLEdBQUdpQyxJQUFJLEVBQUUsSUFBSWpDLEVBQUUsR0FBR2lDLElBQUksRUFBRSxJQUFJakMsRUFBRSxJQUFJaUMsSUFBSSxHQUFHLElBQUlqQyxFQUFFLElBQUlpQyxJQUFJLEdBQUcsSUFBSWpDLEVBQUUsSUFBSStGLElBQUksRUFBRSxJQUFJL0YsRUFBRSxJQUFJK0YsSUFBSSxFQUFFLElBQUkvRixFQUFFLElBQUkrRixJQUFJLEdBQUcsSUFBSS9GLEVBQUUsSUFBSStGLElBQUksR0FBRyxJQUFJL0YsRUFBRSxJQUFJbUcsSUFBSSxFQUFFLElBQUluRyxFQUFFLElBQUltRyxJQUFJLEVBQUUsSUFBSW5HLEVBQUUsSUFBSW1HLElBQUksR0FBRyxJQUFJbkcsRUFBRSxJQUFJbUcsSUFBSSxHQUFHLElBQUluRyxFQUFFLElBQUlnQyxJQUFJLEVBQUUsSUFBSWhDLEVBQUUsSUFBSWdDLElBQUksRUFBRSxJQUFJaEMsRUFBRSxJQUFJZ0MsSUFBSSxHQUFHLElBQUloQyxFQUFFLElBQUlnQyxJQUFJLEdBQUcsSUFBSWhDLEVBQUUsSUFBSTBKLElBQUksRUFBRSxJQUFJMUosRUFBRSxJQUFJMEosSUFBSSxFQUFFLElBQUkxSixFQUFFLElBQUkwSixJQUFJLEdBQUcsSUFBSTFKLEVBQUUsSUFBSTBKLElBQUksR0FBRyxJQUFJMUosRUFBRSxJQUFJMEIsSUFBSSxFQUFFLElBQUkxQixFQUFFLElBQUkwQixJQUFJLEVBQUUsSUFBSTFCLEVBQUUsSUFBSTBCLElBQUksR0FBRyxJQUFJMUIsRUFBRSxJQUFJMEIsSUFBSSxHQUFHLElBQUkxQixFQUFFLElBQUkySixJQUFJLEVBQUUsSUFBSTNKLEVBQUUsSUFBSTJKLElBQUksRUFBRSxJQUFJM0osRUFBRSxJQUFJMkosSUFBSSxHQUFHLElBQUkzSixFQUFFLElBQUkySixJQUFJLEdBQUcsSUFBSTNKLEVBQUUsSUFBSThKLElBQUksRUFBRSxJQUFJOUosRUFBRSxJQUFJOEosSUFBSSxFQUFFLElBQUk5SixFQUFFLElBQUk4SixJQUFJLEdBQUcsSUFBSTlKLEVBQUUsSUFBSThKLElBQUksR0FBRyxJQUFJOUosRUFBRSxJQUFJd0ssSUFBSSxFQUFFLElBQUl4SyxFQUFFLElBQUl3SyxJQUFJLEVBQUUsSUFBSXhLLEVBQUUsSUFBSXdLLElBQUksR0FBRyxJQUFJeEssRUFBRSxJQUFJd0ssSUFBSSxHQUFHLElBQUl4SyxFQUFFLElBQUkrSyxJQUFJLEVBQUUsSUFBSS9LLEVBQUUsSUFBSStLLElBQUksRUFBRSxJQUFJL0ssRUFBRSxJQUFJK0ssSUFBSSxHQUFHLElBQUkvSyxFQUFFLElBQUkrSyxJQUFJLEdBQUcsSUFBSS9LLEVBQUUsSUFBSXFMLElBQUksRUFBRSxJQUFJckwsRUFBRSxJQUFJcUwsSUFBSSxFQUFFLElBQUlyTCxFQUFFLElBQUlxTCxJQUFJLEdBQUcsSUFBSXJMLEVBQUUsSUFBSXFMLElBQUksR0FBRyxJQUFJckwsRUFBRSxJQUFJc0wsSUFBSSxFQUFFLElBQUl0TCxFQUFFLElBQUlzTCxJQUFJLEVBQUUsSUFBSXRMLEVBQUUsSUFBSXNMLElBQUksR0FBRyxJQUFJdEwsRUFBRSxJQUFJc0wsSUFBSSxHQUFHLElBQUl0TCxFQUFFLElBQUl3TCxJQUFJLEVBQUUsSUFBSXhMLEVBQUUsSUFBSXdMLElBQUksRUFBRSxJQUFJeEwsRUFBRSxJQUFJd0wsSUFBSSxHQUFHLElBQUl4TCxFQUFFLElBQUl3TCxJQUFJLEdBQUcsSUFBSXhMLEVBQUUsSUFBSXlMLElBQUksRUFBRSxJQUFJekwsRUFBRSxJQUFJeUwsSUFBSSxFQUFFLElBQUl6TCxFQUFFLElBQUl5TCxJQUFJLEdBQUcsSUFBSXpMLEVBQUUsSUFBSXlMLElBQUksR0FBRyxHQUFHLENBQWo0RixDQUFtNEZ6TCxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLENBQUMsU0FBU2lDLEVBQUVwQyxFQUFFSCxFQUFFSyxFQUFFQyxJQUFJLFNBQVNILEVBQUVILEVBQUVLLEVBQUVDLEdBQUcsSUFBSSxJQUFJQyxFQUFFcUIsRUFBRSxJQUFJdEIsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHRSxFQUFFLElBQUlILEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBR21ELEVBQUUsSUFBSW5ELEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBR08sRUFBRSxJQUFJUCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdvRCxFQUFFLElBQUlwRCxFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdJLEVBQUUsSUFBSUgsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHd0QsRUFBRSxJQUFJOUQsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHMkIsRUFBRSxJQUFJM0IsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHcUMsRUFBRSxJQUFJckMsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHYSxFQUFFLElBQUliLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR3dFLEVBQUUsSUFBSWxFLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR2dDLEVBQUUsSUFBSWpDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR00sRUFBRSxJQUFJTixFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEdBQUcsSUFBSUEsRUFBRSxN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QVUsUUFBUSxRQUFRLE1BQU0sUUFBUSxRQUFRLFNBQVMsUUFBUSxRQUFRLFVBQVUsT0FBTyxRQUFRLFNBQVMsVUFBVSxVQUFVLFFBQVEsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFFBQVEsUUFBUSxRQUFRLFNBQVMsUUFBUSxXQUFXLFNBQVMsVUFBVSxTQUFTLFVBQVUsVUFBVSxVQUFVLE1BQU0sUUFBUSxVQUFVLFNBQVMsUUFBUSxVQUFVLFFBQVEsT0FBTyxTQUFTLE9BQU8sUUFBUSxRQUFRLE1BQU0sUUFBUSxRQUFRLE9BQU8sU0FBUyxVQUFVLFNBQVMsU0FBUyxRQUFRLE1BQU0sV0FBVyxTQUFTLFVBQVUsTUFBTSxTQUFTLFVBQVUsUUFBUSxTQUFTLFNBQVMsU0FBUyxVQUFVLE9BQU8sU0FBUyxTQUFTLFdBQVcsVUFBVSxVQUFVLFFBQVEsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFVBQVUsVUFBVSxRQUFRLFFBQVEsUUFBUSxPQUFPLFVBQVUsUUFBUSxVQUFVLE9BQU8sT0FBTyxXQUFXLFFBQVEsUUFBUSxNQUFNLFVBQVUsVUFBVSxPQUFPLFNBQVMsU0FBUyxTQUFTLE1BQU0sU0FBUyxVQUFVLFNBQVMsT0FBTyxRQUFRLFNBQVMsU0FBUyxRQUFRLE9BQU8sU0FBUyxVQUFVLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxTQUFTLFVBQVUsUUFBUSxPQUFPLFFBQVEsVUFBVSxPQUFPLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxNQUFNLE9BQU8sT0FBTyxVQUFVLE9BQU8sUUFBUSxTQUFTLFFBQVEsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFVBQVUsU0FBUyxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxRQUFRLE9BQU8sUUFBUSxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsU0FBUyxNQUFNLE1BQU0sVUFBVSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsUUFBUSxXQUFXLFNBQVMsU0FBUyxRQUFRLFVBQVUsUUFBUSxRQUFRLFNBQVMsUUFBUSxTQUFTLFVBQVUsUUFBUSxPQUFPLE9BQU8sU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsTUFBTSxXQUFXLE9BQU8sU0FBUyxRQUFRLE9BQU8sVUFBVSxRQUFRLFFBQVEsU0FBUyxPQUFPLE9BQU8sT0FBTyxPQUFPLFNBQVMsT0FBTyxNQUFNLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsVUFBVSxVQUFVLFVBQVUsTUFBTSxTQUFTLE9BQU8sUUFBUSxTQUFTLFFBQVEsT0FBTyxPQUFPLE9BQU8sU0FBUyxTQUFTLFNBQVMsTUFBTSxVQUFVLFFBQVEsV0FBVyxTQUFTLFNBQVMsUUFBUSxVQUFVLE9BQU8sVUFBVSxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxRQUFRLFFBQVEsV0FBVyxTQUFTLFFBQVEsVUFBVSxTQUFTLFFBQVEsT0FBTyxRQUFRLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxVQUFVLFFBQVEsUUFBUSxVQUFVLFNBQVMsU0FBUyxVQUFVLFVBQVUsUUFBUSxRQUFRLFFBQVEsV0FBVyxTQUFTLFVBQVUsT0FBTyxRQUFRLFFBQVEsT0FBTyxVQUFVLE9BQU8sT0FBTyxRQUFRLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxRQUFRLFNBQVMsT0FBTyxRQUFRLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxPQUFPLFFBQVEsVUFBVSxTQUFTLFFBQVEsUUFBUSxVQUFVLE9BQU8sU0FBUyxPQUFPLE9BQU8sVUFBVSxRQUFRLFNBQVMsVUFBVSxPQUFPLFVBQVUsUUFBUSxTQUFTLFVBQVUsVUFBVSxVQUFVLFVBQVUsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLE9BQU8sT0FBTyxTQUFTLE9BQU8sUUFBUSxPQUFPLE9BQU8sVUFBVSxPQUFPLFNBQVMsUUFBUSxVQUFVLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxPQUFPLFFBQVEsUUFBUSxTQUFTLFFBQVEsUUFBUSxRQUFRLFNBQVMsUUFBUSxPQUFPLFVBQVUsUUFBUSxRQUFRLFNBQVMsT0FBTyxRQUFRLFNBQVMsUUFBUSxVQUFVLFFBQVEsU0FBUyxVQUFVLFNBQVMsUUFBUSxNQUFNLFVBQVUsT0FBTyxVQUFVLE1BQU0sV0FBVyxVQUFVLFVBQVUsVUFBVSxRQUFRLFVBQVUsU0FBUyxPQUFPLFFBQVEsTUFBTSxTQUFTLE9BQU8sUUFBUSxTQUFTLFNBQVMsT0FBTyxXQUFXLE9BQU8sTUFBTSxPQUFPLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxVQUFVLFdBQVcsV0FBVyxPQUFPLFVBQVUsU0FBUyxPQUFPLFNBQVMsUUFBUSxVQUFVLFNBQVMsU0FBUyxTQUFTLFVBQVUsT0FBTyxTQUFTLFNBQVMsVUFBVSxRQUFRLFNBQVMsU0FBUyxXQUFXLFNBQVMsU0FBUyxPQUFPLFVBQVUsVUFBVSxTQUFTLFNBQVMsVUFBVSxTQUFTLFNBQVMsVUFBVSxPQUFPLFVBQVUsUUFBUSxPQUFPLFNBQVMsT0FBTyxTQUFTLFVBQVUsVUFBVSxVQUFVLFNBQVMsV0FBVyxTQUFTLE9BQU8sV0FBVyxXQUFXLFVBQVUsT0FBTyxVQUFVLFdBQVcsVUFBVSxXQUFXLFNBQVMsU0FBUyxVQUFVLFFBQVEsU0FBUyxXQUFXLE1BQU0sT0FBTyxVQUFVLFNBQVMsU0FBUyxTQUFTLFFBQVEsT0FBTyxPQUFPLFNBQVMsT0FBTyxRQUFRLFNBQVMsUUFBUSxVQUFVLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sUUFBUSxPQUFPLE9BQU8sTUFBTSxPQUFPLE9BQU8sT0FBTyxTQUFTLE9BQU8sUUFBUSxPQUFPLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxPQUFPLFFBQVEsU0FBUyxPQUFPLE9BQU8sT0FBTyxVQUFVLFVBQVUsT0FBTyxPQUFPLFVBQVUsU0FBUyxNQUFNLFFBQVEsU0FBUyxRQUFRLFFBQVEsV0FBVyxVQUFVLFVBQVUsV0FBVyxXQUFXLFFBQVEsT0FBTyxTQUFTLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxVQUFVLFFBQVEsU0FBUyxRQUFRLE1BQU0sVUFBVSxVQUFVLFFBQVEsU0FBUyxVQUFVLFNBQVMsU0FBUyxVQUFVLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFdBQVcsVUFBVSxRQUFRLFFBQVEsTUFBTSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsU0FBUyxRQUFRLFVBQVUsU0FBUyxVQUFVLFNBQVMsV0FBVyxPQUFPLFFBQVEsU0FBUyxRQUFRLFVBQVUsU0FBUyxXQUFXLFNBQVMsVUFBVSxTQUFTLFVBQVUsV0FBVyxVQUFVLFVBQVUsUUFBUSxRQUFRLE9BQU8sU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFFBQVEsTUFBTSxVQUFVLFNBQVMsT0FBTyxVQUFVLE9BQU8sUUFBUSxRQUFRLE9BQU8sUUFBUSxPQUFPLFNBQVMsU0FBUyxNQUFNLFFBQVEsVUFBVSxPQUFPLFVBQVUsTUFBTSxRQUFRLFNBQVMsVUFBVSxRQUFRLFdBQVcsVUFBVSxXQUFXLFVBQVUsTUFBTSxPQUFPLE9BQU8sU0FBUyxRQUFRLFdBQVcsUUFBUSxRQUFRLE1BQU0sUUFBUSxVQUFVLFFBQVEsU0FBUyxPQUFPLE9BQU8sU0FBUyxRQUFRLE9BQU8sT0FBTyxTQUFTLFNBQVMsT0FBTyxPQUFPLFFBQVEsU0FBUyxPQUFPLE1BQU0sVUFBVSxNQUFNLE9BQU8sUUFBUSxRQUFRLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxRQUFRLFFBQVEsUUFBUSxTQUFTLFFBQVEsUUFBUSxNQUFNLE9BQU8sUUFBUSxNQUFNLE9BQU8sT0FBTyxTQUFTLE9BQU8sT0FBTyxRQUFRLFNBQVMsU0FBUyxPQUFPLFVBQVUsUUFBUSxVQUFVLFNBQVMsU0FBUyxRQUFRLE1BQU0sVUFBVSxRQUFRLFdBQVcsUUFBUSxTQUFTLFNBQVMsT0FBTyxRQUFRLFFBQVEsUUFBUSxTQUFTLFFBQVEsT0FBTyxNQUFNLFFBQVEsVUFBVSxPQUFPLFNBQVMsU0FBUyxPQUFPLFNBQVMsVUFBVSxPQUFPLE1BQU0sU0FBUyxVQUFVLFNBQVMsU0FBUyxVQUFVLE1BQU0sT0FBTyxPQUFPLFNBQVMsUUFBUSxPQUFPLFVBQVUsU0FBUyxRQUFRLFNBQVMsVUFBVSxVQUFVLFFBQVEsUUFBUSxPQUFPLFNBQVMsU0FBUyxVQUFVLE9BQU8sT0FBTyxPQUFPLFNBQVMsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sT0FBTyxPQUFPLFVBQVUsT0FBTyxPQUFPLFFBQVEsVUFBVSxTQUFTLFNBQVMsU0FBUyxPQUFPLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLE9BQU8sUUFBUSxPQUFPLFVBQVUsUUFBUSxPQUFPLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTLE1BQU0sTUFBTSxRQUFRLE9BQU8sT0FBTyxTQUFTLFVBQVUsT0FBTyxRQUFRLFNBQVMsT0FBTyxRQUFRLFVBQVUsTUFBTSxPQUFPLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxRQUFRLFdBQVcsU0FBUyxRQUFRLFNBQVMsT0FBTyxNQUFNLE9BQU8sU0FBUyxPQUFPLE9BQU8sT0FBTyxNQUFNLE9BQU8sVUFBVSxRQUFRLFNBQVMsT0FBTyxPQUFPLFVBQVUsU0FBUyxPQUFPLFFBQVEsT0FBTyxPQUFPLE9BQU8sU0FBUyxRQUFRLFdBQVcsT0FBTyxRQUFRLE9BQU8sUUFBUSxNQUFNLE9BQU8sUUFBUSxTQUFTLFFBQVEsVUFBVSxTQUFTLE9BQU8sU0FBUyxRQUFRLE9BQU8sVUFBVSxTQUFTLE1BQU0sT0FBTyxPQUFPLFdBQVcsT0FBTyxTQUFTLE1BQU0sVUFBVSxVQUFVLFFBQVEsVUFBVSxVQUFVLFNBQVMsU0FBUyxTQUFTLFVBQVUsVUFBVSxPQUFPLFVBQVUsU0FBUyxXQUFXLFFBQVEsV0FBVyxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsU0FBUyxVQUFVLFVBQVUsU0FBUyxTQUFTLFNBQVMsUUFBUSxXQUFXLFFBQVEsVUFBVSxTQUFTLFNBQVMsU0FBUyxVQUFVLFVBQVUsU0FBUyxXQUFXLE9BQU8sU0FBUyxTQUFTLFVBQVUsT0FBTyxTQUFTLFVBQVUsUUFBUSxPQUFPLFFBQVEsU0FBUyxTQUFTLE1BQU0sT0FBTyxVQUFVLFFBQVEsUUFBUSxRQUFRLE1BQU0sT0FBTyxPQUFPLFVBQVUsTUFBTSxRQUFRLFFBQVEsT0FBTyxTQUFTLFNBQVMsT0FBTyxPQUFPLFdBQVcsT0FBTyxPQUFPLFVBQVUsTUFBTSxPQUFPLE1BQU0sU0FBUyxPQUFPLFVBQVUsT0FBTyxNQUFNLFVBQVUsT0FBTyxTQUFTLE9BQU8sT0FBTyxRQUFRLFFBQVEsT0FBTyxNQUFNLFFBQVEsUUFBUSxTQUFTLE9BQU8sT0FBTyxPQUFPLFdBQVcsU0FBUyxRQUFRLFFBQVEsUUFBUSxRQUFRLFVBQVUsT0FBTyxNQUFNLE9BQU8sVUFBVSxRQUFRLE9BQU8sU0FBUyxPQUFPLFFBQVEsUUFBUSxVQUFVLE9BQU8sTUFBTSxRQUFRLFNBQVMsVUFBVSxRQUFRLE9BQU8sU0FBUyxPQUFPLFVBQVUsU0FBUyxTQUFTLFFBQVEsT0FBTyxVQUFVLFVBQVUsVUFBVSxPQUFPLE9BQU8sUUFBUSxPQUFPLE9BQU8sUUFBUSxPQUFPLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sT0FBTyxVQUFVLFFBQVEsT0FBTyxRQUFRLFNBQVMsT0FBTyxPQUFPLFVBQVUsT0FBTyxTQUFTLE9BQU8sUUFBUSxRQUFRLFVBQVUsU0FBUyxRQUFRLFFBQVEsU0FBUyxTQUFTLFVBQVUsTUFBTSxRQUFRLFNBQVMsT0FBTyxPQUFPLE9BQU8sUUFBUSxPQUFPLFNBQVMsTUFBTSxTQUFTLFVBQVUsUUFBUSxVQUFVLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsV0FBVyxPQUFPLE9BQU8sU0FBUyxRQUFRLFdBQVcsT0FBTyxTQUFTLFNBQVMsVUFBVSxPQUFPLFNBQVMsT0FBTyxVQUFVLE9BQU8sV0FBVyxRQUFRLFFBQVEsU0FBUyxPQUFPLFNBQVMsU0FBUyxVQUFVLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxPQUFPLFVBQVUsUUFBUSxTQUFTLFNBQVMsV0FBVyxPQUFPLFVBQVUsUUFBUSxPQUFPLFVBQVUsUUFBUSxTQUFTLFVBQVUsU0FBUyxTQUFTLE9BQU8sVUFBVSxNQUFNLFFBQVEsVUFBVSxTQUFTLFFBQVEsU0FBUyxNQUFNLFNBQVMsVUFBVSxTQUFTLFVBQVUsUUFBUSxPQUFPLFFBQVEsT0FBTyxVQUFVLFdBQVcsU0FBUyxTQUFTLFFBQVEsV0FBVyxRQUFRLE9BQU8sUUFBUSxPQUFPLFNBQVMsT0FBTyxXQUFXLFNBQVMsU0FBUyxXQUFXLFFBQVEsT0FBTyxTQUFTLFNBQVMsVUFBVSxPQUFPLFFBQVEsT0FBTyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsT0FBTyxPQUFPLE9BQU8sV0FBVyxVQUFVLFVBQVUsU0FBUyxRQUFRLE9BQU8sTUFBTSxVQUFVLFVBQVUsUUFBUSxPQUFPLE9BQU8sT0FBTyxRQUFRLFFBQVEsUUFBUSxVQUFVLFNBQVMsU0FBUyxRQUFRLE9BQU8sVUFBVSxPQUFPLFVBQVUsU0FBUyxRQUFRLE1BQU0sVUFBVSxTQUFTLFFBQVEsTUFBTSxNQUFNLE9BQU8sU0FBUyxTQUFTLFVBQVUsVUFBVSxTQUFTLFVBQVUsUUFBUSxRQUFRLFVBQVUsT0FBTyxNQUFNLFFBQVEsU0FBUyxRQUFRLE1BQU0sT0FBTyxNQUFNLFFBQVEsVUFBVSxPQUFPLE9BQU8sTUFBTSxRQUFRLFNBQVMsT0FBTyxPQUFPLFFBQVEsVUFBVSxTQUFTLFNBQVMsU0FBUyxRQUFRLFVBQVUsUUFBUSxXQUFXLFFBQVEsU0FBUyxXQUFXLFNBQVMsVUFBVSxRQUFRLFVBQVUsUUFBUSxTQUFTLFVBQVUsT0FBTyxPQUFPLE9BQU8sTUFBTSxRQUFRLFNBQVMsU0FBUyxRQUFRLE9BQU8sU0FBUyxPQUFPLE9BQU8sU0FBUyxPQUFPLFFBQVEsUUFBUSxRQUFRLFVBQVUsUUFBUSxTQUFTLFNBQVMsT0FBTyxTQUFTLFFBQVEsT0FBTyxRQUFRLE9BQU8sVUFBVSxTQUFTLFVBQVUsUUFBUSxPQUFPLFVBQVUsUUFBUSxTQUFTLE9BQU8sVUFBVSxVQUFVLE1BQU0sVUFBVSxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsU0FBUyxNQUFNLFFBQVEsUUFBUSxTQUFTLFdBQVcsUUFBUSxTQUFTLFVBQVUsUUFBUSxNQUFNLFNBQVMsT0FBTyxRQUFRLE9BQU8sVUFBVSxPQUFPLFNBQVMsUUFBUSxRQUFRLFFBQVEsU0FBUyxVQUFVLFFBQVEsT0FBTyxTQUFTLFNBQVMsUUFBUSxPQUFPLFNBQVMsT0FBTyxPQUFPLFFBQVEsUUFBUSxPQUFPLFNBQVMsT0FBTyxPQUFPLE9BQU8sVUFBVSxVQUFVLFdBQVcsV0FBVyxPQUFPLFNBQVMsVUFBVSxVQUFVLFNBQVMsUUFBUSxXQUFXLFNBQVMsVUFBVSxTQUFTLFVBQVUsVUFBVSxTQUFTLFVBQVUsUUFBUSxRQUFRLFVBQVUsUUFBUSxXQUFXLFNBQVMsVUFBVSxRQUFRLFVBQVUsVUFBVSxVQUFVLFNBQVMsVUFBVSxVQUFVLFVBQVUsUUFBUSxXQUFXLFVBQVUsVUFBVSxRQUFRLFVBQVUsU0FBUyxVQUFVLE9BQU8sT0FBTyxRQUFRLFVBQVUsUUFBUSxRQUFRLFFBQVEsV0FBVyxTQUFTLFVBQVUsUUFBUSxPQUFPLE1BQU0sU0FBUyxVQUFVLFVBQVUsVUFBVSxVQUFVLFdBQVcsUUFBUSxPQUFPLE9BQU8sUUFBUSxTQUFTLFVBQVUsT0FBTyxPQUFPLFFBQVEsUUFBUSxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sUUFBUSxTQUFTLFFBQVEsUUFBUSxPQUFPLE9BQU8sU0FBUyxRQUFRLE1BQU0sUUFBUSxRQUFRLE9BQU8sU0FBUyxRQUFRLFVBQVUsU0FBUyxVQUFVLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxRQUFRLFVBQVUsU0FBUyxPQUFPLFNBQVMsV0FBVyxTQUFTLFNBQVMsU0FBUyxRQUFRLE9BQU8sU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxXQUFXLFNBQVMsV0FBVyxXQUFXLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLE1BQU0sU0FBUyxPQUFPLE9BQU8sT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFFBQVEsT0FBTyxRQUFRLFFBQVEsU0FBUyxTQUFTLFVBQVUsT0FBTyxTQUFTLE9BQU8sT0FBTyxTQUFTLFFBQVEsUUFBUSxRQUFRLFFBQVEsU0FBUyxPQUFPLE1BQU0sT0FBTyxNQUFNLFNBQVMsUUFBUSxNQUFNLFNBQVMsVUFBVSxPQUFPLE9BQU8sUUFBUSxTQUFTLFFBQVEsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFVBQVUsVUFBVSxRQUFRLFVBQVUsT0FBTyxNQUFNLFFBQVEsT0FBTyxRQUFRLFVBQVUsUUFBUSxTQUFTLFNBQVMsVUFBVSxXQUFXLFdBQVcsUUFBUSxRQUFRLFNBQVMsU0FBUyxRQUFRLE1BQU0sU0FBUyxTQUFTLE9BQU8sU0FBUyxTQUFTLFVBQVUsV0FBVyxPQUFPLE9BQU8sVUFBVSxTQUFTLE9BQU8sVUFBVSxTQUFTLFFBQVEsV0FBVyxTQUFTLFVBQVUsVUFBVSxTQUFTLFFBQVEsUUFBUSxTQUFTLFFBQVEsVUFBVSxRQUFRLE9BQU8sUUFBUSxVQUFVLFNBQVMsUUFBUSxRQUFRLE9BQU8sU0FBUyxRQUFRLE9BQU8sUUFBUSxPQUFPLFFBQVEsV0FBVyxRQUFRLFNBQVMsUUFBUSxVQUFVLE1BQU0sVUFBVSxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sU0FBUyxPQUFPLFFBQVEsU0FBUyxVQUFVLFNBQVMsUUFBUSxPQUFPLFFBQVEsU0FBUyxVQUFVLE1BQU0sT0FBTyxRQUFRLFNBQVMsTUFBTSxRQUFRLE9BQU8sUUFBUSxRQUFRLE9BQU8sT0FBTyxRQUFRLFVBQVUsUUFBUSxRQUFRLFNBQVMsT0FBTyxTQUFTLE9BQU8sT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsU0FBUyxRQUFRLFFBQVEsT0FBTyxRQUFRLE9BQU8sT0FBTyxTQUFTLFNBQVMsT0FBTyxPQUFPLE9BQU8sUUFBUSxVQUFVLFFBQVEsV0FBVyxRQUFRLFVBQVUsT0FBTyxPQUFPLFFBQVEsT0FBTyxPQUFPLFFBQVEsT0FBTyxTQUFTLFFBQVEsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxPQUFPLFNBQVMsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLE9BQU8sUUFBUSxTQUFTLFNBQVMsTUFBTSxTQUFTLFVBQVUsV0FBVyxTQUFTLFVBQVUsUUFBUSxRQUFRLFNBQVMsUUFBUSxRQUFRLFFBQVEsUUFBUSxPQUFPLFFBQVEsUUFBUSxPQUFPLE9BQU8sU0FBUyxRQUFRLFFBQVEsUUFBUSxRQUFRLFVBQVUsUUFBUSxRQUFRLFFBQVEsUUFBUSxXQUFXLFNBQVMsU0FBUyxTQUFTLFdBQVcsVUFBVSxRQUFRLFVBQVUsUUFBUSxVQUFVLFNBQVMsU0FBUyxVQUFVLE9BQU8sU0FBUyxTQUFTLFFBQVEsVUFBVSxPQUFPLFNBQVMsTUFBTSxRQUFRLFNBQVMsUUFBUSxTQUFTLFVBQVUsT0FBTyxVQUFVLFFBQVEsV0FBVyxXQUFXLFNBQVMsVUFBVSxVQUFVLFVBQVUsUUFBUSxPQUFPLFFBQVEsUUFBUSxRQUFRLFFBQVEsT0FBTyxRQUFRLFNBQVMsUUFBUSxTQUFTLFVBQVUsUUFBUSxTQUFTLFFBQVEsU0FBUyxNQUFNLE9BQU8sU0FBUyxPQUFPLE9BQU8sT0FBTyxTQUFTLE9BQU8sUUFBUSxTQUFTLE9BQU8sUUFBUSxPQUFPLE9BQU8sTUFBTSxTQUFTLFNBQVMsT0FBTyxPQUFPLE9BQU8sT0FBTyxRQUFRLE9BQU8sUUFBUSxPQUFPLFNBQVMsUUFBUSxPQUFPLFFBQVEsT0FBTyxVQUFVLFFBQVEsU0FBUyxRQUFRLFFBQVEsVUFBVSxTQUFTLE9BQU8sUUFBUSxPQUFPLFNBQVMsT0FBTyxPQUFPLE1BQU0sUUFBUSxTQUFTLFFBQVEsUUFBUSxVQUFVLFFBQVEsVUFBVSxNQUFNLFdBQVcsU0FBUyxRQUFRLFNBQVMsV0FBVyxPQUFPLFNBQVMsVUFBVSxPQUFPLFFBQVEsTUFBTSxRQUFRLFNBQVMsUUFBUSxVQUFVLFdBQVcsT0FBTyxRQUFRLFVBQVUsU0FBUyxRQUFRLE9BQU8sTUFBTSxRQUFRLFFBQVEsVUFBVSxTQUFTLFFBQVEsV0FBVyxPQUFPLFFBQVEsU0FBUyxPQUFPLFFBQVEsT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLFVBQVUsT0FBTyxPQUFPLFNBQVMsVUFBVSxRQUFRLE9BQU8sUUFBUSxVQUFVLFFBQVEsUUFBUSxNQUFNLE9BQU8sVUFBVSxTQUFTLE9BQU8sU0FBUyxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxPQUFPLFFBQVEsTUFBTSxPQUFPLFVBQVUsT0FBTyxXQUFXLFNBQVMsVUFBVSxRQUFRLFVBQVUsUUFBUSxPQUFPLFNBQVMsU0FBUyxVQUFVLFVBQVUsU0FBUyxPQUFPLFdBQVcsVUFBVSxTQUFTLFFBQVEsVUFBVSxTQUFTLFNBQVMsVUFBVSxTQUFTLE9BQU8sUUFBUSxRQUFRLFFBQVEsT0FBTyxRQUFRLE1BQU0sT0FBTyxTQUFTLFVBQVUsUUFBUSxVQUFVLFNBQVMsU0FBUyxRQUFRLFFBQVEsU0FBUyxRQUFRLE1BQU0sU0FBUyxRQUFRLFVBQVUsT0FBTyxRQUFRLFVBQVUsU0FBUyxTQUFTLFVBQVUsUUFBUSxPQUFPLFNBQVMsVUFBVSxPQUFPLFNBQVMsVUFBVSxTQUFTLFVBQVUsVUFBVSxVQUFVLFFBQVEsT0FBTyxVQUFVLFVBQVUsU0FBUyxVQUFVLFFBQVEsT0FBTyxRQUFRLFNBQVMsUUFBUSxRQUFRLFFBQVEsUUFBUSxPQUFPLFVBQVUsU0FBUyxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sT0FBTyxPQUFPLFNBQVMsT0FBTyxVQUFVLE9BQU8sVUFBVSxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sTUFBTSxTQUFTLFNBQVMsT0FBTyxTQUFTLFVBQVUsTUFBTSxVQUFVLFVBQVUsUUFBUSxVQUFVLE9BQU8sTUFBTSxRQUFRLE9BQU8sUUFBUSxRQUFRLE9BQU8sUUFBUSxPQUFPLFVBQVUsT0FBTyxRQUFRLE9BQU8sT0FBTyxPQUFPLE1BQU0sU0FBUyxPQUFPLE9BQU8sT0FBTyxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sT0FBTyxVQUFVLE9BQU8sUUFBUSxTQUFTLE9BQU8sT0FBTyxPQUFPLE9B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QUcsSUFBSUgsRUFBRUcsR0FBRyxHQUFHLElBQUlILEVBQUVHLEdBQUcsR0FBRyxJQUFJSCxFQUFFRyxHQUFHLEdBQUcsSUFBSUgsRUFBRUcsR0FBRyxFQUFFLElBQUlILEVBQUVHLEdBQUcsRUFBRSxJQUFJSCxFQUFFLEdBQUdHLEdBQUdILEVBQUVnRCxHQUFHLEdBQUcsSUFBSWhELEVBQUVnRCxHQUFHLEdBQUcsSUFBSWhELEVBQUVnRCxHQUFHLEdBQUcsSUFBSWhELEVBQUVnRCxHQUFHLEdBQUcsSUFBSWhELEVBQUVnRCxHQUFHLEdBQUcsSUFBSWhELEVBQUVnRCxHQUFHLEVBQUUsSUFBSWhELEVBQUVnRCxHQUFHLEVBQUUsSUFBSWhELEVBQUUsR0FBR2dELEdBQUdoRCxFQUFFcUQsR0FBRyxHQUFHLElBQUlyRCxFQUFFcUQsR0FBRyxHQUFHLElBQUlyRCxFQUFFcUQsR0FBRyxHQUFHLElBQUlyRCxFQUFFcUQsR0FBRyxHQUFHLElBQUlyRCxFQUFFcUQsR0FBRyxHQUFHLElBQUlyRCxFQUFFcUQsR0FBRyxFQUFFLElBQUlyRCxFQUFFcUQsR0FBRyxFQUFFLElBQUlyRCxFQUFFLEdBQUdxRCxHQUFHckQsRUFBRWtCLEdBQUcsR0FBRyxJQUFJbEIsRUFBRWtCLEdBQUcsR0FBRyxJQUFJbEIsRUFBRWtCLEdBQUcsR0FBRyxJQUFJbEIsRUFBRWtCLEdBQUcsR0FBRyxJQUFJbEIsRUFBRWtCLEdBQUcsR0FBRyxJQUFJbEIsRUFBRWtCLEdBQUcsRUFBRSxJQUFJbEIsRUFBRWtCLEdBQUcsRUFBRSxJQUFJbEIsRUFBRSxHQUFHa0IsSUFBSSxLQUFLaEIsSUFBSTRCLEdBQUc5QixFQUFFNEIsR0FBRyxHQUFHLElBQUk1QixFQUFFNEIsR0FBRyxHQUFHLElBQUk1QixFQUFFNEIsR0FBRyxHQUFHLElBQUk1QixFQUFFNEIsR0FBRyxHQUFHLElBQUk1QixFQUFFNEIsR0FBRyxHQUFHLElBQUk1QixFQUFFNEIsR0FBRyxFQUFFLElBQUk1QixFQUFFNEIsR0FBRyxFQUFFLElBQUk1QixFQUFFLEdBQUc0QixHQUFH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QUFJRixFQUFFSCxFQUFFLEdBQUdLLEdBQUcsR0FBRyxJQUFJRixFQUFFSCxFQUFFLEdBQUdLLEdBQUcsRUFBRSxJQUFJRixFQUFFSCxFQUFFLEdBQUcsSUFBSUssRUFBRUYsRUFBRUgsRUFBRSxHQUFHTSxHQUFHLEdBQUcsSUFBSUgsRUFBRUgsRUFBRSxHQUFHTSxHQUFHLEdBQUcsSUFBSUgsRUFBRUgsRUFBRSxHQUFHTSxHQUFHLEVBQUUsSUFBSUgsRUFBRUgsRUFBRSxHQUFHLElBQUlNLENBQUMsQ0FBQyxTQUFTTyxFQUFFVixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFQyxHQUFHLElBQUlxQixFQUFFcEIsRUFBRSxFQUFFLElBQUlvQixFQUFFLEVBQUVBLEVBQUVyQixFQUFFcUIsSUFBSXBCLEdBQUdMLEVBQUVILEVBQUU0QixHQUFHdkIsRUFBRUMsRUFBRXNCLEdBQUcsT0FBTyxFQUFFcEIsRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLFNBQVNnRSxFQUFFckUsRUFBRUgsRUFBRUssRUFBRUMsR0FBRyxPQUFPTyxFQUFFVixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLEdBQUcsQ0FBQyxTQUFTZ0MsRUFBRW5DLEVBQUVILEVBQUVLLEVBQUVDLEdBQUcsT0FBT08sRUFBRVYsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxHQUFHLENBQUMsU0FBU0ssRUFBRVIsRUFBRUgsRUFBRUssRUFBRUMsSUFBSSxTQUFTSCxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLElBQUksSUFBSUMsRUFBRXFCLEVBQUUsSUFBSXRCLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBR0UsRUFBRSxJQUFJSCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdtRCxFQUFFLElBQUluRCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdPLEVBQUUsSUFBSVAsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHb0QsRUFBRSxJQUFJcEQsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHSSxFQUFFLElBQUlILEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBR3dELEVBQUUsSUFBSTlELEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRzJCLEVBQUUsSUFBSTNCLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLEtBQUssSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBR3FDLEVBQUUsSUFBSXJDLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR2EsRUFBRSxJQUFJYixFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUd3RSxFQUFFLElBQUlsRSxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdnQyxFQUFFLElBQUlqQyxFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdNLEVBQUUsSUFBSU4sRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHa0MsRUFBRSxJQUFJbEMsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHb0MsRUFBRSxJQUFJcEMsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHbUMsRUFBRSxJQUFJbEMsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHb0MsRUFBRWQsRUFBRTZELEVBQUVqRixFQUFFNEIsRUFBRW9CLEVBQUUwQyxFQUFFdEYsRUFBRTBGLEVBQUU3QyxFQUFFdEIsRUFBRTFCLEVBQUVvSixFQUFFL0YsRUFBRWpDLEVBQUVGLEVBQUVtSSxFQUFFekgsRUFBRTRILEVBQUVwSixFQUFFOEosRUFBRW5HLEVBQUUwRyxFQUFFNUksRUFBRWtKLEVBQUU3SyxFQUFFOEssRUFBRWxKLEVBQUVvSixFQUFFbEosRUFBRW1KLEVBQUVwSixFQUFFcUosRUFBRSxFQUFFQSxFQUFFLEdBQUdBLEdBQUcsRUFBRW5KLElBQUluQyxHQUFHaUwsSUFBSWpMLEdBQUd1SixJQUFJdkosR0FBRytGLElBQUkvRixFQUFFbUMsRUFBRThJLEVBQUUsSUFBSSxFQUFFakwsSUFBSSxJQUFJbUMsRUFBRSxJQUFJLEVBQUVuQyxJQUFJLElBQUkrRixFQUFFLElBQUksR0FBRy9GLElBQUksSUFBSXVKLEVBQUUsSUFBSSxHQUFHdkosSUFBSSxHQUFHNEIsSUFBSTVCLEdBQUdrRixJQUFJbEYsR0FBR2tMLElBQUlsTCxHQUFHMEosSUFBSTFKLEVBQUU0QixFQUFFc0QsRUFBRSxJQUFJLEVBQUVsRixJQUFJLElBQUk0QixFQUFFLElBQUksRUFBRTVCLElBQUksSUFBSTBKLEVBQUUsSUFBSSxHQUFHMUosSUFBSSxJQUFJa0wsRUFBRSxJQUFJLEdBQUdsTCxJQUFJLEdBQUdvSyxJQUFJcEssR0FBR3NKLElBQUl0SixHQUFHNkIsSUFBSTdCLEdBQUdvTCxJQUFJcEwsRUFBRW9LLEVBQUVkLEVBQUUsSUFBSSxFQUFFdEosSUFBSSxJQUFJb0ssRUFBRSxJQUFJLEVBQUVwSyxJQUFJLElBQUlvTCxFQUFFLElBQUksR0FBR3BMLElBQUksSUFBSTZCLEVBQUUsSUFBSSxHQUFHN0IsSUFBSSxHQUFHcUwsSUFBSXJMLEdBQUcySyxJQUFJM0ssR0FBR3NCLElBQUl0QixHQUFHMkYsSUFBSTNGLEVBQUVxTCxFQUFFVixFQUFFLElBQUksRUFBRTNLLElBQUksSUFBSXFMLEVBQUUsSUFBSSxFQUFFckwsSUFBSSxJQUFJMkYsRUFBRSxJQUFJLEdBQUczRixJQUFJLElBQUlzQixFQUFFLElBQUksR0FBR3RCLElBQUksR0FBR21DLElBQUluQyxHQUFHMkYsSUFBSTNGLEdBQUc2QixJQUFJN0IsR0FBR2tGLElBQUlsRixFQUFFbUMsRUFBRXdELEVBQUUsSUFBSSxFQUFFM0YsSUFBSSxJQUFJbUMsRUFBRSxJQUFJLEVBQUVuQyxJQUFJLElBQUlrRixFQUFFLElBQUksR0FBR2xGLElBQUksSUFBSTZCLEVBQUUsSUFBSSxHQUFHN0IsSUFBSSxHQUFHNEIsSUFBSTVCLEdBQUcrRixJQUFJL0YsR0FBR3NCLElBQUl0QixHQUFHc0osSUFBSXRKLEVBQUU0QixFQUFFbUUsRUFBRSxJQUFJLEVBQUUvRixJQUFJLElBQUk0QixFQUFFLElBQUksRUFBRTVCLElBQUksSUFBSXNKLEVBQUUsSUFBSSxHQUFHdEosSUFBSSxJQUFJc0IsRUFBRSxJQUFJLEdBQUd0QixJQUFJLEdBQUdvSyxJQUFJcEssR0FBRzBKLElBQUkxSixHQUFHdUosSUFBSXZKLEdBQUcySyxJQUFJM0ssRUFBRW9LLEVBQUVWLEVBQUUsSUFBSSxFQUFFMUosSUFBSSxJQUFJb0ssRUFBRSxJQUFJLEVBQUVwSyxJQUFJLElBQUkySyxFQUFFLElBQUksR0FBRzNLLElBQUksSUFBSXVKLEVBQUUsSUFBSSxHQUFHdkosSUFBSSxHQUFHcUwsSUFBSXJMLEdBQUdvTCxJQUFJcEwsR0FBR2tMLElBQUlsTCxHQUFHaUwsSUFBSWpMLEVBQUVxTCxFQUFFRCxFQUFFLElBQUksRUFBRXBMLElBQUksSUFBSXFMLEVBQUUsSUFBSSxFQUFFckwsSUFBSSxJQUFJaUwsRUFBRSxJQUFJLEdBQUdqTCxJQUFJLElBQUlrTCxFQUFFLElBQUksR0FBR2xMLElBQUksR0FBR21DLEVBQUVBLEVBQUVkLEVBQUUsRUFBRTZELEVBQUVBLEVBQUVqRixFQUFFLEVBQUU0QixFQUFFQSxFQUFFb0IsRUFBRSxFQUFFMEMsRUFBRUEsRUFBRXRGLEVBQUUsRUFBRTBGLEVBQUVBLEVBQUU3QyxFQUFFLEVBQUV0QixFQUFFQSxFQUFFMUIsRUFBRSxFQUFFb0osRUFBRUEsRUFBRS9GLEVBQUUsRUFBRWpDLEVBQUVBLEVBQUVGLEVBQUUsRUFBRW1JLEVBQUVBLEVBQUV6SCxFQUFFLEVBQUU0SCxFQUFFQSxFQUFFcEosRUFBRSxFQUFFOEosRUFBRUEsRUFBRW5HLEVBQUUsRUFBRTBHLEVBQUVBLEVBQUU1SSxFQUFFLEVBQUVrSixFQUFFQSxFQUFFN0ssRUFBRSxFQUFFOEssRUFBRUEsRUFBRWxKLEVBQUUsRUFBRW9KLEVBQUVBLEVBQUVsSixFQUFFLEVBQUVtSixFQUFFQSxFQUFFcEosRUFBRSxFQUFFckMsRUFBRSxHQUFHdUMsSUFBSSxFQUFFLElBQUl2QyxFQUFFLEdBQUd1QyxJQUFJLEVBQUUsSUFBSXZDLEVBQUUsR0FBR3VDLElBQUksR0FBRyxJQUFJdkMsRUFBRSxHQUFHdUMsSUFBSSxHQUFHLElBQUl2QyxFQUFFLEdBQUdzRixJQUFJLEVBQUUsSUFBSXRGLEVBQUUsR0FBR3NGLElBQUksRUFBRSxJQUFJdEYsRUFBRSxHQUFHc0YsSUFBSSxHQUFHLElBQUl0RixFQUFFLEdBQUdzRixJQUFJLEdBQUcsSUFBSXRGLEVBQUUsR0FBR2lDLElBQUksRUFBRSxJQUFJakMsRUFBRSxHQUFHaUMsSUFBSSxFQUFFLElBQUlqQyxFQUFFLElBQUlpQyxJQUFJLEdBQUcsSUFBSWpDLEVBQUUsSUFBSWlDLElBQUksR0FBRyxJQUFJakMsRUFBRSxJQUFJK0YsSUFBSSxFQUFFLElBQUkvRixFQUFFLElBQUkrRixJQUFJLEVBQUUsSUFBSS9GLEVBQUUsSUFBSStGLElBQUksR0FBRyxJQUFJL0YsRUFBRSxJQUFJK0YsSUFBSSxHQUFHLElBQUkvRixFQUFFLElBQUltRyxJQUFJLEVBQUUsSUFBSW5HLEVBQUUsSUFBSW1HLElBQUksRUFBRSxJQUFJbkcsRUFBRSxJQUFJbUcsSUFBSSxHQUFHLElBQUluRyxFQUFFLElBQUltRyxJQUFJLEdBQUcsSUFBSW5HLEVBQUUsSUFBSWdDLElBQUksRUFBRSxJQUFJaEMsRUFBRSxJQUFJZ0MsSUFBSSxFQUFFLElBQUloQyxFQUFFLElBQUlnQyxJQUFJLEdBQUcsSUFBSWhDLEVBQUUsSUFBSWdDLElBQUksR0FBRyxJQUFJaEMsRUFBRSxJQUFJMEosSUFBSSxFQUFFLElBQUkxSixFQUFFLElBQUkwSixJQUFJLEVBQUUsSUFBSTFKLEVBQUUsSUFBSTBKLElBQUksR0FBRyxJQUFJMUosRUFBRSxJQUFJMEosSUFBSSxHQUFHLElBQUkxSixFQUFFLElBQUkwQixJQUFJLEVBQUUsSUFBSTFCLEVBQUUsSUFBSTBCLElBQUksRUFBRSxJQUFJMUIsRUFBRSxJQUFJMEIsSUFBSSxHQUFHLElBQUkxQixFQUFFLElBQUkwQixJQUFJLEdBQUcsSUFBSTFCLEVBQUUsSUFBSTJKLElBQUksRUFBRSxJQUFJM0osRUFBRSxJQUFJMkosSUFBSSxFQUFFLElBQUkzSixFQUFFLElBQUkySixJQUFJLEdBQUcsSUFBSTNKLEVBQUUsSUFBSTJKLElBQUksR0FBRyxJQUFJM0osRUFBRSxJQUFJOEosSUFBSSxFQUFFLElBQUk5SixFQUFFLElBQUk4SixJQUFJLEVBQUUsSUFBSTlKLEVBQUUsSUFBSThKLElBQUksR0FBRyxJQUFJOUosRUFBRSxJQUFJOEosSUFBSSxHQUFHLElBQUk5SixFQUFFLElBQUl3SyxJQUFJLEVBQUUsSUFBSXhLLEVBQUUsSUFBSXdLLElBQUksRUFBRSxJQUFJeEssRUFBRSxJQUFJd0ssSUFBSSxHQUFHLElBQUl4SyxFQUFFLElBQUl3SyxJQUFJLEdBQUcsSUFBSXhLLEVBQUUsSUFBSStLLElBQUksRUFBRSxJQUFJL0ssRUFBRSxJQUFJK0ssSUFBSSxFQUFFLElBQUkvSyxFQUFFLElBQUkrSyxJQUFJLEdBQUcsSUFBSS9LLEVBQUUsSUFBSStLLElBQUksR0FBRyxJQUFJL0ssRUFBRSxJQUFJcUwsSUFBSSxFQUFFLElBQUlyTCxFQUFFLElBQUlxTCxJQUFJLEVBQUUsSUFBSXJMLEVBQUUsSUFBSXFMLElBQUksR0FBRyxJQUFJckwsRUFBRSxJQUFJcUwsSUFBSSxHQUFHLElBQUlyTCxFQUFFLElBQUlzTCxJQUFJLEVBQUUsSUFBSXRMLEVBQUUsSUFBSXNMLElBQUksRUFBRSxJQUFJdEwsRUFBRSxJQUFJc0wsSUFBSSxHQUFHLElBQUl0TCxFQUFFLElBQUlzTCxJQUFJLEdBQUcsSUFBSXRMLEVBQUUsSUFBSXdMLElBQUksRUFBRSxJQUFJeEwsRUFBRSxJQUFJd0wsSUFBSSxFQUFFLElBQUl4TCxFQUFFLElBQUl3TCxJQUFJLEdBQUcsSUFBSXhMLEVBQUUsSUFBSXdMLElBQUksR0FBRyxJQUFJeEwsRUFBRSxJQUFJeUwsSUFBSSxFQUFFLElBQUl6TCxFQUFFLElBQUl5TCxJQUFJLEVBQUUsSUFBSXpMLEVBQUUsSUFBSXlMLElBQUksR0FBRyxJQUFJekwsRUFBRSxJQUFJeUwsSUFBSSxHQUFHLEdBQUcsQ0FBajRGLENBQW00RnpMLEVBQUVILEVBQUVLLEVBQUVDLEVBQUUsQ0FBQyxTQUFTaUMsRUFBRXBDLEVBQUVILEVBQUVLLEVBQUVDLElBQUksU0FBU0gsRUFBRUgsRUFBRUssRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUVxQixFQUFFLElBQUl0QixFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdFLEVBQUUsSUFBSUgsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHbUQsRUFBRSxJQUFJbkQsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsS0FBSyxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHTyxFQUFFLElBQUlQLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29ELEVBQUUsSUFBSXBELEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR0ksRUFBRSxJQUFJSCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUd3RCxFQUFFLElBQUk5RCxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcyQixFQUFFLElBQUkzQixFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxLQUFLLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUdxQyxFQUFFLElBQUlyQyxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSUEsRUFBRSxNQUFNLElBQUksSUFBSUEsRUFBRSxNQUFNLEdBQUdhLEVBQUUsSUFBSWIsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHd0UsRUFBRSxJQUFJbEUsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHZ0MsRUFBRSxJQUFJakMsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJLElBQUlBLEVBQUUsTUFBTSxHQUFHTSxFQUFFLElBQUlOLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR2tDLEVBQUUsSUFBSWxDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29DLEVBQUUsSUFBSXBDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR21DLEVBQUUsSUFBSWxDLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSSxJQUFJQSxFQUFFLE1BQU0sR0FBR29DLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxHQUFHLEVBQUVkLElBQUlyQixHQUFHSSxJQUFJSixHQUFHOEIsSUFBSTlCLEdBQUdrRCxJQUFJbEQsRUFBRXFCLEVBQUVqQixFQUFFLElBQUksRUFBRUosSUFBSSxJQUFJcUIsRUFBRSxJQUFJLEVBQUVyQixJQUFJLElBQUlrRCxFQUFFLElBQUksR0FBR2xELElBQUksSUFBSThCLEVBQUUsSUFBSSxHQUFHOUIsSUFBSSxHQUFHRSxJQUFJRixHQUFHQyxJQUFJRCxHQUFHZ0MsSUFBSWhDLEdBQUdNLElBQUlOLEVBQUVFLEVBQUVELEVBQUUsSUFBSSxFQUFFRCxJQUFJLElBQUlFLEVBQUUsSUFBSSxFQUFFRixJQUFJLElBQUlNLEVBQUUsSUFBSSxHQUFHTixJQUFJLElBQUlnQyxFQUFFLElBQUksR0FBR2hDLElBQUksR0FBR2lFLElBQUlqRSxHQUFHdUQsSUFBSXZELEdBQUdpRCxJQUFJakQsR0FBR2tDLElBQUlsQyxFQUFFaUUsRUFBRVYsRUFBRSxJQUFJLEVBQUV2RCxJQUFJLElBQUlpRSxFQUFFLElBQUksRUFBRWpFLElBQUksSUFBSWtDLEVBQUUsSUFBSSxHQUFHbEMsSUFBSSxJQUFJaUQsRUFBRSxJQUFJLEdBQUdqRCxJQUFJLEdBQUdpQyxJQUFJakMsR0FBRytCLElBQUkvQixHQUFHb0IsSUFBSXBCLEdBQUdLLElBQUlMLEVBQUVpQyxFQUFFRixFQUFFLElBQUksRUFBRS9CLElBQUksSUFBSWlDLEVBQUUsSUFBSSxFQUFFakMsSUFBSSxJQUFJSyxFQUFFLElBQUksR0FBR0wsSUFBSSxJQUFJb0IsRUFBRSxJQUFJLEdBQUdwQixJQUFJLEdBQUdxQixJQUFJckIsR0FBR0ssSUFBSUwsR0FBR2lELElBQUlqRCxHQUFHQyxJQUFJRCxFQUFFcUIsRUFBRWhCLEVBQUUsSUFBSSxFQUFFTCxJQUFJLElBQUlxQixFQUFFLElBQUksRUFBRXJCLElBQUksSUFBSUMsRUFBRSxJQUFJLEdBQUdELElBQUksSUFBSWlELEVBQUUsSUFBSSxHQUFHakQsSUFBSSxHQUFHRSxJQUFJRixHQUFHa0QsSUFBSWxELEdBQUdvQixJQUFJcEIsR0FBR3VELElBQUl2RCxFQUFFRSxFQUFFZ0QsRUFBRSxJQUFJLEVBQUVsRCxJQUFJLElBQUlFLEVBQUUsSUFBSSxFQUFFRixJQUFJLElBQUl1RCxFQUFFLElBQUksR0FBR3ZELElBQUksSUFBSW9CLEVBQUUsSUFBSSxHQUFHcEIsSUFBSSxHQUFHaUUsSUFBSWpFLEdBQUdNLElBQUlOLEdBQUc4QixJQUFJOUIsR0FBRytCLElBQUkvQixFQUFFaUUsRUFBRTNELEVBQUUsSUFBSSxFQUFFTixJQUFJLElBQUlpRSxFQUFFLElBQUksRUFBRWpFLElBQUksSUFBSStCLEVBQUUsSUFBSSxHQUFHL0IsSUFBSSxJQUFJOEIsRUFBRSxJQUFJLEdBQUc5QixJQUFJLEdBQUdpQyxJQUFJakMsR0FBR2tDLElBQUlsQyxHQUFHZ0MsSUFBSWhDLEdBQUdJLElBQUlKLEVBQUVpQyxFQUFFQyxFQUFFLElBQUksRUFBRWxDLElBQUksSUFBSWlDLEVBQUUsSUFBSSxFQUFFakMsSUFBSSxJQUFJSSxFQUFFLElBQUksR0FBR0osSUFBSSxJQUFJZ0MsRUFBRSxJQUFJLEdBQUdoQyxJQUFJLEdBQUdKLEVBQUUsR0FBR3lCLElBQUksRUFBRSxJQUFJekIsRUFBRSxHQUFHeUIsSUFBSSxFQUFFLElBQUl6QixFQUFFLEdBQUd5QixJQUFJLEdBQUcsSUFBSXpCLEVBQUUsR0FBR3lCLElBQUksR0FBRyxJQUFJekIsRUFBRSxHQUFHTSxJQUFJLEVBQUUsSUFBSU4sRUFBRSxHQUFHTSxJQUFJLEVBQUUsSUFBSU4sRUFBRSxHQUFHTSxJQUFJLEdBQUcsSUFBSU4sRUFBRSxHQUFHTSxJQUFJLEdBQUcsSUFBSU4sRUFBRSxHQUFHcUUsSUFBSSxFQUFFLElBQUlyRSxFQUFFLEdBQUdxRSxJQUFJLEVBQUUsSUFBSXJFLEVBQUUsSUFBSXFFLElBQUksR0FBRyxJQUFJckUsRUFBRSxJQUFJcUUsSUFBSSxHQUFHLElBQUlyRSxFQUFFLElBQUlxQyxJQUFJLEVBQUUsSUFBSXJDLEVBQUUsSUFBSXFDLElBQUksRUFBRSxJQUFJckMsRUFBRSxJQUFJcUMsSUFBSSxHQUFHLElBQUlyQyxFQUFFLElBQUlxQyxJQUFJLEdBQUcsSUFBSXJDLEVBQUUsSUFBSTJELElBQUksRUFBRSxJQUFJM0QsRUFBRSxJQUFJMkQsSUFBSSxFQUFFLElBQUkzRCxFQUFFLElBQUkyRCxJQUFJLEdBQUcsSUFBSTNELEVBQUUsSUFBSTJELElBQUksR0FBRyxJQUFJM0QsRUFBRSxJQUFJd0IsSUFBSSxFQUFFLElBQUl4QixFQUFFLElBQUl3QixJQUFJLEVBQUUsSUFBSXhCLEVBQUUsSUFBSXdCLElBQUksR0FBRyxJQUFJeEIsRUFBRSxJQUFJd0IsSUFBSSxHQUFHLElBQUl4QixFQUFFLElBQUlrQyxJQUFJLEVBQUUsSUFBSWxDLEVBQUUsSUFBSWtDLElBQUksRUFBRSxJQUFJbEMsRUFBRSxJQUFJa0MsSUFBSSxHQUFHLElBQUlsQyxFQUFFLElBQUlrQyxJQUFJLEdBQUcsSUFBSWxDLEVBQUUsSUFBSVUsSUFBSSxFQUFFLElBQUlWLEVBQUUsSUFBSVUsSUFBSSxFQUFFLElBQUlWLEVBQUUsSUFBSVUsSUFBSSxHQUFHLElBQUlWLEVBQUUsSUFBSVUsSUFBSSxHQUFHLEdBQUcsQ0FBanJFLENBQW1yRVYsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxDQUFDLElBQUltQyxFQUFFLElBQUl3QyxXQUFXLENBQUMsSUFBSSxJQUFJLElBQUksR0FBRyxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksSUFBSSxJQUFJLEdBQUcsTUFBTSxTQUFTekMsRUFBRXJDLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixFQUFFcEIsR0FBRyxJQUFJZ0QsRUFBRTVDLEVBQUU2QyxFQUFFLElBQUl3QixXQUFXLElBQUl4RSxFQUFFLElBQUl3RSxXQUFXLElBQUksSUFBSXJFLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJNkMsRUFBRTdDLEdBQUcsRUFBRSxJQUFJQSxFQUFFLEVBQUVBLEVBQUUsRUFBRUEsSUFBSTZDLEVBQUU3QyxHQUFHZ0IsRUFBRWhCLEdBQUcsS0FBS0wsR0FBRyxJQUFJLENBQUMsSUFBSUksRUFBRUYsRUFBRWdELEVBQUVqRCxFQUFFaUMsR0FBRzdCLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJVCxFQUFFSCxFQUFFWSxHQUFHUCxFQUFFQyxFQUFFTSxHQUFHSCxFQUFFRyxHQUFHLElBQUk0QyxFQUFFLEVBQUU1QyxFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSTRDLEVBQUVBLEdBQUcsSUFBSUMsRUFBRTdDLElBQUksRUFBRTZDLEVBQUU3QyxHQUFHLElBQUk0QyxFQUFFQSxLQUFLLEVBQUVqRCxHQUFHLEdBQUdQLEdBQUcsR0FBR00sR0FBRyxFQUFFLENBQUMsR0FBR0MsRUFBRSxFQUFFLElBQUlJLEVBQUVGLEVBQUVnRCxFQUFFakQsRUFBRWlDLEdBQUc3QixFQUFFLEVBQUVBLEVBQUVMLEVBQUVLLElBQUlULEVBQUVILEVBQUVZLEdBQUdQLEVBQUVDLEVBQUVNLEdBQUdILEVBQUVHLEdBQUcsT0FBTyxDQUFDLENBQUMsU0FBUzhCLEVBQUV2QyxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFQyxHQUFHLElBQUlxQixFQUFFcEIsRUFBRWdELEVBQUUsSUFBSXlCLFdBQVcsSUFBSXJFLEVBQUUsSUFBSXFFLFdBQVcsSUFBSSxJQUFJekUsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlnRCxFQUFFaEQsR0FBRyxFQUFFLElBQUlBLEVBQUUsRUFBRUEsRUFBRSxFQUFFQSxJQUFJZ0QsRUFBRWhELEdBQUdGLEVBQUVFLEdBQUcsS0FBS0gsR0FBRyxJQUFJLENBQUMsSUFBSU0sRUFBRUMsRUFBRTRDLEVBQUVqRCxFQUFFa0MsR0FBR2pDLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJTCxFQUFFSCxFQUFFUSxHQUFHSSxFQUFFSixHQUFHLElBQUlvQixFQUFFLEVBQUVwQixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSW9CLEVBQUVBLEdBQUcsSUFBSTRCLEVBQUVoRCxJQUFJLEVBQUVnRCxFQUFFaEQsR0FBRyxJQUFJb0IsRUFBRUEsS0FBSyxFQUFFdkIsR0FBRyxHQUFHTCxHQUFHLEVBQUUsQ0FBQyxHQUFHSyxFQUFFLEVBQUUsSUFBSU0sRUFBRUMsRUFBRTRDLEVBQUVqRCxFQUFFa0MsR0FBR2pDLEVBQUUsRUFBRUEsRUFBRUgsRUFBRUcsSUFBSUwsRUFBRUgsRUFBRVEsR0FBR0ksRUFBRUosR0FBRyxPQUFPLENBQUMsQ0FBQyxTQUFTaUYsRUFBRXRGLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEdBQUcsSUFBSXFCLEVBQUUsSUFBSXFELFdBQVcsSUFBSTFDLEVBQUVYLEVBQUV0QixFQUFFQyxFQUFFa0MsR0FBRyxJQUFJLElBQUlqQyxFQUFFLElBQUl5RSxXQUFXLEdBQUd6QixFQUFFLEVBQUVBLEVBQUUsRUFBRUEsSUFBSWhELEVBQUVnRCxHQUFHbEQsRUFBRWtELEVBQUUsSUFBSSxPQUFPZCxFQUFFdkMsRUFBRUgsRUFBRUssRUFBRUcsRUFBRW9CLEVBQUUsQ0FBQyxTQUFTUSxFQUFFakMsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsRUFBRXFCLEVBQUVwQixHQUFHLElBQUlnRCxFQUFFLElBQUl5QixXQUFXLElBQUkxQyxFQUFFaUIsRUFBRTVCLEVBQUVwQixFQUFFaUMsR0FBRyxJQUFJLElBQUk3QixFQUFFLElBQUlxRSxXQUFXLEdBQUd4QixFQUFFLEVBQUVBLEVBQUUsRUFBRUEsSUFBSTdDLEVBQUU2QyxHQUFHN0IsRUFBRTZCLEVBQUUsSUFBSSxPQUFPakIsRUFBRXJDLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVLLEVBQUU0QyxFQUFFLENBQUMsSUFBSTBDLEVBQUUsU0FBUy9GLEdBQUcsSUFBSUgsRUFBRUssRUFBRUMsRUFBRUMsRUFBRXFCLEVBQUVwQixFQUFFZ0QsRUFBRTVDLEVBQUVzRCxLQUFLaUIsT0FBTyxJQUFJRixXQUFXLElBQUlmLEtBQUs3RCxFQUFFLElBQUkwZixZQUFZLElBQUk3YixLQUFLSixFQUFFLElBQUlpYyxZQUFZLElBQUk3YixLQUFLa3lCLElBQUksSUFBSXJXLFlBQVksR0FBRzdiLEtBQUtteUIsU0FBUyxFQUFFbnlCLEtBQUtveUIsSUFBSSxFQUFFdDJCLEVBQUUsSUFBSUcsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxFQUFFK0QsS0FBSzdELEVBQUUsR0FBRyxLQUFLTCxFQUFFSyxFQUFFLElBQUlGLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssRUFBRStELEtBQUs3RCxFQUFFLEdBQUcsTUFBTUwsSUFBSSxHQUFHSyxHQUFHLEdBQUdDLEVBQUUsSUFBSUgsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxFQUFFK0QsS0FBSzdELEVBQUUsR0FBRyxNQUFNQSxJQUFJLEdBQUdDLEdBQUcsR0FBR0MsRUFBRSxJQUFJSixFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLEVBQUUrRCxLQUFLN0QsRUFBRSxHQUFHLE1BQU1DLElBQUksRUFBRUMsR0FBRyxHQUFHcUIsRUFBRSxJQUFJekIsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxFQUFFK0QsS0FBSzdELEVBQUUsR0FBRyxLQUFLRSxJQUFJLEVBQUVxQixHQUFHLElBQUlzQyxLQUFLN0QsRUFBRSxHQUFHdUIsSUFBSSxFQUFFLEtBQUtwQixFQUFFLElBQUlMLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sRUFBRStELEtBQUs3RCxFQUFFLEdBQUcsTUFBTXVCLElBQUksR0FBR3BCLEdBQUcsR0FBR2dELEVBQUUsSUFBSXJELEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sRUFBRStELEtBQUs3RCxFQUFFLEdBQUcsTUFBTUcsSUFBSSxHQUFHZ0QsR0FBRyxHQUFHNUMsRUFBRSxJQUFJVCxFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEVBQUUrRCxLQUFLN0QsRUFBRSxHQUFHLE1BQU1tRCxJQUFJLEVBQUU1QyxHQUFHLEdBQUdzRCxLQUFLN0QsRUFBRSxHQUFHTyxJQUFJLEVBQUUsSUFBSXNELEtBQUtreUIsSUFBSSxHQUFHLElBQUlqMkIsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxFQUFFK0QsS0FBS2t5QixJQUFJLEdBQUcsSUFBSWoyQixFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEVBQUUrRCxLQUFLa3lCLElBQUksR0FBRyxJQUFJajJCLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sRUFBRStELEtBQUtreUIsSUFBSSxHQUFHLElBQUlqMkIsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxFQUFFK0QsS0FBS2t5QixJQUFJLEdBQUcsSUFBSWoyQixFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLEVBQUUrRCxLQUFLa3lCLElBQUksR0FBRyxJQUFJajJCLEVBQUUsS0FBSyxJQUFJQSxFQUFFLE1BQU0sRUFBRStELEtBQUtreUIsSUFBSSxHQUFHLElBQUlqMkIsRUFBRSxLQUFLLElBQUlBLEVBQUUsTUFBTSxFQUFFK0QsS0FBS2t5QixJQUFJLEdBQUcsSUFBSWoyQixFQUFFLEtBQUssSUFBSUEsRUFBRSxNQUFNLENBQUMsRUFBRSxTQUFTbUcsRUFBRW5HLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixHQUFHLElBQUlwQixFQUFFLElBQUkwRixFQUFFdEUsR0FBRyxPQUFPcEIsRUFBRWdpQixPQUFPbmlCLEVBQUVDLEVBQUVDLEdBQUdDLEVBQUUrMUIsT0FBT3AyQixFQUFFSCxHQUFHLENBQUMsQ0FBQyxTQUFTbUMsRUFBRWhDLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixHQUFHLElBQUlwQixFQUFFLElBQUl5RSxXQUFXLElBQUksT0FBT3FCLEVBQUU5RixFQUFFLEVBQUVILEVBQUVDLEVBQUVDLEVBQUVxQixHQUFHNEMsRUFBRXJFLEVBQUVILEVBQUVRLEVBQUUsRUFBRSxDQUFDLFNBQVNxSixFQUFFMUosRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsR0FBRyxJQUFJcUIsRUFBRSxHQUFHdkIsRUFBRSxHQUFHLE9BQU8sRUFBRSxJQUFJK0IsRUFBRWpDLEVBQUUsRUFBRUgsRUFBRSxFQUFFSyxFQUFFQyxFQUFFQyxHQUFHK0YsRUFBRW5HLEVBQUUsR0FBR0EsRUFBRSxHQUFHRSxFQUFFLEdBQUdGLEdBQUd5QixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSXpCLEVBQUV5QixHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUMsU0FBU0MsRUFBRTFCLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEdBQUcsSUFBSXFCLEVBQUVwQixFQUFFLElBQUl5RSxXQUFXLElBQUksR0FBRzVFLEVBQUUsR0FBRyxPQUFPLEVBQUUsR0FBR29GLEVBQUVqRixFQUFFLEVBQUUsR0FBR0YsRUFBRUMsR0FBRyxJQUFJNEIsRUFBRW5DLEVBQUUsR0FBR0EsRUFBRSxHQUFHSyxFQUFFLEdBQUdHLEdBQUcsT0FBTyxFQUFFLElBQUk0QixFQUFFakMsRUFBRSxFQUFFSCxFQUFFLEVBQUVLLEVBQUVDLEVBQUVDLEdBQUdxQixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSXpCLEVBQUV5QixHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUMsU0FBU2tJLEVBQUUzSixFQUFFSCxHQUFHLElBQUlLLEVBQUUsSUFBSUEsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlGLEVBQUVFLEdBQUcsRUFBRUwsRUFBRUssRUFBRSxDQUFDLFNBQVM0SixFQUFFOUosR0FBRyxJQUFJSCxFQUFFSyxFQUFFQyxFQUFFLEVBQUUsSUFBSU4sRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlLLEVBQUVGLEVBQUVILEdBQUdNLEVBQUUsTUFBTUEsRUFBRStELEtBQUtDLE1BQU1qRSxFQUFFLE9BQU9GLEVBQUVILEdBQUdLLEVBQUUsTUFBTUMsRUFBRUgsRUFBRSxJQUFJRyxFQUFFLEVBQUUsSUFBSUEsRUFBRSxFQUFFLENBQUMsU0FBU3FLLEVBQUV4SyxFQUFFSCxFQUFFSyxHQUFHLElBQUksSUFBSUMsRUFBRUMsSUFBSUYsRUFBRSxHQUFHdUIsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUl0QixFQUFFQyxHQUFHSixFQUFFeUIsR0FBRzVCLEVBQUU0QixJQUFJekIsRUFBRXlCLElBQUl0QixFQUFFTixFQUFFNEIsSUFBSXRCLENBQUMsQ0FBQyxTQUFTNEssRUFBRS9LLEVBQUVFLEdBQUcsSUFBSUMsRUFBRUMsRUFBRXFCLEVBQUVwQixFQUFFUixJQUFJd0QsRUFBRXhELElBQUksSUFBSU0sRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlrRCxFQUFFbEQsR0FBR0QsRUFBRUMsR0FBRyxJQUFJMkosRUFBRXpHLEdBQUd5RyxFQUFFekcsR0FBR3lHLEVBQUV6RyxHQUFHakQsRUFBRSxFQUFFQSxFQUFFLEVBQUVBLElBQUksQ0FBQyxJQUFJQyxFQUFFLEdBQUdnRCxFQUFFLEdBQUcsTUFBTWxELEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJRSxFQUFFRixHQUFHa0QsRUFBRWxELEdBQUcsT0FBT0UsRUFBRUYsRUFBRSxJQUFJLEdBQUcsR0FBR0UsRUFBRUYsRUFBRSxJQUFJLE1BQU1FLEVBQUUsSUFBSWdELEVBQUUsSUFBSSxPQUFPaEQsRUFBRSxLQUFLLEdBQUcsR0FBR29CLEVBQUVwQixFQUFFLEtBQUssR0FBRyxFQUFFQSxFQUFFLEtBQUssTUFBTW1LLEVBQUVuSCxFQUFFaEQsRUFBRSxFQUFFb0IsRUFBRSxDQUFDLElBQUl0QixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUgsRUFBRSxFQUFFRyxHQUFHLElBQUlrRCxFQUFFbEQsR0FBR0gsRUFBRSxFQUFFRyxFQUFFLEdBQUdrRCxFQUFFbEQsSUFBSSxDQUFDLENBQUMsU0FBU2tMLEVBQUVyTCxFQUFFSCxHQUFHLElBQUlLLEVBQUUsSUFBSTRFLFdBQVcsSUFBSTNFLEVBQUUsSUFBSTJFLFdBQVcsSUFBSSxPQUFPaUcsRUFBRTdLLEVBQUVGLEdBQUcrSyxFQUFFNUssRUFBRU4sR0FBR3NDLEVBQUVqQyxFQUFFLEVBQUVDLEVBQUUsRUFBRSxDQUFDLFNBQVNtTCxFQUFFdEwsR0FBRyxJQUFJSCxFQUFFLElBQUlpRixXQUFXLElBQUksT0FBT2lHLEVBQUVsTCxFQUFFRyxHQUFHLEVBQUVILEVBQUUsRUFBRSxDQUFDLFNBQVMyTCxFQUFFeEwsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLElBQUlBLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJRixFQUFFRSxHQUFHTCxFQUFFLEVBQUVLLElBQUlMLEVBQUUsRUFBRUssRUFBRSxJQUFJLEdBQUdGLEVBQUUsS0FBSyxLQUFLLENBQUMsU0FBU3lMLEVBQUV6TCxFQUFFSCxFQUFFSyxHQUFHLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlILEVBQUVHLEdBQUdOLEVBQUVNLEdBQUdELEVBQUVDLEVBQUUsQ0FBQyxTQUFTdUwsRUFBRTFMLEVBQUVILEVBQUVLLEdBQUcsSUFBSSxJQUFJQyxFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUgsRUFBRUcsR0FBR04sRUFBRU0sR0FBR0QsRUFBRUMsRUFBRSxDQUFDLFNBQVMwTCxFQUFFN0wsRUFBRUgsRUFBRUssR0FBRyxJQUFJQyxFQUFFQyxFQUFFcUIsRUFBRSxFQUFFcEIsRUFBRSxFQUFFZ0QsRUFBRSxFQUFFNUMsRUFBRSxFQUFFNkMsRUFBRSxFQUFFaEQsRUFBRSxFQUFFcUQsRUFBRSxFQUFFbkMsRUFBRSxFQUFFVSxFQUFFLEVBQUV4QixFQUFFLEVBQUUyRCxFQUFFLEVBQUVsQyxFQUFFLEVBQUUzQixFQUFFLEVBQUU0QixFQUFFLEVBQUVFLEVBQUUsRUFBRUQsRUFBRSxFQUFFRSxFQUFFLEVBQUUrQyxFQUFFLEVBQUVyRCxFQUFFLEVBQUU4RCxFQUFFLEVBQUVJLEVBQUUsRUFBRW5FLEVBQUUsRUFBRTBILEVBQUUsRUFBRWhJLEVBQUUsRUFBRWlJLEVBQUUsRUFBRUcsRUFBRSxFQUFFVSxFQUFFLEVBQUVPLEVBQUUsRUFBRU0sRUFBRSxFQUFFQyxFQUFFLEVBQUVFLEVBQUUsRUFBRUMsRUFBRXZMLEVBQUUsR0FBR3dMLEVBQUV4TCxFQUFFLEdBQUcyTCxFQUFFM0wsRUFBRSxHQUFHNEwsRUFBRTVMLEVBQUUsR0FBRzZCLEVBQUU3QixFQUFFLEdBQUdrUCxFQUFFbFAsRUFBRSxHQUFHeUIsRUFBRXpCLEVBQUUsR0FBR21QLEVBQUVuUCxFQUFFLEdBQUdvUCxFQUFFcFAsRUFBRSxHQUFHcVAsRUFBRXJQLEVBQUUsR0FBR3NQLEVBQUV0UCxFQUFFLElBQUl1UCxFQUFFdlAsRUFBRSxJQUFJMEIsRUFBRTFCLEVBQUUsSUFBSTJCLEVBQUUzQixFQUFFLElBQUk0QixFQUFFNUIsRUFBRSxJQUFJeVksRUFBRXpZLEVBQUUsSUFBSXVCLElBQUl0QixFQUFFTixFQUFFLElBQUk0TCxFQUFFcEwsR0FBR0YsRUFBRXVMLEVBQUVySSxHQUFHbEQsRUFBRTBMLEVBQUVwTCxHQUFHTixFQUFFMkwsRUFBRXhJLEdBQUduRCxFQUFFNEIsRUFBRXpCLEdBQUdILEVBQUVpUCxFQUFFekwsR0FBR3hELEVBQUV3QixFQUFFSCxHQUFHckIsRUFBRWtQLEVBQUVuTixHQUFHL0IsRUFBRW1QLEVBQUU1TyxHQUFHUCxFQUFFb1AsRUFBRWxMLEdBQUdsRSxFQUFFcVAsRUFBRXJOLEdBQUdoQyxFQUFFc1AsRUFBRWpQLEdBQUdMLEVBQUV5QixFQUFFUSxHQUFHakMsRUFBRTBCLEVBQUVTLEdBQUduQyxFQUFFMkIsRUFBRU8sR0FBR2xDLEVBQUV3WSxFQUFFdFksSUFBSUYsRUFBRU4sRUFBRSxJQUFJNEwsRUFBRXBJLEdBQUdsRCxFQUFFdUwsRUFBRWpMLEdBQUdOLEVBQUUwTCxFQUFFdkksR0FBR25ELEVBQUUyTCxFQUFFeEwsR0FBR0gsRUFBRTRCLEVBQUU0QixHQUFHeEQsRUFBRWlQLEVBQUU1TixHQUFHckIsRUFBRXdCLEVBQUVPLEdBQUcvQixFQUFFa1AsRUFBRTNPLEdBQUdQLEVBQUVtUCxFQUFFakwsR0FBR2xFLEVBQUVvUCxFQUFFcE4sR0FBR2hDLEVBQUVxUCxFQUFFaFAsR0FBR0wsRUFBRXNQLEVBQUVyTixHQUFHakMsRUFBRXlCLEVBQUVVLEdBQUduQyxFQUFFMEIsRUFBRVEsR0FBR2xDLEVBQUUyQixFQUFFUyxHQUFHcEMsRUFBRXdZLEVBQUV0VixJQUFJbEQsRUFBRU4sRUFBRSxJQUFJNEwsRUFBRWhMLEdBQUdOLEVBQUV1TCxFQUFFcEksR0FBR25ELEVBQUUwTCxFQUFFdkwsR0FBR0gsRUFBRTJMLEVBQUVuSSxHQUFHeEQsRUFBRTRCLEVBQUVQLEdBQUdyQixFQUFFaVAsRUFBRWxOLEdBQUcvQixFQUFFd0IsRUFBRWpCLEdBQUdQLEVBQUVrUCxFQUFFaEwsR0FBR2xFLEVBQUVtUCxFQUFFbk4sR0FBR2hDLEVBQUVvUCxFQUFFL08sR0FBR0wsRUFBRXFQLEVBQUVwTixHQUFHakMsRUFBRXNQLEVBQUVuTixHQUFHbkMsRUFBRXlCLEVBQUVTLEdBQUdsQyxFQUFFMEIsRUFBRVUsR0FBR3BDLEVBQUUyQixFQUFFd0QsR0FBR25GLEVBQUV3WSxFQUFFbFksSUFBSU4sRUFBRU4sRUFBRSxJQUFJNEwsRUFBRW5JLEdBQUduRCxFQUFFdUwsRUFBRXBMLEdBQUdILEVBQUUwTCxFQUFFbEksR0FBR3hELEVBQUUyTCxFQUFFdEssR0FBR3JCLEVBQUU0QixFQUFFRyxHQUFHL0IsRUFBRWlQLEVBQUUxTyxHQUFHUCxFQUFFd0IsRUFBRTBDLEdBQUdsRSxFQUFFa1AsRUFBRWxOLEdBQUdoQyxFQUFFbVAsRUFBRTlPLEdBQUdMLEVBQUVvUCxFQUFFbk4sR0FBR2pDLEVBQUVxUCxFQUFFbE4sR0FBR25DLEVBQUVzUCxFQUFFcE4sR0FBR2xDLEVBQUV5QixFQUFFVyxHQUFHcEMsRUFBRTBCLEVBQUV5RCxHQUFHbkYsRUFBRTJCLEVBQUVHLEdBQUc5QixFQUFFd1ksRUFBRXJWLElBQUluRCxFQUFFTixFQUFFLElBQUk0TCxFQUFFbkwsR0FBR0gsRUFBRXVMLEVBQUUvSCxHQUFHeEQsRUFBRTBMLEVBQUVySyxHQUFHckIsRUFBRTJMLEVBQUU1SixHQUFHL0IsRUFBRTRCLEVBQUVyQixHQUFHUCxFQUFFaVAsRUFBRS9LLEdBQUdsRSxFQUFFd0IsRUFBRVEsR0FBR2hDLEVBQUVrUCxFQUFFN08sR0FBR0wsRUFBRW1QLEVBQUVsTixHQUFHakMsRUFBRW9QLEVBQUVqTixHQUFHbkMsRUFBRXFQLEVBQUVuTixHQUFHbEMsRUFBRXNQLEVBQUVsTixHQUFHcEMsRUFBRXlCLEVBQUUwRCxHQUFHbkYsRUFBRTBCLEVBQUVJLEdBQUc5QixFQUFFMkIsRUFBRWlFLEdBQUc1RixFQUFFd1ksRUFBRXJZLElBQUlILEVBQUVOLEVBQUUsSUFBSTRMLEVBQUU5SCxHQUFHeEQsRUFBRXVMLEVBQUVsSyxHQUFHckIsRUFBRTBMLEVBQUUzSixHQUFHL0IsRUFBRTJMLEVBQUVwTCxHQUFHUCxFQUFFNEIsRUFBRXNDLEdBQUdsRSxFQUFFaVAsRUFBRWpOLEdBQUdoQyxFQUFFd0IsRUFBRW5CLEdBQUdMLEVBQUVrUCxFQUFFak4sR0FBR2pDLEVBQUVtUCxFQUFFaE4sR0FBR25DLEVBQUVvUCxFQUFFbE4sR0FBR2xDLEVBQUVxUCxFQUFFak4sR0FBR3BDLEVBQUVzUCxFQUFFbkssR0FBR25GLEVBQUV5QixFQUFFSyxHQUFHOUIsRUFBRTBCLEVBQUVrRSxHQUFHNUYsRUFBRTJCLEVBQUVxRSxHQUFHaEcsRUFBRXdZLEVBQUVoVixJQUFJeEQsRUFBRU4sRUFBRSxJQUFJNEwsRUFBRWpLLEdBQUdyQixFQUFFdUwsRUFBRXhKLEdBQUcvQixFQUFFMEwsRUFBRW5MLEdBQUdQLEVBQUUyTCxFQUFFekgsR0FBR2xFLEVBQUU0QixFQUFFSSxHQUFHaEMsRUFBRWlQLEVBQUU1TyxHQUFHTCxFQUFFd0IsRUFBRVMsR0FBR2pDLEVBQUVrUCxFQUFFL00sR0FBR25DLEVBQUVtUCxFQUFFak4sR0FBR2xDLEVBQUVvUCxFQUFFaE4sR0FBR3BDLEVBQUVxUCxFQUFFbEssR0FBR25GLEVBQUVzUCxFQUFFeE4sR0FBRzlCLEVBQUV5QixFQUFFbUUsR0FBRzVGLEVBQUUwQixFQUFFc0UsR0FBR2hHLEVBQUUyQixFQUFFRSxHQUFHN0IsRUFBRXdZLEVBQUVuWCxJQUFJckIsRUFBRU4sRUFBRSxJQUFJNEwsRUFBRXZKLEdBQUcvQixFQUFFdUwsRUFBRWhMLEdBQUdQLEVBQUUwTCxFQUFFeEgsR0FBR2xFLEVBQUUyTCxFQUFFM0osR0FBR2hDLEVBQUU0QixFQUFFdkIsR0FBR0wsRUFBRWlQLEVBQUVoTixHQUFHakMsRUFBRXdCLEVBQUVXLEdBQUduQyxFQUFFa1AsRUFBRWhOLEdBQUdsQyxFQUFFbVAsRUFBRS9NLEdBQUdwQyxFQUFFb1AsRUFBRWpLLEdBQUduRixFQUFFcVAsRUFBRXZOLEdBQUc5QixFQUFFc1AsRUFBRTFKLEdBQUc1RixFQUFFeUIsRUFBRXVFLEdBQUdoRyxFQUFFMEIsRUFBRUcsR0FBRzdCLEVBQUUyQixFQUFFNEgsR0FBR3ZKLEVBQUV3WSxFQUFFelcsSUFBSS9CLEVBQUVOLEVBQUUsSUFBSTRMLEVBQUUvSyxHQUFHUCxFQUFFdUwsRUFBRXJILEdBQUdsRSxFQUFFMEwsRUFBRTFKLEdBQUdoQyxFQUFFMkwsRUFBRXRMLEdBQUdMLEVBQUU0QixFQUFFSyxHQUFHakMsRUFBRWlQLEVBQUU5TSxHQUFHbkMsRUFBRXdCLEVBQUVVLEdBQUdsQyxFQUFFa1AsRUFBRTlNLEdBQUdwQyxFQUFFbVAsRUFBRWhLLEdBQUduRixFQUFFb1AsRUFBRXROLEdBQUc5QixFQUFFcVAsRUFBRXpKLEdBQUc1RixFQUFFc1AsRUFBRXRKLEdBQUdoRyxFQUFFeUIsRUFBRUksR0FBRzdCLEVBQUUwQixFQUFFNkgsR0FBR3ZKLEVBQUUyQixFQUFFSixHQUFHdkIsRUFBRXdZLEVBQUVqWSxJQUFJUCxFQUFFTixFQUFFLElBQUk0TCxFQUFFcEgsR0FBR2xFLEVBQUV1TCxFQUFFdkosR0FBR2hDLEVBQUUwTCxFQUFFckwsR0FBR0wsRUFBRTJMLEVBQUUxSixHQUFHakMsRUFBRTRCLEVBQUVPLEdBQUduQyxFQUFFaVAsRUFBRS9NLEdBQUdsQyxFQUFFd0IsRUFBRVksR0FBR3BDLEVBQUVrUCxFQUFFL0osR0FBR25GLEVBQUVtUCxFQUFFck4sR0FBRzlCLEVBQUVvUCxFQUFFeEosR0FBRzVGLEVBQUVxUCxFQUFFckosR0FBR2hHLEVBQUVzUCxFQUFFek4sR0FBRzdCLEVBQUV5QixFQUFFOEgsR0FBR3ZKLEVBQUUwQixFQUFFSCxHQUFHdkIsRUFBRTJCLEVBQUU2SCxHQUFHeEosRUFBRXdZLEVBQUV0VSxJQUFJbEUsRUFBRU4sRUFBRSxLQUFLNEwsRUFBRXRKLEdBQUdoQyxFQUFFdUwsRUFBRWxMLEdBQUdMLEVBQUUwTCxFQUFFekosR0FBR2pDLEVBQUUyTCxFQUFFeEosR0FBR25DLEVBQUU0QixFQUFFTSxHQUFHbEMsRUFBRWlQLEVBQUU3TSxHQUFHcEMsRUFBRXdCLEVBQUUyRCxHQUFHbkYsRUFBRWtQLEVBQUVwTixHQUFHOUIsRUFBRW1QLEVBQUV2SixHQUFHNUYsRUFBRW9QLEVBQUVwSixHQUFHaEcsRUFBRXFQLEVBQUV4TixHQUFHN0IsRUFBRXNQLEVBQUUvRixHQUFHdkosRUFBRXlCLEVBQUVGLEdBQUd2QixFQUFFMEIsRUFBRThILEdBQUd4SixFQUFFMkIsRUFBRWdJLEdBQUczSixFQUFFd1ksRUFBRXhXLElBQUloQyxFQUFFTixFQUFFLEtBQUs0TCxFQUFFakwsR0FBR0wsRUFBRXVMLEVBQUV0SixHQUFHakMsRUFBRTBMLEVBQUV2SixHQUFHbkMsRUFBRTJMLEVBQUV6SixHQUFHbEMsRUFBRTRCLEVBQUVRLEdBQUdwQyxFQUFFaVAsRUFBRTlKLEdBQUduRixFQUFFd0IsRUFBRU0sR0FBRzlCLEVBQUVrUCxFQUFFdEosR0FBRzVGLEVBQUVtUCxFQUFFbkosR0FBR2hHLEVBQUVvUCxFQUFFdk4sR0FBRzdCLEVBQUVxUCxFQUFFOUYsR0FBR3ZKLEVBQUVzUCxFQUFFL04sR0FBR3ZCLEVBQUV5QixFQUFFK0gsR0FBR3hKLEVBQUUwQixFQUFFaUksR0FBRzNKLEVBQUUyQixFQUFFMEksR0FBR3JLLEVBQUV3WSxFQUFFblksSUFBSUwsRUFBRU4sRUFBRSxLQUFLNEwsRUFBRXJKLEdBQUdqQyxFQUFFdUwsRUFBRXBKLEdBQUduQyxFQUFFMEwsRUFBRXhKLEdBQUdsQyxFQUFFMkwsRUFBRXZKLEdBQUdwQyxFQUFFNEIsRUFBRXVELEdBQUduRixFQUFFaVAsRUFBRW5OLEdBQUc5QixFQUFFd0IsRUFBRW9FLEdBQUc1RixFQUFFa1AsRUFBRWxKLEdBQUdoRyxFQUFFbVAsRUFBRXROLEdBQUc3QixFQUFFb1AsRUFBRTdGLEdBQUd2SixFQUFFcVAsRUFBRTlOLEdBQUd2QixFQUFFc1AsRUFBRTlGLEdBQUd4SixFQUFFeUIsRUFBRWtJLEdBQUczSixFQUFFMEIsRUFBRTJJLEdBQUdySyxFQUFFMkIsRUFBRWlKLEdBQUc1SyxFQUFFd1ksRUFBRXZXLElBQUlqQyxFQUFFTixFQUFFLEtBQUs0TCxFQUFFbkosR0FBR25DLEVBQUV1TCxFQUFFckosR0FBR2xDLEVBQUUwTCxFQUFFdEosR0FBR3BDLEVBQUUyTCxFQUFFeEcsR0FBR25GLEVBQUU0QixFQUFFRSxHQUFHOUIsRUFBRWlQLEVBQUVySixHQUFHNUYsRUFBRXdCLEVBQUV3RSxHQUFHaEcsRUFBRWtQLEVBQUVyTixHQUFHN0IsRUFBRW1QLEVBQUU1RixHQUFHdkosRUFBRW9QLEVBQUU3TixHQUFHdkIsRUFBRXFQLEVBQUU3RixHQUFHeEosRUFBRXNQLEVBQUUzRixHQUFHM0osRUFBRXlCLEVBQUU0SSxHQUFHckssRUFBRTBCLEVBQUVrSixHQUFHNUssRUFBRTJCLEVBQUV1SixHQUFHbEwsRUFBRXdZLEVBQUVyVyxJQUFJbkMsRUFBRU4sRUFBRSxLQUFLNEwsRUFBRXBKLEdBQUdsQyxFQUFFdUwsRUFBRW5KLEdBQUdwQyxFQUFFMEwsRUFBRXZHLEdBQUduRixFQUFFMkwsRUFBRTdKLEdBQUc5QixFQUFFNEIsRUFBRWdFLEdBQUc1RixFQUFFaVAsRUFBRWpKLEdBQUdoRyxFQUFFd0IsRUFBRUssR0FBRzdCLEVBQUVrUCxFQUFFM0YsR0FBR3ZKLEVBQUVtUCxFQUFFNU4sR0FBR3ZCLEVBQUVvUCxFQUFFNUYsR0FBR3hKLEVBQUVxUCxFQUFFMUYsR0FBRzNKLEVBQUVzUCxFQUFFakYsR0FBR3JLLEVBQUV5QixFQUFFbUosR0FBRzVLLEVBQUUwQixFQUFFd0osR0FBR2xMLEVBQUUyQixFQUFFd0osR0FBR25MLEVBQUV3WSxFQUFFdFcsSUFBSWxDLEVBQUVOLEVBQUUsS0FBSzRMLEVBQUVwTCxHQUFHLElBQUlpRixHQUFHbkYsRUFBRTBMLEdBQUd4SSxHQUFHLElBQUlwQixHQUFHOUIsRUFBRTJMLEdBQUdyTCxHQUFHLElBQUlzRixHQUFHNUYsRUFBRTRCLEdBQUd1QixHQUFHLElBQUk2QyxHQUFHaEcsRUFBRWlQLEdBQUc5TyxHQUFHLElBQUkwQixHQUFHN0IsRUFBRXdCLEdBQUdnQyxHQUFHLElBQUkrRixHQUFHdkosRUFBRWtQLEdBQUc3TixHQUFHLElBQUlFLEdBQUd2QixFQUFFbVAsR0FBR3BOLEdBQUcsSUFBSXlILEdBQUd4SixFQUFFb1AsR0FBRzdPLEdBQUcsSUFBSW9KLEdBQUczSixFQUFFcVAsR0FBR25MLEdBQUcsSUFBSW1HLEdBQUdySyxFQUFFc1AsR0FBR3ROLEdBQUcsSUFBSTRJLEdBQUc1SyxFQUFFeUIsR0FBR3BCLEdBQUcsSUFBSTZLLEdBQUdsTCxFQUFFMEIsR0FBR08sR0FBRyxJQUFJa0osR0FBR25MLEVBQUUyQixHQUFHUSxHQUFHLElBQUlrSixHQUFHckwsRUFBRXdZLEdBQUdsWCxHQUFHdEIsR0FBR3NCLEdBQUcsSUFBSWMsR0FBR3BDLEVBQUV1TCxLQUFLdEwsRUFBRSxHQUFHLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFFLEdBQUdGLEVBQUVFLEVBQUVELEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWtELEdBQUdsRCxFQUFFa0QsRUFBRWpELEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUU0sR0FBR04sRUFBRU0sRUFBRUwsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRbUQsR0FBR25ELEVBQUVtRCxFQUFFbEQsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRRyxHQUFHSCxFQUFFRyxFQUFFRixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVF3RCxHQUFHeEQsRUFBRXdELEVBQUV2RCxFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFxQixHQUFHckIsRUFBRXFCLEVBQUVwQixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVErQixHQUFHL0IsRUFBRStCLEVBQUU5QixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFPLEdBQUdQLEVBQUVPLEVBQUVOLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWtFLEdBQUdsRSxFQUFFa0UsRUFBRWpFLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWdDLEdBQUdoQyxFQUFFZ0MsRUFBRS9CLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUUssR0FBR0wsRUFBRUssRUFBRUosRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRaUMsR0FBR2pDLEVBQUVpQyxFQUFFaEMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRbUMsR0FBR25DLEVBQUVtQyxFQUFFbEMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRa0MsR0FBR2xDLEVBQUVrQyxFQUFFakMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRc0IsR0FBR3RCLEdBQUdzQixHQUFHckIsRUFBRSxFQUFFLElBQUlBLEVBQUUsS0FBS0EsRUFBRSxHQUFHLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFFLEdBQUdGLEVBQUVFLEVBQUVELEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWtELEdBQUdsRCxFQUFFa0QsRUFBRWpELEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUU0sR0FBR04sRUFBRU0sRUFBRUwsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRbUQsR0FBR25ELEVBQUVtRCxFQUFFbEQsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRRyxHQUFHSCxFQUFFRyxFQUFFRixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVF3RCxHQUFHeEQsRUFBRXdELEVBQUV2RCxFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFxQixHQUFHckIsRUFBRXFCLEVBQUVwQixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVErQixHQUFHL0IsRUFBRStCLEVBQUU5QixFQUFFLE9BQU8sT0FBT0EsRUFBRThELEtBQUtDLE1BQU1oRSxFQUFFLFFBQVFPLEdBQUdQLEVBQUVPLEVBQUVOLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWtFLEdBQUdsRSxFQUFFa0UsRUFBRWpFLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUWdDLEdBQUdoQyxFQUFFZ0MsRUFBRS9CLEVBQUUsT0FBTyxPQUFPQSxFQUFFOEQsS0FBS0MsTUFBTWhFLEVBQUUsUUFBUUssR0FBR0wsRUFBRUssRUFBRUosRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRaUMsR0FBR2pDLEVBQUVpQyxFQUFFaEMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRbUMsR0FBR25DLEVBQUVtQyxFQUFFbEMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRa0MsR0FBR2xDLEVBQUVrQyxFQUFFakMsRUFBRSxPQUFPLE9BQU9BLEVBQUU4RCxLQUFLQyxNQUFNaEUsRUFBRSxRQUFRc0IsR0FBR3JCLEVBQUUsRUFBRSxJQUFJQSxFQUFFLEdBQUdKLEVBQUUsR0FBR3lCLEVBQUV6QixFQUFFLEdBQUdLLEVBQUVMLEVBQUUsR0FBR3FELEVBQUVyRCxFQUFFLEdBQUdTLEVBQUVULEVBQUUsR0FBR3NELEVBQUV0RCxFQUFFLEdBQUdNLEVBQUVOLEVBQUUsR0FBRzJELEVBQUUzRCxFQUFFLEdBQUd3QixFQUFFeEIsRUFBRSxHQUFHa0MsRUFBRWxDLEVBQUUsR0FBR1UsRUFBRVYsRUFBRSxJQUFJcUUsRUFBRXJFLEVBQUUsSUFBSW1DLEVBQUVuQyxFQUFFLElBQUlRLEVBQUVSLEVBQUUsSUFBSW9DLEVBQUVwQyxFQUFFLElBQUlzQyxFQUFFdEMsRUFBRSxJQUFJcUMsQ0FBQyxDQUFDLFNBQVN5SixFQUFFOUwsRUFBRUgsR0FBR2dNLEVBQUU3TCxFQUFFSCxFQUFFQSxFQUFFLENBQUMsU0FBU2tDLEVBQUUvQixFQUFFRSxHQUFHLElBQUlDLEVBQUVDLEVBQUVQLElBQUksSUFBSU0sRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlDLEVBQUVELEdBQUdELEVBQUVDLEdBQUcsSUFBSUEsRUFBRSxJQUFJQSxHQUFHLEVBQUVBLElBQUkyTCxFQUFFMUwsRUFBRUEsR0FBRyxJQUFJRCxHQUFHLElBQUlBLEdBQUcwTCxFQUFFekwsRUFBRUEsRUFBRUYsR0FBRyxJQUFJQyxFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUgsRUFBRUcsR0FBR0MsRUFBRUQsRUFBRSxDQUFDLFNBQVNpUCxFQUFFcFAsRUFBRUUsR0FBRyxJQUFJQyxFQUFFQyxFQUFFUCxJQUFJLElBQUlNLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJQyxFQUFFRCxHQUFHRCxFQUFFQyxHQUFHLElBQUlBLEVBQUUsSUFBSUEsR0FBRyxFQUFFQSxJQUFJMkwsRUFBRTFMLEVBQUVBLEdBQUcsSUFBSUQsR0FBRzBMLEVBQUV6TCxFQUFFQSxFQUFFRixHQUFHLElBQUlDLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJSCxFQUFFRyxHQUFHQyxFQUFFRCxFQUFFLENBQUMsU0FBU3dCLEVBQUUzQixFQUFFRSxFQUFFQyxHQUFHLElBQUlDLEVBQUVxQixFQUFFcEIsRUFBRSxJQUFJeUUsV0FBVyxJQUFJckUsRUFBRSxJQUFJdWUsYUFBYSxJQUFJMWIsRUFBRXpELElBQUlTLEVBQUVULElBQUk4RCxFQUFFOUQsSUFBSTJCLEVBQUUzQixJQUFJcUMsRUFBRXJDLElBQUlhLEVBQUViLElBQUksSUFBSTRCLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJcEIsRUFBRW9CLEdBQUd2QixFQUFFdUIsR0FBRyxJQUFJcEIsRUFBRSxJQUFJLElBQUlILEVBQUUsSUFBSSxHQUFHRyxFQUFFLElBQUksSUFBSW1MLEVBQUUvSyxFQUFFTixHQUFHc0IsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUluQixFQUFFbUIsR0FBR2hCLEVBQUVnQixHQUFHRCxFQUFFQyxHQUFHNkIsRUFBRTdCLEdBQUdrQyxFQUFFbEMsR0FBRyxFQUFFLElBQUk2QixFQUFFLEdBQUc5QixFQUFFLEdBQUcsRUFBRUMsRUFBRSxJQUFJQSxHQUFHLElBQUlBLEVBQUUrSSxFQUFFbEgsRUFBRWhELEVBQUVGLEVBQUVDLEVBQUVvQixJQUFJLE1BQU0sRUFBRUEsR0FBRyxHQUFHK0ksRUFBRTdHLEVBQUVuQyxFQUFFcEIsR0FBR3FMLEVBQUV2SixFQUFFb0IsRUFBRUssR0FBRytILEVBQUVwSSxFQUFFQSxFQUFFSyxHQUFHOEgsRUFBRTlILEVBQUVyRCxFQUFFa0IsR0FBR2tLLEVBQUVwTCxFQUFFQSxFQUFFa0IsR0FBR3NLLEVBQUV0SyxFQUFFVSxHQUFHNEosRUFBRXBMLEVBQUU0QyxHQUFHdUksRUFBRXZJLEVBQUVLLEVBQUVMLEdBQUd1SSxFQUFFbEksRUFBRXJELEVBQUU0QixHQUFHdUosRUFBRXZKLEVBQUVvQixFQUFFSyxHQUFHK0gsRUFBRXBJLEVBQUVBLEVBQUVLLEdBQUdtSSxFQUFFeEwsRUFBRWdELEdBQUdvSSxFQUFFL0gsRUFBRW5DLEVBQUVkLEdBQUdtTCxFQUFFdkksRUFBRUssRUFBRU4sR0FBR29JLEVBQUVuSSxFQUFFQSxFQUFFOUIsR0FBR3FLLEVBQUVsSSxFQUFFQSxFQUFFTCxHQUFHdUksRUFBRXZJLEVBQUU5QixFQUFFZCxHQUFHbUwsRUFBRXJLLEVBQUVsQixFQUFFRyxHQUFHcUwsRUFBRXhMLEVBQUU0QixHQUFHc0ksRUFBRWxILEVBQUVoRCxFQUFFRixHQUFHb0ssRUFBRTdHLEVBQUVuQyxFQUFFcEIsR0FBRyxJQUFJcUIsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUloQixFQUFFZ0IsRUFBRSxJQUFJNkIsRUFBRTdCLEdBQUdoQixFQUFFZ0IsRUFBRSxJQUFJa0MsRUFBRWxDLEdBQUdoQixFQUFFZ0IsRUFBRSxJQUFJbkIsRUFBRW1CLEdBQUdoQixFQUFFZ0IsRUFBRSxJQUFJRCxFQUFFQyxHQUFHLElBQUk0QyxFQUFFNUQsRUFBRStDLFNBQVMsSUFBSXJCLEVBQUUxQixFQUFFK0MsU0FBUyxJQUFJLE9BQU96QixFQUFFc0MsRUFBRUEsR0FBR3dILEVBQUUxSixFQUFFQSxFQUFFa0MsR0FBRzBHLEVBQUUvSyxFQUFFbUMsR0FBRyxDQUFDLENBQUMsU0FBU2tOLEVBQUVyUCxFQUFFSCxHQUFHLE9BQU84QixFQUFFM0IsRUFBRUgsRUFBRU8sRUFBRSxDQUFDLFNBQVNrUCxFQUFFdFAsRUFBRUgsR0FBRyxPQUFPSyxFQUFFTCxFQUFFLElBQUl3UCxFQUFFclAsRUFBRUgsRUFBRSxDQUFDLFNBQVMwUCxFQUFFdlAsRUFBRUgsRUFBRUssR0FBRyxJQUFJRSxFQUFFLElBQUkwRSxXQUFXLElBQUksT0FBT25ELEVBQUV2QixFQUFFRixFQUFFTCxHQUFHdUMsRUFBRXBDLEVBQUVHLEVBQUVDLEVBQUVrQyxFQUFFLENBQUN5RCxFQUFFekUsVUFBVTJnQixPQUFPLFNBQVNqaUIsRUFBRUgsRUFBRUssR0FBRyxJQUFJLElBQUlDLEVBQUVDLEVBQUVxQixFQUFFcEIsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEVBQUVxRCxFQUFFbkMsRUFBRVUsRUFBRXhCLEVBQUUyRCxFQUFFbEMsRUFBRTNCLEVBQUU0QixFQUFFRSxFQUFFRCxFQUFFRSxFQUFFK0MsRUFBRXZCLEtBQUtveUIsSUFBSSxFQUFFLEtBQUtsMEIsRUFBRThCLEtBQUtKLEVBQUUsR0FBR29DLEVBQUVoQyxLQUFLSixFQUFFLEdBQUd3QyxFQUFFcEMsS0FBS0osRUFBRSxHQUFHM0IsRUFBRStCLEtBQUtKLEVBQUUsR0FBRytGLEVBQUUzRixLQUFLSixFQUFFLEdBQUdqQyxFQUFFcUMsS0FBS0osRUFBRSxHQUFHZ0csRUFBRTVGLEtBQUtKLEVBQUUsR0FBR21HLEVBQUUvRixLQUFLSixFQUFFLEdBQUc2RyxFQUFFekcsS0FBS0osRUFBRSxHQUFHb0gsRUFBRWhILEtBQUtKLEVBQUUsR0FBRzBILEVBQUV0SCxLQUFLN0QsRUFBRSxHQUFHb0wsRUFBRXZILEtBQUs3RCxFQUFFLEdBQUdzTCxFQUFFekgsS0FBSzdELEVBQUUsR0FBR3VMLEVBQUUxSCxLQUFLN0QsRUFBRSxHQUFHd0wsRUFBRTNILEtBQUs3RCxFQUFFLEdBQUcyTCxFQUFFOUgsS0FBSzdELEVBQUUsR0FBRzRMLEVBQUUvSCxLQUFLN0QsRUFBRSxHQUFHNkIsRUFBRWdDLEtBQUs3RCxFQUFFLEdBQUdrUCxFQUFFckwsS0FBSzdELEVBQUUsR0FBR3lCLEVBQUVvQyxLQUFLN0QsRUFBRSxHQUFHQSxHQUFHLElBQUlzQixFQUFFbUMsRUFBRSxFQUFFbkMsSUFBSVMsR0FBRyxNQUFNOUIsRUFBRSxJQUFJSCxFQUFFSCxFQUFFLElBQUksSUFBSUcsRUFBRUgsRUFBRSxLQUFLLElBQUl3TCxFQUFFN0osSUFBSXVFLEdBQUcsTUFBTTVGLElBQUksSUFBSUMsRUFBRSxJQUFJSixFQUFFSCxFQUFFLElBQUksSUFBSUcsRUFBRUgsRUFBRSxLQUFLLElBQUksS0FBSyxFQUFFOEIsR0FBR0gsSUFBSTJFLEdBQUcsTUFBTS9GLElBQUksSUFBSXFCLEVBQUUsSUFBSXpCLEVBQUVILEVBQUUsSUFBSSxJQUFJRyxFQUFFSCxFQUFFLEtBQUssSUFBSSxLQUFLLEVBQUV1UCxHQUFHNU4sSUFBSVEsR0FBRyxNQUFNUCxJQUFJLEdBQUdwQixFQUFFLElBQUlMLEVBQUVILEVBQUUsSUFBSSxJQUFJRyxFQUFFSCxFQUFFLEtBQUssSUFBSSxLQUFLLEVBQUVrQyxHQUFHNEIsR0FBR25DLElBQUlrSSxHQUFHLE1BQU1ySixJQUFJLEdBQUdnRCxFQUFFLElBQUlyRCxFQUFFSCxFQUFFLElBQUksSUFBSUcsRUFBRUgsRUFBRSxLQUFLLElBQUksTUFBTSxFQUFFaU0sTUFBTSxHQUFHdEssR0FBRyxLQUFLQSxJQUFJRSxHQUFHMkIsSUFBSSxFQUFFLE9BQU8sRUFBRXdJLEdBQUdySyxJQUFJbUksR0FBRyxNQUFNdEcsSUFBSSxJQUFJNUMsRUFBRSxJQUFJVCxFQUFFSCxFQUFFLEtBQUssSUFBSUcsRUFBRUgsRUFBRSxNQUFNLElBQUksS0FBSyxFQUFFNkwsR0FBR2xLLElBQUlzSSxHQUFHLE1BQU1ySixJQUFJLElBQUk2QyxFQUFFLElBQUl0RCxFQUFFSCxFQUFFLEtBQUssSUFBSUcsRUFBRUgsRUFBRSxNQUFNLElBQUksS0FBSyxFQUFFNEwsR0FBR2pLLElBQUlnSixHQUFHLE1BQU1sSCxJQUFJLEdBQUdoRCxFQUFFLElBQUlOLEVBQUVILEVBQUUsS0FBSyxJQUFJRyxFQUFFSCxFQUFFLE1BQU0sSUFBSSxLQUFLLEVBQUUyTCxHQUFHdEosRUFBRXlCLElBQUluQyxJQUFJdUosR0FBR3pLLElBQUksRUFBRWdGLElBQUksRUFBRWdHLE1BQU0sR0FBR3BKLEdBQUdELEVBQUVxSixFQUFFcEosR0FBRzZELEVBQUVzRixFQUFFbkosR0FBR2lFLEdBQUcsRUFBRXhFLEdBQUdPLEdBQUdGLEdBQUcsRUFBRW9OLEdBQUd6TCxHQUFHekIsR0FBR3dILEdBQUcsRUFBRTNILE1BQU0sR0FBR0csR0FBRyxLQUFLQSxHQUFHUixHQUFHLEVBQUVvSyxHQUFHNUosR0FBR3lILEdBQUcsRUFBRWtDLEdBQUczSixHQUFHNEgsR0FBRyxFQUFFNEIsR0FBR3hKLEdBQUdzSSxHQUFHLEVBQUVpQixHQUFHOUgsSUFBSXpCLEdBQUc2SSxHQUFHLEVBQUVTLE1BQU0sR0FBR3RKLEdBQUcsS0FBS3hCLEVBQUVpRCxFQUFFakQsR0FBR3VCLEVBQUV1SixFQUFFOUssR0FBR3FGLEVBQUV1RixFQUFFNUssR0FBR3lGLEVBQUVrRixFQUFFM0ssR0FBR3NCLEdBQUcsRUFBRUwsR0FBR2dDLEdBQUdqRCxHQUFHZ0osR0FBRyxFQUFFMEYsTUFBTSxHQUFHMU8sR0FBRyxLQUFLQSxHQUFHZ0IsR0FBRyxFQUFFSyxHQUFHckIsR0FBR2lKLEdBQUcsRUFBRW1DLEdBQUdwTCxHQUFHb0osR0FBRyxFQUFFK0IsR0FBR25MLEdBQUc4SixHQUFHLEVBQUVrQixHQUFHckgsRUFBRVYsSUFBSWpELEdBQUdxSyxHQUFHLEVBQUVVLE1BQU0sR0FBR3BILEdBQUdwQyxFQUFFd0osRUFBRXBILEdBQUcwQixFQUFFeUYsRUFBRW5ILEdBQUc4QixFQUFFbUYsRUFBRWpILEdBQUdyQyxFQUFFcUosRUFBRTFILEdBQUdVLEdBQUdxRixHQUFHLEVBQUUvSCxNQUFNLEdBQUcwQyxHQUFHLEtBQUtBLEdBQUczQyxHQUFHLEVBQUUwTixHQUFHL0ssR0FBR3NGLEdBQUcsRUFBRTVILEdBQUdzQyxHQUFHeUYsR0FBRyxFQUFFZ0MsR0FBR3pILEdBQUdtRyxHQUFHLEVBQUVxQixHQUFHMUosRUFBRXdCLElBQUlVLEdBQUcwRyxHQUFHLEVBQUVXLE1BQU0sR0FBR3ZKLEdBQUdGLEVBQUV5SixFQUFFdkosR0FBRzRELEVBQUUwRixFQUFFdEosR0FBR2dFLEVBQUVxRixFQUFFckosR0FBR0gsRUFBRXNKLEVBQUUzSCxHQUFHeEIsR0FBR3VILEVBQUUyQixLQUFLLEdBQUdsSixHQUFHLEtBQUtBLEdBQUdULEdBQUcsRUFBRUMsR0FBR1EsR0FBR3dILEdBQUcsRUFBRXlGLEdBQUdqTixHQUFHMkgsR0FBRyxFQUFFL0gsR0FBR0ksR0FBR3FJLEdBQUcsRUFBRXNCLEdBQUd0TCxFQUFFbUQsSUFBSXhCLEdBQUc0SSxHQUFHLEVBQUVjLE1BQU0sR0FBR3JMLEdBQUd5QixFQUFFNEosRUFBRXJMLEdBQUd1RixFQUFFMkYsRUFBRWxMLEdBQUcyRixFQUFFc0YsRUFBRWpMLEdBQUd3QixFQUFFd0osRUFBRTdILEdBQUduRCxHQUFHa0osRUFBRTRCLEtBQUssR0FBRzlLLEdBQUcsS0FBS0EsR0FBR2tCLEVBQUUySixFQUFFN0ssR0FBR21KLEdBQUcsRUFBRWhJLEdBQUduQixHQUFHc0osR0FBRyxFQUFFc0YsR0FBRzVPLEdBQUdnSyxHQUFHLEVBQUV6SSxHQUFHSyxFQUFFdUIsSUFBSW5ELEdBQUd1SyxHQUFHLEVBQUVlLE1BQU0sR0FBRzFKLEdBQUdILEVBQUU2SixFQUFFMUosR0FBRzJELEVBQUU4RixFQUFFekosR0FBRytELEVBQUV1RixFQUFFdEosR0FBR0osRUFBRXlKLEVBQUU5SCxHQUFHdkIsR0FBR3NILEVBQUU4QixLQUFLLEdBQUdwSixHQUFHLEtBQUtBLEdBQUdWLEVBQUU0SixFQUFFbEosR0FBR3VILEVBQUUwQixFQUFFakosR0FBRzBILEdBQUcsRUFBRW5JLEdBQUdTLEdBQUdvSSxHQUFHLEVBQUU0RSxHQUFHOU0sRUFBRXFCLElBQUl2QixHQUFHMkksR0FBRyxFQUFFaEosTUFBTSxHQUFHTyxHQUFHTCxFQUFFRixFQUFFTyxHQUFHeUQsRUFBRStGLEVBQUV4SixHQUFHNkQsRUFBRTBGLEVBQUV2SixHQUFHTixFQUFFMEosRUFBRS9ILEdBQUdyQixHQUFHb0gsRUFBRStCLEtBQUssR0FBR25KLEdBQUcsS0FBS0EsR0FBR1osRUFBRThKLEVBQUVsSixHQUFHcUgsRUFBRTJCLEVBQUVoSixHQUFHd0gsRUFBRXVCLEVBQUUvSSxHQUFHa0ksR0FBRyxFQUFFN0ksR0FBR1UsRUFBRXNCLElBQUlyQixHQUFHeUksR0FBRyxFQUFFcUUsTUFBTSxHQUFHL00sR0FBR0osRUFBRW1OLEVBQUUvTSxHQUFHMEQsRUFBRWhFLEVBQUVNLEdBQUc4RCxFQUFFMkYsRUFBRXpKLEdBQUdMLEVBQUU2SixFQUFFbEksR0FBR3RCLEdBQUdxSCxFQUFFZ0MsS0FBSyxHQUFHckosR0FBRyxLQUFLQSxHQUFHWCxFQUFFK0osRUFBRXBKLEdBQUdzSCxFQUFFNkIsRUFBRW5KLEdBQUd5SCxFQUFFd0IsRUFBRWpKLEdBQUdtSSxFQUFFYSxFQUFFOUksRUFBRW9CLElBQUl0QixHQUFHMEksR0FBRyxFQUFFcEosTUFBTSxHQUFHWSxHQUFHTixFQUFFTixFQUFFWSxHQUFHd0QsRUFBRXFKLEVBQUU3TSxHQUFHNEQsRUFBRXBFLEVBQUVRLEdBQUdQLEVBQUU4SixFQUFFbkksR0FBR3BCLEdBQUdtSCxFQUFFbUMsS0FBSyxHQUFHdEosR0FBRyxLQUFLQSxHQUFHYixFQUFFZ0ssRUFBRW5KLEdBQUdvSCxFQUFFOEIsRUFBRWxKLEdBQUd1SCxFQUFFMEIsRUFBRWpKLEdBQUdpSSxFQUFFYyxFQUFFckosRUFBRVQsRUFBRSxNQUFNbUMsR0FBR0EsSUFBSUEsSUFBSXBCLEdBQUd3SSxFQUFFTSxLQUFLLEtBQUssR0FBRzFILEVBQUUsSUFBSW5DLEdBQUcsTUFBTSxHQUFHdUUsRUFBRTdELEdBQUd5QixLQUFLLEdBQUd3QyxFQUFFekYsR0FBRyxLQUFLc0IsRUFBRXFDLEdBQUcsS0FBS3FGLEVBQUV2SCxHQUFHLEtBQUtULEVBQUVsQixHQUFHLEtBQUttSixFQUFFdkgsR0FBRyxLQUFLMEgsRUFBRXhILEdBQUcsS0FBS2tJLEVBQUVuSSxHQUFHLEtBQUswSSxFQUFFeEksR0FBRyxLQUFLMUMsR0FBRyxHQUFHSyxHQUFHLEdBQUc2RCxLQUFLSixFQUFFLEdBQUcxQixFQUFFOEIsS0FBS0osRUFBRSxHQUFHb0MsRUFBRWhDLEtBQUtKLEVBQUUsR0FBR3dDLEVBQUVwQyxLQUFLSixFQUFFLEdBQUczQixFQUFFK0IsS0FBS0osRUFBRSxHQUFHK0YsRUFBRTNGLEtBQUtKLEVBQUUsR0FBR2pDLEVBQUVxQyxLQUFLSixFQUFFLEdBQUdnRyxFQUFFNUYsS0FBS0osRUFBRSxHQUFHbUcsRUFBRS9GLEtBQUtKLEVBQUUsR0FBRzZHLEVBQUV6RyxLQUFLSixFQUFFLEdBQUdvSCxDQUFDLEVBQUVoRixFQUFFekUsVUFBVTgwQixPQUFPLFNBQVNwMkIsRUFBRUgsR0FBRyxJQUFJSyxFQUFFQyxFQUFFQyxFQUFFcUIsRUFBRXBCLEVBQUUsSUFBSXVmLFlBQVksSUFBSSxHQUFHN2IsS0FBS215QixTQUFTLENBQUMsSUFBSXowQixFQUFFc0MsS0FBS215QixTQUFTbnlCLEtBQUtpQixPQUFPdkQsS0FBSyxFQUFFQSxFQUFFLEdBQUdBLElBQUlzQyxLQUFLaUIsT0FBT3ZELEdBQUcsRUFBRXNDLEtBQUtveUIsSUFBSSxFQUFFcHlCLEtBQUtrZSxPQUFPbGUsS0FBS2lCLE9BQU8sRUFBRSxHQUFHLENBQUMsSUFBSTlFLEVBQUU2RCxLQUFLSixFQUFFLEtBQUssR0FBR0ksS0FBS0osRUFBRSxJQUFJLEtBQUtsQyxFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSXNDLEtBQUtKLEVBQUVsQyxJQUFJdkIsRUFBRUEsRUFBRTZELEtBQUtKLEVBQUVsQyxLQUFLLEdBQUdzQyxLQUFLSixFQUFFbEMsSUFBSSxLQUFLLElBQUlzQyxLQUFLSixFQUFFLElBQUksRUFBRXpELEVBQUVBLEVBQUU2RCxLQUFLSixFQUFFLEtBQUssR0FBR0ksS0FBS0osRUFBRSxJQUFJLEtBQUtJLEtBQUtKLEVBQUUsSUFBSXpELEVBQUVBLEVBQUU2RCxLQUFLSixFQUFFLEtBQUssR0FBR0ksS0FBS0osRUFBRSxJQUFJLEtBQUtJLEtBQUtKLEVBQUUsSUFBSXpELEVBQUVHLEVBQUUsR0FBRzBELEtBQUtKLEVBQUUsR0FBRyxFQUFFekQsRUFBRUcsRUFBRSxLQUFLLEdBQUdBLEVBQUUsSUFBSSxLQUFLb0IsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlwQixFQUFFb0IsR0FBR3NDLEtBQUtKLEVBQUVsQyxHQUFHdkIsRUFBRUEsRUFBRUcsRUFBRW9CLEtBQUssR0FBR3BCLEVBQUVvQixJQUFJLEtBQUssSUFBSXBCLEVBQUUsSUFBSSxLQUFLRixHQUFHLEVBQUVELEdBQUcsRUFBRXVCLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJcEIsRUFBRW9CLElBQUl0QixFQUFFLElBQUlBLEdBQUdBLEVBQUVzQixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSXNDLEtBQUtKLEVBQUVsQyxHQUFHc0MsS0FBS0osRUFBRWxDLEdBQUd0QixFQUFFRSxFQUFFb0IsR0FBRyxJQUFJc0MsS0FBS0osRUFBRSxHQUFHLE9BQU9JLEtBQUtKLEVBQUUsR0FBR0ksS0FBS0osRUFBRSxJQUFJLElBQUlJLEtBQUtKLEVBQUUsR0FBRyxPQUFPSSxLQUFLSixFQUFFLEtBQUssRUFBRUksS0FBS0osRUFBRSxJQUFJLElBQUlJLEtBQUtKLEVBQUUsR0FBRyxPQUFPSSxLQUFLSixFQUFFLEtBQUssRUFBRUksS0FBS0osRUFBRSxJQUFJLEdBQUdJLEtBQUtKLEVBQUUsR0FBRyxPQUFPSSxLQUFLSixFQUFFLEtBQUssRUFBRUksS0FBS0osRUFBRSxJQUFJLEdBQUdJLEtBQUtKLEVBQUUsR0FBRyxPQUFPSSxLQUFLSixFQUFFLEtBQUssR0FBR0ksS0FBS0osRUFBRSxJQUFJLEVBQUVJLEtBQUtKLEVBQUUsSUFBSSxJQUFJSSxLQUFLSixFQUFFLEdBQUcsT0FBT0ksS0FBS0osRUFBRSxLQUFLLEVBQUVJLEtBQUtKLEVBQUUsSUFBSSxJQUFJSSxLQUFLSixFQUFFLEdBQUcsT0FBT0ksS0FBS0osRUFBRSxLQUFLLEVBQUVJLEtBQUtKLEVBQUUsSUFBSSxHQUFHSSxLQUFLSixFQUFFLEdBQUcsT0FBT0ksS0FBS0osRUFBRSxLQUFLLEVBQUVJLEtBQUtKLEVBQUUsSUFBSSxHQUFHdkQsRUFBRTJELEtBQUtKLEVBQUUsR0FBR0ksS0FBS2t5QixJQUFJLEdBQUdseUIsS0FBS0osRUFBRSxHQUFHLE1BQU12RCxFQUFFcUIsRUFBRSxFQUFFQSxFQUFFLEVBQUVBLElBQUlyQixHQUFHMkQsS0FBS0osRUFBRWxDLEdBQUdzQyxLQUFLa3lCLElBQUl4MEIsR0FBRyxJQUFJckIsSUFBSSxJQUFJLEVBQUUyRCxLQUFLSixFQUFFbEMsR0FBRyxNQUFNckIsRUFBRUosRUFBRUgsRUFBRSxHQUFHa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsSUFBSTNELEVBQUVILEVBQUUsR0FBR2tFLEtBQUtKLEVBQUUsS0FBSyxFQUFFLElBQUkzRCxFQUFFSCxFQUFFLEdBQUdrRSxLQUFLSixFQUFFLEtBQUssRUFBRSxJQUFJM0QsRUFBRUgsRUFBRSxHQUFHa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsSUFBSTNELEVBQUVILEVBQUUsR0FBR2tFLEtBQUtKLEVBQUUsS0FBSyxFQUFFLElBQUkzRCxFQUFFSCxFQUFFLEdBQUdrRSxLQUFLSixFQUFFLEtBQUssRUFBRSxJQUFJM0QsRUFBRUgsRUFBRSxHQUFHa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsSUFBSTNELEVBQUVILEVBQUUsR0FBR2tFLEtBQUtKLEVBQUUsS0FBSyxFQUFFLElBQUkzRCxFQUFFSCxFQUFFLEdBQUdrRSxLQUFLSixFQUFFLEtBQUssRUFBRSxJQUFJM0QsRUFBRUgsRUFBRSxHQUFHa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsSUFBSTNELEVBQUVILEVBQUUsSUFBSWtFLEtBQUtKLEVBQUUsS0FBSyxFQUFFLElBQUkzRCxFQUFFSCxFQUFFLElBQUlrRSxLQUFLSixFQUFFLEtBQUssRUFBRSxJQUFJM0QsRUFBRUgsRUFBRSxJQUFJa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsSUFBSTNELEVBQUVILEVBQUUsSUFBSWtFLEtBQUtKLEVBQUUsS0FBSyxFQUFFLElBQUkzRCxFQUFFSCxFQUFFLElBQUlrRSxLQUFLSixFQUFFLEtBQUssRUFBRSxJQUFJM0QsRUFBRUgsRUFBRSxJQUFJa0UsS0FBS0osRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFb0MsRUFBRXpFLFVBQVUrZ0IsT0FBTyxTQUFTcmlCLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRUMsRUFBRSxHQUFHMkQsS0FBS215QixTQUFTLENBQUMsS0FBSzkxQixFQUFFLEdBQUcyRCxLQUFLbXlCLFVBQVVoMkIsSUFBSUUsRUFBRUYsR0FBR0MsRUFBRSxFQUFFQSxFQUFFQyxFQUFFRCxJQUFJNEQsS0FBS2lCLE9BQU9qQixLQUFLbXlCLFNBQVMvMUIsR0FBR0gsRUFBRUgsRUFBRU0sR0FBRyxHQUFHRCxHQUFHRSxFQUFFUCxHQUFHTyxFQUFFMkQsS0FBS215QixVQUFVOTFCLEVBQUUyRCxLQUFLbXlCLFNBQVMsR0FBRyxPQUFPbnlCLEtBQUtrZSxPQUFPbGUsS0FBS2lCLE9BQU8sRUFBRSxJQUFJakIsS0FBS215QixTQUFTLENBQUMsQ0FBQyxHQUFHaDJCLEdBQUcsS0FBS0UsRUFBRUYsRUFBRUEsRUFBRSxHQUFHNkQsS0FBS2tlLE9BQU9qaUIsRUFBRUgsRUFBRU8sR0FBR1AsR0FBR08sRUFBRUYsR0FBR0UsR0FBR0YsRUFBRSxDQUFDLElBQUlDLEVBQUUsRUFBRUEsRUFBRUQsRUFBRUMsSUFBSTRELEtBQUtpQixPQUFPakIsS0FBS215QixTQUFTLzFCLEdBQUdILEVBQUVILEVBQUVNLEdBQUc0RCxLQUFLbXlCLFVBQVVoMkIsQ0FBQyxDQUFDLEVBQUUsSUFBSXNQLEVBQUU5RixFQUFFK0YsRUFBRS9OLEVBQUVFLEVBQUUsQ0FBQyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxVQUFVLFdBQVcsVUFBVSxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsVUFBVSxVQUFVLFVBQVUsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsVUFBVSxVQUFVLFdBQVcsVUFBVSxXQUFXLFVBQVUsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxZQUFZLFNBQVNDLEVBQUU3QixFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLElBQUksSUFBSUMsRUFBRXFCLEVBQUVwQixFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUVuQyxFQUFFVSxFQUFFeEIsRUFBRTJELEVBQUVsQyxFQUFFM0IsRUFBRTRCLEVBQUVFLEVBQUVELEVBQUVFLEVBQUUrQyxFQUFFckQsRUFBRThELEVBQUVJLEVBQUVuRSxFQUFFMEgsRUFBRWhJLEVBQUVpSSxFQUFFRyxFQUFFLElBQUlzVixXQUFXLElBQUk1VSxFQUFFLElBQUk0VSxXQUFXLElBQUlyVSxFQUFFL0ssRUFBRSxHQUFHcUwsRUFBRXJMLEVBQUUsR0FBR3NMLEVBQUV0TCxFQUFFLEdBQUd3TCxFQUFFeEwsRUFBRSxHQUFHeUwsRUFBRXpMLEVBQUUsR0FBRzBMLEVBQUUxTCxFQUFFLEdBQUc2TCxFQUFFN0wsRUFBRSxHQUFHOEwsRUFBRTlMLEVBQUUsR0FBRytCLEVBQUVsQyxFQUFFLEdBQUd1UCxFQUFFdlAsRUFBRSxHQUFHOEIsRUFBRTlCLEVBQUUsR0FBR3dQLEVBQUV4UCxFQUFFLEdBQUd5UCxFQUFFelAsRUFBRSxHQUFHMFAsRUFBRTFQLEVBQUUsR0FBRzJQLEVBQUUzUCxFQUFFLEdBQUc0UCxFQUFFNVAsRUFBRSxHQUFHZ0MsRUFBRSxFQUFFMUIsR0FBRyxLQUFLLENBQUMsSUFBSW1GLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJckQsRUFBRSxFQUFFcUQsRUFBRXpELEVBQUVpSSxFQUFFeEUsR0FBR3BGLEVBQUUrQixFQUFFLElBQUksR0FBRy9CLEVBQUUrQixFQUFFLElBQUksR0FBRy9CLEVBQUUrQixFQUFFLElBQUksRUFBRS9CLEVBQUUrQixFQUFFLEdBQUd1SSxFQUFFbEYsR0FBR3BGLEVBQUUrQixFQUFFLElBQUksR0FBRy9CLEVBQUUrQixFQUFFLElBQUksR0FBRy9CLEVBQUUrQixFQUFFLElBQUksRUFBRS9CLEVBQUUrQixFQUFFLEdBQUcsSUFBSXFELEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJLEdBQUdsRixFQUFFMkssRUFBRXRKLEVBQUU0SixFQUFFaEwsRUFBRWlMLEVBQUVqSSxFQUFFbUksRUFBRS9LLEVBQUVnTCxFQUFFbkksRUFBRW9JLEVBQUVwTCxFQUFFdUwsRUFBRXJLLEVBQUVPLEVBQUVHLEVBQUVrTixFQUFFMU8sRUFBRWlCLEVBQUUwQyxFQUFFZ0wsRUFBRWxOLEVBQUVtTixFQUFFOU8sRUFBRStPLEVBQUVuTixFQUFFb04sRUFBRXhOLEVBQUUsT0FBT21FLEVBQUVzSixHQUFHL0YsRUFBRXZELElBQUksR0FBR3pFLEVBQUUsT0FBT3FFLEVBQUUrRixHQUFHbkMsRUFBRTVELElBQUksR0FBRy9ELEdBQUcsT0FBT21FLEdBQUdtSixJQUFJLEdBQUc3RCxHQUFHLEtBQUs2RCxJQUFJLEdBQUc3RCxHQUFHLEtBQUtBLElBQUksRUFBRTZELEdBQUcsS0FBSzVGLEdBQUd2RCxJQUFJLEdBQUd6RSxHQUFHLE9BQU9xRSxHQUFHMEYsSUFBSSxHQUFHNkQsR0FBRyxLQUFLN0QsSUFBSSxHQUFHNkQsR0FBRyxLQUFLQSxJQUFJLEVBQUU3RCxHQUFHLEtBQUs5QixHQUFHNUQsSUFBSSxHQUFHL0QsR0FBRyxPQUFPbUUsRUFBRW1KLEVBQUVDLEdBQUdELEVBQUVFLEdBQUc5RixHQUFHdkQsSUFBSSxHQUFHekUsR0FBRyxPQUFPcUUsRUFBRTBGLEVBQUVDLEdBQUdELEVBQUVJLEdBQUdsQyxHQUFHNUQsSUFBSSxHQUFHL0QsR0FBRyxPQUFPbUUsRUFBRXZFLEVBQUUsRUFBRTBELEVBQUUsSUFBSW9FLEdBQUd2RCxJQUFJLEdBQUd6RSxHQUFHLE9BQU9xRSxFQUFFbkUsRUFBRSxFQUFFMEQsSUFBSXFFLEdBQUc1RCxJQUFJLEdBQUdBLEVBQUUrRCxFQUFFeEUsRUFBRSxJQUFJb0UsSUFBSXZELEVBQUVxRSxFQUFFbEYsRUFBRSxPQUFPLEdBQUc1RCxHQUFHLE1BQU1xRSxFQUFFNEQsR0FBRzVELElBQUksR0FBR3JFLElBQUlnSSxJQUFJMUgsR0FBRyxNQUFNbUUsS0FBSyxNQUFNLEdBQUduRSxFQUFFLE9BQU9tRSxFQUFFNUQsRUFBRSxNQUFNUCxFQUFFMEgsR0FBRyxJQUFJQSxFQUFFdkQsSUFBSSxHQUFHekUsRUFBRSxPQUFPcUUsRUFBRTFELEVBQUUsTUFBTVgsR0FBR2lJLEdBQUdqSSxJQUFJLEtBQUssSUFBSWlJLEVBQUU1RCxJQUFJLEdBQUcvRCxHQUFHLE9BQU9tRSxHQUFHcEUsSUFBSSxHQUFHZ0osR0FBRyxJQUFJQSxJQUFJLEVBQUVoSixHQUFHLEtBQUtnSixJQUFJLEVBQUVoSixHQUFHLEtBQUsySCxHQUFHdkQsSUFBSSxHQUFHekUsR0FBRyxPQUFPcUUsR0FBR2dGLElBQUksR0FBR2hKLEdBQUcsSUFBSUEsSUFBSSxFQUFFZ0osR0FBRyxLQUFLaEosSUFBSSxFQUFFZ0osR0FBRyxLQUFLcEIsR0FBRzVELElBQUksR0FBRzJELElBQUl2RCxFQUFFcEUsRUFBRXFOLEVBQUVyTixFQUFFSixFQUFFeU4sRUFBRXpOLEtBQUssR0FBR0QsR0FBRyxPQUFPcUUsRUFBRWdGLEVBQUVNLEVBQUVOLEVBQUVPLEVBQUVELEVBQUVDLEdBQUczQixHQUFHNUQsSUFBSSxHQUFHcEMsRUFBRSxPQUFPakMsSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sS0FBS3dELEdBQUdqSSxJQUFJLEtBQUssR0FBR1ksRUFBRSxNQUFNTixFQUFFMEgsR0FBRyxHQUFHMUgsRUFBRSxPQUFPbUUsRUFBRTlCLEdBQUdxRixFQUFFdkQsSUFBSSxHQUFHekUsRUFBRSxPQUFPcUUsRUFBRTFDLEdBQUdzRyxFQUFFNUQsSUFBSSxHQUFHMkQsSUFBSXZELEVBQUU1RCxLQUFLLEdBQUdiLEdBQUcsT0FBT3FFLEVBQUUxRCxHQUFHc0gsR0FBRzVELElBQUksR0FBR3NGLEVBQUVqTCxFQUFFa0wsRUFBRTdKLEVBQUUrSixFQUFFbkwsRUFBRW9MLEVBQUVwSSxFQUFFLE9BQU8zQixJQUFJZ0ksSUFBSTFILEdBQUcsTUFBTW1FLEtBQUssTUFBTSxLQUFLd0QsR0FBR2pJLElBQUksS0FBSyxHQUFHZ0ssRUFBRWpMLEVBQUVvTCxFQUFFdkksRUFBRXdJLEVBQUV4TCxFQUFFeUssRUFBRXBILEVBQUV5TCxFQUFFNU4sRUFBRUcsRUFBRU8sRUFBRW1OLEVBQUUzTyxFQUFFNE8sRUFBRWpMLEVBQUUsTUFBTXJDLEVBQUUwSCxHQUFHLEdBQUc2RixFQUFFcE4sRUFBRXFOLEVBQUVoUCxFQUFFaVAsRUFBRXJOLEVBQUVMLEVBQUVPLEVBQUVnRCxFQUFFLElBQUksR0FBRyxJQUFJckQsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUk4RCxFQUFFK0QsRUFBRTdILEdBQUdELEVBQUUsT0FBT21FLEVBQUVxRSxFQUFFdkksSUFBSXlILEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE1BQU1xRSxFQUFFNEQsRUFBRTVELElBQUksR0FBR0EsRUFBRStELEdBQUc3SCxFQUFFLEdBQUcsSUFBSUQsR0FBRyxPQUFPbUUsRUFBRXFFLEdBQUd2SSxFQUFFLEdBQUcsS0FBS3lILEdBQUd2RCxJQUFJLEdBQUd6RSxHQUFHLE1BQU1xRSxFQUFFNEQsR0FBRzVELElBQUksR0FBRzFELEVBQUV5SCxHQUFHN0gsRUFBRSxHQUFHLElBQUlELEdBQUcsT0FBT21FLElBQUk1RCxFQUFFaUksR0FBR3ZJLEVBQUUsR0FBRyxPQUFPLEVBQUVJLEdBQUcsS0FBS0UsSUFBSSxFQUFFRixHQUFHLEtBQUtFLElBQUksRUFBRUYsR0FBRyxLQUFLcUgsR0FBR3ZELElBQUksR0FBR3pFLEdBQUcsT0FBT3FFLEdBQUcxRCxJQUFJLEVBQUVFLEdBQUcsS0FBS0YsSUFBSSxFQUFFRSxHQUFHLElBQUlGLElBQUksR0FBR3NILEdBQUc1RCxJQUFJLEdBQUcxRCxFQUFFeUgsR0FBRzdILEVBQUUsSUFBSSxJQUFJeUgsSUFBSXZELElBQUk1RCxFQUFFaUksR0FBR3ZJLEVBQUUsSUFBSSxPQUFPLEdBQUdJLEdBQUcsS0FBS0EsSUFBSSxHQUFHRSxHQUFHLElBQUlBLElBQUksRUFBRUYsR0FBRyxPQUFPLEdBQUdYLEdBQUcsT0FBT3FFLEdBQUcxRCxJQUFJLEdBQUdFLEdBQUcsS0FBS0EsSUFBSSxHQUFHRixHQUFHLEdBQUdBLElBQUksR0FBR3NILEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHMkQsRUFBRTdILEdBQUcsTUFBTVAsRUFBRWlJLEdBQUcsR0FBR2EsRUFBRXZJLEdBQUcsTUFBTUQsRUFBRTBILEdBQUcsR0FBRzFILEVBQUUsT0FBT21FLEVBQUVwRSxHQUFHMkgsRUFBRXZELElBQUksR0FBR3pFLEVBQUUsT0FBT3FFLEVBQUVnRixHQUFHcEIsRUFBRTVELElBQUksR0FBR0EsRUFBRS9GLEVBQUUsR0FBRzBKLElBQUl2RCxFQUFFdEcsRUFBRSxNQUFNLEdBQUc2QixHQUFHLE1BQU1xRSxFQUFFNEQsR0FBRzVELElBQUksR0FBRzRELElBQUlqSSxJQUFJZ0ksSUFBSTFILEdBQUcsTUFBTW1FLEtBQUssTUFBTSxNQUFNLEdBQUduRyxFQUFFLEdBQUcrSyxFQUFFLE1BQU1ySixFQUFFaUksR0FBRyxHQUFHOUosRUFBRSxHQUFHa0MsRUFBRSxNQUFNQyxFQUFFMEgsR0FBRyxHQUFHMUgsRUFBRSxPQUFPbUUsRUFBRWlKLEdBQUcxRixFQUFFdkQsSUFBSSxHQUFHekUsRUFBRSxPQUFPcUUsRUFBRXNGLEdBQUcxQixFQUFFNUQsSUFBSSxHQUFHQSxFQUFFL0YsRUFBRSxHQUFHMEosSUFBSXZELEVBQUV0RyxFQUFFLE1BQU0sR0FBRzZCLEdBQUcsTUFBTXFFLEVBQUU0RCxHQUFHNUQsSUFBSSxHQUFHNEQsSUFBSWpJLElBQUlnSSxJQUFJMUgsR0FBRyxNQUFNbUUsS0FBSyxNQUFNLE1BQU0sR0FBR25HLEVBQUUsR0FBR3FMLEVBQUUsTUFBTTNKLEVBQUVpSSxHQUFHLEdBQUc5SixFQUFFLEdBQUd1UCxFQUFFLE1BQU1wTixFQUFFMEgsR0FBRyxHQUFHMUgsRUFBRSxPQUFPbUUsRUFBRXhFLEdBQUcrSCxFQUFFdkQsSUFBSSxHQUFHekUsRUFBRSxPQUFPcUUsRUFBRXVGLEdBQUczQixFQUFFNUQsSUFBSSxHQUFHQSxFQUFFL0YsRUFBRSxHQUFHMEosSUFBSXZELEVBQUV0RyxFQUFFLE1BQU0sR0FBRzZCLEdBQUcsTUFBTXFFLEVBQUU0RCxHQUFHNUQsSUFBSSxHQUFHNEQsSUFBSWpJLElBQUlnSSxJQUFJMUgsR0FBRyxNQUFNbUUsS0FBSyxNQUFNLE1BQU0sR0FBR25HLEVBQUUsR0FBR3NMLEVBQUUsTUFBTTVKLEVBQUVpSSxHQUFHLEdBQUc5SixFQUFFLEdBQUc4QixFQUFFLE1BQU1LLEVBQUUwSCxHQUFHLEdBQUcxSCxFQUFFLE9BQU9tRSxFQUFFa0osR0FBRzNGLEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE9BQU9xRSxFQUFFeUYsR0FBRzdCLEVBQUU1RCxJQUFJLEdBQUdBLEVBQUUvRixFQUFFLEdBQUcwSixJQUFJdkQsRUFBRXRHLEVBQUUsTUFBTSxHQUFHNkIsR0FBRyxNQUFNcUUsRUFBRTRELEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHbkcsRUFBRSxHQUFHd0wsRUFBRSxNQUFNOUosRUFBRWlJLEdBQUcsR0FBRzlKLEVBQUUsR0FBR3dQLEVBQUUsTUFBTXJOLEVBQUUwSCxHQUFHLEdBQUcxSCxFQUFFLE9BQU9tRSxFQUFFbUosR0FBRzVGLEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE9BQU9xRSxFQUFFMEYsR0FBRzlCLEVBQUU1RCxJQUFJLEdBQUdBLEVBQUUvRixFQUFFLEdBQUcwSixJQUFJdkQsRUFBRXRHLEVBQUUsTUFBTSxHQUFHNkIsR0FBRyxNQUFNcUUsRUFBRTRELEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHbkcsRUFBRSxHQUFHeUwsRUFBRSxNQUFNL0osRUFBRWlJLEdBQUcsR0FBRzlKLEVBQUUsR0FBR3lQLEVBQUUsTUFBTXROLEVBQUUwSCxHQUFHLEdBQUcxSCxFQUFFLE9BQU9tRSxFQUFFb0osR0FBRzdGLEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE9BQU9xRSxFQUFFMkYsR0FBRy9CLEVBQUU1RCxJQUFJLEdBQUdBLEVBQUUvRixFQUFFLEdBQUcwSixJQUFJdkQsRUFBRXRHLEVBQUUsTUFBTSxHQUFHNkIsR0FBRyxNQUFNcUUsRUFBRTRELEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHbkcsRUFBRSxHQUFHMEwsRUFBRSxNQUFNaEssRUFBRWlJLEdBQUcsR0FBRzlKLEVBQUUsR0FBRzBQLEVBQUUsTUFBTXZOLEVBQUUwSCxHQUFHLEdBQUcxSCxFQUFFLE9BQU9tRSxFQUFFcUosR0FBRzlGLEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE9BQU9xRSxFQUFFOEYsR0FBR2xDLEVBQUU1RCxJQUFJLEdBQUdBLEVBQUUvRixFQUFFLEdBQUcwSixJQUFJdkQsRUFBRXRHLEVBQUUsTUFBTSxHQUFHNkIsR0FBRyxNQUFNcUUsRUFBRTRELEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHbkcsRUFBRSxHQUFHNkwsRUFBRSxNQUFNbkssRUFBRWlJLEdBQUcsR0FBRzlKLEVBQUUsR0FBRzJQLEVBQUUsTUFBTXhOLEVBQUUwSCxHQUFHLEdBQUcxSCxFQUFFLE9BQU9tRSxFQUFFc0osR0FBRy9GLEVBQUV2RCxJQUFJLEdBQUd6RSxFQUFFLE9BQU9xRSxFQUFFK0YsR0FBR25DLEVBQUU1RCxJQUFJLEdBQUdBLEVBQUUvRixFQUFFLEdBQUcwSixJQUFJdkQsRUFBRXRHLEVBQUUsTUFBTSxHQUFHNkIsR0FBRyxNQUFNcUUsRUFBRTRELEdBQUc1RCxJQUFJLEdBQUc0RCxJQUFJakksSUFBSWdJLElBQUkxSCxHQUFHLE1BQU1tRSxLQUFLLE1BQU0sTUFBTSxHQUFHbkcsRUFBRSxHQUFHOEwsRUFBRSxNQUFNcEssRUFBRWlJLEdBQUcsR0FBRzlKLEVBQUUsR0FBRzRQLEVBQUUsTUFBTXpOLEVBQUUwSCxHQUFHLEdBQUc3SCxHQUFHLElBQUkxQixHQUFHLEdBQUcsQ0FBQyxPQUFPQSxDQUFDLENBQUMsU0FBUzJCLEVBQUU5QixFQUFFSCxFQUFFSyxHQUFHLElBQUlDLEVBQUVDLEVBQUUsSUFBSWdmLFdBQVcsR0FBRzNkLEVBQUUsSUFBSTJkLFdBQVcsR0FBRy9lLEVBQUUsSUFBSXlFLFdBQVcsS0FBS3pCLEVBQUVuRCxFQUFFLElBQUlFLEVBQUUsR0FBRyxXQUFXQSxFQUFFLEdBQUcsV0FBV0EsRUFBRSxHQUFHLFdBQVdBLEVBQUUsR0FBRyxXQUFXQSxFQUFFLEdBQUcsV0FBV0EsRUFBRSxHQUFHLFdBQVdBLEVBQUUsR0FBRyxVQUFVQSxFQUFFLEdBQUcsV0FBV3FCLEVBQUUsR0FBRyxXQUFXQSxFQUFFLEdBQUcsV0FBV0EsRUFBRSxHQUFHLFdBQVdBLEVBQUUsR0FBRyxXQUFXQSxFQUFFLEdBQUcsV0FBV0EsRUFBRSxHQUFHLFVBQVVBLEVBQUUsR0FBRyxXQUFXQSxFQUFFLEdBQUcsVUFBVUksRUFBRXpCLEVBQUVxQixFQUFFNUIsRUFBRUssR0FBR0EsR0FBRyxJQUFJQyxFQUFFLEVBQUVBLEVBQUVELEVBQUVDLElBQUlFLEVBQUVGLEdBQUdOLEVBQUV3RCxFQUFFbkQsRUFBRUMsR0FBRyxJQUFJRSxFQUFFSCxHQUFHLElBQUlHLEdBQUdILEVBQUUsSUFBSSxLQUFLQSxFQUFFLElBQUksRUFBRSxJQUFJLEdBQUcsRUFBRWdDLEVBQUU3QixFQUFFSCxFQUFFLEVBQUVtRCxFQUFFLFVBQVUsRUFBRUEsR0FBRyxHQUFHeEIsRUFBRXpCLEVBQUVxQixFQUFFcEIsRUFBRUgsR0FBR0MsRUFBRSxFQUFFQSxFQUFFLEVBQUVBLElBQUkrQixFQUFFbEMsRUFBRSxFQUFFRyxFQUFFQyxFQUFFRCxHQUFHc0IsRUFBRXRCLElBQUksT0FBTyxDQUFDLENBQUMsU0FBU3dZLEVBQUUzWSxFQUFFRSxHQUFHLElBQUlDLEVBQUVOLElBQUlPLEVBQUVQLElBQUk0QixFQUFFNUIsSUFBSVEsRUFBRVIsSUFBSXdELEVBQUV4RCxJQUFJWSxFQUFFWixJQUFJUyxFQUFFVCxJQUFJOEQsRUFBRTlELElBQUkyQixFQUFFM0IsSUFBSTZMLEVBQUV2TCxFQUFFSCxFQUFFLEdBQUdBLEVBQUUsSUFBSTBMLEVBQUVsSyxFQUFFdEIsRUFBRSxHQUFHQSxFQUFFLElBQUkyTCxFQUFFMUwsRUFBRUEsRUFBRXFCLEdBQUdpSyxFQUFFckwsRUFBRUosRUFBRSxHQUFHQSxFQUFFLElBQUl5TCxFQUFFakssRUFBRXRCLEVBQUUsR0FBR0EsRUFBRSxJQUFJMkwsRUFBRXpMLEVBQUVBLEVBQUVvQixHQUFHcUssRUFBRXBLLEVBQUV6QixFQUFFLEdBQUdFLEVBQUUsSUFBSTJMLEVBQUVwSyxFQUFFQSxFQUFFNkIsR0FBR3VJLEVBQUV4TCxFQUFFTCxFQUFFLEdBQUdFLEVBQUUsSUFBSXVMLEVBQUVwTCxFQUFFQSxFQUFFQSxHQUFHcUwsRUFBRXJJLEVBQUVqRCxFQUFFRCxHQUFHdUwsRUFBRWpMLEVBQUVKLEVBQUVvQixHQUFHZ0ssRUFBRW5MLEVBQUVELEVBQUVvQixHQUFHZ0ssRUFBRTlILEVBQUV2RCxFQUFFRCxHQUFHMEwsRUFBRTdMLEVBQUUsR0FBR3FELEVBQUU1QyxHQUFHb0wsRUFBRTdMLEVBQUUsR0FBRzJELEVBQUVyRCxHQUFHdUwsRUFBRTdMLEVBQUUsR0FBR00sRUFBRUcsR0FBR29MLEVBQUU3TCxFQUFFLEdBQUdxRCxFQUFFTSxFQUFFLENBQUMsU0FBUytWLEVBQUUxWixFQUFFSCxFQUFFSyxHQUFHLElBQUlDLEVBQUUsSUFBSUEsRUFBRSxFQUFFQSxFQUFFLEVBQUVBLElBQUlxSyxFQUFFeEssRUFBRUcsR0FBR04sRUFBRU0sR0FBR0QsRUFBRSxDQUFDLFNBQVM4YyxFQUFFaGQsRUFBRUUsR0FBRyxJQUFJQyxFQUFFTixJQUFJTyxFQUFFUCxJQUFJNEIsRUFBRTVCLElBQUlrQyxFQUFFTixFQUFFdkIsRUFBRSxJQUFJMkwsRUFBRTFMLEVBQUVELEVBQUUsR0FBR3VCLEdBQUdvSyxFQUFFekwsRUFBRUYsRUFBRSxHQUFHdUIsR0FBR3NKLEVBQUUvSyxFQUFFSSxHQUFHSixFQUFFLEtBQUtzTCxFQUFFbkwsSUFBSSxDQUFDLENBQUMsU0FBU3NsQixHQUFHemxCLEVBQUVILEVBQUVLLEdBQUcsSUFBSUMsRUFBRUMsRUFBRSxJQUFJdUosRUFBRTNKLEVBQUUsR0FBR3lCLEdBQUdrSSxFQUFFM0osRUFBRSxHQUFHSyxHQUFHc0osRUFBRTNKLEVBQUUsR0FBR0ssR0FBR3NKLEVBQUUzSixFQUFFLEdBQUd5QixHQUFHckIsRUFBRSxJQUFJQSxHQUFHLElBQUlBLEVBQUVzWixFQUFFMVosRUFBRUgsRUFBRU0sRUFBRUQsRUFBRUUsRUFBRSxFQUFFLEtBQUssRUFBRUEsR0FBRyxHQUFHdVksRUFBRTlZLEVBQUVHLEdBQUcyWSxFQUFFM1ksRUFBRUEsR0FBRzBaLEVBQUUxWixFQUFFSCxFQUFFTSxFQUFFLENBQUMsU0FBU3VsQixHQUFHMWxCLEVBQUVFLEdBQUcsSUFBSUMsRUFBRSxDQUFDTixJQUFJQSxJQUFJQSxJQUFJQSxLQUFLOEosRUFBRXhKLEVBQUUsR0FBR0csR0FBR3FKLEVBQUV4SixFQUFFLEdBQUd3RCxHQUFHZ0csRUFBRXhKLEVBQUUsR0FBR0UsR0FBR3dMLEVBQUUxTCxFQUFFLEdBQUdHLEVBQUVxRCxHQUFHOGhCLEdBQUd6bEIsRUFBRUcsRUFBRUQsRUFBRSxDQUFDLFNBQVN5bEIsR0FBRzNsQixFQUFFRyxFQUFFQyxHQUFHLElBQUlxQixFQUFFcEIsRUFBRSxJQUFJeUUsV0FBVyxJQUFJekIsRUFBRSxDQUFDeEQsSUFBSUEsSUFBSUEsSUFBSUEsS0FBSyxJQUFJTyxHQUFHRixFQUFFQyxFQUFFLElBQUkyQixFQUFFekIsRUFBRUYsRUFBRSxJQUFJRSxFQUFFLElBQUksSUFBSUEsRUFBRSxLQUFLLElBQUlBLEVBQUUsS0FBSyxHQUFHcWxCLEdBQUdyaUIsRUFBRWhELEdBQUcyYyxFQUFFaGQsRUFBRXFELEdBQUc1QixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSXRCLEVBQUVzQixFQUFFLElBQUl6QixFQUFFeUIsR0FBRyxPQUFPLENBQUMsQ0FBQyxJQUFJbWtCLEdBQUcsSUFBSTVHLGFBQWEsQ0FBQyxJQUFJLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssU0FBUzZHLEdBQUc3bEIsRUFBRUgsR0FBRyxJQUFJSyxFQUFFQyxFQUFFQyxFQUFFcUIsRUFBRSxJQUFJdEIsRUFBRSxHQUFHQSxHQUFHLEtBQUtBLEVBQUUsQ0FBQyxJQUFJRCxFQUFFLEVBQUVFLEVBQUVELEVBQUUsR0FBR3NCLEVBQUV0QixFQUFFLEdBQUdDLEVBQUVxQixJQUFJckIsRUFBRVAsRUFBRU8sSUFBSUYsRUFBRSxHQUFHTCxFQUFFTSxHQUFHeWxCLEdBQUd4bEIsR0FBR0QsRUFBRSxLQUFLRCxFQUFFZ0UsS0FBS0MsT0FBT3RFLEVBQUVPLEdBQUcsS0FBSyxLQUFLUCxFQUFFTyxJQUFJLElBQUlGLEVBQUVMLEVBQUVPLElBQUlGLEVBQUVMLEVBQUVNLEdBQUcsQ0FBQyxDQUFDLElBQUlELEVBQUUsRUFBRUUsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlQLEVBQUVPLElBQUlGLEdBQUdMLEVBQUUsS0FBSyxHQUFHK2xCLEdBQUd4bEIsR0FBR0YsRUFBRUwsRUFBRU8sSUFBSSxFQUFFUCxFQUFFTyxJQUFJLElBQUksSUFBSUEsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlQLEVBQUVPLElBQUlGLEVBQUUwbEIsR0FBR3hsQixHQUFHLElBQUlELEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJTixFQUFFTSxFQUFFLElBQUlOLEVBQUVNLElBQUksRUFBRUgsRUFBRUcsR0FBRyxJQUFJTixFQUFFTSxFQUFFLENBQUMsU0FBUzJsQixHQUFHOWxCLEdBQUcsSUFBSUgsRUFBRUssRUFBRSxJQUFJOGUsYUFBYSxJQUFJLElBQUluZixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUssRUFBRUwsR0FBR0csRUFBRUgsR0FBRyxJQUFJQSxFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUcsRUFBRUgsR0FBRyxFQUFFZ21CLEdBQUc3bEIsRUFBRUUsRUFBRSxDQUFDLFNBQVM2bEIsR0FBRy9sQixFQUFFRSxFQUFFQyxFQUFFQyxHQUFHLElBQUlxQixFQUFFcEIsRUFBRWdELEVBQUUsSUFBSXlCLFdBQVcsSUFBSXJFLEVBQUUsSUFBSXFFLFdBQVcsSUFBSXhCLEVBQUUsSUFBSXdCLFdBQVcsSUFBSXhFLEVBQUUsSUFBSTBlLGFBQWEsSUFBSXJiLEVBQUUsQ0FBQzlELElBQUlBLElBQUlBLElBQUlBLEtBQUtpQyxFQUFFdUIsRUFBRWpELEVBQUUsSUFBSWlELEVBQUUsSUFBSSxJQUFJQSxFQUFFLEtBQUssSUFBSUEsRUFBRSxLQUFLLEdBQUcsSUFBSTdCLEVBQUVyQixFQUFFLEdBQUcsSUFBSXNCLEVBQUUsRUFBRUEsRUFBRXRCLEVBQUVzQixJQUFJekIsRUFBRSxHQUFHeUIsR0FBR3ZCLEVBQUV1QixHQUFHLElBQUlBLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJekIsRUFBRSxHQUFHeUIsR0FBRzRCLEVBQUUsR0FBRzVCLEdBQUcsSUFBSUssRUFBRXdCLEVBQUV0RCxFQUFFd0QsU0FBUyxJQUFJckQsRUFBRSxJQUFJMmxCLEdBQUd4aUIsR0FBR29pQixHQUFHL2hCLEVBQUVMLEdBQUcwWixFQUFFaGQsRUFBRTJELEdBQUdsQyxFQUFFLEdBQUdBLEVBQUUsR0FBR0EsSUFBSXpCLEVBQUV5QixHQUFHckIsRUFBRXFCLEdBQUcsSUFBSUssRUFBRXJCLEVBQUVULEVBQUVHLEVBQUUsSUFBSTJsQixHQUFHcmxCLEdBQUdnQixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSW5CLEVBQUVtQixHQUFHLEVBQUUsSUFBSUEsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUluQixFQUFFbUIsR0FBRzZCLEVBQUU3QixHQUFHLElBQUlBLEVBQUUsRUFBRUEsRUFBRSxHQUFHQSxJQUFJLElBQUlwQixFQUFFLEVBQUVBLEVBQUUsR0FBR0EsSUFBSUMsRUFBRW1CLEVBQUVwQixJQUFJSSxFQUFFZ0IsR0FBRzRCLEVBQUVoRCxHQUFHLE9BQU93bEIsR0FBRzdsQixFQUFFd0QsU0FBUyxJQUFJbEQsR0FBR2tCLENBQUMsQ0FBQyxTQUFTd2tCLEdBQUdobUIsRUFBRUUsRUFBRUMsRUFBRUMsR0FBRyxJQUFJaUQsRUFBRUMsRUFBRSxJQUFJd0IsV0FBVyxJQUFJeEUsRUFBRSxJQUFJd0UsV0FBVyxJQUFJbkIsRUFBRSxDQUFDOUQsSUFBSUEsSUFBSUEsSUFBSUEsS0FBS3FDLEVBQUUsQ0FBQ3JDLElBQUlBLElBQUlBLElBQUlBLEtBQUssR0FBR00sRUFBRSxHQUFHLE9BQU8sRUFBRSxHQUFHLFNBQVNILEVBQUVFLEdBQUcsSUFBSUMsRUFBRU4sSUFBSU8sRUFBRVAsSUFBSXdELEVBQUV4RCxJQUFJeUQsRUFBRXpELElBQUlTLEVBQUVULElBQUk4RCxFQUFFOUQsSUFBSXFDLEVBQUVyQyxJQUFJLE9BQU84SixFQUFFM0osRUFBRSxHQUFHSyxHQUFHbUwsRUFBRXhMLEVBQUUsR0FBR0UsR0FBRzRMLEVBQUV6SSxFQUFFckQsRUFBRSxJQUFJNkwsRUFBRXZJLEVBQUVELEVBQUU1QyxHQUFHaUwsRUFBRXJJLEVBQUVBLEVBQUVyRCxFQUFFLElBQUl5TCxFQUFFbkksRUFBRXRELEVBQUUsR0FBR3NELEdBQUd3SSxFQUFFeEwsRUFBRWdELEdBQUd3SSxFQUFFbkksRUFBRXJELEdBQUd1TCxFQUFFM0osRUFBRXlCLEVBQUVyRCxHQUFHdUwsRUFBRTFMLEVBQUUrQixFQUFFbUIsR0FBR3dJLEVBQUUxTCxFQUFFQSxFQUFFbUQsR0FBRzhMLEVBQUVqUCxFQUFFQSxHQUFHMEwsRUFBRTFMLEVBQUVBLEVBQUVrRCxHQUFHd0ksRUFBRTFMLEVBQUVBLEVBQUVtRCxHQUFHdUksRUFBRTFMLEVBQUVBLEVBQUVtRCxHQUFHdUksRUFBRTdMLEVBQUUsR0FBR0csRUFBRW1ELEdBQUd3SSxFQUFFMUwsRUFBRUosRUFBRSxJQUFJNkwsRUFBRXpMLEVBQUVBLEVBQUVrRCxHQUFHK0gsRUFBRWpMLEVBQUVpRCxJQUFJd0ksRUFBRTdMLEVBQUUsR0FBR0EsRUFBRSxHQUFHd0IsR0FBR3NLLEVBQUUxTCxFQUFFSixFQUFFLElBQUk2TCxFQUFFekwsRUFBRUEsRUFBRWtELEdBQUcrSCxFQUFFakwsRUFBRWlELElBQUksR0FBR2lJLEVBQUV0TCxFQUFFLE1BQU1FLEVBQUUsS0FBSyxHQUFHd0wsRUFBRTFMLEVBQUUsR0FBR3lCLEVBQUV6QixFQUFFLElBQUk2TCxFQUFFN0wsRUFBRSxHQUFHQSxFQUFFLEdBQUdBLEVBQUUsSUFBSSxFQUFFLENBQXhWLENBQTBWa0MsRUFBRTlCLEdBQUcsT0FBTyxFQUFFLElBQUlpRCxFQUFFLEVBQUVBLEVBQUVsRCxFQUFFa0QsSUFBSXJELEVBQUVxRCxHQUFHbkQsRUFBRW1ELEdBQUcsSUFBSUEsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlyRCxFQUFFcUQsRUFBRSxJQUFJakQsRUFBRWlELEdBQUcsR0FBR3ZCLEVBQUV4QixFQUFFTixFQUFFRyxHQUFHMmxCLEdBQUd4bEIsR0FBR21sQixHQUFHOWhCLEVBQUV6QixFQUFFNUIsR0FBR29sQixHQUFHeGpCLEVBQUVoQyxFQUFFc0QsU0FBUyxLQUFLbVYsRUFBRWhWLEVBQUV6QixHQUFHOGEsRUFBRTFaLEVBQUVLLEdBQUd4RCxHQUFHLEdBQUdnQyxFQUFFakMsRUFBRSxFQUFFb0QsRUFBRSxHQUFHLENBQUMsSUFBSUQsRUFBRSxFQUFFQSxFQUFFbEQsRUFBRWtELElBQUlyRCxFQUFFcUQsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUlBLEVBQUUsRUFBRUEsRUFBRWxELEVBQUVrRCxJQUFJckQsRUFBRXFELEdBQUduRCxFQUFFbUQsRUFBRSxJQUFJLE9BQU9sRCxDQUFDLENBQUMsSUFBSThsQixHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHLFNBQVNrUSxHQUFHcjJCLEVBQUVILEdBQUcsR0FBRyxLQUFLRyxFQUFFK0MsT0FBTyxNQUFNLElBQUlzQyxNQUFNLGdCQUFnQixHQUFHLEtBQUt4RixFQUFFa0QsT0FBTyxNQUFNLElBQUlzQyxNQUFNLGlCQUFpQixDQUFDLFNBQVNpeEIsS0FBSyxJQUFJLElBQUl0MkIsRUFBRSxFQUFFQSxFQUFFOEMsVUFBVUMsT0FBTy9DLElBQUksS0FBSzhDLFVBQVU5QyxhQUFhOEUsWUFBWSxNQUFNLElBQUlzQixVQUFVLGtDQUFrQyxDQUFDLFNBQVNtd0IsR0FBR3YyQixHQUFHLElBQUksSUFBSUgsRUFBRSxFQUFFQSxFQUFFRyxFQUFFK0MsT0FBT2xELElBQUlHLEVBQUVILEdBQUcsQ0FBQyxDQUFDRyxFQUFFdzJCLFNBQVMsQ0FBQ0MscUJBQXFCcjBCLEVBQUVzMEIsa0JBQWtCejBCLEVBQUUwMEIsY0FBY3J4QixFQUFFc3hCLDBCQUEwQnYwQixFQUFFdzBCLHNCQUFzQnQwQixFQUFFdTBCLG1CQUFtQjN3QixFQUFFNHdCLDBCQUEwQi8wQixFQUFFZzFCLGlCQUFpQjN5QixFQUFFNHlCLGlCQUFpQjkwQixFQUFFKzBCLGlCQUFpQnh0QixFQUFFeXRCLHNCQUFzQnoxQixFQUFFMDFCLGtCQUFrQnoxQixFQUFFMDFCLHVCQUF1QmhvQixFQUFFaW9CLG9CQUFvQi9uQixFQUFFZ29CLG1CQUFtQi9uQixFQUFFZ29CLFdBQVcsU0FBU3gzQixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFQyxFQUFFcUIsR0FBRyxJQUFJcEIsRUFBRSxJQUFJeUUsV0FBVyxJQUFJLE9BQU95SyxFQUFFbFAsRUFBRUQsRUFBRXFCLEdBQUcrTixFQUFFeFAsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUUsRUFBRSxFQUFFbzNCLGdCQUFnQixTQUFTejNCLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixHQUFHLElBQUlwQixFQUFFLElBQUl5RSxXQUFXLElBQUksT0FBT3lLLEVBQUVsUCxFQUFFRCxFQUFFcUIsR0FBR2dPLEVBQUV6UCxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFRSxFQUFFLEVBQUVxM0IsbUJBQW1CcG9CLEVBQUVxb0IsWUFBWTcxQixFQUFFODFCLFlBQVk3UixHQUFHOFIsb0JBQW9CbFMsR0FBR21TLGlCQUFpQjlSLEdBQUcrUiwwQkFBMEIsR0FBR0MsNEJBQTRCLEdBQUdDLDJCQUEyQixHQUFHQyw4QkFBOEIsR0FBR0Msd0JBQXdCLEdBQUdDLDhCQUE4QixHQUFHQywwQkFBMEIsR0FBR0MsMEJBQTBCLEdBQUdDLHlCQUF5QixHQUFHQyxzQkFBc0IsR0FBR0MscUJBQXFCLEdBQUdDLHdCQUF3QixHQUFHQyxrQkFBa0IxUyxHQUFHMlMsMkJBQTJCMVMsR0FBRzJTLDJCQUEyQjFTLEdBQUcyUyxzQkFBc0IsR0FBR0Msa0JBQWtCLEdBQUdDLEdBQUduNUIsRUFBRXlMLEVBQUU3SyxFQUFFaUwsRUFBRWthLEdBQUdxVCxVQUFVbHVCLEVBQUVtdUIsWUFBWTF0QixFQUFFNEQsRUFBRXZELEVBQUV2SixFQUFFbUosRUFBRW5HLEVBQUV3RyxFQUFFa1IsRUFBRXRSLEVBQUV5dEIsUUFBUS9wQixFQUFFZ3FCLElBQUl6Z0IsRUFBRTBnQixTQUFTMXZCLEVBQUUydkIsS0FBS3pULEdBQUcwVCxXQUFXOVQsR0FBRytULFdBQVc5VCxJQUFJMWxCLEVBQUVrUyxZQUFZLFNBQVNsUyxHQUFHLElBQUlILEVBQUUsSUFBSWlGLFdBQVc5RSxHQUFHLE9BQU9FLEVBQUVMLEVBQUVHLEdBQUdILENBQUMsRUFBRUcsRUFBRXk1QixVQUFVLFNBQVN6NUIsRUFBRUgsRUFBRUssR0FBR28yQixHQUFHdDJCLEVBQUVILEVBQUVLLEdBQUdtMkIsR0FBR24yQixFQUFFTCxHQUFHLElBQUksSUFBSU0sRUFBRSxJQUFJMkUsV0FBVyxHQUFHOUUsRUFBRStDLFFBQVEzQyxFQUFFLElBQUkwRSxXQUFXM0UsRUFBRTRDLFFBQVF0QixFQUFFLEVBQUVBLEVBQUV6QixFQUFFK0MsT0FBT3RCLElBQUl0QixFQUFFc0IsRUFBRSxJQUFJekIsRUFBRXlCLEdBQUcsT0FBT2lJLEVBQUV0SixFQUFFRCxFQUFFQSxFQUFFNEMsT0FBT2xELEVBQUVLLEdBQUdFLEVBQUVvRCxTQUFTLEdBQUcsRUFBRXhELEVBQUV5NUIsVUFBVWxLLEtBQUssU0FBU3Z2QixFQUFFSCxFQUFFSyxHQUFHbzJCLEdBQUd0MkIsRUFBRUgsRUFBRUssR0FBR20yQixHQUFHbjJCLEVBQUVMLEdBQUcsSUFBSSxJQUFJTSxFQUFFLElBQUkyRSxXQUFXLEdBQUc5RSxFQUFFK0MsUUFBUTNDLEVBQUUsSUFBSTBFLFdBQVczRSxFQUFFNEMsUUFBUXRCLEVBQUUsRUFBRUEsRUFBRXpCLEVBQUUrQyxPQUFPdEIsSUFBSXRCLEVBQUVzQixFQUFFLElBQUl6QixFQUFFeUIsR0FBRyxPQUFPdEIsRUFBRTRDLE9BQU8sSUFBSSxJQUFJckIsRUFBRXRCLEVBQUVELEVBQUVBLEVBQUU0QyxPQUFPbEQsRUFBRUssR0FBRyxLQUFLRSxFQUFFb0QsU0FBUyxHQUFHLEVBQUV4RCxFQUFFeTVCLFVBQVVDLFVBQVUsR0FBRzE1QixFQUFFeTVCLFVBQVVFLFlBQVksR0FBRzM1QixFQUFFeTVCLFVBQVVHLGVBQWUsR0FBRzU1QixFQUFFNjVCLFdBQVcsU0FBUzc1QixFQUFFSCxHQUFHLEdBQUd5MkIsR0FBR3QyQixFQUFFSCxHQUFHLEtBQUtHLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sY0FBYyxHQUFHLEtBQUt4RixFQUFFa0QsT0FBTyxNQUFNLElBQUlzQyxNQUFNLGNBQWMsSUFBSW5GLEVBQUUsSUFBSTRFLFdBQVcsSUFBSSxPQUFPbkQsRUFBRXpCLEVBQUVGLEVBQUVILEdBQUdLLENBQUMsRUFBRUYsRUFBRTY1QixXQUFXM1EsS0FBSyxTQUFTbHBCLEdBQUcsR0FBR3MyQixHQUFHdDJCLEdBQUcsS0FBS0EsRUFBRStDLE9BQU8sTUFBTSxJQUFJc0MsTUFBTSxjQUFjLElBQUl4RixFQUFFLElBQUlpRixXQUFXLElBQUksT0FBT3VLLEVBQUV4UCxFQUFFRyxHQUFHSCxDQUFDLEVBQUVHLEVBQUU2NUIsV0FBV0MsYUFBYSxHQUFHOTVCLEVBQUU2NUIsV0FBV0UsbUJBQW1CLEdBQUcvNUIsRUFBRWc2QixJQUFJLFNBQVNuNkIsRUFBRUssRUFBRUMsRUFBRUMsR0FBRyxJQUFJcUIsRUFBRXpCLEVBQUVnNkIsSUFBSUMsT0FBTzk1QixFQUFFQyxHQUFHLE9BQU9KLEVBQUV5NUIsVUFBVTU1QixFQUFFSyxFQUFFdUIsRUFBRSxFQUFFekIsRUFBRWc2QixJQUFJQyxPQUFPLFNBQVNqNkIsRUFBRUgsR0FBR3kyQixHQUFHdDJCLEVBQUVILEdBQUcsU0FBU0csRUFBRUgsR0FBRyxHQUFHLEtBQUtHLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sdUJBQXVCLEdBQUcsS0FBS3hGLEVBQUVrRCxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sc0JBQXNCLENBQTdILENBQStIckYsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLElBQUk0RSxXQUFXLElBQUksT0FBT3lLLEVBQUVyUCxFQUFFRixFQUFFSCxHQUFHSyxDQUFDLEVBQUVGLEVBQUVnNkIsSUFBSUUsTUFBTWw2QixFQUFFeTVCLFVBQVV6NUIsRUFBRWc2QixJQUFJekssS0FBSyxTQUFTMXZCLEVBQUVLLEVBQUVDLEVBQUVDLEdBQUcsSUFBSXFCLEVBQUV6QixFQUFFZzZCLElBQUlDLE9BQU85NUIsRUFBRUMsR0FBRyxPQUFPSixFQUFFeTVCLFVBQVVsSyxLQUFLMXZCLEVBQUVLLEVBQUV1QixFQUFFLEVBQUV6QixFQUFFZzZCLElBQUl6SyxLQUFLMkssTUFBTWw2QixFQUFFeTVCLFVBQVVsSyxLQUFLdnZCLEVBQUVnNkIsSUFBSUcsUUFBUSxXQUFXLElBQUluNkIsRUFBRSxJQUFJOEUsV0FBVyxJQUFJakYsRUFBRSxJQUFJaUYsV0FBVyxJQUFJLE9BQU93SyxFQUFFdFAsRUFBRUgsR0FBRyxDQUFDdTZCLFVBQVVwNkIsRUFBRXE2QixVQUFVeDZCLEVBQUUsRUFBRUcsRUFBRWc2QixJQUFJRyxRQUFRRyxjQUFjLFNBQVN0NkIsR0FBRyxHQUFHczJCLEdBQUd0MkIsR0FBRyxLQUFLQSxFQUFFK0MsT0FBTyxNQUFNLElBQUlzQyxNQUFNLHVCQUF1QixJQUFJeEYsRUFBRSxJQUFJaUYsV0FBVyxJQUFJLE9BQU91SyxFQUFFeFAsRUFBRUcsR0FBRyxDQUFDbzZCLFVBQVV2NkIsRUFBRXc2QixVQUFVLElBQUl2MUIsV0FBVzlFLEdBQUcsRUFBRUEsRUFBRWc2QixJQUFJTyxnQkFBZ0IsR0FBR3Y2QixFQUFFZzZCLElBQUlRLGdCQUFnQixHQUFHeDZCLEVBQUVnNkIsSUFBSVMsZ0JBQWdCLEdBQUd6NkIsRUFBRWc2QixJQUFJTCxZQUFZLEdBQUczNUIsRUFBRWc2QixJQUFJSixlQUFlNTVCLEVBQUV5NUIsVUFBVUcsZUFBZTU1QixFQUFFMDZCLEtBQUssU0FBUzE2QixFQUFFSCxHQUFHLEdBQUd5MkIsR0FBR3QyQixFQUFFSCxHQUFHQSxFQUFFa0QsU0FBU29qQixHQUFHLE1BQU0sSUFBSTlnQixNQUFNLHVCQUF1QixJQUFJbkYsRUFBRSxJQUFJNEUsV0FBV21oQixHQUFHam1CLEVBQUUrQyxRQUFRLE9BQU9nakIsR0FBRzdsQixFQUFFRixFQUFFQSxFQUFFK0MsT0FBT2xELEdBQUdLLENBQUMsRUFBRUYsRUFBRTA2QixLQUFLbkwsS0FBSyxTQUFTdnZCLEVBQUVILEdBQUcsR0FBR3kyQixHQUFHdDJCLEVBQUVILEdBQUdBLEVBQUVrRCxTQUFTbWpCLEdBQUcsTUFBTSxJQUFJN2dCLE1BQU0sdUJBQXVCLElBQUluRixFQUFFLElBQUk0RSxXQUFXOUUsRUFBRStDLFFBQVE1QyxFQUFFNmxCLEdBQUc5bEIsRUFBRUYsRUFBRUEsRUFBRStDLE9BQU9sRCxHQUFHLEdBQUdNLEVBQUUsRUFBRSxPQUFPLEtBQUssSUFBSSxJQUFJQyxFQUFFLElBQUkwRSxXQUFXM0UsR0FBR3NCLEVBQUUsRUFBRUEsRUFBRXJCLEVBQUUyQyxPQUFPdEIsSUFBSXJCLEVBQUVxQixHQUFHdkIsRUFBRXVCLEdBQUcsT0FBT3JCLENBQUMsRUFBRUosRUFBRTA2QixLQUFLQyxTQUFTLFNBQVM5NkIsRUFBRUssR0FBRyxJQUFJLElBQUlDLEVBQUVILEVBQUUwNkIsS0FBSzc2QixFQUFFSyxHQUFHRSxFQUFFLElBQUkwRSxXQUFXbWhCLElBQUl4a0IsRUFBRSxFQUFFQSxFQUFFckIsRUFBRTJDLE9BQU90QixJQUFJckIsRUFBRXFCLEdBQUd0QixFQUFFc0IsR0FBRyxPQUFPckIsQ0FBQyxFQUFFSixFQUFFMDZCLEtBQUtDLFNBQVNDLE9BQU8sU0FBUzU2QixFQUFFSCxFQUFFSyxHQUFHLEdBQUdvMkIsR0FBR3QyQixFQUFFSCxFQUFFSyxHQUFHTCxFQUFFa0QsU0FBU2tqQixHQUFHLE1BQU0sSUFBSTVnQixNQUFNLHNCQUFzQixHQUFHbkYsRUFBRTZDLFNBQVNtakIsR0FBRyxNQUFNLElBQUk3Z0IsTUFBTSx1QkFBdUIsSUFBSWxGLEVBQUVDLEVBQUUsSUFBSTBFLFdBQVdtaEIsR0FBR2ptQixFQUFFK0MsUUFBUXRCLEVBQUUsSUFBSXFELFdBQVdtaEIsR0FBR2ptQixFQUFFK0MsUUFBUSxJQUFJNUMsRUFBRSxFQUFFQSxFQUFFOGxCLEdBQUc5bEIsSUFBSUMsRUFBRUQsR0FBR04sRUFBRU0sR0FBRyxJQUFJQSxFQUFFLEVBQUVBLEVBQUVILEVBQUUrQyxPQUFPNUMsSUFBSUMsRUFBRUQsRUFBRThsQixJQUFJam1CLEVBQUVHLEdBQUcsT0FBTzZsQixHQUFHdmtCLEVBQUVyQixFQUFFQSxFQUFFMkMsT0FBTzdDLElBQUksQ0FBQyxFQUFFRixFQUFFMDZCLEtBQUtQLFFBQVEsV0FBVyxJQUFJbjZCLEVBQUUsSUFBSThFLFdBQVdvaEIsSUFBSXJtQixFQUFFLElBQUlpRixXQUFXcWhCLElBQUksT0FBT1IsR0FBRzNsQixFQUFFSCxHQUFHLENBQUN1NkIsVUFBVXA2QixFQUFFcTZCLFVBQVV4NkIsRUFBRSxFQUFFRyxFQUFFMDZCLEtBQUtQLFFBQVFHLGNBQWMsU0FBU3Q2QixHQUFHLEdBQUdzMkIsR0FBR3QyQixHQUFHQSxFQUFFK0MsU0FBU29qQixHQUFHLE1BQU0sSUFBSTlnQixNQUFNLHVCQUF1QixJQUFJLElBQUl4RixFQUFFLElBQUlpRixXQUFXb2hCLElBQUlobUIsRUFBRSxFQUFFQSxFQUFFTCxFQUFFa0QsT0FBTzdDLElBQUlMLEVBQUVLLEdBQUdGLEVBQUUsR0FBR0UsR0FBRyxNQUFNLENBQUNrNkIsVUFBVXY2QixFQUFFdzZCLFVBQVUsSUFBSXYxQixXQUFXOUUsR0FBRyxFQUFFQSxFQUFFMDZCLEtBQUtQLFFBQVFVLFNBQVMsU0FBUzc2QixHQUFHLEdBQUdzMkIsR0FBR3QyQixHQUFHLEtBQUtBLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0saUJBQWlCLElBQUksSUFBSXhGLEVBQUUsSUFBSWlGLFdBQVdvaEIsSUFBSWhtQixFQUFFLElBQUk0RSxXQUFXcWhCLElBQUlobUIsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQUlELEVBQUVDLEdBQUdILEVBQUVHLEdBQUcsT0FBT3dsQixHQUFHOWxCLEVBQUVLLEdBQUUsR0FBSSxDQUFDazZCLFVBQVV2NkIsRUFBRXc2QixVQUFVbjZCLEVBQUUsRUFBRUYsRUFBRTA2QixLQUFLSCxnQkFBZ0JyVSxHQUFHbG1CLEVBQUUwNkIsS0FBS0YsZ0JBQWdCclUsR0FBR25tQixFQUFFMDZCLEtBQUtJLFdBQVcsR0FBRzk2QixFQUFFMDZCLEtBQUtLLGdCQUFnQjlVLEdBQUdqbUIsRUFBRW1rQixLQUFLLFNBQVNua0IsR0FBR3MyQixHQUFHdDJCLEdBQUcsSUFBSUgsRUFBRSxJQUFJaUYsV0FBVyxJQUFJLE9BQU9oRCxFQUFFakMsRUFBRUcsRUFBRUEsRUFBRStDLFFBQVFsRCxDQUFDLEVBQUVHLEVBQUVta0IsS0FBSzZXLFdBQVcsR0FBR2g3QixFQUFFNDZCLE9BQU8sU0FBUzU2QixFQUFFSCxHQUFHLE9BQU95MkIsR0FBR3QyQixFQUFFSCxHQUFHLElBQUlHLEVBQUUrQyxRQUFRLElBQUlsRCxFQUFFa0QsUUFBUS9DLEVBQUUrQyxTQUFTbEQsRUFBRWtELFFBQVEsSUFBSXJDLEVBQUVWLEVBQUUsRUFBRUgsRUFBRSxFQUFFRyxFQUFFK0MsT0FBTyxFQUFFL0MsRUFBRWk3QixRQUFRLFNBQVNqN0IsR0FBR0UsRUFBRUYsQ0FBQyxFQUFFLFdBQVcsSUFBSUgsRUFBRSxvQkFBb0JDLEtBQUtBLEtBQUtrUyxRQUFRbFMsS0FBS283QixTQUFTLEtBQUtyN0IsR0FBR0EsRUFBRW9TLGdCQUFnQmpTLEVBQUVpN0IsU0FBUSxTQUFVajdCLEVBQUVFLEdBQUcsSUFBSUMsRUFBRUMsRUFBRSxJQUFJMEUsV0FBVzVFLEdBQUcsSUFBSUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFQyxHQUFHLE1BQU1OLEVBQUVvUyxnQkFBZ0I3UixFQUFFb0QsU0FBU3JELEVBQUVBLEVBQUUrRCxLQUFLK08sSUFBSS9TLEVBQUVDLEVBQUUsU0FBUyxJQUFJQSxFQUFFLEVBQUVBLEVBQUVELEVBQUVDLElBQUlILEVBQUVHLEdBQUdDLEVBQUVELEdBQUdvMkIsR0FBR24yQixFQUFHLEtBQWlDUCxFQUFFLG9CQUFRLFFBQVlBLEVBQUVxUyxhQUFhbFMsRUFBRWk3QixTQUFRLFNBQVVqN0IsRUFBRUUsR0FBRyxJQUFJQyxFQUFFQyxFQUFFUCxFQUFFcVMsWUFBWWhTLEdBQUcsSUFBSUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFQyxJQUFJSCxFQUFFRyxHQUFHQyxFQUFFRCxHQUFHbzJCLEdBQUduMkIsRUFBRyxHQUFFLENBQXhaLEVBQTJaLENBQS95K0IsTUFBaXorQixJQUFTSixHQUFHQSxFQUFFQyxRQUFRRCxFQUFFQyxRQUFRSCxLQUFLcTdCLEtBQUtyN0IsS0FBS3E3QixNQUFNLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQ243QixFQUFFSCxFQUFFSyxLQUFLLElBQUlDLEVBQUVELEVBQUUsTUFBTXdXLE9BQU8sTUFBTXJWLFFBQVFqQixHQUFHRixFQUFFLE9BQU9rN0IsMEJBQTBCMzVCLEdBQUd2QixFQUFFLE1BQU1GLEVBQUVDLFFBQVEsQ0FBQ283QixNQUFNLFNBQVNyN0IsRUFBRSxHQUFHSCxFQUFFLDZCQUE2QkssRUFBRSxLQUFLRyxFQUFFLENBQUMsR0FBRyxJQUFJZ0QsRUFBRXJELEVBQUUsaUJBQWlCcUQsSUFBSUEsRUFBRSxDQUFDLG1CQUFtQkEsSUFBSSxNQUFNNUMsRUFBRSxJQUFJTCxFQUFFaUQsRUFBRXhELEVBQUVLLEVBQUVHLEdBQUcsU0FBU2lELEVBQUV0RCxHQUFHLFlBQU8sSUFBU0EsRUFBRXM3QixTQUFTLE9BQU90N0IsRUFBRXM3QixVQUFVdDdCLEVBQUV1N0IsS0FBS3A3QixFQUFFK0YsS0FBS2xHLEVBQUVzN0IsUUFBUSxXQUFXdDdCLENBQUMsQ0FBQytELEtBQUsybUIsT0FBTzhRLE1BQU14N0IsRUFBRSxDQUFDLFdBQVdTLEVBQUVLLElBQUksYUFBYSxDQUFDLEVBQUVkLElBQUlrckIsS0FBS25uQixLQUFLMDNCLFlBQVlELE1BQU14N0IsRUFBRSxDQUFDLEtBQUssTUFBTUgsUUFBUVksRUFBRUssSUFBSSxVQUFVLENBQUMsRUFBRWQsR0FBRyxJQUFJSCxFQUFFa3hCLEdBQUcsTUFBTSxJQUFJMXJCLE1BQU0sb0JBQW9CeEYsRUFBRTZxQixVQUFVLE1BQU0sQ0FBQyxHQUFHM21CLEtBQUsyM0IsaUJBQWlCRixNQUFNeDdCLEVBQUVILEVBQUUsQ0FBQyxLQUFLLElBQUkyRSxPQUFPNlAsVUFBVXJVLEdBQUcsTUFBTXFGLE1BQU0sb0NBQW9DLGFBQWE1RSxFQUFFSyxJQUFJLG1DQUFtQ2QsSUFBSSxDQUFDLEVBQUVILElBQUlxckIsTUFBTW5uQixLQUFLNDNCLG9CQUFvQkgsTUFBTXg3QixFQUFFSCxFQUFFLENBQUMsS0FBSyxJQUFJMkUsT0FBTzZQLFVBQVVyVSxHQUFHLE1BQU1xRixNQUFNLGdDQUFnQyxNQUFNbkYsUUFBUU8sRUFBRUssSUFBSSwyQkFBMkIsQ0FBQ2dTLElBQUk5UyxHQUFHSCxHQUFHLEdBQUcsTUFBTUssRUFBRXdyQixpQkFBWSxJQUFTeHJCLEVBQUVnckIsS0FBSzBRLGNBQWNDLGFBQWEsSUFBSSxJQUFJNzdCLEVBQUUsRUFBRUEsRUFBRUUsRUFBRWdyQixLQUFLMFEsY0FBY0MsYUFBYTk0QixPQUFPL0MsSUFBSUUsRUFBRWdyQixLQUFLMFEsY0FBY0MsYUFBYTc3QixHQUFHc0QsRUFBRXBELEVBQUVnckIsS0FBSzBRLGNBQWNDLGFBQWE3N0IsSUFBSSxPQUFPRSxFQUFFZ3JCLE1BQU1ubkIsS0FBS3djLFNBQVNpYixNQUFNeDdCLEVBQUUsQ0FBQyxXQUFXUyxFQUFFSyxJQUFJLFlBQVksQ0FBQyxFQUFFZCxJQUFJa3JCLEtBQUtubkIsS0FBSyszQixhQUFhTixNQUFNeDdCLEVBQUUsQ0FBQyxXQUFXUyxFQUFFSyxJQUFJLG9CQUFvQixDQUFDLEVBQUVkLElBQUlrckIsS0FBS25uQixLQUFLZzRCLHFCQUFxQlAsTUFBTXg3QixFQUFFSCxFQUFFLEtBQUtLLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxFQUFFLENBQUMsS0FBSyxHQUFHLE9BQU9QLElBQUkyRSxPQUFPNlAsVUFBVXhVLEdBQUcsTUFBTXdGLE1BQU0sb0NBQW9DLEdBQUcsT0FBT25GLElBQUlzRSxPQUFPNlAsVUFBVW5VLEdBQUcsTUFBTW1GLE1BQU0sbUNBQW1DLE1BQU01RCxRQUFRaEIsRUFBRUssSUFBSSxlQUFlZCxpQkFBaUIsQ0FBQ2c4QixXQUFXbjhCLEVBQUVvOEIsVUFBVS83QixFQUFFNFMsSUFBSTNTLEdBQUdDLEdBQUcsR0FBRyxNQUFNcUIsRUFBRWlxQixpQkFBWSxJQUFTanFCLEVBQUV5cEIsS0FBSzJRLGFBQWEsSUFBSSxJQUFJNzdCLEVBQUUsRUFBRUEsRUFBRXlCLEVBQUV5cEIsS0FBSzJRLGFBQWE5NEIsT0FBTy9DLElBQUl5QixFQUFFeXBCLEtBQUsyUSxhQUFhNzdCLEdBQUdzRCxFQUFFN0IsRUFBRXlwQixLQUFLMlEsYUFBYTc3QixJQUFJLE9BQU95QixFQUFFeXBCLE1BQU1ubkIsS0FBS200Qiw0QkFBNEJWLE1BQU14N0IsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxLQUFLQyxFQUFFLENBQUMsS0FBSyxNQUFNcUIsUUFBUWhCLEVBQUVLLElBQUksZUFBZWQsaUJBQWlCLENBQUNtOEIsU0FBU3Q4QixFQUFFdThCLE9BQU9sOEIsRUFBRTRTLElBQUkzUyxHQUFHQyxHQUFHLEdBQUcsTUFBTXFCLEVBQUVpcUIsaUJBQVksSUFBU2pxQixFQUFFeXBCLEtBQUsyUSxhQUFhLElBQUksSUFBSTc3QixFQUFFLEVBQUVBLEVBQUV5QixFQUFFeXBCLEtBQUsyUSxhQUFhOTRCLE9BQU8vQyxJQUFJeUIsRUFBRXlwQixLQUFLMlEsYUFBYTc3QixHQUFHc0QsRUFBRTdCLEVBQUV5cEIsS0FBSzJRLGFBQWE3N0IsSUFBSSxPQUFPeUIsRUFBRXlwQixNQUFNbm5CLEtBQUtzNEIsZ0JBQWdCYixNQUFNeDdCLEVBQUVILEVBQUUsQ0FBQyxLQUFLLE1BQU1LLFFBQVFPLEVBQUVLLElBQUksbUJBQW1CZCxJQUFJLENBQUMsRUFBRUgsR0FBRyxPQUFPLE1BQU1LLEVBQUV3ckIsYUFBYXhyQixFQUFFZ3JCLEtBQUs1bkIsRUFBRXBELEVBQUVnckIsT0FBT2hyQixFQUFFZ3JCLE1BQU1ubkIsS0FBS3U0Qix1QkFBdUJkLE1BQU14N0IsRUFBRUgsRUFBRUssRUFBRSxDQUFDLEtBQUssTUFBTUMsUUFBUU0sRUFBRUssSUFBSSxlQUFlZCxpQkFBaUJILElBQUksQ0FBQyxFQUFFSyxHQUFHLE9BQU8sTUFBTUMsRUFBRXVyQixhQUFhdnJCLEVBQUUrcUIsS0FBSzVuQixFQUFFbkQsRUFBRStxQixPQUFPL3FCLEVBQUUrcUIsTUFBTW5uQixLQUFLdzRCLDhCQUE4QmYsTUFBTXg3QixFQUFFSCxFQUFFLENBQUMsS0FBSyxNQUFNSyxRQUFRTyxFQUFFSyxJQUFJLDRCQUE0QmQsSUFBSSxDQUFDLEVBQUVILEdBQUcsT0FBTyxNQUFNSyxFQUFFd3JCLGFBQWF4ckIsRUFBRWdyQixLQUFLNW5CLEVBQUVwRCxFQUFFZ3JCLE9BQU9ockIsRUFBRWdyQixNQUFNbm5CLEtBQUt5NEIsbUJBQW1CaEIsTUFBTXg3QixFQUFFSCxFQUFFLENBQUMsV0FBV1ksRUFBRUssSUFBSSxlQUFlZCxJQUFJLENBQUMsRUFBRUgsSUFBSXFyQixLQUFLbm5CLEtBQUswNEIsaUJBQWlCakIsTUFBTXg3QixFQUFFSCxFQUFFLENBQUMsV0FBV1ksRUFBRUssSUFBSSxhQUFhZCxJQUFJLENBQUMsRUFBRUgsSUFBSXFyQixLQUFLbm5CLEtBQUsyNEIsYUFBYWxCLE1BQU14N0IsRUFBRSxDQUFDLFdBQVdTLEVBQUVLLElBQUksdUJBQXVCLENBQUMsRUFBRWQsSUFBSWtyQixLQUFLbm5CLEtBQUs0NEIsbUJBQW1CbkIsTUFBTXg3QixFQUFFSCxFQUFFLENBQUMsS0FBSyxNQUFNSyxFQUFFdUIsRUFBRTVCLEdBQUcsYUFBYVksRUFBRXd2QixLQUFLLG1CQUFtQjl2QixFQUFFK0YsS0FBS2xHLEdBQUdFLElBQUlnckIsTUFBTW5uQixLQUFLNjRCLG9CQUFvQnBCLE1BQU14N0IsRUFBRUgsRUFBRSxDQUFDLEtBQUssTUFBTUssRUFBRXVCLEVBQUU1QixHQUFHTyxFQUFFcUksTUFBTW5ILFVBQVUwQixVQUFVaEQsRUFBRTRPLEtBQUs1TyxHQUFHeUksTUFBTXZDLEtBQUtsRyxNQUFNLGFBQWFTLEVBQUV3dkIsS0FBSyxtQkFBbUI5dkIsRUFBRStGLEtBQUs5RixHQUFHRixJQUFJZ3JCLE1BQU1ubkIsS0FBSzg0QixxQkFBcUJyQixNQUFNeDdCLEVBQUUsQ0FBQyxXQUFXUyxFQUFFSyxJQUFJLDBCQUEwQixDQUFDLEVBQUVkLElBQUlrckIsS0FBS25uQixLQUFLKzRCLGNBQWN0QixNQUFNeDdCLEVBQUUsQ0FBQyxLQUFLLE1BQU1ILFFBQVFrRSxLQUFLODRCLHFCQUFxQjc4QixHQUFHLE1BQU0sQ0FBQys4QixTQUFRLEVBQUdDLElBQUluOUIsRUFBRW05QixJQUFJaEIsV0FBV244QixFQUFFbzhCLFVBQVVBLFVBQVVwOEIsRUFBRW84QixVQUFVLElBQUlnQixVQUFVcDlCLEVBQUVvOUIsVUFBVUMsWUFBWXI5QixFQUFFczlCLGVBQWMsRUFBR3A1QixLQUFLMGYsTUFBTStYLE1BQU14N0IsRUFBRUgsRUFBRSxDQUFDLEtBQUssSUFBSTJFLE9BQU82UCxVQUFVclUsR0FBRyxNQUFNcUYsTUFBTSxvQ0FBb0MsTUFBTW5GLFFBQVFPLEVBQUVLLElBQUksYUFBYWQsSUFBSSxDQUFDLEVBQUVILEdBQUcsR0FBRyxNQUFNSyxFQUFFd3JCLGlCQUFZLElBQVN4ckIsRUFBRWdyQixLQUFLa1MsS0FBS3ZCLGFBQWEsSUFBSSxJQUFJNzdCLEVBQUUsRUFBRUEsRUFBRUUsRUFBRWdyQixLQUFLa1MsS0FBS3ZCLGFBQWE5NEIsT0FBTy9DLElBQUlFLEVBQUVnckIsS0FBS2tTLEtBQUt2QixhQUFhNzdCLEdBQUdzRCxFQUFFcEQsRUFBRWdyQixLQUFLa1MsS0FBS3ZCLGFBQWE3N0IsSUFBSSxPQUFPRSxFQUFFZ3JCLEtBQUssRUFBQyxFQUFHLEtBQUssQ0FBQ2xyQixFQUFFSCxFQUFFSyxLQUFLLElBQUlDLEVBQUVELEVBQUUsTUFBTXdXLE9BQU8sTUFBTXRXLEVBQUVGLEVBQUUsTUFBTXVCLEVBQUV2QixFQUFFLE1BQU1HLEVBQUVILEVBQUUsTUFBTW1ELEVBQUVuRCxFQUFFLE1BQU1PLEVBQUVQLEVBQUUsTUFBTW9ELEVBQUVwRCxFQUFFLE1BQU1JLEVBQUVKLEVBQUUsTUFBTXlELEVBQUV6RCxFQUFFLE1BQU1GLEVBQUVDLFFBQVEsQ0FBQ285QixXQUFXLE1BQU16eEIsWUFBWTVMLEVBQUVILEVBQUVLLEVBQUV1QixFQUFFcEIsRUFBRWdELEdBQUcsSUFBSW1CLE9BQU9vRCxjQUFjL0gsSUFBSUEsRUFBRSxFQUFFLE1BQU13RixNQUFNLDREQUE0RCxJQUFJYixPQUFPb0QsY0FBYzFILElBQUlBLEVBQUUsRUFBRSxNQUFNbUYsTUFBTSxnRUFBZ0UsSUFBSWIsT0FBT29ELGNBQWNuRyxJQUFJQSxFQUFFLEVBQUUsTUFBTTRELE1BQU0sK0RBQStELFFBQUcsSUFBU2hGLElBQUlBLEVBQUVELEVBQUVrOUIsbUNBQThCLElBQVNqNkIsRUFBRSxDQUFDLE1BQU1yRCxFQUFFc0QsRUFBRTRPLFlBQVksSUFBSTdPLEVBQUVsRCxFQUFFK0YsS0FBS2xHLEdBQUc2SSxTQUFTLFNBQVMsQ0FBQyxNQUFNbEYsRUFBRXhELEVBQUUrRixLQUFLLDJPQUEyTyxVQUFVMUUsRUFBRSxDQUFDM0IsRUFBRUssRUFBRXVCLEVBQUV6QixFQUFFSyxFQUFFZ0QsR0FBR25CLEVBQUUsQ0FBQzVCLEVBQUVpOUIsU0FBU0MsSUFBSWw5QixFQUFFaTlCLFNBQVNDLElBQUlsOUIsRUFBRWk5QixTQUFTQyxJQUFJbDlCLEVBQUVpOUIsU0FBU0UsUUFBUW45QixFQUFFaTlCLFNBQVNFLFFBQVFuOUIsRUFBRWk5QixTQUFTRyxRQUFRaDlCLEVBQUVKLEVBQUVxOUIsT0FBT2g2QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsR0FBRyxHQUFHLElBQUluQyxFQUFFVSxHQUFHNkIsS0FBSzY1QixhQUFhbDlCLEVBQUUsTUFBTTJELEVBQUUsSUFBSTVELEVBQUVvOUIsU0FBU245QixPQUFFLEdBQVFxRCxLQUFLKzVCLFFBQVF6NUIsRUFBRXk1QixTQUFTLENBQUNDLGFBQWEsT0FBT2g2QixLQUFLNjVCLFlBQVksQ0FBQ0ksYUFBYSxPQUFPajZCLEtBQUsrNUIsT0FBTyxHQUFHRywwQkFBMEIsU0FBU2orQixFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLElBQUlOLEVBQUUrNkIsT0FBT3g2QixFQUFFODlCLGNBQWNsK0IsRUFBRWtHLE1BQU1rMEIsV0FBVyxNQUFNLElBQUkvMEIsTUFBTSxxQkFBcUJyRixFQUFFZzlCLElBQUk3OEIsRUFBRUgsRUFBRWc5QixJQUFJcjVCLEVBQUV3NkIsc0JBQXNCbitCLEVBQUVnOUIsSUFBSXI1QixFQUFFdzZCLHFCQUFxQixNQUFNOTZCLEVBQUVDLEVBQUU4NkIscUJBQXFCbCtCLEdBQUdPLEVBQUVMLEVBQUVpK0IsY0FBY2g3QixFQUFFKzJCLFlBQVlrRSxNQUFNaCtCLEdBQUdOLFNBQVNBLEVBQUVzK0IsTUFBTSxNQUFNOThCLEVBQUUsSUFBSW1DLEVBQUU0NkIsWUFBWXYrQixHQUFHd0IsRUFBRWc5QixTQUFTbCtCLEVBQUVILEdBQUcsTUFBTStCLEVBQUUsQ0FBQ2dFLEtBQUt6RixFQUFFZytCLEdBQUd6K0IsRUFBRWtHLEtBQUs4MkIsSUFBSTc4QixFQUFFdStCLE9BQU9sOUIsRUFBRXc3QixJQUFJaEIsV0FBV2g4QixFQUFFZzhCLFdBQVdDLFVBQVVqOEIsRUFBRWk4QixVQUFVaUIsWUFBWWw5QixFQUFFazlCLFlBQVlsNUIsS0FBSyxPQUFPdEQsRUFBRSxJQUFJaUQsRUFBRTQ2QixZQUFZcjhCLEdBQUd4QixFQUFFODlCLFNBQVNsK0IsRUFBRUgsR0FBRyxNQUFNa0UsRUFBRWhFLEVBQUVzK0IsY0FBYyxDQUFDaitCLEVBQUVjLFFBQUcsR0FBUVcsRUFBRWtDLEVBQUUsR0FBRzdELEVBQUU2RCxFQUFFLEdBQUdqQyxFQUFFLENBQUN3OEIsS0FBSy8rQixFQUFFZy9CLHVCQUF1QkMsSUFBSXQrQixFQUFFcStCLHdCQUF3QnY4QixFQUFFSCxFQUFFNDhCLFFBQVE3K0IsR0FBR21DLEVBQUVaLEVBQUVpQyxPQUFPdEIsR0FBR0csRUFBRSxJQUFJdUMsV0FBV3hDLEVBQUVTLE9BQU9WLEVBQUVVLFFBQVEsT0FBT1IsRUFBRWtCLElBQUluQixHQUFHQyxFQUFFa0IsSUFBSXBCLEVBQUVDLEVBQUVTLFFBQVFSLENBQUMsRUFBRXk4QixlQUFlLFNBQVNoL0IsRUFBRUgsRUFBRUssR0FBRyxNQUFNQyxFQUFFa0QsRUFBRTQ3QixZQUFZai9CLE9BQUUsR0FBUXlCLEVBQUV0QixFQUFFLEdBQUdFLEVBQUVGLEVBQUUsR0FBR0csRUFBRWdELEVBQUU4NkIscUJBQXFCditCLEdBQUc4RCxFQUFFLENBQUN1QyxLQUFLOUYsRUFBRWkrQixjQUFjLzlCLEVBQUU4NUIsV0FBV3FFLEdBQUdyK0IsRUFBRWkrQixjQUFjaCtCLEVBQUUsSUFBSTI4QixJQUFJLEVBQUUwQixPQUFPajlCLEVBQUUsR0FBR3k5QixpQkFBaUI5K0IsRUFBRWkrQixjQUFjaCtCLEVBQUUsSUFBSTI3QixXQUFXdjZCLEVBQUUsR0FBR3c2QixVQUFVeDZCLEVBQUUsR0FBR3k3QixZQUFZaDlCLEVBQUU4RCxLQUFLLE1BQU1zNkIsTUFBTSxJQUFJeDVCLFdBQVd6RSxFQUFFLEtBQUttQixFQUFFLElBQUlmLEVBQUVvOUIsU0FBUzc5QixPQUFFLEdBQVEsT0FBT3dCLEVBQUVrNUIsS0FBSzc2QixHQUFHLENBQUNpL0IsSUFBSW43QixFQUFFaTdCLEtBQUtwOUIsRUFBRSxFQUFDLEVBQUcsS0FBSyxDQUFDeEIsRUFBRUgsRUFBRUssS0FBSyxJQUFJQyxFQUFFRCxFQUFFLE1BQU13VyxPQUFPLE1BQU10VyxFQUFFRixFQUFFLE9BQU9pL0IsVUFBVTE5QixHQUFHdkIsRUFBRSxLQUFLRyxFQUFFSCxFQUFFLE1BQU1tRCxFQUFFbkQsRUFBRSxNQUFNTyxFQUFFUCxFQUFFLE1BQU1vRCxFQUFFcEQsRUFBRSxNQUFNRixFQUFFQyxRQUFRLENBQUNtL0IsS0FBSyxNQUFNeHpCLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFRSxFQUFFcUIsRUFBRXBCLEdBQUcsSUFBSW1FLE9BQU9vRCxjQUFjbkcsSUFBSUEsRUFBRSxFQUFFLE1BQU00RCxNQUFNLGlFQUFpRSxJQUFJYixPQUFPb0QsY0FBY3ZILElBQUlBLEVBQUUsRUFBRSxNQUFNZ0YsTUFBTSw0REFBNEQsSUFBSS9CLEVBQUUsR0FBRyxHQUFHLFdBQVdwRCxFQUFFb0QsRUFBRSwrTUFBK00sQ0FBQyxHQUFHLGNBQWNwRCxFQUFFLE1BQU1tRixNQUFNLDhCQUE4Qi9CLEVBQUUsME1BQTBNLENBQUMsR0FBRyxLQUFLbkQsRUFBRStGLEtBQUs5RixFQUFFLFVBQVUyQyxPQUFPLE1BQU1zQyxNQUFNLCtCQUErQixNQUFNL0UsRUFBRUgsRUFBRStGLEtBQUs1QyxFQUFFLFVBQVVLLEVBQUUsQ0FBQ3RELEVBQUVvQixFQUFFNUIsRUFBRU8sRUFBRUosR0FBR3dCLEVBQUUsQ0FBQ2YsRUFBRTg4QixTQUFTQyxJQUFJLzhCLEVBQUU4OEIsU0FBU0MsSUFBSS84QixFQUFFODhCLFNBQVNFLFFBQVFoOUIsRUFBRTg4QixTQUFTRyxPQUFPajlCLEVBQUU4OEIsU0FBU0UsU0FBU3Y3QixFQUFFekIsRUFBRWs5QixPQUFPcjlCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxHQUFHLElBQUlxRCxFQUFFbkMsR0FBR3VDLEtBQUs2NUIsYUFBYTE3QixFQUFFLE1BQU14QixFQUFFLElBQUkyQyxFQUFFdzZCLFNBQVMzN0IsT0FBRSxHQUFRNkIsS0FBSys1QixRQUFRcDlCLEVBQUVvOUIsU0FBUyxDQUFDQyxhQUFhLE9BQU9oNkIsS0FBSzY1QixZQUFZLENBQUNJLGFBQWEsT0FBT2o2QixLQUFLKzVCLE9BQU8sR0FBR3VCLDhCQUE4QixTQUFTci9CLEVBQUVILEVBQUVLLEdBQUcsTUFBTU8sRUFBRU4sRUFBRStGLEtBQUtoRyxFQUFFLFVBQVVJLEVBQUVELEVBQUU0K0IsWUFBWWovQixPQUFFLEdBQVEyRCxFQUFFckQsRUFBRSxHQUFHa0IsRUFBRWxCLEVBQUUsR0FBRyxHQUFHNEIsRUFBRWxDLEVBQUVBLEVBQUUrQyxPQUFPLElBQUksR0FBRyxJQUFJYixFQUFFLENBQUMsTUFBTWxDLEVBQUVJLEVBQUVlLFNBQVMsR0FBR25CLEVBQUVxaUIsT0FBTzVoQixJQUFJTixFQUFFK0YsS0FBS2xHLEVBQUVxa0IsTUFBTSxPQUFPL0wsT0FBTzlXLEdBQUcsTUFBTSxJQUFJNkQsTUFBTSw2REFBNkQsS0FBSyxDQUFDLEdBQUcsSUFBSW5ELEVBQUUsTUFBTSxJQUFJbUQsTUFBTSwwQ0FBMEMsQ0FBQyxNQUFNckYsRUFBRXlCLEVBQUVOLFNBQVMsR0FBR25CLEVBQUVxaUIsT0FBTzVoQixJQUFJTixFQUFFK0YsS0FBS2xHLEVBQUVxa0IsTUFBTSxPQUFPL0wsT0FBTzlXLEdBQUcsTUFBTSxJQUFJNkQsTUFBTSxnRUFBZ0UsQ0FBQyxDQUFDLE1BQU0zRSxFQUFFLENBQUNELEdBQUc0RCxFQUFFLElBQUloQixFQUFFdzZCLFNBQVM3OUIsRUFBRVUsVUFBVWIsRUFBRTQrQixHQUFHLE1BQU10OEIsRUFBRXdCLEVBQUUsR0FBR25ELEVBQUUsSUFBSThDLEVBQUVpN0IsWUFBWTErQixHQUFHLEdBQUdXLEVBQUV3OEIsSUFBSTc2QixFQUFFLE1BQU0sSUFBSWtELE1BQU0sbUNBQW1DN0UsRUFBRXc4QixJQUFJbjBCLDZDQUE2QzFHLEVBQUUwRyxjQUFjLE9BQU94RixFQUFFaThCLHdCQUF3QnovQixFQUFFd0UsRUFBRSxFQUFDLEVBQUcsS0FBSyxDQUFDckUsRUFBRUgsRUFBRUssS0FBSyxNQUFNQyxFQUFFRCxFQUFFLE1BQU1FLEVBQUVGLEVBQUUsTUFBTXVCLEVBQUV2QixFQUFFLE1BQU1HLEVBQUVILEVBQUUsTUFBTW1ELEVBQUVuRCxFQUFFLE1BQU1GLEVBQUVDLFFBQVEsQ0FBQ285QixXQUFXbDlCLEVBQUVrOUIsV0FBV1ksMEJBQTBCOTlCLEVBQUU4OUIsMEJBQTBCZSxlQUFlNytCLEVBQUU2K0IsZUFBZUksS0FBS2gvQixFQUFFZy9CLEtBQUtDLDhCQUE4QmovQixFQUFFaS9CLDhCQUE4QkUsV0FBVzk5QixFQUFFODlCLFdBQVdDLHlCQUF5Qi85QixFQUFFKzlCLHlCQUF5QkMsTUFBTXAvQixFQUFFby9CLE1BQU1DLHlCQUF5QnIvQixFQUFFcS9CLHlCQUF5QkMsZ0JBQWdCdDhCLEVBQUVzOEIsZ0JBQWdCQyx3Q0FBd0N2OEIsRUFBRXU4Qix3Q0FBdUMsRUFBRyxLQUFLLENBQUM1L0IsRUFBRUgsRUFBRUssS0FBSyxJQUFJQyxFQUFFRCxFQUFFLE1BQU13VyxPQUFPLE1BQU10VyxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRyxFQUFFSCxFQUFFLE1BQU1tRCxFQUFFbkQsRUFBRSxNQUFNTyxFQUFFUCxFQUFFLE1BQU1vRCxFQUFFcEQsRUFBRSxNQUFNSSxFQUFFSixFQUFFLE1BQU15RCxFQUFFekQsRUFBRSxLQUFLRixFQUFFQyxRQUFRLENBQUNzL0IsV0FBVyxNQUFNM3pCLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFRSxFQUFFcUIsRUFBRXBCLEVBQUVnRCxHQUFHLElBQUltQixPQUFPb0QsY0FBYy9ILElBQUlBLEVBQUUsRUFBRSxNQUFNd0YsTUFBTSw2REFBNkQsSUFBSWIsT0FBT29ELGNBQWMxSCxJQUFJQSxFQUFFLEVBQUUsTUFBTW1GLE1BQU0sMERBQTBELElBQUliLE9BQU9vRCxjQUFjeEgsSUFBSUEsRUFBRSxFQUFFLE1BQU1pRixNQUFNLDBEQUEwRCxJQUFJYixPQUFPb0QsY0FBY25HLElBQUlBLEVBQUUsRUFBRSxNQUFNNEQsTUFBTSxpRUFBaUUsSUFBSWIsT0FBT29ELGNBQWN2SCxJQUFJQSxFQUFFLEVBQUUsTUFBTWdGLE1BQU0sOERBQThELElBQUliLE9BQU9vRCxjQUFjdkUsSUFBSUEsRUFBRSxFQUFFLE1BQU1nQyxNQUFNLDREQUE0RCxNQUFNL0IsRUFBRW5ELEVBQUUrRixLQUFLLCtPQUErTyxVQUFVdkMsRUFBRSxDQUFDTixFQUFFaEQsRUFBRVIsRUFBRU8sRUFBRUYsRUFBRXVCLEVBQUV6QixHQUFHd0IsRUFBRSxDQUFDbEIsRUFBRWk5QixTQUFTQyxJQUFJbDlCLEVBQUVpOUIsU0FBU0MsSUFBSWw5QixFQUFFaTlCLFNBQVNDLElBQUlsOUIsRUFBRWk5QixTQUFTQyxJQUFJbDlCLEVBQUVpOUIsU0FBU0MsSUFBSWw5QixFQUFFaTlCLFNBQVNDLElBQUlsOUIsRUFBRWk5QixTQUFTRSxTQUFTdjdCLEVBQUU1QixFQUFFcTlCLE9BQU9yNkIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUlLLEVBQUVuQyxHQUFHdUMsS0FBSzY1QixhQUFhMTdCLEVBQUUsTUFBTXhCLEVBQUUsSUFBSUQsRUFBRW85QixTQUFTMzdCLE9BQUUsR0FBUTZCLEtBQUsrNUIsUUFBUXA5QixFQUFFbzlCLFVBQVUvNUIsS0FBSzg3QixNQUFNNy9CLEVBQUUrRCxLQUFLKzdCLFFBQVFqZ0MsQ0FBQyxDQUFDaytCLGFBQWEsT0FBT2g2QixLQUFLNjVCLFlBQVksQ0FBQ0ksYUFBYSxPQUFPajZCLEtBQUsrNUIsT0FBTyxHQUFHMEIseUJBQXlCLFNBQVN4L0IsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUcsRUFBRWtCLEVBQUVVLEVBQUV4QixHQUFHLE1BQU0yRCxFQUFFZixFQUFFODZCLHFCQUFxQmorQixHQUFHZ0MsRUFBRS9CLEVBQUVpK0IsY0FBY2g2QixFQUFFKzFCLFdBQVc1NUIsRUFBRTZDLEVBQUU0N0IsWUFBWWovQixPQUFFLEdBQVFvQyxFQUFFNUIsRUFBRSxHQUFHOEIsRUFBRTlCLEVBQUUsR0FBRyxJQUFJNkIsRUFBRSxNQUFNRSxFQUFFSCxFQUFFLEdBQUdrRCxFQUFFbEYsRUFBRWkrQixjQUFjLzdCLEVBQUUsSUFBSUwsRUFBRXhCLEVBQUVzL0IsYUFBYS8vQixPQUFFLEdBQVErRixFQUFFOUQsRUFBRTY3QixVQUFVMzNCLEVBQUUsQ0FBQzFFLEVBQUV1K0IsZUFBZWo2QixFQUFFNUQsRUFBRTdCLEVBQUVKLEVBQUVtQyxFQUFFYixFQUFFVSxPQUFFLEVBQU94QixPQUFFLEdBQVFlLEVBQUV3K0IscUJBQXFCOTlCLEVBQUVtRCxFQUFFakQsT0FBRSxFQUFPL0IsRUFBRVQsRUFBRTJCLEVBQUVVLE9BQUUsRUFBT3hCLE9BQUUsRUFBTzZCLElBQUlQLEVBQUUzQixFQUFFcytCLGNBQWN4NEIsR0FBR3VELEVBQUV0SCxFQUFFLEdBQUdWLEVBQUVVLEVBQUUsR0FBRyxHQUFHdkMsRUFBRTZKLEVBQUV4SixFQUFFd0IsRUFBRSxNQUFNLElBQUkyRCxNQUFNLHNCQUFzQnhGLEVBQUVnSixjQUFjYSxFQUFFYixrQkFBa0IzSSxFQUFFMkksY0FBY25ILEVBQUVtSCxjQUFjLE1BQU1jLEVBQUV2SCxFQUFFLEdBQUcsR0FBR2xDLEVBQUV5SixFQUFFLE1BQU0sSUFBSXRFLE1BQU0sa0JBQWtCbkYsRUFBRTJJLHNDQUFzQ2MsRUFBRWQsY0FBYyxNQUFNaUIsRUFBRTFILEVBQUUsR0FBRyxHQUFHSixFQUFFLEdBQUdnN0IsSUFBSWx6QixFQUFFLE1BQU0sSUFBSXpFLE1BQU0sb0NBQW9DckQsRUFBRSxHQUFHZzdCLElBQUluMEIsK0NBQStDaUIsRUFBRWpCLGNBQWMsR0FBRzdHLEVBQUUsR0FBR2c3QixJQUFJbHpCLEVBQUUsTUFBTSxJQUFJekUsTUFBTSxrQ0FBa0NyRCxFQUFFLEdBQUdnN0IsSUFBSW4wQiwrQ0FBK0NpQixFQUFFakIsY0FBYyxNQUFNMkIsRUFBRS9KLEVBQUV5L0IsOEJBQThCbCtCLEVBQUUsR0FBR0MsR0FBRzhJLEVBQUUvSSxFQUFFLEdBQUcrOEIsUUFBUTUrQixHQUFHLE9BQU93RCxFQUFFdzhCLGFBQWEzMUIsRUFBRTQxQixLQUFLcjFCLEVBQUUsRUFBQyxFQUFHLEtBQUssQ0FBQy9LLEVBQUVILEVBQUVLLEtBQUssSUFBSUMsRUFBRUQsRUFBRSxNQUFNd1csT0FBTyxNQUFNdFcsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxNQUFNbUQsRUFBRW5ELEVBQUUsTUFBTU8sRUFBRVAsRUFBRSxNQUFNb0QsRUFBRXBELEVBQUUsTUFBTUYsRUFBRUMsUUFBUSxDQUFDMC9CLGdCQUFnQixNQUFNL3pCLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFRSxFQUFFcUIsRUFBRXBCLEVBQUVpRCxHQUFHLEdBQUdTLEtBQUtzOEIsU0FBU3JnQyxHQUFHd0UsT0FBT29ELGNBQWMvSCxJQUFJQSxFQUFFLEVBQUUsTUFBTXdGLE1BQU0sNERBQTRELEdBQUd0QixLQUFLMjZCLE9BQU83K0IsR0FBRzJFLE9BQU9vRCxjQUFjMUgsSUFBSUEsRUFBRSxFQUFFLE1BQU1tRixNQUFNLHNFQUFzRSxHQUFHdEIsS0FBS3U4QixpQkFBaUJwZ0MsR0FBR3NFLE9BQU9vRCxjQUFjeEgsSUFBSUEsRUFBRSxFQUFFLE1BQU1pRixNQUFNLDREQUE0RCxHQUFHdEIsS0FBS3c4QixPQUFPbmdDLEdBQUdvRSxPQUFPb0QsY0FBY25HLElBQUlBLEVBQUUsRUFBRSxNQUFNNEQsTUFBTSxpRUFBaUUsR0FBR3RCLEtBQUt5OEIsWUFBWS8rQixHQUFHK0MsT0FBT29ELGNBQWN2SCxJQUFJQSxFQUFFLEVBQUUsTUFBTWdGLE1BQU0sNERBQTRELEdBQUd0QixLQUFLMDhCLE9BQU9wZ0MsT0FBRSxJQUFTaUQsRUFBRSxDQUFDLE1BQU10RCxFQUFFUyxFQUFFeVIsWUFBWSxJQUFJbk8sS0FBS3U2QixNQUFNbitCLEVBQUUrRixLQUFLbEcsR0FBRzZJLFNBQVMsU0FBUyxNQUFNOUUsS0FBS3U2QixNQUFNaDdCLEVBQUVTLEtBQUs2NUIsYUFBYTc1QixLQUFLZzZCLGFBQWEsTUFBTXo5QixFQUFFLElBQUkrQyxFQUFFdzZCLFNBQVM5NUIsS0FBSzY1QixrQkFBYSxHQUFRNzVCLEtBQUsrNUIsUUFBUXg5QixFQUFFdzlCLFNBQVMsQ0FBQ0MsYUFBYSxNQUFNLzlCLEVBQUVHLEVBQUUrRixLQUFLLHVNQUF1TSxVQUFVckcsRUFBRSxDQUFDa0UsS0FBSzA4QixPQUFPMThCLEtBQUt3OEIsT0FBT3g4QixLQUFLdThCLGlCQUFpQnY4QixLQUFLMjZCLE9BQU8zNkIsS0FBS3k4QixZQUFZejhCLEtBQUt1NkIsTUFBTXY2QixLQUFLczhCLFVBQVVuZ0MsRUFBRSxDQUFDb0QsRUFBRWk2QixTQUFTQyxJQUFJbDZCLEVBQUVpNkIsU0FBU0MsSUFBSWw2QixFQUFFaTZCLFNBQVNDLElBQUlsNkIsRUFBRWk2QixTQUFTQyxJQUFJbDZCLEVBQUVpNkIsU0FBU0MsSUFBSWw2QixFQUFFaTZCLFNBQVNHLE9BQU9wNkIsRUFBRWk2QixTQUFTRSxTQUFTLE9BQU9uNkIsRUFBRXE2QixPQUFPMzlCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxJQUFJSCxFQUFFSyxFQUFFLENBQUM4OUIsYUFBYSxPQUFPajZCLEtBQUsrNUIsT0FBTyxHQUFHOEIsd0NBQXdDLFNBQVM1L0IsRUFBRUgsRUFBRUssRUFBRUMsR0FBRyxNQUFNTSxFQUFFSixFQUFFNCtCLFlBQVlqL0IsT0FBRSxHQUFRc0QsRUFBRTdDLEVBQUUsR0FBR0gsRUFBRUcsRUFBRSxHQUFHa0QsRUFBRUwsRUFBRSxHQUFHOUIsRUFBRThCLEVBQUUsR0FBR3BCLEVBQUVvQixFQUFFLEdBQUcsR0FBR3BELEVBQUV5RCxHQUFHLEVBQUUsTUFBTSxJQUFJMEIsTUFBTSxvQkFBb0JuRixFQUFFMkksb0RBQW9EbEYsRUFBRWtGLGNBQWMsTUFBTW5JLEVBQUVKLEVBQUUsR0FBRytELEVBQUVqRSxFQUFFaStCLGNBQWMzOUIsR0FBR3lCLEVBQUU3QixFQUFFLEdBQUdFLEVBQUUsSUFBSXNFLFdBQVczQyxHQUFHQyxFQUFFbEMsRUFBRXNCLEVBQUVjLEVBQUUrQixFQUFFLElBQUloQyxFQUFFRSxFQUFFLE1BQU0rQyxFQUFFakMsRUFBRTA4QixhQUFhLy9CLE9BQUUsR0FBUWlDLEVBQUVxRCxFQUFFdzRCLFVBQVUvM0IsRUFBRSxDQUFDRyxLQUFLakUsRUFBRXc4QixHQUFHbjhCLEVBQUUwNkIsSUFBSW45QixFQUFFNitCLE9BQU94OEIsRUFBRWc5QixpQkFBaUI3OEIsRUFBRTI1QixXQUFXOTdCLEVBQUUrN0IsVUFBVTc1QixFQUFFbTVCLEtBQUtoNUIsRUFBRTI2QixZQUFZLzhCLEVBQUU4OEIsVUFBVSxHQUFHajVCLEtBQUssTUFBTXM2QixNQUFNOTlCLEdBQUcyRixFQUFFMUUsRUFBRXUrQixlQUFlLzlCLEVBQUVLLEVBQUV6QyxFQUFFcUMsRUFBRUcsRUFBRW5DLEVBQUVrQyxFQUFFRyxFQUFFcEMsRUFBRSxJQUFJLEdBQUdnRyxFQUFFNjJCLElBQUkxNUIsRUFBRSxHQUFHLE1BQU0sSUFBSStCLE1BQU0sbUNBQW1DYyxFQUFFNjJCLElBQUluMEIsNkNBQTZDdkYsRUFBRSxHQUFHdUYsY0FBYyxPQUFPeEYsRUFBRWk4Qix3QkFBd0J2NUIsRUFBRVQsRUFBRSxFQUFDLEVBQUcsS0FBSyxDQUFDdEYsRUFBRUgsRUFBRUssS0FBSyxJQUFJQyxFQUFFRCxFQUFFLE1BQU13VyxPQUFPLE1BQU10VyxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRyxFQUFFSCxFQUFFLE1BQU1tRCxFQUFFbkQsRUFBRSxNQUFNTyxFQUFFUCxFQUFFLE1BQU1vRCxFQUFFcEQsRUFBRSxNQUFNSSxFQUFFSixFQUFFLEtBQUtGLEVBQUVDLFFBQVEsQ0FBQ3cvQixNQUFNLE1BQU03ekIsWUFBWTVMLEVBQUVILEVBQUVLLEVBQUVFLEVBQUVxQixFQUFFcEIsRUFBRUksRUFBRUgsR0FBRyxJQUFJa0UsT0FBT29ELGNBQWNuRyxJQUFJQSxFQUFFLEVBQUUsTUFBTTRELE1BQU0sMERBQTBELElBQUliLE9BQU9vRCxjQUFjeEgsSUFBSUEsRUFBRSxFQUFFLE1BQU1pRixNQUFNLDBEQUEwRCxJQUFJYixPQUFPb0QsY0FBY3ZILElBQUlBLEVBQUUsRUFBRSxNQUFNZ0YsTUFBTSxpRUFBaUUsSUFBSWIsT0FBT29ELGNBQWNuSCxJQUFJQSxFQUFFLEVBQUUsTUFBTTRFLE1BQU0sNERBQTRELElBQUliLE9BQU9vRCxjQUFjdEgsSUFBSUEsRUFBRSxFQUFFLE1BQU0rRSxNQUFNLDREQUE0RCxNQUFNMUIsRUFBRXhELEVBQUUrRixLQUFLLCtRQUErUSxVQUFVMUUsRUFBRSxDQUFDbEIsRUFBRUQsRUFBRW9CLEVBQUVyQixFQUFFSyxFQUFFVCxFQUFFSCxFQUFFSyxHQUFHZ0MsRUFBRSxDQUFDb0IsRUFBRWk2QixTQUFTQyxJQUFJbDZCLEVBQUVpNkIsU0FBU0MsSUFBSWw2QixFQUFFaTZCLFNBQVNDLElBQUlsNkIsRUFBRWk2QixTQUFTQyxJQUFJbDZCLEVBQUVpNkIsU0FBU0MsSUFBSWw2QixFQUFFaTZCLFNBQVNFLFFBQVFuNkIsRUFBRWk2QixTQUFTRSxRQUFRbjZCLEVBQUVpNkIsU0FBU0UsU0FBUy84QixFQUFFNEMsRUFBRXE2QixPQUFPaDZCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUluQyxFQUFFVSxHQUFHNkIsS0FBSzY1QixhQUFhbDlCLEVBQUUsTUFBTTJELEVBQUVoQixFQUFFMDhCLGFBQWFyL0IsT0FBRSxHQUFRcUQsS0FBSys1QixRQUFRejVCLEVBQUV5NUIsU0FBUyxDQUFDQyxhQUFhLE9BQU9oNkIsS0FBSzY1QixZQUFZLENBQUNJLGFBQWEsT0FBT2o2QixLQUFLKzVCLE9BQU8sR0FBRzRCLHlCQUF5QixTQUFTMS9CLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVtRCxFQUFFSyxHQUFHLE1BQU1uQyxFQUFFZixFQUFFdytCLFlBQVlqL0IsT0FBRSxHQUFRa0MsRUFBRVYsRUFBRSxHQUFHZCxFQUFFYyxFQUFFLEdBQUcsSUFBSTZDLEVBQUVuQyxFQUFFLEdBQUdDLEVBQUVELEVBQUUsR0FBRzFCLEVBQUUsRUFBRSxNQUFNNEIsRUFBRSxDQUFDcEMsRUFBRUgsS0FBSyxHQUFHLGlCQUFpQkcsR0FBRyxpQkFBaUJILEVBQUUsTUFBTSxJQUFJd0YsTUFBTSwwQ0FBMEMsT0FBT3hGLEVBQUV1QyxFQUFFdkMsRUFBRUcsRUFBRUgsR0FBR0csR0FBR3NDLEVBQUVGLEVBQUVpQyxFQUFFbEMsR0FBR2tDLEVBQUVILEtBQUtDLE1BQU1FLEVBQUUvQixHQUFHSCxFQUFFK0IsS0FBS0MsTUFBTWhDLEVBQUVHLEdBQUcsTUFBTUQsRUFBRUYsRUFBRWtDLEVBQUU3RCxFQUFFMEQsS0FBS3c4QixNQUFNN2dDLEdBQUcsRUFBRXdDLElBQUksTUFBTUUsRUFBRTFDLEVBQUVXLEVBQUUsR0FBRzJCLEVBQUUzQixHQUFHNkQsRUFBRTlCLEVBQUUsTUFBTThDLE1BQU0sb0VBQW9FLE1BQU1DLEVBQUVqQyxFQUFFMDhCLGFBQWEvL0IsT0FBRSxHQUFRODlCLFVBQVU3N0IsRUFBRTdCLEVBQUVpK0IsY0FBYzM5QixFQUFFLElBQUlxRixFQUFFM0YsRUFBRWkrQixjQUFjMzlCLEVBQUUsSUFBSXlGLEVBQUUsQ0FBQzFFLEVBQUV1K0IsZUFBZTE2QixFQUFFckQsRUFBRXFCLEVBQUU5QyxPQUFFLEVBQU9OLEVBQUVDLE9BQUUsRUFBT3dELEdBQUdsQyxFQUFFdStCLGVBQWUxNkIsRUFBRVMsRUFBRXpDLEVBQUVmLE9BQUUsRUFBT3JDLEVBQUVDLE9BQUUsRUFBT3dELElBQUkzQixFQUFFM0IsRUFBRXMrQixjQUFjeDRCLEdBQUd5SSxLQUFLNU8sR0FBR3FELEVBQUU2OEIsOEJBQThCbGdDLEVBQUVxRCxHQUFHKzhCLE9BQU8sT0FBTzkvQixFQUFFNi9CLGFBQWFuK0IsRUFBRSxHQUFHQSxFQUFFLEdBQUcsRUFBQyxFQUFHLEtBQUssQ0FBQ2hDLEVBQUVILEVBQUVLLEtBQUssSUFBSUMsRUFBRUQsRUFBRSxNQUFNd1csT0FBTyxNQUFNdFcsRUFBRUYsRUFBRSxNQUFNLFNBQVN1QixFQUFFekIsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEVBQUUsS0FBS0wsRUFBRSxLQUFLRyxFQUFFMkMsS0FBSyxJQUFJOUMsRUFBRSxLQUFLQSxJQUFJLEVBQUVLLEdBQUcsRUFBRSxPQUFPRixFQUFFMkMsS0FBSyxJQUFJOUMsR0FBR0ssRUFBRSxDQUFDLENBQUMsTUFBTUcsRUFBRSxDQUFDbTlCLElBQUksRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEdBQUcxOUIsRUFBRUMsUUFBUSxDQUFDMDlCLE9BQU8sU0FBUzM5QixFQUFFSCxFQUFFSyxFQUFFbUQsR0FBRyxHQUFHeEQsRUFBRWtELFNBQVM3QyxFQUFFNkMsUUFBUWxELEVBQUVrRCxTQUFTTSxFQUFFTixPQUFPLE1BQU0sSUFBSXNDLE1BQU0sd0JBQXdCLElBQUk1RSxFQUFFVCxFQUFFLFNBQVNzRCxFQUFFdEQsRUFBRUgsRUFBRUssRUFBRUUsR0FBRyxNQUFNcUIsRUFBRXpCLEVBQUV1SyxNQUFNLEVBQUVySyxHQUFHRyxFQUFFTCxFQUFFdUssTUFBTXJLLEVBQUVFLEVBQUVKLEVBQUUrQyxRQUFRTSxFQUFFLENBQUM1QixFQUFFdEIsRUFBRStGLEtBQUtyRyxHQUFHUSxHQUFHLE9BQU9GLEVBQUU2QyxPQUFPSyxFQUFFLENBQUMsSUFBSSxJQUFJckQsRUFBRSxFQUFFQSxFQUFFSCxFQUFFa0QsT0FBTy9DLElBQUksQ0FBQyxJQUFJTSxFQUFFLEVBQUVxRCxFQUFFekQsRUFBRUYsR0FBRyxPQUFPcUQsRUFBRXJELElBQUksS0FBS0ssRUFBRW05QixJQUFJLE1BQU10OUIsRUFBRSxHQUFHSSxFQUFFbUIsRUFBRXZCLEVBQUV5RCxHQUFHbEQsRUFBRTZDLEVBQUU3QyxFQUFFUCxFQUFFTCxFQUFFRyxHQUFHLEdBQUcsTUFBTSxLQUFLSyxFQUFFbzlCLFFBQVE5NUIsRUFBRXZELEVBQUU4OUIsY0FBY3Y2QixHQUFHbEQsRUFBRTZDLEVBQUU3QyxFQUFFa0QsRUFBRXkyQixVQUFVdjZCLEVBQUVHLEdBQUcsSUFBSSxNQUFNLEtBQUtLLEVBQUVxOUIsT0FBTyxNQUFNcjZCLEVBQUUsR0FBR00sRUFBRXhELEVBQUUrRixLQUFLdkMsRUFBRSxVQUFVbEMsRUFBRTRCLEVBQUVNLEVBQUVaLFFBQVFZLEVBQUV4RCxFQUFFNkMsT0FBTyxDQUFDN0MsRUFBRStGLEtBQUs3QyxHQUFHTSxJQUFJbEQsRUFBRTZDLEVBQUU3QyxFQUFFa0QsRUFBRTlELEVBQUVHLEdBQUcsSUFBSSxNQUFNLFFBQVEsTUFBTSxJQUFJcUYsTUFBTSwyQkFBMkIsR0FBRyxJQUFJL0UsRUFBRSxJQUFJLElBQUlOLEVBQUUsRUFBRUEsRUFBRUgsRUFBRWtELE9BQU8vQyxJQUFJSCxFQUFFRyxJQUFJTSxFQUFFLENBQUMsQ0FBQyxPQUFPRyxDQUFDLEVBQUU4OEIsU0FBU2w5QixFQUFDLEVBQUcsS0FBSyxDQUFDTCxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQzhnQyxHQUFHLElBQUluZ0MsRUFBRW9nQyxHQUFHLElBQUl0N0IsRUFBRXU3QixHQUFHLElBQUl0K0IsRUFBRXUrQixHQUFHLElBQUkxK0IsRUFBRTIrQixHQUFHLElBQUl6K0IsRUFBRTArQixHQUFHLElBQUkxMUIsRUFBRTIxQixHQUFHLElBQUl6MUIsRUFBRTAxQixHQUFHLElBQUluMkIsRUFBRW8yQixHQUFHLElBQUl6M0IsRUFBRTAzQixHQUFHLElBQUkvK0IsRUFBRWcvQixHQUFHLElBQUlyL0IsRUFBRXMvQixHQUFHLElBQUlyL0IsRUFBRXMvQixHQUFHLElBQUk3Z0MsRUFBRThnQyxHQUFHLElBQUlyL0IsRUFBRXMvQixHQUFHLElBQUlwOUIsRUFBRXE5QixHQUFHLElBQUlqaEMsRUFBRWtoQyxHQUFHLElBQUloK0IsRUFBRWkrQixHQUFHLElBQUl2K0IsRUFBRXcrQixHQUFHLElBQUl2aEMsRUFBRXdoQyxHQUFHLElBQUl4K0IsRUFBRXkrQixHQUFHLElBQUlqNEIsRUFBRWs0QixHQUFHLElBQUl4M0IsRUFBRXkzQixHQUFHLElBQUl0NEIsRUFBRXU0QixHQUFHLElBQUk3MkIsSUFBSSxJQUFJbEwsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxLQUFLRyxFQUFFSCxFQUFFLE1BQU13VyxPQUFPLE1BQU1yVCxFQUFFLE1BQU01QyxFQUFFLEdBQUc2QyxFQUFFLEVBQUVoRCxFQUFFLEVBQUVxRCxFQUFFLEVBQUVuQyxFQUFFLG9DQUFvQ1UsRUFBRSxvQ0FBb0MsTUFBTXhCLEVBQUV5aEMsWUFBWW5pQyxHQUFHLEdBQUdBLEVBQUVvaUMsU0FBUyxNQUFNLENBQUMsTUFBTXZpQyxFQUFFYSxFQUFFd0YsS0FBS2xHLEVBQUV1SyxNQUFNLEVBQUV2SyxFQUFFK0MsT0FBTyxJQUFJLE9BQU8sSUFBSXVDLEVBQUV6RixFQUFFLENBQUMsR0FBR0csRUFBRW9pQyxTQUFTLEtBQUssQ0FBQyxNQUFNdmlDLEVBQUVHLEVBQUUyb0IsTUFBTW5uQixHQUFHLEdBQUcsSUFBSTNCLEVBQUVrRCxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sa0NBQWtDckYsS0FBSyxNQUFNRSxFQUFFTCxFQUFFLEdBQUdNLEVBQUVtWCxTQUFTcFgsRUFBRSxJQUFJLEdBQUdDLEVBQUVrRCxFQUFFLE1BQU0sSUFBSWdDLE1BQU0sOEJBQThCaEMsS0FBSyxNQUFNakQsRUFBRU0sRUFBRXdGLEtBQUtyRyxFQUFFLElBQUksT0FBTyxJQUFJMEMsRUFBRW5DLEVBQUVELEVBQUUsQ0FBQyxHQUFHSCxFQUFFcWlDLFdBQVcsUUFBUSxDQUFDLE1BQU14aUMsRUFBRUcsR0FBRyxJQUFJQSxHQUFHc2lDLE9BQU90aUMsR0FBRyxhQUFheVksU0FBU3pZLEtBQUtFLEVBQUVGLEVBQUV1SyxNQUFNLEVBQUV2SyxFQUFFK0MsUUFBUSxJQUFJbEQsRUFBRUssR0FBRyxNQUFNLElBQUltRixNQUFNLDBCQUEwQm5GLEtBQUssTUFBTUMsRUFBRW1YLFNBQVNwWCxFQUFFLElBQUksR0FBR0MsRUFBRWtELEVBQUUsTUFBTSxJQUFJZ0MsTUFBTSwwQkFBMEJsRixLQUFLLE9BQU8sSUFBSWtFLEVBQUVsRSxFQUFFLENBQUMsR0FBRyxTQUFTSCxFQUFFLE9BQU8sSUFBSXNDLEVBQUUsR0FBR3RDLEVBQUVxaUMsV0FBVyxVQUFVLENBQUMsTUFBTXhpQyxFQUFFRyxFQUFFMm9CLE1BQU16bUIsR0FBRyxHQUFHLElBQUlyQyxFQUFFa0QsT0FBTyxNQUFNLElBQUlzQyxNQUFNLDBCQUEwQnJGLEtBQUssTUFBTUUsRUFBRW9YLFNBQVN6WCxFQUFFLEdBQUcsSUFBSU0sRUFBRW1YLFNBQVN6WCxFQUFFLEdBQUcsSUFBSSxPQUFPLElBQUlzQyxFQUFFakMsRUFBRUMsRUFBRSxDQUFDLEdBQUcsU0FBU0gsRUFBRSxPQUFPLElBQUlvQyxFQUFFLEdBQUcsWUFBWXBDLEVBQUUsT0FBTyxJQUFJUSxFQUFFLEdBQUcsV0FBV1IsRUFBRSxPQUFPLElBQUlxQyxFQUFFLEdBQUdyQyxFQUFFK0MsUUFBUSxHQUFHLE1BQU0vQyxFQUFFLElBQUksTUFBTUEsRUFBRUEsRUFBRStDLE9BQU8sR0FBRyxDQUFDLE1BQU1sRCxFQUFFb0MsRUFBRXNnQyxrQkFBa0J2aUMsRUFBRXVLLE1BQU0sRUFBRXZLLEVBQUUrQyxPQUFPLElBQUk3QyxFQUFFLEdBQUcsSUFBSSxJQUFJRixFQUFFLEVBQUVBLEVBQUVILEVBQUVrRCxPQUFPL0MsSUFBSSxDQUFDLE1BQU1HLEVBQUVPLEVBQUV3RixLQUFLckcsRUFBRUcsSUFBSUUsRUFBRXlDLEtBQUt4QyxFQUFFLENBQUMsT0FBTyxJQUFJOEIsRUFBRS9CLEVBQUUsQ0FBQyxNQUFNLElBQUltRixNQUFNLDJCQUEyQnJGLG1CQUFtQixFQUFFLE1BQU1xRSxVQUFVM0QsRUFBRWtMLFlBQVk1TCxHQUFHLEdBQUd1YyxRQUFRdmMsRUFBRSxHQUFHLEdBQUdBLEVBQUUsR0FBR0EsRUFBRSxJQUFJLE1BQU0sSUFBSXFGLE1BQU0sa0NBQWtDckYsS0FBSytELEtBQUt5K0IsUUFBUXhpQyxDQUFDLENBQUM2SSxXQUFXLE1BQU0sT0FBTzlFLEtBQUt5K0IsU0FBUyxDQUFDbHFCLE9BQU90WSxHQUFHLE9BQU9BLGFBQWFxRSxHQUFHTixLQUFLeStCLFVBQVV4aUMsRUFBRXdpQyxPQUFPLENBQUNDLFlBQVksT0FBTSxDQUFFLENBQUNDLFVBQVUsT0FBTzMrQixLQUFLeStCLFFBQVEsQ0FBQyxDQUFDOStCLE9BQU8xRCxHQUFHLEdBQUcsaUJBQWlCQSxHQUFHLGlCQUFpQkEsRUFBRSxNQUFNLElBQUlxRixNQUFNLDhCQUE4QnRCLEtBQUt5K0IsWUFBWXhpQyxLQUFLLEdBQUdBLEdBQUcyRSxPQUFPLEdBQUdaLEtBQUt5K0IsVUFBVXhpQyxFQUFFMkUsT0FBTyxHQUFHLE1BQU0sSUFBSVUsTUFBTSxHQUFHckYsNkRBQTZEK0QsS0FBS3krQixXQUFXLEdBQUcsaUJBQWlCeGlDLElBQUl3RSxPQUFPb0QsY0FBYzVILEdBQUcsTUFBTSxJQUFJcUYsTUFBTSxHQUFHckYsNERBQTRELE9BQU0sRUFBR0ksRUFBRTJCLEdBQUcvQixFQUFFK0QsS0FBS3krQixRQUFRLEVBQUUsQ0FBQ2o5QixPQUFPdkYsR0FBRyxHQUFHQSxFQUFFK0MsU0FBU2dCLEtBQUt5K0IsUUFBUSxFQUFFLE1BQU0sSUFBSW45QixNQUFNLHdDQUF3Q3RCLEtBQUt5K0IsV0FBVyxPQUFNLEVBQUdwaUMsRUFBRW1DLEdBQUd2QyxFQUFFLEVBQUUsTUFBTW1DLFVBQVV6QixFQUFFa0wsWUFBWTVMLEVBQUVILEdBQUcsR0FBRzBjLFFBQVF2YyxFQUFFLEdBQUcsR0FBR0EsRUFBRSxHQUFHQSxFQUFFLElBQUksTUFBTSxJQUFJcUYsTUFBTSxvQ0FBb0NyRixLQUFLLEdBQUdILEVBQUUsS0FBS0EsRUFBRSxFQUFFLE1BQU0sSUFBSXdGLE1BQU0sc0NBQXNDeEYsS0FBS2tFLEtBQUt5K0IsUUFBUXhpQyxFQUFFK0QsS0FBSzBSLFVBQVU1VixDQUFDLENBQUNnSixXQUFXLE1BQU0sU0FBUzlFLEtBQUt5K0IsV0FBV3orQixLQUFLMFIsV0FBVyxDQUFDNkMsT0FBT3RZLEdBQUcsT0FBT0EsYUFBYW1DLEdBQUc0QixLQUFLeStCLFVBQVV4aUMsRUFBRXdpQyxTQUFTeitCLEtBQUswUixZQUFZelYsRUFBRXlWLFNBQVMsQ0FBQ2d0QixZQUFZLE9BQU0sQ0FBRSxDQUFDQyxVQUFVLE9BQU8zK0IsS0FBS3krQixRQUFRLENBQUMsQ0FBQzkrQixPQUFPMUQsR0FBRyxHQUFHLGlCQUFpQkEsR0FBRyxpQkFBaUJBLEVBQUUsTUFBTSxJQUFJcUYsTUFBTSwwQkFBMEJ0QixLQUFLOEUsZUFBZTdJLEtBQUssR0FBR0EsR0FBRzJFLE9BQU8sR0FBR1osS0FBS3krQixVQUFVeGlDLEVBQUUyRSxPQUFPLEdBQUcsTUFBTSxJQUFJVSxNQUFNLEdBQUdyRix5REFBeUQrRCxLQUFLOEUsY0FBYyxHQUFHLGlCQUFpQjdJLElBQUl3RSxPQUFPb0QsY0FBYzVILEdBQUcsTUFBTSxJQUFJcUYsTUFBTSxHQUFHckYsNERBQTRELE9BQU0sRUFBR0ksRUFBRTJCLEdBQUcvQixFQUFFK0QsS0FBS3krQixRQUFRLEVBQUUsQ0FBQ2o5QixPQUFPdkYsR0FBRyxHQUFHQSxFQUFFK0MsU0FBU2dCLEtBQUt5K0IsUUFBUSxFQUFFLE1BQU0sSUFBSW45QixNQUFNLG9DQUFvQ3RCLEtBQUs4RSxjQUFjLE9BQU0sRUFBR3pJLEVBQUVtQyxHQUFHdkMsRUFBRSxFQUFFLE1BQU1RLFVBQVVFLEVBQUVtSSxXQUFXLE1BQU0sU0FBUyxDQUFDeVAsT0FBT3RZLEdBQUcsT0FBT0EsYUFBYVEsQ0FBQyxDQUFDaWlDLFlBQVksT0FBTSxDQUFFLENBQUNDLFVBQVUsT0FBT2ppQyxDQUFDLENBQUNpRCxPQUFPMUQsR0FBRyxHQUFHLGlCQUFpQkEsS0FBS0EsYUFBYThFLFlBQVksTUFBTSxJQUFJTyxNQUFNLDBCQUEwQnRCLEtBQUs4RSxlQUFlN0ksS0FBSyxHQUFHLGlCQUFpQkEsRUFBRSxPQUFNLEVBQUdHLEVBQUUrOUIsZUFBZWwrQixHQUFHbzZCLFVBQVUsR0FBRyxLQUFLcDZCLEVBQUVvRixXQUFXLE1BQU0sSUFBSUMsTUFBTSxvREFBb0QsT0FBT3JGLENBQUMsQ0FBQ3VGLE9BQU92RixHQUFHLEdBQUcsS0FBS0EsRUFBRW9GLFdBQVcsTUFBTSxJQUFJQyxNQUFNLG9EQUFvRCxPQUFNLEVBQUdsRixFQUFFaytCLGVBQWVyK0IsRUFBRSxFQUFFLE1BQU1vQyxVQUFVMUIsRUFBRW1JLFdBQVcsTUFBTSxNQUFNLENBQUN5UCxPQUFPdFksR0FBRyxPQUFPQSxhQUFhb0MsQ0FBQyxDQUFDcWdDLFlBQVksT0FBTSxDQUFFLENBQUNDLFVBQVUsT0FBT3BpQyxDQUFDLENBQUNvRCxPQUFPMUQsR0FBRyxHQUFHLGtCQUFrQkEsRUFBRSxNQUFNLElBQUlxRixNQUFNLGdDQUFnQ3JGLEtBQUssT0FBT0EsRUFBRSxJQUFJOEUsV0FBVyxDQUFDLE1BQU0sSUFBSUEsV0FBVyxDQUFDLEdBQUcsQ0FBQ1MsT0FBT3ZGLEdBQUcsR0FBRyxJQUFJQSxFQUFFb0YsV0FBVyxNQUFNLElBQUlDLE1BQU0sbUNBQW1DLE1BQU14RixFQUFFRyxFQUFFLEdBQUcsR0FBRyxNQUFNSCxFQUFFLE9BQU0sRUFBRyxHQUFHLElBQUlBLEVBQUUsT0FBTSxFQUFHLE1BQU0sSUFBSXdGLE1BQU0sb0RBQW9ELEVBQUUsTUFBTS9DLFVBQVU1QixFQUFFbUksV0FBVyxNQUFNLE1BQU0sQ0FBQ3lQLE9BQU90WSxHQUFHLE9BQU9BLGFBQWFzQyxDQUFDLENBQUNtZ0MsWUFBWSxPQUFNLENBQUUsQ0FBQ0MsVUFBVSxPQUFPcC9CLENBQUMsQ0FBQ0ksT0FBTzFELEdBQUcsR0FBRyxpQkFBaUJBLEdBQUcsaUJBQWlCQSxFQUFFLE1BQU0sSUFBSXFGLE1BQU0sZ0NBQWdDckYsS0FBSyxHQUFHLGlCQUFpQkEsSUFBSUEsRUFBRXdFLE9BQU94RSxJQUFJQSxFQUFFLEdBQUdBLEVBQUUsSUFBSSxNQUFNLElBQUlxRixNQUFNLEdBQUdyRixtQ0FBbUMsT0FBTyxJQUFJOEUsV0FBVyxDQUFDOUUsR0FBRyxDQUFDdUYsT0FBT3ZGLEdBQUcsR0FBRyxJQUFJQSxFQUFFb0YsV0FBVyxNQUFNLElBQUlDLE1BQU0sbUNBQW1DLE9BQU9yRixFQUFFLEVBQUUsRUFBRSxNQUFNcUMsVUFBVTNCLEVBQUVtSSxXQUFXLE1BQU0sUUFBUSxDQUFDeVAsT0FBT3RZLEdBQUcsT0FBT0EsYUFBYXFDLENBQUMsQ0FBQ29nQyxZQUFZLE9BQU0sQ0FBRSxDQUFDQyxVQUFVLE1BQU0sSUFBSXI5QixNQUFNLEdBQUd0QixLQUFLOEUsK0JBQStCLENBQUNuRixPQUFPMUQsR0FBRyxHQUFHLGlCQUFpQkEsS0FBS0EsYUFBYThFLFlBQVksTUFBTSxJQUFJTyxNQUFNLGtDQUFrQ3JGLEtBQUssTUFBTUgsRUFBRVEsRUFBRTZGLEtBQUtsRyxHQUFHRSxHQUFFLEVBQUdFLEVBQUUyQixHQUFHL0IsRUFBRStDLE9BQU9ZLEdBQUd4RCxFQUFFLElBQUkyRSxXQUFXOUUsRUFBRStDLE9BQU9ZLEdBQUcsT0FBT3hELEVBQUVzRCxJQUFJdkQsR0FBR0MsRUFBRXNELElBQUk1RCxFQUFFOEQsR0FBR3hELENBQUMsQ0FBQ29GLE9BQU92RixHQUFHLEdBQUdBLEVBQUUrQyxPQUFPWSxFQUFFLE1BQU0sSUFBSTBCLE1BQU0sNERBQTREckYsRUFBRStDLGlDQUFpQ1ksS0FBSyxNQUFNOUQsRUFBRVEsRUFBRTZGLEtBQUtsRyxHQUFHK1ksV0FBVyxFQUFFcFYsR0FBR3pELEVBQUVGLEVBQUV1SyxNQUFNNUcsRUFBRTNELEVBQUUrQyxRQUFRLEdBQUdsRCxJQUFJSyxFQUFFNkMsT0FBTyxNQUFNLElBQUlzQyxNQUFNLDBFQUEwRXhGLFVBQVVLLEVBQUU2QyxVQUFVLE9BQU8xQyxFQUFFNkYsS0FBS2hHLEdBQUcySSxTQUFTLFFBQVEsRUFBRSxNQUFNdEcsVUFBVTdCLEVBQUVrTCxZQUFZNUwsRUFBRUgsR0FBRyxHQUFHMGMsUUFBUTFjLEVBQUUsRUFBRSxNQUFNLElBQUl3RixNQUFNLG1EQUFtRHhGLEtBQUtrRSxLQUFLNCtCLFVBQVUzaUMsRUFBRStELEtBQUs2K0IsYUFBYS9pQyxDQUFDLENBQUNnSixXQUFXLE1BQU0sR0FBRzlFLEtBQUs0K0IsVUFBVTk1QixjQUFjOUUsS0FBSzYrQixlQUFlLENBQUN0cUIsT0FBT3RZLEdBQUcsT0FBT0EsYUFBYXVDLEdBQUd3QixLQUFLNitCLGVBQWU1aUMsRUFBRTRpQyxjQUFjNytCLEtBQUs0K0IsVUFBVXJxQixPQUFPdFksRUFBRTJpQyxVQUFVLENBQUNGLFlBQVksT0FBTzErQixLQUFLNCtCLFVBQVVGLFdBQVcsQ0FBQ0MsVUFBVSxPQUFPMytCLEtBQUs0K0IsVUFBVS8yQixjQUFjeEosRUFBRThCLEtBQUsrTCxLQUFLbE0sS0FBSzYrQixhQUFhLEdBQUc3K0IsS0FBSzYrQixhQUFhNytCLEtBQUs0K0IsVUFBVUQsU0FBUyxDQUFDaC9CLE9BQU8xRCxHQUFHLEtBQUt5SSxNQUFNQyxRQUFRMUksSUFBSUEsYUFBYThFLFlBQVksTUFBTSxJQUFJTyxNQUFNLDBCQUEwQnRCLEtBQUs4RSxlQUFlN0ksS0FBSyxHQUFHQSxFQUFFK0MsU0FBU2dCLEtBQUs2K0IsYUFBYSxNQUFNLElBQUl2OUIsTUFBTSw0REFBNER0QixLQUFLNitCLHFCQUFxQjVpQyxFQUFFK0MsVUFBVSxPQUFPZ0IsS0FBSzgrQixpQkFBaUJuL0IsT0FBTzFELEVBQUUsQ0FBQ3VGLE9BQU92RixHQUFHLE9BQU8rRCxLQUFLOCtCLGlCQUFpQnQ5QixPQUFPdkYsRUFBRSxDQUFDNmlDLGlCQUFpQixPQUFPLElBQUk1Z0MsRUFBRXdHLE1BQU0xRSxLQUFLNitCLGNBQWNockIsS0FBSzdULEtBQUs0K0IsV0FBVyxFQUFFLE1BQU1yOUIsVUFBVTVFLEVBQUVrTCxZQUFZNUwsR0FBR3VjLFFBQVF4WSxLQUFLNCtCLFVBQVUzaUMsQ0FBQyxDQUFDNkksV0FBVyxNQUFNLEdBQUc5RSxLQUFLNCtCLFVBQVU5NUIsY0FBYyxDQUFDeVAsT0FBT3RZLEdBQUcsT0FBT0EsYUFBYXNGLEdBQUd2QixLQUFLNCtCLFVBQVVycUIsT0FBT3RZLEVBQUUyaUMsVUFBVSxDQUFDRixZQUFZLE9BQU0sQ0FBRSxDQUFDQyxVQUFVLE1BQU0sSUFBSXI5QixNQUFNLEdBQUd0QixLQUFLOEUsK0JBQStCLENBQUNuRixPQUFPMUQsR0FBRyxLQUFLeUksTUFBTUMsUUFBUTFJLElBQUlBLGFBQWE4RSxZQUFZLE1BQU0sSUFBSU8sTUFBTSwwQkFBMEJ0QixLQUFLOEUsZUFBZTdJLEtBQUssTUFBTUgsRUFBRWtFLEtBQUs4K0IsZUFBZTdpQyxFQUFFK0MsUUFBUTdDLEVBQUVMLEVBQUU2RCxPQUFPMUQsR0FBR0csR0FBRSxFQUFHQyxFQUFFMkIsR0FBR2xDLEVBQUVpakMsV0FBVy8vQixPQUFPWSxHQUFHLE9BQU0sRUFBR2xDLEVBQUUwK0IsY0FBY2hnQyxFQUFFRCxFQUFFLENBQUNxRixPQUFPdkYsR0FBRyxNQUFNSCxFQUFFUSxFQUFFNkYsS0FBS2xHLEdBQUcrWSxXQUFXLEVBQUVwVixHQUFHLE9BQU9JLEtBQUs4K0IsZUFBZWhqQyxHQUFHMEYsT0FBT3ZGLEVBQUV1SyxNQUFNNUcsRUFBRTNELEVBQUUrQyxRQUFRLENBQUM4L0IsZUFBZTdpQyxHQUFHLE9BQU8sSUFBSWlDLEVBQUV3RyxNQUFNekksR0FBRzRYLEtBQUs3VCxLQUFLNCtCLFdBQVcsRUFBRSxNQUFNMWdDLFVBQVV2QixFQUFFa0wsWUFBWTVMLEdBQUcsR0FBR3VjLFFBQVF2YyxFQUFFK0MsUUFBUU0sRUFBRSxNQUFNLElBQUlnQyxNQUFNLGlFQUFpRXRCLEtBQUsrK0IsV0FBVzlpQyxDQUFDLENBQUM2SSxXQUFXLE1BQU03SSxFQUFFLEdBQUcsSUFBSSxJQUFJSCxFQUFFLEVBQUVBLEVBQUVrRSxLQUFLKytCLFdBQVcvL0IsT0FBT2xELElBQUlHLEVBQUVILEdBQUdrRSxLQUFLKytCLFdBQVdqakMsR0FBR2dKLFdBQVcsTUFBTSxJQUFJN0ksRUFBRStQLEtBQUssT0FBTyxDQUFDdUksT0FBT3RZLEdBQUcsT0FBT0EsYUFBYWlDLEdBQUc4QixLQUFLKytCLFdBQVcvL0IsU0FBUy9DLEVBQUU4aUMsV0FBVy8vQixRQUFRZ0IsS0FBSysrQixXQUFXUixPQUFNLENBQUV6aUMsRUFBRUssSUFBSUwsRUFBRXlZLE9BQU90WSxFQUFFOGlDLFdBQVc1aUMsS0FBSyxDQUFDdWlDLFlBQVksT0FBTzErQixLQUFLKytCLFdBQVdDLE1BQU0vaUMsR0FBR0EsRUFBRXlpQyxhQUFhLENBQUNDLFVBQVUsSUFBSTFpQyxFQUFFLEVBQUUsSUFBSSxJQUFJSCxFQUFFLEVBQUVBLEVBQUVrRSxLQUFLKytCLFdBQVcvL0IsT0FBT2xELElBQUksR0FBR2tFLEtBQUsrK0IsV0FBV2pqQyxHQUFHK0wsY0FBY3hKLEVBQUUsQ0FBQyxNQUFNbEMsRUFBRWlHLEVBQUVwQyxLQUFLKytCLFdBQVdqakMsRUFBRSxHQUFHTSxFQUFFRCxFQUFFLEVBQUVMLEdBQUdLLEVBQUVGLEdBQUdrRSxLQUFLOCtCLE9BQU83aUMsRUFBRSxHQUFHLEVBQUUsTUFBTUgsR0FBRytELEtBQUsrK0IsV0FBV2pqQyxHQUFHNmlDLFVBQVUsT0FBTzFpQyxDQUFDLENBQUMwRCxPQUFPMUQsR0FBRyxLQUFLeUksTUFBTUMsUUFBUTFJLElBQUlBLGFBQWE4RSxZQUFZLE1BQU0sSUFBSU8sTUFBTSwwQkFBMEJ0QixLQUFLOEUsZUFBZTdJLEtBQUssTUFBTUgsRUFBRTRJLE1BQU12QyxLQUFLbEcsR0FBRyxHQUFHQSxFQUFFK0MsT0FBT00sRUFBRSxNQUFNLElBQUlnQyxNQUFNLG9EQUFvRCxNQUFNbkYsRUFBRTZELEtBQUsrK0IsV0FBVzNpQyxFQUFFLEdBQUdFLEVBQUUsR0FBR0ksRUFBRSxJQUFJNGUsSUFBSSxJQUFJL2IsRUFBRSxFQUFFLEtBQUtBLEVBQUVwRCxFQUFFNkMsUUFBUSxDQUFDLE1BQU0vQyxFQUFFRSxFQUFFb0QsR0FBRyxHQUFHdEQsRUFBRXlpQyxZQUFZaGlDLEVBQUVnRCxJQUFJdEQsRUFBRTRDLFFBQU8sR0FBSTVDLEVBQUV3QyxLQUFLLElBQUltQyxXQUFXLENBQUMsRUFBRSxLQUFLekUsRUFBRXNDLEtBQUszQyxFQUFFMEQsT0FBTzdELEVBQUV5RCxTQUFTLENBQUMsR0FBR3RELEVBQUU0TCxjQUFjeEosRUFBRSxDQUFDLE1BQU1wQyxFQUFFbUcsRUFBRWpHLEVBQUVvRCxHQUFHLEdBQUcsSUFBSTdCLEVBQUUwRSxFQUFFakcsRUFBRW9ELEVBQUUsR0FBRyxHQUFHdEQsRUFBRSxHQUFHLEVBQUUsTUFBTSxJQUFJcUYsTUFBTSxrRUFBa0U1RCxFQUFFeUMsS0FBSytPLElBQUksRUFBRXhSLEdBQUcsTUFBTXBCLEVBQUUwRixFQUFFbEcsRUFBRTBLLE1BQU1qSCxFQUFFQSxFQUFFN0IsRUFBRSxJQUFJdEIsRUFBRXdDLE1BQUssRUFBR3ZDLEVBQUUyQixHQUFHMUIsRUFBRSxJQUFJaUQsR0FBRzdCLENBQUMsS0FBSyxDQUFDLE1BQU12QixFQUFFRixFQUFFMEQsT0FBTzdELEVBQUV5RCxJQUFJbkQsRUFBRXdDLEtBQUt6QyxFQUFFLENBQUNPLEVBQUVnRCxJQUFJSCxHQUFFLEdBQUlqRCxFQUFFc0MsS0FBSyxJQUFJbUMsV0FBVyxDQUFDeEIsR0FBRyxDQUFDLENBQUMsSUFBSWhELEVBQUUsRUFBRSxJQUFJLE1BQU1OLEtBQUtHLEVBQUVHLEdBQUdOLEVBQUUrQyxPQUFPLElBQUl2QixFQUFFLEVBQUUsSUFBSSxJQUFJeEIsRUFBRSxFQUFFQSxFQUFFRyxFQUFFNEMsT0FBTy9DLElBQUksQ0FBQyxHQUFHUyxFQUFFSyxJQUFJZCxHQUFHLENBQUMsTUFBTUgsRUFBRVMsRUFBRWtCLEVBQUUsR0FBRzNCLEVBQUV3RCxFQUFFLE1BQU0sSUFBSWdDLE1BQU0sa0JBQWtCeEYsZ0NBQWdDTSxFQUFFSCxJQUFHLEVBQUdJLEVBQUUyQixHQUFHbEMsRUFBRThELEVBQUUsQ0FBQ25DLEdBQUduQixFQUFFTCxHQUFHK0MsTUFBTSxDQUFDLE9BQU0sRUFBR3RCLEVBQUUwK0IsaUJBQWlCaGdDLEtBQUtFLEVBQUUsQ0FBQ2tGLE9BQU92RixHQUFHLE1BQU1ILEVBQUVrRSxLQUFLKytCLFdBQVc1aUMsRUFBRSxHQUFHQyxFQUFFLEdBQUcsSUFBSUMsRUFBRSxFQUFFcUIsRUFBRSxFQUFFLE1BQU00QixFQUFFaEQsRUFBRTZGLEtBQUtsRyxHQUFHLEtBQUtJLEVBQUVQLEVBQUVrRCxRQUFRLENBQUMsTUFBTTFDLEVBQUVSLEVBQUVPLEdBQUcsR0FBR0MsRUFBRW9pQyxZQUFZLENBQUMsR0FBR3ppQyxFQUFFdUssTUFBTTlJLEVBQUV6QixFQUFFK0MsUUFBUUEsT0FBT1ksRUFBRSxNQUFNLElBQUkwQixNQUFNLG9EQUFvRCxNQUFNeEYsRUFBRXdELEVBQUUwVixXQUFXdFgsRUFBRWtDLEdBQUcsR0FBR3pELEVBQUU2QyxPQUFPLElBQUk3QyxFQUFFQSxFQUFFNkMsT0FBTyxHQUFHa2dDLE1BQU1wakMsRUFBRUEsRUFBRUssRUFBRUEsRUFBRTZDLE9BQU8sR0FBR21nQyxNQUFNLE1BQU0sSUFBSTc5QixNQUFNLDBFQUEwRSxNQUFNakYsRUFBRSxDQUFDOGlDLEtBQUtyakMsRUFBRW9qQyxPQUFPLEdBQUcvaUMsRUFBRXlDLEtBQUt2QyxHQUFHRCxFQUFFd0MsS0FBSyxNQUFNbEIsR0FBR2tDLENBQUMsTUFBTSxHQUFHdEQsRUFBRXVMLGNBQWN4SixFQUFFLENBQUMsTUFBTXZDLEVBQUVzRyxFQUFFcEMsS0FBSysrQixXQUFXMWlDLEdBQUcsR0FBRyxJQUFJRixFQUFFaUcsRUFBRXBDLEtBQUsrK0IsV0FBVzFpQyxFQUFFLEdBQUcsR0FBR1AsRUFBRSxHQUFHLEVBQUUsTUFBTSxJQUFJd0YsTUFBTSwyQ0FBMkNuRixFQUFFZ0UsS0FBSytPLElBQUksRUFBRS9TLEdBQUcsSUFBSSxJQUFJTCxFQUFFLEVBQUVBLEdBQUdLLEVBQUVMLElBQUksQ0FBQyxNQUFNSyxFQUFFLEtBQUtMLEdBQUdHLEVBQUV5QixHQUFHdkIsR0FBRyxFQUFFQyxFQUFFd0MsS0FBSyxJQUFJbUMsV0FBVyxDQUFDLE9BQU8zRSxFQUFFd0MsS0FBSyxJQUFJbUMsV0FBVyxDQUFDLElBQUksQ0FBQzFFLEdBQUdGLEVBQUV1QixHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU01QixFQUFFUSxFQUFFcWlDLFVBQVV2aUMsRUFBRXdDLEtBQUszQyxFQUFFdUssTUFBTTlJLEVBQUVBLEVBQUU1QixJQUFJNEIsR0FBRzVCLENBQUMsQ0FBQyxHQUFHTyxJQUFJUCxFQUFFa0QsT0FBTyxHQUFHdEIsR0FBR3pCLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sbUNBQW1DakYsR0FBRyxDQUFDLENBQUMsR0FBR0YsRUFBRTZDLE9BQU8sSUFBSTdDLEVBQUVBLEVBQUU2QyxPQUFPLEdBQUdrZ0MsTUFBTWpqQyxFQUFFK0MsT0FBT3RCLEVBQUV6QixFQUFFK0MsUUFBUXRCLEVBQUV6QixFQUFFK0MsT0FBTyxNQUFNLElBQUlzQyxNQUFNLGlDQUFpQyxJQUFJLElBQUlyRixFQUFFLEVBQUVBLEVBQUVFLEVBQUU2QyxPQUFPL0MsSUFBSSxDQUFDLE1BQU1ILEVBQUVLLEVBQUVGLEdBQUcsR0FBR0gsRUFBRXFqQyxLQUFLcmpDLEVBQUVvakMsTUFBTSxNQUFNLElBQUk1OUIsTUFBTSw2REFBNkQsR0FBR3JGLElBQUlFLEVBQUU2QyxPQUFPLEdBQUdsRCxFQUFFb2pDLFFBQVEvaUMsRUFBRUYsRUFBRSxHQUFHa2pDLEtBQUssTUFBTSxJQUFJNzlCLE1BQU0sd0NBQXdDLENBQUMsSUFBSTVFLEVBQUUsRUFBRSxJQUFJLElBQUlMLEVBQUUsRUFBRUEsRUFBRVAsRUFBRWtELE9BQU8zQyxJQUFJUCxFQUFFTyxHQUFHcWlDLGNBQWN0aUMsRUFBRUMsR0FBR0osRUFBRXVLLE1BQU1ySyxFQUFFTyxHQUFHeWlDLEtBQUtoakMsRUFBRU8sR0FBR3dpQyxPQUFPeGlDLEdBQUcsR0FBRyxNQUFNNkMsRUFBRSxHQUFHLElBQUksSUFBSXRELEVBQUUsRUFBRUEsRUFBRUgsRUFBRWtELE9BQU8vQyxJQUFJLENBQUMsTUFBTUUsRUFBRUwsRUFBRUcsR0FBR3VGLE9BQU9wRixFQUFFSCxJQUFJc0QsRUFBRVgsS0FBS3pDLEVBQUUsQ0FBQyxPQUFPb0QsQ0FBQyxDQUFDNitCLHlCQUF5Qm5pQyxHQUFHLEdBQUcsSUFBSUEsRUFBRStDLE9BQU8sTUFBTSxHQUFHLEdBQUcvQyxFQUFFb2lDLFNBQVMsTUFBTXBpQyxFQUFFcWlDLFdBQVcsS0FBSyxNQUFNLElBQUloOUIsTUFBTSw0Q0FBNEMsR0FBR3JGLEVBQUV5WSxTQUFTLE1BQU0sTUFBTSxJQUFJcFQsTUFBTSxtREFBbUQsTUFBTXhGLEVBQUUsR0FBRyxJQUFJSyxFQUFFLEVBQUVDLEVBQUUsR0FBRyxJQUFJLE1BQU1DLEtBQUtKLEVBQUVHLEdBQUdDLEVBQUUsTUFBTUEsRUFBRUYsR0FBRyxFQUFFLE1BQU1FLEVBQUVGLEdBQUcsRUFBRSxNQUFNRSxHQUFHLElBQUlGLElBQUlMLEVBQUU4QyxLQUFLeEMsRUFBRW9LLE1BQU0sRUFBRXBLLEVBQUU0QyxPQUFPLElBQUk1QyxFQUFFLElBQUksR0FBRyxJQUFJQSxFQUFFNEMsUUFBUWxELEVBQUU4QyxLQUFLeEMsR0FBRyxJQUFJRCxFQUFFLE1BQU0sSUFBSW1GLE1BQU0sMkNBQTJDLE9BQU94RixDQUFDLEVBQUUsU0FBU2tHLEVBQUUvRixHQUFHLElBQUlILEVBQUUsRUFBRSxHQUFHRyxFQUFFK0MsT0FBTyxFQUFFLE1BQU0sSUFBSXNDLE1BQU0sMkRBQTJELElBQUksSUFBSW5GLEVBQUUsRUFBRUEsRUFBRUYsRUFBRStDLE9BQU83QyxJQUFJLENBQUMsTUFBTUMsRUFBRUgsRUFBRUUsR0FBRyxHQUFHLGtCQUFrQkMsRUFBRSxNQUFNLElBQUlrRixNQUFNLHVEQUF1RGxGLElBQUlOLEdBQUcsR0FBRyxFQUFFSyxFQUFFLENBQUMsT0FBT0wsQ0FBQyxDQUFDLFNBQVNzRyxFQUFFbkcsRUFBRUgsRUFBRUssR0FBRyxJQUFJQyxFQUFFLEVBQUUsT0FBTyxDQUFDLE1BQU1DLEVBQUVQLEVBQUVLLEVBQUVDLEVBQUUsR0FBR0gsRUFBRUksR0FBR3dMLGNBQWN4SixFQUFFLENBQUNqQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUdDLElBQUlKLEVBQUUrQyxPQUFPLEdBQUcsSUFBSTdDLEVBQUVDLEdBQUcsTUFBTSxDQUFDLEtBQUtDLEVBQUUsSUFBSSxJQUFJRixHQUFHLE1BQU1DLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBT0EsQ0FBQyxDQUFDLElBQUk2QixFQUFFMEgsRUFBRWhJLEVBQUV4QixFQUFFLE1BQU0sU0FBU3lKLEVBQUUzSixHQUFHLE9BQU9BLElBQUlnQyxFQUFFbWhDLEtBQUtuakMsSUFBSWdDLEVBQUVvaEMsS0FBS3BqQyxJQUFJZ0MsRUFBRXFoQyxRQUFRcmpDLElBQUlnQyxFQUFFc2hDLE1BQU10akMsSUFBSWdDLEVBQUV1aEMsT0FBT3ZqQyxJQUFJZ0MsRUFBRXdoQyxNQUFNeGpDLElBQUlnQyxFQUFFeWhDLElBQUksQ0FBQyxTQUFTMzVCLEVBQUU5SixFQUFFSCxHQUFHLE9BQU9HLElBQUlnQyxFQUFFbWhDLEtBQUt0akMsRUFBRW1FLE1BQU1uRSxFQUFFbUUsS0FBSzZFLGFBQWE3SSxFQUFFNkksVUFBVSxDQUFDLFNBQVMyQixFQUFFeEssR0FBRyxPQUFPQSxJQUFJMEosRUFBRWc2QixTQUFTMWpDLElBQUkwSixFQUFFaTZCLGFBQWEzakMsSUFBSTBKLEVBQUVrNkIsS0FBSyxFQUFFLFNBQVM1akMsR0FBR0EsRUFBRW1qQyxJQUFJLE1BQU1uakMsRUFBRW9qQyxJQUFJLE1BQU1wakMsRUFBRXFqQyxPQUFPLFNBQVNyakMsRUFBRXNqQyxLQUFLLE9BQU90akMsRUFBRXVqQyxNQUFNLFFBQVF2akMsRUFBRXdqQyxLQUFLLE9BQU94akMsRUFBRXlqQyxLQUFLLE1BQU0sQ0FBL0csQ0FBaUh6aEMsSUFBSUEsRUFBRSxDQUFDLElBQUksU0FBU2hDLEdBQUdBLEVBQUUwakMsUUFBUSxVQUFVMWpDLEVBQUUyakMsWUFBWSxjQUFjM2pDLEVBQUU0akMsTUFBTSxPQUFPLENBQTNFLENBQTZFbDZCLElBQUlBLEVBQUUsQ0FBQyxJQUFJLE1BQU1xQixFQUFFYSxZQUFZNUwsR0FBRyxHQUFHLGlCQUFpQkEsRUFBRTBjLE1BQU0saUJBQWlCMWMsRUFBRTZqQyxVQUFVcDdCLE1BQU1DLFFBQVExSSxFQUFFMnBCLE1BQU0sTUFBTSxJQUFJdGtCLE1BQU0sZ0NBQWdDdEIsS0FBSzJZLEtBQUsxYyxFQUFFMGMsS0FBSzNZLEtBQUsrL0IsWUFBWTlqQyxFQUFFK2pDLEtBQUtoZ0MsS0FBSzRsQixLQUFLM3BCLEVBQUUycEIsS0FBSy9hLEtBQUksRUFBRzVLLEtBQUtoRSxFQUFFMGMsS0FBSzdjLEVBQUVra0MsS0FBSzdqQyxLQUFLeUosRUFBRTNKLElBQUl3SyxFQUFFeEssR0FBRyxDQUFDZ0UsS0FBS2hFLEVBQUUwYyxLQUFLN2MsRUFBRWlrQyxZQUFZNWpDLEdBQUcsQ0FBQzhELEtBQUt0RCxFQUFFd0YsS0FBS2xHLEdBQUcwYyxLQUFLN2MsRUFBRWlrQyxZQUFZNWpDLEtBQUs2RCxLQUFLOC9CLFFBQVEsQ0FBQzcvQixLQUFLLFNBQVNoRSxFQUFFNmpDLFFBQVE3L0IsS0FBS2hFLEVBQUU2akMsUUFBUTcvQixLQUFLdEQsRUFBRXdGLEtBQUtsRyxFQUFFNmpDLFFBQVE3L0IsTUFBTTgvQixZQUFZOWpDLEVBQUU2akMsUUFBUUUsS0FBSyxDQUFDQyxlQUFlLE1BQU1oa0MsRUFBRStELEtBQUs0bEIsS0FBSy9hLEtBQUs1TyxHQUFHQSxFQUFFZ0UsS0FBSzZFLGFBQWFrSCxLQUFLLEtBQUtsUSxFQUFFa0UsS0FBSzgvQixRQUFRNy9CLEtBQUs2RSxXQUFXLE1BQU0sR0FBRzlFLEtBQUsyWSxRQUFRMWMsS0FBS0gsR0FBRyxDQUFDb2tDLGNBQWMsTUFBTWprQyxHQUFFLEVBQUcwQixFQUFFd2lDLGFBQWFuZ0MsS0FBS2lnQyxnQkFBZ0IsT0FBTyxJQUFJbC9CLFdBQVc5RSxFQUFFdUssTUFBTSxFQUFFLEdBQUcsQ0FBQzQ1QixXQUFXLElBQUlua0MsRUFBRSxFQUFFLElBQUksTUFBTUgsS0FBS2tFLEtBQUs0bEIsS0FBSyxpQkFBaUI5cEIsRUFBRW1FLE1BQU0yRixFQUFFOUosRUFBRW1FLFFBQVFoRSxHQUFHLEdBQUcsT0FBT0EsQ0FBQyxDQUFDdVcsU0FBUyxNQUFNLENBQUNtRyxLQUFLM1ksS0FBSzJZLEtBQUtxbkIsS0FBS2hnQyxLQUFLKy9CLFlBQVluYSxLQUFLNWxCLEtBQUs0bEIsS0FBSy9hLEtBQUksRUFBRzVLLEtBQUtoRSxFQUFFMGMsS0FBSzdjLEVBQUVpa0MsWUFBWTVqQyxNQUFLLENBQUU4RCxLQUFLaEUsRUFBRTZJLFdBQVc2VCxLQUFLN2MsRUFBRWtrQyxLQUFLN2pDLE1BQU0yakMsUUFBUSxDQUFDNy9CLEtBQUtELEtBQUs4L0IsUUFBUTcvQixLQUFLNkUsV0FBV2s3QixLQUFLaGdDLEtBQUs4L0IsUUFBUUMsYUFBYSxDQUFDM0IscUJBQXFCbmlDLEdBQUcsTUFBTTBjLEtBQUs3YyxFQUFFOHBCLEtBQUt6cEIsRUFBRTJqQyxRQUFRMWpDLEdBQUcsU0FBU0gsR0FBRyxNQUFNSCxFQUFFRyxFQUFFZ1EsUUFBUSxLQUFLLElBQUksSUFBSW5RLEVBQUUsTUFBTSxJQUFJd0YsTUFBTSw2QkFBNkJyRixLQUFLLElBQUlFLEdBQUcsRUFBRUMsRUFBRSxFQUFFLElBQUksSUFBSUMsRUFBRVAsRUFBRU8sRUFBRUosRUFBRStDLE9BQU8zQyxJQUFJLENBQUMsTUFBTVAsRUFBRUcsRUFBRUksR0FBRyxHQUFHLE1BQU1QLEVBQUVNLEdBQUcsT0FBTyxHQUFHLE1BQU1OLEVBQUUsQ0FBQyxHQUFHLElBQUlNLEVBQUUsTUFBTSxHQUFHQSxHQUFHLEVBQUUsSUFBSUEsRUFBRSxDQUFDRCxFQUFFRSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJRixFQUFFLE1BQU0sSUFBSW1GLE1BQU0sNkJBQTZCckYsS0FBSyxNQUFNLENBQUMwYyxLQUFLMWMsRUFBRXVLLE1BQU0sRUFBRTFLLEdBQUc4cEIsS0FBSzFuQixFQUFFc2dDLGtCQUFrQnZpQyxFQUFFdUssTUFBTTFLLEVBQUUsRUFBRUssSUFBSTJqQyxRQUFRN2pDLEVBQUV1SyxNQUFNckssRUFBRSxHQUFHLENBQW5YLENBQXFYRixHQUFHLE9BQU8sSUFBSStLLEVBQUUsQ0FBQzJSLEtBQUs3YyxFQUFFOHBCLEtBQUt6cEIsRUFBRTBPLEtBQUs1TyxJQUFHLENBQUVnRSxLQUFLaEUsTUFBTTZqQyxRQUFRLENBQUM3L0IsS0FBSzdELElBQUksRUFBRSxTQUFTa0wsRUFBRXJMLEVBQUVILEdBQUcsR0FBRyxPQUFPRyxJQUFJeUksTUFBTUMsUUFBUTFJLEtBQUtBLEVBQUVzaUMsT0FBT3RpQyxHQUFHQSxhQUFhK0ssSUFBSSxNQUFNLElBQUkxRixNQUFNLHlEQUF5RCxNQUFNbkYsRUFBRUYsRUFBRXcxQixRQUFReDFCLEdBQUdBLEVBQUUwYyxPQUFPN2MsSUFBSSxHQUFHSyxFQUFFNkMsT0FBTyxFQUFFLE1BQU0sSUFBSXNDLE1BQU0sU0FBU25GLEVBQUU2QyxxQ0FBcUM3QyxFQUFFME8sS0FBSzVPLEdBQUdBLEVBQUVna0MsaUJBQWlCajBCLEtBQUssUUFBUSxHQUFHLElBQUk3UCxFQUFFNkMsT0FBTyxNQUFNLElBQUlzQyxNQUFNLGlDQUFpQ3hGLEtBQUssT0FBT0ssRUFBRSxFQUFFLENBQUMsTUFBTW9MLEVBQUVNLFlBQVk1TCxHQUFHLEdBQUcsaUJBQWlCQSxFQUFFMGMsT0FBT2pVLE1BQU1DLFFBQVExSSxFQUFFb2tDLFVBQVVwa0MsRUFBRXFrQyxVQUFVLGlCQUFpQnJrQyxFQUFFcWtDLFNBQVMsTUFBTSxJQUFJaC9CLE1BQU0sa0NBQWtDdEIsS0FBSzJZLEtBQUsxYyxFQUFFMGMsS0FBSzNZLEtBQUsrL0IsWUFBWTlqQyxFQUFFK2pDLEtBQUtoZ0MsS0FBS3NnQyxTQUFTcmtDLEVBQUVxa0MsU0FBUyxJQUFJcmtDLEVBQUVxa0MsVUFBVSxDQUFDLEVBQUV0Z0MsS0FBS3FnQyxRQUFRcGtDLEVBQUVva0MsUUFBUXgxQixLQUFLNU8sR0FBRyxJQUFJK0ssRUFBRS9LLElBQUksQ0FBQ3VXLFNBQVMsTUFBTSxDQUFDbUcsS0FBSzNZLEtBQUsyWSxLQUFLcW5CLEtBQUtoZ0MsS0FBSysvQixZQUFZTyxTQUFTdGdDLEtBQUtzZ0MsU0FBU0QsUUFBUXJnQyxLQUFLcWdDLFFBQVF4MUIsS0FBSzVPLEdBQUdBLEVBQUV1VyxXQUFXLENBQUMrdEIsZ0JBQWdCdGtDLEdBQUcsT0FBT3FMLEVBQUV0SCxLQUFLcWdDLFFBQVFwa0MsRUFBRSxFQUFFLE1BQU13TCxFQUFFSSxZQUFZNUwsR0FBRyxHQUFHLGlCQUFpQkEsRUFBRTBjLE9BQU9qVSxNQUFNQyxRQUFRMUksRUFBRW9rQyxTQUFTLE1BQU0sSUFBSS8rQixNQUFNLG1DQUFtQ3RCLEtBQUsyWSxLQUFLMWMsRUFBRTBjLEtBQUszWSxLQUFLKy9CLFlBQVk5akMsRUFBRStqQyxLQUFLaGdDLEtBQUtxZ0MsUUFBUXBrQyxFQUFFb2tDLFFBQVF4MUIsS0FBSzVPLEdBQUcsSUFBSStLLEVBQUUvSyxJQUFJLENBQUN1VyxTQUFTLE1BQU0sQ0FBQ21HLEtBQUszWSxLQUFLMlksS0FBS3FuQixLQUFLaGdDLEtBQUsrL0IsWUFBWU0sUUFBUXJnQyxLQUFLcWdDLFFBQVF4MUIsS0FBSzVPLEdBQUdBLEVBQUV1VyxXQUFXLENBQUMrdEIsZ0JBQWdCdGtDLEdBQUcsT0FBT3FMLEVBQUV0SCxLQUFLcWdDLFFBQVFwa0MsRUFBRSxFQUFDLEVBQUcsS0FBSyxDQUFDQSxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ21kLEVBQUUsSUFBSXZiLElBQUksSUFBSXRCLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNLFNBQVN1QixJQUFJLE1BQU16QixFQUFFRyxFQUFFZzZCLFVBQVUsTUFBTSxDQUFDb0ssS0FBS25rQyxFQUFFaStCLGNBQWNyK0IsRUFBRW82QixXQUFXb0ssR0FBR3hrQyxFQUFFcTZCLFVBQVUsR0FBRyxLQUFLLENBQUNyNkIsRUFBRUgsRUFBRUssS0FBSyxhQUFhQSxFQUFFUSxFQUFFYixFQUFFLENBQUNtZCxFQUFFLElBQUl2YyxJQUFJLElBQUlOLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxLQUFLbUQsRUFBRW5ELEVBQUUsTUFBTXdXLE9BQU8sTUFBTWpXLEVBQUVtTCxhQUFhNjRCLFVBQVV6a0MsRUFBRTBrQyxVQUFVN2tDLEVBQUU4a0MsTUFBTXprQyxFQUFFMGtDLFdBQVd4a0MsRUFBRXlrQyxVQUFVcGpDLEVBQUVxakMsU0FBU3prQyxJQUFJMEQsS0FBSzJZLEtBQUssTUFBTTNZLEtBQUtnaEMsSUFBSTFoQyxFQUFFNkMsS0FBSyxDQUFDLEdBQUcsS0FBSyxNQUFNekYsRUFBRU4sRUFBRSs5QixjQUFjbCtCLEdBQUdzRCxFQUFFbkQsRUFBRSs5QixjQUFjOTlCLEdBQUcsSUFBSW9FLE9BQU9vRCxjQUFjL0gsSUFBSUEsRUFBRSxFQUFFLE1BQU13RixNQUFNLDBDQUEwQyxJQUFJYixPQUFPb0QsY0FBYzFILElBQUlBLEVBQUUsRUFBRSxNQUFNbUYsTUFBTSxxQ0FBcUMsSUFBSWIsT0FBT29ELGNBQWNuRyxJQUFJQSxFQUFFLEVBQUUsTUFBTTRELE1BQU0sOEJBQThCMUUsT0FBT2cxQixPQUFPNXhCLEtBQUssQ0FBQzBnQyxVQUFVaGtDLEVBQUVpa0MsVUFBVTdrQyxFQUFFOGtDLE1BQU16a0MsRUFBRTBrQyxXQUFXdGhDLEVBQUV1aEMsVUFBVXBqQyxFQUFFcWpDLFNBQVN6a0MsR0FBRyxDQUFDdytCLHVCQUF1QixNQUFNLENBQUNtRyxPQUFPM2hDLEVBQUU2QyxLQUFLbkMsS0FBSzBnQyxVQUFVckssV0FBVzZLLElBQUlsaEMsS0FBSzJnQyxVQUFVUSxNQUFNbmhDLEtBQUsrZ0MsU0FBU0ssR0FBR3BoQyxLQUFLNGdDLE1BQU1TLElBQUkvaEMsRUFBRTZDLEtBQUtuQyxLQUFLNmdDLFdBQVd4SyxXQUFXaUwsSUFBSXRoQyxLQUFLOGdDLFVBQVUsQ0FBQ1MsUUFBUXRsQyxHQUFHLE1BQU1ILEVBQUVPLEVBQUVzRCxPQUFPSyxLQUFLODZCLHdCQUF3QjMrQixFQUFFbUQsRUFBRTZDLEtBQUs3RixFQUFFOC9CLGFBQWFwOEIsS0FBS2doQyxJQUFJbGxDLElBQUlNLEVBQUVzQixFQUFFaTVCLEtBQUt4NkIsRUFBRUYsR0FBR1MsRUFBRSxDQUFDWixFQUFFLElBQUl1QyxFQUFFLENBQUNtakMsSUFBSWxpQyxFQUFFNkMsS0FBSy9GLEdBQUdxbEMsSUFBSXpoQyxLQUFLODZCLHlCQUF5QixPQUFPLElBQUkvNUIsV0FBVzFFLEVBQUVzRCxPQUFPakQsR0FBRyxFQUFDLEVBQUcsS0FBSyxDQUFDVCxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVBLEVBQUVMLEdBQUdLLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ3dCLFFBQVEsSUFBSWlDLElBQUksSUFBSW5ELEVBQUVELEVBQUUsS0FBS0UsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTXdXLE9BQU8sTUFBTXJXLEVBQUV1TCxZQUFZNUwsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxDQUFDLEdBQUc0RCxLQUFLMGhDLGVBQWV0bEMsRUFBRSxNQUFNQyxFQUFFUCxFQUFFdWlDLFNBQVMsS0FBS3ZpQyxFQUFFLEdBQUdBLEtBQUs0QixFQUFFLElBQUlpa0MsSUFBSXRsQyxHQUFHLFFBQUcsSUFBU0YsSUFBSXVCLEVBQUVra0MsS0FBS3psQyxFQUFFMkksWUFBWSxJQUFJcEgsRUFBRTBvQixTQUFTcG5CLE9BQU8sTUFBTSxJQUFJc0MsTUFBTSxzREFBc0R0QixLQUFLNmhDLFFBQVFua0MsRUFBRXNDLEtBQUs4aEMsWUFBWTdsQyxDQUFDLENBQUM4bEMsZ0JBQWdCOWxDLEdBQUcsSUFBSUgsRUFBRSxPQUFPQSxFQUFFRyxFQUFFcWlDLFdBQVcsTUFBTXJpQyxFQUFFQSxFQUFFcWlDLFdBQVcsS0FBSyxJQUFJcmlDLElBQUksS0FBS0EsSUFBSSxJQUFJMGxDLElBQUk3bEMsRUFBRWtFLEtBQUs2aEMsU0FBUy84QixVQUFVLENBQUNzNUIsc0NBQXNDbmlDLEdBQUcsT0FBT0EsRUFBRWtyQixnQkFBZ0JsbEIsY0FBY2hHLEVBQUVrckIsS0FBSyxJQUFJcG1CLFdBQVc5RSxFQUFFa3JCLE9BQU9sckIsQ0FBQyxDQUFDbWlDLDZCQUE2Qm5pQyxHQUFHLEdBQUdBLEVBQUVtckIsU0FBUyxJQUFJLE1BQU10ckIsRUFBRWtlLEtBQUsrSixNQUFNcm1CLEVBQUV5RSxLQUFLbEcsRUFBRW1yQixTQUFTRCxNQUFNcmlCLFlBQVk3SSxFQUFFNGMsUUFBUSwwQ0FBMEM1YyxFQUFFbXJCLFNBQVNULFdBQVc3cUIsRUFBRStjLFNBQW1CLENBQVQsTUFBTTVjLEdBQUcsQ0FBQyxPQUFPQSxDQUFDLENBQUN3N0IsVUFBVXg3QixFQUFFSCxFQUFFSyxFQUFFLENBQUMsR0FBRyxNQUFNQyxFQUFFQyxFQUFFVSxJQUFJaUQsS0FBSytoQyxnQkFBZ0I5bEMsSUFBSXlELElBQUlNLEtBQUs4aEMsYUFBYXBpQyxJQUFJTSxLQUFLMGhDLGdCQUFnQmhpQyxJQUFJdkQsR0FBR3FxQixhQUFhLGVBQWV1QyxNQUFNanRCLEdBQUcsSUFBSSxNQUFNRyxRQUFRRyxFQUFFLE9BQU9FLEVBQUUwbEMsK0JBQStCL2xDLEVBQTRDLENBQXpDLE1BQU1BLEdBQUcsTUFBTUssRUFBRTJsQyxzQkFBc0JobUMsRUFBRSxDQUFDLENBQUN3N0IsV0FBV3g3QixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLENBQUMsR0FBRyxNQUFNa0QsRUFBRWpELEVBQUU2dkIsS0FBS2xzQixLQUFLK2hDLGdCQUFnQjlsQyxJQUFJeUQsSUFBSU0sS0FBSzhoQyxhQUFhcGlDLElBQUlNLEtBQUswaEMsZ0JBQWdCaGlDLElBQUl0RCxHQUFHMnNCLE1BQU01c0IsR0FBR29zQixXQUFXdHNCLEdBQUdBLElBQUl1cUIsYUFBYSxlQUFlc0IsS0FBS3BxQixFQUFFeUUsS0FBS3JHLElBQUksSUFBSSxNQUFNRyxRQUFRcUQsRUFBRSxPQUFPaEQsRUFBRTBsQywrQkFBK0IvbEMsRUFBNEMsQ0FBekMsTUFBTUEsR0FBRyxNQUFNSyxFQUFFMmxDLHNCQUFzQmhtQyxFQUFFLENBQUMsQ0FBQ3c3QixhQUFheDdCLEVBQUVILEVBQUVLLEVBQUVDLEVBQUUsQ0FBQyxHQUFHLE1BQU1rRCxFQUFFakQsRUFBRXl2QixPQUFPOXJCLEtBQUsraEMsZ0JBQWdCOWxDLElBQUl5RCxJQUFJTSxLQUFLOGhDLGFBQWFwaUMsSUFBSU0sS0FBSzBoQyxnQkFBZ0JoaUMsSUFBSXRELEdBQUcyc0IsTUFBTTVzQixHQUFHb3NCLFdBQVd0c0IsR0FBR0EsSUFBSXVxQixhQUFhLGVBQWVzQixLQUFLcHFCLEVBQUV5RSxLQUFLckcsSUFBSSxJQUFJLE1BQU1HLFFBQVFxRCxFQUFFLE9BQU9oRCxFQUFFMGxDLCtCQUErQi9sQyxFQUE0QyxDQUF6QyxNQUFNQSxHQUFHLE1BQU1LLEVBQUUybEMsc0JBQXNCaG1DLEVBQUUsQ0FBQyxFQUFFLElBQUlxRCxFQUFFbkQsRUFBRSxNQUFNd1csT0FBTyxTQUFTalcsRUFBRVQsR0FBRyxPQUFPVyxPQUFPc0ksS0FBS2pKLEdBQUc0MUIsUUFBTyxDQUFFLzFCLEVBQUVLLEtBQUtMLEVBQUVLLEVBQUVpUixlQUFlblIsRUFBRUUsR0FBR0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNeUQsRUFBRXNJLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLENBQUMsR0FBRzRELEtBQUtraUMsUUFBRyxJQUFTcG1DLEVBQUUsSUFBSVEsRUFBRUwsRUFBRUgsRUFBRUssRUFBRUMsR0FBR0gsQ0FBQyxDQUFDbWlDLGlCQUFpQm5pQyxFQUFFSCxFQUFFSyxFQUFFLENBQUMsR0FBRyxJQUFJLE9BQU8sSUFBSVMsT0FBT3NJLEtBQUsvSSxHQUFHNkMsT0FBTy9DLEdBQUcrZCxLQUFLK0osTUFBTTluQixHQUFHQSxHQUFHRyxFQUFFK2xDLFVBQVVsbUMsRUFBRUUsRUFBa0UsQ0FBL0QsTUFBTUEsR0FBRyxNQUFNQyxFQUFFRCxFQUFFLE1BQU1DLEVBQUVzckIsWUFBWXpyQixHQUFHLEtBQUtHLEVBQUV1ckIsV0FBVzdyQixFQUFFTSxDQUFDLENBQUMsQ0FBQ2dpQyxxQkFBcUJuaUMsRUFBRUgsR0FBRyxJQUFJRyxFQUFFLE9BQU8sSUFBSThFLFdBQVcsR0FBRyxHQUFHLHFCQUFxQmpGLEVBQUUsZ0JBQWdCLE9BQU8sSUFBSWlGLFdBQVd6QixFQUFFNkMsS0FBSzZYLEtBQUtDLFVBQVVoZSxLQUFLLEdBQUcsaUJBQWlCQSxFQUFFLE9BQU8sSUFBSThFLFdBQVd6QixFQUFFNkMsS0FBS2xHLElBQUksR0FBR0EsYUFBYThFLFdBQVcsT0FBTzlFLEVBQUUsTUFBTSxJQUFJcUYsTUFBTSw4RkFBOEYsQ0FBQzg4Qix1QkFBdUJuaUMsRUFBRUgsRUFBRUssRUFBRSxDQUFDLEdBQUcsSUFBSUMsR0FBRytxQixLQUFLOXFCLEdBQUdKLEVBQUUsTUFBTSx3QkFBd0JILElBQUlNLEVBQUVDLEdBQUdpRCxFQUFFNkMsS0FBSzlGLEdBQUd5SSxZQUFZLElBQUkscUJBQXFCaEosSUFBSU8sRUFBRWtELEVBQUU0aUMsVUFBVS9sQyxFQUFFSCxFQUFFMHFCLE9BQU94cUIsSUFBSSxJQUFJRixFQUFFa3JCLEtBQUs5cUIsRUFBRWtvQixLQUFLbm9CLEVBQUU0d0IsR0FBRyxJQUFJN3NCLEtBQUs4K0IsTUFBTWhqQyxFQUFFMHFCLE9BQU8sS0FBSyxDQUFDeVgsNEJBQTRCbmlDLEdBQUcsT0FBT0EsRUFBRW1yQixXQUFXbnJCLEVBQUVtckIsU0FBUzduQixFQUFFNmlDLGdCQUFnQm5tQyxFQUFFbXJCLFNBQVMsb0JBQW9CbnJCLEVBQUUwcUIsT0FBTzFxQixFQUFFbXJCLFNBQVNULFFBQVExcUIsQ0FBQyxDQUFDdzdCLFVBQVV4N0IsRUFBRUgsRUFBRUssRUFBRSxDQUFDLEVBQUVDLEVBQUUsQ0FBQyxHQUFHLE1BQU1DLEVBQUUsU0FBU0osR0FBRyxZQUFHLElBQVNBLEdBQUlXLE9BQU9XLFVBQVVDLGVBQWVoQixLQUFLUCxFQUFFLFdBQXdELFlBQWRBLEVBQUVvMUIsT0FBNEIsc0JBQXhELGtCQUEwSCxDQUE3TSxDQUErTXYxQixHQUFHNEIsRUFBRSxJQUFJdkIsRUFBRXdzQixPQUFPdHNCLEdBQUcsSUFBSSxNQUFNRixRQUFRNkQsS0FBS2tpQyxHQUFHbmxDLElBQUlkLEVBQUUsU0FBU0EsR0FBRyxJQUFJLE1BQU1ILEtBQUtHLEVBQUVXLE9BQU9XLFVBQVVDLGVBQWVoQixLQUFLUCxFQUFFSCxLQUFLRyxFQUFFSCxJQUFJLElBQUlHLEVBQUVILEdBQUdrRCxlQUFlL0MsRUFBRUgsSUFBSSxPQUFPRyxDQUFDLENBQXJILENBQXVISCxHQUFHNEIsR0FBRyxPQUFPNkIsRUFBRTZpQyxnQkFBZ0JqbUMsRUFBRUUsRUFBRUQsRUFBMkMsQ0FBeEMsTUFBTUgsR0FBRyxNQUFNc0QsRUFBRThpQyxxQkFBcUJwbUMsRUFBRSxDQUFDLENBQUN3N0IsV0FBV3g3QixFQUFFSCxFQUFFSyxFQUFFLENBQUMsR0FBRyxNQUFNQyxFQUFFLENBQUMsZUFBZSxzQkFBc0JNLEVBQUVQLElBQUksSUFBSSxNQUFNQSxRQUFRNkQsS0FBS2tpQyxHQUFHaFcsS0FBS2p3QixFQUFFc0QsRUFBRStpQyxjQUFjeG1DLEVBQUVNLFFBQUcsRUFBT0EsR0FBRyxPQUFPbUQsRUFBRTZpQyxnQkFBZ0JqbUMsRUFBRSxtQkFBNEQsQ0FBeEMsTUFBTUYsR0FBRyxNQUFNc0QsRUFBRThpQyxxQkFBcUJwbUMsRUFBRSxDQUFDLENBQUN3N0IsYUFBYXg3QixFQUFFSCxFQUFFSyxFQUFFLENBQUMsR0FBRyxNQUFNQyxFQUFFLENBQUMsZUFBZSxzQkFBc0JNLEVBQUVQLElBQUlFLFFBQVEyRCxLQUFLa2lDLEdBQUdwVyxPQUFPN3ZCLEVBQUVzRCxFQUFFK2lDLGNBQWN4bUMsRUFBRU0sUUFBRyxFQUFPQSxHQUFHLE9BQU9tRCxFQUFFNmlDLGdCQUFnQi9sQyxFQUFFLG1CQUFtQixFQUFDLEVBQUcsS0FBSyxDQUFDSixFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ21kLEVBQUUsSUFBSTNjLElBQUksSUFBSUYsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNd1csT0FBTyxNQUFNclcsVUFBVUYsRUFBRTZjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRSxtQkFBbUJLLEVBQUUsS0FBS0MsRUFBRSxDQUFDLEdBQUdvYyxNQUFNLGtCQUFrQnZjLEVBQUVILEVBQUVLLEVBQUVDLEVBQUUsQ0FBQ3E3QixpQkFBaUIsYUFBYXozQixLQUFLdEQsRUFBRUssSUFBSSxjQUFjb3FCLElBQUksQ0FBQ3NRLG9CQUFvQixhQUFhejNCLEtBQUt0RCxFQUFFSyxJQUFJLGdCQUFnQm9xQixJQUFJLENBQUNzUSxtQkFBbUJ4N0IsRUFBRUgsRUFBRUssRUFBRSxJQUFJNEUsV0FBVzNFLEVBQUUsVUFBVSxNQUFNQyxFQUFFLENBQUNrbUMsWUFBWXRtQyxFQUFFdW1DLG1CQUFtQnBtQyxFQUFFcW1DLGdCQUFnQjNtQyxFQUFFNG1DLHNCQUFzQmhsQyxFQUFFeUUsS0FBS2hHLEdBQUcySSxTQUFTLFdBQVcsYUFBYTlFLEtBQUt0RCxFQUFFd3ZCLEtBQUssYUFBYTd2QixJQUFJOHFCLElBQUksQ0FBQ3NRLHVCQUF1Qng3QixFQUFFSCxHQUFHLE1BQU1LLEVBQUUsQ0FBQ3dtQyxVQUFVMW1DLEVBQUV3bUMsZ0JBQWdCM21DLEdBQUcsYUFBYWtFLEtBQUt0RCxFQUFFd3ZCLEtBQUssa0JBQWtCL3ZCLElBQUlnckIsSUFBSSxDQUFDc1EsMEJBQTBCeDdCLEdBQUcsTUFBTUgsRUFBRSxDQUFDOG1DLG9CQUFvQjNtQyxHQUFHLGFBQWErRCxLQUFLdEQsRUFBRXd2QixLQUFLLHFCQUFxQnB3QixJQUFJcXJCLElBQUksQ0FBQ3NRLHdCQUF3Qng3QixHQUFHLE1BQU1ILEVBQUUsQ0FBQzhtQyxvQkFBb0IzbUMsR0FBRyxhQUFhK0QsS0FBS3RELEVBQUV3dkIsS0FBSyxtQkFBbUJwd0IsSUFBSXFyQixJQUFJLENBQUNzUSxtQkFBbUJ4N0IsRUFBRUgsRUFBRUssR0FBRyxNQUFNQyxFQUFFLENBQUN1bUMsVUFBVTFtQyxFQUFFd21DLGdCQUFnQjNtQyxFQUFFeW1DLFlBQVlwbUMsR0FBRyxhQUFhNkQsS0FBS3RELEVBQUV3dkIsS0FBSyxvQkFBb0I5dkIsSUFBSStxQixJQUFJLENBQUNzUSxnQkFBZ0J4N0IsR0FBRyxNQUFNSCxFQUFFLENBQUM4bUMsb0JBQW9CM21DLEdBQUcsYUFBYStELEtBQUt0RCxFQUFFd3ZCLEtBQUssa0JBQWtCcHdCLElBQUlxckIsSUFBSSxDQUFDc1EsZ0NBQWdDeDdCLEVBQUVILEdBQUcsTUFBTUssRUFBRSxDQUFDeW1DLG9CQUFvQjNtQyxFQUFFd21DLGdCQUFnQjNtQyxHQUFHTSxRQUFRNEQsS0FBS3RELEVBQUV3dkIsS0FBSyx3QkFBd0IvdkIsR0FBRyxNQUFNLENBQUN1bUMsc0JBQXNCaGxDLEVBQUV5RSxLQUFLL0YsRUFBRStxQixLQUFLdWIsc0JBQXNCLFVBQVUsQ0FBQ2pMLGdCQUFnQng3QixFQUFFSCxHQUFHLE1BQU1LLEVBQUUsQ0FBQ3ltQyxvQkFBb0IzbUMsRUFBRTRtQyxZQUFZbmxDLEVBQUV5RSxLQUFLckcsR0FBR2dKLFNBQVMsV0FBVyxhQUFhOUUsS0FBS3RELEVBQUV3dkIsS0FBSyxpQkFBaUIvdkIsSUFBSWdyQixJQUFJLENBQUNzUSxnQkFBZ0J4N0IsRUFBRUgsRUFBRUssR0FBRyxNQUFNQyxFQUFFLENBQUN3bUMsb0JBQW9CM21DLEVBQUU4OUIsUUFBUTU5QixFQUFFc21DLGdCQUFnQjNtQyxHQUFHTyxRQUFRMkQsS0FBS3RELEVBQUV3dkIsS0FBSyxpQkFBaUI5dkIsR0FBRyxNQUFNLENBQUN5bUMsWUFBWW5sQyxFQUFFeUUsS0FBSzlGLEVBQUU4cUIsS0FBSzBiLFlBQVksVUFBVSxDQUFDcEwsa0JBQWtCeDdCLEdBQUcsTUFBTUgsRUFBRSxDQUFDOG1DLG9CQUFvQjNtQyxFQUFFNm1DLGtCQUFpQixHQUFJLGFBQWE5aUMsS0FBS3RELEVBQUV3dkIsS0FBSyxVQUFVcHdCLElBQUlxckIsSUFBSSxDQUFDc1EsZ0JBQWdCeDdCLEVBQUVILEVBQUVLLEdBQUcsTUFBTUMsRUFBRSxDQUFDd21DLG9CQUFvQjNtQyxFQUFFODlCLFFBQVE1OUIsRUFBRXNtQyxnQkFBZ0IzbUMsR0FBRyxhQUFha0UsS0FBS3RELEVBQUVvdkIsT0FBTyxVQUFVMXZCLElBQUkrcUIsSUFBSSxDQUFDc1EsZUFBZXg3QixHQUFHLE1BQU1ILEVBQUUsQ0FBQzhtQyxvQkFBb0IzbUMsR0FBRyxhQUFhK0QsS0FBS3RELEVBQUV3dkIsS0FBSyxlQUFlcHdCLElBQUlxckIsSUFBSSxDQUFDc1Esc0JBQXNCeDdCLEVBQUVILEVBQUVLLEdBQUcsTUFBTUMsRUFBRUMsRUFBRTBtQyx1QkFBdUI1bUMsR0FBR0csRUFBRSxDQUFDc21DLG9CQUFvQjNtQyxFQUFFd21DLGdCQUFnQjNtQyxFQUFFa25DLFlBQVl0bEMsRUFBRXlFLEtBQUsvRixFQUFFNm1DLFVBQVVuK0IsU0FBUyxXQUFXeEYsUUFBUVUsS0FBS3RELEVBQUV3dkIsS0FBSyx1QkFBdUI1dkIsR0FBRyxPQUFPLE1BQU1nRCxFQUFFcW5CLE9BQU9qcEIsRUFBRXlFLEtBQUs3QyxFQUFFNm5CLEtBQUsrYixtQkFBbUIsVUFBVTVqQyxFQUFFNm5CLElBQUksQ0FBQ3NRLDJDQUEyQ3g3QixFQUFFSCxFQUFFSyxFQUFFQyxHQUFHLE1BQU1FLEVBQUVELEVBQUUwbUMsdUJBQXVCNW1DLEdBQUdtRCxFQUFFLENBQUNzakMsb0JBQW9CM21DLEVBQUV3bUMsZ0JBQWdCM21DLEVBQUVrbkMsWUFBWXRsQyxFQUFFeUUsS0FBSzdGLEVBQUUybUMsVUFBVW4rQixTQUFTLFVBQVVxK0IsV0FBV3psQyxFQUFFeUUsS0FBSy9GLEdBQUcwSSxTQUFTLFdBQVdwSSxRQUFRc0QsS0FBS3RELEVBQUV3dkIsS0FBSyx1QkFBdUI1c0IsR0FBRyxPQUFPLE1BQU01QyxFQUFFaXFCLE9BQU9qcEIsRUFBRXlFLEtBQUt6RixFQUFFeXFCLEtBQUsrYixtQkFBbUIsVUFBVXhtQyxFQUFFeXFCLElBQUksQ0FBQ3NRLG1CQUFtQng3QixHQUFHLE1BQU1ILEVBQUUsQ0FBQzhtQyxvQkFBb0IzbUMsR0FBRyxhQUFhK0QsS0FBS3RELEVBQUV3dkIsS0FBSyxvQkFBb0Jwd0IsSUFBSXFyQixJQUFJLENBQUNzUSxxQkFBcUJ4N0IsRUFBRUgsRUFBRUssRUFBRUMsR0FBRyxNQUFNQyxFQUFFLENBQUN1bUMsb0JBQW9CM21DLEVBQUVtbkMsaUJBQWlCdG5DLEVBQUV1bkMsVUFBVWxuQyxFQUFFbW5DLElBQUlsbkMsR0FBRyxhQUFhNEQsS0FBS3RELEVBQUV3dkIsS0FBSyxzQkFBc0I3dkIsSUFBSThxQixJQUFJLENBQUNzUSxxQkFBcUJ4N0IsRUFBRUgsR0FBRyxNQUFNSyxFQUFFLENBQUN5bUMsb0JBQW9CM21DLEVBQUU4OUIsUUFBUWorQixHQUFHLGFBQWFrRSxLQUFLdEQsRUFBRXd2QixLQUFLLHNCQUFzQi92QixJQUFJZ3JCLElBQUksQ0FBQ3NRLDhCQUE4Qng3QixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFRSxHQUFHLE1BQU1nRCxFQUFFakQsRUFBRTBtQyx1QkFBdUI1bUMsR0FBR08sRUFBRSxDQUFDa21DLG9CQUFvQjNtQyxFQUFFK21DLFlBQVl0bEMsRUFBRXlFLEtBQUs3QyxFQUFFMmpDLFVBQVVuK0IsU0FBUyxVQUFVcStCLFdBQVd6bEMsRUFBRXlFLEtBQUsvRixHQUFHMEksU0FBUyxVQUFVeStCLGlCQUFpQmpuQyxFQUFFbW1DLGdCQUFnQjNtQyxHQUFHLGFBQWFrRSxLQUFLdEQsRUFBRXd2QixLQUFLLG9CQUFvQnh2QixJQUFJeXFCLElBQUksQ0FBQ3NRLHFCQUFxQng3QixFQUFFSCxFQUFFSyxHQUFHLE1BQU1DLEVBQUUsQ0FBQ3dtQyxvQkFBb0IzbUMsRUFBRTg5QixRQUFRNTlCLEVBQUVzbUMsZ0JBQWdCM21DLEdBQUcsYUFBYWtFLEtBQUt0RCxFQUFFb3ZCLE9BQU8sZUFBZTF2QixJQUFJK3FCLElBQUksRUFBQyxFQUFHLEtBQUssQ0FBQ2xyQixFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ21kLEVBQUUsSUFBSXJULElBQUksSUFBSXhKLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNLE1BQU11QixVQUFVckIsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBSzIvQixRQUFReGpDLEVBQUU2RCxLQUFLMi9CLFFBQVF4akMsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxnQkFBZ0J4akMsS0FBSzIvQixTQUFTLENBQUM4RCxRQUFReG5DLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTTBhLFFBQVF4bkMsRUFBRStELElBQUksRUFBRSxNQUFNMUQsVUFBVUQsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssRUFBRUMsR0FBR29jLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBSzIvQixRQUFReGpDLEVBQUU2RCxLQUFLMGpDLFFBQVF0bkMsRUFBRTRELEtBQUsyL0IsUUFBUXhqQyxFQUFFNkQsS0FBSzBqQyxRQUFRdG5DLENBQUMsQ0FBQ29uQyxPQUFPLE1BQU0sZ0JBQWdCeGpDLEtBQUsyL0Isa0JBQWtCMy9CLEtBQUswakMsU0FBUyxFQUFFLE1BQU1wa0MsVUFBVWpELEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEVBQUVLLEVBQUVDLEdBQUdvYyxNQUFNdmMsRUFBRUgsR0FBR2tFLEtBQUsyL0IsUUFBUXhqQyxFQUFFNkQsS0FBSzJqQyxjQUFjdm5DLEVBQUU0RCxLQUFLMi9CLFFBQVF4akMsRUFBRTZELEtBQUsyakMsY0FBY3ZuQyxDQUFDLENBQUNvbkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLMi9CLHdCQUF3QjMvQixLQUFLMmpDLGVBQWUsRUFBRSxJQUFJam5DLEVBQUVQLEVBQUUsTUFBTSxNQUFNb0QsVUFBVWxELEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEdBQUcsR0FBRzBjLE1BQU12YyxJQUFJd0UsT0FBTzZQLFVBQVV4VSxHQUFHLE1BQU13RixNQUFNLG9DQUFvQ3RCLEtBQUsyOEIsTUFBTTdnQyxFQUFFa0UsS0FBSytvQixNQUFNLENBQUNzSSxPQUFPLFVBQVUsQ0FBQ21TLE9BQU8sTUFBTSxjQUFjeGpDLEtBQUsyOEIsT0FBTyxDQUFDaUgsUUFBUTNuQyxHQUFHLEdBQUdBLEdBQUdBLEVBQUVvRixXQUFXLEVBQUUsT0FBTzNFLEVBQUU4RSxPQUFPdkYsRUFBRSxFQUFFLElBQUlNLEVBQUVKLEVBQUUsTUFBTXdXLE9BQU8sU0FBUy9TLEVBQUUzRCxFQUFFLENBQUMsR0FBRyxJQUFJSCxFQUFFRyxFQUFFLE9BQU9XLE9BQU9zSSxLQUFLcEosR0FBR3lpQyxPQUFPdGlDLEdBQUcsaUJBQWlCQSxFQUFFbVIsa0JBQWtCdFIsRUFBRSxJQUFJRyxHQUFHSCxFQUFFLGdCQUFnQixjQUFjQSxDQUFDLENBQUMsTUFBTTJCLFVBQVVwQixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxHQUFHMGMsTUFBTXZjLEdBQUcrRCxLQUFLNmpDLE9BQU8vbkMsRUFBRWtFLEtBQUs2akMsT0FBTy9uQyxDQUFDLENBQUMwbkMsT0FBTyxNQUFNLGtCQUFrQixDQUFDL0wsU0FBU3g3QixFQUFFLENBQUMsR0FBRyxNQUFNSCxFQUFFOEQsRUFBRTNELEdBQUcsYUFBYStELEtBQUt0RCxFQUFFd3ZCLEtBQUtsc0IsS0FBS3dqQyxPQUFPam5DLEVBQUU0RixLQUFLbkMsS0FBSzZqQyxRQUFRL25DLElBQUlxckIsSUFBSSxFQUFFLElBQUlocEIsRUFBRWhDLEVBQUUsTUFBTXdXLE9BQU8sTUFBTWhXLFVBQVVOLEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEdBQUcwYyxNQUFNdmMsR0FBRytELEtBQUtxOEIsS0FBSzMvQixFQUFFaUQsT0FBTzdELEVBQUVnL0Isc0JBQXFCLEdBQUksQ0FBQzBJLE9BQU8sTUFBTSxpQkFBaUIsQ0FBQy9MLFNBQVN4N0IsRUFBRSxDQUFDLEdBQUcsTUFBTUgsRUFBRThELEVBQUUzRCxHQUFHLGFBQWErRCxLQUFLdEQsRUFBRXd2QixLQUFLbHNCLEtBQUt3akMsT0FBT3JsQyxFQUFFZ0UsS0FBS25DLEtBQUtxOEIsTUFBTXZnQyxJQUFJcXJCLElBQUksRUFBRSxNQUFNN21CLFVBQVVqRSxFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLd3dCLE1BQU1yMEIsRUFBRTZELEtBQUt3d0IsTUFBTXIwQixDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGNBQWN4akMsS0FBS3d3QixPQUFPLEVBQUUsTUFBTXB5QixVQUFVL0IsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBS3d3QixNQUFNcjBCLEVBQUU2RCxLQUFLd3dCLE1BQU1yMEIsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxvQkFBb0J4akMsS0FBS3d3QixPQUFPLEVBQUUsTUFBTS96QixVQUFVSixFQUFFNGMsRUFBRXVxQixPQUFPLE1BQU0sU0FBUyxDQUFDL0wsU0FBU3g3QixFQUFFLENBQUMsR0FBRyxNQUFNSCxRQUFRa0UsS0FBS3RELEVBQUVLLElBQUlpRCxLQUFLd2pDLE9BQU8sQ0FBQyxFQUFFdm5DLEdBQUcsSUFBSUgsRUFBRWt4QixHQUFHLE1BQU0sSUFBSTFyQixNQUFNLG9CQUFvQnhGLEVBQUU2cUIsVUFBVSxNQUFNLENBQUMsQ0FBQyxFQUFFLE1BQU10b0IsVUFBVWhDLEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEdBQUcwYyxNQUFNdmMsR0FBRytELEtBQUs4akMsS0FBS2hvQyxFQUFFa0UsS0FBSzhqQyxLQUFLaG9DLEVBQUVrRSxLQUFLK29CLE1BQU1zSSxPQUFPLFNBQVMsQ0FBQ3VTLFFBQVEzbkMsR0FBRyxHQUFHQSxHQUFHQSxFQUFFb0YsV0FBVyxFQUFFLE9BQU8zRSxFQUFFOEUsT0FBT3ZGLEVBQUUsQ0FBQ3VuQyxPQUFPLE1BQU0sNEJBQTRCeGpDLEtBQUs4akMsTUFBTSxDQUFDLzBCLElBQUk5UyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1oYSxJQUFJOVMsRUFBRStELElBQUksRUFBRSxNQUFNekIsVUFBVWxDLEVBQUU0YyxFQUFFcFIsWUFBWTVMLEdBQUd1YyxNQUFNdmMsR0FBRytELEtBQUsrb0IsTUFBTXNJLE9BQU8sU0FBUyxDQUFDbVMsT0FBTyxNQUFNLDBCQUEwQixDQUFDSSxRQUFRM25DLEdBQUcsR0FBR0EsR0FBR0EsRUFBRW9GLFdBQVcsRUFBRSxPQUFPM0UsRUFBRThFLE9BQU92RixFQUFFLENBQUM4UyxJQUFJOVMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNaGEsSUFBSTlTLEVBQUUrRCxJQUFJLEVBQUUsTUFBTTFCLFVBQVVqQyxFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxHQUFHMGMsTUFBTXZjLEdBQUcrRCxLQUFLKzVCLFFBQVFqK0IsRUFBRWtFLEtBQUsrNUIsUUFBUWorQixFQUFFa0UsS0FBSytvQixNQUFNc0ksT0FBTyxTQUFTLENBQUN1UyxRQUFRM25DLEdBQUcsR0FBR0EsR0FBR0EsRUFBRW9GLFdBQVcsRUFBRSxPQUFPM0UsRUFBRThFLE9BQU92RixFQUFFLENBQUN1bkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLKzVCLDhCQUE4QixDQUFDaHJCLElBQUk5UyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1oYSxJQUFJOVMsRUFBRStELElBQUksRUFBRSxJQUFJeEIsRUFBRXJDLEVBQUUsTUFBTSxNQUFNb0YsVUFBVWxGLEVBQUU0YyxFQUFFdXFCLE9BQU8sTUFBTSxZQUFZLEVBQUUsTUFBTXRsQyxVQUFVN0IsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBRyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLMjhCLE1BQU14Z0MsR0FBR3NFLE9BQU82UCxVQUFVblUsR0FBRyxNQUFNbUYsTUFBTSw4QkFBOEJ0QixLQUFLMjhCLE1BQU14Z0MsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxtQ0FBbUN4akMsS0FBSzI4QixPQUFPLEVBQUUsTUFBTTM2QixVQUFVM0YsRUFBRTRjLEVBQUV1cUIsT0FBTyxNQUFNLHlCQUF5QixDQUFDSSxRQUFRM25DLEdBQUcsTUFBTSxDQUFDKzhCLFNBQVEsRUFBR0MsSUFBSWg5QixFQUFFZzlCLElBQUloQixXQUFXaDhCLEVBQUUsY0FBY2k4QixVQUFVajhCLEVBQUUsY0FBYyxJQUFJaTlCLFVBQVVqOUIsRUFBRSxjQUFjazlCLFlBQVlsOUIsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNbUcsVUFBVS9GLEVBQUU0YyxFQUFFdXFCLE9BQU8sTUFBTSxtQkFBbUIsRUFBRSxNQUFNdmxDLFVBQVU1QixFQUFFNGMsRUFBRXVxQixPQUFPLE1BQU0sV0FBVyxFQUFFLE1BQU03OUIsVUFBVXRKLEVBQUU0YyxFQUFFdXFCLE9BQU8sTUFBTSxVQUFVLEVBQUUsTUFBTTdsQyxVQUFVdEIsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssRUFBRUMsR0FBR29jLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBSzI4QixNQUFNeGdDLEVBQUU2RCxLQUFLK2pDLEtBQUszbkMsRUFBRTRELEtBQUsyOEIsTUFBTXhnQyxFQUFFNkQsS0FBSytqQyxLQUFLM25DLENBQUMsQ0FBQ29uQyxPQUFPLE1BQU0sY0FBY3hqQyxLQUFLMjhCLHNCQUFzQjM4QixLQUFLK2pDLFlBQVksRUFBRSxNQUFNbitCLFVBQVV4SixFQUFFNmMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFLDZCQUE2QkssRUFBRSxLQUFLQyxFQUFFLENBQUMsR0FBR29jLE1BQU0sbUJBQW1CdmMsRUFBRUgsRUFBRUssRUFBRUMsRUFBRSxDQUFDczdCLGNBQWMsT0FBTyxJQUFJajdCLEVBQUV1RCxLQUFLdEQsRUFBRSxDQUFDc25DLGdCQUFnQixPQUFPLElBQUkvbEMsRUFBRStCLEtBQUt0RCxFQUFFLENBQUNrOEIsbUJBQW1CMzhCLEdBQUcsT0FBTyxJQUFJdUMsRUFBRWxCLFFBQVEwQyxLQUFLdEQsRUFBRVQsRUFBRSxDQUFDdzhCLG1CQUFtQng4QixHQUFHLE9BQU8sSUFBSXlCLEVBQUVzQyxLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUNpb0Msd0JBQXdCam9DLEVBQUVILEdBQUcsT0FBTyxJQUFJUSxFQUFFMEQsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVlob0MsRUFBRUgsRUFBRSxDQUFDcW9DLDhCQUE4QmxvQyxFQUFFSCxHQUFHLE9BQU8sSUFBSXdELEVBQUVVLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUVILEVBQUUsQ0FBQzRqQixNQUFNempCLEdBQUcsT0FBTyxJQUFJc0QsRUFBRVMsS0FBS3RELEVBQUVULEVBQUUsQ0FBQ3U4Qiw4QkFBOEJ2OEIsR0FBRyxPQUFPLElBQUlvQyxFQUFFMkIsS0FBS3RELEVBQUVULEVBQUUsQ0FBQ21vQyxpQ0FBaUMsT0FBTyxJQUFJN2xDLEVBQUV5QixLQUFLdEQsRUFBRSxDQUFDMm5DLDRCQUE0QnBvQyxHQUFHLE9BQU8sSUFBSXFDLEVBQUUwQixLQUFLdEQsRUFBRVQsRUFBRSxDQUFDMHFCLFNBQVMsT0FBTyxJQUFJcGxCLEVBQUV2QixLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWSxDQUFDdE0saUJBQWlCMTdCLEdBQUcsT0FBTyxJQUFJaUMsRUFBRThCLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQzY4Qix1QkFBdUIsT0FBTyxJQUFJOTJCLEVBQUVoQyxLQUFLdEQsRUFBRSxDQUFDNG5DLFNBQVMsT0FBTyxJQUFJbGlDLEVBQUVwQyxLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWSxDQUFDTSxRQUFRdG9DLEdBQUcsT0FBTyxJQUFJd0IsRUFBRXVDLEtBQUt0RCxFQUFFVCxFQUFFLENBQUN1b0MsT0FBT3ZvQyxHQUFHLE9BQU8sSUFBSVUsRUFBRXFELEtBQUt0RCxFQUFFVCxFQUFFLENBQUN3b0MsYUFBYXhvQyxHQUFHLE9BQU8sSUFBSXFFLEVBQUVOLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQ3lvQyxtQkFBbUJ6b0MsR0FBRyxPQUFPLElBQUltQyxFQUFFNEIsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVlob0MsRUFBRSxDQUFDMG9DLFVBQVUsT0FBTyxJQUFJaC9CLEVBQUUzRixLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWSxDQUFDVyxTQUFTM29DLEVBQUVILEdBQUcsT0FBTyxJQUFJNkIsRUFBRXFDLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUVILEVBQUUsRUFBQyxFQUFHLElBQUksQ0FBQ0csRUFBRUgsRUFBRUssS0FBSyxhQUFhQSxFQUFFQSxFQUFFTCxHQUFHSyxFQUFFUSxFQUFFYixFQUFFLENBQUMrb0MsUUFBUSxJQUFJdmxDLEVBQUV3bEMsMkJBQTJCLElBQUlwb0MsRUFBRXFvQyxxQkFBcUIsSUFBSXhsQyxFQUFFeWxDLHFCQUFxQixJQUFJem9DLEVBQUUwb0Msa0JBQWtCLElBQUlybEMsRUFBRXNsQyxZQUFZLElBQUl6bkMsRUFBRTBuQyxzQkFBc0IsSUFBSWhuQyxFQUFFaW5DLGtCQUFrQixJQUFJem9DLEVBQUUwb0MsdUJBQXVCLElBQUkva0MsRUFBRWdsQyxNQUFNLElBQUlsbkMsRUFBRW1uQyxhQUFhLElBQUk5b0MsRUFBRStvQyxZQUFZLElBQUlubkMsRUFBRW9uQyxjQUFjLElBQUlsbkMsRUFBRW1uQyxhQUFhLElBQUlwbkMsRUFBRXFuQyx3QkFBd0IsSUFBSW5uQyxFQUFFb25DLHdCQUF3QixJQUFJcmtDLEVBQUVza0MsZ0JBQWdCLElBQUkzbkMsRUFBRTRuQyxvQkFBb0IsSUFBSTlqQyxFQUFFK2pDLGNBQWMsSUFBSTNqQyxFQUFFNGpDLGVBQWUsSUFBSS9uQyxFQUFFZ29DLGFBQWEsSUFBSXRnQyxFQUFFdWdDLFlBQVksSUFBSXZvQyxFQUFFd29DLGdCQUFnQixJQUFJdmdDLEVBQUV3Z0MsY0FBYyxJQUFJcmdDLEVBQUVzZ0MsVUFBVSxJQUFJNS9CLEVBQUU2L0Isa0JBQWtCLElBQUl0L0IsRUFBRXUvQixtQkFBbUIsSUFBSWovQixFQUFFay9CLDJCQUEyQixJQUFJai9CLEVBQUVrL0IsNEJBQTRCLElBQUloL0IsRUFBRWkvQix5QkFBeUIsSUFBSWgvQixFQUFFaS9CLGNBQWMsSUFBSWgvQixFQUFFaS9CLGVBQWUsSUFBSTkrQixFQUFFKytCLGFBQWEsSUFBSTkrQixFQUFFKytCLFVBQVUsSUFBSTlvQyxFQUFFK29DLDhCQUE4QixJQUFJMTdCLEVBQUUyN0IsUUFBUSxJQUFJcHBDLElBQUksSUFBSXhCLEVBQUVELEVBQUUsTUFBTXdXLE9BQU8sU0FBU3RXLEVBQUVKLEVBQUVILEdBQUcsSUFBSUssRUFBRSxHQUFHRixhQUFhOEUsV0FBVzVFLEVBQUVMLEVBQUVHLEVBQUVHLEVBQUUrRixLQUFLbEcsR0FBRzZJLFNBQVMsZUFBZSxHQUFHLG1CQUFtQjdJLEVBQUU2K0IscUJBQXFCMytCLEVBQUVGLEVBQUU2K0IscUJBQXFCaC9CLFFBQVEsR0FBRzRJLE1BQU1DLFFBQVExSSxHQUFHLENBQUNFLEVBQUUsR0FBRyxJQUFJLE1BQU1DLEtBQUtILEVBQUVFLEVBQUV5QyxLQUFLdkMsRUFBRUQsRUFBRU4sR0FBRyxNQUFNLEdBQUcsaUJBQWlCRyxFQUFFLENBQUMsTUFBTUcsRUFBRSxDQUFDLEVBQUUsSUFBSSxNQUFNRCxLQUFLUyxPQUFPc0ksS0FBS2pKLEdBQUdHLEVBQUVELEdBQUdFLEVBQUVKLEVBQUVFLEdBQUdMLEdBQUdLLEVBQUVDLENBQUMsS0FBSyxDQUFDLElBQUksU0FBU0gsR0FBRyxZQUFPLElBQVNBLEdBQUcsTUFBTUEsR0FBRyxpQkFBaUJBLEdBQUcsbUJBQW1CQSxDQUFDLENBQWhGLENBQWtGQSxHQUFHLE1BQU0sSUFBSXFGLE1BQU0sc0JBQXNCekIsT0FBTzVELE1BQU1FLEVBQUVGLENBQUMsQ0FBQyxPQUFPRSxDQUFDLENBQUMsTUFBTXVCLEVBQUVvOUIscUJBQXFCNytCLEdBQUUsR0FBSSxNQUFNSCxFQUFFLENBQUMsRUFBRSxJQUFJLE1BQU1LLEtBQUtTLE9BQU9zSSxLQUFLbEYsS0FBS2luQyxlQUFlLENBQUMsTUFBTTdxQyxFQUFFNEQsS0FBS2luQyxjQUFjOXFDLEdBQUd1QixFQUFFc0MsS0FBSzdELFFBQUcsSUFBU3VCLElBQUk1QixFQUFFTSxHQUFHLE9BQU9zQixFQUFFLEtBQUtyQixFQUFFcUIsRUFBRXpCLEdBQUcsQ0FBQyxPQUFPSCxDQUFDLEVBQUUsSUFBSVEsRUFBRUgsRUFBRSxNQUFNd1csT0FBTyxNQUFNclQsVUFBVTVCLEVBQUVtSyxhQUFha3lCLFFBQVE5OUIsRUFBRTArQixPQUFPNytCLEVBQUVvckMsNEJBQTRCL3FDLEVBQUVnckMsV0FBVy9xQyxFQUFFZ3JDLGVBQWUvcUMsRUFBRWdyQyxRQUFRM3BDLEVBQUVpL0IsTUFBTXJnQyxFQUFFcXFCLE9BQU9ybkIsRUFBRWdvQyxpQkFBaUI1cUMsRUFBRTZxQyxtQkFBbUJob0MsRUFBRWlvQyxpQkFBaUJqckMsRUFBRWtyQyxtQkFBbUI3bkMsRUFBRThuQyxlQUFlanFDLEVBQUVrcUMsb0JBQW9CeHBDLEVBQUV5cEMsZ0JBQWdCanJDLEVBQUVrckMsT0FBT3ZuQyxFQUFFd25DLFNBQVMxcEMsRUFBRTJwQyxZQUFZdHJDLEVBQUV1ckMsY0FBYzNwQyxFQUFFNHBDLGNBQWMxcEMsRUFBRTJwQyxXQUFXNXBDLEVBQUU2cEMsUUFBUTNwQyxJQUFJZ2EsUUFBUXhZLEtBQUsrNUIsUUFBUTk5QixFQUFFK0QsS0FBSzI2QixPQUFPNytCLEVBQUVrRSxLQUFLa25DLDRCQUE0Qi9xQyxFQUFFNkQsS0FBS21uQyxXQUFXL3FDLEVBQUU0RCxLQUFLb25DLGVBQWUvcUMsRUFBRTJELEtBQUtxbkMsUUFBUTNwQyxFQUFFc0MsS0FBSzI4QixNQUFNcmdDLEVBQUUwRCxLQUFLMm1CLE9BQU9ybkIsRUFBRVUsS0FBS3NuQyxpQkFBaUI1cUMsRUFBRXNELEtBQUt1bkMsbUJBQW1CaG9DLEVBQUVTLEtBQUt3bkMsaUJBQWlCanJDLEVBQUV5RCxLQUFLeW5DLG1CQUFtQjduQyxFQUFFSSxLQUFLMG5DLGVBQWVqcUMsRUFBRXVDLEtBQUsybkMsb0JBQW9CeHBDLEVBQUU2QixLQUFLNG5DLGdCQUFnQmpyQyxFQUFFcUQsS0FBSzZuQyxPQUFPdm5DLEVBQUVOLEtBQUs4bkMsU0FBUzFwQyxFQUFFNEIsS0FBSytuQyxZQUFZdHJDLEVBQUV1RCxLQUFLZ29DLGNBQWMzcEMsRUFBRTJCLEtBQUtpb0MsY0FBYzFwQyxFQUFFeUIsS0FBS2tvQyxXQUFXNXBDLEVBQUUwQixLQUFLbW9DLFFBQVEzcEMsRUFBRXdCLEtBQUtpbkMsY0FBYyxDQUFDbE4sUUFBUSxVQUFVWSxPQUFPLFNBQVN1TSw0QkFBNEIsaUNBQWlDQyxXQUFXLGNBQWNDLGVBQWUsa0JBQWtCQyxRQUFRLFVBQVUxSyxNQUFNLFFBQVFoVyxPQUFPLFNBQVMyZ0IsaUJBQWlCLHNCQUFzQkMsbUJBQW1CLHdCQUF3QkMsaUJBQWlCLHFCQUFxQkMsbUJBQW1CLHVCQUF1QkMsZUFBZSxtQkFBbUJDLG9CQUFvQix5QkFBeUJDLGdCQUFnQixvQkFBb0JDLE9BQU8sU0FBU0MsU0FBUyxZQUFZQyxZQUFZLGVBQWVDLGNBQWMsaUJBQWlCQyxjQUFjLGdCQUFnQkMsV0FBVyxjQUFjQyxRQUFRLFdBQVcsRUFBRSxNQUFNenJDLFVBQVVnQixFQUFFbUssWUFBWTVMLEVBQUVILEVBQUVLLEdBQUdxYyxRQUFReFksS0FBSzI4QixNQUFNMWdDLEVBQUUrRCxLQUFLb29DLGNBQWN0c0MsRUFBRWtFLEtBQUtxb0MsV0FBV2xzQyxFQUFFNkQsS0FBS2luQyxjQUFjLENBQUN0SyxNQUFNLFFBQVF5TCxjQUFjLGtCQUFrQkMsV0FBVyxjQUFjLEVBQUUsTUFBTTlvQyxVQUFVN0IsRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsUUFBUXhZLEtBQUsyOEIsTUFBTTFnQyxFQUFFK0QsS0FBS3NvQyxhQUFheHNDLEVBQUVrRSxLQUFLdW9DLGFBQWFwc0MsRUFBRTZELEtBQUtpbkMsY0FBYyxDQUFDdEssTUFBTSxRQUFRMkwsYUFBYSxnQkFBZ0JDLGFBQWEsZ0JBQWdCLEVBQUUsTUFBTWhzQyxVQUFVbUIsRUFBRW1LLGFBQWEyZ0MsMEJBQTBCdnNDLEVBQUV3c0MsZUFBZTNzQyxFQUFFNHNDLGdCQUFnQnZzQyxFQUFFd3NDLGNBQWN2c0MsRUFBRXdzQyxxQkFBcUJ2c0MsRUFBRXdzQyxjQUFjbnJDLElBQUk4YSxRQUFReFksS0FBS3dvQywwQkFBMEIsaUJBQWlCdnNDLEVBQUUsSUFBSThFLFdBQVd6RSxFQUFFNkYsS0FBS2xHLEVBQUUsV0FBV0EsRUFBRStELEtBQUt5b0MsZUFBZTNzQyxFQUFFa0UsS0FBSzBvQyxnQkFBZ0J2c0MsRUFBRTZELEtBQUsyb0MsY0FBY3ZzQyxFQUFFNEQsS0FBSzRvQyxxQkFBcUIsaUJBQWlCdnNDLEVBQUUsSUFBSTBFLFdBQVd6RSxFQUFFNkYsS0FBSzlGLEVBQUUsV0FBV0EsRUFBRTJELEtBQUs2b0MsY0FBYyxpQkFBaUJuckMsRUFBRSxJQUFJcUQsV0FBV3pFLEVBQUU2RixLQUFLekUsRUFBRSxXQUFXQSxFQUFFc0MsS0FBS2luQyxjQUFjLENBQUN1QiwwQkFBMEIsOEJBQThCQyxlQUFlLG1CQUFtQkMsZ0JBQWdCLG9CQUFvQkMsY0FBYyxrQkFBa0JDLHFCQUFxQix5QkFBeUJDLGNBQWMsa0JBQWtCLEVBQUUsTUFBTWpwQyxVQUFVbEMsRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUsrNUIsUUFBUTk5QixFQUFFK0QsS0FBSzhvQyxNQUFNaHRDLEVBQUVrRSxLQUFLaW5DLGNBQWMsQ0FBQ2xOLFFBQVEsVUFBVStPLE1BQU0sUUFBUSxFQUFFLE1BQU1yckMsVUFBVUMsRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUtvaEMsR0FBR25sQyxFQUFFK0QsS0FBSzh0QixPQUFPaHlCLEVBQUVrRSxLQUFLaW5DLGNBQWMsQ0FBQzdGLEdBQUcsS0FBS3RULE9BQU8sU0FBUyxFQUFFLE1BQU0zdkIsVUFBVVQsRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsUUFBUXhZLEtBQUtvaEMsR0FBR25sQyxFQUFFK0QsS0FBSytvQyxPQUFPanRDLEVBQUVrRSxLQUFLZ3BDLFNBQVM3c0MsRUFBRTZELEtBQUtpbkMsY0FBYyxDQUFDN0YsR0FBRyxLQUFLMkgsT0FBTyxTQUFTQyxTQUFTLFlBQVksRUFBRSxNQUFNcnNDLFVBQVVlLEVBQUVtSyxhQUFhb2hDLGdCQUFnQmh0QyxFQUFFaXRDLGtCQUFrQnB0QyxFQUFFcXRDLFFBQVFodEMsRUFBRWl0QyxrQkFBa0JodEMsRUFBRWl0QyxZQUFZaHRDLEVBQUVpdEMsa0JBQWtCNXJDLEVBQUU2ckMsaUJBQWlCanFDLElBQUlrWixRQUFReFksS0FBS2lwQyxnQkFBZ0IsaUJBQWlCaHRDLEVBQUUsSUFBSThFLFdBQVd6RSxFQUFFNkYsS0FBS2xHLEVBQUUsV0FBV0EsRUFBRStELEtBQUtrcEMsa0JBQWtCLGlCQUFpQnB0QyxFQUFFLElBQUlpRixXQUFXekUsRUFBRTZGLEtBQUtyRyxFQUFFLFdBQVdBLEVBQUVrRSxLQUFLbXBDLFFBQVFodEMsRUFBRTZELEtBQUtvcEMsa0JBQWtCaHRDLEVBQUU0RCxLQUFLcXBDLFlBQVlodEMsRUFBRTJELEtBQUtzcEMsa0JBQWtCNXJDLEVBQUVzQyxLQUFLdXBDLGlCQUFpQmpxQyxFQUFFVSxLQUFLaW5DLGNBQWMsQ0FBQ2dDLGdCQUFnQixtQkFBbUJDLGtCQUFrQixzQkFBc0JDLFFBQVEsVUFBVUMsa0JBQWtCLHNCQUFzQkMsWUFBWSxlQUFlQyxrQkFBa0Isc0JBQXNCQyxpQkFBaUIscUJBQXFCLEVBQUUsTUFBTWpwQyxVQUFVNUMsRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUt3cEMsUUFBUXZ0QyxFQUFFK0QsS0FBS3lwQyxhQUFhM3RDLEVBQUVrRSxLQUFLaW5DLGNBQWMsQ0FBQ3VDLFFBQVEsV0FBV0MsYUFBYSxpQkFBaUIsRUFBRSxNQUFNcnJDLFVBQVVWLEVBQUVtSyxZQUFZNUwsRUFBRUgsR0FBRzBjLFFBQVF4WSxLQUFLd3dCLE1BQU12MEIsRUFBRStELEtBQUs4dEIsT0FBT2h5QixFQUFFa0UsS0FBS2luQyxjQUFjLENBQUN6VyxNQUFNLFFBQVExQyxPQUFPLFNBQVMsRUFBRSxNQUFNcnhCLFVBQVVpQixFQUFFbUssWUFBWTVMLEVBQUVILEVBQUVLLEdBQUdxYyxRQUFReFksS0FBSzI2QixPQUFPMStCLEVBQUUrRCxLQUFLMHBDLFFBQVE1dEMsRUFBRWtFLEtBQUsycEMsU0FBU3h0QyxFQUFFNkQsS0FBS2luQyxjQUFjLENBQUN0TSxPQUFPLFNBQVMrTyxRQUFRLFdBQVdDLFNBQVMsWUFBWSxFQUFFLE1BQU10ckMsVUFBVVgsRUFBRW1LLGFBQWFzaEMsUUFBUWx0QyxFQUFFMnRDLFNBQVM5dEMsRUFBRW12QixNQUFNOXVCLEVBQUUwdEMsU0FBU3p0QyxFQUFFMHRDLGNBQWN6dEMsRUFBRTB0QyxPQUFPcnNDLEVBQUVzc0MsUUFBUTFxQyxFQUFFMnFDLGFBQWF2dEMsRUFBRWljLEtBQUtwWixFQUFFMnFDLFFBQVEzdEMsRUFBRTR0QyxRQUFRdnFDLEVBQUV3cUMsU0FBUzNzQyxFQUFFNHNDLFlBQVlsc0MsRUFBRW9wQixJQUFJNXFCLEVBQUUydEMsT0FBT2hxQyxJQUFJa1ksUUFBUXhZLEtBQUttcEMsUUFBUWx0QyxFQUFFK0QsS0FBSzRwQyxTQUFTOXRDLEVBQUVrRSxLQUFLaXJCLE1BQU05dUIsRUFBRTZELEtBQUs2cEMsU0FBU3p0QyxFQUFFNEQsS0FBSzhwQyxjQUFjenRDLEVBQUUyRCxLQUFLK3BDLE9BQU9yc0MsRUFBRXNDLEtBQUtncUMsUUFBUTFxQyxFQUFFVSxLQUFLaXFDLGFBQWEsaUJBQWlCdnRDLEVBQUUsSUFBSXFFLFdBQVd6RSxFQUFFNkYsS0FBS3pGLEVBQUUsV0FBV0EsRUFBRXNELEtBQUsyWSxLQUFLcFosRUFBRVMsS0FBS2txQyxRQUFRLGlCQUFpQjN0QyxFQUFFLElBQUl3RSxXQUFXekUsRUFBRTZGLEtBQUs1RixFQUFFLFdBQVdBLEVBQUV5RCxLQUFLbXFDLFFBQVF2cUMsRUFBRUksS0FBS29xQyxTQUFTM3NDLEVBQUV1QyxLQUFLcXFDLFlBQVksaUJBQWlCbHNDLEVBQUUsSUFBSTRDLFdBQVd6RSxFQUFFNkYsS0FBS2hFLEVBQUUsV0FBV0EsRUFBRTZCLEtBQUt1bkIsSUFBSTVxQixFQUFFcUQsS0FBS3NxQyxPQUFPLGlCQUFpQmhxQyxFQUFFLElBQUlTLFdBQVd6RSxFQUFFNkYsS0FBSzdCLEVBQUUsV0FBV0EsRUFBRU4sS0FBS2luQyxjQUFjLENBQUNrQyxRQUFRLFVBQVVTLFNBQVMsV0FBVzNlLE1BQU0sUUFBUTRlLFNBQVMsV0FBV0MsY0FBYyxpQkFBaUJDLE9BQU8sU0FBU0MsUUFBUSxVQUFVQyxhQUFhLGdCQUFnQnR4QixLQUFLLE9BQU91eEIsUUFBUSxXQUFXQyxRQUFRLFVBQVVDLFNBQVMsWUFBWUMsWUFBWSxnQkFBZ0I5aUIsSUFBSSxNQUFNK2lCLE9BQU8sVUFBVSxFQUFFLE1BQU0vckMsVUFBVWIsRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUswZixNQUFNempCLEVBQUUrRCxLQUFLdXFDLEtBQUt6dUMsRUFBRWtFLEtBQUtpbkMsY0FBYyxDQUFDdm5CLE1BQU0sUUFBUTZxQixLQUFLLE9BQU8sRUFBRSxNQUFNanNDLFVBQVVaLEVBQUVtSyxhQUFhMmlDLE9BQU92dUMsRUFBRXd1QyxZQUFZM3VDLEVBQUU0dUMsUUFBUXZ1QyxFQUFFd3VDLFdBQVd2dUMsRUFBRXd1QyxNQUFNdnVDLEVBQUV3dUMsTUFBTW50QyxJQUFJOGEsUUFBUXhZLEtBQUt3cUMsT0FBT3Z1QyxFQUFFK0QsS0FBS3lxQyxZQUFZM3VDLEVBQUVrRSxLQUFLMHFDLFFBQVF2dUMsRUFBRTZELEtBQUsycUMsV0FBV3Z1QyxFQUFFNEQsS0FBSzRxQyxNQUFNdnVDLEVBQUUyRCxLQUFLNnFDLE1BQU1udEMsRUFBRXNDLEtBQUtpbkMsY0FBYyxDQUFDdUQsT0FBTyxTQUFTQyxZQUFZLGVBQWVDLFFBQVEsVUFBVUMsV0FBVyxjQUFjQyxNQUFNLFFBQVFDLE1BQU0sUUFBUSxFQUFFLE1BQU1yc0MsVUFBVWQsRUFBRW1LLFlBQVk1TCxHQUFHdWMsUUFBUXhZLEtBQUs4cUMsZUFBZTd1QyxFQUFFK0QsS0FBS2luQyxjQUFjLENBQUM2RCxlQUFlLGtCQUFrQixFQUFFLE1BQU12cEMsVUFBVTdELEVBQUVtSyxZQUFZNUwsR0FBR3VjLFFBQVF4WSxLQUFLOHFDLGVBQWU3dUMsRUFBRStELEtBQUtpbkMsY0FBYyxDQUFDNkQsZUFBZSxrQkFBa0IsRUFBRSxNQUFNNXNDLFVBQVVSLEVBQUVtSyxZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLFFBQVF4WSxLQUFLb2dCLEtBQUtua0IsRUFBRStELEtBQUsrcUMsT0FBT2p2QyxFQUFFa0UsS0FBS2dyQyxVQUFVN3VDLEVBQUU2RCxLQUFLaW5DLGNBQWMsQ0FBQzdtQixLQUFLLE9BQU8ycUIsT0FBTyxTQUFTQyxVQUFVLFlBQVksRUFBRSxNQUFNaHBDLFVBQVV0RSxFQUFFbUssWUFBWTVMLEdBQUd1YyxRQUFReFksS0FBSytxQyxPQUFPOXVDLEVBQUUrRCxLQUFLaW5DLGNBQWMsQ0FBQzhELE9BQU8sU0FBUyxFQUFFLE1BQU0zb0MsVUFBVTFFLEVBQUVtSyxhQUFhb2pDLFNBQVNodkMsRUFBRWl2QyxLQUFLcHZDLEVBQUVxdkMsZ0JBQWdCaHZDLEVBQUVpdkMsZ0JBQWdCaHZDLEVBQUV1Z0MsTUFBTXRnQyxFQUFFZ3ZDLFFBQVEzdEMsRUFBRTI3QixLQUFLLzhCLElBQUlrYyxRQUFReFksS0FBS2lyQyxTQUFTaHZDLEVBQUUrRCxLQUFLa3JDLEtBQUtwdkMsRUFBRWtFLEtBQUttckMsZ0JBQWdCaHZDLEVBQUU2RCxLQUFLb3JDLGdCQUFnQmh2QyxFQUFFNEQsS0FBSzI4QixNQUFNdGdDLEVBQUUyRCxLQUFLcXJDLFFBQVEzdEMsRUFBRXNDLEtBQUtxNUIsS0FBSy84QixFQUFFMEQsS0FBS2luQyxjQUFjLENBQUNnRSxTQUFTLFdBQVdDLEtBQUssT0FBT0MsZ0JBQWdCLG1CQUFtQkMsZ0JBQWdCLG1CQUFtQnpPLE1BQU0sUUFBUTBPLFFBQVEsVUFBVWhTLEtBQUssT0FBTyxFQUFFLE1BQU1wN0IsVUFBVVAsRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsUUFBUXhZLEtBQUtuQixNQUFNNUMsRUFBRStELEtBQUtvckMsZ0JBQWdCdHZDLEVBQUVrRSxLQUFLcTVCLEtBQUtsOUIsRUFBRTZELEtBQUtpbkMsY0FBYyxDQUFDcG9DLE1BQU0sUUFBUXVzQyxnQkFBZ0IsbUJBQW1CL1IsS0FBSyxPQUFPLEVBQUUsTUFBTTF6QixVQUFVakksRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHb2MsUUFBUXhZLEtBQUtzckMsVUFBVXJ2QyxFQUFFK0QsS0FBSzZqQyxPQUFPL25DLEVBQUVrRSxLQUFLdXJDLFNBQVNwdkMsRUFBRTZELEtBQUt3ckMsU0FBU3B2QyxFQUFFNEQsS0FBS2luQyxjQUFjLENBQUNxRSxVQUFVLGFBQWF6SCxPQUFPLFNBQVMwSCxTQUFTLFlBQVlDLFNBQVMsWUFBWSxFQUFFLE1BQU03dEMsVUFBVUQsRUFBRW1LLGFBQWE0akMsS0FBS3h2QyxFQUFFeXZDLEdBQUc1dkMsRUFBRTBNLE1BQU1yTSxFQUFFMEMsTUFBTXpDLEVBQUV1dkMsUUFBUXR2QyxJQUFJbWMsUUFBUXhZLEtBQUt5ckMsS0FBS3h2QyxFQUFFK0QsS0FBSzByQyxHQUFHNXZDLEVBQUVrRSxLQUFLd0ksTUFBTXJNLEVBQUU2RCxLQUFLbkIsTUFBTXpDLEVBQUU0RCxLQUFLMnJDLFFBQVF0dkMsRUFBRTJELEtBQUtpbkMsY0FBYyxDQUFDd0UsS0FBSyxPQUFPQyxHQUFHLEtBQUtsakMsTUFBTSxRQUFRM0osTUFBTSxRQUFROHNDLFFBQVEsVUFBVSxFQUFFLE1BQU0vbEMsVUFBVWxJLEVBQUVtSyxhQUFhK2pDLFlBQVkzdkMsRUFBRTR2QyxnQkFBZ0IvdkMsRUFBRWd3QyxhQUFhM3ZDLEVBQUU0dkMsWUFBWTN2QyxFQUFFNHZDLGVBQWUzdkMsRUFBRTR2QyxLQUFLdnVDLEVBQUV3dUMsWUFBWTV2QyxFQUFFNnZDLFlBQVk3c0MsRUFBRThzQyxvQkFBb0IxdkMsRUFBRTJ2QyxpQkFBaUI5c0MsRUFBRStzQyxjQUFjL3ZDLEVBQUVnd0MsS0FBSzNzQyxJQUFJNFksUUFBUXhZLEtBQUs0ckMsWUFBWTN2QyxFQUFFK0QsS0FBSzZyQyxnQkFBZ0IvdkMsRUFBRWtFLEtBQUs4ckMsYUFBYTN2QyxFQUFFNkQsS0FBSytyQyxZQUFZM3ZDLEVBQUU0RCxLQUFLZ3NDLGVBQWUzdkMsRUFBRTJELEtBQUtpc0MsS0FBS3Z1QyxFQUFFc0MsS0FBS2tzQyxZQUFZNXZDLEVBQUUwRCxLQUFLbXNDLFlBQVk3c0MsRUFBRVUsS0FBS29zQyxvQkFBb0IxdkMsRUFBRXNELEtBQUtxc0MsaUJBQWlCOXNDLEVBQUVTLEtBQUtzc0MsY0FBYy92QyxFQUFFeUQsS0FBS3VzQyxLQUFLM3NDLEVBQUVJLEtBQUtpbkMsY0FBYyxDQUFDMkUsWUFBWSxjQUFjQyxnQkFBZ0Isb0JBQW9CQyxhQUFhLGlCQUFpQkMsWUFBWSxlQUFlQyxlQUFlLGtCQUFrQkMsS0FBSyxPQUFPQyxZQUFZLGVBQWVDLFlBQVksZUFBZUMsb0JBQW9CLHdCQUF3QkMsaUJBQWlCLHFCQUFxQkMsY0FBYyxrQkFBa0JDLEtBQUssT0FBTyxFQUFFLE1BQU14bUMsVUFBVXJJLEVBQUVtSyxZQUFZNUwsRUFBRUgsR0FBRzBjLFFBQVF4WSxLQUFLNlksUUFBUTVjLEVBQUUrRCxLQUFLRSxLQUFLcEUsRUFBRWtFLEtBQUtpbkMsY0FBYyxDQUFDcHVCLFFBQVEsVUFBVTNZLEtBQUssT0FBTyxFQUFFLE1BQU11RyxVQUFVL0ksRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsUUFBUXhZLEtBQUt3c0MsT0FBT3Z3QyxFQUFFK0QsS0FBS2dELE1BQU1sSCxFQUFFa0UsS0FBS3lzQyxLQUFLdHdDLEVBQUU2RCxLQUFLaW5DLGNBQWMsQ0FBQ3VGLE9BQU8sU0FBU3hwQyxNQUFNLFFBQVF5cEMsS0FBSyxPQUFPLEVBQUUsTUFBTXpsQyxVQUFVdEosRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUs0SyxJQUFJM08sRUFBRStELEtBQUs5QyxNQUFNcEIsRUFBRWtFLEtBQUtpbkMsY0FBYyxDQUFDcjhCLElBQUksTUFBTTFOLE1BQU0sUUFBUSxFQUFFLE1BQU1vSyxVQUFVNUosRUFBRW1LLGFBQWE2a0MsWUFBWXp3QyxFQUFFaThCLFVBQVVwOEIsRUFBRTZ3QyxZQUFZeHdDLEVBQUV5d0MsWUFBWXh3QyxFQUFFeXdDLGlCQUFpQnh3QyxFQUFFeXdDLHFCQUFxQnB2QyxFQUFFcXZDLDBCQUEwQnp3QyxFQUFFMHdDLG1CQUFtQjF0QyxFQUFFMnRDLFdBQVd2d0MsRUFBRXd3Qyx5QkFBeUIzdEMsRUFBRTR0Qyw0QkFBNEI1d0MsRUFBRTZ3Qyx3QkFBd0J4dEMsRUFBRXl0QyxzQkFBc0I1dkMsRUFBRTZ2QywyQkFBMkJudkMsRUFBRW92QyxlQUFlNXdDLElBQUk2YixRQUFReFksS0FBSzBzQyxZQUFZendDLEVBQUUrRCxLQUFLazRCLFVBQVVwOEIsRUFBRWtFLEtBQUsyc0MsWUFBWXh3QyxFQUFFNkQsS0FBSzRzQyxZQUFZeHdDLEVBQUU0RCxLQUFLNnNDLGlCQUFpQnh3QyxFQUFFMkQsS0FBSzhzQyxxQkFBcUJwdkMsRUFBRXNDLEtBQUsrc0MsMEJBQTBCendDLEVBQUUwRCxLQUFLZ3RDLG1CQUFtQjF0QyxFQUFFVSxLQUFLaXRDLFdBQVd2d0MsRUFBRXNELEtBQUtrdEMseUJBQXlCM3RDLEVBQUVTLEtBQUttdEMsNEJBQTRCNXdDLEVBQUV5RCxLQUFLb3RDLHdCQUF3Qnh0QyxFQUFFSSxLQUFLcXRDLHNCQUFzQjV2QyxFQUFFdUMsS0FBS3N0QywyQkFBMkJudkMsRUFBRTZCLEtBQUt1dEMsZUFBZTV3QyxFQUFFcUQsS0FBS2luQyxjQUFjLENBQUN5RixZQUFZLGVBQWV4VSxVQUFVLGFBQWF5VSxZQUFZLGVBQWVDLFlBQVksZUFBZUMsaUJBQWlCLHFCQUFxQkMscUJBQXFCLHlCQUF5QkMsMEJBQTBCLCtCQUErQkMsbUJBQW1CLHdCQUF3QkMsV0FBVyxhQUFhQyx5QkFBeUIsNkJBQTZCQyw0QkFBNEIsZ0NBQWdDQyx3QkFBd0IsNEJBQTRCQyxzQkFBc0IsMEJBQTBCQywyQkFBMkIsK0JBQStCQyxlQUFlLGtCQUFrQixFQUFFLE1BQU1obUMsVUFBVTdKLEVBQUVtSyxhQUFhMmxDLFVBQVV2eEMsRUFBRTgrQixJQUFJai9CLEVBQUUyeEMsaUJBQWlCdHhDLEVBQUV1eEMsbUJBQW1CdHhDLEVBQUV1eEMsV0FBV3R4QyxFQUFFdXhDLGFBQWFsd0MsRUFBRW13QyxjQUFjdnhDLEVBQUV3eEMsZUFBZXh1QyxFQUFFeXVDLGlCQUFpQnJ4QyxFQUFFc3hDLFVBQVV6dUMsRUFBRTB1QyxnQkFBZ0IxeEMsRUFBRWd3QyxLQUFLM3NDLEVBQUVzdUMsZ0JBQWdCendDLEVBQUUwd0MsY0FBY2h3QyxJQUFJcWEsUUFBUXhZLEtBQUt3dEMsVUFBVXZ4QyxFQUFFK0QsS0FBSys2QixJQUFJai9CLEVBQUVrRSxLQUFLeXRDLGlCQUFpQnR4QyxFQUFFNkQsS0FBSzB0QyxtQkFBbUJ0eEMsRUFBRTRELEtBQUsydEMsV0FBV3R4QyxFQUFFMkQsS0FBSzR0QyxhQUFhbHdDLEVBQUVzQyxLQUFLNnRDLGNBQWN2eEMsRUFBRTBELEtBQUs4dEMsZUFBZXh1QyxFQUFFVSxLQUFLK3RDLGlCQUFpQnJ4QyxFQUFFc0QsS0FBS2d1QyxVQUFVenVDLEVBQUVTLEtBQUtpdUMsZ0JBQWdCMXhDLEVBQUV5RCxLQUFLdXNDLEtBQUszc0MsRUFBRUksS0FBS2t1QyxnQkFBZ0J6d0MsRUFBRXVDLEtBQUttdUMsY0FBY2h3QyxFQUFFNkIsS0FBS2luQyxjQUFjLENBQUN1RyxVQUFVLGFBQWF6UyxJQUFJLE1BQU0wUyxpQkFBaUIsb0JBQW9CQyxtQkFBbUIsdUJBQXVCQyxXQUFXLGNBQWNDLGFBQWEsZ0JBQWdCQyxjQUFjLGlCQUFpQkMsZUFBZSxrQkFBa0JDLGlCQUFpQixxQkFBcUJDLFVBQVUsYUFBYUMsZ0JBQWdCLG9CQUFvQjFCLEtBQUssT0FBTzJCLGdCQUFnQixtQkFBbUJDLGNBQWMsaUJBQWlCLEVBQUUsTUFBTTFtQyxVQUFVL0osRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUtvdUMsZ0JBQWdCbnlDLEVBQUUrRCxLQUFLcXVDLGtCQUFrQnZ5QyxFQUFFa0UsS0FBS2luQyxjQUFjLENBQUNtSCxnQkFBZ0IsbUJBQW1CQyxrQkFBa0IscUJBQXFCLEVBQUUsTUFBTTNtQyxVQUFVaEssRUFBRW1LLFlBQVk1TCxHQUFHdWMsUUFBUXhZLEtBQUs4akMsS0FBSzduQyxFQUFFK0QsS0FBS2luQyxjQUFjLENBQUNuRCxLQUFLLE9BQU8sRUFBRSxNQUFNbjhCLFVBQVVqSyxFQUFFbUssYUFBYXltQyxJQUFJcnlDLEVBQUVzeUMsTUFBTXp5QyxFQUFFMHlDLFNBQVNyeUMsRUFBRXN5QyxVQUFVcnlDLEVBQUVzeUMsU0FBU3J5QyxJQUFJbWMsUUFBUXhZLEtBQUtzdUMsSUFBSXJ5QyxFQUFFK0QsS0FBS3V1QyxNQUFNLGlCQUFpQnp5QyxFQUFFLElBQUlpRixXQUFXekUsRUFBRTZGLEtBQUtyRyxFQUFFLFdBQVdBLEVBQUVrRSxLQUFLd3VDLFNBQVMsaUJBQWlCcnlDLEVBQUUsSUFBSTRFLFdBQVd6RSxFQUFFNkYsS0FBS2hHLEVBQUUsV0FBV0EsRUFBRTZELEtBQUt5dUMsVUFBVXJ5QyxFQUFFNEQsS0FBSzB1QyxTQUFTcnlDLEVBQUUyRCxLQUFLaW5DLGNBQWMsQ0FBQ3FILElBQUksTUFBTUMsTUFBTSxRQUFRQyxTQUFTLFdBQVdDLFVBQVUsWUFBWUMsU0FBUyxXQUFXLEVBQUUsTUFBTTVtQyxVQUFVcEssRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsUUFBUXhZLEtBQUsydUMsYUFBYTF5QyxFQUFFK0QsS0FBSzR1QyxZQUFZOXlDLEVBQUVrRSxLQUFLNnVDLFdBQVcxeUMsRUFBRTZELEtBQUtpbkMsY0FBYyxDQUFDMEgsYUFBYSxnQkFBZ0JDLFlBQVksZUFBZUMsV0FBVyxjQUFjLEVBQUUsTUFBTTltQyxVQUFVckssRUFBRW1LLFlBQVk1TCxFQUFFSCxHQUFHMGMsUUFBUXhZLEtBQUs0SyxJQUFJM08sRUFBRStELEtBQUs5QyxNQUFNcEIsRUFBRWtFLEtBQUtpbkMsY0FBYyxDQUFDcjhCLElBQUksTUFBTTFOLE1BQU0sUUFBUSxFQUFFLE1BQU1jLFVBQVVOLEVBQUVtSyxZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLFFBQVF4WSxLQUFLQyxLQUFLaEUsRUFBRStELEtBQUtnRCxNQUFNbEgsRUFBRWtFLEtBQUt5c0MsS0FBS3R3QyxFQUFFNkQsS0FBS2luQyxjQUFjLENBQUNobkMsS0FBSyxPQUFPK0MsTUFBTSxRQUFReXBDLEtBQUssT0FBTyxFQUFFLE1BQU1waEMsVUFBVTNOLEVBQUVtSyxhQUFhaW5DLGlCQUFpQjd5QyxFQUFFZzlCLElBQUluOUIsRUFBRXE5QixZQUFZaDlCLEVBQUU0eUMsVUFBVTN5QyxFQUFFODdCLFVBQVU3N0IsRUFBRTJ5QyxPQUFPdHhDLElBQUk4YSxRQUFReFksS0FBSzh1QyxpQkFBaUI3eUMsRUFBRStELEtBQUtpNUIsSUFBSW45QixFQUFFa0UsS0FBS201QixZQUFZLGlCQUFpQmg5QixFQUFFLElBQUk0RSxXQUFXekUsRUFBRTZGLEtBQUtoRyxFQUFFLFdBQVdBLEVBQUU2RCxLQUFLK3VDLFVBQVUzeUMsRUFBRTRELEtBQUtrNEIsVUFBVTc3QixFQUFFMkQsS0FBS2d2QyxPQUFPdHhDLEVBQUVzQyxLQUFLaW5DLGNBQWMsQ0FBQzZILGlCQUFpQixvQkFBb0I3VixJQUFJLE1BQU1FLFlBQVksZUFBZTRWLFVBQVUsYUFBYTdXLFVBQVUsYUFBYThXLE9BQU8sVUFBVSxFQUFFLE1BQU1weEMsVUFBVUYsRUFBRW1LLFlBQVk1TCxFQUFFSCxFQUFFSyxFQUFFQyxHQUFHb2MsUUFBUXhZLEtBQUtpdkMsTUFBTWh6QyxFQUFFK0QsS0FBS2t2QyxlQUFlLGlCQUFpQnB6QyxFQUFFLElBQUlpRixXQUFXekUsRUFBRTZGLEtBQUtyRyxFQUFFLFdBQVdBLEVBQUVrRSxLQUFLK3VDLFVBQVU1eUMsRUFBRTZELEtBQUt3YyxTQUFTcGdCLEVBQUU0RCxLQUFLaW5DLGNBQWMsQ0FBQ2dJLE1BQU0sUUFBUUMsZUFBZSxtQkFBbUJILFVBQVUsYUFBYXZ5QixTQUFTLFdBQVcsRUFBQyxFQUFHLEtBQUssQ0FBQ3ZnQixFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVBLEVBQUVMLEdBQUdLLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ3U3QiwwQkFBMEIsSUFBSS82QixFQUFFZ0IsUUFBUSxJQUFJWixJQUFJLElBQUlOLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxLQUFLdUIsRUFBRXZCLEVBQUUsTUFBTXdXLE9BQU8sU0FBU3JXLEVBQUVMLEVBQUUsQ0FBQyxHQUFHLElBQUlILEVBQUVHLEVBQUUsT0FBT1csT0FBT3NJLEtBQUtwSixHQUFHeWlDLE9BQU90aUMsR0FBRyxpQkFBaUJBLEVBQUVtUixrQkFBa0J0UixFQUFFLElBQUlHLEdBQUdILEVBQUUsZ0JBQWdCLHdCQUF3QkEsQ0FBQyxDQUFDLFNBQVN3RCxFQUFFckQsR0FBRyxPQUFPQSxRQUFHLElBQVNBLEVBQUVvRixVQUFVLENBQUMsTUFBTTNFLFVBQVVOLEVBQUU2YyxFQUFFcFIsWUFBWTVMLEVBQUVILEdBQUcwYyxNQUFNdmMsR0FBRyxJQUFJRSxFQUFFTCxFQUFFLEdBQUc0SSxNQUFNQyxRQUFRN0ksR0FBRyxDQUFDLElBQUlBLEVBQUV5aUMsTUFBTWovQixHQUFHLE1BQU0sSUFBSStDLFVBQVUsc0NBQXNDbEcsR0FBRSxFQUFHRSxFQUFFKy9CLGlCQUFpQnRnQyxFQUFFLE1BQU0sSUFBSXdELEVBQUVuRCxHQUFHLE1BQU0sSUFBSWtHLFVBQVUsK0JBQStCckMsS0FBS212QyxlQUFlaHpDLENBQUMsQ0FBQ3FuQyxPQUFPLE1BQU0sa0JBQWtCLENBQUMvTCxTQUFTeDdCLEVBQUUsQ0FBQyxHQUFHLE1BQU1ILEVBQUVRLEVBQUVMLEdBQUcsYUFBYStELEtBQUt0RCxFQUFFd3ZCLEtBQUtsc0IsS0FBS3dqQyxPQUFPOWxDLEVBQUV5RSxLQUFLbkMsS0FBS212QyxnQkFBZ0JyekMsSUFBSXFyQixJQUFJLEVBQUMsRUFBRyxLQUFLLENBQUNsckIsRUFBRUgsRUFBRUssS0FBSyxhQUFhQSxFQUFFUSxFQUFFYixFQUFFLENBQUNtZCxFQUFFLElBQUk3VyxJQUFJLElBQUloRyxFQUFFRCxFQUFFLE1BQU1FLEVBQUVGLEVBQUUsTUFBTSxNQUFNdUIsVUFBVXJCLEVBQUU0YyxFQUFFdXFCLE9BQU8sTUFBTSxTQUFTLEVBQUUsTUFBTWxuQyxVQUFVRCxFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLd3dCLE1BQU1yMEIsRUFBRTZELEtBQUt3d0IsTUFBTXIwQixDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGNBQWN4akMsS0FBS3d3QixnQkFBZ0IsQ0FBQzRlLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQ3F2QyxvQkFBb0JwekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLHlCQUF5QjlzQixFQUFFK0QsSUFBSSxDQUFDc3ZDLGlCQUFpQnJ6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sc0JBQXNCOXNCLEVBQUUrRCxJQUFJLENBQUN1dkMsVUFBVXR6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1ycUIsS0FBS3pDLEVBQUUrRCxJQUFJLENBQUN3dkMsV0FBV3Z6QyxHQUFFLEdBQUksT0FBTytELEtBQUsrb0IsTUFBTSxlQUFlOXNCLEVBQUUrRCxJQUFJLEVBQUUsSUFBSVYsRUFBRW5ELEVBQUUsTUFBTXdXLE9BQU8sU0FBU2pXLEVBQUVULEdBQUcsTUFBTSxpQkFBaUJBLEVBQUVBLEVBQUVxRCxFQUFFNkMsS0FBS2xHLEdBQUc2SSxTQUFTLFNBQVMsQ0FBQyxNQUFNdkYsVUFBVWxELEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEVBQUVLLEdBQUdxYyxNQUFNdmMsRUFBRUgsR0FBR2tFLEtBQUsyL0IsUUFBUXhqQyxFQUFFNkQsS0FBSzIvQixRQUFReGpDLENBQUMsQ0FBQ3FuQyxPQUFPLE1BQU0sZ0JBQWdCeGpDLEtBQUsyL0Isc0JBQXNCLENBQUM4UCxXQUFXeHpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxlQUFlcnNCLEVBQUVULEdBQUcrRCxJQUFJLENBQUMwdkMsT0FBT3p6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sV0FBVzlzQixFQUFFK0QsSUFBSSxDQUFDbW9DLFFBQVFsc0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLFlBQVk5c0IsRUFBRStELElBQUksQ0FBQzhqQyxLQUFLN25DLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSthLEtBQUs3bkMsRUFBRStELElBQUksQ0FBQzI4QixNQUFNMWdDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTTRULE1BQU0xZ0MsRUFBRStELElBQUksQ0FBQzJ2QyxTQUFTMXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxhQUFhOXNCLEVBQUUrRCxJQUFJLENBQUM0dkMsU0FBUzN6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sYUFBYTlzQixFQUFFK0QsSUFBSSxDQUFDMGpDLFFBQVF6bkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLFlBQVk5c0IsRUFBRStELElBQUksQ0FBQ292QyxNQUFNbnpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXFtQixNQUFNbnpDLEVBQUUrRCxJQUFJLENBQUM2dkMsV0FBVzV6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxDQUFDOHZDLFVBQVU3ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGNBQWM5c0IsRUFBRStELElBQUksQ0FBQ3F2QyxvQkFBb0JwekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLHlCQUF5QjlzQixFQUFFK0QsSUFBSSxDQUFDc3ZDLGlCQUFpQnJ6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sc0JBQXNCOXNCLEVBQUUrRCxJQUFJLENBQUN1dkMsVUFBVXR6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1ycUIsS0FBS3pDLEVBQUUrRCxJQUFJLENBQUMrdkMsUUFBUTl6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxFQUFFLE1BQU16RCxVQUFVRixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLd3dCLE1BQU1yMEIsRUFBRTZELEtBQUt3d0IsTUFBTXIwQixDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGNBQWN4akMsS0FBS3d3QixvQkFBb0IsQ0FBQ2lmLFdBQVd4ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGVBQWVyc0IsRUFBRVQsR0FBRytELElBQUksQ0FBQzB2QyxPQUFPenpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxXQUFXOXNCLEVBQUUrRCxJQUFJLENBQUNtb0MsUUFBUWxzQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDOGpDLEtBQUs3bkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNK2EsS0FBSzduQyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDMnZDLFNBQVMxekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGFBQWE5c0IsRUFBRStELElBQUksQ0FBQzR2QyxTQUFTM3pDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxhQUFhOXNCLEVBQUUrRCxJQUFJLENBQUMwakMsUUFBUXpuQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDb3ZDLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQzZ2QyxXQUFXNXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxlQUFlOXNCLEVBQUUrRCxJQUFJLENBQUM4dkMsVUFBVTd6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sY0FBYzlzQixFQUFFK0QsSUFBSSxDQUFDcXZDLG9CQUFvQnB6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0seUJBQXlCOXNCLEVBQUUrRCxJQUFJLENBQUNzdkMsaUJBQWlCcnpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxzQkFBc0I5c0IsRUFBRStELElBQUksQ0FBQ2d3QyxZQUFZL3pDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxnQkFBZ0I5c0IsRUFBRStELElBQUksQ0FBQys1QixRQUFROTlCLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTWdSLFFBQVE5OUIsRUFBRStELElBQUksQ0FBQ2l3QyxlQUFlaDBDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxvQkFBb0I5c0IsRUFBRStELElBQUksQ0FBQ3V2QyxVQUFVdHpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXJxQixLQUFLekMsRUFBRStELElBQUksQ0FBQyt2QyxRQUFROXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxZQUFZOXNCLEVBQUUrRCxJQUFJLEVBQUUsTUFBTUosVUFBVXZELEVBQUU0YyxFQUFFcFIsWUFBWTVMLEVBQUVILEVBQUVLLEdBQUdxYyxNQUFNdmMsRUFBRUgsR0FBR2tFLEtBQUsyOEIsTUFBTXhnQyxFQUFFNkQsS0FBSzI4QixNQUFNeGdDLENBQUMsQ0FBQ3FuQyxPQUFPLE1BQU0sY0FBY3hqQyxLQUFLMjhCLE9BQU8sRUFBRSxNQUFNbC9CLFVBQVVwQixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLK2pDLEtBQUs1bkMsRUFBRTZELEtBQUsrakMsS0FBSzVuQyxDQUFDLENBQUNxbkMsT0FBTyxNQUFNLG9CQUFvQnhqQyxLQUFLK2pDLE1BQU0sRUFBRSxNQUFNNWxDLFVBQVU5QixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLMi9CLFFBQVF4akMsRUFBRTZELEtBQUsyL0IsUUFBUXhqQyxDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLMi9CLFNBQVMsQ0FBQ2hELE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDd3ZDLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxDQUFDeWpDLFFBQVF4bkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNMGEsUUFBUXhuQyxFQUFFK0QsSUFBSSxFQUFFLE1BQU1yRCxVQUFVTixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLMi9CLFFBQVF4akMsRUFBRTZELEtBQUsyL0IsUUFBUXhqQyxDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLMi9CLGdCQUFnQixDQUFDeVAsTUFBTW56QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1xbUIsTUFBTW56QyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDd3ZDLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxDQUFDMHBDLFFBQVF6dEMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLFlBQVk5c0IsRUFBRStELElBQUksRUFBRSxNQUFNTSxVQUFVakUsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBSzIvQixRQUFReGpDLEVBQUU2RCxLQUFLMi9CLFFBQVF4akMsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxnQkFBZ0J4akMsS0FBSzIvQix3QkFBd0IsQ0FBQ3lQLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQzI4QixNQUFNMWdDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTTRULE1BQU0xZ0MsRUFBRStELElBQUksQ0FBQ3V2QyxVQUFVdHpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXJxQixLQUFLekMsRUFBRStELElBQUksQ0FBQ3d2QyxXQUFXdnpDLEdBQUUsR0FBSSxPQUFPK0QsS0FBSytvQixNQUFNLGVBQWU5c0IsRUFBRStELElBQUksQ0FBQzBqQyxRQUFRem5DLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxZQUFZOXNCLEVBQUUrRCxJQUFJLEVBQUUsTUFBTTVCLFVBQVUvQixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLMi9CLFFBQVF4akMsRUFBRTZELEtBQUsyL0IsUUFBUXhqQyxDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLMi9CLDBCQUEwQixDQUFDeVAsTUFBTW56QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1xbUIsTUFBTW56QyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDd3ZDLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxDQUFDMmpDLGNBQWMxbkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGtCQUFrQjlzQixFQUFFK0QsSUFBSSxFQUFFLE1BQU12RCxVQUFVSixFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLMi9CLFFBQVF4akMsRUFBRTZELEtBQUsyL0IsUUFBUXhqQyxDQUFDLENBQUNxbkMsT0FBTyxNQUFNLGdCQUFnQnhqQyxLQUFLMi9CLDhCQUE4QixDQUFDeVAsTUFBTW56QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1xbUIsTUFBTW56QyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDd3ZDLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxDQUFDMmpDLGNBQWMxbkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGtCQUFrQjlzQixFQUFFK0QsSUFBSSxFQUFFLE1BQU0zQixVQUFVaEMsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBS3d3QixNQUFNcjBCLEVBQUU2RCxLQUFLd3dCLE1BQU1yMEIsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxjQUFjeGpDLEtBQUt3d0IsT0FBTyxDQUFDZ2YsV0FBV3Z6QyxHQUFFLEdBQUksT0FBTytELEtBQUsrb0IsTUFBTSxlQUFlOXNCLEVBQUUrRCxJQUFJLEVBQUUsTUFBTXpCLFVBQVVsQyxFQUFFNGMsRUFBRXBSLFlBQVk1TCxFQUFFSCxFQUFFSyxHQUFHcWMsTUFBTXZjLEVBQUVILEdBQUdrRSxLQUFLd3dCLE1BQU1yMEIsRUFBRTZELEtBQUt3d0IsTUFBTXIwQixDQUFDLENBQUNxbkMsT0FBTyxNQUFNLG9CQUFvQnhqQyxLQUFLd3dCLE9BQU8sQ0FBQ2dmLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxFQUFFLE1BQU0xQixVQUFVakMsRUFBRTRjLEVBQUVwUixZQUFZNUwsRUFBRUgsRUFBRUssR0FBR3FjLE1BQU12YyxFQUFFSCxHQUFHa0UsS0FBS2t3QyxNQUFNL3pDLEVBQUU2RCxLQUFLa3dDLE1BQU0vekMsQ0FBQyxDQUFDcW5DLE9BQU8sTUFBTSxvQkFBb0J4akMsS0FBS2t3QyxZQUFZLENBQUNkLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQzJ2QyxTQUFTMXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxhQUFhOXNCLEVBQUUrRCxJQUFJLENBQUM0dkMsU0FBUzN6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sYUFBYTlzQixFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDbXdDLE9BQU9sMEMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGtCQUFrQjlzQixFQUFFK0QsSUFBSSxDQUFDOGpDLEtBQUs3bkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNK2EsS0FBSzduQyxFQUFFK0QsSUFBSSxFQUFFLE1BQU14QixVQUFVbkMsRUFBRTRjLEVBQUV1cUIsT0FBTyxNQUFNLGNBQWMsQ0FBQzZMLG9CQUFvQnB6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0seUJBQXlCOXNCLEVBQUUrRCxJQUFJLENBQUNzdkMsaUJBQWlCcnpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxzQkFBc0I5c0IsRUFBRStELElBQUksQ0FBQ292QyxNQUFNbnpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXFtQixNQUFNbnpDLEVBQUUrRCxJQUFJLENBQUMwakMsUUFBUXpuQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDOG5DLFNBQVM3ckMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGFBQWE5c0IsRUFBRStELElBQUksQ0FBQzJqQyxjQUFjMW5DLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxrQkFBa0I5c0IsRUFBRStELElBQUksQ0FBQ3d2QyxXQUFXdnpDLEdBQUUsR0FBSSxPQUFPK0QsS0FBSytvQixNQUFNLGVBQWU5c0IsRUFBRStELElBQUksQ0FBQ3lqQyxRQUFReG5DLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTTBhLFFBQVF4bkMsRUFBRStELElBQUksRUFBRSxNQUFNdUIsVUFBVWxGLEVBQUU0YyxFQUFFdXFCLE9BQU8sTUFBTSxrQkFBa0IsQ0FBQ2lNLFdBQVd4ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGVBQWVyc0IsRUFBRVQsR0FBRytELElBQUksQ0FBQzB2QyxPQUFPenpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxXQUFXOXNCLEVBQUUrRCxJQUFJLENBQUNtb0MsUUFBUWxzQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDOGpDLEtBQUs3bkMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNK2EsS0FBSzduQyxFQUFFK0QsSUFBSSxDQUFDMjhCLE1BQU0xZ0MsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNNFQsTUFBTTFnQyxFQUFFK0QsSUFBSSxDQUFDMnZDLFNBQVMxekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNLGFBQWE5c0IsRUFBRStELElBQUksQ0FBQzR2QyxTQUFTM3pDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxhQUFhOXNCLEVBQUUrRCxJQUFJLENBQUMwakMsUUFBUXpuQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDb3ZDLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQzZ2QyxXQUFXNXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxlQUFlOXNCLEVBQUUrRCxJQUFJLENBQUM4dkMsVUFBVTd6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sY0FBYzlzQixFQUFFK0QsSUFBSSxDQUFDcXZDLG9CQUFvQnB6QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0seUJBQXlCOXNCLEVBQUUrRCxJQUFJLENBQUNzdkMsaUJBQWlCcnpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxzQkFBc0I5c0IsRUFBRStELElBQUksQ0FBQ2d3QyxZQUFZL3pDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxnQkFBZ0I5c0IsRUFBRStELElBQUksQ0FBQys1QixRQUFROTlCLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTWdSLFFBQVE5OUIsRUFBRStELElBQUksQ0FBQ2l3QyxlQUFlaDBDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxvQkFBb0I5c0IsRUFBRStELElBQUksQ0FBQ3V2QyxVQUFVdHpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXJxQixLQUFLekMsRUFBRStELElBQUksQ0FBQyt2QyxRQUFROXpDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTSxZQUFZOXNCLEVBQUUrRCxJQUFJLENBQUMyakMsY0FBYzFuQyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sa0JBQWtCOXNCLEVBQUUrRCxJQUFJLEVBQUUsTUFBTTlCLFVBQVU3QixFQUFFNGMsRUFBRXVxQixPQUFPLE1BQU0sWUFBWSxDQUFDNEwsTUFBTW56QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1xbUIsTUFBTW56QyxFQUFFK0QsSUFBSSxDQUFDbXBDLFFBQVFsdEMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNb2dCLFFBQVFsdEMsRUFBRStELElBQUksQ0FBQzJZLEtBQUsxYyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1wUSxLQUFLMWMsRUFBRStELElBQUksQ0FBQ293QyxLQUFLbjBDLEdBQUcsT0FBTytELEtBQUsrb0IsTUFBTXFuQixLQUFLbjBDLEVBQUUrRCxJQUFJLENBQUN3d0IsTUFBTXYwQixHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sWUFBWTlzQixFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDd3ZDLFdBQVd2ekMsR0FBRSxHQUFJLE9BQU8rRCxLQUFLK29CLE1BQU0sZUFBZTlzQixFQUFFK0QsSUFBSSxFQUFFLE1BQU1nQyxVQUFVM0YsRUFBRTRjLEVBQUV1cUIsT0FBTyxNQUFNLGtCQUFrQixDQUFDaFQsTUFBTXYwQixHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU0sa0JBQWtCOXNCLEVBQUUrRCxJQUFJLENBQUNtcEMsUUFBUWx0QyxHQUFHLE9BQU8rRCxLQUFLK29CLE1BQU1vZ0IsUUFBUWx0QyxFQUFFK0QsSUFBSSxDQUFDdXZDLFVBQVV0ekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcnFCLEtBQUt6QyxFQUFFK0QsSUFBSSxDQUFDb3ZDLE1BQU1uekMsR0FBRyxPQUFPK0QsS0FBSytvQixNQUFNcW1CLE1BQU1uekMsRUFBRStELElBQUksQ0FBQ3d2QyxXQUFXdnpDLEdBQUUsR0FBSSxPQUFPK0QsS0FBSytvQixNQUFNLGVBQWU5c0IsRUFBRStELElBQUksRUFBRSxNQUFNb0MsVUFBVWhHLEVBQUU2YyxFQUFFcFIsWUFBWTVMLEVBQUVILEVBQUUsbUJBQW1CSyxFQUFFLEtBQUtDLEVBQUUsQ0FBQyxHQUFHb2MsTUFBTSxzQkFBc0J2YyxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFLENBQUNpMEMsa0JBQWtCLE9BQU8sSUFBSTN5QyxFQUFFc0MsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVksQ0FBQ3FNLG9CQUFvQnIwQyxHQUFHLE9BQU8sSUFBSUssRUFBRTBELEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQ3MwQyx3QkFBd0J0MEMsR0FBRyxPQUFPLElBQUlNLEVBQUV5RCxLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUN1MEMsMEJBQTBCdjBDLEdBQUcsT0FBTyxJQUFJc0QsRUFBRVMsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVlob0MsRUFBRSxDQUFDdzBDLFlBQVl4MEMsR0FBRyxPQUFPLElBQUkyRCxFQUFFSSxLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUN5MEMsc0JBQXNCejBDLEdBQUcsT0FBTyxJQUFJd0IsRUFBRXVDLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQzAwQyxrQkFBa0IxMEMsR0FBRyxPQUFPLElBQUlrQyxFQUFFNkIsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVlob0MsRUFBRSxDQUFDMjBDLG9CQUFvQjMwQyxHQUFHLE9BQU8sSUFBSVUsRUFBRXFELEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQzQwQywyQkFBMkI1MEMsR0FBRyxPQUFPLElBQUlxRSxFQUFFTixLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUM2MEMsNEJBQTRCNzBDLEdBQUcsT0FBTyxJQUFJbUMsRUFBRTRCLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQzgwQyxpQ0FBaUM5MEMsR0FBRyxPQUFPLElBQUlRLEVBQUV1RCxLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUMrMEMsZ0JBQWdCLzBDLEdBQUcsT0FBTyxJQUFJb0MsRUFBRTJCLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZaG9DLEVBQUUsQ0FBQ2cxQyxtQkFBbUJoMUMsR0FBRyxPQUFPLElBQUlzQyxFQUFFeUIsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVlob0MsRUFBRSxDQUFDaTFDLHNCQUFzQmoxQyxHQUFHLE9BQU8sSUFBSXFDLEVBQUUwQixLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWWhvQyxFQUFFLENBQUNrMUMsaUJBQWlCLE9BQU8sSUFBSTN5QyxFQUFFd0IsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVksQ0FBQ21OLHdCQUF3QixPQUFPLElBQUk3dkMsRUFBRXZCLEtBQUt0RCxFQUFFc0QsS0FBS2lrQyxZQUFZLENBQUNvTixrQkFBa0IsT0FBTyxJQUFJbnpDLEVBQUU4QixLQUFLdEQsRUFBRXNELEtBQUtpa0MsWUFBWSxDQUFDcU4sd0JBQXdCLE9BQU8sSUFBSXR2QyxFQUFFaEMsS0FBS3RELEVBQUVzRCxLQUFLaWtDLFlBQVksRUFBQyxFQUFHLEtBQUssQ0FBQ2hvQyxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ21kLEVBQUUsSUFBSTVjLElBQUksSUFBSUQsRUFBRUQsRUFBRSxNQUFNLE1BQU1FLEVBQUV3TCxZQUFZNUwsRUFBRUgsR0FBR2tFLEtBQUt0RCxFQUFFVCxFQUFFK0QsS0FBSytvQixNQUFNLENBQUMsRUFBRS9vQixLQUFLaWtDLFlBQVlub0MsR0FBR00sRUFBRTZjLEVBQUVzNEIsT0FBTyxDQUFDM04sUUFBUTNuQyxHQUFHLE9BQU9BLENBQUMsQ0FBQ3c3QixTQUFTeDdCLEVBQUUsQ0FBQyxHQUFHLE1BQU1ILEVBQUUsQ0FBQyxFQUFFLFlBQVlrRSxLQUFLaWtDLGNBQWNub0MsRUFBRW1vQyxZQUFZamtDLEtBQUtpa0MsYUFBYSxNQUFNOW5DLFFBQVE2RCxLQUFLdEQsRUFBRUssSUFBSWlELEtBQUt3akMsT0FBT3hqQyxLQUFLK29CLE1BQU05c0IsRUFBRUgsR0FBRyxPQUFPa0UsS0FBSzRqQyxRQUFRem5DLEVBQUVnckIsS0FBSyxDQUFDcXFCLGVBQWV2MUMsR0FBRyxHQUFHLFlBQVlBLEdBQUcsU0FBU0EsR0FBRyxVQUFVQSxHQUFHLFdBQVdBLEVBQUUsTUFBTSxJQUFJcUYsTUFBTSxvQ0FBb0NyRixLQUFLLE9BQU8rRCxLQUFLaWtDLFlBQVlob0MsRUFBRStELElBQUksRUFBQyxFQUFHLEtBQUssQ0FBQy9ELEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDbWQsRUFBRSxJQUFJdmIsSUFBSSxJQUFJdEIsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFLE1BQU0sTUFBTXVCLEVBQUVtSyxZQUFZNUwsRUFBRUgsRUFBRUssRUFBRXVCLEVBQUVwQixFQUFFLENBQUMsR0FBRyxHQUFHLG1CQUFtQlIsRUFBRWlCLElBQUlpRCxLQUFLdEQsRUFBRSxJQUFJTixFQUFFa0IsUUFBUXhCLE9BQU8sQ0FBQyxJQUFJTyxFQUFFQSxFQUFFLGlCQUFpQlAsRUFBRSxTQUFTRyxFQUFFLEdBQUdILEdBQUcsTUFBTUssRUFBRSxDQUFDLEVBQUUsT0FBT0EsRUFBRUwsR0FBR0csRUFBRUUsQ0FBQyxDQUEzQyxDQUE2Q0wsRUFBRUcsR0FBR0gsRUFBRWtFLEtBQUt0RCxFQUFFLElBQUlOLEVBQUVrQixRQUFRakIsRUFBRUYsRUFBRXVCLEVBQUVwQixFQUFFLENBQUMwRCxLQUFLaWtDLFlBQVk1bkMsRUFBRTRjLEVBQUVzNEIsT0FBTyxDQUFDRSxlQUFleDFDLEdBQUcrRCxLQUFLaWtDLFlBQVlob0MsQ0FBQyxDQUFDeTFDLGlCQUFpQixPQUFPMXhDLEtBQUtpa0MsV0FBVyxFQUFDLEVBQUcsS0FBSyxDQUFDaG9DLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDdUMsRUFBRSxJQUFJWixFQUFFYyxFQUFFLElBQUk1QixJQUFJLElBQUlQLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxNQUFNbUQsRUFBRW5ELEVBQUUsTUFBTU8sRUFBRVAsRUFBRSxLQUFLb0QsRUFBRXBELEVBQUUsTUFBTUksRUFBRUosRUFBRSxNQUFNd1csT0FBTyxNQUFNL1MsRUFBRXJELEVBQUU0RixLQUFLLENBQUMsR0FBRyxHQUFHLElBQUksTUFBTSxJQUFJMUUsRUFBRSxTQUFTVSxFQUFFbEMsRUFBRUgsRUFBRUssR0FBRyxHQUFHLE1BQU1BLEdBQUdGLElBQUlFLEVBQUUsT0FBTyxFQUFFLE1BQU1DLEVBQUUsTUFBTUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxJQUFJQSxFQUFFLEVBQUVBLEVBQUVMLEVBQUVrRCxPQUFPN0MsSUFBSSxHQUFHRixJQUFJSCxFQUFFSyxHQUFHLE9BQU9BLEVBQUVDLEVBQUUsT0FBT04sRUFBRThDLEtBQUszQyxHQUFHSCxFQUFFa0QsT0FBTyxFQUFFNUMsQ0FBQyxFQUFFLFNBQVNILEdBQUdBLEVBQUVBLEVBQUUwMUMsU0FBUyxHQUFHLFdBQVcxMUMsRUFBRUEsRUFBRTIxQyxNQUFNLEdBQUcsUUFBUTMxQyxFQUFFQSxFQUFFNDFDLE9BQU8sR0FBRyxTQUFTNTFDLEVBQUVBLEVBQUU2MUMsVUFBVSxHQUFHLFlBQVk3MUMsRUFBRUEsRUFBRTgxQyxVQUFVLEdBQUcsV0FBVyxDQUE1SSxDQUE4SXQwQyxJQUFJQSxFQUFFLENBQUMsSUFBSSxNQUFNZCxFQUFFa0wsY0FBYzdILEtBQUsybUIsT0FBT2xwQixFQUFFazBDLFNBQVMzeEMsS0FBSzgzQixhQUFhLEdBQUc5M0IsS0FBS2d5QyxZQUFZLElBQUkxMkIsSUFBSXRiLEtBQUtpeUMsV0FBVyxHQUFHanlDLEtBQUtreUMsTUFBTSxFQUFFLENBQUNDLFlBQVksT0FBT255QyxLQUFLMm1CLE1BQU0sQ0FBQ3lyQixRQUFRLE9BQU9weUMsS0FBSzgzQixhQUFhOTRCLE1BQU0sQ0FBQ3FPLFFBQVEsTUFBTXBSLEVBQUUsSUFBSVUsRUFBRSxPQUFPVixFQUFFNjdCLGFBQWE5M0IsS0FBSzgzQixhQUFhanRCLEtBQUksRUFBR2t3QixJQUFJOStCLEVBQUVvMkMsT0FBT3YyQyxNQUFLLENBQUVpL0IsSUFBSTErQixFQUFFbStCLFlBQVk4WCxzQkFBc0IsSUFBSXIyQyxFQUFFNitCLHVCQUF1QnlYLFNBQUksSUFBU0YsT0FBT3YyQyxNQUFNRyxFQUFFKzFDLFlBQVksSUFBSTEyQixJQUFJdGIsS0FBS2d5QyxhQUFhLzFDLENBQUMsQ0FBQ3UyQyxlQUFldjJDLEdBQUcsR0FBRytELEtBQUsybUIsU0FBU2xwQixFQUFFazBDLFNBQVMsTUFBTSxJQUFJcndDLE1BQU0sZ0VBQWdFLEdBQUd0QixLQUFLODNCLGFBQWE5NEIsU0FBU3JDLEVBQUU4MUMsZUFBZSxNQUFNLElBQUlueEMsTUFBTSw2RUFBNkUzRSxFQUFFODFDLGtCQUFrQixHQUFHeDJDLEVBQUU4K0IsSUFBSTJYLE9BQU96MkMsRUFBRTgrQixJQUFJMlgsTUFBTTFULE1BQU0vaUMsR0FBRyxJQUFJQSxJQUFJLE1BQU0sSUFBSXFGLE1BQU0sa0RBQWtEdEIsS0FBSzgzQixhQUFhbDVCLEtBQUszQyxFQUFFLENBQUMwMkMsZUFBZXpDLE1BQU1qMEMsRUFBRXdpQixPQUFPM2lCLEVBQUU4MkMsV0FBV3oyQyxFQUFFZzBDLE9BQU85ekMsRUFBRXcyQyxnQkFBZ0J2MkMsRUFBRXcyQyxXQUFXeHpDLEVBQUUycEMsZ0JBQWdCMXNDLEVBQUV3MkMsYUFBYW56QyxFQUFFb3pDLGNBQWMxeUMsRUFBRTJ5QyxvQkFBb0I3MEMsRUFBRTgwQyxhQUFhejJDLEVBQUUwMkMsbUJBQW1COTBDLEVBQUUrMEMsV0FBVzcwQyxFQUFFaTVCLEtBQUtsNUIsRUFBRWk4QixNQUFNLzdCLEVBQUV1eEMsUUFBUXh1QyxFQUFFOHdDLE9BQU9uMEMsSUFBSSxHQUFHOEIsS0FBSzJtQixTQUFTbHBCLEVBQUVrMEMsU0FBUyxNQUFNLElBQUlyd0MsTUFBTSxnRUFBZ0UsR0FBR3RCLEtBQUs4M0IsYUFBYTk0QixPQUFPbEQsRUFBRXNrQyxXQUFXempDLEVBQUU4MUMsZUFBZSxNQUFNLElBQUlueEMsTUFBTSwyRUFBMkUzRSxFQUFFODFDLGtCQUFrQixHQUFHLElBQUl4MkMsR0FBRyxHQUFHLE1BQU1NLEdBQUcsTUFBTXFELEdBQUcsTUFBTVUsR0FBRyxNQUFNbEMsR0FBRyxNQUFNM0IsR0FBRyxNQUFNNEIsRUFBRSxNQUFNLElBQUlpRCxNQUFNLDBMQUEwTCxHQUFHaEMsSUFBSUMsRUFBRTh6QyxHQUFHQyxvQkFBb0IsQ0FBQyxHQUFHLE1BQU0vMkMsR0FBRyxNQUFNcUQsRUFBRSxNQUFNLElBQUkwQixNQUFNLG9JQUFvSSxHQUFHLE1BQU1oQixHQUFHLE1BQU1sQyxHQUFHLE1BQU0zQixHQUFHLE1BQU00QixHQUFHLE1BQU1FLEVBQUUsTUFBTSxJQUFJK0MsTUFBTSx5S0FBeUssTUFBTSxHQUFHLE1BQU0vRSxHQUFHLE1BQU1xRCxHQUFHLE1BQU1VLEdBQUcsTUFBTWxDLEdBQUcsTUFBTTNCLEdBQUcsTUFBTTRCLEdBQUcsTUFBTUUsRUFBRSxNQUFNLElBQUkrQyxNQUFNLHlNQUF5TSxHQUFHLE1BQU1uRixJQUFJQSxFQUFFLElBQUlBLEVBQUU2QyxTQUFTbEQsRUFBRThwQixLQUFLNW1CLE9BQU8sTUFBTSxJQUFJc0MsTUFBTSxrREFBa0R4RixFQUFFOHBCLEtBQUs1bUIsZUFBZTdDLEVBQUU2QyxVQUFVLElBQUlnRCxFQUFFLEdBQUdJLEVBQUUsR0FBRyxNQUFNbkUsRUFBRSxHQUFHMEgsRUFBRSxHQUFHaEksRUFBRSxHQUFHaUksRUFBRSxJQUFJMFYsSUFBSSxJQUFJLElBQUlyZixFQUFFLEVBQUVBLEVBQUVFLEVBQUU2QyxPQUFPL0MsSUFBSSxDQUFDLElBQUlJLEVBQUVQLEVBQUU4cEIsS0FBSzNwQixHQUFHZ0UsS0FBSyxNQUFNdkMsRUFBRXZCLEVBQUVGLEdBQUcsSUFBRyxFQUFHRyxFQUFFOGhDLElBQUk3aEMsR0FBRyxDQUFDLEtBQUksRUFBR0ssRUFBRTYyQyxJQUFJNzFDLE1BQUssRUFBR3RCLEVBQUU0aEMsSUFBSTNoQyxFQUFFcUIsRUFBRXE5QixLQUFLLE1BQU0sSUFBSXo1QixNQUFNLFlBQVlqRix1Q0FBdUNKLEtBQUssR0FBR3lCLEVBQUVxOUIsSUFBSTJYLE9BQU9oMUMsRUFBRXE5QixJQUFJMlgsTUFBTTFULE1BQU0vaUMsR0FBRyxJQUFJQSxJQUFJLE1BQU0sSUFBSXFGLE1BQU0sa0RBQWtEckQsRUFBRVcsS0FBS2xCLEVBQUUsS0FBSyxDQUFDLElBQUcsRUFBR2hCLEVBQUU2MkMsSUFBSTcxQyxHQUFHLE1BQU0sSUFBSTRELE1BQU0sd0RBQXdEckYsS0FBSyxJQUFHLEVBQUdHLEVBQUU2aEMsSUFBSTVoQyxLQUFLdUosRUFBRWxHLElBQUlpRyxFQUFFM0csT0FBT2dELEVBQUVoRCxRQUFRMkcsRUFBRS9HLEtBQUt2QyxHQUFHc0IsRUFBRWlCLEtBQUtsQixHQUFHckIsRUFBRSxJQUFJRCxFQUFFc2hDLEdBQUcsSUFBSSxpQkFBaUJyaEMsRUFBRSxNQUFNLElBQUlpRixNQUFNLHFCQUFxQmpGLEtBQUsyRixFQUFFcEQsS0FBS3ZDLEdBQUcrRixFQUFFeEQsS0FBS2xCLEVBQUUsQ0FBQyxDQUFDLE1BQU1xSSxFQUFFLEdBQUdVLEVBQUUsR0FBR08sRUFBRSxHQUFHTSxFQUFFLEdBQUcsSUFBSSxJQUFJeEwsRUFBRSxFQUFFQSxFQUFFNkosRUFBRTNHLE9BQU9sRCxJQUFJLENBQUMsTUFBTUssRUFBRXdKLEVBQUU3SixHQUFHNEIsRUFBRUMsRUFBRTdCLEdBQUcsSUFBSVEsRUFBRSxFQUFFLE9BQU9ILEdBQUcsS0FBS0MsRUFBRWdoQyxHQUFHdUMsUUFBUSxDQUFDLE1BQU0xakMsRUFBRSxJQUFJRyxFQUFFd2dDLEdBQUd0Z0MsRUFBRTZCLEVBQUVsQyxFQUFFdUYsT0FBT3ZGLEVBQUUwRCxPQUFPakMsSUFBSStJLEVBQUVwSyxHQUFHLEtBQUssQ0FBQyxLQUFLRCxFQUFFZ2hDLEdBQUd3QyxZQUFZLENBQUMsTUFBTTlqQyxFQUFFLElBQUlNLEVBQUVzaEMsR0FBRyxJQUFJdmhDLEVBQUVMLEVBQUUwRixPQUFPMUYsRUFBRTZELE9BQU9qQyxJQUFJLEdBQUd2QixFQUFFc0UsT0FBT0UsaUJBQWlCLE1BQU0sSUFBSVcsTUFBTSxvREFBb0RuRixLQUFLRyxFQUFFNkIsRUFBRXNDLE9BQU90RSxHQUFHNkssRUFBRS9LLEdBQUcsS0FBSyxDQUFDLEtBQUtHLEVBQUVnaEMsR0FBR3lDLE1BQU0sQ0FBQyxNQUFNNWpDLEVBQUUsSUFBSUcsRUFBRXNoQyxHQUFHLElBQUk1aEMsRUFBRUcsRUFBRXVGLE9BQU92RixFQUFFMEQsT0FBT2pDLElBQUksR0FBRzVCLEVBQUUyRSxPQUFPRSxpQkFBaUIsTUFBTSxJQUFJVyxNQUFNLDhDQUE4Q3hGLEtBQUtRLEVBQUU2QixFQUFFc0MsT0FBTzNFLEdBQUd3TCxHQUFHLEtBQUssQ0FBQyxRQUFRLE1BQU0sSUFBSWhHLE1BQU0sMkJBQTJCbkYsS0FBSzRKLEVBQUVuSCxLQUFLdEMsRUFBRSxDQUFDLElBQUksSUFBSUwsRUFBRSxFQUFFQSxFQUFFOEosRUFBRS9HLE9BQU8vQyxJQUFJbUcsRUFBRXdELEVBQUU3SSxJQUFJZCxJQUFJOEosRUFBRTlKLEdBQUcsR0FBRytGLEVBQUVoRCxPQUFPLEdBQUcsQ0FBQyxNQUFNL0MsRUFBRStGLEVBQUV3RSxNQUFNLElBQUkxSyxFQUFFc0csRUFBRW9FLE1BQU0sSUFBSXhFLEVBQUVBLEVBQUV3RSxNQUFNLEVBQUUsSUFBSXBFLEVBQUVBLEVBQUVvRSxNQUFNLEVBQUUsSUFBSXhFLEVBQUVwRCxLQUFLLElBQUl4QyxFQUFFbWhDLEdBQUd0aEMsSUFBSW1HLEVBQUV4RCxLQUFLOUMsRUFBRSxDQUFDLE1BQU15TCxFQUFFLENBQUN6TCxFQUFFb2tDLGVBQWUsSUFBSSxJQUFJamtDLEVBQUUsRUFBRUEsRUFBRStGLEVBQUVoRCxPQUFPL0MsSUFBSXNMLEVBQUUzSSxLQUFLb0QsRUFBRS9GLEdBQUcwRCxPQUFPeUMsRUFBRW5HLEtBQUssTUFBTXdMLEVBQUUsQ0FBQ3N6QixLQUFJLEVBQUdyOUIsRUFBRTgxQyxrQ0FBa0MsQ0FBQ3J4QyxLQUFLOUYsRUFBRW12QyxTQUFTdnZDLEVBQUV3M0MsUUFBUWxzQyxFQUFFMGpDLFNBQVN4a0MsRUFBRWl0QyxZQUFZMXNDLEVBQUUyc0MsY0FBY3JzQyxFQUFFd3JDLFdBQVcsTUFBTXh6QyxFQUFFQyxFQUFFOHpDLEdBQUdPLE9BQU90MEMsRUFBRTJwQyxnQkFBZ0Ixc0MsRUFBRXcyQyxhQUFhbnpDLEVBQUVvekMsY0FBYzF5QyxFQUFFMnlDLG9CQUFvQjcwQyxFQUFFODBDLGFBQWF6MkMsRUFBRTAyQyxtQkFBbUI5MEMsRUFBRSswQyxXQUFXNzBDLEVBQUVnOEIsTUFBTS83QixFQUFFZzVCLEtBQUtsNUIsRUFBRXl4QyxRQUFReHVDLEVBQUVzeEMsZ0JBQWdCdjJDLElBQUkrMUMsT0FBT24wQyxHQUFHOEIsS0FBSzgzQixhQUFhbDVCLFFBQVFYLEVBQUV3SixHQUFHekgsS0FBS2d5QyxZQUFZdHlDLElBQUlNLEtBQUs4M0IsYUFBYTk0QixPQUFPLEVBQUVsRCxFQUFFLENBQUMrM0MsYUFBYSxHQUFHN3pDLEtBQUsybUIsU0FBU2xwQixFQUFFazBDLFNBQVMsQ0FBQyxHQUFHLElBQUkzeEMsS0FBSzgzQixhQUFhOTRCLE9BQU8sTUFBTSxJQUFJc0MsTUFBTSw0Q0FBNEN0QixLQUFLODNCLGFBQWE5NEIsT0FBTyxJQUFHLEVBQUcxQyxFQUFFcytCLGVBQWU1NkIsS0FBSzgzQixhQUFhanRCLEtBQUs1TyxHQUFHQSxFQUFFOCtCLE9BQU8vNkIsS0FBSzJtQixPQUFPbHBCLEVBQUVtMEMsS0FBSyxDQUFDLE9BQU81eEMsS0FBSzgzQixZQUFZLENBQUNMLHlCQUF5QixHQUFHejNCLEtBQUsybUIsUUFBUWxwQixFQUFFbzBDLE9BQU8sT0FBTzd4QyxLQUFLaXlDLFdBQVcsTUFBTWgyQyxFQUFFK0QsS0FBSzZ6QyxhQUFhLzNDLEVBQUVHLEVBQUU0TyxLQUFLNU8sR0FBR0EsRUFBRTgrQixNQUFNNStCLEVBQUUsSUFBSW1mLElBQUksSUFBSSxJQUFJeGYsRUFBRSxFQUFFQSxFQUFFRyxFQUFFK0MsT0FBT2xELElBQUksQ0FBQyxNQUFNdTJDLE9BQU9qMkMsR0FBR0gsRUFBRUgsR0FBR0ssRUFBRXVvQixJQUFJdG9CLElBQUlELEVBQUV1RCxJQUFJdEQsRUFBRSxJQUFJRCxFQUFFWSxJQUFJWCxHQUFHd0MsS0FBSzlDLEVBQUUsQ0FBQyxNQUFNTSxFQUFFc0ksTUFBTXZDLEtBQUtoRyxHQUFHdUIsUUFBUXlKLFFBQVEyc0MsSUFBSTEzQyxFQUFFeU8sS0FBSSxFQUFHNU8sRUFBRUUsS0FBS0YsRUFBRUgsRUFBRUssTUFBTUcsRUFBRUwsRUFBRTRPLEtBQUksSUFBSyxPQUFPLElBQUksSUFBSTVPLEVBQUUsRUFBRUEsRUFBRUcsRUFBRTRDLE9BQU8vQyxJQUFJLENBQUMsTUFBTUgsRUFBRU0sRUFBRUgsR0FBRyxHQUFHRSxFQUFFdUIsRUFBRXpCLEdBQUcsSUFBSSxJQUFJQSxFQUFFLEVBQUVBLEVBQUVILEVBQUVrRCxPQUFPL0MsSUFBSUssRUFBRVIsRUFBRUcsSUFBSUUsRUFBRUYsRUFBRSxDQUFDLElBQUlLLEVBQUVpaUMsT0FBT3RpQyxHQUFHLE1BQU1BLElBQUksTUFBTSxJQUFJcUYsTUFBTSwyQkFBMkJoRixLQUFLLE1BQU1nRCxFQUFFaEQsRUFBRXVPLEtBQUksQ0FBRTVPLEVBQUVILEtBQUssSUFBSSxPQUFNLEVBQUdPLEVBQUUwM0MseUJBQXlCOTNDLEdBQUc4K0IsSUFBSWdKLE1BQXVGLENBQWhGLE1BQU05bkMsR0FBRyxNQUFNLElBQUlxRixNQUFNLDZDQUE2Q3hGLE1BQU1HLElBQUksQ0FBRSxJQUFHLE9BQU8rRCxLQUFLaXlDLFdBQVczMUMsRUFBRTBELEtBQUtreUMsTUFBTTV5QyxFQUFFVSxLQUFLMm1CLE9BQU9scEIsRUFBRW8wQyxPQUFPdjFDLENBQUMsQ0FBQ203QixhQUFheDdCLEdBQUcsR0FBRytELEtBQUsybUIsT0FBT2xwQixFQUFFcTBDLFVBQVUsTUFBTSxJQUFJeHdDLE1BQU0sMkNBQTJDLE1BQU14RixRQUFRa0UsS0FBS2cwQyxtQkFBbUIsYUFBYS8zQyxFQUFFMjhCLG1CQUFtQjk4QixHQUFHbTRDLEtBQUtqMEMsS0FBSzJtQixPQUFPbHBCLEVBQUVxMEMsVUFBVTl4QyxLQUFLa3lDLEtBQUssQ0FBQ3phLGNBQWN4N0IsRUFBRUgsR0FBRyxHQUFHa0UsS0FBSzJtQixTQUFTbHBCLEVBQUVzMEMsVUFBVSxNQUFNLElBQUl6d0MsTUFBTSw0REFBNEQsTUFBTW5GLFFBQVE2RCxLQUFLazBDLE9BQU9qNEMsR0FBRytELEtBQUsybUIsT0FBT2xwQixFQUFFcTBDLFVBQVUsTUFBTTExQyxFQUFFNEQsS0FBSzgzQixhQUFhcWMsV0FBVSxDQUFFbDRDLEVBQUVILElBQUlrRSxLQUFLZ3lDLFlBQVl0dEIsSUFBSTVvQixLQUFLTyxHQUFHLElBQUlELEVBQUUsRUFBRUEsRUFBRXNCLFFBQU8sRUFBRzRCLEVBQUVpTSxHQUFHdFAsRUFBRUUsRUFBRUUsR0FBR1AsR0FBR2tFLEtBQUsybUIsT0FBT2xwQixFQUFFczBDLFVBQVUsTUFBTXoxQyxFQUFFb0IsRUFBRSxtQkFBbUJoQixFQUFFLEdBQUcsSUFBSSxNQUFNWixFQUFFTyxLQUFLMkQsS0FBS2d5QyxZQUFZLENBQUMsTUFBTTExQyxFQUFFSCxFQUFFTCxHQUFHd0QsRUFBRSxDQUFDeWtDLEtBQUt6bkMsRUFBRTgzQyxlQUFlLElBQUlyekMsV0FBVzBkLE9BQU9waUIsR0FBRyxJQUFJLE1BQU1GLEVBQUVMLElBQUlNLEVBQUVzQixRQUFRekIsRUFBRXU4Qiw4QkFBOEJsOEIsR0FBRzIzQyxLQUFLLEdBQUczMEMsRUFBRSswQyxPQUFPbDRDLEVBQUUsU0FBU0UsRUFBRXlqQyxRQUFRNy9CLEtBQUssQ0FBQyxNQUFNaEUsRUFBRUUsRUFBRW93QyxNQUFNLEdBQUcsR0FBRyxJQUFJdHdDLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sbURBQW1ELE1BQU14RixFQUFFUyxFQUFFNEYsS0FBS2xHLEVBQUVBLEVBQUUrQyxPQUFPLEdBQUcsVUFBVSxHQUFHbEQsRUFBRXVGLFdBQVcsSUFBSXZGLEVBQUUwSyxNQUFNLEVBQUUsR0FBRytOLE9BQU8zVSxHQUFHLE1BQU0sSUFBSTBCLE1BQU0sbURBQW1EaEMsRUFBRTgwQyxlQUFlLElBQUlyekMsV0FBV2pGLEVBQUUwSyxNQUFNLElBQUlsSCxFQUFFZzFDLFlBQVlqNEMsRUFBRXlqQyxRQUFRNy9CLEtBQUt1QixPQUFPbEMsRUFBRTgwQyxlQUFlLENBQTBCLENBQXhCLE1BQU1uNEMsR0FBR3FELEVBQUVpMUMsWUFBWXQ0QyxDQUFDLENBQUNTLEVBQUVrQyxLQUFLVSxFQUFFLENBQUMsTUFBTSxDQUFDd3VDLGVBQWV4eEMsRUFBRTQxQyxNQUFNLzFDLEVBQUVxNEMsY0FBYzkzQyxFQUFFLEVBQUVDLEVBQUU4MUMsZUFBZSxJQUFJLEtBQUssQ0FBQ3gyQyxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVRLEVBQUViLEVBQUUsQ0FBQzI0QyxHQUFHLElBQUlwNEMsRUFBRTRCLEVBQUUsSUFBSVAsRUFBRWczQyxHQUFHLElBQUlwNEMsSUFBSSxNQUFNRixFQUFFLElBQUlDLEVBQUUsd0RBQXdELFNBQVNxQixFQUFFekIsR0FBRyxHQUFHQSxFQUFFLElBQUl3RSxPQUFPb0QsY0FBYzVILEdBQUcsTUFBTSxJQUFJcUYsTUFBTWpGLEdBQUcsT0FBT0osRUFBRUcsQ0FBQyxDQUFDLFNBQVNFLEVBQUVMLEdBQUcsTUFBTUgsRUFBRUcsRUFBRUcsRUFBRSxPQUFPK0QsS0FBS3c4QixNQUFNN2dDLEVBQUUsR0FBRyxLQUFLLENBQUNHLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDNEwsRUFBRSxJQUFJaEwsRUFBRXdCLEVBQUUsSUFBSUUsSUFBSSxJQUFJaEMsRUFBRUQsRUFBRSxLQUFLRSxFQUFFRixFQUFFLE1BQU11QixFQUFFdkIsRUFBRSxNQUFNRyxFQUFFSCxFQUFFLE1BQU13VyxPQUFPLFNBQVNyVCxFQUFFckQsR0FBRyxPQUFPQSxFQUFFNnhCLE9BQU8sb0JBQW9CeHhCLEVBQUU2RixLQUFLbEcsRUFBRTZ4QixPQUFPLG9CQUFvQmhwQixXQUFXLFVBQVU3SSxFQUFFNnhCLE9BQU8sdUJBQXVCeHhCLEVBQUU2RixLQUFLbEcsRUFBRTZ4QixPQUFPLHVCQUF1QmhwQixXQUFXLFVBQVU3SSxDQUFDLENBQUN3N0IsZUFBZS82QixHQUFHaTRDLE9BQU8xNEMsRUFBRW85QixLQUFLdjlCLEVBQUVzdkMsZ0JBQWdCanZDLEVBQUVndkMsZ0JBQWdCN3VDLEVBQUVxZ0MsTUFBTWpnQyxFQUFFMnVDLFFBQVE5ckMsSUFBSSxNQUFNaEQsRUFBRSxHQUFHcUQsRUFBRSxHQUFHbkMsRUFBRSxHQUFHVSxFQUFFLEdBQUd4QixFQUFFLEdBQUcsSUFBSSxNQUFNVixLQUFLSCxFQUFFRyxFQUFFOCtCLElBQUk5NkIsT0FBTzVELEVBQUVDLEVBQUVvakMsT0FBTy9pQyxFQUFFaUMsTUFBSyxFQUFHbEIsRUFBRTQ4QixlQUFlcitCLEVBQUU4K0IsSUFBSTU0QixLQUFLazBCLFlBQVlwNkIsRUFBRTgrQixJQUFJNlosYUFBYWo0QyxFQUFFaUMsUUFBUTNDLEVBQUU4K0IsSUFBSTZaLFlBQVkvcEMsS0FBSzVPLElBQUcsRUFBR3lCLEVBQUU0OEIsZUFBZXIrQixFQUFFbzZCLGNBQWNwNkIsRUFBRTgrQixJQUFJOFosaUJBQWlCcDNDLEVBQUVtQixRQUFRM0MsRUFBRTgrQixJQUFJOFosZ0JBQWdCbDRDLEVBQUVpQyxRQUFRM0MsRUFBRTgrQixJQUFJOFosZUFBZWhxQyxLQUFLNU8sSUFBRyxFQUFHeUIsRUFBRW8zQyx1QkFBdUI3NEMsT0FBT0EsRUFBRTgrQixJQUFJZ2Esa0JBQWtCNTJDLEVBQUVTLFFBQVEzQyxFQUFFOCtCLElBQUlnYSx1QkFBa0IsSUFBUzk0QyxFQUFFOCtCLElBQUl5USxVQUFVLElBQUl2dkMsRUFBRTgrQixJQUFJeVEsU0FBU2p2QyxFQUFFcUMsS0FBSyxJQUFJeEMsRUFBRThvQyxZQUFZLFdBQVcsSUFBSTlvQyxFQUFFZ3BDLGtCQUFrQixDQUFDK0QsU0FBUSxFQUFHenJDLEVBQUU0OEIsZUFBZXIrQixFQUFFOCtCLElBQUk1NEIsS0FBS2swQixXQUFXNFMsZ0JBQWdCaHRDLEVBQUU4K0IsSUFBSWlhLG1CQUFtQjlMLGtCQUFrQmp0QyxFQUFFOCtCLElBQUlrYSxnQkFBZ0IxTCxpQkFBaUIsSUFBSW50QyxFQUFFaXBDLHVCQUF1QnBwQyxFQUFFOCtCLElBQUltYSxhQUFhajVDLEVBQUU4K0IsSUFBSW9hLG9CQUFvQjdMLGtCQUFrQixJQUFJbHRDLEVBQUVpcEMsdUJBQXVCcHBDLEVBQUU4K0IsSUFBSXFhLGNBQWNuNUMsRUFBRTgrQixJQUFJc2EsMEJBQTBCNTNDLEVBQUVtQixLQUFLM0MsRUFBRTgrQixJQUFJeVEsVUFBVTd1QyxFQUFFaUMsTUFBSyxFQUFHbEIsRUFBRW8zQyx1QkFBdUI3NEMsRUFBRTgrQixJQUFJeVEsYUFBYSxNQUFNbHJDLEVBQUUsR0FBRyxJQUFJLE1BQU14RSxJQUFJLElBQUksSUFBSTZmLElBQUl4ZCxJQUFJbUMsRUFBRTFCLEtBQUszQyxFQUFFd29DLGFBQWEzb0MsR0FBR200QyxLQUFLNXNDLE1BQU1wTCxJQUFJVSxFQUFFaUMsS0FBSzNDLEVBQUU2eEIsT0FBT3FiLFFBQVMsV0FBVWhpQyxRQUFRMnNDLElBQUl4ekMsR0FBRyxNQUFNbEMsRUFBRSxHQUFHLElBQUksTUFBTXRDLElBQUksSUFBSSxJQUFJNmYsSUFBSWxlLElBQUlXLEVBQUVRLEtBQUszQyxFQUFFeW9DLG1CQUFtQjVvQyxHQUFHbTRDLEtBQUs1c0MsTUFBTXBMLElBQUksTUFBTUgsRUFBRXdELEVBQUVyRCxHQUFHTSxFQUFFcUMsS0FBSzlDLEdBQUdhLEVBQUVpQyxLQUFLOUMsRUFBRWd5QixPQUFPcWIsUUFBUyxXQUFVaGlDLFFBQVEyc0MsSUFBSTExQyxHQUFHLE1BQU0zQixFQUFFLEdBQUcsSUFBSSxNQUFNWCxJQUFJLElBQUksSUFBSTZmLElBQUloZixJQUFJRixFQUFFbUMsS0FBSzNDLEVBQUV3OEIsbUJBQW1CMzhCLEdBQUdtNEMsS0FBSzVzQyxNQUFNcEwsSUFBSSxpQkFBaUJBLElBQUlBLEVBQUUsZ0JBQWdCQSxFQUFFLGdCQUFnQjRPLEtBQUs1TyxHQUFHcUQsRUFBRXJELE1BQU0yRCxFQUFFaEIsS0FBSzNDLEVBQUcsS0FBSSxhQUFha0wsUUFBUTJzQyxJQUFJcjNDLEdBQUcsSUFBSUwsRUFBRTJwQyxjQUFjLENBQUMxTSxLQUFLdjlCLEVBQUUrTyxLQUFLNU8sSUFBRyxJQUFLQSxFQUFFOCtCLElBQUk5K0IsRUFBRTgrQixJQUFJRCwyQkFBMkJtUSxTQUFTcnJDLEVBQUVzckMsS0FBSzN1QyxFQUFFNHVDLGdCQUFnQjd1QyxFQUFFcWdDLE1BQU1qZ0MsRUFBRTB1QyxnQkFBZ0JqdkMsRUFBRWt2QyxRQUFROXJDLEdBQUcsQ0FBQyxNQUFNQSxFQUFFc0ksWUFBWTVMLEdBQUcrRCxLQUFLQyxLQUFLLEVBQUVELEtBQUtnRCxNQUFNLEdBQUdoRCxLQUFLeXNDLEtBQUssRUFBRXpzQyxLQUFLQyxLQUFLaEUsRUFBRWdFLEtBQUtELEtBQUtnRCxNQUFNL0csRUFBRStHLE1BQU1oRCxLQUFLeXNDLEtBQUt4d0MsRUFBRXd3QyxJQUFJLENBQUMzbkMsV0FBVyxPQUFPLElBQUk5RSxLQUFLQyxLQUFLLEtBQUszRCxFQUFFNkYsS0FBS25DLEtBQUtnRCxNQUFNLFVBQVU4QixTQUFTLFNBQVM5RSxLQUFLeXNDLEtBQUszbkMsVUFBVSxFQUFFLE1BQU12SSxFQUFFc0wsWUFBWTVMLEdBQUcrRCxLQUFLbkIsTUFBTSxHQUFHbUIsS0FBS3lyQyxLQUFLLEVBQUV6ckMsS0FBSzByQyxHQUFHLEVBQUUxckMsS0FBSzJyQyxRQUFRLEdBQUczckMsS0FBS3dJLE1BQU0sR0FBR3hJLEtBQUtuQixXQUFNLElBQVM1QyxFQUFFNEMsTUFBTSxHQUFHNUMsRUFBRTRDLE1BQU1tQixLQUFLeXJDLEtBQUt4dkMsRUFBRXd2QyxLQUFLenJDLEtBQUswckMsR0FBR3p2QyxFQUFFeXZDLEdBQUcxckMsS0FBSzJyQyxRQUFRMXZDLEVBQUUwdkMsUUFBUTNyQyxLQUFLd0ksTUFBTXZNLEVBQUV1TSxNQUFNcUMsS0FBSzVPLEdBQUcsSUFBSXNELEVBQUV0RCxJQUFJLEVBQUUsTUFBTTJELEVBQUVpSSxZQUFZNUwsR0FBRytELEtBQUtzMUMsTUFBTSxRQUFHLElBQVNyNUMsSUFBSStELEtBQUtzMUMsTUFBTXI1QyxFQUFFNE8sS0FBSzVPLEdBQUcsSUFBSU0sRUFBRU4sS0FBSyxFQUFFLFNBQVN3QixFQUFFeEIsRUFBRUgsR0FBRyxPQUFPRyxFQUFFK0MsT0FBT2xELEdBQUdBLEVBQUUsRUFBRSxHQUFHRyxFQUFFdUssTUFBTSxFQUFFMUssUUFBUUcsQ0FBQyxDQUFDLFNBQVNrQyxFQUFFbEMsRUFBRUgsR0FBRyxHQUFHLElBQUlBLEVBQUVrRCxPQUFPLE1BQU0sR0FBRyxJQUFJN0MsRUFBRSxLQUFLLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFTixFQUFFa0QsT0FBTzVDLEtBQUtBLEVBQUVILEVBQUUrQyxRQUFRZ2IsS0FBS0MsVUFBVWhlLEVBQUVHLE1BQU00ZCxLQUFLQyxVQUFVbmUsRUFBRU0sT0FBT0QsRUFBRUMsR0FBRyxHQUFHLE1BQU1ELEVBQUUsTUFBTSxHQUFHLE1BQU1DLEVBQUVOLEVBQUVLLEdBQUcsT0FBT0MsRUFBRTRHLE1BQU1oRSxPQUFPLEVBQUUsR0FBRzdDLFNBQVNHLEVBQUU2RixLQUFLL0YsRUFBRTRHLE1BQU0sVUFBVThCLFNBQVMsU0FBUyxHQUFHM0ksT0FBT0MsRUFBRXF3QyxLQUFLM25DLFlBQVksQ0FBQyxTQUFTbkksRUFBRVYsRUFBRUgsR0FBRyxNQUFNLEtBQUtBLEVBQUVHLEVBQUV3VCxVQUFVeFQsR0FBRzRPLEtBQUs1TyxJQUFJLE9BQU9BLEVBQUVnRSxNQUFNLEtBQUssRUFBRSxNQUFNLEtBQUszRCxFQUFFNkYsS0FBS2xHLEVBQUUrRyxNQUFNLFVBQVU4QixTQUFTLFNBQVMsS0FBSyxFQUFFLE1BQU0sR0FBRzdJLEVBQUV3d0MsS0FBSzNuQyxhQUFhLFFBQVEsTUFBTSxHQUFJLElBQUdrSCxLQUFLLFFBQVEsQ0FBQyxNQUFNMUwsRUFBRXVILFlBQVk1TCxHQUFHK0QsS0FBSzRyQyxZQUFZLEdBQUc1ckMsS0FBSzZyQyxnQkFBZ0IsR0FBRzdyQyxLQUFLbXNDLFlBQVksR0FBR25zQyxLQUFLa3NDLFlBQVksR0FBR2xzQyxLQUFLaXNDLEtBQUssRUFBRWpzQyxLQUFLcXNDLGlCQUFpQixHQUFHcnNDLEtBQUtvc0Msb0JBQW9CLEdBQUdwc0MsS0FBS3VzQyxLQUFLLEdBQUd2c0MsS0FBSzhyQyxrQkFBYSxFQUFPOXJDLEtBQUtzc0MsbUJBQWMsRUFBT3RzQyxLQUFLdTFDLFNBQVMsQ0FBQyxlQUFldjFDLEtBQUt3MUMsVUFBVSxDQUFDLG9CQUFvQixlQUFlLGVBQWUsT0FBTyxxQkFBcUIsd0JBQXdCLFFBQVF4MUMsS0FBS3kxQyxPQUFPLENBQUMsaUJBQWlCLG1CQUFtQnoxQyxLQUFLNHJDLFlBQVkzdkMsRUFBRTJ2QyxZQUFZNXJDLEtBQUs2ckMsZ0JBQWdCNXZDLEVBQUUscUJBQXFCK0QsS0FBS21zQyxZQUFZbHdDLEVBQUUsZ0JBQWdCK0QsS0FBS2tzQyxZQUFZandDLEVBQUUsZ0JBQWdCK0QsS0FBS2lzQyxLQUFLaHdDLEVBQUVnd0MsS0FBS2pzQyxLQUFLcXNDLGlCQUFpQnB3QyxFQUFFLHNCQUFzQitELEtBQUtvc0Msb0JBQW9CbndDLEVBQUUseUJBQXlCK0QsS0FBS3VzQyxLQUFLdHdDLEVBQUVzd0MsS0FBS3ZzQyxLQUFLOHJDLGFBQWEsSUFBSWxzQyxFQUFFM0QsRUFBRSxtQkFBbUIrRCxLQUFLc3NDLGNBQWMsSUFBSTFzQyxFQUFFM0QsRUFBRSxtQkFBbUIsQ0FBQ3k1QyxrQkFBa0IsWUFBTyxJQUFTMTFDLEtBQUs2ckMsaUJBQWlCN3JDLEtBQUs2ckMsZ0JBQWdCbjNCLFNBQVMsU0FBUyxDQUFDaWhDLG1CQUFtQixZQUFPLElBQVMzMUMsS0FBS3FzQyxrQkFBa0Jyc0MsS0FBS3FzQyxpQkFBaUIzM0IsU0FBUyxTQUFTLENBQUMwcEIsYUFBYW5pQyxFQUFFSCxFQUFFSyxHQUFHLE1BQU1DLEVBQUVELEVBQUV5NUMsZUFBZSxHQUFHdjVDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sTUFBTSxTQUFTLFVBQVUsVUFBVSxJQUFJLElBQUlxQixFQUFFLEVBQUVBLEVBQUV6QixFQUFFcTVDLE1BQU10MkMsT0FBT3RCLElBQUksQ0FBQyxNQUFNK3RDLEtBQUtudkMsRUFBRXVDLE1BQU1TLEVBQUVvc0MsR0FBR2h2QyxFQUFFaXZDLFFBQVFwc0MsRUFBRWlKLE1BQU1qTSxHQUFHTixFQUFFcTVDLE1BQU01M0MsR0FBR2tDLE9BQUUsSUFBU0wsRUFBRUEsRUFBRSxHQUFHZSxFQUFFNUMsRUFBRSxRQUFHLElBQVN6QixFQUFFcTVDLE1BQU01M0MsRUFBRSxHQUFHaXVDLFFBQVExdkMsRUFBRXE1QyxNQUFNNTNDLEVBQUUsR0FBR2l1QyxRQUFRLEdBQUd2dEMsRUFBRSxLQUFLa0IsRUFBRXhELEVBQUVRLEdBQUcsTUFBTWdELE9BQU9qRCxFQUFFdUMsS0FBSyxDQUFDbEMsRUFBRW9JLFdBQVcrd0MsT0FBTyxFQUFFLEtBQUt2NUMsRUFBRXdJLFdBQVcrd0MsT0FBTyxFQUFFLEtBQUtwNEMsRUFBRVcsRUFBRWhDLEdBQUdxQixFQUFFVSxFQUFFbUMsRUFBRVYsR0FBR3hELEdBQUdxQixFQUFFZCxFQUFFSixFQUFFSixFQUFFMjVDLGlCQUFpQjE1QyxJQUFJLENBQUMsTUFBTXNCLEVBQUVyQixFQUFFdzFCLFFBQU8sQ0FBRTUxQixFQUFFSCxLQUFLLE1BQU1LLEVBQUUsSUFBSXVJLE1BQU1ySSxFQUFFLEdBQUcyQyxRQUFRNlUsS0FBSyxHQUFHLElBQUksSUFBSXpYLEVBQUUsRUFBRUEsRUFBRUgsRUFBRStDLE9BQU81QyxJQUFJRCxFQUFFQyxHQUFHTixFQUFFTSxHQUFHNEMsT0FBTy9DLEVBQUVHLEdBQUdOLEVBQUVNLEdBQUc0QyxPQUFPL0MsRUFBRUcsR0FBRyxPQUFPRCxDQUFFLEdBQUUsSUFBSXVJLE1BQU1ySSxFQUFFLEdBQUcyQyxRQUFRNlUsS0FBSyxJQUFJLE1BQU0sR0FBR3hYLEVBQUV3TyxLQUFLNU8sR0FBR0EsRUFBRTRPLEtBQUksQ0FBRTVPLEVBQUVILElBQUlHLEVBQUU0NUMsT0FBT240QyxFQUFFNUIsR0FBRyxFQUFFLE9BQU9rUSxLQUFLLEtBQUt5SSxTQUFTekksS0FBSyxTQUFTLENBQUMrcEMsU0FBUzk1QyxHQUFHLFFBQUcsSUFBUytELEtBQUs4ckMsZUFBZTlyQyxLQUFLNHJDLFlBQVksTUFBTSxHQUFHLElBQUk5dkMsRUFBRUcsRUFBRSxZQUFPLElBQVNBLElBQUlILEVBQUUsQ0FBQzg1QyxjQUFjLEdBQUdFLGlCQUFnQixJQUFLeDFDLEVBQUVnMUMsTUFBTXQxQyxLQUFLOHJDLGFBQWE5ckMsS0FBSzRyQyxZQUFZOXZDLEVBQUUsQ0FBQ2s2QyxVQUFVLzVDLEdBQUcsUUFBRyxJQUFTK0QsS0FBS3NzQyxvQkFBZSxJQUFTdHNDLEtBQUtvc0Msb0JBQW9CLE1BQU0sR0FBRyxJQUFJdHdDLEVBQUVHLEVBQUUsWUFBTyxJQUFTQSxJQUFJSCxFQUFFLENBQUM4NUMsY0FBYyxHQUFHRSxpQkFBZ0IsSUFBS3gxQyxFQUFFZzFDLE1BQU10MUMsS0FBS3NzQyxjQUFjdHNDLEtBQUtvc0Msb0JBQW9CdHdDLEVBQUUsRUFBRSxNQUFNc0MsRUFBRXlKLFlBQVk1TCxHQUFHK0QsS0FBS25CLE1BQU0sR0FBR21CLEtBQUtvckMsZ0JBQWdCLEdBQUdwckMsS0FBS3E1QixLQUFLLEdBQUdyNUIsS0FBS25CLE1BQU01QyxFQUFFNEMsTUFBTW1CLEtBQUtvckMsZ0JBQWdCbnZDLEVBQUUsb0JBQW9CK0QsS0FBS3E1QixLQUFLcDlCLEVBQUVvOUIsS0FBS3h1QixLQUFLNU8sR0FBRyxJQUFJcUUsRUFBRXJFLElBQUksRUFBQyxFQUFHLEtBQUssQ0FBQ0EsRUFBRUgsRUFBRUssS0FBSyxhQUFhQSxFQUFFQSxFQUFFTCxHQUFHSyxFQUFFUSxFQUFFYixFQUFFLENBQUN5OUIsNkJBQTZCLElBQUloNkIsRUFBRTAyQyw0QkFBNEIsSUFBSXg0QyxFQUFFeTRDLDJCQUEyQixJQUFJLzNDLEVBQUVnNEMsK0JBQStCLElBQUl4NUMsRUFBRXk1QyxpQ0FBaUMsSUFBSTkxQyxFQUFFKzFDLDBCQUEwQixJQUFJajRDLEVBQUVrNEMsNEJBQTRCLElBQUk3NUMsRUFBRTA5QixjQUFjLElBQUk5N0IsRUFBRWs0QyxlQUFlLElBQUloNEMsRUFBRSs3QixjQUFjLElBQUloOEIsRUFBRWs0QyxtQkFBbUIsSUFBSWg0QyxFQUFFaTRDLHdCQUF3QixJQUFJbDFDLEVBQUV1ekMsc0JBQXNCLElBQUk1MkMsSUFBSSxJQUFJOUIsRUFBRUQsRUFBRSxNQUFNRSxFQUFFRixFQUFFQyxFQUFFQSxHQUFHc0IsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxLQUFLbUQsRUFBRW5ELEVBQUUsTUFBTU8sRUFBRVAsRUFBRSxNQUFNd1csT0FBTyxNQUFNcFQsRUFBRSw2REFBNkRoRCxFQUFFLElBQUl3RSxXQUFXLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEdBQUcsSUFBSSxJQUFJLE1BQU1uQixFQUFFbEQsRUFBRXlGLEtBQUssU0FBUzFFLEVBQUUsZ0NBQWdDVSxFQUFFLDZCQUE2QnhCLEVBQUUsMkJBQTJCMkQsRUFBRSx5QkFBeUJsQyxFQUFFLHlDQUF5QzNCLEVBQUUseUNBQXlDLFNBQVM0QixFQUFFcEMsR0FBRyxHQUFHLGlCQUFpQkEsR0FBRyxLQUFLQSxFQUFFK0MsT0FBTyxNQUFNLElBQUlzQyxNQUFNN0QsR0FBRyxNQUFNM0IsRUFBRU8sSUFBSW1GLE9BQU9vYixRQUFRM2dCLEVBQUU2SSxZQUFZLEdBQUcsS0FBS2hKLEVBQUVrRCxPQUFPLE1BQU0sSUFBSXNDLE1BQU03RCxHQUFHLE1BQU10QixFQUFFLElBQUk0RSxXQUFXakYsRUFBRTBLLE1BQU0sRUFBRSxLQUFLcEssRUFBRSxJQUFJMkUsV0FBV2pGLEVBQUUwSyxNQUFNOUksRUFBRWc1QyxrQkFBa0IsS0FBS3AzQyxFQUFFNUIsRUFBRXlpQyxZQUFZaGtDLEdBQUdxSyxNQUFNOUksRUFBRWk1QyxrQkFBa0IsRUFBRWo1QyxFQUFFaTVDLG1CQUFtQixJQUFJcjZDLEVBQUVzNkMsV0FBV3QzQyxFQUFFbEQsR0FBRyxNQUFNLElBQUlrRixNQUFNbkQsR0FBRyxNQUFNLENBQUNrNEIsVUFBVWw2QixFQUFFMDZDLFNBQVN6NkMsRUFBRSxDQUFDLFNBQVNtQyxFQUFFdEMsR0FBRyxJQUFJb0MsRUFBRXBDLEVBQW9CLENBQWpCLE1BQU1BLEdBQUcsT0FBTSxDQUFFLENBQUMsT0FBTSxDQUFFLENBQUMsU0FBU3FDLEVBQUVyQyxHQUFHLE1BQU1ILEVBQUU0QixFQUFFeWlDLFlBQVlsa0MsR0FBR3VLLE1BQU05SSxFQUFFZzVDLGtCQUFrQixFQUFFaDVDLEVBQUVnNUMsbUJBQW1CLE9BQU9yNkMsSUFBSXNELE9BQU9yRCxFQUFFOC9CLGFBQWFuZ0MsRUFBRUgsSUFBSWdKLFdBQVcwQixNQUFNLEVBQUUsR0FBRyxDQUFDLFNBQVNoSSxHQUFHczRDLFFBQVE3NkMsRUFBRW9uQyxVQUFVdm5DLEVBQUV3bkMsSUFBSW5uQyxJQUFJLEdBQUcsSUFBSUYsR0FBR0EsRUFBRSxLQUFLQSxFQUFFLEVBQUUsTUFBTSxJQUFJcUYsTUFBTTNFLEdBQUcsR0FBRyxJQUFJYixHQUFHLElBQUlLLEVBQUU2QyxRQUFRbEQsRUFBRUssRUFBRTZDLFFBQVFsRCxFQUFFLElBQUksTUFBTSxJQUFJd0YsTUFBTWhCLEdBQUcsR0FBRyxLQUFLNUMsRUFBRWc1QyxrQkFBa0IsTUFBTSxJQUFJcDFDLE1BQU03RSxHQUFHLE1BQU1MLEVBQUUsSUFBSTJFLFdBQVd4RSxFQUFFeUMsT0FBTyxFQUFFLEdBQUc3QyxFQUFFNkMsUUFBUTVDLEVBQUVzRCxJQUFJbkQsRUFBRSxHQUFHSCxFQUFFc0QsSUFBSSxDQUFDekQsR0FBR00sRUFBRXlDLFFBQVE1QyxFQUFFc0QsSUFBSSxDQUFDNUQsR0FBR1MsRUFBRXlDLE9BQU8sR0FBRyxJQUFJLElBQUkvQyxFQUFFLEVBQUVBLEVBQUVFLEVBQUU2QyxPQUFPL0MsSUFBSSxDQUFDLEdBQUcsS0FBS0UsRUFBRUYsR0FBRytDLE9BQU8sTUFBTSxJQUFJc0MsTUFBTWxELEdBQUdoQyxFQUFFc0QsSUFBSXZELEVBQUVGLEdBQUdNLEVBQUV5QyxPQUFPLEVBQUUsR0FBRy9DLEVBQUUsQ0FBQyxPQUFPLElBQUk4RSxXQUFXckQsRUFBRXlpQyxZQUFZL2pDLEdBQUcsQ0FBQyxTQUFTbUYsR0FBR3UxQyxRQUFRNzZDLEVBQUVvbkMsVUFBVXZuQyxFQUFFaTdDLE1BQU01NkMsSUFBSSxPQUFPbUMsRUFBRUUsRUFBRSxDQUFDczRDLFFBQVE3NkMsRUFBRW9uQyxVQUFVdm5DLEVBQUV3bkMsSUFBSW5uQyxFQUFFME8sS0FBSzVPLEdBQUdvQyxFQUFFcEMsR0FBR282QixjQUFjLENBQUMsU0FBU240QixFQUFFakMsR0FBRyxNQUFNSCxFQUFFUSxFQUFFOC9CLGFBQWF4OEIsR0FBRSxFQUFHTixFQUFFOEMsR0FBR25HLElBQUlFLEVBQUV1QixFQUFFeWlDLFlBQVlya0MsR0FBRyxPQUFPd0MsRUFBRSxJQUFJeUMsV0FBVzVFLEdBQUcsR0FBRyxLQUFLLENBQUNGLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDa0MsRUFBRSxJQUFJM0IsRUFBRW1DLEVBQUUsSUFBSWQsSUFBSSxJQUFJdEIsRUFBRUQsRUFBRSxNQUFNd1csT0FBTyxTQUFTdFcsRUFBRUosRUFBRUgsR0FBRyxJQUFJSyxFQUFFRixFQUFFNkksU0FBUyxJQUFJM0ksRUFBRTZDLFNBQVMsRUFBRWxELElBQUlLLEVBQUVBLEVBQUUySixTQUFTLEVBQUVoSyxFQUFFLE1BQU0sTUFBTU0sRUFBRSxJQUFJMkUsV0FBVzVFLEVBQUU2QyxPQUFPLEdBQUcsSUFBSSxJQUFJL0MsRUFBRSxFQUFFSCxFQUFFLEVBQUVHLEVBQUVFLEVBQUU2QyxPQUFPLEVBQUUvQyxJQUFJSCxHQUFHLEVBQUVNLEVBQUVILEdBQUdzWCxTQUFTcFgsRUFBRXFLLE1BQU0xSyxFQUFFQSxFQUFFLEdBQUcsSUFBSSxPQUFPTSxDQUFDLENBQUMsU0FBU3NCLEVBQUV6QixHQUFHLElBQUlILEVBQUU4RSxPQUFPLEdBQUcsTUFBTXpFLEVBQUVDLEVBQUUrRixLQUFLbEcsR0FBRyxJQUFJLElBQUlHLEVBQUUsRUFBRUEsRUFBRUgsRUFBRStDLE9BQU81QyxJQUFJTixFQUFFOEUsT0FBT0gsT0FBT3RFLEVBQUU2WSxXQUFXNVksRUFBRSxLQUFLTixFQUFFOEUsT0FBTyxLQUFLLE9BQU85RSxDQUFDLEdBQUcsS0FBSyxDQUFDRyxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVBLEVBQUVMLEdBQUdLLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ2s3Qyw0QkFBNEIsSUFBSTM2QyxFQUFFc0QsT0FBTyxJQUFJakMsRUFBRThELE9BQU8sSUFBSWxGLElBQUksSUFBSUYsRUFBRUQsRUFBRSxNQUFNLE1BQU1FLEVBQUUsOEZBQThGLFNBQVNxQixFQUFFekIsR0FBRyxNQUFNSCxFQUFFLFNBQVNHLEdBQUcsSUFBSSxNQUFNSCxLQUFLRyxFQUFFLEdBQUdXLE9BQU9XLFVBQVVDLGVBQWVoQixLQUFLUCxFQUFFSCxNQUFNRyxFQUFFSCxJQUFJLElBQUlHLEVBQUVILEdBQUdrRCxRQUFRLE1BQU0sQ0FBQ2k0QyxlQUFjLEVBQUdDLGNBQWNwN0MsR0FBRyxNQUFNLENBQUNtN0MsZUFBYyxFQUFHQyxtQkFBYyxFQUFPLENBQTFMLENBQTRMajdDLEdBQUcsR0FBR0gsRUFBRW03QyxjQUFjLE1BQU0sSUFBSTMxQyxNQUFNakYsRUFBRVAsRUFBRW83QyxlQUFlLE9BQU85NkMsRUFBRXVELE9BQU8xRCxFQUFFLENBQUN5RyxVQUFTLEdBQUksQ0FBQyxTQUFTcEcsRUFBRUwsR0FBRyxPQUFPRyxFQUFFb0YsT0FBT3ZGLEVBQUUsR0FBRyxLQUFLLENBQUNBLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDc0csRUFBRSxJQUFJL0YsRUFBRWtELEVBQUUsSUFBSTdCLElBQUksSUFBSXRCLEVBQUVELEVBQUUsTUFBTXdXLE9BQU8sU0FBU3RXLEVBQUVKLEdBQUcsR0FBRyxpQkFBaUJBLElBQUl3RSxPQUFPNlAsVUFBVXJVLElBQUlBLEVBQUUsR0FBR0EsRUFBRTJFLE9BQU8sc0JBQXNCLE1BQU0sSUFBSVUsTUFBTSwwQ0FBMEMsTUFBTXhGLEVBQUVNLEVBQUUwWCxZQUFZLEdBQUcsT0FBT2hZLEVBQUUyYixpQkFBaUI3VyxPQUFPM0UsSUFBSSxJQUFJOEUsV0FBV2pGLEVBQUUsQ0FBQyxTQUFTNEIsRUFBRXpCLEVBQUVILEVBQUUsUUFBUSxHQUFHLFNBQVNBLEdBQUcsVUFBVUEsR0FBRyxXQUFXQSxFQUFFLE1BQU0sSUFBSXdGLE1BQU0sZ0NBQWdDeEYsS0FBSyxHQUFHLElBQUlHLEVBQUVvRixZQUFZcEYsRUFBRW9GLFdBQVcsRUFBRSxNQUFNLElBQUlDLE1BQU0seUVBQXlFckYsRUFBRW9GLGNBQWMsTUFBTWxGLEVBQUVDLEVBQUUwWCxZQUFZLEVBQUU3WCxFQUFFb0YsWUFBWWxGLEVBQUUwWCxLQUFLLEdBQUcsTUFBTXhYLEVBQUVELEVBQUU2QyxPQUFPLENBQUM5QyxFQUFFQyxFQUFFK0YsS0FBS2xHLEtBQUsyWixrQkFBa0JsWSxFQUFFckIsRUFBRW9FLE9BQU9FLGlCQUFpQixHQUFHLFNBQVM3RSxFQUFFLENBQUMsR0FBRzRCLEVBQUUsTUFBTSxJQUFJNEQsTUFBTSx5Q0FBeUNqRixFQUFFeUksaUVBQWlFLE9BQU9yRSxPQUFPcEUsRUFBRSxDQUFDLE1BQU0sVUFBVVAsR0FBRzRCLEVBQUVyQixFQUFFb0UsT0FBT3BFLEVBQUUsR0FBRyxLQUFLLENBQUNKLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRUEsRUFBRUwsR0FBR0ssRUFBRVEsRUFBRWIsRUFBRSxDQUFDcTdDLFFBQVEsSUFBSTUzQyxFQUFFNjNDLGVBQWUsSUFBSTc2QyxFQUFFcStCLGNBQWMsSUFBSWg3QixFQUFFdEMsUUFBUSxJQUFJRyxJQUFJLElBQUlyQixFQUFFRCxFQUFFLE1BQU1FLEVBQUVGLEVBQUUsTUFBTXVCLEVBQUV2QixFQUFFLE1BQU1HLEVBQUVILEVBQUUsTUFBTW1ELEVBQUVuRCxFQUFFLEtBQUtPLEVBQUVQLEVBQUUsTUFBTXdXLE9BQU8sTUFBTXBULEVBQUVzSSxZQUFZNUwsR0FBRyxHQUFHK0QsS0FBSzJZLEtBQUssb0JBQW9CM1ksS0FBS2doQyxJQUFJdGtDLEVBQUV5RixLQUFLLE1BQU1sRyxFQUFFK0MsT0FBTyxHQUFHLENBQUMsTUFBTWxELEVBQUUsR0FBR0csRUFBRStDLE9BQU84RixrRUFBa0UsSUFBSUEsYUFBYSxNQUFNeEQsTUFBTXhGLEVBQUUsQ0FBQ2tFLEtBQUtxM0MsY0FBY3A3QyxDQUFDLENBQUM2K0IsdUJBQXVCLE1BQU0sQ0FBQ3djLE9BQU90M0MsS0FBS3EzQyxjQUFjLENBQUNqWiw2QkFBNkJuaUMsR0FBRyxNQUFNSCxFQUFFYyxPQUFPUSxPQUFPNEMsS0FBS3pDLFdBQVd6QixFQUFFNmMsS0FBSyxvQkFBb0I3YyxFQUFFa2xDLElBQUl0a0MsRUFBRXlGLEtBQUssTUFBTXJHLEVBQUV1N0MsY0FBYyxHQUFHLElBQUksTUFBTWw3QyxLQUFLRixFQUFFcTdDLE9BQU94N0MsRUFBRXU3QyxjQUFjejRDLEtBQUtsQyxFQUFFeUYsS0FBS2hHLElBQUksT0FBT0wsQ0FBQyxDQUFDbW5DLFNBQVMsT0FBT3ZsQyxFQUFFaUMsT0FBT0ssS0FBSzg2Qix1QkFBdUIsRUFBRSxTQUFTditCLEVBQUVOLEdBQUcsTUFBTUgsRUFBRSxHQUFHLElBQUksTUFBTUssS0FBS0YsRUFBRSxDQUFDLE1BQU1BLEVBQUVHLEVBQUUybUMsdUJBQXVCNW1DLEdBQUdMLEVBQUU4QyxLQUFLM0MsRUFBRXM3QyxVQUFVLENBQUMsTUFBTXA3QyxFQUFFLElBQUlvRCxFQUFFekQsR0FBRzRCLEVBQUV2QixFQUFFOG1DLFNBQVMzbUMsRUFBRUksRUFBRXlGLEtBQUs3QyxFQUFFODhCLGFBQWFqZ0MsRUFBRTZrQyxJQUFJdGpDLElBQUluQixFQUFFRixFQUFFOGpDLFlBQVk3akMsR0FBRyxPQUFPSSxFQUFFeUYsS0FBSzVGLEVBQUUsQ0FBQyxTQUFTcUQsRUFBRTNELEVBQUVILEdBQUcsTUFBTUssRUFBRUksRUFBRU4sR0FBR0ksRUFBRSxHQUFHLElBQUksTUFBTXFCLEtBQUt6QixFQUFFLENBQUMsTUFBTUEsRUFBRUcsRUFBRTJtQyx1QkFBdUJybEMsR0FBRzVCLEdBQUdRLEVBQUVnK0IsY0FBY3IrQixFQUFFa0csS0FBS2swQixhQUFhdjZCLElBQUlHLEVBQUV5MkMsTUFBTXYyQyxFQUFFRSxFQUFFdUMsS0FBSzNDLEdBQUcsQ0FBQyxPQUFPSSxDQUFDLENBQUMsTUFBTW9CLEVBQUU4QixHQUFHLEtBQUssQ0FBQ3RELEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRUEsRUFBRUwsR0FBR0ssRUFBRVEsRUFBRWIsRUFBRSxDQUFDMDdDLG9CQUFvQixJQUFJcjVDLEVBQUVzNUMsbUJBQW1CLElBQUloNkMsRUFBRWk2QyxhQUFhLElBQUk5M0MsRUFBRSszQyxnQkFBZ0IsSUFBSXIzQyxFQUFFczNDLGVBQWUsSUFBSWo3QyxFQUFFazdDLHVCQUF1QixJQUFJejVDLEVBQUUwNUMsd0JBQXdCLElBQUlyN0MsRUFBRXM3QyxhQUFhLElBQUlyNkMsRUFBRXc5QixZQUFZLElBQUkzK0IsSUFBSSxNQUFNSCxFQUFFNGQsS0FBSytKLE1BQU0sdWwyQ0FBdWwyQyxJQUFJMW5CLEVBQUUsU0FBU3FCLEVBQUV6QixHQUFHLElBQUlILEVBQUUsRUFBRUssRUFBRSxFQUFFLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFSCxFQUFFK0MsT0FBTzVDLElBQUksQ0FBQyxNQUFNQyxFQUFFSixFQUFFRyxHQUFHLEdBQUdDLEVBQUUsSUFBSSxPQUFPRCxFQUFFLEdBQUcsSUFBSUEsR0FBR0MsRUFBRSxFQUFFLENBQUMsSUFBSUQsRUFBRSxJQUFJLENBQUNOLEVBQUVPLEdBQUdGLEVBQUVDLEVBQUUsR0FBR04sSUFBSSxJQUFJTyxJQUFJRixFQUFFQSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsU0FBU0csRUFBRUwsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEVBQUUsTUFBTUMsRUFBRXNCLEVBQUV6QixFQUFFdUssTUFBTTFLLEVBQUVLLElBQUlFLEVBQUVELEVBQUUsR0FBRyxJQUFJRSxFQUFFRixFQUFFLEdBQUcsR0FBR0UsR0FBRyxFQUFFLE1BQU0sSUFBSWdGLE1BQU0sK0NBQStDeEYsRUFBRUssS0FBSyxNQUFNbUQsRUFBRSxHQUFHbkQsR0FBR0csRUFBRSxJQUFJLElBQUlGLEVBQUUsRUFBRUEsRUFBRUMsRUFBRUQsSUFBSSxDQUFDLEdBQUdOLEVBQUVLLEdBQUdGLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0scUNBQXFDLElBQUlqRixFQUFFLElBQUlBLEVBQUVDLEdBQUdvQixFQUFFekIsRUFBRXVLLE1BQU0xSyxFQUFFSyxJQUFJRyxHQUFHLEVBQUUsTUFBTSxJQUFJZ0YsTUFBTSw4QkFBOEJsRix1QkFBdUJOLEVBQUVLLEtBQUttRCxFQUFFVixLQUFLdkMsR0FBR0YsR0FBR0csQ0FBQyxDQUFDLE1BQU0sQ0FBQ0gsRUFBRW1ELEVBQUUsQ0FBQyxTQUFTQSxFQUFFckQsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEVBQUUsTUFBTUMsRUFBRXNCLEVBQUV6QixFQUFFdUssTUFBTTFLLEVBQUVLLElBQUlFLEVBQUVELEVBQUUsR0FBRyxJQUFJRSxFQUFFRixFQUFFLEdBQUcsR0FBR0UsR0FBRyxFQUFFLE1BQU0sSUFBSWdGLE1BQU0sa0RBQWtEeEYsRUFBRUssS0FBSyxNQUFNbUQsRUFBRSxHQUFHbkQsR0FBR0csRUFBRSxJQUFJLElBQUlGLEVBQUUsRUFBRUEsRUFBRUMsRUFBRUQsSUFBSSxDQUFDLEdBQUdOLEVBQUVLLEdBQUdGLEVBQUUrQyxPQUFPLE1BQU0sSUFBSXNDLE1BQU0sc0NBQXNDLElBQUlqRixFQUFFLElBQUlBLEVBQUVDLEdBQUdvQixFQUFFekIsRUFBRXVLLE1BQU0xSyxFQUFFSyxJQUFJRyxHQUFHLEVBQUUsTUFBTSxJQUFJZ0YsTUFBTSxrQ0FBa0NsRix1QkFBdUJOLEVBQUVLLEtBQUssR0FBR0EsR0FBR0csRUFBRVIsRUFBRUssRUFBRUUsRUFBRUosRUFBRStDLE9BQU8sTUFBTSxJQUFJc0MsTUFBTSxzQ0FBc0MsTUFBTTVFLEVBQUVULEVBQUV1SyxNQUFNMUssRUFBRUssRUFBRUwsRUFBRUssRUFBRUUsR0FBR2lELEVBQUVWLEtBQUtsQyxHQUFHUCxHQUFHRSxDQUFDLENBQUMsTUFBTSxDQUFDRixFQUFFbUQsRUFBRSxDQUFDLFNBQVM1QyxFQUFFVCxFQUFFSCxHQUFHLElBQUlLLEVBQUUsRUFBRSxNQUFNQyxFQUFFQyxHQUFHcUIsRUFBRXpCLEVBQUV1SyxNQUFNMUssRUFBRUssSUFBSSxHQUFHRSxHQUFHLEVBQUUsTUFBTSxJQUFJaUYsTUFBTSx5Q0FBeUN4RixFQUFFSyxLQUFLLE9BQU9BLEdBQUdFLEVBQUUsQ0FBQ0YsRUFBRUMsRUFBRSxDQUFDLFNBQVNtRCxFQUFFdEQsRUFBRUgsR0FBRyxJQUFJSyxFQUFFLEVBQUUsTUFBTUMsRUFBRUMsR0FBR3FCLEVBQUV6QixFQUFFdUssTUFBTTFLLEVBQUVLLElBQUksR0FBR0UsR0FBRyxFQUFFLE1BQU0sSUFBSWlGLE1BQU0saURBQWlEeEYsRUFBRUssS0FBSyxHQUFHQSxHQUFHRSxFQUFFUCxFQUFFSyxFQUFFQyxFQUFFSCxFQUFFK0MsT0FBTyxNQUFNLElBQUlzQyxNQUFNLHFDQUFxQyxNQUFNaEYsRUFBRUwsRUFBRXVLLE1BQU0xSyxFQUFFSyxFQUFFTCxFQUFFSyxFQUFFQyxHQUFHLE9BQU9ELEdBQUdDLEVBQUUsQ0FBQ0QsRUFBRUcsRUFBRSxDQUFDLFNBQVNDLEVBQUVOLEVBQUVILEdBQUcsSUFBSUcsRUFBRSxNQUFNLElBQUlxRixNQUFNLGlCQUFpQixRQUFHLElBQVN4RixJQUFJQSxFQUFFLEtBQUs0SSxNQUFNQyxRQUFRN0ksR0FBRyxNQUFNLElBQUl3RixNQUFNLHFCQUFxQixNQUFNbkYsRUFBRUksR0FBR21CLEVBQUV6QixHQUFHLEdBQUdNLEdBQUcsRUFBRSxNQUFNLElBQUkrRSxNQUFNLHlCQUF5QixHQUFHbkYsRUFBRUMsRUFBRTQ3QyxHQUFHLE1BQU0sSUFBSTEyQyxNQUFNLHVCQUF1QixJQUFJMUIsRUFBRSxHQUFHWixPQUFPdkIsR0FBR3hCLEVBQUUsSUFBSSxNQUFNQSxLQUFLSCxFQUFFMkIsR0FBR3hCLEVBQUUrQyxPQUFPLEdBQUd2QixFQUFFLElBQUksTUFBTSxJQUFJNkQsTUFBTSxvQkFBb0IsSUFBSWpGLEVBQUUsQ0FBQ0EsRUFBRSxDQUFDLEVBQUUsSUFBSSxNQUFNSixLQUFLRyxFQUFFNjdDLEdBQUc1N0MsRUFBRUosRUFBRWk4QyxRQUFRajhDLENBQUMsQ0FBQyxJQUFJa0MsRUFBRTVCLEVBQUVJLEVBQUUsR0FBRzJELEVBQUUsR0FBRyxLQUFLbkMsRUFBRWxDLEVBQUUrQyxRQUFRLENBQUMsTUFBTWxELEVBQUVPLEVBQUVKLEVBQUVrQyxJQUFJLFFBQUcsSUFBU3JDLEVBQUUsTUFBTSxJQUFJd0YsTUFBTSx1QkFBdUIxQixHQUFHOUQsRUFBRXE4QyxLQUFLLElBQUloOEMsRUFBRUwsRUFBRXM4QyxLQUFLLEdBQUcsSUFBSWo4QyxFQUFFLE9BQU9MLEVBQUVvOEMsUUFBUSxLQUFLLEdBQUcsQ0FBQyxJQUFJcDhDLEdBQUdLLEVBQUVMLEdBQUdRLEVBQUVMLEVBQUVrQyxHQUFHeEIsRUFBRUEsRUFBRXNDLE9BQU9uRCxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJQSxHQUFHSyxFQUFFTCxHQUFHd0QsRUFBRXJELEVBQUVrQyxHQUFHbUMsRUFBRUEsRUFBRXJCLE9BQU9uRCxHQUFHLEtBQUssQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJQSxHQUFHSyxFQUFFTCxHQUFHWSxFQUFFVCxFQUFFa0MsR0FBR3hCLEVBQUVpQyxLQUFLOUMsR0FBRyxLQUFLLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSUEsR0FBR0ssRUFBRUwsR0FBR3lELEVBQUV0RCxFQUFFa0MsR0FBR21DLEVBQUUxQixLQUFLOUMsR0FBRyxLQUFLLENBQUMsUUFBUSxNQUFNLElBQUl3RixNQUFNLHVCQUF1Qm5ELEdBQUdoQyxDQUFDLENBQUMsR0FBR0EsRUFBRSxHQUFHeUQsRUFBRSxJQUFJLE1BQU0sSUFBSTBCLE1BQU0sK0RBQStELE1BQU0sQ0FBQzNFLEVBQUUyRCxHQUFFLEVBQUcsQ0FBQyxTQUFTVixFQUFFM0QsRUFBRUgsR0FBRyxNQUFNLENBQUMsQ0FBQ0ssR0FBR0ksRUFBRU4sRUFBRUgsR0FBRyxPQUFPSyxDQUFDLENBQUMsU0FBU3NCLEVBQUV4QixFQUFFSCxHQUFHLE1BQU1LLEdBQUdHLEVBQUVMLEVBQUVILEdBQUcsT0FBT0ssQ0FBQyxDQUFDLFNBQVNnQyxFQUFFbEMsRUFBRUgsR0FBRyxNQUFNSyxHQUFHbUQsRUFBRXJELEVBQUVILEdBQUcsT0FBT0ssQ0FBQyxDQUFDLFNBQVNRLEVBQUVWLEVBQUVILEdBQUcsTUFBTUssR0FBR08sRUFBRVQsRUFBRUgsR0FBRyxPQUFPSyxDQUFDLENBQUMsU0FBU21FLEVBQUVyRSxFQUFFSCxHQUFHLE1BQU1LLEdBQUdvRCxFQUFFdEQsRUFBRUgsR0FBRyxPQUFPSyxDQUFDLENBQUMsTUFBTWlDLEVBQUVoQyxFQUFFNDdDLEdBQUd2N0MsRUFBRUwsRUFBRWk4QyxJQUFJLEtBQUssQ0FBQ3A4QyxFQUFFSCxFQUFFSyxLQUFLLGFBQWFBLEVBQUVBLEVBQUVMLEdBQUdLLEVBQUVRLEVBQUViLEVBQUUsQ0FBQ2crQixTQUFTLElBQUlsNkIsRUFBRTA0QyxnQkFBZ0IsSUFBSTc2QyxFQUFFdStCLGFBQWEsSUFBSTc5QixFQUFFZytCLDhCQUE4QixJQUFJeC9CLEVBQUU0K0Isd0JBQXdCLElBQUlqN0IsRUFBRWk0QyxpQkFBaUIsSUFBSW42QyxFQUFFbzZDLFNBQVMsSUFBSW42QyxFQUFFbzZDLG9CQUFvQixJQUFJbDZDLElBQUksSUFBSW5DLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxNQUFNbUQsRUFBRW5ELEVBQUUsTUFBTU8sRUFBRVAsRUFBRSxLQUFLb0QsRUFBRXBELEVBQUUsTUFBTUksRUFBRUosRUFBRSxNQUFNd1csT0FBTyxNQUFNL1MsRUFBRWlJLFlBQVk1TCxFQUFFSCxHQUFHLEdBQUdrRSxLQUFLZ2hDLElBQUl6a0MsRUFBRTRGLEtBQUssV0FBV3JHLEtBQUs0SSxNQUFNQyxRQUFRN0ksS0FBS0EsRUFBRXlpQyxPQUFPdGlDLEdBQUdBLEVBQUU0TCxjQUFjOUcsWUFBWXhFLEVBQUU0VyxTQUFTbFgsTUFBTSxNQUFNLElBQUlvRyxVQUFVLHFCQUFxQixJQUFJbEcsRUFBRSxHQUFHLE1BQU1MLElBQUlLLEVBQUVMLEVBQUUrTyxLQUFLNU8sR0FBRyxJQUFJOEUsV0FBVzlFLE9BQU9LLEVBQUVvN0MsYUFBYXo3QyxFQUFFRSxHQUFHLE1BQU0sSUFBSW1GLE1BQU0sbUJBQW1CdEIsS0FBSzA0QyxNQUFNejhDLEVBQUUrRCxLQUFLNGxCLEtBQUt6cEIsRUFBRTZELEtBQUt3aEMsU0FBSSxFQUFPeGhDLEtBQUsyNEMsVUFBSyxDQUFNLENBQUM3ZCx1QkFBdUIsTUFBTTcrQixFQUFFLENBQUNNLEVBQUV5RCxLQUFLMDRDLE9BQU8sT0FBTzE0QyxLQUFLNGxCLE9BQU8zcEIsRUFBRTI4QyxJQUFJNTRDLEtBQUs0bEIsTUFBTTVsQixLQUFLd2hDLElBQUl2bEMsRUFBRXVsQyxJQUFJeGhDLEtBQUt3aEMsSUFBSXhoQyxLQUFLMjRDLE9BQU8xOEMsRUFBRTA4QyxLQUFLMzRDLEtBQUsyNEMsTUFBTTE4QyxDQUFDLENBQUNtaUMsNkJBQTZCbmlDLEdBQUcsTUFBTUgsRUFBRSxJQUFJOEQsRUFBRTNELEVBQUVNLEVBQUVOLEVBQUUyOEMsS0FBSyxPQUFPOThDLEVBQUUwbEMsSUFBSXZsQyxFQUFFdWxDLElBQUkxbEMsRUFBRTY4QyxLQUFLMThDLEVBQUUwOEMsS0FBSzc4QyxDQUFDLENBQUMrNkIsT0FBTzU2QixHQUFHLEdBQUcrRCxLQUFLd2hDLEtBQUt4aEMsS0FBSzI0QyxLQUFLLE9BQU0sRUFBRyxJQUFJcjhDLEVBQUVvN0MsYUFBYTEzQyxLQUFLMDRDLE1BQU0xNEMsS0FBSzRsQixLQUF1QixDQUFqQixNQUFNM3BCLEdBQUcsT0FBTSxDQUFFLENBQUMsTUFBTUgsRUFBRVksRUFBRTAvQixhQUFhcDhCLEtBQUtnaEMsSUFBSWhoQyxLQUFLMDRDLE9BQU8sSUFBSTE0QyxLQUFLd2hDLE1BQU14aEMsS0FBSzI0QyxLQUFLLENBQUMsTUFBTXg4QyxFQUFFQyxFQUFFK2pDLFlBQVlya0MsR0FBRyxPQUFPWSxFQUFFazZDLFdBQVd6NkMsRUFBRUYsRUFBRSxDQUFDLE9BQU8rRCxLQUFLd2hDLElBQUlwbEMsRUFBRXk2QixPQUFPLzZCLEVBQUVrRSxLQUFLd2hDLElBQUl2bEMsSUFBRyxFQUFHcUQsRUFBRXU1QyxJQUFJLzhDLEVBQUVrRSxLQUFLMjRDLEtBQUsxOEMsRUFBRSxDQUFDODlCLFVBQVUsTUFBTTk5QixFQUFFUyxFQUFFMC9CLGFBQWFwOEIsS0FBS2doQyxJQUFJaGhDLEtBQUswNEMsT0FBTzU4QyxFQUFFTSxFQUFFK2pDLFlBQVlsa0MsR0FBRyxPQUFPSSxFQUFFaStCLGNBQWMsSUFBSXY1QixXQUFXakYsR0FBRyxDQUFDNjZCLEtBQUsxNkIsRUFBRUgsR0FBRyxHQUFHLE1BQU1BLEVBQUVrRSxLQUFLd2hDLElBQUl4aEMsS0FBSzg0QyxZQUFZNzhDLE9BQU8sQ0FBQyxNQUFNRSxFQUFFTCxFQUFFaTdDLE1BQU1sc0MsS0FBSzVPLElBQUcsQ0FBRTg4QyxHQUFHMThDLEVBQUU4OUIsY0FBY2wrQixHQUFHbzZCLGNBQWNyMkIsS0FBSzI0QyxLQUFLLENBQUNuNkMsRUFBRTFDLEVBQUVnN0MsUUFBUWtDLElBQUlsOUMsRUFBRXVuQyxVQUFVNFYsT0FBTzk4QyxHQUFHLE1BQU1DLEVBQUVzQixHQUFHc0MsS0FBS2s1QyxtQkFBbUJqOUMsRUFBRStELEtBQUsyNEMsTUFBTTM0QyxLQUFLMjRDLEtBQUtNLE9BQU92N0MsR0FBR0EsRUFBRXRCLENBQUMsQ0FBQyxDQUFDKzhDLGlCQUFpQmw5QyxHQUFHLFFBQUcsSUFBUytELEtBQUsyNEMsS0FBSyxNQUFNLElBQUlyM0MsTUFBTSx1QkFBdUIsTUFBTXhGLEVBQUVLLEdBQUc2RCxLQUFLazVDLG1CQUFtQmo5QyxFQUFFK0QsS0FBSzI0QyxNQUFNMzRDLEtBQUsyNEMsS0FBS00sT0FBTzk4QyxHQUFHdUIsRUFBRTVCLENBQUMsQ0FBQ2c5QyxZQUFZNzhDLEdBQUcsTUFBTUgsRUFBRVksRUFBRTAvQixhQUFhcDhCLEtBQUtnaEMsSUFBSWhoQyxLQUFLMDRDLE9BQU8sT0FBT3Q4QyxFQUFFdTZCLEtBQUs3NkIsRUFBRUcsRUFBRSxDQUFDaTlDLG1CQUFtQmo5QyxFQUFFSCxHQUFHLElBQUlLLEdBQUcsRUFBRSxNQUFNRSxFQUFFRCxFQUFFaStCLHFCQUFxQnArQixHQUFHbzZCLFVBQVUsSUFBSSxJQUFJcDZCLEVBQUUsRUFBRUEsRUFBRUgsRUFBRW05QyxPQUFPajZDLE9BQU8vQyxJQUFJLENBQUMsTUFBTTg4QyxHQUFHMzhDLEdBQUdOLEVBQUVtOUMsT0FBT2g5QyxHQUFHLEdBQUdTLEVBQUVrNkMsV0FBV3g2QyxFQUFFQyxHQUFHLENBQUNGLEVBQUVGLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxJQUFJRSxFQUFFLE1BQU0sSUFBSW1GLE1BQU0sc0JBQXNCLE1BQU0sQ0FBQ3RCLEtBQUs4NEMsWUFBWTc4QyxHQUFHRSxFQUFFLENBQUM4bUMsU0FBUyxPQUFPdmxDLEVBQUVpQyxPQUFPSyxLQUFLODZCLHVCQUF1QixDQUFDc0QsZ0JBQWdCbmlDLEdBQUcsTUFBTUgsRUFBRTRCLEVBQUU4RCxPQUFPdkYsR0FBRyxPQUFPMkQsRUFBRTB5QyxzQkFBc0J4MkMsRUFBRSxFQUFFLE1BQU0yQixFQUFFb0ssWUFBWTVMLEVBQUVILEdBQUdrRSxLQUFLNjZCLEtBQUssSUFBSWo3QixFQUFFM0QsRUFBRUgsR0FBR2tFLEtBQUtvNUMsWUFBTyxDQUFNLENBQUN0ZSx1QkFBdUIsTUFBTTcrQixFQUFFLENBQUM0K0IsS0FBSzc2QixLQUFLNjZCLEtBQUtDLHdCQUF3QixPQUFPOTZCLEtBQUtvNUMsU0FBU245QyxFQUFFbTlDLE9BQU9wNUMsS0FBS281QyxRQUFRbjlDLENBQUMsQ0FBQ21pQyw2QkFBNkJuaUMsR0FBRyxNQUFNSCxFQUFFLElBQUkyQixFQUFFeEIsRUFBRTQrQixLQUFLdCtCLEVBQUVOLEVBQUU0K0IsS0FBSytkLEtBQUssT0FBTzk4QyxFQUFFKytCLEtBQUtqN0IsRUFBRTB5QyxzQkFBc0JyMkMsRUFBRTQrQixNQUFNLytCLEVBQUVzOUMsT0FBT245QyxFQUFFbTlDLE9BQU90OUMsQ0FBQyxDQUFDbW5DLFNBQVMsT0FBT3ZsQyxFQUFFaUMsT0FBT0ssS0FBSzg2Qix1QkFBdUIsQ0FBQ3NELGdCQUFnQm5pQyxHQUFHLE1BQU1ILEVBQUU0QixFQUFFOEQsT0FBT3ZGLEdBQUcsT0FBT3dCLEVBQUU2MEMsc0JBQXNCeDJDLEVBQUUsQ0FBQ3U5QyxjQUFjLFNBQVNyNUMsS0FBSzY2QixLQUFLMkcsTUFBTXhoQyxLQUFLNjZCLEtBQUs4ZCxLQUFLLENBQUM5aEIsU0FBUyxNQUFNNTZCLEVBQUUrRCxLQUFLKzVCLFVBQVUsT0FBTy81QixLQUFLNjZCLEtBQUtoRSxPQUFPeDZCLEVBQUU4OUIsY0FBY2wrQixHQUFHbzZCLFVBQVUsQ0FBQzBELFVBQVUsR0FBRy81QixLQUFLNjZCLEtBQUsyRyxLQUFLeGhDLEtBQUs2NkIsS0FBSzhkLEtBQUssTUFBTSxJQUFJcjNDLE1BQU0sK0VBQStFLEdBQUd0QixLQUFLNjZCLEtBQUsyRyxJQUFJLENBQUMsSUFBSXhoQyxLQUFLbzVDLE9BQU8sTUFBTSxJQUFJOTNDLE1BQU0sZ0RBQWdELE9BQU9qRixFQUFFaStCLGNBQWN0NkIsS0FBS281QyxPQUFPLENBQUMsR0FBR3A1QyxLQUFLNjZCLEtBQUs4ZCxLQUFLLENBQUMsTUFBTTE4QyxFQUFFLENBQUM2NkMsUUFBUTkyQyxLQUFLNjZCLEtBQUs4ZCxLQUFLbjZDLEVBQUU2a0MsVUFBVXJqQyxLQUFLNjZCLEtBQUs4ZCxLQUFLSyxJQUFJMVYsSUFBSXRqQyxLQUFLNjZCLEtBQUs4ZCxLQUFLTSxPQUFPcHVDLEtBQUs1TyxHQUFHQSxFQUFFODhDLE1BQU0sT0FBTzE4QyxFQUFFaStCLGNBQWNqK0IsRUFBRW02QyxtQkFBbUJ2NkMsR0FBRyxDQUFDLE9BQU8rRCxLQUFLNjZCLEtBQUtkLFNBQVMsQ0FBQ3VmLGFBQWFyOUMsRUFBRUgsR0FBR2tFLEtBQUs2NkIsS0FBS2xFLEtBQUs3NkIsRUFBRUcsRUFBRSxDQUFDazlDLGlCQUFpQmw5QyxHQUFHK0QsS0FBSzY2QixLQUFLc2UsaUJBQWlCbDlDLEVBQUUsQ0FBQzA2QixLQUFLMTZCLEdBQUcrRCxLQUFLNjZCLEtBQUtsRSxLQUFLMTZCLEdBQUcrRCxLQUFLbzVDLE9BQU9oOUMsRUFBRWkrQixxQkFBcUJwK0IsR0FBR282QixTQUFTLEVBQUUsU0FBU2w0QixFQUFFbEMsRUFBRUgsR0FBRyxPQUFPLElBQUk4RCxFQUFFM0QsRUFBRUgsRUFBRSxDQUFDLFNBQVNhLEVBQUVWLEVBQUVILEdBQUcsSUFBSUssRUFBRUcsRUFBRSxHQUFHUixhQUFhMkIsRUFBRXRCLEVBQUVMLEVBQUUrK0IsS0FBS3YrQixFQUFFRCxFQUFFODlCLGNBQWNyK0IsRUFBRWkrQixXQUFXMUQsZUFBZSxHQUFHbDZCLEVBQUVMLEVBQUVLLEVBQUVxbEMsSUFBSWxsQyxFQUFFTCxFQUFFa0csS0FBS2swQixlQUFlLEdBQUdsNkIsRUFBRXc4QyxLQUFLLENBQUMsTUFBTTE4QyxFQUFFLENBQUM2NkMsUUFBUTM2QyxFQUFFdzhDLEtBQUtuNkMsRUFBRTZrQyxVQUFVbG5DLEVBQUV3OEMsS0FBS0ssSUFBSTFWLElBQUlubkMsRUFBRXc4QyxLQUFLTSxPQUFPcHVDLEtBQUs1TyxHQUFHQSxFQUFFODhDLE1BQU16OEMsRUFBRUQsRUFBRW02QyxtQkFBbUJ2NkMsRUFBRSxNQUFNSyxFQUFFRCxFQUFFODlCLGNBQWNoK0IsRUFBRTQ5QixXQUFXMUQsVUFBVSxPQUFPLFNBQVNwNkIsRUFBRUgsRUFBRUssR0FBRyxJQUFJTCxFQUFFKzZCLE9BQU8xNkIsR0FBRyxNQUFNLElBQUltRixNQUFNLG9GQUFvRixNQUFNakYsRUFBRSxDQUFDdytCLEtBQUsvK0IsRUFBRWcvQix1QkFBdUJDLElBQUk5K0IsRUFBRTYrQix3QkFBd0IsT0FBTzErQixFQUFFbTlDLFdBQVdwOUMsRUFBRUYsRUFBRWtHLEtBQUtrMEIsYUFBYWg2QixFQUFFbTlDLEtBQUtqOUMsRUFBRTRGLEtBQUtoRyxJQUFJLENBQUM0bkMsS0FBSzluQyxFQUFFOG5DLE9BQU9qL0IsV0FBV3UzQixLQUFLMytCLEVBQUVpQyxPQUFPdEQsR0FBRyxDQUFoVCxDQUFrVEosRUFBRUUsRUFBRUcsRUFBRSxDQUFDLFNBQVNnRSxFQUFFckUsRUFBRUgsR0FBRyxPQUFPYSxFQUFFNEMsRUFBRXdqQyx1QkFBdUI5bUMsR0FBR0gsRUFBRSxDQUFDLFNBQVNzQyxFQUFFbkMsR0FBRyxPQUFPMkQsRUFBRTY1QyxTQUFTeDlDLEVBQUUsQ0FBQyxNQUFNUSxFQUFFRixFQUFFNEYsS0FBSyxZQUFZLFNBQVM5RCxFQUFFcEMsRUFBRUgsRUFBRUssR0FBRyxNQUFNdUIsRUFBRWhCLEVBQUUwL0IsYUFBYS8vQixFQUFFODlCLGNBQWNoK0IsR0FBR2s2QixVQUFVdjZCLEdBQUdRLEVBQUVDLEVBQUU0RixLQUFLekYsRUFBRTAvQixhQUFhMy9CLEVBQUVpQixJQUFJLE9BQU90QixFQUFFdTZCLEtBQUtyNkIsRUFBRUwsRUFBRSxDQUFDLFNBQVNzQyxFQUFFdEMsRUFBRUgsRUFBRUssR0FBRyxPQUFPa0MsRUFBRXBDLEVBQUVILEVBQUUsSUFBSThELEVBQUV6RCxHQUFHNDlCLFVBQVUsR0FBRyxLQUFLLENBQUM5OUIsRUFBRUgsRUFBRUssS0FBSyxhQUFhQSxFQUFFQSxFQUFFTCxHQUFHSyxFQUFFUSxFQUFFYixFQUFFLENBQUM0OUMsOEJBQThCLElBQUlqeUMsRUFBRWt5QyxnQkFBZ0IsSUFBSWp5QyxFQUFFNjVCLFFBQVEsSUFBSTU1QixFQUFFaXlDLFVBQVUsSUFBSTl4QyxFQUFFK3hDLFlBQVksSUFBSTl4QyxFQUFFK3hDLFVBQVUsSUFBSTk3QyxFQUFFKzdDLFVBQVUsSUFBSTF1QyxFQUFFMnVDLDBCQUEwQixJQUFJcDhDLEVBQUVxOEMseUJBQXlCLElBQUkzdUMsRUFBRTR1QyxRQUFRLElBQUl2OUMsRUFBRXNjLEVBQUVraEMsSUFBSSxJQUFJNzVDLEVBQUUyWSxFQUFFbWhDLFlBQVksSUFBSWg4QyxFQUFFNmEsRUFBRW9oQyxRQUFRLElBQUk1OUMsRUFBRXdjLEVBQUVxaEMsb0JBQW9CLElBQUlqOEMsRUFBRWtOLEVBQUVnckMsZUFBZSxJQUFJbDZDLEVBQUVrNkMsZUFBZWpjLGNBQWMsSUFBSWorQixFQUFFaStCLGNBQWNILGNBQWMsSUFBSTk5QixFQUFFODlCLGNBQWMyYSxzQkFBc0IsSUFBSXo0QyxFQUFFeTRDLHNCQUFzQnlGLGNBQWMsSUFBSWg4QyxFQUFFQyxFQUFFZzhDLGNBQWMsSUFBSWo4QyxFQUFFUCxFQUFFeThDLGFBQWEsSUFBSW44QyxFQUFFOEQsRUFBRXM0QyxhQUFhLElBQUlwOEMsRUFBRWlCLEVBQUVvN0MsZ0JBQWdCLElBQUluOEMsRUFBRXlhLEVBQUUyaEMsU0FBUyxJQUFJcjVDLEVBQUVzNUMsOEJBQThCLElBQUkzOEMsRUFBRTQ4QyxHQUFHQyw4QkFBOEIsSUFBSTc4QyxFQUFFODhDLEdBQUdDLG9CQUFvQixJQUFJLzhDLEVBQUVnOUMsR0FBR0Msb0JBQW9CLElBQUlqOUMsRUFBRWs5QyxHQUFHQyxpQkFBaUIsSUFBSW45QyxFQUFFbzlDLEdBQUdDLGlCQUFpQixJQUFJcjlDLEVBQUVzOUMsR0FBR0Msa0JBQWtCLElBQUlsL0MsRUFBRTBCLEVBQUV5OUMsa0JBQWtCLElBQUluL0MsRUFBRW00QyxHQUFHaUgsNkJBQTZCLElBQUlwL0MsRUFBRWs0QyxHQUFHMkMsZUFBZSxJQUFJcDFDLEVBQUVvMUMsZUFBZXhjLGNBQWMsSUFBSTU0QixFQUFFNDRCLGNBQWMwZCxnQkFBZ0IsSUFBSWwyQyxFQUFFazJDLGdCQUFnQnRjLGFBQWEsSUFBSTU1QixFQUFFNDVCLGFBQWFULHdCQUF3QixJQUFJbjVCLEVBQUVtNUIsd0JBQXdCWSw4QkFBOEIsSUFBSS81QixFQUFFKzVCLDhCQUE4Qm9jLGlCQUFpQixJQUFJbjJDLEVBQUVtMkMsaUJBQWlCQyxTQUFTLElBQUlwMkMsRUFBRW8yQyxTQUFTQyxvQkFBb0IsSUFBSXIyQyxFQUFFcTJDLG9CQUFvQm1ELHdCQUF3QixJQUFJMzlDLEVBQUU0OUMsR0FBR0MsMEJBQTBCLElBQUk3OUMsRUFBRTg5QyxHQUFHQyw4QkFBOEIsSUFBSS85QyxFQUFFZytDLEdBQUdDLGdCQUFnQixJQUFJaitDLEVBQUVrK0MsR0FBR0MsZUFBZSxJQUFJN3dDLEVBQUU4d0MsYUFBYSxJQUFJMTJDLEVBQUV6SCxFQUFFbytDLGFBQWEsSUFBSTMyQyxFQUFFK0IsRUFBRTYwQyxzQkFBc0IsSUFBSTUrQyxFQUFFNCtDLHNCQUFzQi9JLGlDQUFpQyxJQUFJNzFDLEVBQUU2MUMsaUNBQWlDZ0osNkJBQTZCLElBQUk3K0MsRUFBRTYrQyw2QkFBNkJDLHVDQUF1QyxJQUFJOStDLEVBQUU4K0MsdUNBQXVDQywyQkFBMkIsSUFBSS8rQyxFQUFFKytDLDJCQUEyQkMscUNBQXFDLElBQUloL0MsRUFBRWcvQyxxQ0FBcUNDLHlCQUF5QixJQUFJai9DLEVBQUVpL0MseUJBQXlCQyxtQ0FBbUMsSUFBSWwvQyxFQUFFay9DLG1DQUFtQ0MseUJBQXlCLElBQUluL0MsRUFBRW0vQyx5QkFBeUJDLG1DQUFtQyxJQUFJcC9DLEVBQUVvL0MsbUNBQW1DQyx1QkFBdUIsSUFBSXIvQyxFQUFFcS9DLHVCQUF1QkMsaUNBQWlDLElBQUl0L0MsRUFBRXMvQyxpQ0FBaUNDLHdCQUF3QixJQUFJdi9DLEVBQUV1L0Msd0JBQXdCQyxrQ0FBa0MsSUFBSXgvQyxFQUFFdy9DLGtDQUFrQ0MseUJBQXlCLElBQUl6L0MsRUFBRXkvQyx5QkFBeUJDLG1DQUFtQyxJQUFJMS9DLEVBQUUwL0MsbUNBQW1DQyxtQkFBbUIsSUFBSTMvQyxFQUFFMi9DLG1CQUFtQkMsc0NBQXNDLElBQUk1L0MsRUFBRTQvQyxzQ0FBc0NDLGdEQUFnRCxJQUFJNy9DLEVBQUU2L0MsZ0RBQWdEQyxtQkFBbUIsSUFBSTkvQyxFQUFFOC9DLG1CQUFtQkMsc0NBQXNDLElBQUkvL0MsRUFBRSsvQyxzQ0FBc0NDLGdEQUFnRCxJQUFJaGdELEVBQUVnZ0QsZ0RBQWdEQyxvQkFBb0IsSUFBSWpnRCxFQUFFaWdELG9CQUFvQkMsdUNBQXVDLElBQUlsZ0QsRUFBRWtnRCx1Q0FBdUNDLGlEQUFpRCxJQUFJbmdELEVBQUVtZ0QsaURBQWlEQyxtQkFBbUIsSUFBSXBnRCxFQUFFb2dELG1CQUFtQkMsc0NBQXNDLElBQUlyZ0QsRUFBRXFnRCxzQ0FBc0NDLGdEQUFnRCxJQUFJdGdELEVBQUVzZ0QsZ0RBQWdEL2hCLHFCQUFxQixJQUFJditCLEVBQUV1K0IscUJBQXFCZ2lCLHdDQUF3QyxJQUFJdmdELEVBQUV1Z0Qsd0NBQXdDQyxrREFBa0QsSUFBSXhnRCxFQUFFd2dELGtEQUFrREMsdUJBQXVCLElBQUl6Z0QsRUFBRXlnRCx1QkFBdUJDLDBDQUEwQyxJQUFJMWdELEVBQUUwZ0QsMENBQTBDQyxvREFBb0QsSUFBSTNnRCxFQUFFMmdELG9EQUFvRHJpQixlQUFlLElBQUl0K0IsRUFBRXMrQixlQUFlc2lCLGtDQUFrQyxJQUFJNWdELEVBQUU0Z0Qsa0NBQWtDQyw0Q0FBNEMsSUFBSTdnRCxFQUFFNmdELDRDQUE0Q3BrQixvQkFBb0IsSUFBSTk5QixFQUFFODlCLG9CQUFvQkksWUFBWSxJQUFJbCtCLEVBQUVrK0IsWUFBWXVaLHdCQUF3QixJQUFJejNDLEVBQUV5M0Msd0JBQXdCMEssMEJBQTBCLElBQUluaUQsRUFBRW1pRCwwQkFBMEJDLDBCQUEwQixJQUFJcGlELEVBQUVvaUQsMEJBQTBCM2IsdUJBQXVCLElBQUl6bUMsRUFBRXltQyx1QkFBdUI0Yix3QkFBd0IsSUFBSS80QyxFQUFFMnRDLEdBQUdxTCxrQ0FBa0MsSUFBSWg1QyxFQUFFaTVDLEdBQUdDLHFDQUFxQyxJQUFJbDVDLEVBQUVtNUMsR0FBR0MscUNBQXFDLElBQUlwNUMsRUFBRXE1QyxHQUFHQywwQkFBMEIsSUFBSW41QyxFQUFFeEgsRUFBRTRnRCxnQ0FBZ0MsSUFBSXA1QyxFQUFFMUgsRUFBRStnRCxnQkFBZ0IsSUFBSTM0QyxFQUFFbkssRUFBRStpRCxlQUFlLElBQUlyNEMsRUFBRTQxQixHQUFHMGlCLG9CQUFvQixJQUFJdDRDLEVBQUU2MUIsR0FBRzBpQixtQkFBbUIsSUFBSXY0QyxFQUFFODFCLEdBQUcwaUIsWUFBWSxJQUFJeDRDLEVBQUUrMUIsR0FBRzBpQixZQUFZLElBQUl6NEMsRUFBRWcyQixHQUFHMGlCLFlBQVksSUFBSTE0QyxFQUFFaTJCLEdBQUcwaUIsYUFBYSxJQUFJMzRDLEVBQUVrMkIsR0FBRzBpQixVQUFVLElBQUk1NEMsRUFBRW0yQixHQUFHMGlCLGlCQUFpQixJQUFJNzRDLEVBQUVvMkIsR0FBRzBpQixjQUFjLElBQUk5NEMsRUFBRXEyQixHQUFHMGlCLG1CQUFtQixJQUFJLzRDLEVBQUVzMkIsR0FBRzBpQixhQUFhLElBQUloNUMsRUFBRXUyQixHQUFHMGlCLFFBQVEsSUFBSWo1QyxFQUFFdzJCLEdBQUcwaUIsY0FBYyxJQUFJbDVDLEVBQUV5MkIsR0FBRzBpQixZQUFZLElBQUluNUMsRUFBRTAyQixHQUFHMGlCLGVBQWUsSUFBSXA1QyxFQUFFMjJCLEdBQUcwaUIsd0JBQXdCLElBQUlyNUMsRUFBRTQyQixHQUFHMGlCLFFBQVEsSUFBSXQ1QyxFQUFFNjJCLEdBQUcwaUIsaUJBQWlCLElBQUl2NUMsRUFBRTgyQixHQUFHMGlCLGlCQUFpQixJQUFJeDVDLEVBQUUrMkIsR0FBRzBpQix3QkFBd0IsSUFBSXo1QyxFQUFFZzNCLEdBQUcwaUIsbUJBQW1CLElBQUkxNUMsRUFBRWkzQixHQUFHMGlCLHFCQUFxQixJQUFJMzVDLEVBQUVrM0IsR0FBR3FDLGdCQUFnQixJQUFJdjVCLEVBQUVtM0IsS0FBSyxJQUFJL2hDLEVBQUVELEVBQUUsTUFBTUUsRUFBRUYsRUFBRSxNQUFNdUIsRUFBRXZCLEVBQUUsTUFBTUcsRUFBRUgsRUFBRSxNQUFNbUQsRUFBRW5ELEVBQUUsTUFBTU8sRUFBRVAsRUFBRUMsRUFBRWtELEdBQUdDLEVBQUVwRCxFQUFFLE1BQU1JLEVBQUVKLEVBQUUsTUFBTXlELEVBQUV6RCxFQUFFLEtBQUtzQixFQUFFdEIsRUFBRSxNQUFNZ0MsRUFBRSxDQUFDLEVBQUUsSUFBSSxNQUFNbEMsS0FBS3dCLEVBQUUsQ0FBQyxVQUFVLGdDQUFnQyxrQkFBa0IsVUFBVSxZQUFZLGNBQWMsWUFBWSxZQUFZLDRCQUE0QiwyQkFBMkIsVUFBVSxNQUFNLGNBQWMsVUFBVSxzQkFBc0IsaUJBQWlCLGdCQUFnQixnQkFBZ0Isd0JBQXdCLGdCQUFnQixnQkFBZ0IsZUFBZSxlQUFlLGtCQUFrQixXQUFXLGdDQUFnQyxnQ0FBZ0Msc0JBQXNCLHNCQUFzQixtQkFBbUIsbUJBQW1CLG9CQUFvQixvQkFBb0IsK0JBQStCLGlCQUFpQixnQkFBZ0Isa0JBQWtCLGVBQWUsMEJBQTBCLGdDQUFnQyxtQkFBbUIsV0FBVyxzQkFBc0IsMEJBQTBCLDRCQUE0QixnQ0FBZ0Msa0JBQWtCLGtCQUFrQndPLFFBQVFoUSxHQUFHLElBQUlrQyxFQUFFbEMsR0FBRyxJQUFJd0IsRUFBRXhCLElBQUlFLEVBQUVRLEVBQUViLEVBQUVxQyxHQUFHLElBQUl4QixFQUFFUixFQUFFLE1BQU1tRSxFQUFFbkUsRUFBRSxNQUFNaUMsRUFBRWpDLEVBQUUsTUFBTU0sRUFBRU4sRUFBRSxNQUFNa0MsRUFBRWxDLEVBQUUsTUFBTW9DLEVBQUVwQyxFQUFFLE1BQU1tQyxFQUFFbkMsRUFBRSxNQUFNcUMsRUFBRXJDLEVBQUUsTUFBTW9GLEVBQUVwRixFQUFFLEtBQUsrQixFQUFFL0IsRUFBRSxNQUFNNkYsRUFBRTdGLEVBQUUsTUFBTWlHLEVBQUVqRyxFQUFFLE1BQU04QixFQUFFOUIsRUFBRSxNQUFNd0osRUFBRXhKLEVBQUUsTUFBTXdCLEVBQUV4QixFQUFFLE1BQU15SixFQUFFekosRUFBRSxLQUFLNEosRUFBRTVKLEVBQUUsTUFBTXNLLEVBQUV0SyxFQUFFLE1BQU02SyxFQUFFN0ssRUFBRSxNQUFNbUwsRUFBRW5MLEVBQUUsTUFBTXdXLE9BQU8sTUFBTXBMLEVBQUVELEVBQUVuRixLQUFLLENBQUMsR0FBRyxLQUFLc0YsRUFBRSxxRUFBcUUsU0FBU0MsRUFBRXpMLEVBQUVILEdBQUcsUUFBRyxJQUFTRyxFQUFFa0csS0FBSyxDQUFDLE1BQU1oRyxFQUFFQyxFQUFFaStCLHFCQUFxQnYrQixHQUFHRyxFQUFFa0csS0FBSzlGLEVBQUVpK0IsY0FBY24rQixFQUFFazZCLFVBQVUsQ0FBQyxNQUFNbDZCLEVBQUVHLEVBQUV5bUMsdUJBQXVCOW1DLEdBQUcsTUFBTSxDQUFDOG5DLEtBQUs1bkMsRUFBRTRuQyxPQUFPai9CLFdBQVd1M0IsS0FBS2xnQyxFQUFFNitCLFFBQVFsL0IsR0FBRyxDQUFDLFNBQVM2TCxFQUFFMUwsRUFBRUgsR0FBRyxPQUFPLElBQUl5RCxFQUFFMFosRUFBRWhkLEdBQUdzbEMsUUFBUXpsQyxFQUFFLENBQUMsU0FBU2dNLEVBQUU3TCxFQUFFSCxHQUFHLE1BQU1LLEVBQUVtTCxFQUFFbkYsS0FBS3ZDLEVBQUV3OEIsYUFBYTcwQixFQUFFdEwsSUFBSSxPQUFPRyxFQUFFdTZCLEtBQUt4NkIsRUFBRUwsRUFBRSxDQUFDLFNBQVNpTSxFQUFFOUwsRUFBRUgsRUFBRUssR0FBRyxNQUFNdUIsRUFBRTRKLEVBQUVuRixLQUFLdkMsRUFBRXc4QixhQUFhNzBCLEVBQUV0TCxJQUFJSyxFQUFFRCxFQUFFODlCLGNBQWNoK0IsR0FBR2s2QixVQUFVLE9BQU9qNkIsRUFBRXk2QixPQUFPbjVCLEVBQUU1QixFQUFFUSxFQUFFLENBQUMsU0FBUzBCLEVBQUUvQixHQUFHLE9BQU8sSUFBSThFLFdBQVdyRCxFQUFFaUMsT0FBTzFELEdBQUcsQ0FBQyxTQUFTb1AsRUFBRXBQLEdBQUcsT0FBT3lCLEVBQUU4RCxPQUFPdkYsRUFBRSxDQUFDLE1BQU0yQixFQUFFLElBQUkwRCxNQUFNbUcsR0FBRzZELEVBQUUsSUFBSWhLLE1BQU0vRSxFQUFFazRDLElBQUlscEMsRUFBRTdPLEdBQUUsRUFBRyxLQUFLLENBQUNULEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRUEsRUFBRUwsR0FBR0ssRUFBRVEsRUFBRWIsRUFBRSxDQUFDeWlELGtDQUFrQyxJQUFJamlELEVBQUUyL0IsZUFBZSxJQUFJMzhCLEVBQUVrL0MsNENBQTRDLElBQUk5aEQsRUFBRTJoRCwwQ0FBMEMsSUFBSTkrQyxFQUFFNitDLHVCQUF1QixJQUFJN2hELEVBQUUraEQsb0RBQW9ELElBQUkxK0MsRUFBRTg5QyxzQ0FBc0MsSUFBSWpnRCxFQUFFZ2dELG1CQUFtQixJQUFJdC9DLEVBQUV3L0MsZ0RBQWdELElBQUloaEQsRUFBRTRnRCxzQ0FBc0MsSUFBSWo5QyxFQUFFZzlDLG1CQUFtQixJQUFJbC9DLEVBQUVvL0MsZ0RBQWdELElBQUkvZ0QsRUFBRW9oRCx1Q0FBdUMsSUFBSXgvQyxFQUFFdS9DLG9CQUFvQixJQUFJci9DLEVBQUV1L0MsaURBQWlELElBQUl4L0MsRUFBRTAvQyxzQ0FBc0MsSUFBSXgvQyxFQUFFdS9DLG1CQUFtQixJQUFJeDhDLEVBQUUwOEMsZ0RBQWdELElBQUkvL0MsRUFBRWdnRCx3Q0FBd0MsSUFBSWw4QyxFQUFFazZCLHFCQUFxQixJQUFJOTVCLEVBQUUrN0Msa0RBQWtELElBQUlsZ0QsRUFBRTIrQyx5QkFBeUIsSUFBSWozQyxFQUFFazNDLG1DQUFtQyxJQUFJbC9DLEVBQUV5L0MseUJBQXlCLElBQUl4M0MsRUFBRXkzQyxtQ0FBbUMsSUFBSXQzQyxFQUFFKzJDLHlCQUF5QixJQUFJcjJDLEVBQUVzMkMsbUNBQW1DLElBQUkvMUMsRUFBRWsyQyx3QkFBd0IsSUFBSTUxQyxFQUFFNjFDLGtDQUFrQyxJQUFJNTFDLEVBQUVtMUMsMkJBQTJCLElBQUlqMUMsRUFBRWsxQyxxQ0FBcUMsSUFBSWoxQyxFQUFFODBDLDZCQUE2QixJQUFJNzBDLEVBQUU4MEMsdUNBQXVDLElBQUkzMEMsRUFBRWsxQyx1QkFBdUIsSUFBSWoxQyxFQUFFazFDLGlDQUFpQyxJQUFJai9DLEVBQUV1K0Msc0JBQXNCLElBQUlsZ0QsRUFBRWczQyxHQUFHRyxpQ0FBaUMsSUFBSW5vQyxJQUFJLElBQUlqUCxFQUFFRCxFQUFFLE1BQU1FLEVBQUVGLEVBQUUsTUFBTXVCLEVBQUV2QixFQUFFLE1BQU0sU0FBU0csRUFBRUwsRUFBRUgsRUFBRUssRUFBRUUsRUFBRUMsRUFBRWdELEVBQUU1QyxHQUFHLE1BQU02QyxFQUFFLENBQUM0QyxLQUFLbEcsRUFBRXkrQixHQUFHNStCLEVBQUU2K0IsT0FBT3grQixFQUFFZy9CLGlCQUFpQjkrQixFQUFFbTdCLEtBQUtsN0IsRUFBRXUyQyxnQkFBZ0J2ekMsRUFBRVcsS0FBS3ZDLEVBQUVwQixFQUFFK2lDLElBQUl1aEIsUUFBUWxrRCxHQUFHLE9BQU8sSUFBSU4sRUFBRW8rQixZQUFZajdCLEVBQUUsQ0FBQyxTQUFTRCxFQUFFckQsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsRUFBRXFCLEVBQUU0QixFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsR0FBRyxPQUFPdEQsRUFBRUwsRUFBRUgsRUFBRU0sRUFBRUMsRUFBRUssRUFBRSxDQUFDeThCLFlBQVk1NUIsRUFBRTI1QixVQUFVMzhCLEVBQUUwN0IsV0FBV3Y2QixFQUFFdzZCLFVBQVU1NEIsRUFBRTI1QixJQUFJOThCLEdBQUd5RCxFQUFFLENBQUMsU0FBU2xELEVBQUVULEdBQUcsT0FBT0ssRUFBRUwsRUFBRWtHLEtBQUtsRyxFQUFFeStCLEdBQUd6K0IsRUFBRTArQixPQUFPMStCLEVBQUVrL0IsaUJBQWlCbC9CLEVBQUV1N0IsS0FBS3Y3QixFQUFFNDJDLGdCQUFnQjUyQyxFQUFFOHpDLFFBQVEsQ0FBQyxTQUFTeHdDLEVBQUV0RCxFQUFFSCxFQUFFSyxFQUFFRSxFQUFFQyxFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEdBQUUsRUFBR25DLEdBQUcsTUFBTVUsRUFBRSxDQUFDZ0UsS0FBS2xHLEVBQUV1N0IsS0FBSzE3QixFQUFFK2tELFFBQVExa0QsRUFBRTJrRCxhQUFhemtELEVBQUUwa0QsVUFBVXprRCxFQUFFMGtELFNBQVMxaEQsRUFBRW9wQyxnQkFBZ0Joc0MsRUFBRW0yQyxnQkFBZ0J0ekMsRUFBRVUsS0FBS3ZDLEVBQUVwQixFQUFFZ2pDLE9BQU9zaEIsUUFBUXJrRCxFQUFFMGtELGlCQUFpQnJoRCxFQUFFaXBDLGNBQWNwckMsR0FBRyxPQUFPLElBQUlyQixFQUFFbytCLFlBQVlyOEIsRUFBRSxDQUFDLFNBQVM1QixFQUFFTixFQUFFSCxFQUFFSyxFQUFFQyxFQUFFQyxFQUFFcUIsRUFBRXBCLEVBQUVnRCxFQUFFNUMsRUFBRUgsRUFBRXFELEVBQUVuQyxFQUFFVSxFQUFFeEIsR0FBRSxFQUFHMkQsR0FBRyxPQUFPZixFQUFFdEQsRUFBRUksRUFBRWlELEVBQUU1QyxFQUFFSCxFQUFFcUQsRUFBRW5DLEVBQUUsQ0FBQzA3QixZQUFZejdCLEVBQUV3N0IsVUFBVTU4QixFQUFFMjdCLFdBQVc5N0IsRUFBRSs3QixVQUFVOTdCLEVBQUU2OEIsSUFBSW45QixHQUFHcUMsRUFBRXhCLEVBQUUyRCxFQUFFLENBQUMsU0FBU1YsRUFBRTNELEdBQUcsT0FBT3NELEVBQUV0RCxFQUFFa0csS0FBS2xHLEVBQUV1N0IsS0FBS3Y3QixFQUFFNGtELFFBQVE1a0QsRUFBRTZrRCxhQUFhN2tELEVBQUU4a0QsVUFBVTlrRCxFQUFFK2tELFNBQVMva0QsRUFBRXlzQyxnQkFBZ0J6c0MsRUFBRTQyQyxnQkFBZ0I1MkMsRUFBRTh6QyxRQUFROXpDLEVBQUVnbEQsaUJBQWlCaGxELEVBQUU0c0MsY0FBYyxDQUFDLFNBQVNwckMsRUFBRXhCLEVBQUVILEVBQUVLLEVBQUVFLEVBQUVDLEVBQUVnRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRW5DLEVBQUVVLEVBQUV4QixFQUFFMkQsRUFBRWxDLEdBQUcsTUFBTTNCLEVBQUUsQ0FBQzBGLEtBQUtsRyxFQUFFdTdCLEtBQUsxN0IsRUFBRSsyQyxnQkFBZ0J2eUMsRUFBRTRnRCxXQUFXL2tELEVBQUVnbEQsY0FBYzlrRCxFQUFFK2tELG1CQUFtQjlrRCxFQUFFK2tELGNBQWN6aEQsRUFBRTBoRCxVQUFVN2pELEVBQUU4akQsU0FBU3BqRCxFQUFFcWpELGtCQUFrQjdrRCxFQUFFOGtELGFBQWFuaUQsRUFBRW9pRCxhQUFhaGxELEVBQUVpbEQsWUFBWXBpRCxFQUFFcWlELGNBQWNybEQsRUFBRTBELEtBQUt2QyxFQUFFcEIsRUFBRWlqQyxLQUFLcWhCLFFBQVF4aUQsR0FBRyxPQUFPLElBQUloQyxFQUFFbytCLFlBQVkvOUIsRUFBRSxDQUFDLFNBQVMwQixFQUFFbEMsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsRUFBRXFCLEVBQUVwQixFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUV6QixFQUFFeEIsRUFBRTJELEVBQUVsQyxFQUFFM0IsRUFBRTRCLEVBQUVFLEdBQUcsT0FBT2QsRUFBRXhCLEVBQUVJLEVBQUVpRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRXpCLEVBQUV4QixFQUFFMkQsRUFBRWxDLEVBQUUzQixFQUFFNEIsRUFBRSxDQUFDODZCLFlBQVl6N0IsRUFBRXc3QixVQUFVNThCLEVBQUUyN0IsV0FBVzk3QixFQUFFKzdCLFVBQVU5N0IsRUFBRTY4QixJQUFJbjlCLEdBQUd5QyxFQUFFLENBQUMsU0FBUzVCLEVBQUVWLEdBQUcsT0FBT3dCLEVBQUV4QixFQUFFa0csS0FBS2xHLEVBQUV1N0IsS0FBS3Y3QixFQUFFZ3ZCLE1BQU1odkIsRUFBRTJ0QyxTQUFTM3RDLEVBQUU2dEMsY0FBYzd0QyxFQUFFK3RDLFFBQVEvdEMsRUFBRWt1QyxRQUFRbHVDLEVBQUU4dEMsT0FBTzl0QyxFQUFFNHRDLFNBQVM1dEMsRUFBRW11QyxTQUFTbnVDLEVBQUVxbEQsVUFBVXJsRCxFQUFFc2xELFNBQVN0bEQsRUFBRXVsRCxrQkFBa0J2bEQsRUFBRTQyQyxnQkFBZ0I1MkMsRUFBRTh6QyxRQUFRLENBQUMsU0FBU3p2QyxFQUFFckUsRUFBRUgsRUFBRUssRUFBRUUsRUFBRUMsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEdBQUUsRUFBR3FELEdBQUcsR0FBR3JELFNBQUksSUFBU0YsUUFBRyxJQUFTQyxRQUFHLElBQVNnRCxRQUFHLElBQVM1QyxHQUFHLE1BQU00RSxNQUFNLDRGQUE0RixNQUFNN0QsRUFBRSxDQUFDMEUsS0FBS2xHLEVBQUU0MkMsZ0JBQWdCdHpDLEVBQUVvdUMsV0FBV3h4QyxFQUFFc2xELGFBQWFwbEQsRUFBRXFsRCxhQUFhcGxELEVBQUVxbEQsWUFBWXJpRCxFQUFFc2lELGNBQWNsbEQsRUFBRXVELEtBQUt2QyxFQUFFcEIsRUFBRWlqQyxLQUFLL0gsS0FBSzE3QixFQUFFOGtELFFBQVFoaEQsR0FBRyxPQUFPLElBQUl4RCxFQUFFbytCLFlBQVkvOEIsRUFBRSxDQUFDLFNBQVNXLEVBQUVuQyxFQUFFSCxFQUFFSyxFQUFFQyxFQUFFQyxFQUFFcUIsRUFBRXBCLEVBQUVnRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRW5DLEdBQUUsRUFBR1UsR0FBRyxPQUFPbUMsRUFBRXJFLEVBQUVJLEVBQUVpRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRSxDQUFDdTVCLFlBQVl6N0IsRUFBRXc3QixVQUFVNThCLEVBQUUyN0IsV0FBVzk3QixFQUFFKzdCLFVBQVU5N0IsRUFBRTY4QixJQUFJbjlCLEdBQUcyQixFQUFFVSxFQUFFLENBQUMsU0FBUzFCLEVBQUVSLEdBQUcsT0FBT3FFLEVBQUVyRSxFQUFFa0csS0FBS2xHLEVBQUV1N0IsS0FBS3Y3QixFQUFFMHhDLFdBQVcxeEMsRUFBRSt0QyxRQUFRL3RDLEVBQUVrdUMsUUFBUWx1QyxFQUFFOHRDLE9BQU85dEMsRUFBRTR0QyxTQUFTNXRDLEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUU0bEQsMkJBQTJCNWxELEVBQUU4ekMsUUFBUSxDQUFDLFNBQVMxeEMsRUFBRXBDLEVBQUVILEVBQUVLLEVBQUVFLEVBQUVDLEdBQUcsTUFBTWdELEVBQUUsQ0FBQzZDLEtBQUtsRyxFQUFFNDJDLGdCQUFnQngyQyxFQUFFc3hDLFdBQVd4eEMsRUFBRThELEtBQUt2QyxFQUFFcEIsRUFBRWlqQyxLQUFLL0gsS0FBSzE3QixFQUFFOGtELFFBQVF0a0QsR0FBRyxPQUFPLElBQUlGLEVBQUVvK0IsWUFBWWw3QixFQUFFLENBQUMsU0FBU2YsRUFBRXRDLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixFQUFFcEIsRUFBRWdELEVBQUU1QyxHQUFHLE9BQU8yQixFQUFFcEMsRUFBRUksRUFBRWlELEVBQUUsQ0FBQzY1QixZQUFZejdCLEVBQUV3N0IsVUFBVTU4QixFQUFFMjdCLFdBQVc5N0IsRUFBRSs3QixVQUFVOTdCLEVBQUU2OEIsSUFBSW45QixHQUFHWSxFQUFFLENBQUMsU0FBUzRCLEVBQUVyQyxHQUFHLE9BQU9vQyxFQUFFcEMsRUFBRWtHLEtBQUtsRyxFQUFFdTdCLEtBQUt2N0IsRUFBRTB4QyxXQUFXMXhDLEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUU4ekMsUUFBUSxDQUFDLFNBQVN2eEMsRUFBRXZDLEVBQUVILEVBQUVLLEVBQUVFLEVBQUVDLEVBQUVnRCxFQUFFNUMsR0FBRyxNQUFNNkMsRUFBRSxDQUFDNEMsS0FBS2xHLEVBQUVnRSxLQUFLdkMsRUFBRXBCLEVBQUVtakMsS0FBS3FpQixjQUFjemxELEVBQUVzeEMsV0FBV3h4QyxFQUFFNGxELFlBQVl6bEQsRUFBRWs3QixLQUFLMTdCLEVBQUUrMkMsZ0JBQWdCdnpDLEVBQUVzaEQsUUFBUWxrRCxHQUFHLE9BQU8sSUFBSU4sRUFBRW8rQixZQUFZajdCLEVBQUUsQ0FBQyxTQUFTZ0MsRUFBRXRGLEVBQUVILEVBQUVLLEVBQUVDLEVBQUVDLEVBQUVxQixFQUFFcEIsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEdBQUcsT0FBT2lDLEVBQUV2QyxFQUFFSSxFQUFFaUQsRUFBRTVDLEVBQUU2QyxFQUFFLENBQUM0NUIsWUFBWXo3QixFQUFFdzdCLFVBQVU1OEIsRUFBRTI3QixXQUFXOTdCLEVBQUUrN0IsVUFBVTk3QixFQUFFNjhCLElBQUluOUIsR0FBR1MsRUFBRSxDQUFDLFNBQVMyQixFQUFFakMsR0FBRyxPQUFPdUMsRUFBRXZDLEVBQUVrRyxLQUFLbEcsRUFBRXU3QixLQUFLdjdCLEVBQUUweEMsV0FBVzF4QyxFQUFFK2xELGFBQWEvbEQsRUFBRThsRCxZQUFZOWxELEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUU4ekMsUUFBUSxDQUFDLFNBQVMvdEMsRUFBRS9GLEVBQUVILEVBQUVLLEVBQUVFLEVBQUVDLEVBQUVnRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxHQUFHLE1BQU1xRCxFQUFFLENBQUNLLEtBQUt2QyxFQUFFcEIsRUFBRWtqQyxNQUFNcjlCLEtBQUtsRyxFQUFFeStCLEdBQUc1K0IsRUFBRTYrQixPQUFPcitCLEVBQUV1MkMsZ0JBQWdCdHpDLEVBQUVvdUMsV0FBV2p4QyxFQUFFODZCLEtBQUtsNEIsRUFBRTJpRCxzQkFBc0I1bEQsRUFBRTgrQixpQkFBaUJoL0IsRUFBRXlrRCxRQUFRcmtELEdBQUcsT0FBTyxJQUFJSCxFQUFFbytCLFlBQVk1NkIsRUFBRSxDQUFDLFNBQVN3QyxFQUFFbkcsRUFBRUgsRUFBRUssRUFBRUMsRUFBRUMsRUFBRXFCLEVBQUVwQixFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUVuQyxHQUFHLE9BQU91RSxFQUFFL0YsRUFBRUgsRUFBRUssRUFBRUMsRUFBRXNCLEVBQUVoQixFQUFFa0QsRUFBRSxDQUFDdTVCLFlBQVk1NUIsRUFBRTI1QixVQUFVMzhCLEVBQUUwN0IsV0FBVzM3QixFQUFFNDdCLFVBQVU1NEIsRUFBRTI1QixJQUFJNThCLEdBQUdvQixFQUFFLENBQUMsU0FBU1EsRUFBRWhDLEdBQUcsT0FBTytGLEVBQUUvRixFQUFFa0csS0FBS2xHLEVBQUV5K0IsR0FBR3orQixFQUFFay9CLGlCQUFpQmwvQixFQUFFaW1ELGlCQUFpQmptRCxFQUFFMCtCLE9BQU8xK0IsRUFBRXU3QixLQUFLdjdCLEVBQUUweEMsV0FBVzF4QyxFQUFFNDJDLGdCQUFnQjUyQyxFQUFFOHpDLFFBQVEsQ0FBQyxTQUFTcHFDLEVBQUUxSixFQUFFSCxFQUFFSyxFQUFFRSxFQUFFQyxFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUVuQyxFQUFFVSxFQUFFeEIsRUFBRTJELEVBQUVsQyxFQUFFM0IsRUFBRTRCLEdBQUcsTUFBTUUsRUFBRSxDQUFDMEIsS0FBS3ZDLEVBQUVwQixFQUFFb2pDLEtBQUt2OUIsS0FBS2xHLEVBQUU0MkMsZ0JBQWdCLzJDLEVBQUUwdkMsU0FBUyxFQUFFMlcsY0FBY2htRCxFQUFFKzRDLGFBQWE1MUMsRUFBRTYxQyxtQkFBbUJ6NEMsRUFBRTA0QyxjQUFjNzFDLEVBQUU4MUMsb0JBQW9COTRDLEVBQUV5NEMsbUJBQW1CMzRDLEVBQUU0NEMsZ0JBQWdCMzRDLEVBQUVtM0MsUUFBUTd6QyxFQUFFZzFDLFlBQVluM0MsRUFBRW8zQyxlQUFlMTJDLEVBQUU0MkMsaUJBQWlCcDRDLEVBQUU2NkIsS0FBS2wzQixFQUFFaTZCLE1BQU1uOEIsRUFBRXdpRCxRQUFRbmtELEVBQUUyMkMsV0FBVy8wQyxHQUFHLE9BQU8sSUFBSWpDLEVBQUVvK0IsWUFBWWo4QixFQUFFLENBQUMsU0FBU1osRUFBRTFCLEdBQUcsT0FBTzBKLEVBQUUxSixFQUFFa0csS0FBS2xHLEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUU2MkMsV0FBVzcyQyxFQUFFZ3RDLGdCQUFnQmh0QyxFQUFFODJDLGFBQWE5MkMsRUFBRWkzQyxhQUFhajNDLEVBQUVrM0MsbUJBQW1CbDNDLEVBQUUrMkMsY0FBYy8yQyxFQUFFZzNDLG9CQUFvQmgzQyxFQUFFdzNDLFFBQVF4M0MsRUFBRWd2QyxTQUFTaHZDLEVBQUV5M0MsWUFBWXozQyxFQUFFMDNDLGNBQWMxM0MsRUFBRXU3QixLQUFLdjdCLEVBQUVzK0IsTUFBTXQrQixFQUFFOHpDLFFBQVE5ekMsRUFBRW0zQyxXQUFXLENBQUMsU0FBU3h0QyxFQUFFM0osRUFBRUgsRUFBRUssRUFBRUcsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEVBQUVxRCxFQUFFbkMsRUFBRVUsRUFBRXhCLEdBQUcsTUFBTTJELEVBQUUsQ0FBQ0wsS0FBS3ZDLEVBQUVwQixFQUFFb2pDLEtBQUt2OUIsS0FBS2xHLEVBQUU0MkMsZ0JBQWdCLzJDLEVBQUUwdkMsU0FBU3J2QyxFQUFFNjRDLG1CQUFtQjE0QyxFQUFFNmxELGNBQWM5bEQsRUFBRWczQyxHQUFHQyxvQkFBb0IyQixnQkFBZ0IzMUMsRUFBRW0wQyxRQUFRLzJDLEVBQUVrNEMsWUFBWXIxQyxFQUFFczFDLGVBQWV0NEMsRUFBRXc0QyxpQkFBaUJuMUMsRUFBRTQzQixLQUFLLzVCLEVBQUU4OEIsTUFBTXA4QixFQUFFeWlELFFBQVFqa0QsR0FBRyxPQUFPLElBQUlQLEVBQUVvK0IsWUFBWWw2QixFQUFFLENBQUMsU0FBU3lGLEVBQUU5SixHQUFHLE9BQU8ySixFQUFFM0osRUFBRWtHLEtBQUtsRyxFQUFFNDJDLGdCQUFnQjUyQyxFQUFFdXZDLFNBQVN2dkMsRUFBRWd0QyxnQkFBZ0JodEMsRUFBRTgyQyxhQUFhOTJDLEVBQUV3M0MsUUFBUXgzQyxFQUFFZ3ZDLFNBQVNodkMsRUFBRXkzQyxZQUFZejNDLEVBQUUwM0MsY0FBYzEzQyxFQUFFdTdCLEtBQUt2N0IsRUFBRXMrQixNQUFNdCtCLEVBQUU4ekMsUUFBUSxDQUFDLFNBQVN0cEMsRUFBRXhLLEVBQUVILEVBQUVLLEVBQUVHLEVBQUVnRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRW5DLEdBQUcsTUFBTVUsRUFBRSxDQUFDOEIsS0FBS3ZDLEVBQUVwQixFQUFFb2pDLEtBQUt2OUIsS0FBS2xHLEVBQUU0MkMsZ0JBQWdCLzJDLEVBQUUwdkMsU0FBU3J2QyxFQUFFZ21ELGNBQWM5bEQsRUFBRWczQyxHQUFHK08sb0JBQW9CM08sUUFBUW4zQyxFQUFFczRDLFlBQVl0MUMsRUFBRXUxQyxlQUFlbjRDLEVBQUVxNEMsaUJBQWlCeDFDLEVBQUVpNEIsS0FBS2o3QixFQUFFZytCLE1BQU0zNkIsRUFBRWdoRCxRQUFRbmpELEdBQUcsT0FBTyxJQUFJckIsRUFBRW8rQixZQUFZcjhCLEVBQUUsQ0FBQyxTQUFTNkksRUFBRS9LLEdBQUcsT0FBT3dLLEVBQUV4SyxFQUFFa0csS0FBS2xHLEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUV1dkMsU0FBU3Z2QyxFQUFFdzNDLFFBQVF4M0MsRUFBRWd2QyxTQUFTaHZDLEVBQUV5M0MsWUFBWXozQyxFQUFFMDNDLGNBQWMxM0MsRUFBRXU3QixLQUFLdjdCLEVBQUVzK0IsTUFBTXQrQixFQUFFOHpDLFFBQVEsQ0FBQyxTQUFTem9DLEVBQUVyTCxFQUFFSCxFQUFFSyxFQUFFRyxFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUVuQyxHQUFHLE1BQU1VLEVBQUUsQ0FBQzhCLEtBQUt2QyxFQUFFcEIsRUFBRW9qQyxLQUFLdjlCLEtBQUtsRyxFQUFFNDJDLGdCQUFnQi8yQyxFQUFFMHZDLFNBQVNydkMsRUFBRWdtRCxjQUFjOWxELEVBQUVnM0MsR0FBR2dQLFFBQVE1TyxRQUFRbjNDLEVBQUVzNEMsWUFBWXQxQyxFQUFFdTFDLGVBQWVuNEMsRUFBRXE0QyxpQkFBaUJ4MUMsRUFBRWk0QixLQUFLajdCLEVBQUVnK0IsTUFBTTM2QixFQUFFZ2hELFFBQVFuakQsR0FBRyxPQUFPLElBQUlyQixFQUFFbytCLFlBQVlyOEIsRUFBRSxDQUFDLFNBQVNvSixFQUFFdEwsR0FBRyxPQUFPcUwsRUFBRXJMLEVBQUVrRyxLQUFLbEcsRUFBRTQyQyxnQkFBZ0I1MkMsRUFBRXV2QyxTQUFTdnZDLEVBQUV3M0MsUUFBUXgzQyxFQUFFZ3ZDLFNBQVNodkMsRUFBRXkzQyxZQUFZejNDLEVBQUUwM0MsY0FBYzEzQyxFQUFFdTdCLEtBQUt2N0IsRUFBRXMrQixNQUFNdCtCLEVBQUU4ekMsUUFBUSxDQUFDLFNBQVN0b0MsRUFBRXhMLEVBQUVILEVBQUVLLEVBQUVHLEVBQUVnRCxFQUFFNUMsRUFBRTZDLEVBQUVoRCxFQUFFcUQsRUFBRW5DLEdBQUcsTUFBTVUsRUFBRSxDQUFDOEIsS0FBS3ZDLEVBQUVwQixFQUFFb2pDLEtBQUt2OUIsS0FBS2xHLEVBQUU0MkMsZ0JBQWdCLzJDLEVBQUUwdkMsU0FBU3J2QyxFQUFFZ21ELGNBQWM5bEQsRUFBRWczQyxHQUFHaVAsV0FBVzdPLFFBQVFuM0MsRUFBRXM0QyxZQUFZdDFDLEVBQUV1MUMsZUFBZW40QyxFQUFFcTRDLGlCQUFpQngxQyxFQUFFaTRCLEtBQUtqN0IsRUFBRWcrQixNQUFNMzZCLEVBQUVnaEQsUUFBUW5qRCxHQUFHLE9BQU8sSUFBSXJCLEVBQUVvK0IsWUFBWXI4QixFQUFFLENBQUMsU0FBU3VKLEVBQUV6TCxHQUFHLE9BQU93TCxFQUFFeEwsRUFBRWtHLEtBQUtsRyxFQUFFNDJDLGdCQUFnQjUyQyxFQUFFdXZDLFNBQVN2dkMsRUFBRXczQyxRQUFReDNDLEVBQUVndkMsU0FBU2h2QyxFQUFFeTNDLFlBQVl6M0MsRUFBRTAzQyxjQUFjMTNDLEVBQUV1N0IsS0FBS3Y3QixFQUFFcytCLE1BQU10K0IsRUFBRTh6QyxRQUFRLENBQUMsU0FBU3BvQyxFQUFFMUwsRUFBRUgsRUFBRUssRUFBRUcsRUFBRWdELEVBQUU1QyxFQUFFNkMsRUFBRWhELEVBQUVxRCxFQUFFbkMsR0FBRyxNQUFNVSxFQUFFLENBQUM4QixLQUFLdkMsRUFBRXBCLEVBQUVvakMsS0FBS3Y5QixLQUFLbEcsRUFBRTQyQyxnQkFBZ0IvMkMsRUFBRTB2QyxTQUFTcnZDLEVBQUVnbUQsY0FBYzlsRCxFQUFFZzNDLEdBQUdrUCxhQUFhOU8sUUFBUW4zQyxFQUFFczRDLFlBQVl0MUMsRUFBRXUxQyxlQUFlbjRDLEVBQUVxNEMsaUJBQWlCeDFDLEVBQUVpNEIsS0FBS2o3QixFQUFFZytCLE1BQU0zNkIsRUFBRWdoRCxRQUFRbmpELEdBQUcsT0FBTyxJQUFJckIsRUFBRW8rQixZQUFZcjhCLEVBQUUsQ0FBQyxTQUFTMkosRUFBRTdMLEdBQUcsT0FBTzBMLEVBQUUxTCxFQUFFa0csS0FBS2xHLEVBQUU0MkMsZ0JBQWdCNTJDLEVBQUV1dkMsU0FBU3Z2QyxFQUFFdzNDLFFBQVF4M0MsRUFBRWd2QyxTQUFTaHZDLEVBQUV5M0MsWUFBWXozQyxFQUFFMDNDLGNBQWMxM0MsRUFBRXU3QixLQUFLdjdCLEVBQUVzK0IsTUFBTXQrQixFQUFFOHpDLFFBQVEsQ0FBQyxTQUFTaG9DLEVBQUU5TCxFQUFFSCxFQUFFSyxFQUFFRyxFQUFFZ0QsRUFBRTVDLEVBQUU2QyxFQUFFaEQsRUFBRXFELEVBQUVuQyxHQUFHLE1BQU1VLEVBQUUsQ0FBQzhCLEtBQUt2QyxFQUFFcEIsRUFBRW9qQyxLQUFLdjlCLEtBQUtsRyxFQUFFNDJDLGdCQUFnQi8yQyxFQUFFMHZDLFNBQVNydkMsRUFBRWdtRCxjQUFjOWxELEVBQUVnM0MsR0FBR08sT0FBT0gsUUFBUW4zQyxFQUFFczRDLFlBQVl0MUMsRUFBRXUxQyxlQUFlbjRDLEVBQUVxNEMsaUJBQWlCeDFDLEVBQUVpNEIsS0FBS2o3QixFQUFFZytCLE1BQU0zNkIsRUFBRWdoRCxRQUFRbmpELEdBQUcsT0FBTyxJQUFJckIsRUFBRW8rQixZQUFZcjhCLEVBQUUsQ0FBQyxTQUFTSCxFQUFFL0IsR0FBRyxPQUFPOEwsRUFBRTlMLEVBQUVrRyxLQUFLbEcsRUFBRTQyQyxnQkFBZ0I1MkMsRUFBRXV2QyxTQUFTdnZDLEVBQUV3M0MsUUFBUXgzQyxFQUFFZ3ZDLFNBQVNodkMsRUFBRXkzQyxZQUFZejNDLEVBQUUwM0MsY0FBYzEzQyxFQUFFdTdCLEtBQUt2N0IsRUFBRXMrQixNQUFNdCtCLEVBQUU4ekMsUUFBUSxDQUFDLFNBQVMxa0MsRUFBRXBQLEdBQUcsTUFBTUgsRUFBRSxDQUFDbUUsS0FBS3ZDLEVBQUVwQixFQUFFb2pDLEtBQUt2OUIsS0FBS2xHLEVBQUVrRyxLQUFLMHdDLGdCQUFnQjUyQyxFQUFFNDJDLGdCQUFnQnJILFNBQVN2dkMsRUFBRXV2QyxTQUFTMlcsY0FBY2xtRCxFQUFFNjJDLFdBQVdvQyxhQUFhajVDLEVBQUVpM0MsYUFBYWlDLG1CQUFtQmw1QyxFQUFFazNDLG1CQUFtQmlDLGNBQWNuNUMsRUFBRSsyQyxjQUFjcUMsb0JBQW9CcDVDLEVBQUVnM0Msb0JBQW9CK0IsbUJBQW1CLzRDLEVBQUVndEMsZ0JBQWdCZ00sZ0JBQWdCaDVDLEVBQUU4MkMsYUFBYVUsUUFBUXgzQyxFQUFFdzNDLFFBQVFtQixZQUFZMzRDLEVBQUVndkMsU0FBUzRKLGVBQWU1NEMsRUFBRXkzQyxZQUFZcUIsaUJBQWlCOTRDLEVBQUUwM0MsY0FBY25jLEtBQUt2N0IsRUFBRXU3QixLQUFLK0MsTUFBTXQrQixFQUFFcytCLE1BQU1xbUIsUUFBUTNrRCxFQUFFOHpDLFFBQVFxRCxXQUFXbjNDLEVBQUVtM0MsWUFBWSxPQUFPLElBQUloM0MsRUFBRW8rQixZQUFZMStCLEVBQUUsR0FBRyxLQUFLLENBQUNHLEVBQUVILEVBQUVLLEtBQUssYUFBYUEsRUFBRVEsRUFBRWIsRUFBRSxDQUFDay9DLEdBQUcsSUFBSTE2QyxFQUFFazdDLEdBQUcsSUFBSWovQyxFQUFFdStDLEdBQUcsSUFBSW4rQyxFQUFFeStDLEdBQUcsSUFBSTM5QyxFQUFFeTlDLEdBQUcsSUFBSS84QyxFQUFFbTlDLEdBQUcsSUFBSTE3QyxJQUFJLE1BQU14RCxFQUFFLENBQUMsVUFBVSxVQUFVLE9BQU8sUUFBUSxRQUFRLFNBQVMsU0FBUyxXQUFXLFNBQVMsUUFBUSxTQUFTLFdBQVcsVUFBVSxTQUFTLFVBQVUsT0FBTyxXQUFXLFVBQVUsU0FBUyxNQUFNLFNBQVMsUUFBUSxVQUFVLFNBQVMsUUFBUSxNQUFNLFNBQVMsVUFBVSxTQUFTLFFBQVEsUUFBUSxVQUFVLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxRQUFRLE1BQU0sUUFBUSxRQUFRLFFBQVEsTUFBTSxNQUFNLFVBQVUsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsTUFBTSxRQUFRLFFBQVEsU0FBUyxRQUFRLFFBQVEsVUFBVSxPQUFPLFFBQVEsU0FBUyxVQUFVLFVBQVUsUUFBUSxTQUFTLFNBQVMsVUFBVSxTQUFTLFVBQVUsUUFBUSxRQUFRLFFBQVEsU0FBUyxRQUFRLFdBQVcsU0FBUyxVQUFVLFNBQVMsVUFBVSxVQUFVLFVBQVUsTUFBTSxRQUFRLFVBQVUsU0FBUyxRQUFRLFVBQVUsUUFBUSxPQUFPLFNBQVMsT0FBTyxRQUFRLFFBQVEsTUFBTSxRQUFRLFFBQVEsT0FBTyxTQUFTLFVBQVUsU0FBUyxTQUFTLFFBQVEsTUFBTSxXQUFXLFNBQVMsVUFBVSxNQUFNLFNBQVMsVUFBVSxRQUFRLFNBQVMsU0FBUyxTQUFTLFVBQVUsT0FBTyxTQUFTLFNBQVMsV0FBVyxVQUFVLFVBQVUsUUFBUSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsVUFBVSxVQUFVLFFBQVEsUUFBUSxRQUFRLE9BQU8sVUFBVSxRQUFRLFVBQVUsT0FBTyxPQUFPLFdBQVcsUUFBUSxRQUFRLE1BQU0sVUFBVSxVQUFVLE9BQU8sU0FBUyxTQUFTLFNBQVMsTUFBTSxTQUFTLFVBQVUsU0FBUyxPQUFPLFFBQVEsU0FBUyxTQUFTLFFBQVEsT0FBTyxTQUFTLFVBQVUsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFNBQVMsVUFBVSxRQUFRLE9BQU8sUUFBUSxVQUFVLE9BQU8sU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLE1BQU0sT0FBTyxPQUFPLFVBQVUsT0FBTyxRQUFRLFNBQVMsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsVUFBVSxTQUFTLE9BQU8sT0FBTyxRQUFRLFFBQVEsT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLFFBQVEsT0FBTyxRQUFRLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxTQUFTLE1BQU0sTUFBTSxVQUFVLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxRQUFRLFdBQVcsU0FBUyxTQUFTLFFBQVEsVUFBVSxRQUFRLFFBQVEsU0FBUyxRQUFRLFNBQVMsVUFBVSxRQUFRLE9BQU8sT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsUUFBUSxNQUFNLFdBQVcsT0FBTyxTQUFTLFFBQVEsT0FBTyxVQUFVLFFBQVEsUUFBUSxTQUFTLE9BQU8sT0FBTyxPQUFPLE9BQU8sU0FBUyxPQUFPLE1BQU0sUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxVQUFVLFVBQVUsVUFBVSxNQUFNLFNBQVMsT0FBTyxRQUFRLFNBQVMsUUFBUSxPQUFPLE9BQU8sT0FBTyxTQUFTLFNBQVMsU0FBUyxNQUFNLFVBQVUsUUFBUSxXQUFXLFNBQVMsU0FBUyxRQUFRLFVBQVUsT0FBTyxVQUFVLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFFBQVEsUUFBUSxXQUFXLFNBQVMsUUFBUSxVQUFVLFNBQVMsUUFBUSxPQUFPLFFBQVEsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFVBQVUsUUFBUSxRQUFRLFVBQVUsU0FBUyxTQUFTLFVBQVUsVUFBVSxRQUFRLFFBQVEsUUFBUSxXQUFXLFNBQVMsVUFBVSxPQUFPLFFBQVEsUUFBUSxPQUFPLFVBQVUsT0FBTyxPQUFPLFFBQVEsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFFBQVEsU0FBUyxPQUFPLFFBQVEsT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sUUFBUSxVQUFVLFNBQVMsUUFBUSxRQUFRLFVBQVUsT0FBTyxTQUFTLE9BQU8sT0FBTyxVQUFVLFFBQVEsU0FBUyxVQUFVLE9BQU8sVUFBVSxRQUFRLFNBQVMsVUFBVSxVQUFVLFVBQVUsVUFBVSxXQUFXLFVBQVUsV0FBVyxVQUFVLFdBQVcsT0FBTyxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sT0FBTyxVQUFVLE9BQU8sU0FBUyxRQUFRLFVBQVUsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLE9BQU8sUUFBUSxRQUFRLFNBQVMsUUFBUSxRQUFRLFFBQVEsU0FBUyxRQUFRLE9BQU8sVUFBVSxRQUFRLFFBQVEsU0FBUyxPQUFPLFFBQVEsU0FBUyxRQUFRLFVBQVUsUUFBUSxTQUFTLFVBQVUsU0FBUyxRQUFRLE1BQU0sVUFBVSxPQUFPLFVBQVUsTUFBTSxXQUFXLFVBQVUsVUFBVSxVQUFVLFFBQVEsVUFBVSxTQUFTLE9BQU8sUUFBUSxNQUFNLFNBQVMsT0FBTyxRQUFRLFNBQVMsU0FBUyxPQUFPLFdBQVcsT0FBTyxNQUFNLE9BQU8sU0FBUyxTQUFTLFNBQVMsV0FBVyxTQUFTLFVBQVUsV0FBVyxXQUFXLE9BQU8sVUFBVSxTQUFTLE9BQU8sU0FBUyxRQUFRLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxPQUFPLFNBQVMsU0FBUyxVQUFVLFFBQVEsU0FBUyxTQUFTLFdBQVcsU0FBUyxTQUFTLE9BQU8sVUFBVSxVQUFVLFNBQVMsU0FBUyxVQUFVLFNBQVMsU0FBUyxVQUFVLE9BQU8sVUFBVSxRQUFRLE9BQU8sU0FBUyxPQUFPLFNBQVMsVUFBVSxVQUFVLFVBQVUsU0FBUyxXQUFXLFNBQVMsT0FBTyxXQUFXLFdBQVcsVUFBVSxPQUFPLFVBQVUsV0FBVyxVQUFVLFdBQVcsU0FBUyxTQUFTLFVBQVUsUUFBUSxTQUFTLFdBQVcsTUFBTSxPQUFPLFVBQVUsU0FBUyxTQUFTLFNBQVMsUUFBUSxPQUFPLE9BQU8sU0FBUyxPQUFPLFFBQVEsU0FBUyxRQUFRLFVBQVUsT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsT0FBTyxRQUFRLE9BQU8sT0FBTyxNQUFNLE9BQU8sT0FBTyxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sUUFBUSxVQUFVLFFBQVEsUUFBUSxRQUFRLE9BQU8sUUFBUSxTQUFTLE9BQU8sT0FBTyxPQUFPLFVBQVUsVUFBVSxPQUFPLE9BQU8sVUFBVSxTQUFTLE1BQU0sUUFBUSxTQUFTLFFBQVEsUUFBUSxXQUFXLFVBQVUsVUFBVSxXQUFXLFdBQVcsUUFBUSxPQUFPLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsUUFBUSxTQUFTLFFBQVEsTUFBTSxVQUFVLFVBQVUsUUFBUSxTQUFTLFVBQVUsU0FBUyxTQUFTLFVBQVUsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsV0FBVyxVQUFVLFFBQVEsUUFBUSxNQUFNLFFBQVEsUUFBUSxVQUFVLFFBQVEsUUFBUSxTQUFTLFFBQVEsVUFBVSxTQUFTLFVBQVUsU0FBUyxXQUFXLE9BQU8sUUFBUSxTQUFTLFFBQVEsVUFBVSxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsVUFBVSxXQUFXLFVBQVUsVUFBVSxRQUFRLFFBQVEsT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsUUFBUSxNQUFNLFVBQVUsU0FBUyxPQUFPLFVBQVUsT0FBTyxRQUFRLFFBQVEsT0FBTyxRQUFRLE9BQU8sU0FBUyxTQUFTLE1BQU0sUUFBUSxVQUFVLE9BQU8sVUFBVSxNQUFNLFFBQVEsU0FBUyxVQUFVLFFBQVEsV0FBVyxVQUFVLFdBQVcsVUFBVSxNQUFNLE9BQU8sT0FBTyxTQUFTLFFBQVEsV0FBVyxRQUFRLFFBQVEsTUFBTSxRQUFRLFVBQVUsUUFBUSxTQUFTLE9BQU8sT0FBTyxTQUFTLFFBQVEsT0FBTyxPQUFPLFNBQVMsU0FBUyxPQUFPLE9BQU8sUUFBUSxTQUFTLE9BQU8sTUFBTSxVQUFVLE1BQU0sT0FBTyxRQUFRLFFBQVEsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFFBQVEsUUFBUSxRQUFRLFNBQVMsUUFBUSxRQUFRLE1BQU0sT0FBTyxRQUFRLE1BQU0sT0FBTyxPQUFPLFNBQVMsT0FBTyxPQUFPLFFBQVEsU0FBUyxTQUFTLE9BQU8sVUFBVSxRQUFRLFVBQVUsU0FBUyxTQUFTLFFBQVEsTUFBTSxVQUFVLFFBQVEsV0FBVyxRQUFRLFNBQVMsU0FBUyxPQUFPLFFBQVEsUUFBUSxRQUFRLFNBQVMsUUFBUSxPQUFPLE1BQU0sUUFBUSxVQUFVLE9BQU8sU0FBUyxTQUFTLE9BQU8sU0FBUyxVQUFVLE9BQU8sTUFBTSxTQUFTLFVBQVUsU0FBUyxTQUFTLFVBQVUsTUFBTSxPQUFPLE9BQU8sU0FBUyxRQUFRLE9BQU8sVUFBVSxTQUFTLFFBQVEsU0FBUyxVQUFVLFVBQVUsUUFBUSxRQUFRLE9BQU8sU0FBUyxTQUFTLFVBQVUsT0FBTyxPQUFPLE9BQU8sU0FBUyxRQUFRLFFBQVEsUUFBUSxVQUFVLFFBQVEsUUFBUSxRQUFRLFFBQVEsT0FBTyxPQUFPLE9BQU8sVUFBVSxPQUFPLE9BQU8sUUFBUSxVQUFVLFNBQVMsU0FBUyxTQUFTLE9BQU8sT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsT0FBTyxRQUFRLE9BQU8sVUFBVSxRQUFRLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFNBQVMsTUFBTSxNQUFNLFFBQVEsT0FBTyxPQUFPLFNBQVMsVUFBVSxPQUFPLFFBQVEsU0FBUyxPQUFPLFFBQVEsVUFBVSxNQUFNLE9BQU8sT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFFBQVEsV0FBVyxTQUFTLFFBQVEsU0FBUyxPQUFPLE1BQU0sT0FBTyxTQUFTLE9BQU8sT0FBTyxPQUFPLE1BQU0sT0FBTyxVQUFVLFFBQVEsU0FBUyxPQUFPLE9BQU8sVUFBVSxTQUFTLE9BQU8sUUFBUSxPQUFPLE9BQU8sT0FBTyxTQUFTLFFBQVEsV0FBVyxPQUFPLFFBQVEsT0FBTyxRQUFRLE1BQU0sT0FBTyxRQUFRLFNBQVMsUUFBUSxVQUFVLFNBQVMsT0FBTyxTQUFTLFFBQVEsT0FBTyxVQUFVLFNBQVMsTUFBTSxPQUFPLE9BQU8sV0FBVyxPQUFPLFNBQVMsTUFBTSxVQUFVLFVBQVUsUUFBUSxVQUFVLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxVQUFVLE9BQU8sVUFBVSxTQUFTLFdBQVcsUUFBUSxXQUFXLFNBQVMsV0FBVyxTQUFTLFVBQVUsU0FBUyxTQUFTLFVBQVUsVUFBVSxTQUFTLFNBQVMsU0FBUyxRQUFRLFdBQVcsUUFBUSxVQUFVLFNBQVMsU0FBUyxTQUFTLFVBQVUsVUFBVSxTQUFTLFdBQVcsT0FBTyxTQUFTLFNBQVMsVUFBVSxPQUFPLFNBQVMsVUFBVSxRQUFRLE9BQU8sUUFBUSxTQUFTLFNBQVMsTUFBTSxPQUFPLFVBQVUsUUFBUSxRQUFRLFFBQVEsTUFBTSxPQUFPLE9BQU8sVUFBVSxNQUFNLFFBQVEsUUFBUSxPQUFPLFNBQVMsU0FBUyxPQUFPLE9BQU8sV0FBVyxPQUFPLE9BQU8sVUFBVSxNQUFNLE9BQU8sTUFBTSxTQUFTLE9BQU8sVUFBVSxPQUFPLE1BQU0sVUFBVSxPQUFPLFNBQVMsT0FBTyxPQUFPLFFBQVEsUUFBUSxPQUFPLE1BQU0sUUFBUSxRQUFRLFNBQVMsT0FBTyxPQUFPLE9BQU8sV0FBVyxTQUFTLFFBQVEsUUFBUSxRQUFRLFFBQVEsVUFBVSxPQUFPLE1BQU0sT0FBTyxVQUFVLFFBQVEsT0FBTyxTQUFTLE9BQU8sUUFBUSxRQUFRLFVBQVUsT0FBTyxNQUFNLFFBQVEsU0FBUyxVQUFVLFFBQVEsT0FBTyxTQUFTLE9BQU8sVUFBVSxTQUFTLFNBQVMsUUFBUSxPQUFPLFVBQVUsVUFBVSxVQUFVLE9BQU8sT0FBTyxRQUFRLE9BQU8sT0FBTyxRQUFRLE9BQU8sT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxPQUFPLFVBQVUsUUFBUSxPQUFPLFFBQVEsU0FBUyxPQUFPLE9BQU8sVUFBVSxPQUFPLFNBQVMsT0FBTyxRQUFRLFFBQVEsVUFBVSxTQUFTLFFBQVEsUUFBUSxTQUFTLFNBQVMsVUFBVSxNQUFNLFFBQVEsU0FBUyxPQUFPLE9BQU8sT0FBTyxRQUFRLE9BQU8sU0FBUyxNQUFNLFNBQVMsVUFBVSxRQUFRLFVBQVUsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxXQUFXLE9BQU8sT0FBTyxTQUFTLFFBQVEsV0FBVyxPQUFPLFNBQVMsU0FBUyxVQUFVLE9BQU8sU0FBUyxPQUFPLFVBQVUsT0FBTyxXQUFXLFFBQVEsUUFBUSxTQUFTLE9BQU8sU0FBUyxTQUFTLFVBQVUsT0FBTyxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sVUFBVSxRQUFRLFNBQVMsU0FBUyxXQUFXLE9BQU8sVUFBVSxRQUFRLE9BQU8sVUFBVSxRQUFRLFNBQVMsVUFBVSxTQUFTLFNBQVMsT0FBTyxVQUFVLE1BQU0sUUFBUSxVQUFVLFNBQVMsUUFBUSxTQUFTLE1BQU0sU0FBUyxVQUFVLFNBQVMsVUFBVSxRQUFRLE9BQU8sUUFBUSxPQUFPLFVBQVUsV0FBVyxTQUFTLFNBQVMsUUFBUSxXQUFXLFFBQVEsT0FBTyxRQUFRLE9BQU8sU0FBUyxPQUFPLFdBQVcsU0FBUyxTQUFTLFdBQVcsUUFBUSxPQUFPLFNBQVMsU0FBUyxVQUFVLE9BQU8sUUFBUSxPQUFPLFNBQVMsU0FBUyxRQUFRLFNBQVMsU0FBUyxPQUFPLE9BQU8sT0FBTyxXQUFXLFVBQVUsVUFBVSxTQUFTLFFBQVEsT0FBTyxNQUFNLFVBQVUsVUFBVSxRQUFRLE9BQU8sT0FBTyxPQUFPLFFBQVEsUUFBUSxRQUFRLFVBQVUsU0FBUyxTQUFTLFFBQVEsT0FBTyxVQUFVLE9BQU8sVUFBVSxTQUFTLFFBQVEsTUFBTSxVQUFVLFNBQVMsUUFBUSxNQUFNLE1BQU0sT0FBTyxTQUFTLFNBQVMsVUFBVSxVQUFVLFNBQVMsVUFBVSxRQUFRLFFBQVEsVUFBVSxPQUFPLE1BQU0sUUFBUSxTQUFTLFFBQVEsTUFBTSxPQUFPLE1BQU0sUUFBUSxVQUFVLE9BQU8sT0FBTyxNQUFNLFFBQVEsU0FBUyxPQUFPLE9BQU8sUUFBUSxVQUFVLFNBQVMsU0FBUyxTQUFTLFFBQVEsVUFBVSxRQUFRLFdBQVcsUUFBUSxTQUFTLFdBQVcsU0FBUyxVQUFVLFFBQVEsVUFBVSxRQUFRLFNBQVMsVUFBVSxPQUFPLE9BQU8sT0FBTyxNQUFNLFFBQVEsU0FBUyxTQUFTLFFBQVEsT0FBTyxTQUFTLE9BQU8sT0FBTyxTQUFTLE9BQU8sUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFNBQVMsU0FBUyxPQUFPLFNBQVMsUUFBUSxPQUFPLFFBQVEsT0FBTyxVQUFVLFNBQVMsVUFBVSxRQUFRLE9BQU8sVUFBVSxRQUFRLFNBQVMsT0FBTyxVQUFVLFVBQVUsTUFBTSxVQUFVLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxTQUFTLE1BQU0sUUFBUSxRQUFRLFNBQVMsV0FBVyxRQUFRLFNBQVMsVUFBVSxRQUFRLE1BQU0sU0FBUyxPQUFPLFFBQVEsT0FBTyxVQUFVLE9BQU8sU0FBUyxRQUFRLFFBQVEsUUFBUSxTQUFTLFVBQVUsUUFBUSxPQUFPLFNBQVMsU0FBUyxRQUFRLE9BQU8sU0FBUyxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sU0FBUyxPQUFPLE9BQU8sT0FBTyxVQUFVLFVBQVUsV0FBVyxXQUFXLE9BQU8sU0FBUyxVQUFVLFVBQVUsU0FBUyxRQUFRLFdBQVcsU0FBUyxVQUFVLFNBQVMsVUFBVSxVQUFVLFNBQVMsVUFBVSxRQUFRLFFBQVEsVUFBVSxRQUFRLFdBQVcsU0FBUyxVQUFVLFFBQVEsVUFBVSxVQUFVLFVBQVUsU0FBUyxVQUFVLFVBQVUsVUFBVSxRQUFRLFdBQVcsVUFBVSxVQUFVLFFBQVEsVUFBVSxTQUFTLFVBQVUsT0FBTyxPQUFPLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxXQUFXLFNBQVMsVUFBVSxRQUFRLE9BQU8sTUFBTSxTQUFTLFVBQVUsVUFBVSxVQUFVLFVBQVUsV0FBVyxRQUFRLE9BQU8sT0FBTyxRQUFRLFNBQVMsVUFBVSxPQUFPLE9BQU8sUUFBUSxRQUFRLE9BQU8sT0FBTyxRQUFRLFFBQVEsT0FBTyxRQUFRLFNBQVMsUUFBUSxRQUFRLE9BQU8sT0FBTyxTQUFTLFFBQVEsTUFBTSxRQUFRLFFBQVEsT0FBTyxTQUFTLFFBQVEsVUFBVSxTQUFTLFVBQVUsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFFBQVEsVUFBVSxTQUFTLE9BQU8sU0FBUyxXQUFXLFNBQVMsU0FBUyxTQUFTLFFBQVEsT0FBTyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFdBQVcsU0FBUyxXQUFXLFdBQVcsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFNBQVMsTUFBTSxTQUFTLE9BQU8sT0FBTyxPQUFPLFFBQVEsUUFBUSxRQUFRLFFBQVEsT0FBTyxPQUFPLFNBQVMsT0FBTyxTQUFTLFFBQVEsUUFBUSxPQUFPLFFBQVEsUUFBUSxTQUFTLFNBQVMsVUFBVSxPQUFPLFNBQVMsT0FBTyxPQUFPLFNBQVMsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTLE9BQU8sTUFBTSxPQUFPLE1BQU0sU0FBUyxRQUFRLE1BQU0sU0FBUyxVQUFVLE9BQU8sT0FBTyxRQUFRLFNBQVMsUUFBUSxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sVUFBVSxVQUFVLFFBQVEsVUFBVSxPQUFPLE1BQU0sUUFBUSxPQUFPLFFBQVEsVUFBVSxRQUFRLFNBQVMsU0FBUyxVQUFVLFdBQVcsV0FBVyxRQUFRLFFBQVEsU0FBUyxTQUFTLFFBQVEsTUFBTSxTQUFTLFNBQVMsT0FBTyxTQUFTLFNBQVMsVUFBVSxXQUFXLE9BQU8sT0FBTyxVQUFVLFNBQVMsT0FBTyxVQUFVLFNBQVMsUUFBUSxXQUFXLFNBQVMsVUFBVSxVQUFVLFNBQVMsUUFBUSxRQUFRLFNBQVMsUUFBUSxVQUFVLFFBQVEsT0FBTyxRQUFRLFVBQVUsU0FBUyxRQUFRLFFBQVEsT0FBTyxTQUFTLFFBQVEsT0FBTyxRQUFRLE9BQU8sUUFBUSxXQUFXLFFBQVEsU0FBUyxRQUFRLFVBQVUsTUFBTSxVQUFVLE9BQU8sT0FBTyxRQUFRLFFBQVEsT0FBTyxTQUFTLE9BQU8sUUFBUSxTQUFTLFVBQVUsU0FBUyxRQUFRLE9BQU8sUUFBUSxTQUFTLFVBQVUsTUFBTSxPQUFPLFFBQVEsU0FBUyxNQUFNLFFBQVEsT0FBTyxRQUFRLFFBQVEsT0FBTyxPQUFPLFFBQVEsVUFBVSxRQUFRLFFBQVEsU0FBUyxPQUFPLFNBQVMsT0FBTyxPQUFPLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTLFFBQVEsUUFBUSxPQUFPLFFBQVEsT0FBTyxPQUFPLFNBQVMsU0FBUyxPQUFPLE9BQU8sT0FBTyxRQUFRLFVBQVUsUUFBUSxXQUFXLFFBQVEsVUFBVSxPQUFPLE9BQU8sUUFBUSxPQUFPLE9BQU8sUUFBUSxPQUFPLFNBQVMsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLE9BQU8sU0FBUyxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsT0FBTyxRQUFRLFNBQVMsU0FBUyxNQUFNLFNBQVMsVUFBVSxXQUFXLFNBQVMsVUFBVSxRQUFRLFFBQVEsU0FBUyxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sUUFBUSxRQUFRLE9BQU8sT0FBTyxTQUFTLFFBQVEsUUFBUSxRQUFRLFFBQVEsVUFBVSxRQUFRLFFBQVEsUUFBUSxRQUFRLFdBQVcsU0FBUyxTQUFTLFNBQVMsV0FBVyxVQUFVLFFBQVEsVUFBVSxRQUFRLFVBQVUsU0FBUyxTQUFTLFVBQVUsT0FBTyxTQUFTLFNBQVMsUUFBUSxVQUFVLE9BQU8sU0FBUyxNQUFNLFFBQVEsU0FBUyxRQUFRLFNBQVMsVUFBVSxPQUFPLFVBQVUsUUFBUSxXQUFXLFdBQVcsU0FBUyxVQUFVLFVBQVUsVUFBVSxRQUFRLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxPQUFPLFFBQVEsU0FBUyxRQUFRLFNBQVMsVUFBVSxRQUFRLFNBQVMsUUFBUSxTQUFTLE1BQU0sT0FBTyxTQUFTLE9BQU8sT0FBTyxPQUFPLFNBQVMsT0FBTyxRQUFRLFNBQVMsT0FBTyxRQUFRLE9BQU8sT0FBTyxNQUFNLFNBQVMsU0FBUyxPQUFPLE9BQU8sT0FBTyxPQUFPLFFBQVEsT0FBTyxRQUFRLE9BQU8sU0FBUyxRQUFRLE9BQU8sUUFBUSxPQUFPLFVBQVUsUUFBUSxTQUFTLFFBQVEsUUFBUSxVQUFVLFNBQVMsT0FBTyxRQUFRLE9BQU8sU0FBUyxPQUFPLE9BQU8sTUFBTSxRQUFRLFNBQVMsUUFBUSxRQUFRLFVBQVUsUUFBUSxVQUFVLE1BQU0sV0FBVyxTQUFTLFFBQVEsU0FBUyxXQUFXLE9BQU8sU0FBUyxVQUFVLE9BQU8sUUFBUSxNQUFNLFFBQVEsU0FBUyxRQUFRLFVBQVUsV0FBVyxPQUFPLFFBQVEsVUFBVSxTQUFTLFFBQVEsT0FBTyxNQUFNLFFBQVEsUUFBUSxVQUFVLFNBQVMsUUFBUSxXQUFXLE9BQU8sUUFBUSxTQUFTLE9BQU8sUUFBUSxPQUFPLFFBQVEsUUFBUSxRQUFRLFFBQVEsVUFBVSxPQUFPLE9BQU8sU0FBUyxVQUFVLFFBQVEsT0FBTyxRQUFRLFVBQVUsUUFBUSxRQUFRLE1BQU0sT0FBTyxVQUFVLFNBQVMsT0FBTyxTQUFTLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxRQUFRLE9BQU8sUUFBUSxNQUFNLE9BQU8sVUFBVSxPQUFPLFdBQVcsU0FBUyxVQUFVLFFBQVEsVUFBVSxRQUFRLE9BQU8sU0FBUyxTQUFTLFVBQVUsVUFBVSxTQUFTLE9BQU8sV0FBVyxVQUFVLFNBQVMsUUFBUSxVQUFVLFNBQVMsU0FBUyxVQUFVLFNBQVMsT0FBTyxRQUFRLFFBQVEsUUFBUSxPQUFPLFFBQVEsTUFBTSxPQUFPLFNBQVMsVUFBVSxRQUFRLFVBQVUsU0FBUyxTQUFTLFFBQVEsUUFBUSxTQUFTLFFBQVEsTUFBTSxTQUFTLFFBQVEsVUFBVSxPQUFPLFFBQVEsVUFBVSxTQUFTLFNBQVMsVUFBVSxRQUFRLE9BQU8sU0FBUyxVQUFVLE9BQU8sU0FBUyxVQUFVLFNBQVMsVUFBVSxVQUFVLFVBQVUsUUFBUSxPQUFPLFVBQVUsVUFBVSxTQUFTLFVBQVUsUUFBUSxPQUFPLFFBQVEsU0FBUyxRQUFRLFFBQVEsUUFBUSxRQUFRLE9BQU8sVUFBVSxTQUFTLE9BQU8sU0FBUyxPQUFPLFFBQVEsT0FBTyxPQUFPLE9BQU8sU0FBUyxPQUFPLFVBQVUsT0FBTyxVQUFVLE9BQU8sT0FBTyxRQUFRLFFBQVEsT0FBTyxNQUFNLFNBQVMsU0FBUyxPQUFPLFNBQVMsVUFBVSxNQUFNLFVBQVUsVUFBVSxRQUFRLFVBQVUsT0FBTyxNQUFNLFFBQVEsT0FBTyxRQUFRLFFBQVEsT0FBTyxRQUFRLE9BQU8sVUFBVSxPQUFPLFFBQVEsT0FBTyxPQUFPLE9BQU8sTUFBTSxTQUFTLE9BQU8sT0FBTyxPQUFPLFNBQVMsU0FBUyxPQUFPLFNBQVMsT0FBTyxPQUFPLFVBQVUsT0FBTyxRQUFRLFNBQVMsT0FBTyxPQUFPLE9BQU8sT0FBTyxR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QUN6QitDLEVBQVdsOEMsT0FBT3M0QyxFQUFZTSxJQUU5QlAsRUFBa0IwRCxFQUVsQixNQUFNdUIsRUFBTTlHLFNBQVMrQyxjQUFjLE9BQzdCZ0UsRUFBUy9HLFNBQVMrQyxjQUFjLFVBY3RDLE1BWmlCLFlBQWJ3QyxHQUNBQyxFQUFpQjVELFVBQVksZ0ZBQzdCa0YsRUFBSUUsUUFBUyxFQUNiRCxFQUFPQyxRQUFTLElBRWhCeEIsRUFBaUI1RCxVQUFZLEdBQzdCa0YsRUFBSUUsUUFBUyxFQUNiRCxFQUFPQyxRQUFTLEdBR3BCakMsS0FFTyxDQUVYLENBSUksT0FGQVgsTUFBTSxzQkFBc0JtQixNQUVyQixDQUdmLENBRUEsU0FBU0osRUFBWXhILEdBSWpCZ0gsRUFGaUJoSCxFQUFNc0osY0FBY2hDLFFBQVFDLFVBSTdDdkgsRUFBTXVKLGdCQUNWLENBRUEsU0FBU2pCLEVBQWlCdEksR0FFdEJxRSxFQUFjbUIsYUFFZHhGLEVBQU11SixnQkFDVixDQXZTQXZxRCxPQUFPb29ELHNCQUF3QkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkaW8vLi4vYWxnby1uZnQtdXRpbHMvbm9kZV9tb2R1bGVzL2FsZ29zZGsvZGlzdC9icm93c2VyL2FsZ29zZGsubWluLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvYnVmZmVyL2luZGV4LmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvY3Jvc3MtZmV0Y2gvZGlzdC9icm93c2VyLXBvbnlmaWxsLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi4vYWxnby1uZnQtdXRpbHMvbm9kZV9tb2R1bGVzL21pbWUvTWltZS5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi4vYWxnby1uZnQtdXRpbHMvbm9kZV9tb2R1bGVzL21pbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25vZGVfbW9kdWxlcy9taW1lL3R5cGVzL290aGVyLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbWltZS90eXBlcy9zdGFuZGFyZC5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi9ub2RlX21vZHVsZXMvYWxnb3Nkay9kaXN0L2Jyb3dzZXIvYWxnb3Nkay5taW4uanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4vc3JjL3BhZ2VzLyBsYXp5IF5cXC5cXC8uKiQgc3RyaWN0IG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3ZlbmRvci92YXJpbnQuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy92YXJpbnQuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9ieXRlcy5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi4vYWxnby1uZnQtdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9kaWdlc3QuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS92ZW5kb3IvYmFzZS14LmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTU4LmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTMyLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvY2lkLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi4vYWxnby1uZnQtdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9zaGEyLWJyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL2FyYzE5LmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9uZnQuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2FsZ28tbmZ0LXV0aWxzL25mdC1jb2xsZWN0aW9uLmpzIiwid2VicGFjazovL3N0dWRpby8uLi9hbGdvLW5mdC11dGlscy9uZnQtaG9sZGVyLWNvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4uL2N1c3RvbS1zZXR0aW5ncy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi9zcmMvY29sbGVjdGlvbnMuanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3N0dWRpby93ZWJwYWNrL3J1bnRpbWUvY3JlYXRlIGZha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0Iiwid2VicGFjazovL3N0dWRpby93ZWJwYWNrL3J1bnRpbWUvYW1kIG9wdGlvbnMiLCJ3ZWJwYWNrOi8vc3R1ZGlvL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3N0dWRpby93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vc3R1ZGlvL3dlYnBhY2svcnVudGltZS9lbnN1cmUgY2h1bmsiLCJ3ZWJwYWNrOi8vc3R1ZGlvL3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL25vZGUgbW9kdWxlIGRlY29yYXRvciIsIndlYnBhY2s6Ly9zdHVkaW8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vc3R1ZGlvL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3N0dWRpby8uL3NyYy90b2tlbi5qcyIsIndlYnBhY2s6Ly9zdHVkaW8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3R1ZGlvLy4vc3JjL2NvbW1vbi93YWxsZXQtY29ubmVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgRm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gcGxlYXNlIHNlZSBhbGdvc2RrLm1pbi5qcy5MSUNFTlNFLnR4dCAqL1xuIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hbGdvc2RrPXQoKTplLmFsZ29zZGs9dCgpfShzZWxmLChmdW5jdGlvbigpe3JldHVybigoKT0+e3ZhciBfX3dlYnBhY2tfbW9kdWxlc19fPXs1NDA2OmZ1bmN0aW9uKGUpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiByKG4pe2lmKHRbbl0pcmV0dXJuIHRbbl0uZXhwb3J0czt2YXIgbz10W25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyxyKSxvLmw9ITAsby5leHBvcnRzfXJldHVybiByLm09ZSxyLmM9dCxyLmQ9ZnVuY3Rpb24oZSx0LG4pe3IubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpufSl9LHIucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxyLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPXIoZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtpZihyLnIobiksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBvIGluIGUpci5kKG4sbyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLG8pKTtyZXR1cm4gbn0sci5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiByLmQodCxcImFcIix0KSx0fSxyLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHIucD1cIlwiLHIoci5zPTApfShbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3Iucih0KSxyLmQodCxcImVuY29kZVwiLChmdW5jdGlvbigpe3JldHVybiBVfSkpLHIuZCh0LFwiZGVjb2RlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEh9KSksci5kKHQsXCJkZWNvZGVBc3luY1wiLChmdW5jdGlvbigpe3JldHVybiBXfSkpLHIuZCh0LFwiZGVjb2RlQXJyYXlTdHJlYW1cIiwoZnVuY3Rpb24oKXtyZXR1cm4gWH0pKSxyLmQodCxcImRlY29kZVN0cmVhbVwiLChmdW5jdGlvbigpe3JldHVybiBZfSkpLHIuZCh0LFwiRGVjb2RlclwiLChmdW5jdGlvbigpe3JldHVybiBqfSkpLHIuZCh0LFwiRW5jb2RlclwiLChmdW5jdGlvbigpe3JldHVybiBffSkpLHIuZCh0LFwiRXh0ZW5zaW9uQ29kZWNcIiwoZnVuY3Rpb24oKXtyZXR1cm4geH0pKSxyLmQodCxcIkV4dERhdGFcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZn0pKSxyLmQodCxcIkVYVF9USU1FU1RBTVBcIiwoZnVuY3Rpb24oKXtyZXR1cm4geX0pKSxyLmQodCxcImVuY29kZURhdGVUb1RpbWVTcGVjXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KSksci5kKHQsXCJlbmNvZGVUaW1lU3BlY1RvVGltZXN0YW1wXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG19KSksci5kKHQsXCJkZWNvZGVUaW1lc3RhbXBUb1RpbWVTcGVjXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHd9KSksci5kKHQsXCJlbmNvZGVUaW1lc3RhbXBFeHRlbnNpb25cIiwoZnVuY3Rpb24oKXtyZXR1cm4gQX0pKSxyLmQodCxcImRlY29kZVRpbWVzdGFtcEV4dGVuc2lvblwiLChmdW5jdGlvbigpe3JldHVybiB2fSkpO3ZhciBuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl07aWYoIXIpcmV0dXJuIGU7dmFyIG4sbyxzPXIuY2FsbChlKSxpPVtdO3RyeXtmb3IoOyh2b2lkIDA9PT10fHx0LS0gPjApJiYhKG49cy5uZXh0KCkpLmRvbmU7KWkucHVzaChuLnZhbHVlKX1jYXRjaChlKXtvPXtlcnJvcjplfX1maW5hbGx5e3RyeXtuJiYhbi5kb25lJiYocj1zLnJldHVybikmJnIuY2FsbChzKX1maW5hbGx5e2lmKG8pdGhyb3cgby5lcnJvcn19cmV0dXJuIGl9LG89ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0KyspZT1lLmNvbmNhdChuKGFyZ3VtZW50c1t0XSkpO3JldHVybiBlfSxzPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgVGV4dEVuY29kZXImJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBUZXh0RGVjb2RlcjtmdW5jdGlvbiBpKGUpe2Zvcih2YXIgdD1lLmxlbmd0aCxyPTAsbj0wO248dDspe3ZhciBvPWUuY2hhckNvZGVBdChuKyspO2lmKDAhPSg0Mjk0OTY3MTY4Jm8pKWlmKDA9PSg0Mjk0OTY1MjQ4Jm8pKXIrPTI7ZWxzZXtpZihvPj01NTI5NiYmbzw9NTYzMTkmJm48dCl7dmFyIHM9ZS5jaGFyQ29kZUF0KG4pOzU2MzIwPT0oNjQ1MTImcykmJigrK24sbz0oKDEwMjMmbyk8PDEwKSsoMTAyMyZzKSs2NTUzNil9cis9MD09KDQyOTQ5MDE3NjAmbyk/Mzo0fWVsc2UgcisrfXJldHVybiByfXZhciBhPXM/bmV3IFRleHRFbmNvZGVyOnZvaWQgMCxjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzPzIwMDowLHU9KG51bGw9PWE/dm9pZCAwOmEuZW5jb2RlSW50byk/ZnVuY3Rpb24oZSx0LHIpe2EuZW5jb2RlSW50byhlLHQuc3ViYXJyYXkocikpfTpmdW5jdGlvbihlLHQscil7dC5zZXQoYS5lbmNvZGUoZSkscil9O2Z1bmN0aW9uIGwoZSx0LHIpe2Zvcih2YXIgbj10LHM9bityLGk9W10sYT1cIlwiO248czspe3ZhciBjPWVbbisrXTtpZigwPT0oMTI4JmMpKWkucHVzaChjKTtlbHNlIGlmKDE5Mj09KDIyNCZjKSl7dmFyIHU9NjMmZVtuKytdO2kucHVzaCgoMzEmYyk8PDZ8dSl9ZWxzZSBpZigyMjQ9PSgyNDAmYykpe3U9NjMmZVtuKytdO3ZhciBsPTYzJmVbbisrXTtpLnB1c2goKDMxJmMpPDwxMnx1PDw2fGwpfWVsc2UgaWYoMjQwPT0oMjQ4JmMpKXt2YXIgaD0oNyZjKTw8MTh8KHU9NjMmZVtuKytdKTw8MTJ8KGw9NjMmZVtuKytdKTw8Nnw2MyZlW24rK107aD42NTUzNSYmKGgtPTY1NTM2LGkucHVzaChoPj4+MTAmMTAyM3w1NTI5NiksaD01NjMyMHwxMDIzJmgpLGkucHVzaChoKX1lbHNlIGkucHVzaChjKTtpLmxlbmd0aD49NDA5NiYmKGErPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLG8oaSkpLGkubGVuZ3RoPTApfXJldHVybiBpLmxlbmd0aD4wJiYoYSs9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsbyhpKSkpLGF9dmFyIGg9cz9uZXcgVGV4dERlY29kZXI6bnVsbCxwPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzPzIwMDowLGY9ZnVuY3Rpb24oZSx0KXt0aGlzLnR5cGU9ZSx0aGlzLmRhdGE9dH07ZnVuY3Rpb24gZChlLHQscil7dmFyIG49TWF0aC5mbG9vcihyLzQyOTQ5NjcyOTYpLG89cjtlLnNldFVpbnQzMih0LG4pLGUuc2V0VWludDMyKHQrNCxvKX1mdW5jdGlvbiBnKGUsdCl7dmFyIHI9ZS5nZXRJbnQzMih0KSxuPWUuZ2V0VWludDMyKHQrNCksbz1yPE1hdGguZmxvb3IoTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIvNDI5NDk2NzI5Nil8fHI9PT1NYXRoLmZsb29yKE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLzQyOTQ5NjcyOTYpJiYwPT09bixzPXI+TWF0aC5mbG9vcihOdW1iZXIuTUFYX1NBRkVfSU5URUdFUi80Mjk0OTY3Mjk2KTtyZXR1cm4gb3x8cz9CaWdJbnQocikqQmlnSW50KDQyOTQ5NjcyOTYpK0JpZ0ludChuKTo0Mjk0OTY3Mjk2KnIrbn12YXIgeT0tMTtmdW5jdGlvbiBtKGUpe3ZhciB0LHI9ZS5zZWMsbj1lLm5zZWM7aWYocj49MCYmbj49MCYmcjw9MTcxNzk4NjkxODMpe2lmKDA9PT1uJiZyPD00Mjk0OTY3Mjk1KXt2YXIgbz1uZXcgVWludDhBcnJheSg0KTtyZXR1cm4odD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxyKSxvfXZhciBzPXIvNDI5NDk2NzI5NixpPTQyOTQ5NjcyOTUmcjtyZXR1cm4gbz1uZXcgVWludDhBcnJheSg4KSwodD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxuPDwyfDMmcyksdC5zZXRVaW50MzIoNCxpKSxvfXJldHVybiBvPW5ldyBVaW50OEFycmF5KDEyKSwodD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxuKSxkKHQsNCxyKSxvfWZ1bmN0aW9uIGIoZSl7dmFyIHQ9ZS5nZXRUaW1lKCkscj1NYXRoLmZsb29yKHQvMWUzKSxuPTFlNioodC0xZTMqciksbz1NYXRoLmZsb29yKG4vMWU5KTtyZXR1cm57c2VjOnIrbyxuc2VjOm4tMWU5Km99fWZ1bmN0aW9uIEEoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEYXRlP20oYihlKSk6bnVsbH1mdW5jdGlvbiB3KGUpe3ZhciB0PW5ldyBEYXRhVmlldyhlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQsZS5ieXRlTGVuZ3RoKTtzd2l0Y2goZS5ieXRlTGVuZ3RoKXtjYXNlIDQ6cmV0dXJue3NlYzp0LmdldFVpbnQzMigwKSxuc2VjOjB9O2Nhc2UgODp2YXIgcj10LmdldFVpbnQzMigwKTtyZXR1cm57c2VjOjQyOTQ5NjcyOTYqKDMmcikrdC5nZXRVaW50MzIoNCksbnNlYzpyPj4+Mn07Y2FzZSAxMjpyZXR1cm57c2VjOmcodCw0KSxuc2VjOnQuZ2V0VWludDMyKDApfTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBkYXRhIHNpemUgZm9yIHRpbWVzdGFtcDogXCIrZS5sZW5ndGgpfX1mdW5jdGlvbiB2KGUpe3ZhciB0PXcoZSk7cmV0dXJuIG5ldyBEYXRlKDFlMyp0LnNlYyt0Lm5zZWMvMWU2KX12YXIgUz17dHlwZTp5LGVuY29kZTpBLGRlY29kZTp2fSx4PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuYnVpbHRJbkVuY29kZXJzPVtdLHRoaXMuYnVpbHRJbkRlY29kZXJzPVtdLHRoaXMuZW5jb2RlcnM9W10sdGhpcy5kZWNvZGVycz1bXSx0aGlzLnJlZ2lzdGVyKFMpfXJldHVybiBlLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihlKXt2YXIgdD1lLnR5cGUscj1lLmVuY29kZSxuPWUuZGVjb2RlO2lmKHQ+PTApdGhpcy5lbmNvZGVyc1t0XT1yLHRoaXMuZGVjb2RlcnNbdF09bjtlbHNle3ZhciBvPTErdDt0aGlzLmJ1aWx0SW5FbmNvZGVyc1tvXT1yLHRoaXMuYnVpbHRJbkRlY29kZXJzW29dPW59fSxlLnByb3RvdHlwZS50cnlUb0VuY29kZT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj0wO3I8dGhpcy5idWlsdEluRW5jb2RlcnMubGVuZ3RoO3IrKylpZihudWxsIT0obj10aGlzLmJ1aWx0SW5FbmNvZGVyc1tyXSkmJm51bGwhPShvPW4oZSx0KSkpcmV0dXJuIG5ldyBmKC0xLXIsbyk7Zm9yKHI9MDtyPHRoaXMuZW5jb2RlcnMubGVuZ3RoO3IrKyl7dmFyIG4sbztpZihudWxsIT0obj10aGlzLmVuY29kZXJzW3JdKSYmbnVsbCE9KG89bihlLHQpKSlyZXR1cm4gbmV3IGYocixvKX1yZXR1cm4gZSBpbnN0YW5jZW9mIGY/ZTpudWxsfSxlLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXQ8MD90aGlzLmJ1aWx0SW5EZWNvZGVyc1stMS10XTp0aGlzLmRlY29kZXJzW3RdO3JldHVybiBuP24oZSx0LHIpOm5ldyBmKHQsZSl9LGUuZGVmYXVsdENvZGVjPW5ldyBlLGV9KCk7ZnVuY3Rpb24gRShlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/ZTpBcnJheUJ1ZmZlci5pc1ZpZXcoZSk/bmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIsZS5ieXRlT2Zmc2V0LGUuYnl0ZUxlbmd0aCk6ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBVaW50OEFycmF5KGUpOlVpbnQ4QXJyYXkuZnJvbShlKX12YXIgVD1mdW5jdGlvbihlKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcixyPXQmJmVbdF0sbj0wO2lmKHIpcmV0dXJuIHIuY2FsbChlKTtpZihlJiZcIm51bWJlclwiPT10eXBlb2YgZS5sZW5ndGgpcmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSYmbj49ZS5sZW5ndGgmJihlPXZvaWQgMCkse3ZhbHVlOmUmJmVbbisrXSxkb25lOiFlfX19O3Rocm93IG5ldyBUeXBlRXJyb3IodD9cIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCI6XCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpfSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscixuLG8scyxpLGEpe3ZvaWQgMD09PWUmJihlPXguZGVmYXVsdENvZGVjKSx2b2lkIDA9PT10JiYodD12b2lkIDApLHZvaWQgMD09PXImJihyPTEwMCksdm9pZCAwPT09biYmKG49MjA0OCksdm9pZCAwPT09byYmKG89ITEpLHZvaWQgMD09PXMmJihzPSExKSx2b2lkIDA9PT1pJiYoaT0hMSksdm9pZCAwPT09YSYmKGE9ITEpLHRoaXMuZXh0ZW5zaW9uQ29kZWM9ZSx0aGlzLmNvbnRleHQ9dCx0aGlzLm1heERlcHRoPXIsdGhpcy5pbml0aWFsQnVmZmVyU2l6ZT1uLHRoaXMuc29ydEtleXM9byx0aGlzLmZvcmNlRmxvYXQzMj1zLHRoaXMuaWdub3JlVW5kZWZpbmVkPWksdGhpcy5mb3JjZUludGVnZXJUb0Zsb2F0PWEsdGhpcy5wb3M9MCx0aGlzLnZpZXc9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcih0aGlzLmluaXRpYWxCdWZmZXJTaXplKSksdGhpcy5ieXRlcz1uZXcgVWludDhBcnJheSh0aGlzLnZpZXcuYnVmZmVyKX1yZXR1cm4gZS5wcm90b3R5cGUuZ2V0VWludDhBcnJheT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJ5dGVzLnN1YmFycmF5KDAsdGhpcy5wb3MpfSxlLnByb3RvdHlwZS5yZWluaXRpYWxpemVTdGF0ZT1mdW5jdGlvbigpe3RoaXMucG9zPTB9LGUucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZWluaXRpYWxpemVTdGF0ZSgpLHRoaXMuZG9FbmNvZGUoZSwxKSx0aGlzLmdldFVpbnQ4QXJyYXkoKX0sZS5wcm90b3R5cGUuZG9FbmNvZGU9ZnVuY3Rpb24oZSx0KXtpZih0PnRoaXMubWF4RGVwdGgpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGRlZXAgb2JqZWN0cyBpbiBkZXB0aCBcIit0KTtudWxsPT1lP3RoaXMuZW5jb2RlTmlsKCk6XCJib29sZWFuXCI9PXR5cGVvZiBlP3RoaXMuZW5jb2RlQm9vbGVhbihlKTpcIm51bWJlclwiPT10eXBlb2YgZT90aGlzLmVuY29kZU51bWJlcihlKTpcInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLmVuY29kZVN0cmluZyhlKTpcImJpZ2ludFwiPT10eXBlb2YgZT90aGlzLmVuY29kZWJpZ2ludChlKTp0aGlzLmVuY29kZU9iamVjdChlLHQpfSxlLnByb3RvdHlwZS5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnBvcytlO3RoaXMudmlldy5ieXRlTGVuZ3RoPHQmJnRoaXMucmVzaXplQnVmZmVyKDIqdCl9LGUucHJvdG90eXBlLnJlc2l6ZUJ1ZmZlcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXlCdWZmZXIoZSkscj1uZXcgVWludDhBcnJheSh0KSxuPW5ldyBEYXRhVmlldyh0KTtyLnNldCh0aGlzLmJ5dGVzKSx0aGlzLnZpZXc9bix0aGlzLmJ5dGVzPXJ9LGUucHJvdG90eXBlLmVuY29kZU5pbD1mdW5jdGlvbigpe3RoaXMud3JpdGVVOCgxOTIpfSxlLnByb3RvdHlwZS5lbmNvZGVCb29sZWFuPWZ1bmN0aW9uKGUpeyExPT09ZT90aGlzLndyaXRlVTgoMTk0KTp0aGlzLndyaXRlVTgoMTk1KX0sZS5wcm90b3R5cGUuZW5jb2RlTnVtYmVyPWZ1bmN0aW9uKGUpe051bWJlci5pc1NhZmVJbnRlZ2VyKGUpJiYhdGhpcy5mb3JjZUludGVnZXJUb0Zsb2F0P2U+PTA/ZTwxMjg/dGhpcy53cml0ZVU4KGUpOmU8MjU2Pyh0aGlzLndyaXRlVTgoMjA0KSx0aGlzLndyaXRlVTgoZSkpOmU8NjU1MzY/KHRoaXMud3JpdGVVOCgyMDUpLHRoaXMud3JpdGVVMTYoZSkpOmU8NDI5NDk2NzI5Nj8odGhpcy53cml0ZVU4KDIwNiksdGhpcy53cml0ZVUzMihlKSk6KHRoaXMud3JpdGVVOCgyMDcpLHRoaXMud3JpdGVVNjQoZSkpOmU+PS0zMj90aGlzLndyaXRlVTgoMjI0fGUrMzIpOmU+PS0xMjg/KHRoaXMud3JpdGVVOCgyMDgpLHRoaXMud3JpdGVJOChlKSk6ZT49LTMyNzY4Pyh0aGlzLndyaXRlVTgoMjA5KSx0aGlzLndyaXRlSTE2KGUpKTplPj0tMjE0NzQ4MzY0OD8odGhpcy53cml0ZVU4KDIxMCksdGhpcy53cml0ZUkzMihlKSk6KHRoaXMud3JpdGVVOCgyMTEpLHRoaXMud3JpdGVJNjQoZSkpOnRoaXMuZm9yY2VGbG9hdDMyPyh0aGlzLndyaXRlVTgoMjAyKSx0aGlzLndyaXRlRjMyKGUpKToodGhpcy53cml0ZVU4KDIwMyksdGhpcy53cml0ZUY2NChlKSl9LGUucHJvdG90eXBlLmVuY29kZWJpZ2ludD1mdW5jdGlvbihlKXtlPj1CaWdJbnQoMCk/ZTxCaWdJbnQoMTI4KT90aGlzLndyaXRlVTgoTnVtYmVyKGUpKTplPEJpZ0ludCgyNTYpPyh0aGlzLndyaXRlVTgoMjA0KSx0aGlzLndyaXRlVTgoTnVtYmVyKGUpKSk6ZTxCaWdJbnQoNjU1MzYpPyh0aGlzLndyaXRlVTgoMjA1KSx0aGlzLndyaXRlVTE2KE51bWJlcihlKSkpOmU8QmlnSW50KDQyOTQ5NjcyOTYpPyh0aGlzLndyaXRlVTgoMjA2KSx0aGlzLndyaXRlVTMyKE51bWJlcihlKSkpOih0aGlzLndyaXRlVTgoMjA3KSx0aGlzLndyaXRlQmlnNjQoZSkpOmU+PUJpZ0ludCgtMzIpP3RoaXMud3JpdGVVOCgyMjR8TnVtYmVyKGUpKzMyKTplPj1CaWdJbnQoLTEyOCk/KHRoaXMud3JpdGVVOCgyMDgpLHRoaXMud3JpdGVJOChOdW1iZXIoZSkpKTplPj1CaWdJbnQoLTMyNzY4KT8odGhpcy53cml0ZVU4KDIwOSksdGhpcy53cml0ZUkxNihOdW1iZXIoZSkpKTplPj1CaWdJbnQoLTIxNDc0ODM2NDgpPyh0aGlzLndyaXRlVTgoMjEwKSx0aGlzLndyaXRlSTMyKE51bWJlcihlKSkpOih0aGlzLndyaXRlVTgoMjExKSx0aGlzLndyaXRlQmlnNjQoZSkpfSxlLnByb3RvdHlwZS53cml0ZVN0cmluZ0hlYWRlcj1mdW5jdGlvbihlKXtpZihlPDMyKXRoaXMud3JpdGVVOCgxNjArZSk7ZWxzZSBpZihlPDI1Nil0aGlzLndyaXRlVTgoMjE3KSx0aGlzLndyaXRlVTgoZSk7ZWxzZSBpZihlPDY1NTM2KXRoaXMud3JpdGVVOCgyMTgpLHRoaXMud3JpdGVVMTYoZSk7ZWxzZXtpZighKGU8NDI5NDk2NzI5NikpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGxvbmcgc3RyaW5nOiBcIitlK1wiIGJ5dGVzIGluIFVURi04XCIpO3RoaXMud3JpdGVVOCgyMTkpLHRoaXMud3JpdGVVMzIoZSl9fSxlLnByb3RvdHlwZS5lbmNvZGVTdHJpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGg7aWYocyYmdD5jKXt2YXIgcj1pKGUpO3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNStyKSx0aGlzLndyaXRlU3RyaW5nSGVhZGVyKHIpLHUoZSx0aGlzLmJ5dGVzLHRoaXMucG9zKSx0aGlzLnBvcys9cn1lbHNlIHI9aShlKSx0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDUrciksdGhpcy53cml0ZVN0cmluZ0hlYWRlcihyKSxmdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPWUubGVuZ3RoLG89cixzPTA7czxuOyl7dmFyIGk9ZS5jaGFyQ29kZUF0KHMrKyk7aWYoMCE9KDQyOTQ5NjcxNjgmaSkpe2lmKDA9PSg0Mjk0OTY1MjQ4JmkpKXRbbysrXT1pPj42JjMxfDE5MjtlbHNle2lmKGk+PTU1Mjk2JiZpPD01NjMxOSYmczxuKXt2YXIgYT1lLmNoYXJDb2RlQXQocyk7NTYzMjA9PSg2NDUxMiZhKSYmKCsrcyxpPSgoMTAyMyZpKTw8MTApKygxMDIzJmEpKzY1NTM2KX0wPT0oNDI5NDkwMTc2MCZpKT8odFtvKytdPWk+PjEyJjE1fDIyNCx0W28rK109aT4+NiY2M3wxMjgpOih0W28rK109aT4+MTgmN3wyNDAsdFtvKytdPWk+PjEyJjYzfDEyOCx0W28rK109aT4+NiY2M3wxMjgpfXRbbysrXT02MyZpfDEyOH1lbHNlIHRbbysrXT1pfX0oZSx0aGlzLmJ5dGVzLHRoaXMucG9zKSx0aGlzLnBvcys9cn0sZS5wcm90b3R5cGUuZW5jb2RlT2JqZWN0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5leHRlbnNpb25Db2RlYy50cnlUb0VuY29kZShlLHRoaXMuY29udGV4dCk7aWYobnVsbCE9cil0aGlzLmVuY29kZUV4dGVuc2lvbihyKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpdGhpcy5lbmNvZGVBcnJheShlLHQpO2Vsc2UgaWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXRoaXMuZW5jb2RlQmluYXJ5KGUpO2Vsc2V7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIG9iamVjdDogXCIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShlKSk7dGhpcy5lbmNvZGVNYXAoZSx0KX19LGUucHJvdG90eXBlLmVuY29kZUJpbmFyeT1mdW5jdGlvbihlKXt2YXIgdD1lLmJ5dGVMZW5ndGg7aWYodDwyNTYpdGhpcy53cml0ZVU4KDE5NiksdGhpcy53cml0ZVU4KHQpO2Vsc2UgaWYodDw2NTUzNil0aGlzLndyaXRlVTgoMTk3KSx0aGlzLndyaXRlVTE2KHQpO2Vsc2V7aWYoISh0PDQyOTQ5NjcyOTYpKXRocm93IG5ldyBFcnJvcihcIlRvbyBsYXJnZSBiaW5hcnk6IFwiK3QpO3RoaXMud3JpdGVVOCgxOTgpLHRoaXMud3JpdGVVMzIodCl9dmFyIHI9RShlKTt0aGlzLndyaXRlVThhKHIpfSxlLnByb3RvdHlwZS5lbmNvZGVBcnJheT1mdW5jdGlvbihlLHQpe3ZhciByLG4sbz1lLmxlbmd0aDtpZihvPDE2KXRoaXMud3JpdGVVOCgxNDQrbyk7ZWxzZSBpZihvPDY1NTM2KXRoaXMud3JpdGVVOCgyMjApLHRoaXMud3JpdGVVMTYobyk7ZWxzZXtpZighKG88NDI5NDk2NzI5NikpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGxhcmdlIGFycmF5OiBcIitvKTt0aGlzLndyaXRlVTgoMjIxKSx0aGlzLndyaXRlVTMyKG8pfXRyeXtmb3IodmFyIHM9VChlKSxpPXMubmV4dCgpOyFpLmRvbmU7aT1zLm5leHQoKSl7dmFyIGE9aS52YWx1ZTt0aGlzLmRvRW5jb2RlKGEsdCsxKX19Y2F0Y2goZSl7cj17ZXJyb3I6ZX19ZmluYWxseXt0cnl7aSYmIWkuZG9uZSYmKG49cy5yZXR1cm4pJiZuLmNhbGwocyl9ZmluYWxseXtpZihyKXRocm93IHIuZXJyb3J9fX0sZS5wcm90b3R5cGUuY291bnRXaXRob3V0VW5kZWZpbmVkPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvPTA7dHJ5e2Zvcih2YXIgcz1UKHQpLGk9cy5uZXh0KCk7IWkuZG9uZTtpPXMubmV4dCgpKXZvaWQgMCE9PWVbaS52YWx1ZV0mJm8rK31jYXRjaChlKXtyPXtlcnJvcjplfX1maW5hbGx5e3RyeXtpJiYhaS5kb25lJiYobj1zLnJldHVybikmJm4uY2FsbChzKX1maW5hbGx5e2lmKHIpdGhyb3cgci5lcnJvcn19cmV0dXJuIG99LGUucHJvdG90eXBlLmVuY29kZU1hcD1mdW5jdGlvbihlLHQpe3ZhciByLG4sbz1PYmplY3Qua2V5cyhlKTt0aGlzLnNvcnRLZXlzJiZvLnNvcnQoKTt2YXIgcz10aGlzLmlnbm9yZVVuZGVmaW5lZD90aGlzLmNvdW50V2l0aG91dFVuZGVmaW5lZChlLG8pOm8ubGVuZ3RoO2lmKHM8MTYpdGhpcy53cml0ZVU4KDEyOCtzKTtlbHNlIGlmKHM8NjU1MzYpdGhpcy53cml0ZVU4KDIyMiksdGhpcy53cml0ZVUxNihzKTtlbHNle2lmKCEoczw0Mjk0OTY3Mjk2KSl0aHJvdyBuZXcgRXJyb3IoXCJUb28gbGFyZ2UgbWFwIG9iamVjdDogXCIrcyk7dGhpcy53cml0ZVU4KDIyMyksdGhpcy53cml0ZVUzMihzKX10cnl7Zm9yKHZhciBpPVQobyksYT1pLm5leHQoKTshYS5kb25lO2E9aS5uZXh0KCkpe3ZhciBjPWEudmFsdWUsdT1lW2NdO3RoaXMuaWdub3JlVW5kZWZpbmVkJiZ2b2lkIDA9PT11fHwodGhpcy5lbmNvZGVTdHJpbmcoYyksdGhpcy5kb0VuY29kZSh1LHQrMSkpfX1jYXRjaChlKXtyPXtlcnJvcjplfX1maW5hbGx5e3RyeXthJiYhYS5kb25lJiYobj1pLnJldHVybikmJm4uY2FsbChpKX1maW5hbGx5e2lmKHIpdGhyb3cgci5lcnJvcn19fSxlLnByb3RvdHlwZS5lbmNvZGVFeHRlbnNpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5kYXRhLmxlbmd0aDtpZigxPT09dCl0aGlzLndyaXRlVTgoMjEyKTtlbHNlIGlmKDI9PT10KXRoaXMud3JpdGVVOCgyMTMpO2Vsc2UgaWYoND09PXQpdGhpcy53cml0ZVU4KDIxNCk7ZWxzZSBpZig4PT09dCl0aGlzLndyaXRlVTgoMjE1KTtlbHNlIGlmKDE2PT09dCl0aGlzLndyaXRlVTgoMjE2KTtlbHNlIGlmKHQ8MjU2KXRoaXMud3JpdGVVOCgxOTkpLHRoaXMud3JpdGVVOCh0KTtlbHNlIGlmKHQ8NjU1MzYpdGhpcy53cml0ZVU4KDIwMCksdGhpcy53cml0ZVUxNih0KTtlbHNle2lmKCEodDw0Mjk0OTY3Mjk2KSl0aHJvdyBuZXcgRXJyb3IoXCJUb28gbGFyZ2UgZXh0ZW5zaW9uIG9iamVjdDogXCIrdCk7dGhpcy53cml0ZVU4KDIwMSksdGhpcy53cml0ZVUzMih0KX10aGlzLndyaXRlSTgoZS50eXBlKSx0aGlzLndyaXRlVThhKGUuZGF0YSl9LGUucHJvdG90eXBlLndyaXRlVTg9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSgxKSx0aGlzLnZpZXcuc2V0VWludDgodGhpcy5wb3MsZSksdGhpcy5wb3MrK30sZS5wcm90b3R5cGUud3JpdGVVOGE9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGg7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSh0KSx0aGlzLmJ5dGVzLnNldChlLHRoaXMucG9zKSx0aGlzLnBvcys9dH0sZS5wcm90b3R5cGUud3JpdGVJOD1mdW5jdGlvbihlKXt0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDEpLHRoaXMudmlldy5zZXRJbnQ4KHRoaXMucG9zLGUpLHRoaXMucG9zKyt9LGUucHJvdG90eXBlLndyaXRlVTE2PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoMiksdGhpcy52aWV3LnNldFVpbnQxNih0aGlzLnBvcyxlKSx0aGlzLnBvcys9Mn0sZS5wcm90b3R5cGUud3JpdGVJMTY9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSgyKSx0aGlzLnZpZXcuc2V0SW50MTYodGhpcy5wb3MsZSksdGhpcy5wb3MrPTJ9LGUucHJvdG90eXBlLndyaXRlVTMyPWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNCksdGhpcy52aWV3LnNldFVpbnQzMih0aGlzLnBvcyxlKSx0aGlzLnBvcys9NH0sZS5wcm90b3R5cGUud3JpdGVJMzI9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSg0KSx0aGlzLnZpZXcuc2V0SW50MzIodGhpcy5wb3MsZSksdGhpcy5wb3MrPTR9LGUucHJvdG90eXBlLndyaXRlRjMyPWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNCksdGhpcy52aWV3LnNldEZsb2F0MzIodGhpcy5wb3MsZSksdGhpcy5wb3MrPTR9LGUucHJvdG90eXBlLndyaXRlRjY0PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoOCksdGhpcy52aWV3LnNldEZsb2F0NjQodGhpcy5wb3MsZSksdGhpcy5wb3MrPTh9LGUucHJvdG90eXBlLndyaXRlVTY0PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoOCksZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIvNDI5NDk2NzI5NixvPXI7ZS5zZXRVaW50MzIodCxuKSxlLnNldFVpbnQzMih0KzQsbyl9KHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZS5wcm90b3R5cGUud3JpdGVJNjQ9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSg4KSxkKHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZS5wcm90b3R5cGUud3JpdGVCaWc2ND1mdW5jdGlvbihlKXt0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDgpLGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1OdW1iZXIoci9CaWdJbnQoNDI5NDk2NzI5NikpLG89TnVtYmVyKHIlQmlnSW50KDQyOTQ5NjcyOTYpKTtuPDAmJjAhPT1vJiYobi09MSksZS5zZXRVaW50MzIodCxuKSxlLnNldFVpbnQzMih0KzQsbyl9KHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZX0oKSxCPXt9O2Z1bmN0aW9uIFUoZSx0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9QiksbmV3IF8odC5leHRlbnNpb25Db2RlYyx0LmNvbnRleHQsdC5tYXhEZXB0aCx0LmluaXRpYWxCdWZmZXJTaXplLHQuc29ydEtleXMsdC5mb3JjZUZsb2F0MzIsdC5pZ25vcmVVbmRlZmluZWQsdC5mb3JjZUludGVnZXJUb0Zsb2F0KS5lbmNvZGUoZSl9ZnVuY3Rpb24gayhlKXtyZXR1cm4oZTwwP1wiLVwiOlwiXCIpK1wiMHhcIitNYXRoLmFicyhlKS50b1N0cmluZygxNikucGFkU3RhcnQoMixcIjBcIil9dmFyIEk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dm9pZCAwPT09ZSYmKGU9MTYpLHZvaWQgMD09PXQmJih0PTE2KSx0aGlzLm1heEtleUxlbmd0aD1lLHRoaXMubWF4TGVuZ3RoUGVyS2V5PXQsdGhpcy5oaXQ9MCx0aGlzLm1pc3M9MCx0aGlzLmNhY2hlcz1bXTtmb3IodmFyIHI9MDtyPHRoaXMubWF4S2V5TGVuZ3RoO3IrKyl0aGlzLmNhY2hlcy5wdXNoKFtdKX1yZXR1cm4gZS5wcm90b3R5cGUuY2FuQmVDYWNoZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MCYmZTw9dGhpcy5tYXhLZXlMZW5ndGh9LGUucHJvdG90eXBlLmdldD1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5jYWNoZXNbci0xXSxvPW4ubGVuZ3RoO2U6Zm9yKHZhciBzPTA7czxvO3MrKyl7Zm9yKHZhciBpPW5bc10sYT1pLmJ5dGVzLGM9MDtjPHI7YysrKWlmKGFbY10hPT1lW3QrY10pY29udGludWUgZTtyZXR1cm4gaS52YWx1ZX1yZXR1cm4gbnVsbH0sZS5wcm90b3R5cGUuc3RvcmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmNhY2hlc1tlLmxlbmd0aC0xXSxuPXtieXRlczplLHZhbHVlOnR9O3IubGVuZ3RoPj10aGlzLm1heExlbmd0aFBlcktleT9yW01hdGgucmFuZG9tKCkqci5sZW5ndGh8MF09bjpyLnB1c2gobil9LGUucHJvdG90eXBlLmRlY29kZT1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5nZXQoZSx0LHIpO2lmKG51bGwhPW4pcmV0dXJuIHRoaXMuaGl0Kyssbjt0aGlzLm1pc3MrKzt2YXIgbz1sKGUsdCxyKSxzPVVpbnQ4QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSx0LHQrcik7cmV0dXJuIHRoaXMuc3RvcmUocyxvKSxvfSxlfSgpLEM9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJm9bMF0pdGhyb3cgb1sxXTtyZXR1cm4gb1sxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBzPXtuZXh0OmEoMCksdGhyb3c6YSgxKSxyZXR1cm46YSgyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoc1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxzO2Z1bmN0aW9uIGEocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihzKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7aTspdHJ5e2lmKHI9MSxuJiYobz0yJnNbMF0/bi5yZXR1cm46c1swXT9uLnRocm93fHwoKG89bi5yZXR1cm4pJiZvLmNhbGwobiksMCk6bi5uZXh0KSYmIShvPW8uY2FsbChuLHNbMV0pKS5kb25lKXJldHVybiBvO3N3aXRjaChuPTAsbyYmKHM9WzImc1swXSxvLnZhbHVlXSksc1swXSl7Y2FzZSAwOmNhc2UgMTpvPXM7YnJlYWs7Y2FzZSA0OnJldHVybiBpLmxhYmVsKysse3ZhbHVlOnNbMV0sZG9uZTohMX07Y2FzZSA1OmkubGFiZWwrKyxuPXNbMV0scz1bMF07Y29udGludWU7Y2FzZSA3OnM9aS5vcHMucG9wKCksaS50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgobz0obz1pLnRyeXMpLmxlbmd0aD4wJiZvW28ubGVuZ3RoLTFdKXx8NiE9PXNbMF0mJjIhPT1zWzBdKSl7aT0wO2NvbnRpbnVlfWlmKDM9PT1zWzBdJiYoIW98fHNbMV0+b1swXSYmc1sxXTxvWzNdKSl7aS5sYWJlbD1zWzFdO2JyZWFrfWlmKDY9PT1zWzBdJiZpLmxhYmVsPG9bMV0pe2kubGFiZWw9b1sxXSxvPXM7YnJlYWt9aWYobyYmaS5sYWJlbDxvWzJdKXtpLmxhYmVsPW9bMl0saS5vcHMucHVzaChzKTticmVha31vWzJdJiZpLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWV9cz10LmNhbGwoZSxpKX1jYXRjaChlKXtzPVs2LGVdLG49MH1maW5hbGx5e3I9bz0wfWlmKDUmc1swXSl0aHJvdyBzWzFdO3JldHVybnt2YWx1ZTpzWzBdP3NbMV06dm9pZCAwLGRvbmU6ITB9fShbcyxhXSl9fX0sUj1mdW5jdGlvbihlKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTt2YXIgdCxyPWVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO3JldHVybiByP3IuY2FsbChlKTooZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBfX3ZhbHVlcz9fX3ZhbHVlcyhlKTplW1N5bWJvbC5pdGVyYXRvcl0oKSx0PXt9LG4oXCJuZXh0XCIpLG4oXCJ0aHJvd1wiKSxuKFwicmV0dXJuXCIpLHRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHQpO2Z1bmN0aW9uIG4ocil7dFtyXT1lW3JdJiZmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKG4sbyl7IWZ1bmN0aW9uKGUsdCxyLG4pe1Byb21pc2UucmVzb2x2ZShuKS50aGVuKChmdW5jdGlvbih0KXtlKHt2YWx1ZTp0LGRvbmU6cn0pfSksdCl9KG4sbywodD1lW3JdKHQpKS5kb25lLHQudmFsdWUpfSkpfX19LE89ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBPPyh0aGlzLnY9ZSx0aGlzKTpuZXcgTyhlKX0sRD1mdW5jdGlvbihlLHQscil7aWYoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7dmFyIG4sbz1yLmFwcGx5KGUsdHx8W10pLHM9W107cmV0dXJuIG49e30saShcIm5leHRcIiksaShcInRocm93XCIpLGkoXCJyZXR1cm5cIiksbltTeW1ib2wuYXN5bmNJdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sbjtmdW5jdGlvbiBpKGUpe29bZV0mJihuW2VdPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24ocixuKXtzLnB1c2goW2UsdCxyLG5dKT4xfHxhKGUsdCl9KSl9KX1mdW5jdGlvbiBhKGUsdCl7dHJ5eyhyPW9bZV0odCkpLnZhbHVlIGluc3RhbmNlb2YgTz9Qcm9taXNlLnJlc29sdmUoci52YWx1ZS52KS50aGVuKGMsdSk6bChzWzBdWzJdLHIpfWNhdGNoKGUpe2woc1swXVszXSxlKX12YXIgcn1mdW5jdGlvbiBjKGUpe2EoXCJuZXh0XCIsZSl9ZnVuY3Rpb24gdShlKXthKFwidGhyb3dcIixlKX1mdW5jdGlvbiBsKGUsdCl7ZSh0KSxzLnNoaWZ0KCkscy5sZW5ndGgmJmEoc1swXVswXSxzWzBdWzFdKX19LE49bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigwKSksUD1uZXcgVWludDhBcnJheShOLmJ1ZmZlciksTD1mdW5jdGlvbigpe3RyeXtOLmdldEludDgoMCl9Y2F0Y2goZSl7cmV0dXJuIGUuY29uc3RydWN0b3J9dGhyb3cgbmV3IEVycm9yKFwibmV2ZXIgcmVhY2hlZFwiKX0oKSxGPW5ldyBMKFwiSW5zdWZmaWNpZW50IGRhdGFcIiksej1uZXcgSSxqPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscixuLG8scyxpLGEpe3ZvaWQgMD09PWUmJihlPXguZGVmYXVsdENvZGVjKSx2b2lkIDA9PT10JiYodD12b2lkIDApLHZvaWQgMD09PXImJihyPTQyOTQ5NjcyOTUpLHZvaWQgMD09PW4mJihuPTQyOTQ5NjcyOTUpLHZvaWQgMD09PW8mJihvPTQyOTQ5NjcyOTUpLHZvaWQgMD09PXMmJihzPTQyOTQ5NjcyOTUpLHZvaWQgMD09PWkmJihpPTQyOTQ5NjcyOTUpLHZvaWQgMD09PWEmJihhPXopLHRoaXMuZXh0ZW5zaW9uQ29kZWM9ZSx0aGlzLmNvbnRleHQ9dCx0aGlzLm1heFN0ckxlbmd0aD1yLHRoaXMubWF4QmluTGVuZ3RoPW4sdGhpcy5tYXhBcnJheUxlbmd0aD1vLHRoaXMubWF4TWFwTGVuZ3RoPXMsdGhpcy5tYXhFeHRMZW5ndGg9aSx0aGlzLmtleURlY29kZXI9YSx0aGlzLnRvdGFsUG9zPTAsdGhpcy5wb3M9MCx0aGlzLnZpZXc9Tix0aGlzLmJ5dGVzPVAsdGhpcy5oZWFkQnl0ZT0tMSx0aGlzLnN0YWNrPVtdfXJldHVybiBlLnByb3RvdHlwZS5yZWluaXRpYWxpemVTdGF0ZT1mdW5jdGlvbigpe3RoaXMudG90YWxQb3M9MCx0aGlzLmhlYWRCeXRlPS0xfSxlLnByb3RvdHlwZS5zZXRCdWZmZXI9ZnVuY3Rpb24oZSl7dGhpcy5ieXRlcz1FKGUpLHRoaXMudmlldz1mdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIG5ldyBEYXRhVmlldyhlKTt2YXIgdD1FKGUpO3JldHVybiBuZXcgRGF0YVZpZXcodC5idWZmZXIsdC5ieXRlT2Zmc2V0LHQuYnl0ZUxlbmd0aCl9KHRoaXMuYnl0ZXMpLHRoaXMucG9zPTB9LGUucHJvdG90eXBlLmFwcGVuZEJ1ZmZlcj1mdW5jdGlvbihlKXtpZigtMSE9PXRoaXMuaGVhZEJ5dGV8fHRoaXMuaGFzUmVtYWluaW5nKCkpe3ZhciB0PXRoaXMuYnl0ZXMuc3ViYXJyYXkodGhpcy5wb3MpLHI9RShlKSxuPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoK3IubGVuZ3RoKTtuLnNldCh0KSxuLnNldChyLHQubGVuZ3RoKSx0aGlzLnNldEJ1ZmZlcihuKX1lbHNlIHRoaXMuc2V0QnVmZmVyKGUpfSxlLnByb3RvdHlwZS5oYXNSZW1haW5pbmc9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTEpLHRoaXMudmlldy5ieXRlTGVuZ3RoLXRoaXMucG9zPj1lfSxlLnByb3RvdHlwZS5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnZpZXcscj10aGlzLnBvcztyZXR1cm4gbmV3IFJhbmdlRXJyb3IoXCJFeHRyYSBcIisodC5ieXRlTGVuZ3RoLXIpK1wiIG9mIFwiK3QuYnl0ZUxlbmd0aCtcIiBieXRlKHMpIGZvdW5kIGF0IGJ1ZmZlcltcIitlK1wiXVwiKX0sZS5wcm90b3R5cGUuZGVjb2RlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJlaW5pdGlhbGl6ZVN0YXRlKCksdGhpcy5zZXRCdWZmZXIoZSksdGhpcy5kb0RlY29kZVNpbmdsZVN5bmMoKX0sZS5wcm90b3R5cGUuZG9EZWNvZGVTaW5nbGVTeW5jPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5kb0RlY29kZVN5bmMoKTtpZih0aGlzLmhhc1JlbWFpbmluZygpKXRocm93IHRoaXMuY3JlYXRlTm9FeHRyYUJ5dGVzRXJyb3IodGhpcy5wb3MpO3JldHVybiBlfSxlLnByb3RvdHlwZS5kZWNvZGVBc3luYz1mdW5jdGlvbihlKXt2YXIgdCxyLG4sbztyZXR1cm4gZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIG5ldyhyfHwocj1Qcm9taXNlKSkoKGZ1bmN0aW9uKG8scyl7ZnVuY3Rpb24gaShlKXt0cnl7YyhuLm5leHQoZSkpfWNhdGNoKGUpe3MoZSl9fWZ1bmN0aW9uIGEoZSl7dHJ5e2Mobi50aHJvdyhlKSl9Y2F0Y2goZSl7cyhlKX19ZnVuY3Rpb24gYyhlKXt2YXIgdDtlLmRvbmU/byhlLnZhbHVlKToodD1lLnZhbHVlLHQgaW5zdGFuY2VvZiByP3Q6bmV3IHIoKGZ1bmN0aW9uKGUpe2UodCl9KSkpLnRoZW4oaSxhKX1jKChuPW4uYXBwbHkoZSx0fHxbXSkpLm5leHQoKSl9KSl9KHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcyxpLGEsYyx1LGwsaCxwO3JldHVybiBDKHRoaXMsKGZ1bmN0aW9uKGYpe3N3aXRjaChmLmxhYmVsKXtjYXNlIDA6cz0hMSxmLmxhYmVsPTE7Y2FzZSAxOmYudHJ5cy5wdXNoKFsxLDYsNywxMl0pLHQ9UihlKSxmLmxhYmVsPTI7Y2FzZSAyOnJldHVybls0LHQubmV4dCgpXTtjYXNlIDM6aWYoKHI9Zi5zZW50KCkpLmRvbmUpcmV0dXJuWzMsNV07aWYoYT1yLnZhbHVlLHMpdGhyb3cgdGhpcy5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcih0aGlzLnRvdGFsUG9zKTt0aGlzLmFwcGVuZEJ1ZmZlcihhKTt0cnl7aT10aGlzLmRvRGVjb2RlU3luYygpLHM9ITB9Y2F0Y2goZSl7aWYoIShlIGluc3RhbmNlb2YgTCkpdGhyb3cgZX10aGlzLnRvdGFsUG9zKz10aGlzLnBvcyxmLmxhYmVsPTQ7Y2FzZSA0OnJldHVyblszLDJdO2Nhc2UgNTpyZXR1cm5bMywxMl07Y2FzZSA2OnJldHVybiBjPWYuc2VudCgpLG49e2Vycm9yOmN9LFszLDEyXTtjYXNlIDc6cmV0dXJuIGYudHJ5cy5wdXNoKFs3LCwxMCwxMV0pLHImJiFyLmRvbmUmJihvPXQucmV0dXJuKT9bNCxvLmNhbGwodCldOlszLDldO2Nhc2UgODpmLnNlbnQoKSxmLmxhYmVsPTk7Y2FzZSA5OnJldHVyblszLDExXTtjYXNlIDEwOmlmKG4pdGhyb3cgbi5lcnJvcjtyZXR1cm5bN107Y2FzZSAxMTpyZXR1cm5bN107Y2FzZSAxMjppZihzKXtpZih0aGlzLmhhc1JlbWFpbmluZygpKXRocm93IHRoaXMuY3JlYXRlTm9FeHRyYUJ5dGVzRXJyb3IodGhpcy50b3RhbFBvcyk7cmV0dXJuWzIsaV19dGhyb3cgbD0odT10aGlzKS5oZWFkQnl0ZSxoPXUucG9zLHA9dS50b3RhbFBvcyxuZXcgUmFuZ2VFcnJvcihcIkluc3VmZmljaWVudCBkYXRhIGluIHBhcmNpbmcgXCIrayhsKStcIiBhdCBcIitwK1wiIChcIitoK1wiIGluIHRoZSBjdXJyZW50IGJ1ZmZlcilcIil9fSkpfSkpfSxlLnByb3RvdHlwZS5kZWNvZGVBcnJheVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5kZWNvZGVNdWx0aUFzeW5jKGUsITApfSxlLnByb3RvdHlwZS5kZWNvZGVTdHJlYW09ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZGVjb2RlTXVsdGlBc3luYyhlLCExKX0sZS5wcm90b3R5cGUuZGVjb2RlTXVsdGlBc3luYz1mdW5jdGlvbihlLHQpe3JldHVybiBEKHRoaXMsYXJndW1lbnRzLChmdW5jdGlvbigpe3ZhciByLG4sbyxzLGksYSxjLHUsbDtyZXR1cm4gQyh0aGlzLChmdW5jdGlvbihoKXtzd2l0Y2goaC5sYWJlbCl7Y2FzZSAwOnI9dCxuPS0xLGgubGFiZWw9MTtjYXNlIDE6aC50cnlzLnB1c2goWzEsMTMsMTQsMTldKSxvPVIoZSksaC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCxPKG8ubmV4dCgpKV07Y2FzZSAzOmlmKChzPWguc2VudCgpKS5kb25lKXJldHVyblszLDEyXTtpZihpPXMudmFsdWUsdCYmMD09PW4pdGhyb3cgdGhpcy5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcih0aGlzLnRvdGFsUG9zKTt0aGlzLmFwcGVuZEJ1ZmZlcihpKSxyJiYobj10aGlzLnJlYWRBcnJheVNpemUoKSxyPSExLHRoaXMuY29tcGxldGUoKSksaC5sYWJlbD00O2Nhc2UgNDpoLnRyeXMucHVzaChbNCw5LCwxMF0pLGgubGFiZWw9NTtjYXNlIDU6cmV0dXJuWzQsTyh0aGlzLmRvRGVjb2RlU3luYygpKV07Y2FzZSA2OnJldHVybls0LGguc2VudCgpXTtjYXNlIDc6cmV0dXJuIGguc2VudCgpLDA9PS0tbj9bMyw4XTpbMyw1XTtjYXNlIDg6cmV0dXJuWzMsMTBdO2Nhc2UgOTppZighKChhPWguc2VudCgpKWluc3RhbmNlb2YgTCkpdGhyb3cgYTtyZXR1cm5bMywxMF07Y2FzZSAxMDp0aGlzLnRvdGFsUG9zKz10aGlzLnBvcyxoLmxhYmVsPTExO2Nhc2UgMTE6cmV0dXJuWzMsMl07Y2FzZSAxMjpyZXR1cm5bMywxOV07Y2FzZSAxMzpyZXR1cm4gYz1oLnNlbnQoKSx1PXtlcnJvcjpjfSxbMywxOV07Y2FzZSAxNDpyZXR1cm4gaC50cnlzLnB1c2goWzE0LCwxNywxOF0pLHMmJiFzLmRvbmUmJihsPW8ucmV0dXJuKT9bNCxPKGwuY2FsbChvKSldOlszLDE2XTtjYXNlIDE1Omguc2VudCgpLGgubGFiZWw9MTY7Y2FzZSAxNjpyZXR1cm5bMywxOF07Y2FzZSAxNzppZih1KXRocm93IHUuZXJyb3I7cmV0dXJuWzddO2Nhc2UgMTg6cmV0dXJuWzddO2Nhc2UgMTk6cmV0dXJuWzJdfX0pKX0pKX0sZS5wcm90b3R5cGUuZG9EZWNvZGVTeW5jPWZ1bmN0aW9uKCl7ZTpmb3IoOzspe3ZhciBlPXRoaXMucmVhZEhlYWRCeXRlKCksdD12b2lkIDA7aWYoZT49MjI0KXQ9ZS0yNTY7ZWxzZSBpZihlPDE5MilpZihlPDEyOCl0PWU7ZWxzZSBpZihlPDE0NCl7aWYoMCE9KG49ZS0xMjgpKXt0aGlzLnB1c2hNYXBTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PXt9fWVsc2UgaWYoZTwxNjApe2lmKDAhPShuPWUtMTQ0KSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2V7dmFyIHI9ZS0xNjA7dD10aGlzLmRlY29kZVV0ZjhTdHJpbmcociwwKX1lbHNlIGlmKDE5Mj09PWUpdD1udWxsO2Vsc2UgaWYoMTk0PT09ZSl0PSExO2Vsc2UgaWYoMTk1PT09ZSl0PSEwO2Vsc2UgaWYoMjAyPT09ZSl0PXRoaXMucmVhZEYzMigpO2Vsc2UgaWYoMjAzPT09ZSl0PXRoaXMucmVhZEY2NCgpO2Vsc2UgaWYoMjA0PT09ZSl0PXRoaXMucmVhZFU4KCk7ZWxzZSBpZigyMDU9PT1lKXQ9dGhpcy5yZWFkVTE2KCk7ZWxzZSBpZigyMDY9PT1lKXQ9dGhpcy5yZWFkVTMyKCk7ZWxzZSBpZigyMDc9PT1lKXQ9dGhpcy5yZWFkVTY0KCk7ZWxzZSBpZigyMDg9PT1lKXQ9dGhpcy5yZWFkSTgoKTtlbHNlIGlmKDIwOT09PWUpdD10aGlzLnJlYWRJMTYoKTtlbHNlIGlmKDIxMD09PWUpdD10aGlzLnJlYWRJMzIoKTtlbHNlIGlmKDIxMT09PWUpdD10aGlzLnJlYWRJNjQoKTtlbHNlIGlmKDIxNz09PWUpcj10aGlzLmxvb2tVOCgpLHQ9dGhpcy5kZWNvZGVVdGY4U3RyaW5nKHIsMSk7ZWxzZSBpZigyMTg9PT1lKXI9dGhpcy5sb29rVTE2KCksdD10aGlzLmRlY29kZVV0ZjhTdHJpbmcociwyKTtlbHNlIGlmKDIxOT09PWUpcj10aGlzLmxvb2tVMzIoKSx0PXRoaXMuZGVjb2RlVXRmOFN0cmluZyhyLDQpO2Vsc2UgaWYoMjIwPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUxNigpKSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2UgaWYoMjIxPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUzMigpKSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2UgaWYoMjIyPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUxNigpKSl7dGhpcy5wdXNoTWFwU3RhdGUobiksdGhpcy5jb21wbGV0ZSgpO2NvbnRpbnVlIGV9dD17fX1lbHNlIGlmKDIyMz09PWUpe2lmKDAhPT0obj10aGlzLnJlYWRVMzIoKSkpe3RoaXMucHVzaE1hcFN0YXRlKG4pLHRoaXMuY29tcGxldGUoKTtjb250aW51ZSBlfXQ9e319ZWxzZSBpZigxOTY9PT1lKXt2YXIgbj10aGlzLmxvb2tVOCgpO3Q9dGhpcy5kZWNvZGVCaW5hcnkobiwxKX1lbHNlIGlmKDE5Nz09PWUpbj10aGlzLmxvb2tVMTYoKSx0PXRoaXMuZGVjb2RlQmluYXJ5KG4sMik7ZWxzZSBpZigxOTg9PT1lKW49dGhpcy5sb29rVTMyKCksdD10aGlzLmRlY29kZUJpbmFyeShuLDQpO2Vsc2UgaWYoMjEyPT09ZSl0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKDEsMCk7ZWxzZSBpZigyMTM9PT1lKXQ9dGhpcy5kZWNvZGVFeHRlbnNpb24oMiwwKTtlbHNlIGlmKDIxND09PWUpdD10aGlzLmRlY29kZUV4dGVuc2lvbig0LDApO2Vsc2UgaWYoMjE1PT09ZSl0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKDgsMCk7ZWxzZSBpZigyMTY9PT1lKXQ9dGhpcy5kZWNvZGVFeHRlbnNpb24oMTYsMCk7ZWxzZSBpZigxOTk9PT1lKW49dGhpcy5sb29rVTgoKSx0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKG4sMSk7ZWxzZSBpZigyMDA9PT1lKW49dGhpcy5sb29rVTE2KCksdD10aGlzLmRlY29kZUV4dGVuc2lvbihuLDIpO2Vsc2V7aWYoMjAxIT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgdHlwZSBieXRlOiBcIitrKGUpKTtuPXRoaXMubG9va1UzMigpLHQ9dGhpcy5kZWNvZGVFeHRlbnNpb24obiw0KX10aGlzLmNvbXBsZXRlKCk7Zm9yKHZhciBvPXRoaXMuc3RhY2s7by5sZW5ndGg+MDspe3ZhciBzPW9bby5sZW5ndGgtMV07aWYoMD09PXMudHlwZSl7aWYocy5hcnJheVtzLnBvc2l0aW9uXT10LHMucG9zaXRpb24rKyxzLnBvc2l0aW9uIT09cy5zaXplKWNvbnRpbnVlIGU7by5wb3AoKSx0PXMuYXJyYXl9ZWxzZXtpZigxPT09cy50eXBlKXtpZih2b2lkIDAsXCJzdHJpbmdcIiE9KGk9dHlwZW9mIHQpJiZcIm51bWJlclwiIT09aSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgdHlwZSBvZiBrZXkgbXVzdCBiZSBzdHJpbmcgb3IgbnVtYmVyIGJ1dCBcIit0eXBlb2YgdCk7cy5rZXk9dCxzLnR5cGU9Mjtjb250aW51ZSBlfWlmKHMubWFwW3Mua2V5XT10LHMucmVhZENvdW50Kysscy5yZWFkQ291bnQhPT1zLnNpemUpe3Mua2V5PW51bGwscy50eXBlPTE7Y29udGludWUgZX1vLnBvcCgpLHQ9cy5tYXB9fXJldHVybiB0fXZhciBpfSxlLnByb3RvdHlwZS5yZWFkSGVhZEJ5dGU9ZnVuY3Rpb24oKXtyZXR1cm4tMT09PXRoaXMuaGVhZEJ5dGUmJih0aGlzLmhlYWRCeXRlPXRoaXMucmVhZFU4KCkpLHRoaXMuaGVhZEJ5dGV9LGUucHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7dGhpcy5oZWFkQnl0ZT0tMX0sZS5wcm90b3R5cGUucmVhZEFycmF5U2l6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucmVhZEhlYWRCeXRlKCk7c3dpdGNoKGUpe2Nhc2UgMjIwOnJldHVybiB0aGlzLnJlYWRVMTYoKTtjYXNlIDIyMTpyZXR1cm4gdGhpcy5yZWFkVTMyKCk7ZGVmYXVsdDppZihlPDE2MClyZXR1cm4gZS0xNDQ7dGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIGFycmF5IHR5cGUgYnl0ZTogXCIrayhlKSl9fSxlLnByb3RvdHlwZS5wdXNoTWFwU3RhdGU9ZnVuY3Rpb24oZSl7aWYoZT50aGlzLm1heE1hcExlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJNYXggbGVuZ3RoIGV4Y2VlZGVkOiBtYXAgbGVuZ3RoIChcIitlK1wiKSA+IG1heE1hcExlbmd0aExlbmd0aCAoXCIrdGhpcy5tYXhNYXBMZW5ndGgrXCIpXCIpO3RoaXMuc3RhY2sucHVzaCh7dHlwZToxLHNpemU6ZSxrZXk6bnVsbCxyZWFkQ291bnQ6MCxtYXA6e319KX0sZS5wcm90b3R5cGUucHVzaEFycmF5U3RhdGU9ZnVuY3Rpb24oZSl7aWYoZT50aGlzLm1heEFycmF5TGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1heCBsZW5ndGggZXhjZWVkZWQ6IGFycmF5IGxlbmd0aCAoXCIrZStcIikgPiBtYXhBcnJheUxlbmd0aCAoXCIrdGhpcy5tYXhBcnJheUxlbmd0aCtcIilcIik7dGhpcy5zdGFjay5wdXNoKHt0eXBlOjAsc2l6ZTplLGFycmF5Om5ldyBBcnJheShlKSxwb3NpdGlvbjowfSl9LGUucHJvdG90eXBlLmRlY29kZVV0ZjhTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihlPnRoaXMubWF4U3RyTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1heCBsZW5ndGggZXhjZWVkZWQ6IFVURi04IGJ5dGUgbGVuZ3RoIChcIitlK1wiKSA+IG1heFN0ckxlbmd0aCAoXCIrdGhpcy5tYXhTdHJMZW5ndGgrXCIpXCIpO2lmKHRoaXMuYnl0ZXMuYnl0ZUxlbmd0aDx0aGlzLnBvcyt0K2UpdGhyb3cgRjt2YXIgbixvPXRoaXMucG9zK3Q7cmV0dXJuIG49dGhpcy5zdGF0ZUlzTWFwS2V5KCkmJihudWxsPT09KHI9dGhpcy5rZXlEZWNvZGVyKXx8dm9pZCAwPT09cj92b2lkIDA6ci5jYW5CZUNhY2hlZChlKSk/dGhpcy5rZXlEZWNvZGVyLmRlY29kZSh0aGlzLmJ5dGVzLG8sZSk6cyYmZT5wP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lLnN1YmFycmF5KHQsdCtyKTtyZXR1cm4gaC5kZWNvZGUobil9KHRoaXMuYnl0ZXMsbyxlKTpsKHRoaXMuYnl0ZXMsbyxlKSx0aGlzLnBvcys9dCtlLG59LGUucHJvdG90eXBlLnN0YXRlSXNNYXBLZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFjay5sZW5ndGg+MCYmMT09PXRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGgtMV0udHlwZX0sZS5wcm90b3R5cGUuZGVjb2RlQmluYXJ5PWZ1bmN0aW9uKGUsdCl7aWYoZT50aGlzLm1heEJpbkxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJNYXggbGVuZ3RoIGV4Y2VlZGVkOiBiaW4gbGVuZ3RoIChcIitlK1wiKSA+IG1heEJpbkxlbmd0aCAoXCIrdGhpcy5tYXhCaW5MZW5ndGgrXCIpXCIpO2lmKCF0aGlzLmhhc1JlbWFpbmluZyhlK3QpKXRocm93IEY7dmFyIHI9dGhpcy5wb3MrdCxuPXRoaXMuYnl0ZXMuc3ViYXJyYXkocixyK2UpO3JldHVybiB0aGlzLnBvcys9dCtlLG59LGUucHJvdG90eXBlLmRlY29kZUV4dGVuc2lvbj1mdW5jdGlvbihlLHQpe2lmKGU+dGhpcy5tYXhFeHRMZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTWF4IGxlbmd0aCBleGNlZWRlZDogZXh0IGxlbmd0aCAoXCIrZStcIikgPiBtYXhFeHRMZW5ndGggKFwiK3RoaXMubWF4RXh0TGVuZ3RoK1wiKVwiKTt2YXIgcj10aGlzLnZpZXcuZ2V0SW50OCh0aGlzLnBvcyt0KSxuPXRoaXMuZGVjb2RlQmluYXJ5KGUsdCsxKTtyZXR1cm4gdGhpcy5leHRlbnNpb25Db2RlYy5kZWNvZGUobixyLHRoaXMuY29udGV4dCl9LGUucHJvdG90eXBlLmxvb2tVOD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZpZXcuZ2V0VWludDgodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5sb29rVTE2PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmlldy5nZXRVaW50MTYodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5sb29rVTMyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmlldy5nZXRVaW50MzIodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5yZWFkVTg9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0VWludDgodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcysrLGV9LGUucHJvdG90eXBlLnJlYWRJOD1mdW5jdGlvbigpe3ZhciBlPXRoaXMudmlldy5nZXRJbnQ4KHRoaXMucG9zKTtyZXR1cm4gdGhpcy5wb3MrKyxlfSxlLnByb3RvdHlwZS5yZWFkVTE2PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldFVpbnQxNih0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz0yLGV9LGUucHJvdG90eXBlLnJlYWRJMTY9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0SW50MTYodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9MixlfSxlLnByb3RvdHlwZS5yZWFkVTMyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldFVpbnQzMih0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz00LGV9LGUucHJvdG90eXBlLnJlYWRJMzI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0SW50MzIodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9NCxlfSxlLnByb3RvdHlwZS5yZWFkVTY0PWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4sbz0oZT10aGlzLnZpZXcsdD10aGlzLnBvcyxyPWUuZ2V0VWludDMyKHQpLG49ZS5nZXRVaW50MzIodCs0KSxyPk1hdGguZmxvb3IoTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIvNDI5NDk2NzI5Nik/QmlnSW50KHIpKkJpZ0ludCg0Mjk0OTY3Mjk2KStCaWdJbnQobik6NDI5NDk2NzI5NipyK24pO3JldHVybiB0aGlzLnBvcys9OCxvfSxlLnByb3RvdHlwZS5yZWFkSTY0PWZ1bmN0aW9uKCl7dmFyIGU9Zyh0aGlzLnZpZXcsdGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9OCxlfSxlLnByb3RvdHlwZS5yZWFkRjMyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldEZsb2F0MzIodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9NCxlfSxlLnByb3RvdHlwZS5yZWFkRjY0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldEZsb2F0NjQodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9OCxlfSxlfSgpLE09e307ZnVuY3Rpb24gSChlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1NKSxuZXcgaih0LmV4dGVuc2lvbkNvZGVjLHQuY29udGV4dCx0Lm1heFN0ckxlbmd0aCx0Lm1heEJpbkxlbmd0aCx0Lm1heEFycmF5TGVuZ3RoLHQubWF4TWFwTGVuZ3RoLHQubWF4RXh0TGVuZ3RoKS5kZWNvZGUoZSl9dmFyIEc9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJm9bMF0pdGhyb3cgb1sxXTtyZXR1cm4gb1sxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBzPXtuZXh0OmEoMCksdGhyb3c6YSgxKSxyZXR1cm46YSgyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoc1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxzO2Z1bmN0aW9uIGEocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihzKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7aTspdHJ5e2lmKHI9MSxuJiYobz0yJnNbMF0/bi5yZXR1cm46c1swXT9uLnRocm93fHwoKG89bi5yZXR1cm4pJiZvLmNhbGwobiksMCk6bi5uZXh0KSYmIShvPW8uY2FsbChuLHNbMV0pKS5kb25lKXJldHVybiBvO3N3aXRjaChuPTAsbyYmKHM9WzImc1swXSxvLnZhbHVlXSksc1swXSl7Y2FzZSAwOmNhc2UgMTpvPXM7YnJlYWs7Y2FzZSA0OnJldHVybiBpLmxhYmVsKysse3ZhbHVlOnNbMV0sZG9uZTohMX07Y2FzZSA1OmkubGFiZWwrKyxuPXNbMV0scz1bMF07Y29udGludWU7Y2FzZSA3OnM9aS5vcHMucG9wKCksaS50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgobz0obz1pLnRyeXMpLmxlbmd0aD4wJiZvW28ubGVuZ3RoLTFdKXx8NiE9PXNbMF0mJjIhPT1zWzBdKSl7aT0wO2NvbnRpbnVlfWlmKDM9PT1zWzBdJiYoIW98fHNbMV0+b1swXSYmc1sxXTxvWzNdKSl7aS5sYWJlbD1zWzFdO2JyZWFrfWlmKDY9PT1zWzBdJiZpLmxhYmVsPG9bMV0pe2kubGFiZWw9b1sxXSxvPXM7YnJlYWt9aWYobyYmaS5sYWJlbDxvWzJdKXtpLmxhYmVsPW9bMl0saS5vcHMucHVzaChzKTticmVha31vWzJdJiZpLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWV9cz10LmNhbGwoZSxpKX1jYXRjaChlKXtzPVs2LGVdLG49MH1maW5hbGx5e3I9bz0wfWlmKDUmc1swXSl0aHJvdyBzWzFdO3JldHVybnt2YWx1ZTpzWzBdP3NbMV06dm9pZCAwLGRvbmU6ITB9fShbcyxhXSl9fX0sSz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIEs/KHRoaXMudj1lLHRoaXMpOm5ldyBLKGUpfSxxPWZ1bmN0aW9uKGUsdCxyKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTt2YXIgbixvPXIuYXBwbHkoZSx0fHxbXSkscz1bXTtyZXR1cm4gbj17fSxpKFwibmV4dFwiKSxpKFwidGhyb3dcIiksaShcInJldHVyblwiKSxuW1N5bWJvbC5hc3luY0l0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxuO2Z1bmN0aW9uIGkoZSl7b1tlXSYmKG5bZV09ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbihyLG4pe3MucHVzaChbZSx0LHIsbl0pPjF8fGEoZSx0KX0pKX0pfWZ1bmN0aW9uIGEoZSx0KXt0cnl7KHI9b1tlXSh0KSkudmFsdWUgaW5zdGFuY2VvZiBLP1Byb21pc2UucmVzb2x2ZShyLnZhbHVlLnYpLnRoZW4oYyx1KTpsKHNbMF1bMl0scil9Y2F0Y2goZSl7bChzWzBdWzNdLGUpfXZhciByfWZ1bmN0aW9uIGMoZSl7YShcIm5leHRcIixlKX1mdW5jdGlvbiB1KGUpe2EoXCJ0aHJvd1wiLGUpfWZ1bmN0aW9uIGwoZSx0KXtlKHQpLHMuc2hpZnQoKSxzLmxlbmd0aCYmYShzWzBdWzBdLHNbMF1bMV0pfX07ZnVuY3Rpb24gJChlKXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIkFzc2VydGlvbiBGYWlsdXJlOiB2YWx1ZSBtdXN0IG5vdCBiZSBudWxsIG5vciB1bmRlZmluZWRcIil9ZnVuY3Rpb24gVihlKXtyZXR1cm4gbnVsbCE9ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0/ZTpmdW5jdGlvbihlKXtyZXR1cm4gcSh0aGlzLGFyZ3VtZW50cywoZnVuY3Rpb24oKXt2YXIgdCxyLG4sbztyZXR1cm4gRyh0aGlzLChmdW5jdGlvbihzKXtzd2l0Y2gocy5sYWJlbCl7Y2FzZSAwOnQ9ZS5nZXRSZWFkZXIoKSxzLmxhYmVsPTE7Y2FzZSAxOnMudHJ5cy5wdXNoKFsxLCw5LDEwXSkscy5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCxLKHQucmVhZCgpKV07Y2FzZSAzOnJldHVybiByPXMuc2VudCgpLG49ci5kb25lLG89ci52YWx1ZSxuP1s0LEsodm9pZCAwKV06WzMsNV07Y2FzZSA0OnJldHVyblsyLHMuc2VudCgpXTtjYXNlIDU6cmV0dXJuICQobyksWzQsSyhvKV07Y2FzZSA2OnJldHVybls0LHMuc2VudCgpXTtjYXNlIDc6cmV0dXJuIHMuc2VudCgpLFszLDJdO2Nhc2UgODpyZXR1cm5bMywxMF07Y2FzZSA5OnJldHVybiB0LnJlbGVhc2VMb2NrKCksWzddO2Nhc2UgMTA6cmV0dXJuWzJdfX0pKX0pKX0oZSl9ZnVuY3Rpb24gVyhlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1NKSxmdW5jdGlvbihlLHQscixuKXtyZXR1cm4gbmV3KHJ8fChyPVByb21pc2UpKSgoZnVuY3Rpb24obyxzKXtmdW5jdGlvbiBpKGUpe3RyeXtjKG4ubmV4dChlKSl9Y2F0Y2goZSl7cyhlKX19ZnVuY3Rpb24gYShlKXt0cnl7YyhuLnRocm93KGUpKX1jYXRjaChlKXtzKGUpfX1mdW5jdGlvbiBjKGUpe3ZhciB0O2UuZG9uZT9vKGUudmFsdWUpOih0PWUudmFsdWUsdCBpbnN0YW5jZW9mIHI/dDpuZXcgcigoZnVuY3Rpb24oZSl7ZSh0KX0pKSkudGhlbihpLGEpfWMoKG49bi5hcHBseShlLHR8fFtdKSkubmV4dCgpKX0pKX0odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByO3JldHVybiBmdW5jdGlvbihlLHQpe3ZhciByLG4sbyxzLGk9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmb1swXSl0aHJvdyBvWzFdO3JldHVybiBvWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHM9e25leHQ6YSgwKSx0aHJvdzphKDEpLHJldHVybjphKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihzW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHM7ZnVuY3Rpb24gYShzKXtyZXR1cm4gZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKHMpe2lmKHIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtpOyl0cnl7aWYocj0xLG4mJihvPTImc1swXT9uLnJldHVybjpzWzBdP24udGhyb3d8fCgobz1uLnJldHVybikmJm8uY2FsbChuKSwwKTpuLm5leHQpJiYhKG89by5jYWxsKG4sc1sxXSkpLmRvbmUpcmV0dXJuIG87c3dpdGNoKG49MCxvJiYocz1bMiZzWzBdLG8udmFsdWVdKSxzWzBdKXtjYXNlIDA6Y2FzZSAxOm89czticmVhaztjYXNlIDQ6cmV0dXJuIGkubGFiZWwrKyx7dmFsdWU6c1sxXSxkb25lOiExfTtjYXNlIDU6aS5sYWJlbCsrLG49c1sxXSxzPVswXTtjb250aW51ZTtjYXNlIDc6cz1pLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKChvPShvPWkudHJ5cykubGVuZ3RoPjAmJm9bby5sZW5ndGgtMV0pfHw2IT09c1swXSYmMiE9PXNbMF0pKXtpPTA7Y29udGludWV9aWYoMz09PXNbMF0mJighb3x8c1sxXT5vWzBdJiZzWzFdPG9bM10pKXtpLmxhYmVsPXNbMV07YnJlYWt9aWYoNj09PXNbMF0mJmkubGFiZWw8b1sxXSl7aS5sYWJlbD1vWzFdLG89czticmVha31pZihvJiZpLmxhYmVsPG9bMl0pe2kubGFiZWw9b1syXSxpLm9wcy5wdXNoKHMpO2JyZWFrfW9bMl0mJmkub3BzLnBvcCgpLGkudHJ5cy5wb3AoKTtjb250aW51ZX1zPXQuY2FsbChlLGkpfWNhdGNoKGUpe3M9WzYsZV0sbj0wfWZpbmFsbHl7cj1vPTB9aWYoNSZzWzBdKXRocm93IHNbMV07cmV0dXJue3ZhbHVlOnNbMF0/c1sxXTp2b2lkIDAsZG9uZTohMH19KFtzLGFdKX19fSh0aGlzLChmdW5jdGlvbihuKXtyZXR1cm4gcj1WKGUpLFsyLG5ldyBqKHQuZXh0ZW5zaW9uQ29kZWMsdC5jb250ZXh0LHQubWF4U3RyTGVuZ3RoLHQubWF4QmluTGVuZ3RoLHQubWF4QXJyYXlMZW5ndGgsdC5tYXhNYXBMZW5ndGgsdC5tYXhFeHRMZW5ndGgpLmRlY29kZUFzeW5jKHIpXX0pKX0pKX1mdW5jdGlvbiBYKGUsdCl7dm9pZCAwPT09dCYmKHQ9TSk7dmFyIHI9VihlKTtyZXR1cm4gbmV3IGoodC5leHRlbnNpb25Db2RlYyx0LmNvbnRleHQsdC5tYXhTdHJMZW5ndGgsdC5tYXhCaW5MZW5ndGgsdC5tYXhBcnJheUxlbmd0aCx0Lm1heE1hcExlbmd0aCx0Lm1heEV4dExlbmd0aCkuZGVjb2RlQXJyYXlTdHJlYW0ocil9ZnVuY3Rpb24gWShlLHQpe3ZvaWQgMD09PXQmJih0PU0pO3ZhciByPVYoZSk7cmV0dXJuIG5ldyBqKHQuZXh0ZW5zaW9uQ29kZWMsdC5jb250ZXh0LHQubWF4U3RyTGVuZ3RoLHQubWF4QmluTGVuZ3RoLHQubWF4QXJyYXlMZW5ndGgsdC5tYXhNYXBMZW5ndGgsdC5tYXhFeHRMZW5ndGgpLmRlY29kZVN0cmVhbShyKX19XSl9LDUxNTU6KGUsdCk9PntcInVzZSBzdHJpY3RcIjt0LmJ5dGVMZW5ndGg9ZnVuY3Rpb24oZSl7dmFyIHQ9YyhlKSxyPXRbMF0sbj10WzFdO3JldHVybiAzKihyK24pLzQtbn0sdC50b0J5dGVBcnJheT1mdW5jdGlvbihlKXt2YXIgdCxyLHM9YyhlKSxpPXNbMF0sYT1zWzFdLHU9bmV3IG8oZnVuY3Rpb24oZSx0LHIpe3JldHVybiAzKih0K3IpLzQtcn0oMCxpLGEpKSxsPTAsaD1hPjA/aS00Omk7Zm9yKHI9MDtyPGg7cis9NCl0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MTh8bltlLmNoYXJDb2RlQXQocisxKV08PDEyfG5bZS5jaGFyQ29kZUF0KHIrMildPDw2fG5bZS5jaGFyQ29kZUF0KHIrMyldLHVbbCsrXT10Pj4xNiYyNTUsdVtsKytdPXQ+PjgmMjU1LHVbbCsrXT0yNTUmdDtyZXR1cm4gMj09PWEmJih0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MnxuW2UuY2hhckNvZGVBdChyKzEpXT4+NCx1W2wrK109MjU1JnQpLDE9PT1hJiYodD1uW2UuY2hhckNvZGVBdChyKV08PDEwfG5bZS5jaGFyQ29kZUF0KHIrMSldPDw0fG5bZS5jaGFyQ29kZUF0KHIrMildPj4yLHVbbCsrXT10Pj44JjI1NSx1W2wrK109MjU1JnQpLHV9LHQuZnJvbUJ5dGVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj1lLmxlbmd0aCxvPW4lMyxzPVtdLGk9MTYzODMsYT0wLGM9bi1vO2E8YzthKz1pKXMucHVzaCh1KGUsYSxhK2k+Yz9jOmEraSkpO3JldHVybiAxPT09bz8odD1lW24tMV0scy5wdXNoKHJbdD4+Ml0rclt0PDw0JjYzXStcIj09XCIpKToyPT09byYmKHQ9KGVbbi0yXTw8OCkrZVtuLTFdLHMucHVzaChyW3Q+PjEwXStyW3Q+PjQmNjNdK3JbdDw8MiY2M10rXCI9XCIpKSxzLmpvaW4oXCJcIil9O2Zvcih2YXIgcj1bXSxuPVtdLG89XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXk/VWludDhBcnJheTpBcnJheSxzPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiLGk9MCxhPXMubGVuZ3RoO2k8YTsrK2kpcltpXT1zW2ldLG5bcy5jaGFyQ29kZUF0KGkpXT1pO2Z1bmN0aW9uIGMoZSl7dmFyIHQ9ZS5sZW5ndGg7aWYodCU0PjApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKTt2YXIgcj1lLmluZGV4T2YoXCI9XCIpO3JldHVybi0xPT09ciYmKHI9dCksW3Iscj09PXQ/MDo0LXIlNF19ZnVuY3Rpb24gdShlLHQsbil7Zm9yKHZhciBvLHMsaT1bXSxhPXQ7YTxuO2ErPTMpbz0oZVthXTw8MTYmMTY3MTE2ODApKyhlW2ErMV08PDgmNjUyODApKygyNTUmZVthKzJdKSxpLnB1c2goclsocz1vKT4+MTgmNjNdK3Jbcz4+MTImNjNdK3Jbcz4+NiY2M10rcls2MyZzXSk7cmV0dXJuIGkuam9pbihcIlwiKX1uW1wiLVwiLmNoYXJDb2RlQXQoMCldPTYyLG5bXCJfXCIuY2hhckNvZGVBdCgwKV09NjN9LDUxMTc6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuOyFmdW5jdGlvbihvKXtcInVzZSBzdHJpY3RcIjt2YXIgcyxpPS9eLT8oPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/JC9pLGE9TWF0aC5jZWlsLGM9TWF0aC5mbG9vcix1PVwiW0JpZ051bWJlciBFcnJvcl0gXCIsbD11K1wiTnVtYmVyIHByaW1pdGl2ZSBoYXMgbW9yZSB0aGFuIDE1IHNpZ25pZmljYW50IGRpZ2l0czogXCIsaD0xZTE0LHA9MTQsZj05MDA3MTk5MjU0NzQwOTkxLGQ9WzEsMTAsMTAwLDFlMywxZTQsMWU1LDFlNiwxZTcsMWU4LDFlOSwxZTEwLDFlMTEsMWUxMiwxZTEzXSxnPTFlNyx5PTFlOTtmdW5jdGlvbiBtKGUpe3ZhciB0PTB8ZTtyZXR1cm4gZT4wfHxlPT09dD90OnQtMX1mdW5jdGlvbiBiKGUpe2Zvcih2YXIgdCxyLG49MSxvPWUubGVuZ3RoLHM9ZVswXStcIlwiO248bzspe2Zvcih0PWVbbisrXStcIlwiLHI9cC10Lmxlbmd0aDtyLS07dD1cIjBcIit0KTtzKz10fWZvcihvPXMubGVuZ3RoOzQ4PT09cy5jaGFyQ29kZUF0KC0tbyk7KTtyZXR1cm4gcy5zbGljZSgwLG8rMXx8MSl9ZnVuY3Rpb24gQShlLHQpe3ZhciByLG4sbz1lLmMscz10LmMsaT1lLnMsYT10LnMsYz1lLmUsdT10LmU7aWYoIWl8fCFhKXJldHVybiBudWxsO2lmKHI9byYmIW9bMF0sbj1zJiYhc1swXSxyfHxuKXJldHVybiByP24/MDotYTppO2lmKGkhPWEpcmV0dXJuIGk7aWYocj1pPDAsbj1jPT11LCFvfHwhcylyZXR1cm4gbj8wOiFvXnI/MTotMTtpZighbilyZXR1cm4gYz51XnI/MTotMTtmb3IoYT0oYz1vLmxlbmd0aCk8KHU9cy5sZW5ndGgpP2M6dSxpPTA7aTxhO2krKylpZihvW2ldIT1zW2ldKXJldHVybiBvW2ldPnNbaV1ecj8xOi0xO3JldHVybiBjPT11PzA6Yz51XnI/MTotMX1mdW5jdGlvbiB3KGUsdCxyLG4pe2lmKGU8dHx8ZT5yfHxlIT09YyhlKSl0aHJvdyBFcnJvcih1KyhufHxcIkFyZ3VtZW50XCIpKyhcIm51bWJlclwiPT10eXBlb2YgZT9lPHR8fGU+cj9cIiBvdXQgb2YgcmFuZ2U6IFwiOlwiIG5vdCBhbiBpbnRlZ2VyOiBcIjpcIiBub3QgYSBwcmltaXRpdmUgbnVtYmVyOiBcIikrU3RyaW5nKGUpKX1mdW5jdGlvbiB2KGUpe3ZhciB0PWUuYy5sZW5ndGgtMTtyZXR1cm4gbShlLmUvcCk9PXQmJmUuY1t0XSUyIT0wfWZ1bmN0aW9uIFMoZSx0KXtyZXR1cm4oZS5sZW5ndGg+MT9lLmNoYXJBdCgwKStcIi5cIitlLnNsaWNlKDEpOmUpKyh0PDA/XCJlXCI6XCJlK1wiKSt0fWZ1bmN0aW9uIHgoZSx0LHIpe3ZhciBuLG87aWYodDwwKXtmb3Iobz1yK1wiLlwiOysrdDtvKz1yKTtlPW8rZX1lbHNlIGlmKCsrdD4obj1lLmxlbmd0aCkpe2ZvcihvPXIsdC09bjstLXQ7bys9cik7ZSs9b31lbHNlIHQ8biYmKGU9ZS5zbGljZSgwLHQpK1wiLlwiK2Uuc2xpY2UodCkpO3JldHVybiBlfShzPWZ1bmN0aW9uIGUodCl7dmFyIHIsbixvLHMsRSxULF8sQixVLGssST1HLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Ryx0b1N0cmluZzpudWxsLHZhbHVlT2Y6bnVsbH0sQz1uZXcgRygxKSxSPTIwLE89NCxEPS03LE49MjEsUD0tMWU3LEw9MWU3LEY9ITEsej0xLGo9MCxNPXtwcmVmaXg6XCJcIixncm91cFNpemU6MyxzZWNvbmRhcnlHcm91cFNpemU6MCxncm91cFNlcGFyYXRvcjpcIixcIixkZWNpbWFsU2VwYXJhdG9yOlwiLlwiLGZyYWN0aW9uR3JvdXBTaXplOjAsZnJhY3Rpb25Hcm91cFNlcGFyYXRvcjpcIsKgXCIsc3VmZml4OlwiXCJ9LEg9XCIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpcIjtmdW5jdGlvbiBHKGUsdCl7dmFyIHIscyxhLHUsaCxkLGcseSxtPXRoaXM7aWYoIShtIGluc3RhbmNlb2YgRykpcmV0dXJuIG5ldyBHKGUsdCk7aWYobnVsbD09dCl7aWYoZSYmITA9PT1lLl9pc0JpZ051bWJlcilyZXR1cm4gbS5zPWUucyx2b2lkKCFlLmN8fGUuZT5MP20uYz1tLmU9bnVsbDplLmU8UD9tLmM9W20uZT0wXToobS5lPWUuZSxtLmM9ZS5jLnNsaWNlKCkpKTtpZigoZD1cIm51bWJlclwiPT10eXBlb2YgZSkmJjAqZT09MCl7aWYobS5zPTEvZTwwPyhlPS1lLC0xKToxLGU9PT1+fmUpe2Zvcih1PTAsaD1lO2g+PTEwO2gvPTEwLHUrKyk7cmV0dXJuIHZvaWQodT5MP20uYz1tLmU9bnVsbDoobS5lPXUsbS5jPVtlXSkpfXk9U3RyaW5nKGUpfWVsc2V7aWYoIWkudGVzdCh5PVN0cmluZyhlKSkpcmV0dXJuIG8obSx5LGQpO20ucz00NT09eS5jaGFyQ29kZUF0KDApPyh5PXkuc2xpY2UoMSksLTEpOjF9KHU9eS5pbmRleE9mKFwiLlwiKSk+LTEmJih5PXkucmVwbGFjZShcIi5cIixcIlwiKSksKGg9eS5zZWFyY2goL2UvaSkpPjA/KHU8MCYmKHU9aCksdSs9K3kuc2xpY2UoaCsxKSx5PXkuc3Vic3RyaW5nKDAsaCkpOnU8MCYmKHU9eS5sZW5ndGgpfWVsc2V7aWYodyh0LDIsSC5sZW5ndGgsXCJCYXNlXCIpLDEwPT10KXJldHVybiBWKG09bmV3IEcoZSksUittLmUrMSxPKTtpZih5PVN0cmluZyhlKSxkPVwibnVtYmVyXCI9PXR5cGVvZiBlKXtpZigwKmUhPTApcmV0dXJuIG8obSx5LGQsdCk7aWYobS5zPTEvZTwwPyh5PXkuc2xpY2UoMSksLTEpOjEsRy5ERUJVRyYmeS5yZXBsYWNlKC9eMFxcLjAqfFxcLi8sXCJcIikubGVuZ3RoPjE1KXRocm93IEVycm9yKGwrZSl9ZWxzZSBtLnM9NDU9PT15LmNoYXJDb2RlQXQoMCk/KHk9eS5zbGljZSgxKSwtMSk6MTtmb3Iocj1ILnNsaWNlKDAsdCksdT1oPTAsZz15Lmxlbmd0aDtoPGc7aCsrKWlmKHIuaW5kZXhPZihzPXkuY2hhckF0KGgpKTwwKXtpZihcIi5cIj09cyl7aWYoaD51KXt1PWc7Y29udGludWV9fWVsc2UgaWYoIWEmJih5PT15LnRvVXBwZXJDYXNlKCkmJih5PXkudG9Mb3dlckNhc2UoKSl8fHk9PXkudG9Mb3dlckNhc2UoKSYmKHk9eS50b1VwcGVyQ2FzZSgpKSkpe2E9ITAsaD0tMSx1PTA7Y29udGludWV9cmV0dXJuIG8obSxTdHJpbmcoZSksZCx0KX1kPSExLCh1PSh5PW4oeSx0LDEwLG0ucykpLmluZGV4T2YoXCIuXCIpKT4tMT95PXkucmVwbGFjZShcIi5cIixcIlwiKTp1PXkubGVuZ3RofWZvcihoPTA7NDg9PT15LmNoYXJDb2RlQXQoaCk7aCsrKTtmb3IoZz15Lmxlbmd0aDs0OD09PXkuY2hhckNvZGVBdCgtLWcpOyk7aWYoeT15LnNsaWNlKGgsKytnKSl7aWYoZy09aCxkJiZHLkRFQlVHJiZnPjE1JiYoZT5mfHxlIT09YyhlKSkpdGhyb3cgRXJyb3IobCttLnMqZSk7aWYoKHU9dS1oLTEpPkwpbS5jPW0uZT1udWxsO2Vsc2UgaWYodTxQKW0uYz1bbS5lPTBdO2Vsc2V7aWYobS5lPXUsbS5jPVtdLGg9KHUrMSklcCx1PDAmJihoKz1wKSxoPGcpe2ZvcihoJiZtLmMucHVzaCgreS5zbGljZSgwLGgpKSxnLT1wO2g8ZzspbS5jLnB1c2goK3kuc2xpY2UoaCxoKz1wKSk7aD1wLSh5PXkuc2xpY2UoaCkpLmxlbmd0aH1lbHNlIGgtPWc7Zm9yKDtoLS07eSs9XCIwXCIpO20uYy5wdXNoKCt5KX19ZWxzZSBtLmM9W20uZT0wXX1mdW5jdGlvbiBLKGUsdCxyLG4pe3ZhciBvLHMsaSxhLGM7aWYobnVsbD09cj9yPU86dyhyLDAsOCksIWUuYylyZXR1cm4gZS50b1N0cmluZygpO2lmKG89ZS5jWzBdLGk9ZS5lLG51bGw9PXQpYz1iKGUuYyksYz0xPT1ufHwyPT1uJiYoaTw9RHx8aT49Tik/UyhjLGkpOngoYyxpLFwiMFwiKTtlbHNlIGlmKHM9KGU9VihuZXcgRyhlKSx0LHIpKS5lLGE9KGM9YihlLmMpKS5sZW5ndGgsMT09bnx8Mj09biYmKHQ8PXN8fHM8PUQpKXtmb3IoO2E8dDtjKz1cIjBcIixhKyspO2M9UyhjLHMpfWVsc2UgaWYodC09aSxjPXgoYyxzLFwiMFwiKSxzKzE+YSl7aWYoLS10PjApZm9yKGMrPVwiLlwiO3QtLTtjKz1cIjBcIik7fWVsc2UgaWYoKHQrPXMtYSk+MClmb3IocysxPT1hJiYoYys9XCIuXCIpO3QtLTtjKz1cIjBcIik7cmV0dXJuIGUuczwwJiZvP1wiLVwiK2M6Y31mdW5jdGlvbiBxKGUsdCl7Zm9yKHZhciByLG49MSxvPW5ldyBHKGVbMF0pO248ZS5sZW5ndGg7bisrKXtpZighKHI9bmV3IEcoZVtuXSkpLnMpe289cjticmVha310LmNhbGwobyxyKSYmKG89cil9cmV0dXJuIG99ZnVuY3Rpb24gJChlLHQscil7Zm9yKHZhciBuPTEsbz10Lmxlbmd0aDshdFstLW9dO3QucG9wKCkpO2ZvcihvPXRbMF07bz49MTA7by89MTAsbisrKTtyZXR1cm4ocj1uK3IqcC0xKT5MP2UuYz1lLmU9bnVsbDpyPFA/ZS5jPVtlLmU9MF06KGUuZT1yLGUuYz10KSxlfWZ1bmN0aW9uIFYoZSx0LHIsbil7dmFyIG8scyxpLHUsbCxmLGcseT1lLmMsbT1kO2lmKHkpe2U6e2ZvcihvPTEsdT15WzBdO3U+PTEwO3UvPTEwLG8rKyk7aWYoKHM9dC1vKTwwKXMrPXAsaT10LGc9KGw9eVtmPTBdKS9tW28taS0xXSUxMHwwO2Vsc2UgaWYoKGY9YSgocysxKS9wKSk+PXkubGVuZ3RoKXtpZighbilicmVhayBlO2Zvcig7eS5sZW5ndGg8PWY7eS5wdXNoKDApKTtsPWc9MCxvPTEsaT0ocyU9cCktcCsxfWVsc2V7Zm9yKGw9dT15W2ZdLG89MTt1Pj0xMDt1Lz0xMCxvKyspO2c9KGk9KHMlPXApLXArbyk8MD8wOmwvbVtvLWktMV0lMTB8MH1pZihuPW58fHQ8MHx8bnVsbCE9eVtmKzFdfHwoaTwwP2w6bCVtW28taS0xXSksbj1yPDQ/KGd8fG4pJiYoMD09cnx8cj09KGUuczwwPzM6MikpOmc+NXx8NT09ZyYmKDQ9PXJ8fG58fDY9PXImJihzPjA/aT4wP2wvbVtvLWldOjA6eVtmLTFdKSUxMCYxfHxyPT0oZS5zPDA/ODo3KSksdDwxfHwheVswXSlyZXR1cm4geS5sZW5ndGg9MCxuPyh0LT1lLmUrMSx5WzBdPW1bKHAtdCVwKSVwXSxlLmU9LXR8fDApOnlbMF09ZS5lPTAsZTtpZigwPT1zPyh5Lmxlbmd0aD1mLHU9MSxmLS0pOih5Lmxlbmd0aD1mKzEsdT1tW3Atc10seVtmXT1pPjA/YyhsL21bby1pXSVtW2ldKSp1OjApLG4pZm9yKDs7KXtpZigwPT1mKXtmb3Iocz0xLGk9eVswXTtpPj0xMDtpLz0xMCxzKyspO2ZvcihpPXlbMF0rPXUsdT0xO2k+PTEwO2kvPTEwLHUrKyk7cyE9dSYmKGUuZSsrLHlbMF09PWgmJih5WzBdPTEpKTticmVha31pZih5W2ZdKz11LHlbZl0hPWgpYnJlYWs7eVtmLS1dPTAsdT0xfWZvcihzPXkubGVuZ3RoOzA9PT15Wy0tc107eS5wb3AoKSk7fWUuZT5MP2UuYz1lLmU9bnVsbDplLmU8UCYmKGUuYz1bZS5lPTBdKX1yZXR1cm4gZX1mdW5jdGlvbiBXKGUpe3ZhciB0LHI9ZS5lO3JldHVybiBudWxsPT09cj9lLnRvU3RyaW5nKCk6KHQ9YihlLmMpLHQ9cjw9RHx8cj49Tj9TKHQscik6eCh0LHIsXCIwXCIpLGUuczwwP1wiLVwiK3Q6dCl9cmV0dXJuIEcuY2xvbmU9ZSxHLlJPVU5EX1VQPTAsRy5ST1VORF9ET1dOPTEsRy5ST1VORF9DRUlMPTIsRy5ST1VORF9GTE9PUj0zLEcuUk9VTkRfSEFMRl9VUD00LEcuUk9VTkRfSEFMRl9ET1dOPTUsRy5ST1VORF9IQUxGX0VWRU49NixHLlJPVU5EX0hBTEZfQ0VJTD03LEcuUk9VTkRfSEFMRl9GTE9PUj04LEcuRVVDTElEPTksRy5jb25maWc9Ry5zZXQ9ZnVuY3Rpb24oZSl7dmFyIHQscjtpZihudWxsIT1lKXtpZihcIm9iamVjdFwiIT10eXBlb2YgZSl0aHJvdyBFcnJvcih1K1wiT2JqZWN0IGV4cGVjdGVkOiBcIitlKTtpZihlLmhhc093blByb3BlcnR5KHQ9XCJERUNJTUFMX1BMQUNFU1wiKSYmKHcocj1lW3RdLDAseSx0KSxSPXIpLGUuaGFzT3duUHJvcGVydHkodD1cIlJPVU5ESU5HX01PREVcIikmJih3KHI9ZVt0XSwwLDgsdCksTz1yKSxlLmhhc093blByb3BlcnR5KHQ9XCJFWFBPTkVOVElBTF9BVFwiKSYmKChyPWVbdF0pJiZyLnBvcD8odyhyWzBdLC15LDAsdCksdyhyWzFdLDAseSx0KSxEPXJbMF0sTj1yWzFdKToodyhyLC15LHksdCksRD0tKE49cjwwPy1yOnIpKSksZS5oYXNPd25Qcm9wZXJ0eSh0PVwiUkFOR0VcIikpaWYoKHI9ZVt0XSkmJnIucG9wKXcoclswXSwteSwtMSx0KSx3KHJbMV0sMSx5LHQpLFA9clswXSxMPXJbMV07ZWxzZXtpZih3KHIsLXkseSx0KSwhcil0aHJvdyBFcnJvcih1K3QrXCIgY2Fubm90IGJlIHplcm86IFwiK3IpO1A9LShMPXI8MD8tcjpyKX1pZihlLmhhc093blByb3BlcnR5KHQ9XCJDUllQVE9cIikpe2lmKChyPWVbdF0pIT09ISFyKXRocm93IEVycm9yKHUrdCtcIiBub3QgdHJ1ZSBvciBmYWxzZTogXCIrcik7aWYocil7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGNyeXB0b3x8IWNyeXB0b3x8IWNyeXB0by5nZXRSYW5kb21WYWx1ZXMmJiFjcnlwdG8ucmFuZG9tQnl0ZXMpdGhyb3cgRj0hcixFcnJvcih1K1wiY3J5cHRvIHVuYXZhaWxhYmxlXCIpO0Y9cn1lbHNlIEY9cn1pZihlLmhhc093blByb3BlcnR5KHQ9XCJNT0RVTE9fTU9ERVwiKSYmKHcocj1lW3RdLDAsOSx0KSx6PXIpLGUuaGFzT3duUHJvcGVydHkodD1cIlBPV19QUkVDSVNJT05cIikmJih3KHI9ZVt0XSwwLHksdCksaj1yKSxlLmhhc093blByb3BlcnR5KHQ9XCJGT1JNQVRcIikpe2lmKFwib2JqZWN0XCIhPXR5cGVvZihyPWVbdF0pKXRocm93IEVycm9yKHUrdCtcIiBub3QgYW4gb2JqZWN0OiBcIityKTtNPXJ9aWYoZS5oYXNPd25Qcm9wZXJ0eSh0PVwiQUxQSEFCRVRcIikpe2lmKFwic3RyaW5nXCIhPXR5cGVvZihyPWVbdF0pfHwvXi4/JHxbK1xcLS5cXHNdfCguKS4qXFwxLy50ZXN0KHIpKXRocm93IEVycm9yKHUrdCtcIiBpbnZhbGlkOiBcIityKTtIPXJ9fXJldHVybntERUNJTUFMX1BMQUNFUzpSLFJPVU5ESU5HX01PREU6TyxFWFBPTkVOVElBTF9BVDpbRCxOXSxSQU5HRTpbUCxMXSxDUllQVE86RixNT0RVTE9fTU9ERTp6LFBPV19QUkVDSVNJT046aixGT1JNQVQ6TSxBTFBIQUJFVDpIfX0sRy5pc0JpZ051bWJlcj1mdW5jdGlvbihlKXtpZighZXx8ITAhPT1lLl9pc0JpZ051bWJlcilyZXR1cm4hMTtpZighRy5ERUJVRylyZXR1cm4hMDt2YXIgdCxyLG49ZS5jLG89ZS5lLHM9ZS5zO2U6aWYoXCJbb2JqZWN0IEFycmF5XVwiPT17fS50b1N0cmluZy5jYWxsKG4pKXtpZigoMT09PXN8fC0xPT09cykmJm8+PS15JiZvPD15JiZvPT09YyhvKSl7aWYoMD09PW5bMF0pe2lmKDA9PT1vJiYxPT09bi5sZW5ndGgpcmV0dXJuITA7YnJlYWsgZX1pZigodD0obysxKSVwKTwxJiYodCs9cCksU3RyaW5nKG5bMF0pLmxlbmd0aD09dCl7Zm9yKHQ9MDt0PG4ubGVuZ3RoO3QrKylpZigocj1uW3RdKTwwfHxyPj1ofHxyIT09YyhyKSlicmVhayBlO2lmKDAhPT1yKXJldHVybiEwfX19ZWxzZSBpZihudWxsPT09biYmbnVsbD09PW8mJihudWxsPT09c3x8MT09PXN8fC0xPT09cykpcmV0dXJuITA7dGhyb3cgRXJyb3IodStcIkludmFsaWQgQmlnTnVtYmVyOiBcIitlKX0sRy5tYXhpbXVtPUcubWF4PWZ1bmN0aW9uKCl7cmV0dXJuIHEoYXJndW1lbnRzLEkubHQpfSxHLm1pbmltdW09Ry5taW49ZnVuY3Rpb24oKXtyZXR1cm4gcShhcmd1bWVudHMsSS5ndCl9LEcucmFuZG9tPShzPTkwMDcxOTkyNTQ3NDA5OTIsRT1NYXRoLnJhbmRvbSgpKnMmMjA5NzE1MT9mdW5jdGlvbigpe3JldHVybiBjKE1hdGgucmFuZG9tKCkqcyl9OmZ1bmN0aW9uKCl7cmV0dXJuIDgzODg2MDgqKDEwNzM3NDE4MjQqTWF0aC5yYW5kb20oKXwwKSsoODM4ODYwOCpNYXRoLnJhbmRvbSgpfDApfSxmdW5jdGlvbihlKXt2YXIgdCxyLG4sbyxzLGk9MCxsPVtdLGg9bmV3IEcoQyk7aWYobnVsbD09ZT9lPVI6dyhlLDAseSksbz1hKGUvcCksRilpZihjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKXtmb3IodD1jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50MzJBcnJheShvKj0yKSk7aTxvOykocz0xMzEwNzIqdFtpXSsodFtpKzFdPj4+MTEpKT49OWUxNT8ocj1jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50MzJBcnJheSgyKSksdFtpXT1yWzBdLHRbaSsxXT1yWzFdKToobC5wdXNoKHMlMWUxNCksaSs9Mik7aT1vLzJ9ZWxzZXtpZighY3J5cHRvLnJhbmRvbUJ5dGVzKXRocm93IEY9ITEsRXJyb3IodStcImNyeXB0byB1bmF2YWlsYWJsZVwiKTtmb3IodD1jcnlwdG8ucmFuZG9tQnl0ZXMobyo9Nyk7aTxvOykocz0yODE0NzQ5NzY3MTA2NTYqKDMxJnRbaV0pKzEwOTk1MTE2Mjc3NzYqdFtpKzFdKzQyOTQ5NjcyOTYqdFtpKzJdKzE2Nzc3MjE2KnRbaSszXSsodFtpKzRdPDwxNikrKHRbaSs1XTw8OCkrdFtpKzZdKT49OWUxNT9jcnlwdG8ucmFuZG9tQnl0ZXMoNykuY29weSh0LGkpOihsLnB1c2gocyUxZTE0KSxpKz03KTtpPW8vN31pZighRilmb3IoO2k8bzspKHM9RSgpKTw5ZTE1JiYobFtpKytdPXMlMWUxNCk7Zm9yKG89bFstLWldLGUlPXAsbyYmZSYmKHM9ZFtwLWVdLGxbaV09YyhvL3MpKnMpOzA9PT1sW2ldO2wucG9wKCksaS0tKTtpZihpPDApbD1bbj0wXTtlbHNle2ZvcihuPS0xOzA9PT1sWzBdO2wuc3BsaWNlKDAsMSksbi09cCk7Zm9yKGk9MSxzPWxbMF07cz49MTA7cy89MTAsaSsrKTtpPHAmJihuLT1wLWkpfXJldHVybiBoLmU9bixoLmM9bCxofSksRy5zdW09ZnVuY3Rpb24oKXtmb3IodmFyIGU9MSx0PWFyZ3VtZW50cyxyPW5ldyBHKHRbMF0pO2U8dC5sZW5ndGg7KXI9ci5wbHVzKHRbZSsrXSk7cmV0dXJuIHJ9LG49ZnVuY3Rpb24oKXt2YXIgZT1cIjAxMjM0NTY3ODlcIjtmdW5jdGlvbiB0KGUsdCxyLG4pe2Zvcih2YXIgbyxzLGk9WzBdLGE9MCxjPWUubGVuZ3RoO2E8Yzspe2ZvcihzPWkubGVuZ3RoO3MtLTtpW3NdKj10KTtmb3IoaVswXSs9bi5pbmRleE9mKGUuY2hhckF0KGErKykpLG89MDtvPGkubGVuZ3RoO28rKylpW29dPnItMSYmKG51bGw9PWlbbysxXSYmKGlbbysxXT0wKSxpW28rMV0rPWlbb10vcnwwLGlbb10lPXIpfXJldHVybiBpLnJldmVyc2UoKX1yZXR1cm4gZnVuY3Rpb24obixvLHMsaSxhKXt2YXIgYyx1LGwsaCxwLGYsZCxnLHk9bi5pbmRleE9mKFwiLlwiKSxtPVIsQT1PO2Zvcih5Pj0wJiYoaD1qLGo9MCxuPW4ucmVwbGFjZShcIi5cIixcIlwiKSxmPShnPW5ldyBHKG8pKS5wb3cobi5sZW5ndGgteSksaj1oLGcuYz10KHgoYihmLmMpLGYuZSxcIjBcIiksMTAscyxlKSxnLmU9Zy5jLmxlbmd0aCksbD1oPShkPXQobixvLHMsYT8oYz1ILGUpOihjPWUsSCkpKS5sZW5ndGg7MD09ZFstLWhdO2QucG9wKCkpO2lmKCFkWzBdKXJldHVybiBjLmNoYXJBdCgwKTtpZih5PDA/LS1sOihmLmM9ZCxmLmU9bCxmLnM9aSxkPShmPXIoZixnLG0sQSxzKSkuYyxwPWYucixsPWYuZSkseT1kW3U9bCttKzFdLGg9cy8yLHA9cHx8dTwwfHxudWxsIT1kW3UrMV0scD1BPDQ/KG51bGwhPXl8fHApJiYoMD09QXx8QT09KGYuczwwPzM6MikpOnk+aHx8eT09aCYmKDQ9PUF8fHB8fDY9PUEmJjEmZFt1LTFdfHxBPT0oZi5zPDA/ODo3KSksdTwxfHwhZFswXSluPXA/eChjLmNoYXJBdCgxKSwtbSxjLmNoYXJBdCgwKSk6Yy5jaGFyQXQoMCk7ZWxzZXtpZihkLmxlbmd0aD11LHApZm9yKC0tczsrK2RbLS11XT5zOylkW3VdPTAsdXx8KCsrbCxkPVsxXS5jb25jYXQoZCkpO2ZvcihoPWQubGVuZ3RoOyFkWy0taF07KTtmb3IoeT0wLG49XCJcIjt5PD1oO24rPWMuY2hhckF0KGRbeSsrXSkpO249eChuLGwsYy5jaGFyQXQoMCkpfXJldHVybiBufX0oKSxyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscil7dmFyIG4sbyxzLGksYT0wLGM9ZS5sZW5ndGgsdT10JWcsbD10L2d8MDtmb3IoZT1lLnNsaWNlKCk7Yy0tOylhPSgobz11KihzPWVbY10lZykrKG49bCpzKyhpPWVbY10vZ3wwKSp1KSVnKmcrYSkvcnwwKSsobi9nfDApK2wqaSxlW2NdPW8lcjtyZXR1cm4gYSYmKGU9W2FdLmNvbmNhdChlKSksZX1mdW5jdGlvbiB0KGUsdCxyLG4pe3ZhciBvLHM7aWYociE9bilzPXI+bj8xOi0xO2Vsc2UgZm9yKG89cz0wO288cjtvKyspaWYoZVtvXSE9dFtvXSl7cz1lW29dPnRbb10/MTotMTticmVha31yZXR1cm4gc31mdW5jdGlvbiByKGUsdCxyLG4pe2Zvcih2YXIgbz0wO3ItLTspZVtyXS09byxvPWVbcl08dFtyXT8xOjAsZVtyXT1vKm4rZVtyXS10W3JdO2Zvcig7IWVbMF0mJmUubGVuZ3RoPjE7ZS5zcGxpY2UoMCwxKSk7fXJldHVybiBmdW5jdGlvbihuLG8scyxpLGEpe3ZhciB1LGwsZixkLGcseSxiLEEsdyx2LFMseCxFLFQsXyxCLFUsaz1uLnM9PW8ucz8xOi0xLEk9bi5jLEM9by5jO2lmKCEoSSYmSVswXSYmQyYmQ1swXSkpcmV0dXJuIG5ldyBHKG4ucyYmby5zJiYoST8hQ3x8SVswXSE9Q1swXTpDKT9JJiYwPT1JWzBdfHwhQz8wKms6ay8wOk5hTik7Zm9yKHc9KEE9bmV3IEcoaykpLmM9W10saz1zKyhsPW4uZS1vLmUpKzEsYXx8KGE9aCxsPW0obi5lL3ApLW0oby5lL3ApLGs9ay9wfDApLGY9MDtDW2ZdPT0oSVtmXXx8MCk7ZisrKTtpZihDW2ZdPihJW2ZdfHwwKSYmbC0tLGs8MCl3LnB1c2goMSksZD0hMDtlbHNle2ZvcihUPUkubGVuZ3RoLEI9Qy5sZW5ndGgsZj0wLGsrPTIsKGc9YyhhLyhDWzBdKzEpKSk+MSYmKEM9ZShDLGcsYSksST1lKEksZyxhKSxCPUMubGVuZ3RoLFQ9SS5sZW5ndGgpLEU9QixTPSh2PUkuc2xpY2UoMCxCKSkubGVuZ3RoO1M8Qjt2W1MrK109MCk7VT1DLnNsaWNlKCksVT1bMF0uY29uY2F0KFUpLF89Q1swXSxDWzFdPj1hLzImJl8rKztkb3tpZihnPTAsKHU9dChDLHYsQixTKSk8MCl7aWYoeD12WzBdLEIhPVMmJih4PXgqYSsodlsxXXx8MCkpLChnPWMoeC9fKSk+MSlmb3IoZz49YSYmKGc9YS0xKSxiPSh5PWUoQyxnLGEpKS5sZW5ndGgsUz12Lmxlbmd0aDsxPT10KHksdixiLFMpOylnLS0scih5LEI8Yj9VOkMsYixhKSxiPXkubGVuZ3RoLHU9MTtlbHNlIDA9PWcmJih1PWc9MSksYj0oeT1DLnNsaWNlKCkpLmxlbmd0aDtpZihiPFMmJih5PVswXS5jb25jYXQoeSkpLHIodix5LFMsYSksUz12Lmxlbmd0aCwtMT09dSlmb3IoO3QoQyx2LEIsUyk8MTspZysrLHIodixCPFM/VTpDLFMsYSksUz12Lmxlbmd0aH1lbHNlIDA9PT11JiYoZysrLHY9WzBdKTt3W2YrK109Zyx2WzBdP3ZbUysrXT1JW0VdfHwwOih2PVtJW0VdXSxTPTEpfXdoaWxlKChFKys8VHx8bnVsbCE9dlswXSkmJmstLSk7ZD1udWxsIT12WzBdLHdbMF18fHcuc3BsaWNlKDAsMSl9aWYoYT09aCl7Zm9yKGY9MSxrPXdbMF07az49MTA7ay89MTAsZisrKTtWKEEscysoQS5lPWYrbCpwLTEpKzEsaSxkKX1lbHNlIEEuZT1sLEEucj0rZDtyZXR1cm4gQX19KCksVD0vXigtPykwKFt4Ym9dKSg/PVxcd1tcXHcuXSokKS9pLF89L14oW14uXSspXFwuJC8sQj0vXlxcLihbXi5dKykkLyxVPS9eLT8oSW5maW5pdHl8TmFOKSQvLGs9L15cXHMqXFwrKD89W1xcdy5dKXxeXFxzK3xcXHMrJC9nLG89ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG8scz1yP3Q6dC5yZXBsYWNlKGssXCJcIik7aWYoVS50ZXN0KHMpKWUucz1pc05hTihzKT9udWxsOnM8MD8tMToxO2Vsc2V7aWYoIXImJihzPXMucmVwbGFjZShULChmdW5jdGlvbihlLHQscil7cmV0dXJuIG89XCJ4XCI9PShyPXIudG9Mb3dlckNhc2UoKSk/MTY6XCJiXCI9PXI/Mjo4LG4mJm4hPW8/ZTp0fSkpLG4mJihvPW4scz1zLnJlcGxhY2UoXyxcIiQxXCIpLnJlcGxhY2UoQixcIjAuJDFcIikpLHQhPXMpKXJldHVybiBuZXcgRyhzLG8pO2lmKEcuREVCVUcpdGhyb3cgRXJyb3IodStcIk5vdCBhXCIrKG4/XCIgYmFzZSBcIituOlwiXCIpK1wiIG51bWJlcjogXCIrdCk7ZS5zPW51bGx9ZS5jPWUuZT1udWxsfSxJLmFic29sdXRlVmFsdWU9SS5hYnM9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRyh0aGlzKTtyZXR1cm4gZS5zPDAmJihlLnM9MSksZX0sSS5jb21wYXJlZFRvPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEEodGhpcyxuZXcgRyhlLHQpKX0sSS5kZWNpbWFsUGxhY2VzPUkuZHA9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scz10aGlzO2lmKG51bGwhPWUpcmV0dXJuIHcoZSwwLHkpLG51bGw9PXQ/dD1POncodCwwLDgpLFYobmV3IEcocyksZStzLmUrMSx0KTtpZighKHI9cy5jKSlyZXR1cm4gbnVsbDtpZihuPSgobz1yLmxlbmd0aC0xKS1tKHRoaXMuZS9wKSkqcCxvPXJbb10pZm9yKDtvJTEwPT0wO28vPTEwLG4tLSk7cmV0dXJuIG48MCYmKG49MCksbn0sSS5kaXZpZGVkQnk9SS5kaXY9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gcih0aGlzLG5ldyBHKGUsdCksUixPKX0sSS5kaXZpZGVkVG9JbnRlZ2VyQnk9SS5pZGl2PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIodGhpcyxuZXcgRyhlLHQpLDAsMSl9LEkuZXhwb25lbnRpYXRlZEJ5PUkucG93PWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaSxsLGgsZixkPXRoaXM7aWYoKGU9bmV3IEcoZSkpLmMmJiFlLmlzSW50ZWdlcigpKXRocm93IEVycm9yKHUrXCJFeHBvbmVudCBub3QgYW4gaW50ZWdlcjogXCIrVyhlKSk7aWYobnVsbCE9dCYmKHQ9bmV3IEcodCkpLGk9ZS5lPjE0LCFkLmN8fCFkLmNbMF18fDE9PWQuY1swXSYmIWQuZSYmMT09ZC5jLmxlbmd0aHx8IWUuY3x8IWUuY1swXSlyZXR1cm4gZj1uZXcgRyhNYXRoLnBvdygrVyhkKSxpPzItdihlKTorVyhlKSkpLHQ/Zi5tb2QodCk6ZjtpZihsPWUuczwwLHQpe2lmKHQuYz8hdC5jWzBdOiF0LnMpcmV0dXJuIG5ldyBHKE5hTik7KG49IWwmJmQuaXNJbnRlZ2VyKCkmJnQuaXNJbnRlZ2VyKCkpJiYoZD1kLm1vZCh0KSl9ZWxzZXtpZihlLmU+OSYmKGQuZT4wfHxkLmU8LTF8fCgwPT1kLmU/ZC5jWzBdPjF8fGkmJmQuY1sxXT49MjRlNzpkLmNbMF08OGUxM3x8aSYmZC5jWzBdPD05OTk5OTc1ZTcpKSlyZXR1cm4gcz1kLnM8MCYmdihlKT8tMDowLGQuZT4tMSYmKHM9MS9zKSxuZXcgRyhsPzEvczpzKTtqJiYocz1hKGovcCsyKSl9Zm9yKGk/KHI9bmV3IEcoLjUpLGwmJihlLnM9MSksaD12KGUpKTpoPShvPU1hdGguYWJzKCtXKGUpKSklMixmPW5ldyBHKEMpOzspe2lmKGgpe2lmKCEoZj1mLnRpbWVzKGQpKS5jKWJyZWFrO3M/Zi5jLmxlbmd0aD5zJiYoZi5jLmxlbmd0aD1zKTpuJiYoZj1mLm1vZCh0KSl9aWYobyl7aWYoMD09PShvPWMoby8yKSkpYnJlYWs7aD1vJTJ9ZWxzZSBpZihWKGU9ZS50aW1lcyhyKSxlLmUrMSwxKSxlLmU+MTQpaD12KGUpO2Vsc2V7aWYoMD09KG89K1coZSkpKWJyZWFrO2g9byUyfWQ9ZC50aW1lcyhkKSxzP2QuYyYmZC5jLmxlbmd0aD5zJiYoZC5jLmxlbmd0aD1zKTpuJiYoZD1kLm1vZCh0KSl9cmV0dXJuIG4/ZjoobCYmKGY9Qy5kaXYoZikpLHQ/Zi5tb2QodCk6cz9WKGYsaixPLHZvaWQgMCk6Zil9LEkuaW50ZWdlclZhbHVlPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBHKHRoaXMpO3JldHVybiBudWxsPT1lP2U9Tzp3KGUsMCw4KSxWKHQsdC5lKzEsZSl9LEkuaXNFcXVhbFRvPUkuZXE9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMD09PUEodGhpcyxuZXcgRyhlLHQpKX0sSS5pc0Zpbml0ZT1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5jfSxJLmlzR3JlYXRlclRoYW49SS5ndD1mdW5jdGlvbihlLHQpe3JldHVybiBBKHRoaXMsbmV3IEcoZSx0KSk+MH0sSS5pc0dyZWF0ZXJUaGFuT3JFcXVhbFRvPUkuZ3RlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIDE9PT0odD1BKHRoaXMsbmV3IEcoZSx0KSkpfHwwPT09dH0sSS5pc0ludGVnZXI9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuYyYmbSh0aGlzLmUvcCk+dGhpcy5jLmxlbmd0aC0yfSxJLmlzTGVzc1RoYW49SS5sdD1mdW5jdGlvbihlLHQpe3JldHVybiBBKHRoaXMsbmV3IEcoZSx0KSk8MH0sSS5pc0xlc3NUaGFuT3JFcXVhbFRvPUkubHRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuLTE9PT0odD1BKHRoaXMsbmV3IEcoZSx0KSkpfHwwPT09dH0sSS5pc05hTj1mdW5jdGlvbigpe3JldHVybiF0aGlzLnN9LEkuaXNOZWdhdGl2ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnM8MH0sSS5pc1Bvc2l0aXZlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucz4wfSxJLmlzWmVybz1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5jJiYwPT10aGlzLmNbMF19LEkubWludXM9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXRoaXMsYT1pLnM7aWYodD0oZT1uZXcgRyhlLHQpKS5zLCFhfHwhdClyZXR1cm4gbmV3IEcoTmFOKTtpZihhIT10KXJldHVybiBlLnM9LXQsaS5wbHVzKGUpO3ZhciBjPWkuZS9wLHU9ZS5lL3AsbD1pLmMsZj1lLmM7aWYoIWN8fCF1KXtpZighbHx8IWYpcmV0dXJuIGw/KGUucz0tdCxlKTpuZXcgRyhmP2k6TmFOKTtpZighbFswXXx8IWZbMF0pcmV0dXJuIGZbMF0/KGUucz0tdCxlKTpuZXcgRyhsWzBdP2k6Mz09Tz8tMDowKX1pZihjPW0oYyksdT1tKHUpLGw9bC5zbGljZSgpLGE9Yy11KXtmb3IoKHM9YTwwKT8oYT0tYSxvPWwpOih1PWMsbz1mKSxvLnJldmVyc2UoKSx0PWE7dC0tO28ucHVzaCgwKSk7by5yZXZlcnNlKCl9ZWxzZSBmb3Iobj0ocz0oYT1sLmxlbmd0aCk8KHQ9Zi5sZW5ndGgpKT9hOnQsYT10PTA7dDxuO3QrKylpZihsW3RdIT1mW3RdKXtzPWxbdF08Zlt0XTticmVha31pZihzJiYobz1sLGw9ZixmPW8sZS5zPS1lLnMpLCh0PShuPWYubGVuZ3RoKS0ocj1sLmxlbmd0aCkpPjApZm9yKDt0LS07bFtyKytdPTApO2Zvcih0PWgtMTtuPmE7KXtpZihsWy0tbl08ZltuXSl7Zm9yKHI9bjtyJiYhbFstLXJdO2xbcl09dCk7LS1sW3JdLGxbbl0rPWh9bFtuXS09ZltuXX1mb3IoOzA9PWxbMF07bC5zcGxpY2UoMCwxKSwtLXUpO3JldHVybiBsWzBdPyQoZSxsLHUpOihlLnM9Mz09Tz8tMToxLGUuYz1bZS5lPTBdLGUpfSxJLm1vZHVsbz1JLm1vZD1mdW5jdGlvbihlLHQpe3ZhciBuLG8scz10aGlzO3JldHVybiBlPW5ldyBHKGUsdCksIXMuY3x8IWUuc3x8ZS5jJiYhZS5jWzBdP25ldyBHKE5hTik6IWUuY3x8cy5jJiYhcy5jWzBdP25ldyBHKHMpOig5PT16PyhvPWUucyxlLnM9MSxuPXIocyxlLDAsMyksZS5zPW8sbi5zKj1vKTpuPXIocyxlLDAseiksKGU9cy5taW51cyhuLnRpbWVzKGUpKSkuY1swXXx8MSE9enx8KGUucz1zLnMpLGUpfSxJLm11bHRpcGxpZWRCeT1JLnRpbWVzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaSxhLGMsdSxsLGYsZCx5LGIsQSx3LHY9dGhpcyxTPXYuYyx4PShlPW5ldyBHKGUsdCkpLmM7aWYoIShTJiZ4JiZTWzBdJiZ4WzBdKSlyZXR1cm4hdi5zfHwhZS5zfHxTJiYhU1swXSYmIXh8fHgmJiF4WzBdJiYhUz9lLmM9ZS5lPWUucz1udWxsOihlLnMqPXYucyxTJiZ4PyhlLmM9WzBdLGUuZT0wKTplLmM9ZS5lPW51bGwpLGU7Zm9yKG49bSh2LmUvcCkrbShlLmUvcCksZS5zKj12LnMsKGM9Uy5sZW5ndGgpPChmPXgubGVuZ3RoKSYmKGI9UyxTPXgseD1iLG89YyxjPWYsZj1vKSxvPWMrZixiPVtdO28tLTtiLnB1c2goMCkpO2ZvcihBPWgsdz1nLG89ZjstLW8+PTA7KXtmb3Iocj0wLGQ9eFtvXSV3LHk9eFtvXS93fDAscz1vKyhpPWMpO3M+bzspcj0oKHU9ZCoodT1TWy0taV0ldykrKGE9eSp1KyhsPVNbaV0vd3wwKSpkKSV3KncrYltzXStyKS9BfDApKyhhL3d8MCkreSpsLGJbcy0tXT11JUE7YltzXT1yfXJldHVybiByPysrbjpiLnNwbGljZSgwLDEpLCQoZSxiLG4pfSxJLm5lZ2F0ZWQ9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRyh0aGlzKTtyZXR1cm4gZS5zPS1lLnN8fG51bGwsZX0sSS5wbHVzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj10aGlzLG89bi5zO2lmKHQ9KGU9bmV3IEcoZSx0KSkucywhb3x8IXQpcmV0dXJuIG5ldyBHKE5hTik7aWYobyE9dClyZXR1cm4gZS5zPS10LG4ubWludXMoZSk7dmFyIHM9bi5lL3AsaT1lLmUvcCxhPW4uYyxjPWUuYztpZighc3x8IWkpe2lmKCFhfHwhYylyZXR1cm4gbmV3IEcoby8wKTtpZighYVswXXx8IWNbMF0pcmV0dXJuIGNbMF0/ZTpuZXcgRyhhWzBdP246MCpvKX1pZihzPW0ocyksaT1tKGkpLGE9YS5zbGljZSgpLG89cy1pKXtmb3Iobz4wPyhpPXMscj1jKToobz0tbyxyPWEpLHIucmV2ZXJzZSgpO28tLTtyLnB1c2goMCkpO3IucmV2ZXJzZSgpfWZvcigobz1hLmxlbmd0aCktKHQ9Yy5sZW5ndGgpPDAmJihyPWMsYz1hLGE9cix0PW8pLG89MDt0OylvPShhWy0tdF09YVt0XStjW3RdK28pL2h8MCxhW3RdPWg9PT1hW3RdPzA6YVt0XSVoO3JldHVybiBvJiYoYT1bb10uY29uY2F0KGEpLCsraSksJChlLGEsaSl9LEkucHJlY2lzaW9uPUkuc2Q9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scz10aGlzO2lmKG51bGwhPWUmJmUhPT0hIWUpcmV0dXJuIHcoZSwxLHkpLG51bGw9PXQ/dD1POncodCwwLDgpLFYobmV3IEcocyksZSx0KTtpZighKHI9cy5jKSlyZXR1cm4gbnVsbDtpZihuPShvPXIubGVuZ3RoLTEpKnArMSxvPXJbb10pe2Zvcig7byUxMD09MDtvLz0xMCxuLS0pO2ZvcihvPXJbMF07bz49MTA7by89MTAsbisrKTt9cmV0dXJuIGUmJnMuZSsxPm4mJihuPXMuZSsxKSxufSxJLnNoaWZ0ZWRCeT1mdW5jdGlvbihlKXtyZXR1cm4gdyhlLC05MDA3MTk5MjU0NzQwOTkxLGYpLHRoaXMudGltZXMoXCIxZVwiK2UpfSxJLnNxdWFyZVJvb3Q9SS5zcXJ0PWZ1bmN0aW9uKCl7dmFyIGUsdCxuLG8scyxpPXRoaXMsYT1pLmMsYz1pLnMsdT1pLmUsbD1SKzQsaD1uZXcgRyhcIjAuNVwiKTtpZigxIT09Y3x8IWF8fCFhWzBdKXJldHVybiBuZXcgRyghY3x8YzwwJiYoIWF8fGFbMF0pP05hTjphP2k6MS8wKTtpZigwPT0oYz1NYXRoLnNxcnQoK1coaSkpKXx8Yz09MS8wPygoKHQ9YihhKSkubGVuZ3RoK3UpJTI9PTAmJih0Kz1cIjBcIiksYz1NYXRoLnNxcnQoK3QpLHU9bSgodSsxKS8yKS0odTwwfHx1JTIpLG49bmV3IEcodD1jPT0xLzA/XCI1ZVwiK3U6KHQ9Yy50b0V4cG9uZW50aWFsKCkpLnNsaWNlKDAsdC5pbmRleE9mKFwiZVwiKSsxKSt1KSk6bj1uZXcgRyhjK1wiXCIpLG4uY1swXSlmb3IoKGM9KHU9bi5lKStsKTwzJiYoYz0wKTs7KWlmKHM9bixuPWgudGltZXMocy5wbHVzKHIoaSxzLGwsMSkpKSxiKHMuYykuc2xpY2UoMCxjKT09PSh0PWIobi5jKSkuc2xpY2UoMCxjKSl7aWYobi5lPHUmJi0tYyxcIjk5OTlcIiE9KHQ9dC5zbGljZShjLTMsYysxKSkmJihvfHxcIjQ5OTlcIiE9dCkpeyt0JiYoK3Quc2xpY2UoMSl8fFwiNVwiIT10LmNoYXJBdCgwKSl8fChWKG4sbi5lK1IrMiwxKSxlPSFuLnRpbWVzKG4pLmVxKGkpKTticmVha31pZighbyYmKFYocyxzLmUrUisyLDApLHMudGltZXMocykuZXEoaSkpKXtuPXM7YnJlYWt9bCs9NCxjKz00LG89MX1yZXR1cm4gVihuLG4uZStSKzEsTyxlKX0sSS50b0V4cG9uZW50aWFsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG51bGwhPWUmJih3KGUsMCx5KSxlKyspLEsodGhpcyxlLHQsMSl9LEkudG9GaXhlZD1mdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT1lJiYodyhlLDAseSksZT1lK3RoaXMuZSsxKSxLKHRoaXMsZSx0KX0sSS50b0Zvcm1hdD1mdW5jdGlvbihlLHQscil7dmFyIG4sbz10aGlzO2lmKG51bGw9PXIpbnVsbCE9ZSYmdCYmXCJvYmplY3RcIj09dHlwZW9mIHQ/KHI9dCx0PW51bGwpOmUmJlwib2JqZWN0XCI9PXR5cGVvZiBlPyhyPWUsZT10PW51bGwpOnI9TTtlbHNlIGlmKFwib2JqZWN0XCIhPXR5cGVvZiByKXRocm93IEVycm9yKHUrXCJBcmd1bWVudCBub3QgYW4gb2JqZWN0OiBcIityKTtpZihuPW8udG9GaXhlZChlLHQpLG8uYyl7dmFyIHMsaT1uLnNwbGl0KFwiLlwiKSxhPStyLmdyb3VwU2l6ZSxjPStyLnNlY29uZGFyeUdyb3VwU2l6ZSxsPXIuZ3JvdXBTZXBhcmF0b3J8fFwiXCIsaD1pWzBdLHA9aVsxXSxmPW8uczwwLGQ9Zj9oLnNsaWNlKDEpOmgsZz1kLmxlbmd0aDtpZihjJiYocz1hLGE9YyxjPXMsZy09cyksYT4wJiZnPjApe2ZvcihzPWclYXx8YSxoPWQuc3Vic3RyKDAscyk7czxnO3MrPWEpaCs9bCtkLnN1YnN0cihzLGEpO2M+MCYmKGgrPWwrZC5zbGljZShzKSksZiYmKGg9XCItXCIraCl9bj1wP2grKHIuZGVjaW1hbFNlcGFyYXRvcnx8XCJcIikrKChjPStyLmZyYWN0aW9uR3JvdXBTaXplKT9wLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFxke1wiK2MrXCJ9XFxcXEJcIixcImdcIiksXCIkJlwiKyhyLmZyYWN0aW9uR3JvdXBTZXBhcmF0b3J8fFwiXCIpKTpwKTpofXJldHVybihyLnByZWZpeHx8XCJcIikrbisoci5zdWZmaXh8fFwiXCIpfSxJLnRvRnJhY3Rpb249ZnVuY3Rpb24oZSl7dmFyIHQsbixvLHMsaSxhLGMsbCxoLGYsZyx5LG09dGhpcyxBPW0uYztpZihudWxsIT1lJiYoIShjPW5ldyBHKGUpKS5pc0ludGVnZXIoKSYmKGMuY3x8MSE9PWMucyl8fGMubHQoQykpKXRocm93IEVycm9yKHUrXCJBcmd1bWVudCBcIisoYy5pc0ludGVnZXIoKT9cIm91dCBvZiByYW5nZTogXCI6XCJub3QgYW4gaW50ZWdlcjogXCIpK1coYykpO2lmKCFBKXJldHVybiBuZXcgRyhtKTtmb3IodD1uZXcgRyhDKSxoPW49bmV3IEcoQyksbz1sPW5ldyBHKEMpLHk9YihBKSxpPXQuZT15Lmxlbmd0aC1tLmUtMSx0LmNbMF09ZFsoYT1pJXApPDA/cCthOmFdLGU9IWV8fGMuY29tcGFyZWRUbyh0KT4wP2k+MD90Omg6YyxhPUwsTD0xLzAsYz1uZXcgRyh5KSxsLmNbMF09MDtmPXIoYyx0LDAsMSksMSE9KHM9bi5wbHVzKGYudGltZXMobykpKS5jb21wYXJlZFRvKGUpOyluPW8sbz1zLGg9bC5wbHVzKGYudGltZXMocz1oKSksbD1zLHQ9Yy5taW51cyhmLnRpbWVzKHM9dCkpLGM9cztyZXR1cm4gcz1yKGUubWludXMobiksbywwLDEpLGw9bC5wbHVzKHMudGltZXMoaCkpLG49bi5wbHVzKHMudGltZXMobykpLGwucz1oLnM9bS5zLGc9cihoLG8saSo9MixPKS5taW51cyhtKS5hYnMoKS5jb21wYXJlZFRvKHIobCxuLGksTykubWludXMobSkuYWJzKCkpPDE/W2gsb106W2wsbl0sTD1hLGd9LEkudG9OdW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4rVyh0aGlzKX0sSS50b1ByZWNpc2lvbj1mdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT1lJiZ3KGUsMSx5KSxLKHRoaXMsZSx0LDIpfSxJLnRvU3RyaW5nPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcyxvPXIucyxzPXIuZTtyZXR1cm4gbnVsbD09PXM/bz8odD1cIkluZmluaXR5XCIsbzwwJiYodD1cIi1cIit0KSk6dD1cIk5hTlwiOihudWxsPT1lP3Q9czw9RHx8cz49Tj9TKGIoci5jKSxzKTp4KGIoci5jKSxzLFwiMFwiKToxMD09PWU/dD14KGIoKHI9VihuZXcgRyhyKSxSK3MrMSxPKSkuYyksci5lLFwiMFwiKToodyhlLDIsSC5sZW5ndGgsXCJCYXNlXCIpLHQ9bih4KGIoci5jKSxzLFwiMFwiKSwxMCxlLG8sITApKSxvPDAmJnIuY1swXSYmKHQ9XCItXCIrdCkpLHR9LEkudmFsdWVPZj1JLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybiBXKHRoaXMpfSxJLl9pc0JpZ051bWJlcj0hMCxudWxsIT10JiZHLnNldCh0KSxHfSgpKS5kZWZhdWx0PXMuQmlnTnVtYmVyPXMsdm9pZCAwPT09KG49ZnVuY3Rpb24oKXtyZXR1cm4gc30uY2FsbCh0LHIsdCxlKSl8fChlLmV4cG9ydHM9bil9KCl9LDI0ODY6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO2NvbnN0IG49cig1MTU1KSxvPXIoNDUyNSkscz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbC5mb3I/U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpOm51bGw7dC5CdWZmZXI9Yyx0LlNsb3dCdWZmZXI9ZnVuY3Rpb24oZSl7cmV0dXJuK2UhPWUmJihlPTApLGMuYWxsb2MoK2UpfSx0LklOU1BFQ1RfTUFYX0JZVEVTPTUwO2NvbnN0IGk9MjE0NzQ4MzY0NztmdW5jdGlvbiBhKGUpe2lmKGU+aSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIFwiJytlKydcIiBpcyBpbnZhbGlkIGZvciBvcHRpb24gXCJzaXplXCInKTtjb25zdCB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxjLnByb3RvdHlwZSksdH1mdW5jdGlvbiBjKGUsdCxyKXtpZihcIm51bWJlclwiPT10eXBlb2YgZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtyZXR1cm4gaChlKX1yZXR1cm4gdShlLHQscil9ZnVuY3Rpb24gdShlLHQscil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwiXCIhPT10fHwodD1cInV0ZjhcIiksIWMuaXNFbmNvZGluZyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrdCk7Y29uc3Qgcj0wfGcoZSx0KTtsZXQgbj1hKHIpO2NvbnN0IG89bi53cml0ZShlLHQpO3JldHVybiBvIT09ciYmKG49bi5zbGljZSgwLG8pKSxufShlLHQpO2lmKEFycmF5QnVmZmVyLmlzVmlldyhlKSlyZXR1cm4gZnVuY3Rpb24oZSl7aWYoWChlLFVpbnQ4QXJyYXkpKXtjb25zdCB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBmKHQuYnVmZmVyLHQuYnl0ZU9mZnNldCx0LmJ5dGVMZW5ndGgpfXJldHVybiBwKGUpfShlKTtpZihudWxsPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSk7aWYoWChlLEFycmF5QnVmZmVyKXx8ZSYmWChlLmJ1ZmZlcixBcnJheUJ1ZmZlcikpcmV0dXJuIGYoZSx0LHIpO2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciYmKFgoZSxTaGFyZWRBcnJheUJ1ZmZlcil8fGUmJlgoZS5idWZmZXIsU2hhcmVkQXJyYXlCdWZmZXIpKSlyZXR1cm4gZihlLHQscik7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtjb25zdCBuPWUudmFsdWVPZiYmZS52YWx1ZU9mKCk7aWYobnVsbCE9biYmbiE9PWUpcmV0dXJuIGMuZnJvbShuLHQscik7Y29uc3Qgbz1mdW5jdGlvbihlKXtpZihjLmlzQnVmZmVyKGUpKXtjb25zdCB0PTB8ZChlLmxlbmd0aCkscj1hKHQpO3JldHVybiAwPT09ci5sZW5ndGh8fGUuY29weShyLDAsMCx0KSxyfXJldHVybiB2b2lkIDAhPT1lLmxlbmd0aD9cIm51bWJlclwiIT10eXBlb2YgZS5sZW5ndGh8fFkoZS5sZW5ndGgpP2EoMCk6cChlKTpcIkJ1ZmZlclwiPT09ZS50eXBlJiZBcnJheS5pc0FycmF5KGUuZGF0YSk/cChlLmRhdGEpOnZvaWQgMH0oZSk7aWYobylyZXR1cm4gbztpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wudG9QcmltaXRpdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGVbU3ltYm9sLnRvUHJpbWl0aXZlXSlyZXR1cm4gYy5mcm9tKGVbU3ltYm9sLnRvUHJpbWl0aXZlXShcInN0cmluZ1wiKSx0LHIpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9ZnVuY3Rpb24gbChlKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyk7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfWZ1bmN0aW9uIGgoZSl7cmV0dXJuIGwoZSksYShlPDA/MDowfGQoZSkpfWZ1bmN0aW9uIHAoZSl7Y29uc3QgdD1lLmxlbmd0aDwwPzA6MHxkKGUubGVuZ3RoKSxyPWEodCk7Zm9yKGxldCBuPTA7bjx0O24rPTEpcltuXT0yNTUmZVtuXTtyZXR1cm4gcn1mdW5jdGlvbiBmKGUsdCxyKXtpZih0PDB8fGUuYnl0ZUxlbmd0aDx0KXRocm93IG5ldyBSYW5nZUVycm9yKCdcIm9mZnNldFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpO2lmKGUuYnl0ZUxlbmd0aDx0KyhyfHwwKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKTtsZXQgbjtyZXR1cm4gbj12b2lkIDA9PT10JiZ2b2lkIDA9PT1yP25ldyBVaW50OEFycmF5KGUpOnZvaWQgMD09PXI/bmV3IFVpbnQ4QXJyYXkoZSx0KTpuZXcgVWludDhBcnJheShlLHQsciksT2JqZWN0LnNldFByb3RvdHlwZU9mKG4sYy5wcm90b3R5cGUpLG59ZnVuY3Rpb24gZChlKXtpZihlPj1pKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBzaXplOiAweFwiK2kudG9TdHJpbmcoMTYpK1wiIGJ5dGVzXCIpO3JldHVybiAwfGV9ZnVuY3Rpb24gZyhlLHQpe2lmKGMuaXNCdWZmZXIoZSkpcmV0dXJuIGUubGVuZ3RoO2lmKEFycmF5QnVmZmVyLmlzVmlldyhlKXx8WChlLEFycmF5QnVmZmVyKSlyZXR1cm4gZS5ieXRlTGVuZ3RoO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIG9yIEFycmF5QnVmZmVyLiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIGUpO2NvbnN0IHI9ZS5sZW5ndGgsbj1hcmd1bWVudHMubGVuZ3RoPjImJiEwPT09YXJndW1lbnRzWzJdO2lmKCFuJiYwPT09cilyZXR1cm4gMDtsZXQgbz0hMTtmb3IoOzspc3dpdGNoKHQpe2Nhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIHI7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuICQoZSkubGVuZ3RoO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiAyKnI7Y2FzZVwiaGV4XCI6cmV0dXJuIHI+Pj4xO2Nhc2VcImJhc2U2NFwiOnJldHVybiBWKGUpLmxlbmd0aDtkZWZhdWx0OmlmKG8pcmV0dXJuIG4/LTE6JChlKS5sZW5ndGg7dD0oXCJcIit0KS50b0xvd2VyQ2FzZSgpLG89ITB9fWZ1bmN0aW9uIHkoZSx0LHIpe2xldCBuPSExO2lmKCh2b2lkIDA9PT10fHx0PDApJiYodD0wKSx0PnRoaXMubGVuZ3RoKXJldHVyblwiXCI7aWYoKHZvaWQgMD09PXJ8fHI+dGhpcy5sZW5ndGgpJiYocj10aGlzLmxlbmd0aCkscjw9MClyZXR1cm5cIlwiO2lmKChyPj4+PTApPD0odD4+Pj0wKSlyZXR1cm5cIlwiO2ZvcihlfHwoZT1cInV0ZjhcIik7Oylzd2l0Y2goZSl7Y2FzZVwiaGV4XCI6cmV0dXJuIEkodGhpcyx0LHIpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBfKHRoaXMsdCxyKTtjYXNlXCJhc2NpaVwiOnJldHVybiBVKHRoaXMsdCxyKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gayh0aGlzLHQscik7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIFQodGhpcyx0LHIpO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiBDKHRoaXMsdCxyKTtkZWZhdWx0OmlmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2UpO2U9KGUrXCJcIikudG9Mb3dlckNhc2UoKSxuPSEwfX1mdW5jdGlvbiBtKGUsdCxyKXtjb25zdCBuPWVbdF07ZVt0XT1lW3JdLGVbcl09bn1mdW5jdGlvbiBiKGUsdCxyLG4sbyl7aWYoMD09PWUubGVuZ3RoKXJldHVybi0xO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByPyhuPXIscj0wKTpyPjIxNDc0ODM2NDc/cj0yMTQ3NDgzNjQ3OnI8LTIxNDc0ODM2NDgmJihyPS0yMTQ3NDgzNjQ4KSxZKHI9K3IpJiYocj1vPzA6ZS5sZW5ndGgtMSkscjwwJiYocj1lLmxlbmd0aCtyKSxyPj1lLmxlbmd0aCl7aWYobylyZXR1cm4tMTtyPWUubGVuZ3RoLTF9ZWxzZSBpZihyPDApe2lmKCFvKXJldHVybi0xO3I9MH1pZihcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9Yy5mcm9tKHQsbikpLGMuaXNCdWZmZXIodCkpcmV0dXJuIDA9PT10Lmxlbmd0aD8tMTpBKGUsdCxyLG4sbyk7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIHQmPTI1NSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mP28/VWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUsdCxyKTpVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGUsdCxyKTpBKGUsW3RdLHIsbixvKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIEEoZSx0LHIsbixvKXtsZXQgcyxpPTEsYT1lLmxlbmd0aCxjPXQubGVuZ3RoO2lmKHZvaWQgMCE9PW4mJihcInVjczJcIj09PShuPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpKXx8XCJ1Y3MtMlwiPT09bnx8XCJ1dGYxNmxlXCI9PT1ufHxcInV0Zi0xNmxlXCI9PT1uKSl7aWYoZS5sZW5ndGg8Mnx8dC5sZW5ndGg8MilyZXR1cm4tMTtpPTIsYS89MixjLz0yLHIvPTJ9ZnVuY3Rpb24gdShlLHQpe3JldHVybiAxPT09aT9lW3RdOmUucmVhZFVJbnQxNkJFKHQqaSl9aWYobyl7bGV0IG49LTE7Zm9yKHM9cjtzPGE7cysrKWlmKHUoZSxzKT09PXUodCwtMT09PW4/MDpzLW4pKXtpZigtMT09PW4mJihuPXMpLHMtbisxPT09YylyZXR1cm4gbippfWVsc2UtMSE9PW4mJihzLT1zLW4pLG49LTF9ZWxzZSBmb3IocitjPmEmJihyPWEtYykscz1yO3M+PTA7cy0tKXtsZXQgcj0hMDtmb3IobGV0IG49MDtuPGM7bisrKWlmKHUoZSxzK24pIT09dSh0LG4pKXtyPSExO2JyZWFrfWlmKHIpcmV0dXJuIHN9cmV0dXJuLTF9ZnVuY3Rpb24gdyhlLHQscixuKXtyPU51bWJlcihyKXx8MDtjb25zdCBvPWUubGVuZ3RoLXI7bj8obj1OdW1iZXIobikpPm8mJihuPW8pOm49bztjb25zdCBzPXQubGVuZ3RoO2xldCBpO2ZvcihuPnMvMiYmKG49cy8yKSxpPTA7aTxuOysraSl7Y29uc3Qgbj1wYXJzZUludCh0LnN1YnN0cigyKmksMiksMTYpO2lmKFkobikpcmV0dXJuIGk7ZVtyK2ldPW59cmV0dXJuIGl9ZnVuY3Rpb24gdihlLHQscixuKXtyZXR1cm4gVygkKHQsZS5sZW5ndGgtciksZSxyLG4pfWZ1bmN0aW9uIFMoZSx0LHIsbil7cmV0dXJuIFcoZnVuY3Rpb24oZSl7Y29uc3QgdD1bXTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoOysrcil0LnB1c2goMjU1JmUuY2hhckNvZGVBdChyKSk7cmV0dXJuIHR9KHQpLGUscixuKX1mdW5jdGlvbiB4KGUsdCxyLG4pe3JldHVybiBXKFYodCksZSxyLG4pfWZ1bmN0aW9uIEUoZSx0LHIsbil7cmV0dXJuIFcoZnVuY3Rpb24oZSx0KXtsZXQgcixuLG87Y29uc3Qgcz1bXTtmb3IobGV0IGk9MDtpPGUubGVuZ3RoJiYhKCh0LT0yKTwwKTsrK2kpcj1lLmNoYXJDb2RlQXQoaSksbj1yPj44LG89ciUyNTYscy5wdXNoKG8pLHMucHVzaChuKTtyZXR1cm4gc30odCxlLmxlbmd0aC1yKSxlLHIsbil9ZnVuY3Rpb24gVChlLHQscil7cmV0dXJuIDA9PT10JiZyPT09ZS5sZW5ndGg/bi5mcm9tQnl0ZUFycmF5KGUpOm4uZnJvbUJ5dGVBcnJheShlLnNsaWNlKHQscikpfWZ1bmN0aW9uIF8oZSx0LHIpe3I9TWF0aC5taW4oZS5sZW5ndGgscik7Y29uc3Qgbj1bXTtsZXQgbz10O2Zvcig7bzxyOyl7Y29uc3QgdD1lW29dO2xldCBzPW51bGwsaT10PjIzOT80OnQ+MjIzPzM6dD4xOTE/MjoxO2lmKG8raTw9cil7bGV0IHIsbixhLGM7c3dpdGNoKGkpe2Nhc2UgMTp0PDEyOCYmKHM9dCk7YnJlYWs7Y2FzZSAyOnI9ZVtvKzFdLDEyOD09KDE5MiZyKSYmKGM9KDMxJnQpPDw2fDYzJnIsYz4xMjcmJihzPWMpKTticmVhaztjYXNlIDM6cj1lW28rMV0sbj1lW28rMl0sMTI4PT0oMTkyJnIpJiYxMjg9PSgxOTImbikmJihjPSgxNSZ0KTw8MTJ8KDYzJnIpPDw2fDYzJm4sYz4yMDQ3JiYoYzw1NTI5Nnx8Yz41NzM0MykmJihzPWMpKTticmVhaztjYXNlIDQ6cj1lW28rMV0sbj1lW28rMl0sYT1lW28rM10sMTI4PT0oMTkyJnIpJiYxMjg9PSgxOTImbikmJjEyOD09KDE5MiZhKSYmKGM9KDE1JnQpPDwxOHwoNjMmcik8PDEyfCg2MyZuKTw8Nnw2MyZhLGM+NjU1MzUmJmM8MTExNDExMiYmKHM9YykpfX1udWxsPT09cz8ocz02NTUzMyxpPTEpOnM+NjU1MzUmJihzLT02NTUzNixuLnB1c2gocz4+PjEwJjEwMjN8NTUyOTYpLHM9NTYzMjB8MTAyMyZzKSxuLnB1c2gocyksbys9aX1yZXR1cm4gZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmxlbmd0aDtpZih0PD1CKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxlKTtsZXQgcj1cIlwiLG49MDtmb3IoO248dDspcis9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsZS5zbGljZShuLG4rPUIpKTtyZXR1cm4gcn0obil9dC5rTWF4TGVuZ3RoPWksYy5UWVBFRF9BUlJBWV9TVVBQT1JUPWZ1bmN0aW9uKCl7dHJ5e2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoMSksdD17Zm9vOmZ1bmN0aW9uKCl7cmV0dXJuIDQyfX07cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZih0LFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KSw0Mj09PWUuZm9vKCl9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGMuVFlQRURfQVJSQVlfU1VQUE9SVHx8XCJ1bmRlZmluZWRcIj09dHlwZW9mIGNvbnNvbGV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGNvbnNvbGUuZXJyb3J8fGNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgbGFja3MgdHlwZWQgYXJyYXkgKFVpbnQ4QXJyYXkpIHN1cHBvcnQgd2hpY2ggaXMgcmVxdWlyZWQgYnkgYGJ1ZmZlcmAgdjUueC4gVXNlIGBidWZmZXJgIHY0LnggaWYgeW91IHJlcXVpcmUgb2xkIGJyb3dzZXIgc3VwcG9ydC5cIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGMucHJvdG90eXBlLFwicGFyZW50XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYoYy5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdGhpcy5idWZmZXJ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGMucHJvdG90eXBlLFwib2Zmc2V0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYoYy5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdGhpcy5ieXRlT2Zmc2V0fX0pLGMucG9vbFNpemU9ODE5MixjLmZyb209ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB1KGUsdCxyKX0sT2JqZWN0LnNldFByb3RvdHlwZU9mKGMucHJvdG90eXBlLFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoYyxVaW50OEFycmF5KSxjLmFsbG9jPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe3JldHVybiBsKGUpLGU8PTA/YShlKTp2b2lkIDAhPT10P1wic3RyaW5nXCI9PXR5cGVvZiByP2EoZSkuZmlsbCh0LHIpOmEoZSkuZmlsbCh0KTphKGUpfShlLHQscil9LGMuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGgoZSl9LGMuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKGUpe3JldHVybiBoKGUpfSxjLmlzQnVmZmVyPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT1lJiYhMD09PWUuX2lzQnVmZmVyJiZlIT09Yy5wcm90b3R5cGV9LGMuY29tcGFyZT1mdW5jdGlvbihlLHQpe2lmKFgoZSxVaW50OEFycmF5KSYmKGU9Yy5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksWCh0LFVpbnQ4QXJyYXkpJiYodD1jLmZyb20odCx0Lm9mZnNldCx0LmJ5dGVMZW5ndGgpKSwhYy5pc0J1ZmZlcihlKXx8IWMuaXNCdWZmZXIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwiYnVmMVwiLCBcImJ1ZjJcIiBhcmd1bWVudHMgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheScpO2lmKGU9PT10KXJldHVybiAwO2xldCByPWUubGVuZ3RoLG49dC5sZW5ndGg7Zm9yKGxldCBvPTAscz1NYXRoLm1pbihyLG4pO288czsrK28paWYoZVtvXSE9PXRbb10pe3I9ZVtvXSxuPXRbb107YnJlYWt9cmV0dXJuIHI8bj8tMTpuPHI/MTowfSxjLmlzRW5jb2Rpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxjLmNvbmNhdD1mdW5jdGlvbihlLHQpe2lmKCFBcnJheS5pc0FycmF5KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gYy5hbGxvYygwKTtsZXQgcjtpZih2b2lkIDA9PT10KWZvcih0PTAscj0wO3I8ZS5sZW5ndGg7KytyKXQrPWVbcl0ubGVuZ3RoO2NvbnN0IG49Yy5hbGxvY1Vuc2FmZSh0KTtsZXQgbz0wO2ZvcihyPTA7cjxlLmxlbmd0aDsrK3Ipe2xldCB0PWVbcl07aWYoWCh0LFVpbnQ4QXJyYXkpKW8rdC5sZW5ndGg+bi5sZW5ndGg/KGMuaXNCdWZmZXIodCl8fCh0PWMuZnJvbSh0KSksdC5jb3B5KG4sbykpOlVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKG4sdCxvKTtlbHNle2lmKCFjLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO3QuY29weShuLG8pfW8rPXQubGVuZ3RofXJldHVybiBufSxjLmJ5dGVMZW5ndGg9ZyxjLnByb3RvdHlwZS5faXNCdWZmZXI9ITAsYy5wcm90b3R5cGUuc3dhcDE2PWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLmxlbmd0aDtpZihlJTIhPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0c1wiKTtmb3IobGV0IHQ9MDt0PGU7dCs9MiltKHRoaXMsdCx0KzEpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5zd2FwMzI9ZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMubGVuZ3RoO2lmKGUlNCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpO2ZvcihsZXQgdD0wO3Q8ZTt0Kz00KW0odGhpcyx0LHQrMyksbSh0aGlzLHQrMSx0KzIpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMubGVuZ3RoO2lmKGUlOCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzXCIpO2ZvcihsZXQgdD0wO3Q8ZTt0Kz04KW0odGhpcyx0LHQrNyksbSh0aGlzLHQrMSx0KzYpLG0odGhpcyx0KzIsdCs1KSxtKHRoaXMsdCszLHQrNCk7cmV0dXJuIHRoaXN9LGMucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLmxlbmd0aDtyZXR1cm4gMD09PWU/XCJcIjowPT09YXJndW1lbnRzLmxlbmd0aD9fKHRoaXMsMCxlKTp5LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYy5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmc9Yy5wcm90b3R5cGUudG9TdHJpbmcsYy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe2lmKCFjLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO3JldHVybiB0aGlzPT09ZXx8MD09PWMuY29tcGFyZSh0aGlzLGUpfSxjLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7bGV0IGU9XCJcIjtjb25zdCByPXQuSU5TUEVDVF9NQVhfQllURVM7cmV0dXJuIGU9dGhpcy50b1N0cmluZyhcImhleFwiLDAscikucmVwbGFjZSgvKC57Mn0pL2csXCIkMSBcIikudHJpbSgpLHRoaXMubGVuZ3RoPnImJihlKz1cIiAuLi4gXCIpLFwiPEJ1ZmZlciBcIitlK1wiPlwifSxzJiYoYy5wcm90b3R5cGVbc109Yy5wcm90b3R5cGUuaW5zcGVjdCksYy5wcm90b3R5cGUuY29tcGFyZT1mdW5jdGlvbihlLHQscixuLG8pe2lmKFgoZSxVaW50OEFycmF5KSYmKGU9Yy5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksIWMuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidGFyZ2V0XCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheS4gUmVjZWl2ZWQgdHlwZSAnK3R5cGVvZiBlKTtpZih2b2lkIDA9PT10JiYodD0wKSx2b2lkIDA9PT1yJiYocj1lP2UubGVuZ3RoOjApLHZvaWQgMD09PW4mJihuPTApLHZvaWQgMD09PW8mJihvPXRoaXMubGVuZ3RoKSx0PDB8fHI+ZS5sZW5ndGh8fG48MHx8bz50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm91dCBvZiByYW5nZSBpbmRleFwiKTtpZihuPj1vJiZ0Pj1yKXJldHVybiAwO2lmKG4+PW8pcmV0dXJuLTE7aWYodD49cilyZXR1cm4gMTtpZih0aGlzPT09ZSlyZXR1cm4gMDtsZXQgcz0obz4+Pj0wKS0obj4+Pj0wKSxpPShyPj4+PTApLSh0Pj4+PTApO2NvbnN0IGE9TWF0aC5taW4ocyxpKSx1PXRoaXMuc2xpY2UobixvKSxsPWUuc2xpY2UodCxyKTtmb3IobGV0IGU9MDtlPGE7KytlKWlmKHVbZV0hPT1sW2VdKXtzPXVbZV0saT1sW2VdO2JyZWFrfXJldHVybiBzPGk/LTE6aTxzPzE6MH0sYy5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybi0xIT09dGhpcy5pbmRleE9mKGUsdCxyKX0sYy5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGIodGhpcyxlLHQsciwhMCl9LGMucHJvdG90eXBlLmxhc3RJbmRleE9mPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gYih0aGlzLGUsdCxyLCExKX0sYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbil7aWYodm9pZCAwPT09dCluPVwidXRmOFwiLHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2UgaWYodm9pZCAwPT09ciYmXCJzdHJpbmdcIj09dHlwZW9mIHQpbj10LHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2V7aWYoIWlzRmluaXRlKHQpKXRocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkXCIpO3Q+Pj49MCxpc0Zpbml0ZShyKT8ocj4+Pj0wLHZvaWQgMD09PW4mJihuPVwidXRmOFwiKSk6KG49cixyPXZvaWQgMCl9Y29uc3Qgbz10aGlzLmxlbmd0aC10O2lmKCh2b2lkIDA9PT1yfHxyPm8pJiYocj1vKSxlLmxlbmd0aD4wJiYocjwwfHx0PDApfHx0PnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHNcIik7bnx8KG49XCJ1dGY4XCIpO2xldCBzPSExO2Zvcig7Oylzd2l0Y2gobil7Y2FzZVwiaGV4XCI6cmV0dXJuIHcodGhpcyxlLHQscik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHYodGhpcyxlLHQscik7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gUyh0aGlzLGUsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4geCh0aGlzLGUsdCxyKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gRSh0aGlzLGUsdCxyKTtkZWZhdWx0OmlmKHMpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO249KFwiXCIrbikudG9Mb3dlckNhc2UoKSxzPSEwfX0sYy5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O2NvbnN0IEI9NDA5NjtmdW5jdGlvbiBVKGUsdCxyKXtsZXQgbj1cIlwiO3I9TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKGxldCBvPXQ7bzxyOysrbyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDEyNyZlW29dKTtyZXR1cm4gbn1mdW5jdGlvbiBrKGUsdCxyKXtsZXQgbj1cIlwiO3I9TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKGxldCBvPXQ7bzxyOysrbyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGVbb10pO3JldHVybiBufWZ1bmN0aW9uIEkoZSx0LHIpe2NvbnN0IG49ZS5sZW5ndGg7KCF0fHx0PDApJiYodD0wKSwoIXJ8fHI8MHx8cj5uKSYmKHI9bik7bGV0IG89XCJcIjtmb3IobGV0IG49dDtuPHI7KytuKW8rPUpbZVtuXV07cmV0dXJuIG99ZnVuY3Rpb24gQyhlLHQscil7Y29uc3Qgbj1lLnNsaWNlKHQscik7bGV0IG89XCJcIjtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoLTE7ZSs9MilvKz1TdHJpbmcuZnJvbUNoYXJDb2RlKG5bZV0rMjU2Km5bZSsxXSk7cmV0dXJuIG99ZnVuY3Rpb24gUihlLHQscil7aWYoZSUxIT0wfHxlPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvZmZzZXQgaXMgbm90IHVpbnRcIik7aWYoZSt0PnIpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpfWZ1bmN0aW9uIE8oZSx0LHIsbixvLHMpe2lmKCFjLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmZmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpO2lmKHQ+b3x8dDxzKXRocm93IG5ldyBSYW5nZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgaXMgb3V0IG9mIGJvdW5kcycpO2lmKHIrbj5lLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBEKGUsdCxyLG4sbyl7SCh0LG4sbyxlLHIsNyk7bGV0IHM9TnVtYmVyKHQmQmlnSW50KDQyOTQ5NjcyOTUpKTtlW3IrK109cyxzPj49OCxlW3IrK109cyxzPj49OCxlW3IrK109cyxzPj49OCxlW3IrK109cztsZXQgaT1OdW1iZXIodD4+QmlnSW50KDMyKSZCaWdJbnQoNDI5NDk2NzI5NSkpO3JldHVybiBlW3IrK109aSxpPj49OCxlW3IrK109aSxpPj49OCxlW3IrK109aSxpPj49OCxlW3IrK109aSxyfWZ1bmN0aW9uIE4oZSx0LHIsbixvKXtIKHQsbixvLGUsciw3KTtsZXQgcz1OdW1iZXIodCZCaWdJbnQoNDI5NDk2NzI5NSkpO2Vbcis3XT1zLHM+Pj04LGVbcis2XT1zLHM+Pj04LGVbcis1XT1zLHM+Pj04LGVbcis0XT1zO2xldCBpPU51bWJlcih0Pj5CaWdJbnQoMzIpJkJpZ0ludCg0Mjk0OTY3Mjk1KSk7cmV0dXJuIGVbciszXT1pLGk+Pj04LGVbcisyXT1pLGk+Pj04LGVbcisxXT1pLGk+Pj04LGVbcl09aSxyKzh9ZnVuY3Rpb24gUChlLHQscixuLG8scyl7aWYocituPmUubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKHI8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBMKGUsdCxyLG4scyl7cmV0dXJuIHQ9K3Qscj4+Pj0wLHN8fFAoZSwwLHIsNCksby53cml0ZShlLHQscixuLDIzLDQpLHIrNH1mdW5jdGlvbiBGKGUsdCxyLG4scyl7cmV0dXJuIHQ9K3Qscj4+Pj0wLHN8fFAoZSwwLHIsOCksby53cml0ZShlLHQscixuLDUyLDgpLHIrOH1jLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbihlLHQpe2NvbnN0IHI9dGhpcy5sZW5ndGg7KGU9fn5lKTwwPyhlKz1yKTwwJiYoZT0wKTplPnImJihlPXIpLCh0PXZvaWQgMD09PXQ/cjp+fnQpPDA/KHQrPXIpPDAmJih0PTApOnQ+ciYmKHQ9ciksdDxlJiYodD1lKTtjb25zdCBuPXRoaXMuc3ViYXJyYXkoZSx0KTtyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKG4sYy5wcm90b3R5cGUpLG59LGMucHJvdG90eXBlLnJlYWRVaW50TEU9Yy5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbihlLHQscil7ZT4+Pj0wLHQ+Pj49MCxyfHxSKGUsdCx0aGlzLmxlbmd0aCk7bGV0IG49dGhpc1tlXSxvPTEscz0wO2Zvcig7KytzPHQmJihvKj0yNTYpOyluKz10aGlzW2Urc10qbztyZXR1cm4gbn0sYy5wcm90b3R5cGUucmVhZFVpbnRCRT1jLnByb3RvdHlwZS5yZWFkVUludEJFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fFIoZSx0LHRoaXMubGVuZ3RoKTtsZXQgbj10aGlzW2UrLS10XSxvPTE7Zm9yKDt0PjAmJihvKj0yNTYpOyluKz10aGlzW2UrLS10XSpvO3JldHVybiBufSxjLnByb3RvdHlwZS5yZWFkVWludDg9Yy5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsMSx0aGlzLmxlbmd0aCksdGhpc1tlXX0sYy5wcm90b3R5cGUucmVhZFVpbnQxNkxFPWMucHJvdG90eXBlLnJlYWRVSW50MTZMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8UihlLDIsdGhpcy5sZW5ndGgpLHRoaXNbZV18dGhpc1tlKzFdPDw4fSxjLnByb3RvdHlwZS5yZWFkVWludDE2QkU9Yy5wcm90b3R5cGUucmVhZFVJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXTw8OHx0aGlzW2UrMV19LGMucHJvdG90eXBlLnJlYWRVaW50MzJMRT1jLnByb3RvdHlwZS5yZWFkVUludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSwodGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNikrMTY3NzcyMTYqdGhpc1tlKzNdfSxjLnByb3RvdHlwZS5yZWFkVWludDMyQkU9Yy5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsNCx0aGlzLmxlbmd0aCksMTY3NzcyMTYqdGhpc1tlXSsodGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdKX0sYy5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NExFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10KzI1Nip0aGlzWysrZV0rNjU1MzYqdGhpc1srK2VdK3RoaXNbKytlXSoyKioyNCxvPXRoaXNbKytlXSsyNTYqdGhpc1srK2VdKzY1NTM2KnRoaXNbKytlXStyKjIqKjI0O3JldHVybiBCaWdJbnQobikrKEJpZ0ludChvKTw8QmlnSW50KDMyKSl9KSksYy5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NEJFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10KjIqKjI0KzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3RoaXNbKytlXSxvPXRoaXNbKytlXSoyKioyNCs2NTUzNip0aGlzWysrZV0rMjU2KnRoaXNbKytlXStyO3JldHVybihCaWdJbnQobik8PEJpZ0ludCgzMikpK0JpZ0ludChvKX0pKSxjLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8UihlLHQsdGhpcy5sZW5ndGgpO2xldCBuPXRoaXNbZV0sbz0xLHM9MDtmb3IoOysrczx0JiYobyo9MjU2KTspbis9dGhpc1tlK3NdKm87cmV0dXJuIG8qPTEyOCxuPj1vJiYobi09TWF0aC5wb3coMiw4KnQpKSxufSxjLnByb3RvdHlwZS5yZWFkSW50QkU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8UihlLHQsdGhpcy5sZW5ndGgpO2xldCBuPXQsbz0xLHM9dGhpc1tlKy0tbl07Zm9yKDtuPjAmJihvKj0yNTYpOylzKz10aGlzW2UrLS1uXSpvO3JldHVybiBvKj0xMjgscz49byYmKHMtPU1hdGgucG93KDIsOCp0KSksc30sYy5wcm90b3R5cGUucmVhZEludDg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSwxLHRoaXMubGVuZ3RoKSwxMjgmdGhpc1tlXT8tMSooMjU1LXRoaXNbZV0rMSk6dGhpc1tlXX0sYy5wcm90b3R5cGUucmVhZEludDE2TEU9ZnVuY3Rpb24oZSx0KXtlPj4+PTAsdHx8UihlLDIsdGhpcy5sZW5ndGgpO2NvbnN0IHI9dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIDMyNzY4JnI/NDI5NDkwMTc2MHxyOnJ9LGMucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7ZT4+Pj0wLHR8fFIoZSwyLHRoaXMubGVuZ3RoKTtjb25zdCByPXRoaXNbZSsxXXx0aGlzW2VdPDw4O3JldHVybiAzMjc2OCZyPzQyOTQ5MDE3NjB8cjpyfSxjLnByb3RvdHlwZS5yZWFkSW50MzJMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8UihlLDQsdGhpcy5sZW5ndGgpLHRoaXNbZV18dGhpc1tlKzFdPDw4fHRoaXNbZSsyXTw8MTZ8dGhpc1tlKzNdPDwyNH0sYy5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdPDwyNHx0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM119LGMucHJvdG90eXBlLnJlYWRCaWdJbnQ2NExFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10aGlzW2UrNF0rMjU2KnRoaXNbZSs1XSs2NTUzNip0aGlzW2UrNl0rKHI8PDI0KTtyZXR1cm4oQmlnSW50KG4pPDxCaWdJbnQoMzIpKStCaWdJbnQodCsyNTYqdGhpc1srK2VdKzY1NTM2KnRoaXNbKytlXSt0aGlzWysrZV0qMioqMjQpfSkpLGMucHJvdG90eXBlLnJlYWRCaWdJbnQ2NEJFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj0odDw8MjQpKzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3RoaXNbKytlXTtyZXR1cm4oQmlnSW50KG4pPDxCaWdJbnQoMzIpKStCaWdJbnQodGhpc1srK2VdKjIqKjI0KzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3IpfSkpLGMucHJvdG90eXBlLnJlYWRGbG9hdExFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsNCx0aGlzLmxlbmd0aCksby5yZWFkKHRoaXMsZSwhMCwyMyw0KX0sYy5wcm90b3R5cGUucmVhZEZsb2F0QkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCExLDIzLDQpfSxjLnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw4LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCEwLDUyLDgpfSxjLnByb3RvdHlwZS5yZWFkRG91YmxlQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw4LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCExLDUyLDgpfSxjLnByb3RvdHlwZS53cml0ZVVpbnRMRT1jLnByb3RvdHlwZS53cml0ZVVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtlPStlLHQ+Pj49MCxyPj4+PTAsbnx8Tyh0aGlzLGUsdCxyLE1hdGgucG93KDIsOCpyKS0xLDApO2xldCBvPTEscz0wO2Zvcih0aGlzW3RdPTI1NSZlOysrczxyJiYobyo9MjU2KTspdGhpc1t0K3NdPWUvbyYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVVaW50QkU9Yy5wcm90b3R5cGUud3JpdGVVSW50QkU9ZnVuY3Rpb24oZSx0LHIsbil7ZT0rZSx0Pj4+PTAscj4+Pj0wLG58fE8odGhpcyxlLHQscixNYXRoLnBvdygyLDgqciktMSwwKTtsZXQgbz1yLTEscz0xO2Zvcih0aGlzW3Qrb109MjU1JmU7LS1vPj0wJiYocyo9MjU2KTspdGhpc1t0K29dPWUvcyYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVVaW50OD1jLnByb3RvdHlwZS53cml0ZVVJbnQ4PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwxLDI1NSwwKSx0aGlzW3RdPTI1NSZlLHQrMX0sYy5wcm90b3R5cGUud3JpdGVVaW50MTZMRT1jLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYy5wcm90b3R5cGUud3JpdGVVaW50MTZCRT1jLnByb3RvdHlwZS53cml0ZVVJbnQxNkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09ZT4+PjgsdGhpc1t0KzFdPTI1NSZlLHQrMn0sYy5wcm90b3R5cGUud3JpdGVVaW50MzJMRT1jLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0KzNdPWU+Pj4yNCx0aGlzW3QrMl09ZT4+PjE2LHRoaXNbdCsxXT1lPj4+OCx0aGlzW3RdPTI1NSZlLHQrNH0sYy5wcm90b3R5cGUud3JpdGVVaW50MzJCRT1jLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0XT1lPj4+MjQsdGhpc1t0KzFdPWU+Pj4xNix0aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPTI1NSZlLHQrNH0sYy5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRMRT1RKChmdW5jdGlvbihlLHQ9MCl7cmV0dXJuIEQodGhpcyxlLHQsQmlnSW50KDApLEJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl9KSksYy5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRCRT1RKChmdW5jdGlvbihlLHQ9MCl7cmV0dXJuIE4odGhpcyxlLHQsQmlnSW50KDApLEJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl9KSksYy5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7Y29uc3Qgbj1NYXRoLnBvdygyLDgqci0xKTtPKHRoaXMsZSx0LHIsbi0xLC1uKX1sZXQgbz0wLHM9MSxpPTA7Zm9yKHRoaXNbdF09MjU1JmU7KytvPHImJihzKj0yNTYpOyllPDAmJjA9PT1pJiYwIT09dGhpc1t0K28tMV0mJihpPTEpLHRoaXNbdCtvXT0oZS9zPj4wKS1pJjI1NTtyZXR1cm4gdCtyfSxjLnByb3RvdHlwZS53cml0ZUludEJFPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKGU9K2UsdD4+Pj0wLCFuKXtjb25zdCBuPU1hdGgucG93KDIsOCpyLTEpO08odGhpcyxlLHQscixuLTEsLW4pfWxldCBvPXItMSxzPTEsaT0wO2Zvcih0aGlzW3Qrb109MjU1JmU7LS1vPj0wJiYocyo9MjU2KTspZTwwJiYwPT09aSYmMCE9PXRoaXNbdCtvKzFdJiYoaT0xKSx0aGlzW3Qrb109KGUvcz4+MCktaSYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVJbnQ4PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwxLDEyNywtMTI4KSxlPDAmJihlPTI1NStlKzEpLHRoaXNbdF09MjU1JmUsdCsxfSxjLnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxPKHRoaXMsZSx0LDIsMzI3NjcsLTMyNzY4KSx0aGlzW3RdPTI1NSZlLHRoaXNbdCsxXT1lPj4+OCx0KzJ9LGMucHJvdG90eXBlLndyaXRlSW50MTZCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fE8odGhpcyxlLHQsMiwzMjc2NywtMzI3NjgpLHRoaXNbdF09ZT4+PjgsdGhpc1t0KzFdPTI1NSZlLHQrMn0sYy5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzNdPWU+Pj4yNCx0KzR9LGMucHJvdG90eXBlLndyaXRlSW50MzJCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fE8odGhpcyxlLHQsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KSxlPDAmJihlPTQyOTQ5NjcyOTUrZSsxKSx0aGlzW3RdPWU+Pj4yNCx0aGlzW3QrMV09ZT4+PjE2LHRoaXNbdCsyXT1lPj4+OCx0aGlzW3QrM109MjU1JmUsdCs0fSxjLnByb3RvdHlwZS53cml0ZUJpZ0ludDY0TEU9USgoZnVuY3Rpb24oZSx0PTApe3JldHVybiBEKHRoaXMsZSx0LC1CaWdJbnQoXCIweDgwMDAwMDAwMDAwMDAwMDBcIiksQmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmXCIpKX0pKSxjLnByb3RvdHlwZS53cml0ZUJpZ0ludDY0QkU9USgoZnVuY3Rpb24oZSx0PTApe3JldHVybiBOKHRoaXMsZSx0LC1CaWdJbnQoXCIweDgwMDAwMDAwMDAwMDAwMDBcIiksQmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmXCIpKX0pKSxjLnByb3RvdHlwZS53cml0ZUZsb2F0TEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCEwLHIpfSxjLnByb3RvdHlwZS53cml0ZUZsb2F0QkU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCExLHIpfSxjLnByb3RvdHlwZS53cml0ZURvdWJsZUxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gRih0aGlzLGUsdCwhMCxyKX0sYy5wcm90b3R5cGUud3JpdGVEb3VibGVCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIEYodGhpcyxlLHQsITEscil9LGMucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIWMuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHNob3VsZCBiZSBhIEJ1ZmZlclwiKTtpZihyfHwocj0wKSxufHwwPT09bnx8KG49dGhpcy5sZW5ndGgpLHQ+PWUubGVuZ3RoJiYodD1lLmxlbmd0aCksdHx8KHQ9MCksbj4wJiZuPHImJihuPXIpLG49PT1yKXJldHVybiAwO2lmKDA9PT1lLmxlbmd0aHx8MD09PXRoaXMubGVuZ3RoKXJldHVybiAwO2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYocjwwfHxyPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKTtpZihuPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJzb3VyY2VFbmQgb3V0IG9mIGJvdW5kc1wiKTtuPnRoaXMubGVuZ3RoJiYobj10aGlzLmxlbmd0aCksZS5sZW5ndGgtdDxuLXImJihuPWUubGVuZ3RoLXQrcik7Y29uc3Qgbz1uLXI7cmV0dXJuIHRoaXM9PT1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluP3RoaXMuY29weVdpdGhpbih0LHIsbik6VWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwoZSx0aGlzLnN1YmFycmF5KHIsbiksdCksb30sYy5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbihlLHQscixuKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQ/KG49dCx0PTAscj10aGlzLmxlbmd0aCk6XCJzdHJpbmdcIj09dHlwZW9mIHImJihuPXIscj10aGlzLmxlbmd0aCksdm9pZCAwIT09biYmXCJzdHJpbmdcIiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcImVuY29kaW5nIG11c3QgYmUgYSBzdHJpbmdcIik7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4mJiFjLmlzRW5jb2RpbmcobikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO2lmKDE9PT1lLmxlbmd0aCl7Y29uc3QgdD1lLmNoYXJDb2RlQXQoMCk7KFwidXRmOFwiPT09biYmdDwxMjh8fFwibGF0aW4xXCI9PT1uKSYmKGU9dCl9fWVsc2VcIm51bWJlclwiPT10eXBlb2YgZT9lJj0yNTU6XCJib29sZWFuXCI9PXR5cGVvZiBlJiYoZT1OdW1iZXIoZSkpO2lmKHQ8MHx8dGhpcy5sZW5ndGg8dHx8dGhpcy5sZW5ndGg8cil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihyPD10KXJldHVybiB0aGlzO2xldCBvO2lmKHQ+Pj49MCxyPXZvaWQgMD09PXI/dGhpcy5sZW5ndGg6cj4+PjAsZXx8KGU9MCksXCJudW1iZXJcIj09dHlwZW9mIGUpZm9yKG89dDtvPHI7KytvKXRoaXNbb109ZTtlbHNle2NvbnN0IHM9Yy5pc0J1ZmZlcihlKT9lOmMuZnJvbShlLG4pLGk9cy5sZW5ndGg7aWYoMD09PWkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHZhbHVlIFwiJytlKydcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKTtmb3Iobz0wO288ci10Oysrbyl0aGlzW28rdF09c1tvJWldfXJldHVybiB0aGlzfTtjb25zdCB6PXt9O2Z1bmN0aW9uIGooZSx0LHIpe3pbZV09Y2xhc3MgZXh0ZW5kcyBye2NvbnN0cnVjdG9yKCl7c3VwZXIoKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm1lc3NhZ2VcIix7dmFsdWU6dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdGhpcy5uYW1lPWAke3RoaXMubmFtZX0gWyR7ZX1dYCx0aGlzLnN0YWNrLGRlbGV0ZSB0aGlzLm5hbWV9Z2V0IGNvZGUoKXtyZXR1cm4gZX1zZXQgY29kZShlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNvZGVcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6ZSx3cml0YWJsZTohMH0pfXRvU3RyaW5nKCl7cmV0dXJuYCR7dGhpcy5uYW1lfSBbJHtlfV06ICR7dGhpcy5tZXNzYWdlfWB9fX1mdW5jdGlvbiBNKGUpe2xldCB0PVwiXCIscj1lLmxlbmd0aDtjb25zdCBuPVwiLVwiPT09ZVswXT8xOjA7Zm9yKDtyPj1uKzQ7ci09Myl0PWBfJHtlLnNsaWNlKHItMyxyKX0ke3R9YDtyZXR1cm5gJHtlLnNsaWNlKDAscil9JHt0fWB9ZnVuY3Rpb24gSChlLHQscixuLG8scyl7aWYoZT5yfHxlPHQpe2NvbnN0IG49XCJiaWdpbnRcIj09dHlwZW9mIHQ/XCJuXCI6XCJcIjtsZXQgbzt0aHJvdyBvPXM+Mz8wPT09dHx8dD09PUJpZ0ludCgwKT9gPj0gMCR7bn0gYW5kIDwgMiR7bn0gKiogJHs4KihzKzEpfSR7bn1gOmA+PSAtKDIke259ICoqICR7OCoocysxKS0xfSR7bn0pIGFuZCA8IDIgKiogJHs4KihzKzEpLTF9JHtufWA6YD49ICR7dH0ke259IGFuZCA8PSAke3J9JHtufWAsbmV3IHouRVJSX09VVF9PRl9SQU5HRShcInZhbHVlXCIsbyxlKX0hZnVuY3Rpb24oZSx0LHIpe0codCxcIm9mZnNldFwiKSx2b2lkIDAhPT1lW3RdJiZ2b2lkIDAhPT1lW3Qrcl18fEsodCxlLmxlbmd0aC0ocisxKSl9KG4sbyxzKX1mdW5jdGlvbiBHKGUsdCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IHouRVJSX0lOVkFMSURfQVJHX1RZUEUodCxcIm51bWJlclwiLGUpfWZ1bmN0aW9uIEsoZSx0LHIpe2lmKE1hdGguZmxvb3IoZSkhPT1lKXRocm93IEcoZSxyKSxuZXcgei5FUlJfT1VUX09GX1JBTkdFKHJ8fFwib2Zmc2V0XCIsXCJhbiBpbnRlZ2VyXCIsZSk7aWYodDwwKXRocm93IG5ldyB6LkVSUl9CVUZGRVJfT1VUX09GX0JPVU5EUzt0aHJvdyBuZXcgei5FUlJfT1VUX09GX1JBTkdFKHJ8fFwib2Zmc2V0XCIsYD49ICR7cj8xOjB9IGFuZCA8PSAke3R9YCxlKX1qKFwiRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTXCIsKGZ1bmN0aW9uKGUpe3JldHVybiBlP2Ake2V9IGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kc2A6XCJBdHRlbXB0IHRvIGFjY2VzcyBtZW1vcnkgb3V0c2lkZSBidWZmZXIgYm91bmRzXCJ9KSxSYW5nZUVycm9yKSxqKFwiRVJSX0lOVkFMSURfQVJHX1RZUEVcIiwoZnVuY3Rpb24oZSx0KXtyZXR1cm5gVGhlIFwiJHtlfVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJHt0eXBlb2YgdH1gfSksVHlwZUVycm9yKSxqKFwiRVJSX09VVF9PRl9SQU5HRVwiLChmdW5jdGlvbihlLHQscil7bGV0IG49YFRoZSB2YWx1ZSBvZiBcIiR7ZX1cIiBpcyBvdXQgb2YgcmFuZ2UuYCxvPXI7cmV0dXJuIE51bWJlci5pc0ludGVnZXIocikmJk1hdGguYWJzKHIpPjIqKjMyP289TShTdHJpbmcocikpOlwiYmlnaW50XCI9PXR5cGVvZiByJiYobz1TdHJpbmcociksKHI+QmlnSW50KDIpKipCaWdJbnQoMzIpfHxyPC0oQmlnSW50KDIpKipCaWdJbnQoMzIpKSkmJihvPU0obykpLG8rPVwiblwiKSxuKz1gIEl0IG11c3QgYmUgJHt0fS4gUmVjZWl2ZWQgJHtvfWAsbn0pLFJhbmdlRXJyb3IpO2NvbnN0IHE9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiAkKGUsdCl7bGV0IHI7dD10fHwxLzA7Y29uc3Qgbj1lLmxlbmd0aDtsZXQgbz1udWxsO2NvbnN0IHM9W107Zm9yKGxldCBpPTA7aTxuOysraSl7aWYocj1lLmNoYXJDb2RlQXQoaSkscj41NTI5NSYmcjw1NzM0NCl7aWYoIW8pe2lmKHI+NTYzMTkpeyh0LT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1pZihpKzE9PT1uKXsodC09Myk+LTEmJnMucHVzaCgyMzksMTkxLDE4OSk7Y29udGludWV9bz1yO2NvbnRpbnVlfWlmKHI8NTYzMjApeyh0LT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsMTg5KSxvPXI7Y29udGludWV9cj02NTUzNisoby01NTI5Njw8MTB8ci01NjMyMCl9ZWxzZSBvJiYodC09Myk+LTEmJnMucHVzaCgyMzksMTkxLDE4OSk7aWYobz1udWxsLHI8MTI4KXtpZigodC09MSk8MClicmVhaztzLnB1c2gocil9ZWxzZSBpZihyPDIwNDgpe2lmKCh0LT0yKTwwKWJyZWFrO3MucHVzaChyPj42fDE5Miw2MyZyfDEyOCl9ZWxzZSBpZihyPDY1NTM2KXtpZigodC09Myk8MClicmVhaztzLnB1c2gocj4+MTJ8MjI0LHI+PjYmNjN8MTI4LDYzJnJ8MTI4KX1lbHNle2lmKCEocjwxMTE0MTEyKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvZGUgcG9pbnRcIik7aWYoKHQtPTQpPDApYnJlYWs7cy5wdXNoKHI+PjE4fDI0MCxyPj4xMiY2M3wxMjgscj4+NiY2M3wxMjgsNjMmcnwxMjgpfX1yZXR1cm4gc31mdW5jdGlvbiBWKGUpe3JldHVybiBuLnRvQnl0ZUFycmF5KGZ1bmN0aW9uKGUpe2lmKChlPShlPWUuc3BsaXQoXCI9XCIpWzBdKS50cmltKCkucmVwbGFjZShxLFwiXCIpKS5sZW5ndGg8MilyZXR1cm5cIlwiO2Zvcig7ZS5sZW5ndGglNCE9MDspZSs9XCI9XCI7cmV0dXJuIGV9KGUpKX1mdW5jdGlvbiBXKGUsdCxyLG4pe2xldCBvO2ZvcihvPTA7bzxuJiYhKG8rcj49dC5sZW5ndGh8fG8+PWUubGVuZ3RoKTsrK28pdFtvK3JdPWVbb107cmV0dXJuIG99ZnVuY3Rpb24gWChlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgdHx8bnVsbCE9ZSYmbnVsbCE9ZS5jb25zdHJ1Y3RvciYmbnVsbCE9ZS5jb25zdHJ1Y3Rvci5uYW1lJiZlLmNvbnN0cnVjdG9yLm5hbWU9PT10Lm5hbWV9ZnVuY3Rpb24gWShlKXtyZXR1cm4gZSE9ZX1jb25zdCBKPWZ1bmN0aW9uKCl7Y29uc3QgZT1cIjAxMjM0NTY3ODlhYmNkZWZcIix0PW5ldyBBcnJheSgyNTYpO2ZvcihsZXQgcj0wO3I8MTY7KytyKXtjb25zdCBuPTE2KnI7Zm9yKGxldCBvPTA7bzwxNjsrK28pdFtuK29dPWVbcl0rZVtvXX1yZXR1cm4gdH0oKTtmdW5jdGlvbiBRKGUpe3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBCaWdJbnQ/WjplfWZ1bmN0aW9uIFooKXt0aHJvdyBuZXcgRXJyb3IoXCJCaWdJbnQgbm90IHN1cHBvcnRlZFwiKX19LDc2MTU6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMTgwMSksbz1yKDI1NTApLHM9byhuKFwiU3RyaW5nLnByb3RvdHlwZS5pbmRleE9mXCIpKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uKGUsISF0KTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZzKGUsXCIucHJvdG90eXBlLlwiKT4tMT9vKHIpOnJ9fSwyNTUwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDE5MzApLG89cigxODAxKSxzPW8oXCIlRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5JVwiKSxpPW8oXCIlRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwlXCIpLGE9byhcIiVSZWZsZWN0LmFwcGx5JVwiLCEwKXx8bi5jYWxsKGkscyksYz1vKFwiJU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IlXCIsITApLHU9byhcIiVPYmplY3QuZGVmaW5lUHJvcGVydHklXCIsITApLGw9byhcIiVNYXRoLm1heCVcIik7aWYodSl0cnl7dSh7fSxcImFcIix7dmFsdWU6MX0pfWNhdGNoKGUpe3U9bnVsbH1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9YShuLGksYXJndW1lbnRzKTtpZihjJiZ1KXt2YXIgcj1jKHQsXCJsZW5ndGhcIik7ci5jb25maWd1cmFibGUmJnUodCxcImxlbmd0aFwiLHt2YWx1ZToxK2woMCxlLmxlbmd0aC0oYXJndW1lbnRzLmxlbmd0aC0xKSl9KX1yZXR1cm4gdH07dmFyIGg9ZnVuY3Rpb24oKXtyZXR1cm4gYShuLHMsYXJndW1lbnRzKX07dT91KGUuZXhwb3J0cyxcImFwcGx5XCIse3ZhbHVlOmh9KTplLmV4cG9ydHMuYXBwbHk9aH0sMTA2OTplPT57ZnVuY3Rpb24gdChlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHIgaW4gdC5wcm90b3R5cGUpZVtyXT10LnByb3RvdHlwZVtyXTtyZXR1cm4gZX0oZSl9ZS5leHBvcnRzPXQsdC5wcm90b3R5cGUub249dC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fSwodGhpcy5fY2FsbGJhY2tzW1wiJFwiK2VdPXRoaXMuX2NhbGxiYWNrc1tcIiRcIitlXXx8W10pLnB1c2godCksdGhpc30sdC5wcm90b3R5cGUub25jZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoKXt0aGlzLm9mZihlLHIpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiByLmZuPXQsdGhpcy5vbihlLHIpLHRoaXN9LHQucHJvdG90eXBlLm9mZj10LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj10LnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9dC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe2lmKHRoaXMuX2NhbGxiYWNrcz10aGlzLl9jYWxsYmFja3N8fHt9LDA9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuX2NhbGxiYWNrcz17fSx0aGlzO3ZhciByLG49dGhpcy5fY2FsbGJhY2tzW1wiJFwiK2VdO2lmKCFuKXJldHVybiB0aGlzO2lmKDE9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sdGhpcztmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylpZigocj1uW29dKT09PXR8fHIuZm49PT10KXtuLnNwbGljZShvLDEpO2JyZWFrfXJldHVybiAwPT09bi5sZW5ndGgmJmRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sdGhpc30sdC5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbihlKXt0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fTtmb3IodmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSkscj10aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sbj0xO248YXJndW1lbnRzLmxlbmd0aDtuKyspdFtuLTFdPWFyZ3VtZW50c1tuXTtpZihyKXtuPTA7Zm9yKHZhciBvPShyPXIuc2xpY2UoMCkpLmxlbmd0aDtuPG87KytuKXJbbl0uYXBwbHkodGhpcyx0KX1yZXR1cm4gdGhpc30sdC5wcm90b3R5cGUubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fSx0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV18fFtdfSx0LnByb3RvdHlwZS5oYXNMaXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuISF0aGlzLmxpc3RlbmVycyhlKS5sZW5ndGh9fSw1Nzk5OmU9PntlLmV4cG9ydHM9bixuLmRlZmF1bHQ9bixuLnN0YWJsZT1pLG4uc3RhYmxlU3RyaW5naWZ5PWk7dmFyIHQ9W10scj1bXTtmdW5jdGlvbiBuKGUsbixzKXt2YXIgaTtmb3IobyhlLFwiXCIsW10sdm9pZCAwKSxpPTA9PT1yLmxlbmd0aD9KU09OLnN0cmluZ2lmeShlLG4scyk6SlNPTi5zdHJpbmdpZnkoZSxjKG4pLHMpOzAhPT10Lmxlbmd0aDspe3ZhciBhPXQucG9wKCk7ND09PWEubGVuZ3RoP09iamVjdC5kZWZpbmVQcm9wZXJ0eShhWzBdLGFbMV0sYVszXSk6YVswXVthWzFdXT1hWzJdfXJldHVybiBpfWZ1bmN0aW9uIG8oZSxuLHMsaSl7dmFyIGE7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lKXtmb3IoYT0wO2E8cy5sZW5ndGg7YSsrKWlmKHNbYV09PT1lKXt2YXIgYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksbik7cmV0dXJuIHZvaWQodm9pZCAwIT09Yy5nZXQ/Yy5jb25maWd1cmFibGU/KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLG4se3ZhbHVlOlwiW0NpcmN1bGFyXVwifSksdC5wdXNoKFtpLG4sZSxjXSkpOnIucHVzaChbZSxuXSk6KGlbbl09XCJbQ2lyY3VsYXJdXCIsdC5wdXNoKFtpLG4sZV0pKSl9aWYocy5wdXNoKGUpLEFycmF5LmlzQXJyYXkoZSkpZm9yKGE9MDthPGUubGVuZ3RoO2ErKylvKGVbYV0sYSxzLGUpO2Vsc2V7dmFyIHU9T2JqZWN0LmtleXMoZSk7Zm9yKGE9MDthPHUubGVuZ3RoO2ErKyl7dmFyIGw9dVthXTtvKGVbbF0sbCxzLGUpfX1zLnBvcCgpfX1mdW5jdGlvbiBzKGUsdCl7cmV0dXJuIGU8dD8tMTplPnQ/MTowfWZ1bmN0aW9uIGkoZSxuLG8pe3ZhciBzLGk9YShlLFwiXCIsW10sdm9pZCAwKXx8ZTtmb3Iocz0wPT09ci5sZW5ndGg/SlNPTi5zdHJpbmdpZnkoaSxuLG8pOkpTT04uc3RyaW5naWZ5KGksYyhuKSxvKTswIT09dC5sZW5ndGg7KXt2YXIgdT10LnBvcCgpOzQ9PT11Lmxlbmd0aD9PYmplY3QuZGVmaW5lUHJvcGVydHkodVswXSx1WzFdLHVbM10pOnVbMF1bdVsxXV09dVsyXX1yZXR1cm4gc31mdW5jdGlvbiBhKGUsbixvLGkpe3ZhciBjO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT09ZSl7Zm9yKGM9MDtjPG8ubGVuZ3RoO2MrKylpZihvW2NdPT09ZSl7dmFyIHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLG4pO3JldHVybiB2b2lkKHZvaWQgMCE9PXUuZ2V0P3UuY29uZmlndXJhYmxlPyhPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxuLHt2YWx1ZTpcIltDaXJjdWxhcl1cIn0pLHQucHVzaChbaSxuLGUsdV0pKTpyLnB1c2goW2Usbl0pOihpW25dPVwiW0NpcmN1bGFyXVwiLHQucHVzaChbaSxuLGVdKSkpfWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUudG9KU09OKXJldHVybjtpZihvLnB1c2goZSksQXJyYXkuaXNBcnJheShlKSlmb3IoYz0wO2M8ZS5sZW5ndGg7YysrKWEoZVtjXSxjLG8sZSk7ZWxzZXt2YXIgbD17fSxoPU9iamVjdC5rZXlzKGUpLnNvcnQocyk7Zm9yKGM9MDtjPGgubGVuZ3RoO2MrKyl7dmFyIHA9aFtjXTthKGVbcF0scCxvLGUpLGxbcF09ZVtwXX1pZih2b2lkIDA9PT1pKXJldHVybiBsO3QucHVzaChbaSxuLGVdKSxpW25dPWx9by5wb3AoKX19ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZT12b2lkIDAhPT1lP2U6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0sZnVuY3Rpb24odCxuKXtpZihyLmxlbmd0aD4wKWZvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXt2YXIgcz1yW29dO2lmKHNbMV09PT10JiZzWzBdPT09bil7bj1cIltDaXJjdWxhcl1cIixyLnNwbGljZShvLDEpO2JyZWFrfX1yZXR1cm4gZS5jYWxsKHRoaXMsdCxuKX19fSw5OTMwOmU9PntcInVzZSBzdHJpY3RcIjt2YXIgdD1cIkZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgXCIscj1BcnJheS5wcm90b3R5cGUuc2xpY2Usbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLG89XCJbb2JqZWN0IEZ1bmN0aW9uXVwiO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgcz10aGlzO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN8fG4uY2FsbChzKSE9PW8pdGhyb3cgbmV3IFR5cGVFcnJvcih0K3MpO2Zvcih2YXIgaSxhPXIuY2FsbChhcmd1bWVudHMsMSksYz1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBpKXt2YXIgdD1zLmFwcGx5KHRoaXMsYS5jb25jYXQoci5jYWxsKGFyZ3VtZW50cykpKTtyZXR1cm4gT2JqZWN0KHQpPT09dD90OnRoaXN9cmV0dXJuIHMuYXBwbHkoZSxhLmNvbmNhdChyLmNhbGwoYXJndW1lbnRzKSkpfSx1PU1hdGgubWF4KDAscy5sZW5ndGgtYS5sZW5ndGgpLGw9W10saD0wO2g8dTtoKyspbC5wdXNoKFwiJFwiK2gpO2lmKGk9RnVuY3Rpb24oXCJiaW5kZXJcIixcInJldHVybiBmdW5jdGlvbiAoXCIrbC5qb2luKFwiLFwiKStcIil7IHJldHVybiBiaW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOyB9XCIpKGMpLHMucHJvdG90eXBlKXt2YXIgcD1mdW5jdGlvbigpe307cC5wcm90b3R5cGU9cy5wcm90b3R5cGUsaS5wcm90b3R5cGU9bmV3IHAscC5wcm90b3R5cGU9bnVsbH1yZXR1cm4gaX19LDE5MzA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoOTkzMCk7ZS5leHBvcnRzPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHxufSwxODAxOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbixvPVN5bnRheEVycm9yLHM9RnVuY3Rpb24saT1UeXBlRXJyb3IsYT1mdW5jdGlvbihlKXt0cnl7cmV0dXJuIHMoJ1widXNlIHN0cmljdFwiOyByZXR1cm4gKCcrZStcIikuY29uc3RydWN0b3I7XCIpKCl9Y2F0Y2goZSl7fX0sYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2lmKGMpdHJ5e2Moe30sXCJcIil9Y2F0Y2goZSl7Yz1udWxsfXZhciB1PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IGl9LGw9Yz9mdW5jdGlvbigpe3RyeXtyZXR1cm4gdX1jYXRjaChlKXt0cnl7cmV0dXJuIGMoYXJndW1lbnRzLFwiY2FsbGVlXCIpLmdldH1jYXRjaChlKXtyZXR1cm4gdX19fSgpOnUsaD1yKDk5MDUpKCkscD1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlLl9fcHJvdG9fX30sZj17fSxkPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50OEFycmF5P246cChVaW50OEFycmF5KSxnPXtcIiVBZ2dyZWdhdGVFcnJvciVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgQWdncmVnYXRlRXJyb3I/bjpBZ2dyZWdhdGVFcnJvcixcIiVBcnJheSVcIjpBcnJheSxcIiVBcnJheUJ1ZmZlciVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgQXJyYXlCdWZmZXI/bjpBcnJheUJ1ZmZlcixcIiVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJVwiOmg/cChbXVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlQXN5bmNGcm9tU3luY0l0ZXJhdG9yUHJvdG90eXBlJVwiOm4sXCIlQXN5bmNGdW5jdGlvbiVcIjpmLFwiJUFzeW5jR2VuZXJhdG9yJVwiOmYsXCIlQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiVcIjpmLFwiJUFzeW5jSXRlcmF0b3JQcm90b3R5cGUlXCI6ZixcIiVBdG9taWNzJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBBdG9taWNzP246QXRvbWljcyxcIiVCaWdJbnQlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEJpZ0ludD9uOkJpZ0ludCxcIiVCb29sZWFuJVwiOkJvb2xlYW4sXCIlRGF0YVZpZXclXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIERhdGFWaWV3P246RGF0YVZpZXcsXCIlRGF0ZSVcIjpEYXRlLFwiJWRlY29kZVVSSSVcIjpkZWNvZGVVUkksXCIlZGVjb2RlVVJJQ29tcG9uZW50JVwiOmRlY29kZVVSSUNvbXBvbmVudCxcIiVlbmNvZGVVUkklXCI6ZW5jb2RlVVJJLFwiJWVuY29kZVVSSUNvbXBvbmVudCVcIjplbmNvZGVVUklDb21wb25lbnQsXCIlRXJyb3IlXCI6RXJyb3IsXCIlZXZhbCVcIjpldmFsLFwiJUV2YWxFcnJvciVcIjpFdmFsRXJyb3IsXCIlRmxvYXQzMkFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBGbG9hdDMyQXJyYXk/bjpGbG9hdDMyQXJyYXksXCIlRmxvYXQ2NEFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBGbG9hdDY0QXJyYXk/bjpGbG9hdDY0QXJyYXksXCIlRmluYWxpemF0aW9uUmVnaXN0cnklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEZpbmFsaXphdGlvblJlZ2lzdHJ5P246RmluYWxpemF0aW9uUmVnaXN0cnksXCIlRnVuY3Rpb24lXCI6cyxcIiVHZW5lcmF0b3JGdW5jdGlvbiVcIjpmLFwiJUludDhBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50OEFycmF5P246SW50OEFycmF5LFwiJUludDE2QXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEludDE2QXJyYXk/bjpJbnQxNkFycmF5LFwiJUludDMyQXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEludDMyQXJyYXk/bjpJbnQzMkFycmF5LFwiJWlzRmluaXRlJVwiOmlzRmluaXRlLFwiJWlzTmFOJVwiOmlzTmFOLFwiJUl0ZXJhdG9yUHJvdG90eXBlJVwiOmg/cChwKFtdW1N5bWJvbC5pdGVyYXRvcl0oKSkpOm4sXCIlSlNPTiVcIjpcIm9iamVjdFwiPT10eXBlb2YgSlNPTj9KU09OOm4sXCIlTWFwJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBNYXA/bjpNYXAsXCIlTWFwSXRlcmF0b3JQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1hcCYmaD9wKChuZXcgTWFwKVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlTWF0aCVcIjpNYXRoLFwiJU51bWJlciVcIjpOdW1iZXIsXCIlT2JqZWN0JVwiOk9iamVjdCxcIiVwYXJzZUZsb2F0JVwiOnBhcnNlRmxvYXQsXCIlcGFyc2VJbnQlXCI6cGFyc2VJbnQsXCIlUHJvbWlzZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgUHJvbWlzZT9uOlByb21pc2UsXCIlUHJveHklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb3h5P246UHJveHksXCIlUmFuZ2VFcnJvciVcIjpSYW5nZUVycm9yLFwiJVJlZmVyZW5jZUVycm9yJVwiOlJlZmVyZW5jZUVycm9yLFwiJVJlZmxlY3QlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFJlZmxlY3Q/bjpSZWZsZWN0LFwiJVJlZ0V4cCVcIjpSZWdFeHAsXCIlU2V0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBTZXQ/bjpTZXQsXCIlU2V0SXRlcmF0b3JQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFNldCYmaD9wKChuZXcgU2V0KVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlU2hhcmVkQXJyYXlCdWZmZXIlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyP246U2hhcmVkQXJyYXlCdWZmZXIsXCIlU3RyaW5nJVwiOlN0cmluZyxcIiVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSVcIjpoP3AoXCJcIltTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlU3ltYm9sJVwiOmg/U3ltYm9sOm4sXCIlU3ludGF4RXJyb3IlXCI6byxcIiVUaHJvd1R5cGVFcnJvciVcIjpsLFwiJVR5cGVkQXJyYXklXCI6ZCxcIiVUeXBlRXJyb3IlXCI6aSxcIiVVaW50OEFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50OEFycmF5P246VWludDhBcnJheSxcIiVVaW50OENsYW1wZWRBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXk/bjpVaW50OENsYW1wZWRBcnJheSxcIiVVaW50MTZBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDE2QXJyYXk/bjpVaW50MTZBcnJheSxcIiVVaW50MzJBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDMyQXJyYXk/bjpVaW50MzJBcnJheSxcIiVVUklFcnJvciVcIjpVUklFcnJvcixcIiVXZWFrTWFwJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrTWFwP246V2Vha01hcCxcIiVXZWFrUmVmJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrUmVmP246V2Vha1JlZixcIiVXZWFrU2V0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrU2V0P246V2Vha1NldH0seT1mdW5jdGlvbiBlKHQpe3ZhciByO2lmKFwiJUFzeW5jRnVuY3Rpb24lXCI9PT10KXI9YShcImFzeW5jIGZ1bmN0aW9uICgpIHt9XCIpO2Vsc2UgaWYoXCIlR2VuZXJhdG9yRnVuY3Rpb24lXCI9PT10KXI9YShcImZ1bmN0aW9uKiAoKSB7fVwiKTtlbHNlIGlmKFwiJUFzeW5jR2VuZXJhdG9yRnVuY3Rpb24lXCI9PT10KXI9YShcImFzeW5jIGZ1bmN0aW9uKiAoKSB7fVwiKTtlbHNlIGlmKFwiJUFzeW5jR2VuZXJhdG9yJVwiPT09dCl7dmFyIG49ZShcIiVBc3luY0dlbmVyYXRvckZ1bmN0aW9uJVwiKTtuJiYocj1uLnByb3RvdHlwZSl9ZWxzZSBpZihcIiVBc3luY0l0ZXJhdG9yUHJvdG90eXBlJVwiPT09dCl7dmFyIG89ZShcIiVBc3luY0dlbmVyYXRvciVcIik7byYmKHI9cChvLnByb3RvdHlwZSkpfXJldHVybiBnW3RdPXIscn0sbT17XCIlQXJyYXlCdWZmZXJQcm90b3R5cGUlXCI6W1wiQXJyYXlCdWZmZXJcIixcInByb3RvdHlwZVwiXSxcIiVBcnJheVByb3RvdHlwZSVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJUFycmF5UHJvdG9fZW50cmllcyVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJlbnRyaWVzXCJdLFwiJUFycmF5UHJvdG9fZm9yRWFjaCVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJmb3JFYWNoXCJdLFwiJUFycmF5UHJvdG9fa2V5cyVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJrZXlzXCJdLFwiJUFycmF5UHJvdG9fdmFsdWVzJVwiOltcIkFycmF5XCIsXCJwcm90b3R5cGVcIixcInZhbHVlc1wiXSxcIiVBc3luY0Z1bmN0aW9uUHJvdG90eXBlJVwiOltcIkFzeW5jRnVuY3Rpb25cIixcInByb3RvdHlwZVwiXSxcIiVBc3luY0dlbmVyYXRvciVcIjpbXCJBc3luY0dlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlQXN5bmNHZW5lcmF0b3JQcm90b3R5cGUlXCI6W1wiQXN5bmNHZW5lcmF0b3JGdW5jdGlvblwiLFwicHJvdG90eXBlXCIsXCJwcm90b3R5cGVcIl0sXCIlQm9vbGVhblByb3RvdHlwZSVcIjpbXCJCb29sZWFuXCIsXCJwcm90b3R5cGVcIl0sXCIlRGF0YVZpZXdQcm90b3R5cGUlXCI6W1wiRGF0YVZpZXdcIixcInByb3RvdHlwZVwiXSxcIiVEYXRlUHJvdG90eXBlJVwiOltcIkRhdGVcIixcInByb3RvdHlwZVwiXSxcIiVFcnJvclByb3RvdHlwZSVcIjpbXCJFcnJvclwiLFwicHJvdG90eXBlXCJdLFwiJUV2YWxFcnJvclByb3RvdHlwZSVcIjpbXCJFdmFsRXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVGbG9hdDMyQXJyYXlQcm90b3R5cGUlXCI6W1wiRmxvYXQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlRmxvYXQ2NEFycmF5UHJvdG90eXBlJVwiOltcIkZsb2F0NjRBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJUZ1bmN0aW9uUHJvdG90eXBlJVwiOltcIkZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlR2VuZXJhdG9yJVwiOltcIkdlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlR2VuZXJhdG9yUHJvdG90eXBlJVwiOltcIkdlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIixcInByb3RvdHlwZVwiXSxcIiVJbnQ4QXJyYXlQcm90b3R5cGUlXCI6W1wiSW50OEFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSW50MTZBcnJheVByb3RvdHlwZSVcIjpbXCJJbnQxNkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSW50MzJBcnJheVByb3RvdHlwZSVcIjpbXCJJbnQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSlNPTlBhcnNlJVwiOltcIkpTT05cIixcInBhcnNlXCJdLFwiJUpTT05TdHJpbmdpZnklXCI6W1wiSlNPTlwiLFwic3RyaW5naWZ5XCJdLFwiJU1hcFByb3RvdHlwZSVcIjpbXCJNYXBcIixcInByb3RvdHlwZVwiXSxcIiVOdW1iZXJQcm90b3R5cGUlXCI6W1wiTnVtYmVyXCIsXCJwcm90b3R5cGVcIl0sXCIlT2JqZWN0UHJvdG90eXBlJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCJdLFwiJU9ialByb3RvX3RvU3RyaW5nJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCIsXCJ0b1N0cmluZ1wiXSxcIiVPYmpQcm90b192YWx1ZU9mJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCIsXCJ2YWx1ZU9mXCJdLFwiJVByb21pc2VQcm90b3R5cGUlXCI6W1wiUHJvbWlzZVwiLFwicHJvdG90eXBlXCJdLFwiJVByb21pc2VQcm90b190aGVuJVwiOltcIlByb21pc2VcIixcInByb3RvdHlwZVwiLFwidGhlblwiXSxcIiVQcm9taXNlX2FsbCVcIjpbXCJQcm9taXNlXCIsXCJhbGxcIl0sXCIlUHJvbWlzZV9yZWplY3QlXCI6W1wiUHJvbWlzZVwiLFwicmVqZWN0XCJdLFwiJVByb21pc2VfcmVzb2x2ZSVcIjpbXCJQcm9taXNlXCIsXCJyZXNvbHZlXCJdLFwiJVJhbmdlRXJyb3JQcm90b3R5cGUlXCI6W1wiUmFuZ2VFcnJvclwiLFwicHJvdG90eXBlXCJdLFwiJVJlZmVyZW5jZUVycm9yUHJvdG90eXBlJVwiOltcIlJlZmVyZW5jZUVycm9yXCIsXCJwcm90b3R5cGVcIl0sXCIlUmVnRXhwUHJvdG90eXBlJVwiOltcIlJlZ0V4cFwiLFwicHJvdG90eXBlXCJdLFwiJVNldFByb3RvdHlwZSVcIjpbXCJTZXRcIixcInByb3RvdHlwZVwiXSxcIiVTaGFyZWRBcnJheUJ1ZmZlclByb3RvdHlwZSVcIjpbXCJTaGFyZWRBcnJheUJ1ZmZlclwiLFwicHJvdG90eXBlXCJdLFwiJVN0cmluZ1Byb3RvdHlwZSVcIjpbXCJTdHJpbmdcIixcInByb3RvdHlwZVwiXSxcIiVTeW1ib2xQcm90b3R5cGUlXCI6W1wiU3ltYm9sXCIsXCJwcm90b3R5cGVcIl0sXCIlU3ludGF4RXJyb3JQcm90b3R5cGUlXCI6W1wiU3ludGF4RXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVUeXBlZEFycmF5UHJvdG90eXBlJVwiOltcIlR5cGVkQXJyYXlcIixcInByb3RvdHlwZVwiXSxcIiVUeXBlRXJyb3JQcm90b3R5cGUlXCI6W1wiVHlwZUVycm9yXCIsXCJwcm90b3R5cGVcIl0sXCIlVWludDhBcnJheVByb3RvdHlwZSVcIjpbXCJVaW50OEFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlVWludDhDbGFtcGVkQXJyYXlQcm90b3R5cGUlXCI6W1wiVWludDhDbGFtcGVkQXJyYXlcIixcInByb3RvdHlwZVwiXSxcIiVVaW50MTZBcnJheVByb3RvdHlwZSVcIjpbXCJVaW50MTZBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJVVpbnQzMkFycmF5UHJvdG90eXBlJVwiOltcIlVpbnQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlVVJJRXJyb3JQcm90b3R5cGUlXCI6W1wiVVJJRXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVXZWFrTWFwUHJvdG90eXBlJVwiOltcIldlYWtNYXBcIixcInByb3RvdHlwZVwiXSxcIiVXZWFrU2V0UHJvdG90eXBlJVwiOltcIldlYWtTZXRcIixcInByb3RvdHlwZVwiXX0sYj1yKDE5MzApLEE9cig5Mjg0KSx3PWIuY2FsbChGdW5jdGlvbi5jYWxsLEFycmF5LnByb3RvdHlwZS5jb25jYXQpLHY9Yi5jYWxsKEZ1bmN0aW9uLmFwcGx5LEFycmF5LnByb3RvdHlwZS5zcGxpY2UpLFM9Yi5jYWxsKEZ1bmN0aW9uLmNhbGwsU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKSx4PWIuY2FsbChGdW5jdGlvbi5jYWxsLFN0cmluZy5wcm90b3R5cGUuc2xpY2UpLEU9L1teJS5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwlJCkpL2csVD0vXFxcXChcXFxcKT8vZyxfPWZ1bmN0aW9uKGUpe3ZhciB0PXgoZSwwLDEpLHI9eChlLC0xKTtpZihcIiVcIj09PXQmJlwiJVwiIT09cil0aHJvdyBuZXcgbyhcImludmFsaWQgaW50cmluc2ljIHN5bnRheCwgZXhwZWN0ZWQgY2xvc2luZyBgJWBcIik7aWYoXCIlXCI9PT1yJiZcIiVcIiE9PXQpdGhyb3cgbmV3IG8oXCJpbnZhbGlkIGludHJpbnNpYyBzeW50YXgsIGV4cGVjdGVkIG9wZW5pbmcgYCVgXCIpO3ZhciBuPVtdO3JldHVybiBTKGUsRSwoZnVuY3Rpb24oZSx0LHIsbyl7bltuLmxlbmd0aF09cj9TKG8sVCxcIiQxXCIpOnR8fGV9KSksbn0sQj1mdW5jdGlvbihlLHQpe3ZhciByLG49ZTtpZihBKG0sbikmJihuPVwiJVwiKyhyPW1bbl0pWzBdK1wiJVwiKSxBKGcsbikpe3ZhciBzPWdbbl07aWYocz09PWYmJihzPXkobikpLHZvaWQgMD09PXMmJiF0KXRocm93IG5ldyBpKFwiaW50cmluc2ljIFwiK2UrXCIgZXhpc3RzLCBidXQgaXMgbm90IGF2YWlsYWJsZS4gUGxlYXNlIGZpbGUgYW4gaXNzdWUhXCIpO3JldHVybnthbGlhczpyLG5hbWU6bix2YWx1ZTpzfX10aHJvdyBuZXcgbyhcImludHJpbnNpYyBcIitlK1wiIGRvZXMgbm90IGV4aXN0IVwiKX07ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGV8fDA9PT1lLmxlbmd0aCl0aHJvdyBuZXcgaShcImludHJpbnNpYyBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSYmXCJib29sZWFuXCIhPXR5cGVvZiB0KXRocm93IG5ldyBpKCdcImFsbG93TWlzc2luZ1wiIGFyZ3VtZW50IG11c3QgYmUgYSBib29sZWFuJyk7dmFyIHI9XyhlKSxuPXIubGVuZ3RoPjA/clswXTpcIlwiLHM9QihcIiVcIituK1wiJVwiLHQpLGE9cy5uYW1lLHU9cy52YWx1ZSxsPSExLGg9cy5hbGlhcztoJiYobj1oWzBdLHYocix3KFswLDFdLGgpKSk7Zm9yKHZhciBwPTEsZj0hMDtwPHIubGVuZ3RoO3ArPTEpe3ZhciBkPXJbcF0seT14KGQsMCwxKSxtPXgoZCwtMSk7aWYoKCdcIic9PT15fHxcIidcIj09PXl8fFwiYFwiPT09eXx8J1wiJz09PW18fFwiJ1wiPT09bXx8XCJgXCI9PT1tKSYmeSE9PW0pdGhyb3cgbmV3IG8oXCJwcm9wZXJ0eSBuYW1lcyB3aXRoIHF1b3RlcyBtdXN0IGhhdmUgbWF0Y2hpbmcgcXVvdGVzXCIpO2lmKFwiY29uc3RydWN0b3JcIiE9PWQmJmZ8fChsPSEwKSxBKGcsYT1cIiVcIisobis9XCIuXCIrZCkrXCIlXCIpKXU9Z1thXTtlbHNlIGlmKG51bGwhPXUpe2lmKCEoZCBpbiB1KSl7aWYoIXQpdGhyb3cgbmV3IGkoXCJiYXNlIGludHJpbnNpYyBmb3IgXCIrZStcIiBleGlzdHMsIGJ1dCB0aGUgcHJvcGVydHkgaXMgbm90IGF2YWlsYWJsZS5cIik7cmV0dXJufWlmKGMmJnArMT49ci5sZW5ndGgpe3ZhciBiPWModSxkKTt1PShmPSEhYikmJlwiZ2V0XCJpbiBiJiYhKFwib3JpZ2luYWxWYWx1ZVwiaW4gYi5nZXQpP2IuZ2V0OnVbZF19ZWxzZSBmPUEodSxkKSx1PXVbZF07ZiYmIWwmJihnW2FdPXUpfX1yZXR1cm4gdX19LDk5MDU6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbCxvPXIoNTY4Mik7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgbihcImZvb1wiKSYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbChcImJhclwiKSYmbygpfX0sNTY4MjplPT57XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgU3ltYm9sfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXJldHVybiExO2lmKFwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3IpcmV0dXJuITA7dmFyIGU9e30sdD1TeW1ib2woXCJ0ZXN0XCIpLHI9T2JqZWN0KHQpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiExO2lmKFwiW29iamVjdCBTeW1ib2xdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpcmV0dXJuITE7aWYoXCJbb2JqZWN0IFN5bWJvbF1cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSlyZXR1cm4hMTtmb3IodCBpbiBlW3RdPTQyLGUpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmtleXMmJjAhPT1PYmplY3Qua2V5cyhlKS5sZW5ndGgpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMmJjAhPT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKS5sZW5ndGgpcmV0dXJuITE7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtpZigxIT09bi5sZW5ndGh8fG5bMF0hPT10KXJldHVybiExO2lmKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSx0KSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKXt2YXIgbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCk7aWYoNDIhPT1vLnZhbHVlfHwhMCE9PW8uZW51bWVyYWJsZSlyZXR1cm4hMX1yZXR1cm4hMH19LDkyODQ6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMTkzMCk7ZS5leHBvcnRzPW4uY2FsbChGdW5jdGlvbi5jYWxsLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpfSw3MjY3OihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fTshdC5ISV9CQVNFMzJfTk9fTk9ERV9KUyYmXCJvYmplY3RcIj09dHlwZW9mIHByb2Nlc3MmJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZSYmKHQ9ci5nKTt2YXIgbz0hdC5ISV9CQVNFMzJfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMscz1yLmFtZE8saT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3XCIuc3BsaXQoXCJcIiksYT17QTowLEI6MSxDOjIsRDozLEU6NCxGOjUsRzo2LEg6NyxJOjgsSjo5LEs6MTAsTDoxMSxNOjEyLE46MTMsTzoxNCxQOjE1LFE6MTYsUjoxNyxTOjE4LFQ6MTksVToyMCxWOjIxLFc6MjIsWDoyMyxZOjI0LFo6MjUsMjoyNiwzOjI3LDQ6MjgsNToyOSw2OjMwLDc6MzF9LGM9WzAsMCwwLDAsMCwwLDAsMF0sdT1mdW5jdGlvbihlLHQpe3QubGVuZ3RoPjEwJiYodD1cIi4uLlwiK3Quc3Vic3RyKC0xMCkpO3ZhciByPW5ldyBFcnJvcihcIkRlY29kZWQgZGF0YSBpcyBub3QgdmFsaWQgVVRGLTguIE1heWJlIHRyeSBiYXNlMzIuZGVjb2RlLmFzQnl0ZXMoKT8gUGFydGlhbCBkYXRhIGFmdGVyIHJlYWRpbmcgXCIrZStcIiBieXRlczogXCIrdCtcIiA8LVwiKTt0aHJvdyByLnBvc2l0aW9uPWUscn0sbD1mdW5jdGlvbihlKXtpZihcIlwiPT09ZSlyZXR1cm5bXTtpZighL15bQS1aMi03PV0rJC8udGVzdChlKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJhc2UzMiBjaGFyYWN0ZXJzXCIpO2Zvcih2YXIgdCxyLG4sbyxzLGksYyx1LGw9W10saD0wLHA9KGU9ZS5yZXBsYWNlKC89L2csXCJcIikpLmxlbmd0aCxmPTAsZD1wPj4zPDwzO2Y8ZDspdD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLHM9YVtlLmNoYXJBdChmKyspXSxpPWFbZS5jaGFyQXQoZisrKV0sYz1hW2UuY2hhckF0KGYrKyldLHU9YVtlLmNoYXJBdChmKyspXSxsW2grK109MjU1Jih0PDwzfHI+Pj4yKSxsW2grK109MjU1JihyPDw2fG48PDF8bz4+PjQpLGxbaCsrXT0yNTUmKG88PDR8cz4+PjEpLGxbaCsrXT0yNTUmKHM8PDd8aTw8MnxjPj4+MyksbFtoKytdPTI1NSYoYzw8NXx1KTt2YXIgZz1wLWQ7cmV0dXJuIDI9PT1nPyh0PWFbZS5jaGFyQXQoZisrKV0scj1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpKTo0PT09Zz8odD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCkpOjU9PT1nPyh0PWFbZS5jaGFyQXQoZisrKV0scj1hW2UuY2hhckF0KGYrKyldLG49YVtlLmNoYXJBdChmKyspXSxvPWFbZS5jaGFyQXQoZisrKV0scz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCksbFtoKytdPTI1NSYobzw8NHxzPj4+MSkpOjc9PT1nJiYodD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLHM9YVtlLmNoYXJBdChmKyspXSxpPWFbZS5jaGFyQXQoZisrKV0sYz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCksbFtoKytdPTI1NSYobzw8NHxzPj4+MSksbFtoKytdPTI1NSYoczw8N3xpPDwyfGM+Pj4zKSksbH0saD1mdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQscixuPVwiXCIsbz1lLmxlbmd0aCxzPTAsaT0wO3M8bzspaWYoKHQ9ZVtzKytdKTw9MTI3KW4rPVN0cmluZy5mcm9tQ2hhckNvZGUodCk7ZWxzZXt0PjE5MSYmdDw9MjIzPyhyPTMxJnQsaT0xKTp0PD0yMzk/KHI9MTUmdCxpPTIpOnQ8PTI0Nz8ocj03JnQsaT0zKTp1KHMsbik7Zm9yKHZhciBhPTA7YTxpOysrYSkoKHQ9ZVtzKytdKTwxMjh8fHQ+MTkxKSYmdShzLG4pLHI8PD02LHIrPTYzJnQ7cj49NTUyOTYmJnI8PTU3MzQzJiZ1KHMsbikscj4xMTE0MTExJiZ1KHMsbikscjw9NjU1MzU/bis9U3RyaW5nLmZyb21DaGFyQ29kZShyKTooci09NjU1MzYsbis9U3RyaW5nLmZyb21DaGFyQ29kZSg1NTI5Nisocj4+MTApKSxuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU2MzIwKygxMDIzJnIpKSl9cmV0dXJuIG59KGwoZSkpO2lmKFwiXCI9PT1lKXJldHVyblwiXCI7aWYoIS9eW0EtWjItNz1dKyQvLnRlc3QoZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlMzIgY2hhcmFjdGVyc1wiKTt2YXIgcixuLG8scyxpLGMsaCxwLGY9XCJcIixkPWUuaW5kZXhPZihcIj1cIik7LTE9PT1kJiYoZD1lLmxlbmd0aCk7Zm9yKHZhciBnPTAseT1kPj4zPDwzO2c8eTspcj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGk9YVtlLmNoYXJBdChnKyspXSxjPWFbZS5jaGFyQXQoZysrKV0saD1hW2UuY2hhckF0KGcrKyldLHA9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihpPDw3fGM8PDJ8aD4+PjMpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoaDw8NXxwKSk7dmFyIG09ZC15O3JldHVybiAyPT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpKTo0PT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGYrPVN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihyPDwzfG4+Pj4yKSkrU3RyaW5nLmZyb21DaGFyQ29kZSgyNTUmKG48PDZ8bzw8MXxzPj4+NCkpKTo1PT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGk9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpKTo3PT09bSYmKHI9YVtlLmNoYXJBdChnKyspXSxuPWFbZS5jaGFyQXQoZysrKV0sbz1hW2UuY2hhckF0KGcrKyldLHM9YVtlLmNoYXJBdChnKyspXSxpPWFbZS5jaGFyQXQoZysrKV0sYz1hW2UuY2hhckF0KGcrKyldLGg9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihpPDw3fGM8PDJ8aD4+PjMpKSksZn0scD17ZW5jb2RlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJzdHJpbmdcIiE9dHlwZW9mIGU7cmV0dXJuIHImJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlciYmKGU9bmV3IFVpbnQ4QXJyYXkoZSkpLHI/ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixvLHMsYT1cIlwiLGM9ZS5sZW5ndGgsdT0wLGw9NSpwYXJzZUludChjLzUpO3U8bDspdD1lW3UrK10scj1lW3UrK10sbj1lW3UrK10sbz1lW3UrK10scz1lW3UrK10sYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVszMSYobzw8M3xzPj4+NSldK2lbMzEmc107dmFyIGg9Yy1sO3JldHVybiAxPT09aD8odD1lW3VdLGErPWlbdD4+PjNdK2lbdDw8MiYzMV0rXCI9PT09PT1cIik6Mj09PWg/KHQ9ZVt1KytdLHI9ZVt1XSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PWg/KHQ9ZVt1KytdLHI9ZVt1KytdLG49ZVt1XSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbbjw8MSYzMV0rXCI9PT1cIik6ND09PWgmJih0PWVbdSsrXSxyPWVbdSsrXSxuPWVbdSsrXSxvPWVbdV0sYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVtvPDwzJjMxXStcIj1cIiksYX0oZSk6dD9mdW5jdGlvbihlKXtmb3IodmFyIHQscixuLG8scyxhPVwiXCIsYz1lLmxlbmd0aCx1PTAsbD01KnBhcnNlSW50KGMvNSk7dTxsOyl0PWUuY2hhckNvZGVBdCh1KyspLHI9ZS5jaGFyQ29kZUF0KHUrKyksbj1lLmNoYXJDb2RlQXQodSsrKSxvPWUuY2hhckNvZGVBdCh1KyspLHM9ZS5jaGFyQ29kZUF0KHUrKyksYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVszMSYobzw8M3xzPj4+NSldK2lbMzEmc107dmFyIGg9Yy1sO3JldHVybiAxPT09aD8odD1lLmNoYXJDb2RlQXQodSksYSs9aVt0Pj4+M10raVt0PDwyJjMxXStcIj09PT09PVwiKToyPT09aD8odD1lLmNoYXJDb2RlQXQodSsrKSxyPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PWg/KHQ9ZS5jaGFyQ29kZUF0KHUrKykscj1lLmNoYXJDb2RlQXQodSsrKSxuPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbbjw8MSYzMV0rXCI9PT1cIik6ND09PWgmJih0PWUuY2hhckNvZGVBdCh1KyspLHI9ZS5jaGFyQ29kZUF0KHUrKyksbj1lLmNoYXJDb2RlQXQodSsrKSxvPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbMzEmKG48PDF8bz4+PjcpXStpW28+Pj4yJjMxXStpW288PDMmMzFdK1wiPVwiKSxhfShlKTpmdW5jdGlvbihlKXt2YXIgdCxyLG4sbyxzLGEsdSxsPSExLGg9XCJcIixwPTAsZj0wLGQ9ZS5sZW5ndGg7aWYoXCJcIj09PWUpcmV0dXJuIGg7ZG97Zm9yKGNbMF09Y1s1XSxjWzFdPWNbNl0sY1syXT1jWzddLHU9ZjtwPGQmJnU8NTsrK3ApKGE9ZS5jaGFyQ29kZUF0KHApKTwxMjg/Y1t1KytdPWE6YTwyMDQ4PyhjW3UrK109MTkyfGE+PjYsY1t1KytdPTEyOHw2MyZhKTphPDU1Mjk2fHxhPj01NzM0ND8oY1t1KytdPTIyNHxhPj4xMixjW3UrK109MTI4fGE+PjYmNjMsY1t1KytdPTEyOHw2MyZhKTooYT02NTUzNisoKDEwMjMmYSk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrcCkpLGNbdSsrXT0yNDB8YT4+MTgsY1t1KytdPTEyOHxhPj4xMiY2MyxjW3UrK109MTI4fGE+PjYmNjMsY1t1KytdPTEyOHw2MyZhKTtmPXUtNSxwPT09ZCYmKytwLHA+ZCYmdTw2JiYobD0hMCksdD1jWzBdLHU+ND8ocj1jWzFdLG49Y1syXSxvPWNbM10scz1jWzRdLGgrPWlbdD4+PjNdK2lbMzEmKHQ8PDJ8cj4+PjYpXStpW3I+Pj4xJjMxXStpWzMxJihyPDw0fG4+Pj40KV0raVszMSYobjw8MXxvPj4+NyldK2lbbz4+PjImMzFdK2lbMzEmKG88PDN8cz4+PjUpXStpWzMxJnNdKToxPT09dT9oKz1pW3Q+Pj4zXStpW3Q8PDImMzFdK1wiPT09PT09XCI6Mj09PXU/KHI9Y1sxXSxoKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PXU/KHI9Y1sxXSxuPWNbMl0saCs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpW248PDEmMzFdK1wiPT09XCIpOihyPWNbMV0sbj1jWzJdLG89Y1szXSxoKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbMzEmKG48PDF8bz4+PjcpXStpW28+Pj4yJjMxXStpW288PDMmMzFdK1wiPVwiKX13aGlsZSghbCk7cmV0dXJuIGh9KGUpfSxkZWNvZGU6aH07aC5hc0J5dGVzPWwsbz9lLmV4cG9ydHM9cDoodC5iYXNlMzI9cCxzJiYodm9pZCAwPT09KG49ZnVuY3Rpb24oKXtyZXR1cm4gcH0uY2FsbChwLHIscCxlKSl8fChlLmV4cG9ydHM9bikpKX0oKX0sNDUyNTooZSx0KT0+e3QucmVhZD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBzLGksYT04Km8tbi0xLGM9KDE8PGEpLTEsdT1jPj4xLGw9LTcsaD1yP28tMTowLHA9cj8tMToxLGY9ZVt0K2hdO2ZvcihoKz1wLHM9ZiYoMTw8LWwpLTEsZj4+PS1sLGwrPWE7bD4wO3M9MjU2KnMrZVt0K2hdLGgrPXAsbC09OCk7Zm9yKGk9cyYoMTw8LWwpLTEscz4+PS1sLGwrPW47bD4wO2k9MjU2KmkrZVt0K2hdLGgrPXAsbC09OCk7aWYoMD09PXMpcz0xLXU7ZWxzZXtpZihzPT09YylyZXR1cm4gaT9OYU46MS8wKihmPy0xOjEpO2krPU1hdGgucG93KDIsbikscy09dX1yZXR1cm4oZj8tMToxKSppKk1hdGgucG93KDIscy1uKX0sdC53cml0ZT1mdW5jdGlvbihlLHQscixuLG8scyl7dmFyIGksYSxjLHU9OCpzLW8tMSxsPSgxPDx1KS0xLGg9bD4+MSxwPTIzPT09bz9NYXRoLnBvdygyLC0yNCktTWF0aC5wb3coMiwtNzcpOjAsZj1uPzA6cy0xLGQ9bj8xOi0xLGc9dDwwfHwwPT09dCYmMS90PDA/MTowO2Zvcih0PU1hdGguYWJzKHQpLGlzTmFOKHQpfHx0PT09MS8wPyhhPWlzTmFOKHQpPzE6MCxpPWwpOihpPU1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjIpLHQqKGM9TWF0aC5wb3coMiwtaSkpPDEmJihpLS0sYyo9MiksKHQrPWkraD49MT9wL2M6cCpNYXRoLnBvdygyLDEtaCkpKmM+PTImJihpKyssYy89MiksaStoPj1sPyhhPTAsaT1sKTppK2g+PTE/KGE9KHQqYy0xKSpNYXRoLnBvdygyLG8pLGkrPWgpOihhPXQqTWF0aC5wb3coMixoLTEpKk1hdGgucG93KDIsbyksaT0wKSk7bz49ODtlW3IrZl09MjU1JmEsZis9ZCxhLz0yNTYsby09OCk7Zm9yKGk9aTw8b3xhLHUrPW87dT4wO2VbcitmXT0yNTUmaSxmKz1kLGkvPTI1Nix1LT04KTtlW3IrZi1kXXw9MTI4Kmd9fSwzNDc3Oihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKT0+e3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzsoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgRVJST1I9XCJpbnB1dCBpcyBpbnZhbGlkIHR5cGVcIixXSU5ET1c9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxyb290PVdJTkRPVz93aW5kb3c6e307cm9vdC5KU19TSEEyNTZfTk9fV0lORE9XJiYoV0lORE9XPSExKTt2YXIgV0VCX1dPUktFUj0hV0lORE9XJiZcIm9iamVjdFwiPT10eXBlb2Ygc2VsZixOT0RFX0pTPSFyb290LkpTX1NIQTI1Nl9OT19OT0RFX0pTJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2VzcyYmcHJvY2Vzcy52ZXJzaW9ucyYmcHJvY2Vzcy52ZXJzaW9ucy5ub2RlO05PREVfSlM/cm9vdD1fX3dlYnBhY2tfcmVxdWlyZV9fLmc6V0VCX1dPUktFUiYmKHJvb3Q9c2VsZik7dmFyIENPTU1PTl9KUz0hcm9vdC5KU19TSEEyNTZfTk9fQ09NTU9OX0pTJiZtb2R1bGUuZXhwb3J0cyxBTUQ9X193ZWJwYWNrX3JlcXVpcmVfXy5hbWRPLEFSUkFZX0JVRkZFUj0hcm9vdC5KU19TSEEyNTZfTk9fQVJSQVlfQlVGRkVSJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXIsSEVYX0NIQVJTPVwiMDEyMzQ1Njc4OWFiY2RlZlwiLnNwbGl0KFwiXCIpLEVYVFJBPVstMjE0NzQ4MzY0OCw4Mzg4NjA4LDMyNzY4LDEyOF0sU0hJRlQ9WzI0LDE2LDgsMF0sSz1bMTExNjM1MjQwOCwxODk5NDQ3NDQxLDMwNDkzMjM0NzEsMzkyMTAwOTU3Myw5NjE5ODcxNjMsMTUwODk3MDk5MywyNDUzNjM1NzQ4LDI4NzA3NjMyMjEsMzYyNDM4MTA4MCwzMTA1OTg0MDEsNjA3MjI1Mjc4LDE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LDYwNDgwNzYyOCw3NzAyNTU5ODMsMTI0OTE1MDEyMiwxNTU1MDgxNjkyLDE5OTYwNjQ5ODYsMjU1NDIyMDg4MiwyODIxODM0MzQ5LDI5NTI5OTY4MDgsMzIxMDMxMzY3MSwzMzM2NTcxODkxLDM1ODQ1Mjg3MTEsMTEzOTI2OTkzLDMzODI0MTg5NSw2NjYzMDcyMDUsNzczNTI5OTEyLDEyOTQ3NTczNzIsMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLDMzNDU3NjQ3NzEsMzUxNjA2NTgxNywzNjAwMzUyODA0LDQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XSxPVVRQVVRfVFlQRVM9W1wiaGV4XCIsXCJhcnJheVwiLFwiZGlnZXN0XCIsXCJhcnJheUJ1ZmZlclwiXSxibG9ja3M9W107IXJvb3QuSlNfU0hBMjU2X05PX05PREVfSlMmJkFycmF5LmlzQXJyYXl8fChBcnJheS5pc0FycmF5PWZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLCFBUlJBWV9CVUZGRVJ8fCFyb290LkpTX1NIQTI1Nl9OT19BUlJBWV9CVUZGRVJfSVNfVklFVyYmQXJyYXlCdWZmZXIuaXNWaWV3fHwoQXJyYXlCdWZmZXIuaXNWaWV3PWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmJ1ZmZlciYmZS5idWZmZXIuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcn0pO3ZhciBjcmVhdGVPdXRwdXRNZXRob2Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBTaGEyNTYodCwhMCkudXBkYXRlKHIpW2VdKCl9fSxjcmVhdGVNZXRob2Q9ZnVuY3Rpb24oZSl7dmFyIHQ9Y3JlYXRlT3V0cHV0TWV0aG9kKFwiaGV4XCIsZSk7Tk9ERV9KUyYmKHQ9bm9kZVdyYXAodCxlKSksdC5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFNoYTI1NihlKX0sdC51cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlKCkudXBkYXRlKGUpfTtmb3IodmFyIHI9MDtyPE9VVFBVVF9UWVBFUy5sZW5ndGg7KytyKXt2YXIgbj1PVVRQVVRfVFlQRVNbcl07dFtuXT1jcmVhdGVPdXRwdXRNZXRob2QobixlKX1yZXR1cm4gdH0sbm9kZVdyYXA9ZnVuY3Rpb24obWV0aG9kLGlzMjI0KXt2YXIgY3J5cHRvPWV2YWwoXCJyZXF1aXJlKCdjcnlwdG8nKVwiKSxCdWZmZXI9ZXZhbChcInJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlclwiKSxhbGdvcml0aG09aXMyMjQ/XCJzaGEyMjRcIjpcInNoYTI1NlwiLG5vZGVNZXRob2Q9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKGFsZ29yaXRobSkudXBkYXRlKGUsXCJ1dGY4XCIpLmRpZ2VzdChcImhleFwiKTtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7cmV0dXJuIGUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlciYmKGU9bmV3IFVpbnQ4QXJyYXkoZSkpLEFycmF5LmlzQXJyYXkoZSl8fEFycmF5QnVmZmVyLmlzVmlldyhlKXx8ZS5jb25zdHJ1Y3Rvcj09PUJ1ZmZlcj9jcnlwdG8uY3JlYXRlSGFzaChhbGdvcml0aG0pLnVwZGF0ZShuZXcgQnVmZmVyKGUpKS5kaWdlc3QoXCJoZXhcIik6bWV0aG9kKGUpfTtyZXR1cm4gbm9kZU1ldGhvZH0sY3JlYXRlSG1hY091dHB1dE1ldGhvZD1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBuZXcgSG1hY1NoYTI1NihyLHQsITApLnVwZGF0ZShuKVtlXSgpfX0sY3JlYXRlSG1hY01ldGhvZD1mdW5jdGlvbihlKXt2YXIgdD1jcmVhdGVIbWFjT3V0cHV0TWV0aG9kKFwiaGV4XCIsZSk7dC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBIbWFjU2hhMjU2KHQsZSl9LHQudXBkYXRlPWZ1bmN0aW9uKGUscil7cmV0dXJuIHQuY3JlYXRlKGUpLnVwZGF0ZShyKX07Zm9yKHZhciByPTA7cjxPVVRQVVRfVFlQRVMubGVuZ3RoOysrcil7dmFyIG49T1VUUFVUX1RZUEVTW3JdO3Rbbl09Y3JlYXRlSG1hY091dHB1dE1ldGhvZChuLGUpfXJldHVybiB0fTtmdW5jdGlvbiBTaGEyNTYoZSx0KXt0PyhibG9ja3NbMF09YmxvY2tzWzE2XT1ibG9ja3NbMV09YmxvY2tzWzJdPWJsb2Nrc1szXT1ibG9ja3NbNF09YmxvY2tzWzVdPWJsb2Nrc1s2XT1ibG9ja3NbN109YmxvY2tzWzhdPWJsb2Nrc1s5XT1ibG9ja3NbMTBdPWJsb2Nrc1sxMV09YmxvY2tzWzEyXT1ibG9ja3NbMTNdPWJsb2Nrc1sxNF09YmxvY2tzWzE1XT0wLHRoaXMuYmxvY2tzPWJsb2Nrcyk6dGhpcy5ibG9ja3M9WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMF0sZT8odGhpcy5oMD0zMjM4MzcxMDMyLHRoaXMuaDE9OTE0MTUwNjYzLHRoaXMuaDI9ODEyNzAyOTk5LHRoaXMuaDM9NDE0NDkxMjY5Nyx0aGlzLmg0PTQyOTA3NzU4NTcsdGhpcy5oNT0xNzUwNjAzMDI1LHRoaXMuaDY9MTY5NDA3NjgzOSx0aGlzLmg3PTMyMDQwNzU0MjgpOih0aGlzLmgwPTE3NzkwMzM3MDMsdGhpcy5oMT0zMTQ0MTM0Mjc3LHRoaXMuaDI9MTAxMzkwNDI0Mix0aGlzLmgzPTI3NzM0ODA3NjIsdGhpcy5oND0xMzU5ODkzMTE5LHRoaXMuaDU9MjYwMDgyMjkyNCx0aGlzLmg2PTUyODczNDYzNSx0aGlzLmg3PTE1NDE0NTkyMjUpLHRoaXMuYmxvY2s9dGhpcy5zdGFydD10aGlzLmJ5dGVzPXRoaXMuaEJ5dGVzPTAsdGhpcy5maW5hbGl6ZWQ9dGhpcy5oYXNoZWQ9ITEsdGhpcy5maXJzdD0hMCx0aGlzLmlzMjI0PWV9ZnVuY3Rpb24gSG1hY1NoYTI1NihlLHQscil7dmFyIG4sbz10eXBlb2YgZTtpZihcInN0cmluZ1wiPT09byl7dmFyIHMsaT1bXSxhPWUubGVuZ3RoLGM9MDtmb3Iobj0wO248YTsrK24pKHM9ZS5jaGFyQ29kZUF0KG4pKTwxMjg/aVtjKytdPXM6czwyMDQ4PyhpW2MrK109MTkyfHM+PjYsaVtjKytdPTEyOHw2MyZzKTpzPDU1Mjk2fHxzPj01NzM0ND8oaVtjKytdPTIyNHxzPj4xMixpW2MrK109MTI4fHM+PjYmNjMsaVtjKytdPTEyOHw2MyZzKToocz02NTUzNisoKDEwMjMmcyk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrbikpLGlbYysrXT0yNDB8cz4+MTgsaVtjKytdPTEyOHxzPj4xMiY2MyxpW2MrK109MTI4fHM+PjYmNjMsaVtjKytdPTEyOHw2MyZzKTtlPWl9ZWxzZXtpZihcIm9iamVjdFwiIT09byl0aHJvdyBuZXcgRXJyb3IoRVJST1IpO2lmKG51bGw9PT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7aWYoQVJSQVlfQlVGRkVSJiZlLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpZT1uZXcgVWludDhBcnJheShlKTtlbHNlIGlmKCEoQXJyYXkuaXNBcnJheShlKXx8QVJSQVlfQlVGRkVSJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihFUlJPUil9ZS5sZW5ndGg+NjQmJihlPW5ldyBTaGEyNTYodCwhMCkudXBkYXRlKGUpLmFycmF5KCkpO3ZhciB1PVtdLGw9W107Zm9yKG49MDtuPDY0Oysrbil7dmFyIGg9ZVtuXXx8MDt1W25dPTkyXmgsbFtuXT01NF5ofVNoYTI1Ni5jYWxsKHRoaXMsdCxyKSx0aGlzLnVwZGF0ZShsKSx0aGlzLm9LZXlQYWQ9dSx0aGlzLmlubmVyPSEwLHRoaXMuc2hhcmVkTWVtb3J5PXJ9U2hhMjU2LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuZmluYWxpemVkKXt2YXIgdCxyPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1yKXtpZihcIm9iamVjdFwiIT09cil0aHJvdyBuZXcgRXJyb3IoRVJST1IpO2lmKG51bGw9PT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7aWYoQVJSQVlfQlVGRkVSJiZlLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpZT1uZXcgVWludDhBcnJheShlKTtlbHNlIGlmKCEoQXJyYXkuaXNBcnJheShlKXx8QVJSQVlfQlVGRkVSJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihFUlJPUik7dD0hMH1mb3IodmFyIG4sbyxzPTAsaT1lLmxlbmd0aCxhPXRoaXMuYmxvY2tzO3M8aTspe2lmKHRoaXMuaGFzaGVkJiYodGhpcy5oYXNoZWQ9ITEsYVswXT10aGlzLmJsb2NrLGFbMTZdPWFbMV09YVsyXT1hWzNdPWFbNF09YVs1XT1hWzZdPWFbN109YVs4XT1hWzldPWFbMTBdPWFbMTFdPWFbMTJdPWFbMTNdPWFbMTRdPWFbMTVdPTApLHQpZm9yKG89dGhpcy5zdGFydDtzPGkmJm88NjQ7KytzKWFbbz4+Ml18PWVbc108PFNISUZUWzMmbysrXTtlbHNlIGZvcihvPXRoaXMuc3RhcnQ7czxpJiZvPDY0Oysrcykobj1lLmNoYXJDb2RlQXQocykpPDEyOD9hW28+PjJdfD1uPDxTSElGVFszJm8rK106bjwyMDQ4PyhhW28+PjJdfD0oMTkyfG4+PjYpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKTpuPDU1Mjk2fHxuPj01NzM0ND8oYVtvPj4yXXw9KDIyNHxuPj4xMik8PFNISUZUWzMmbysrXSxhW28+PjJdfD0oMTI4fG4+PjYmNjMpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKToobj02NTUzNisoKDEwMjMmbik8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrcykpLGFbbz4+Ml18PSgyNDB8bj4+MTgpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHxuPj4xMiY2Myk8PFNISUZUWzMmbysrXSxhW28+PjJdfD0oMTI4fG4+PjYmNjMpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKTt0aGlzLmxhc3RCeXRlSW5kZXg9byx0aGlzLmJ5dGVzKz1vLXRoaXMuc3RhcnQsbz49NjQ/KHRoaXMuYmxvY2s9YVsxNl0sdGhpcy5zdGFydD1vLTY0LHRoaXMuaGFzaCgpLHRoaXMuaGFzaGVkPSEwKTp0aGlzLnN0YXJ0PW99cmV0dXJuIHRoaXMuYnl0ZXM+NDI5NDk2NzI5NSYmKHRoaXMuaEJ5dGVzKz10aGlzLmJ5dGVzLzQyOTQ5NjcyOTY8PDAsdGhpcy5ieXRlcz10aGlzLmJ5dGVzJTQyOTQ5NjcyOTYpLHRoaXN9fSxTaGEyNTYucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYoIXRoaXMuZmluYWxpemVkKXt0aGlzLmZpbmFsaXplZD0hMDt2YXIgZT10aGlzLmJsb2Nrcyx0PXRoaXMubGFzdEJ5dGVJbmRleDtlWzE2XT10aGlzLmJsb2NrLGVbdD4+Ml18PUVYVFJBWzMmdF0sdGhpcy5ibG9jaz1lWzE2XSx0Pj01NiYmKHRoaXMuaGFzaGVkfHx0aGlzLmhhc2goKSxlWzBdPXRoaXMuYmxvY2ssZVsxNl09ZVsxXT1lWzJdPWVbM109ZVs0XT1lWzVdPWVbNl09ZVs3XT1lWzhdPWVbOV09ZVsxMF09ZVsxMV09ZVsxMl09ZVsxM109ZVsxNF09ZVsxNV09MCksZVsxNF09dGhpcy5oQnl0ZXM8PDN8dGhpcy5ieXRlcz4+PjI5LGVbMTVdPXRoaXMuYnl0ZXM8PDMsdGhpcy5oYXNoKCl9fSxTaGEyNTYucHJvdG90eXBlLmhhc2g9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbixvLHMsaSxhLGMsdT10aGlzLmgwLGw9dGhpcy5oMSxoPXRoaXMuaDIscD10aGlzLmgzLGY9dGhpcy5oNCxkPXRoaXMuaDUsZz10aGlzLmg2LHk9dGhpcy5oNyxtPXRoaXMuYmxvY2tzO2ZvcihlPTE2O2U8NjQ7KytlKXQ9KChvPW1bZS0xNV0pPj4+N3xvPDwyNSleKG8+Pj4xOHxvPDwxNClebz4+PjMscj0oKG89bVtlLTJdKT4+PjE3fG88PDE1KV4obz4+PjE5fG88PDEzKV5vPj4+MTAsbVtlXT1tW2UtMTZdK3QrbVtlLTddK3I8PDA7Zm9yKGM9bCZoLGU9MDtlPDY0O2UrPTQpdGhpcy5maXJzdD8odGhpcy5pczIyND8ocz0zMDAwMzIseT0obz1tWzBdLTE0MTMyNTc4MTkpLTE1MDA1NDU5OTw8MCxwPW8rMjQxNzcwNzc8PDApOihzPTcwNDc1MTEwOSx5PShvPW1bMF0tMjEwMjQ0MjQ4KS0xNTIxNDg2NTM0PDwwLHA9bysxNDM2OTQ1NjU8PDApLHRoaXMuZmlyc3Q9ITEpOih0PSh1Pj4+Mnx1PDwzMCleKHU+Pj4xM3x1PDwxOSleKHU+Pj4yMnx1PDwxMCksbj0ocz11JmwpXnUmaF5jLHk9cCsobz15KyhyPShmPj4+NnxmPDwyNileKGY+Pj4xMXxmPDwyMSleKGY+Pj4yNXxmPDw3KSkrKGYmZF5+ZiZnKStLW2VdK21bZV0pPDwwLHA9bysodCtuKTw8MCksdD0ocD4+PjJ8cDw8MzApXihwPj4+MTN8cDw8MTkpXihwPj4+MjJ8cDw8MTApLG49KGk9cCZ1KV5wJmxecyxnPWgrKG89Zysocj0oeT4+PjZ8eTw8MjYpXih5Pj4+MTF8eTw8MjEpXih5Pj4+MjV8eTw8NykpKyh5JmZefnkmZCkrS1tlKzFdK21bZSsxXSk8PDAsdD0oKGg9bysodCtuKTw8MCk+Pj4yfGg8PDMwKV4oaD4+PjEzfGg8PDE5KV4oaD4+PjIyfGg8PDEwKSxuPShhPWgmcCleaCZ1XmksZD1sKyhvPWQrKHI9KGc+Pj42fGc8PDI2KV4oZz4+PjExfGc8PDIxKV4oZz4+PjI1fGc8PDcpKSsoZyZ5Xn5nJmYpK0tbZSsyXSttW2UrMl0pPDwwLHQ9KChsPW8rKHQrbik8PDApPj4+MnxsPDwzMCleKGw+Pj4xM3xsPDwxOSleKGw+Pj4yMnxsPDwxMCksbj0oYz1sJmgpXmwmcF5hLGY9dSsobz1mKyhyPShkPj4+NnxkPDwyNileKGQ+Pj4xMXxkPDwyMSleKGQ+Pj4yNXxkPDw3KSkrKGQmZ15+ZCZ5KStLW2UrM10rbVtlKzNdKTw8MCx1PW8rKHQrbik8PDA7dGhpcy5oMD10aGlzLmgwK3U8PDAsdGhpcy5oMT10aGlzLmgxK2w8PDAsdGhpcy5oMj10aGlzLmgyK2g8PDAsdGhpcy5oMz10aGlzLmgzK3A8PDAsdGhpcy5oND10aGlzLmg0K2Y8PDAsdGhpcy5oNT10aGlzLmg1K2Q8PDAsdGhpcy5oNj10aGlzLmg2K2c8PDAsdGhpcy5oNz10aGlzLmg3K3k8PDB9LFNoYTI1Ni5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDAsdD10aGlzLmgxLHI9dGhpcy5oMixuPXRoaXMuaDMsbz10aGlzLmg0LHM9dGhpcy5oNSxpPXRoaXMuaDYsYT10aGlzLmg3LGM9SEVYX0NIQVJTW2U+PjI4JjE1XStIRVhfQ0hBUlNbZT4+MjQmMTVdK0hFWF9DSEFSU1tlPj4yMCYxNV0rSEVYX0NIQVJTW2U+PjE2JjE1XStIRVhfQ0hBUlNbZT4+MTImMTVdK0hFWF9DSEFSU1tlPj44JjE1XStIRVhfQ0hBUlNbZT4+NCYxNV0rSEVYX0NIQVJTWzE1JmVdK0hFWF9DSEFSU1t0Pj4yOCYxNV0rSEVYX0NIQVJTW3Q+PjI0JjE1XStIRVhfQ0hBUlNbdD4+MjAmMTVdK0hFWF9DSEFSU1t0Pj4xNiYxNV0rSEVYX0NIQVJTW3Q+PjEyJjE1XStIRVhfQ0hBUlNbdD4+OCYxNV0rSEVYX0NIQVJTW3Q+PjQmMTVdK0hFWF9DSEFSU1sxNSZ0XStIRVhfQ0hBUlNbcj4+MjgmMTVdK0hFWF9DSEFSU1tyPj4yNCYxNV0rSEVYX0NIQVJTW3I+PjIwJjE1XStIRVhfQ0hBUlNbcj4+MTYmMTVdK0hFWF9DSEFSU1tyPj4xMiYxNV0rSEVYX0NIQVJTW3I+PjgmMTVdK0hFWF9DSEFSU1tyPj40JjE1XStIRVhfQ0hBUlNbMTUmcl0rSEVYX0NIQVJTW24+PjI4JjE1XStIRVhfQ0hBUlNbbj4+MjQmMTVdK0hFWF9DSEFSU1tuPj4yMCYxNV0rSEVYX0NIQVJTW24+PjE2JjE1XStIRVhfQ0hBUlNbbj4+MTImMTVdK0hFWF9DSEFSU1tuPj44JjE1XStIRVhfQ0hBUlNbbj4+NCYxNV0rSEVYX0NIQVJTWzE1Jm5dK0hFWF9DSEFSU1tvPj4yOCYxNV0rSEVYX0NIQVJTW28+PjI0JjE1XStIRVhfQ0hBUlNbbz4+MjAmMTVdK0hFWF9DSEFSU1tvPj4xNiYxNV0rSEVYX0NIQVJTW28+PjEyJjE1XStIRVhfQ0hBUlNbbz4+OCYxNV0rSEVYX0NIQVJTW28+PjQmMTVdK0hFWF9DSEFSU1sxNSZvXStIRVhfQ0hBUlNbcz4+MjgmMTVdK0hFWF9DSEFSU1tzPj4yNCYxNV0rSEVYX0NIQVJTW3M+PjIwJjE1XStIRVhfQ0hBUlNbcz4+MTYmMTVdK0hFWF9DSEFSU1tzPj4xMiYxNV0rSEVYX0NIQVJTW3M+PjgmMTVdK0hFWF9DSEFSU1tzPj40JjE1XStIRVhfQ0hBUlNbMTUmc10rSEVYX0NIQVJTW2k+PjI4JjE1XStIRVhfQ0hBUlNbaT4+MjQmMTVdK0hFWF9DSEFSU1tpPj4yMCYxNV0rSEVYX0NIQVJTW2k+PjE2JjE1XStIRVhfQ0hBUlNbaT4+MTImMTVdK0hFWF9DSEFSU1tpPj44JjE1XStIRVhfQ0hBUlNbaT4+NCYxNV0rSEVYX0NIQVJTWzE1JmldO3JldHVybiB0aGlzLmlzMjI0fHwoYys9SEVYX0NIQVJTW2E+PjI4JjE1XStIRVhfQ0hBUlNbYT4+MjQmMTVdK0hFWF9DSEFSU1thPj4yMCYxNV0rSEVYX0NIQVJTW2E+PjE2JjE1XStIRVhfQ0hBUlNbYT4+MTImMTVdK0hFWF9DSEFSU1thPj44JjE1XStIRVhfQ0hBUlNbYT4+NCYxNV0rSEVYX0NIQVJTWzE1JmFdKSxjfSxTaGEyNTYucHJvdG90eXBlLnRvU3RyaW5nPVNoYTI1Ni5wcm90b3R5cGUuaGV4LFNoYTI1Ni5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDAsdD10aGlzLmgxLHI9dGhpcy5oMixuPXRoaXMuaDMsbz10aGlzLmg0LHM9dGhpcy5oNSxpPXRoaXMuaDYsYT10aGlzLmg3LGM9W2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmUsdD4+MjQmMjU1LHQ+PjE2JjI1NSx0Pj44JjI1NSwyNTUmdCxyPj4yNCYyNTUscj4+MTYmMjU1LHI+PjgmMjU1LDI1NSZyLG4+PjI0JjI1NSxuPj4xNiYyNTUsbj4+OCYyNTUsMjU1Jm4sbz4+MjQmMjU1LG8+PjE2JjI1NSxvPj44JjI1NSwyNTUmbyxzPj4yNCYyNTUscz4+MTYmMjU1LHM+PjgmMjU1LDI1NSZzLGk+PjI0JjI1NSxpPj4xNiYyNTUsaT4+OCYyNTUsMjU1JmldO3JldHVybiB0aGlzLmlzMjI0fHxjLnB1c2goYT4+MjQmMjU1LGE+PjE2JjI1NSxhPj44JjI1NSwyNTUmYSksY30sU2hhMjU2LnByb3RvdHlwZS5hcnJheT1TaGEyNTYucHJvdG90eXBlLmRpZ2VzdCxTaGEyNTYucHJvdG90eXBlLmFycmF5QnVmZmVyPWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPW5ldyBBcnJheUJ1ZmZlcih0aGlzLmlzMjI0PzI4OjMyKSx0PW5ldyBEYXRhVmlldyhlKTtyZXR1cm4gdC5zZXRVaW50MzIoMCx0aGlzLmgwKSx0LnNldFVpbnQzMig0LHRoaXMuaDEpLHQuc2V0VWludDMyKDgsdGhpcy5oMiksdC5zZXRVaW50MzIoMTIsdGhpcy5oMyksdC5zZXRVaW50MzIoMTYsdGhpcy5oNCksdC5zZXRVaW50MzIoMjAsdGhpcy5oNSksdC5zZXRVaW50MzIoMjQsdGhpcy5oNiksdGhpcy5pczIyNHx8dC5zZXRVaW50MzIoMjgsdGhpcy5oNyksZX0sSG1hY1NoYTI1Ni5wcm90b3R5cGU9bmV3IFNoYTI1NixIbWFjU2hhMjU2LnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKFNoYTI1Ni5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKSx0aGlzLmlubmVyKXt0aGlzLmlubmVyPSExO3ZhciBlPXRoaXMuYXJyYXkoKTtTaGEyNTYuY2FsbCh0aGlzLHRoaXMuaXMyMjQsdGhpcy5zaGFyZWRNZW1vcnkpLHRoaXMudXBkYXRlKHRoaXMub0tleVBhZCksdGhpcy51cGRhdGUoZSksU2hhMjU2LnByb3RvdHlwZS5maW5hbGl6ZS5jYWxsKHRoaXMpfX07dmFyIGV4cG9ydHM9Y3JlYXRlTWV0aG9kKCk7ZXhwb3J0cy5zaGEyNTY9ZXhwb3J0cyxleHBvcnRzLnNoYTIyND1jcmVhdGVNZXRob2QoITApLGV4cG9ydHMuc2hhMjU2LmhtYWM9Y3JlYXRlSG1hY01ldGhvZCgpLGV4cG9ydHMuc2hhMjI0LmhtYWM9Y3JlYXRlSG1hY01ldGhvZCghMCksQ09NTU9OX0pTP21vZHVsZS5leHBvcnRzPWV4cG9ydHM6KHJvb3Quc2hhMjU2PWV4cG9ydHMuc2hhMjU2LHJvb3Quc2hhMjI0PWV4cG9ydHMuc2hhMjI0LEFNRCYmKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHN9LmNhbGwoZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fLGV4cG9ydHMsbW9kdWxlKSx2b2lkIDA9PT1fX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfX3x8KG1vZHVsZS5leHBvcnRzPV9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSkpfSkoKX0sNTgzOihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgbz1cImlucHV0IGlzIGludmFsaWQgdHlwZVwiLHM9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxpPXM/d2luZG93Ont9O2kuSlNfU0hBM19OT19XSU5ET1cmJihzPSExKTt2YXIgYT0hcyYmXCJvYmplY3RcIj09dHlwZW9mIHNlbGY7IWkuSlNfU0hBM19OT19OT0RFX0pTJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2VzcyYmcHJvY2Vzcy52ZXJzaW9ucyYmcHJvY2Vzcy52ZXJzaW9ucy5ub2RlP2k9ci5nOmEmJihpPXNlbGYpO3ZhciBjPSFpLkpTX1NIQTNfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMsdT1yLmFtZE8sbD0haS5KU19TSEEzX05PX0FSUkFZX0JVRkZFUiYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyLGg9XCIwMTIzNDU2Nzg5YWJjZGVmXCIuc3BsaXQoXCJcIikscD1bNCwxMDI0LDI2MjE0NCw2NzEwODg2NF0sZj1bMCw4LDE2LDI0XSxkPVsxLDAsMzI4OTgsMCwzMjkwNiwyMTQ3NDgzNjQ4LDIxNDc1MTY0MTYsMjE0NzQ4MzY0OCwzMjkwNywwLDIxNDc0ODM2NDksMCwyMTQ3NTE2NTQ1LDIxNDc0ODM2NDgsMzI3NzcsMjE0NzQ4MzY0OCwxMzgsMCwxMzYsMCwyMTQ3NTE2NDI1LDAsMjE0NzQ4MzY1OCwwLDIxNDc1MTY1NTUsMCwxMzksMjE0NzQ4MzY0OCwzMjkwNSwyMTQ3NDgzNjQ4LDMyNzcxLDIxNDc0ODM2NDgsMzI3NzAsMjE0NzQ4MzY0OCwxMjgsMjE0NzQ4MzY0OCwzMjc3OCwwLDIxNDc0ODM2NTgsMjE0NzQ4MzY0OCwyMTQ3NTE2NTQ1LDIxNDc0ODM2NDgsMzI4OTYsMjE0NzQ4MzY0OCwyMTQ3NDgzNjQ5LDAsMjE0NzUxNjQyNCwyMTQ3NDgzNjQ4XSxnPVsyMjQsMjU2LDM4NCw1MTJdLHk9WzEyOCwyNTZdLG09W1wiaGV4XCIsXCJidWZmZXJcIixcImFycmF5QnVmZmVyXCIsXCJhcnJheVwiLFwiZGlnZXN0XCJdLGI9ezEyODoxNjgsMjU2OjEzNn07IWkuSlNfU0hBM19OT19OT0RFX0pTJiZBcnJheS5pc0FycmF5fHwoQXJyYXkuaXNBcnJheT1mdW5jdGlvbihlKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9KSwhbHx8IWkuSlNfU0hBM19OT19BUlJBWV9CVUZGRVJfSVNfVklFVyYmQXJyYXlCdWZmZXIuaXNWaWV3fHwoQXJyYXlCdWZmZXIuaXNWaWV3PWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmJ1ZmZlciYmZS5idWZmZXIuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcn0pO2Zvcih2YXIgQT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBuZXcgRChlLHQsZSkudXBkYXRlKG4pW3JdKCl9fSx3PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24obixvKXtyZXR1cm4gbmV3IEQoZSx0LG8pLnVwZGF0ZShuKVtyXSgpfX0sdj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGZ1bmN0aW9uKHQsbixvLHMpe3JldHVybiBfW1wiY3NoYWtlXCIrZV0udXBkYXRlKHQsbixvLHMpW3JdKCl9fSxTPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24odCxuLG8scyl7cmV0dXJuIF9bXCJrbWFjXCIrZV0udXBkYXRlKHQsbixvLHMpW3JdKCl9fSx4PWZ1bmN0aW9uKGUsdCxyLG4pe2Zvcih2YXIgbz0wO288bS5sZW5ndGg7KytvKXt2YXIgcz1tW29dO2Vbc109dChyLG4scyl9cmV0dXJuIGV9LEU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1BKGUsdCxcImhleFwiKTtyZXR1cm4gci5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoZSx0LGUpfSxyLnVwZGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gci5jcmVhdGUoKS51cGRhdGUoZSl9LHgocixBLGUsdCl9LFQ9W3tuYW1lOlwia2VjY2FrXCIscGFkZGluZzpbMSwyNTYsNjU1MzYsMTY3NzcyMTZdLGJpdHM6ZyxjcmVhdGVNZXRob2Q6RX0se25hbWU6XCJzaGEzXCIscGFkZGluZzpbNiwxNTM2LDM5MzIxNiwxMDA2NjMyOTZdLGJpdHM6ZyxjcmVhdGVNZXRob2Q6RX0se25hbWU6XCJzaGFrZVwiLHBhZGRpbmc6WzMxLDc5MzYsMjAzMTYxNiw1MjAwOTM2OTZdLGJpdHM6eSxjcmVhdGVNZXRob2Q6ZnVuY3Rpb24oZSx0KXt2YXIgcj13KGUsdCxcImhleFwiKTtyZXR1cm4gci5jcmVhdGU9ZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBEKGUsdCxyKX0sci51cGRhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jcmVhdGUodCkudXBkYXRlKGUpfSx4KHIsdyxlLHQpfX0se25hbWU6XCJjc2hha2VcIixwYWRkaW5nOnAsYml0czp5LGNyZWF0ZU1ldGhvZDpmdW5jdGlvbihlLHQpe3ZhciByPWJbZV0sbj12KGUsMCxcImhleFwiKTtyZXR1cm4gbi5jcmVhdGU9ZnVuY3Rpb24obixvLHMpe3JldHVybiBvfHxzP25ldyBEKGUsdCxuKS5ieXRlcGFkKFtvLHNdLHIpOl9bXCJzaGFrZVwiK2VdLmNyZWF0ZShuKX0sbi51cGRhdGU9ZnVuY3Rpb24oZSx0LHIsbyl7cmV0dXJuIG4uY3JlYXRlKHQscixvKS51cGRhdGUoZSl9LHgobix2LGUsdCl9fSx7bmFtZTpcImttYWNcIixwYWRkaW5nOnAsYml0czp5LGNyZWF0ZU1ldGhvZDpmdW5jdGlvbihlLHQpe3ZhciByPWJbZV0sbj1TKGUsMCxcImhleFwiKTtyZXR1cm4gbi5jcmVhdGU9ZnVuY3Rpb24obixvLHMpe3JldHVybiBuZXcgTihlLHQsbykuYnl0ZXBhZChbXCJLTUFDXCIsc10scikuYnl0ZXBhZChbbl0scil9LG4udXBkYXRlPWZ1bmN0aW9uKGUsdCxyLG8pe3JldHVybiBuLmNyZWF0ZShlLHIsbykudXBkYXRlKHQpfSx4KG4sUyxlLHQpfX1dLF89e30sQj1bXSxVPTA7VTxULmxlbmd0aDsrK1UpZm9yKHZhciBrPVRbVV0sST1rLmJpdHMsQz0wO0M8SS5sZW5ndGg7KytDKXt2YXIgUj1rLm5hbWUrXCJfXCIrSVtDXTtpZihCLnB1c2goUiksX1tSXT1rLmNyZWF0ZU1ldGhvZChJW0NdLGsucGFkZGluZyksXCJzaGEzXCIhPT1rLm5hbWUpe3ZhciBPPWsubmFtZStJW0NdO0IucHVzaChPKSxfW09dPV9bUl19fWZ1bmN0aW9uIEQoZSx0LHIpe3RoaXMuYmxvY2tzPVtdLHRoaXMucz1bXSx0aGlzLnBhZGRpbmc9dCx0aGlzLm91dHB1dEJpdHM9cix0aGlzLnJlc2V0PSEwLHRoaXMuZmluYWxpemVkPSExLHRoaXMuYmxvY2s9MCx0aGlzLnN0YXJ0PTAsdGhpcy5ibG9ja0NvdW50PTE2MDAtKGU8PDEpPj41LHRoaXMuYnl0ZUNvdW50PXRoaXMuYmxvY2tDb3VudDw8Mix0aGlzLm91dHB1dEJsb2Nrcz1yPj41LHRoaXMuZXh0cmFCeXRlcz0oMzEmcik+PjM7Zm9yKHZhciBuPTA7bjw1MDsrK24pdGhpcy5zW25dPTB9ZnVuY3Rpb24gTihlLHQscil7RC5jYWxsKHRoaXMsZSx0LHIpfUQucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJmaW5hbGl6ZSBhbHJlYWR5IGNhbGxlZFwiKTt2YXIgdCxyPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1yKXtpZihcIm9iamVjdFwiIT09cil0aHJvdyBuZXcgRXJyb3Iobyk7aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKG8pO2lmKGwmJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcillPW5ldyBVaW50OEFycmF5KGUpO2Vsc2UgaWYoIShBcnJheS5pc0FycmF5KGUpfHxsJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihvKTt0PSEwfWZvcih2YXIgbixzLGk9dGhpcy5ibG9ja3MsYT10aGlzLmJ5dGVDb3VudCxjPWUubGVuZ3RoLHU9dGhpcy5ibG9ja0NvdW50LGg9MCxwPXRoaXMucztoPGM7KXtpZih0aGlzLnJlc2V0KWZvcih0aGlzLnJlc2V0PSExLGlbMF09dGhpcy5ibG9jayxuPTE7bjx1KzE7KytuKWlbbl09MDtpZih0KWZvcihuPXRoaXMuc3RhcnQ7aDxjJiZuPGE7KytoKWlbbj4+Ml18PWVbaF08PGZbMyZuKytdO2Vsc2UgZm9yKG49dGhpcy5zdGFydDtoPGMmJm48YTsrK2gpKHM9ZS5jaGFyQ29kZUF0KGgpKTwxMjg/aVtuPj4yXXw9czw8ZlszJm4rK106czwyMDQ4PyhpW24+PjJdfD0oMTkyfHM+PjYpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fDYzJnMpPDxmWzMmbisrXSk6czw1NTI5Nnx8cz49NTczNDQ/KGlbbj4+Ml18PSgyMjR8cz4+MTIpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fHM+PjYmNjMpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fDYzJnMpPDxmWzMmbisrXSk6KHM9NjU1MzYrKCgxMDIzJnMpPDwxMHwxMDIzJmUuY2hhckNvZGVBdCgrK2gpKSxpW24+PjJdfD0oMjQwfHM+PjE4KTw8ZlszJm4rK10saVtuPj4yXXw9KDEyOHxzPj4xMiY2Myk8PGZbMyZuKytdLGlbbj4+Ml18PSgxMjh8cz4+NiY2Myk8PGZbMyZuKytdLGlbbj4+Ml18PSgxMjh8NjMmcyk8PGZbMyZuKytdKTtpZih0aGlzLmxhc3RCeXRlSW5kZXg9bixuPj1hKXtmb3IodGhpcy5zdGFydD1uLWEsdGhpcy5ibG9jaz1pW3VdLG49MDtuPHU7KytuKXBbbl1ePWlbbl07UChwKSx0aGlzLnJlc2V0PSEwfWVsc2UgdGhpcy5zdGFydD1ufXJldHVybiB0aGlzfSxELnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oZSx0KXt2YXIgcj0yNTUmZSxuPTEsbz1bcl07Zm9yKHI9MjU1JihlPj49OCk7cj4wOylvLnVuc2hpZnQocikscj0yNTUmKGU+Pj04KSwrK247cmV0dXJuIHQ/by5wdXNoKG4pOm8udW5zaGlmdChuKSx0aGlzLnVwZGF0ZShvKSxvLmxlbmd0aH0sRC5wcm90b3R5cGUuZW5jb2RlU3RyaW5nPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dHlwZW9mIGU7aWYoXCJzdHJpbmdcIiE9PXIpe2lmKFwib2JqZWN0XCIhPT1yKXRocm93IG5ldyBFcnJvcihvKTtpZihudWxsPT09ZSl0aHJvdyBuZXcgRXJyb3Iobyk7aWYobCYmZS5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyKWU9bmV3IFVpbnQ4QXJyYXkoZSk7ZWxzZSBpZighKEFycmF5LmlzQXJyYXkoZSl8fGwmJkFycmF5QnVmZmVyLmlzVmlldyhlKSkpdGhyb3cgbmV3IEVycm9yKG8pO3Q9ITB9dmFyIG49MCxzPWUubGVuZ3RoO2lmKHQpbj1zO2Vsc2UgZm9yKHZhciBpPTA7aTxlLmxlbmd0aDsrK2kpe3ZhciBhPWUuY2hhckNvZGVBdChpKTthPDEyOD9uKz0xOmE8MjA0OD9uKz0yOmE8NTUyOTZ8fGE+PTU3MzQ0P24rPTM6KGE9NjU1MzYrKCgxMDIzJmEpPDwxMHwxMDIzJmUuY2hhckNvZGVBdCgrK2kpKSxuKz00KX1yZXR1cm4gbis9dGhpcy5lbmNvZGUoOCpuKSx0aGlzLnVwZGF0ZShlKSxufSxELnByb3RvdHlwZS5ieXRlcGFkPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXRoaXMuZW5jb2RlKHQpLG49MDtuPGUubGVuZ3RoOysrbilyKz10aGlzLmVuY29kZVN0cmluZyhlW25dKTt2YXIgbz10LXIldCxzPVtdO3JldHVybiBzLmxlbmd0aD1vLHRoaXMudXBkYXRlKHMpLHRoaXN9LEQucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYoIXRoaXMuZmluYWxpemVkKXt0aGlzLmZpbmFsaXplZD0hMDt2YXIgZT10aGlzLmJsb2Nrcyx0PXRoaXMubGFzdEJ5dGVJbmRleCxyPXRoaXMuYmxvY2tDb3VudCxuPXRoaXMucztpZihlW3Q+PjJdfD10aGlzLnBhZGRpbmdbMyZ0XSx0aGlzLmxhc3RCeXRlSW5kZXg9PT10aGlzLmJ5dGVDb3VudClmb3IoZVswXT1lW3JdLHQ9MTt0PHIrMTsrK3QpZVt0XT0wO2ZvcihlW3ItMV18PTIxNDc0ODM2NDgsdD0wO3Q8cjsrK3Qpblt0XV49ZVt0XTtQKG4pfX0sRC5wcm90b3R5cGUudG9TdHJpbmc9RC5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO2Zvcih2YXIgZSx0PXRoaXMuYmxvY2tDb3VudCxyPXRoaXMucyxuPXRoaXMub3V0cHV0QmxvY2tzLG89dGhpcy5leHRyYUJ5dGVzLHM9MCxpPTAsYT1cIlwiO2k8bjspe2ZvcihzPTA7czx0JiZpPG47KytzLCsraSllPXJbc10sYSs9aFtlPj40JjE1XStoWzE1JmVdK2hbZT4+MTImMTVdK2hbZT4+OCYxNV0raFtlPj4yMCYxNV0raFtlPj4xNiYxNV0raFtlPj4yOCYxNV0raFtlPj4yNCYxNV07aSV0PT0wJiYoUChyKSxzPTApfXJldHVybiBvJiYoZT1yW3NdLGErPWhbZT4+NCYxNV0raFsxNSZlXSxvPjEmJihhKz1oW2U+PjEyJjE1XStoW2U+PjgmMTVdKSxvPjImJihhKz1oW2U+PjIwJjE1XStoW2U+PjE2JjE1XSkpLGF9LEQucHJvdG90eXBlLmFycmF5QnVmZmVyPWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlLHQ9dGhpcy5ibG9ja0NvdW50LHI9dGhpcy5zLG49dGhpcy5vdXRwdXRCbG9ja3Msbz10aGlzLmV4dHJhQnl0ZXMscz0wLGk9MCxhPXRoaXMub3V0cHV0Qml0cz4+MztlPW8/bmV3IEFycmF5QnVmZmVyKG4rMTw8Mik6bmV3IEFycmF5QnVmZmVyKGEpO2Zvcih2YXIgYz1uZXcgVWludDMyQXJyYXkoZSk7aTxuOyl7Zm9yKHM9MDtzPHQmJmk8bjsrK3MsKytpKWNbaV09cltzXTtpJXQ9PTAmJlAocil9cmV0dXJuIG8mJihjW3NdPXJbc10sZT1lLnNsaWNlKDAsYSkpLGV9LEQucHJvdG90eXBlLmJ1ZmZlcj1ELnByb3RvdHlwZS5hcnJheUJ1ZmZlcixELnByb3RvdHlwZS5kaWdlc3Q9RC5wcm90b3R5cGUuYXJyYXk9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7Zm9yKHZhciBlLHQscj10aGlzLmJsb2NrQ291bnQsbj10aGlzLnMsbz10aGlzLm91dHB1dEJsb2NrcyxzPXRoaXMuZXh0cmFCeXRlcyxpPTAsYT0wLGM9W107YTxvOyl7Zm9yKGk9MDtpPHImJmE8bzsrK2ksKythKWU9YTw8Mix0PW5baV0sY1tlXT0yNTUmdCxjW2UrMV09dD4+OCYyNTUsY1tlKzJdPXQ+PjE2JjI1NSxjW2UrM109dD4+MjQmMjU1O2Elcj09MCYmUChuKX1yZXR1cm4gcyYmKGU9YTw8Mix0PW5baV0sY1tlXT0yNTUmdCxzPjEmJihjW2UrMV09dD4+OCYyNTUpLHM+MiYmKGNbZSsyXT10Pj4xNiYyNTUpKSxjfSxOLnByb3RvdHlwZT1uZXcgRCxOLnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVuY29kZSh0aGlzLm91dHB1dEJpdHMsITApLEQucHJvdG90eXBlLmZpbmFsaXplLmNhbGwodGhpcyl9O3ZhciBQPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixvLHMsaSxhLGMsdSxsLGgscCxmLGcseSxtLGIsQSx3LHYsUyx4LEUsVCxfLEIsVSxrLEksQyxSLE8sRCxOLFAsTCxGLHosaixNLEgsRyxLLHEsJCxWLFcsWCxZLEosUSxaLGVlLHRlLHJlLG5lLG9lLHNlLGllLGFlLGNlLHVlLGxlO2ZvcihuPTA7bjw0ODtuKz0yKW89ZVswXV5lWzEwXV5lWzIwXV5lWzMwXV5lWzQwXSxzPWVbMV1eZVsxMV1eZVsyMV1eZVszMV1eZVs0MV0saT1lWzJdXmVbMTJdXmVbMjJdXmVbMzJdXmVbNDJdLGE9ZVszXV5lWzEzXV5lWzIzXV5lWzMzXV5lWzQzXSxjPWVbNF1eZVsxNF1eZVsyNF1eZVszNF1eZVs0NF0sdT1lWzVdXmVbMTVdXmVbMjVdXmVbMzVdXmVbNDVdLGw9ZVs2XV5lWzE2XV5lWzI2XV5lWzM2XV5lWzQ2XSxoPWVbN11eZVsxN11eZVsyN11eZVszN11eZVs0N10sdD0ocD1lWzhdXmVbMThdXmVbMjhdXmVbMzhdXmVbNDhdKV4oaTw8MXxhPj4+MzEpLHI9KGY9ZVs5XV5lWzE5XV5lWzI5XV5lWzM5XV5lWzQ5XSleKGE8PDF8aT4+PjMxKSxlWzBdXj10LGVbMV1ePXIsZVsxMF1ePXQsZVsxMV1ePXIsZVsyMF1ePXQsZVsyMV1ePXIsZVszMF1ePXQsZVszMV1ePXIsZVs0MF1ePXQsZVs0MV1ePXIsdD1vXihjPDwxfHU+Pj4zMSkscj1zXih1PDwxfGM+Pj4zMSksZVsyXV49dCxlWzNdXj1yLGVbMTJdXj10LGVbMTNdXj1yLGVbMjJdXj10LGVbMjNdXj1yLGVbMzJdXj10LGVbMzNdXj1yLGVbNDJdXj10LGVbNDNdXj1yLHQ9aV4obDw8MXxoPj4+MzEpLHI9YV4oaDw8MXxsPj4+MzEpLGVbNF1ePXQsZVs1XV49cixlWzE0XV49dCxlWzE1XV49cixlWzI0XV49dCxlWzI1XV49cixlWzM0XV49dCxlWzM1XV49cixlWzQ0XV49dCxlWzQ1XV49cix0PWNeKHA8PDF8Zj4+PjMxKSxyPXVeKGY8PDF8cD4+PjMxKSxlWzZdXj10LGVbN11ePXIsZVsxNl1ePXQsZVsxN11ePXIsZVsyNl1ePXQsZVsyN11ePXIsZVszNl1ePXQsZVszN11ePXIsZVs0Nl1ePXQsZVs0N11ePXIsdD1sXihvPDwxfHM+Pj4zMSkscj1oXihzPDwxfG8+Pj4zMSksZVs4XV49dCxlWzldXj1yLGVbMThdXj10LGVbMTldXj1yLGVbMjhdXj10LGVbMjldXj1yLGVbMzhdXj10LGVbMzldXj1yLGVbNDhdXj10LGVbNDldXj1yLGc9ZVswXSx5PWVbMV0sVj1lWzExXTw8NHxlWzEwXT4+PjI4LFc9ZVsxMF08PDR8ZVsxMV0+Pj4yOCxrPWVbMjBdPDwzfGVbMjFdPj4+MjksST1lWzIxXTw8M3xlWzIwXT4+PjI5LGFlPWVbMzFdPDw5fGVbMzBdPj4+MjMsY2U9ZVszMF08PDl8ZVszMV0+Pj4yMyxHPWVbNDBdPDwxOHxlWzQxXT4+PjE0LEs9ZVs0MV08PDE4fGVbNDBdPj4+MTQsTj1lWzJdPDwxfGVbM10+Pj4zMSxQPWVbM108PDF8ZVsyXT4+PjMxLG09ZVsxM108PDEyfGVbMTJdPj4+MjAsYj1lWzEyXTw8MTJ8ZVsxM10+Pj4yMCxYPWVbMjJdPDwxMHxlWzIzXT4+PjIyLFk9ZVsyM108PDEwfGVbMjJdPj4+MjIsQz1lWzMzXTw8MTN8ZVszMl0+Pj4xOSxSPWVbMzJdPDwxM3xlWzMzXT4+PjE5LHVlPWVbNDJdPDwyfGVbNDNdPj4+MzAsbGU9ZVs0M108PDJ8ZVs0Ml0+Pj4zMCx0ZT1lWzVdPDwzMHxlWzRdPj4+MixyZT1lWzRdPDwzMHxlWzVdPj4+MixMPWVbMTRdPDw2fGVbMTVdPj4+MjYsRj1lWzE1XTw8NnxlWzE0XT4+PjI2LEE9ZVsyNV08PDExfGVbMjRdPj4+MjEsdz1lWzI0XTw8MTF8ZVsyNV0+Pj4yMSxKPWVbMzRdPDwxNXxlWzM1XT4+PjE3LFE9ZVszNV08PDE1fGVbMzRdPj4+MTcsTz1lWzQ1XTw8Mjl8ZVs0NF0+Pj4zLEQ9ZVs0NF08PDI5fGVbNDVdPj4+MyxUPWVbNl08PDI4fGVbN10+Pj40LF89ZVs3XTw8Mjh8ZVs2XT4+PjQsbmU9ZVsxN108PDIzfGVbMTZdPj4+OSxvZT1lWzE2XTw8MjN8ZVsxN10+Pj45LHo9ZVsyNl08PDI1fGVbMjddPj4+NyxqPWVbMjddPDwyNXxlWzI2XT4+Pjcsdj1lWzM2XTw8MjF8ZVszN10+Pj4xMSxTPWVbMzddPDwyMXxlWzM2XT4+PjExLFo9ZVs0N108PDI0fGVbNDZdPj4+OCxlZT1lWzQ2XTw8MjR8ZVs0N10+Pj44LHE9ZVs4XTw8Mjd8ZVs5XT4+PjUsJD1lWzldPDwyN3xlWzhdPj4+NSxCPWVbMThdPDwyMHxlWzE5XT4+PjEyLFU9ZVsxOV08PDIwfGVbMThdPj4+MTIsc2U9ZVsyOV08PDd8ZVsyOF0+Pj4yNSxpZT1lWzI4XTw8N3xlWzI5XT4+PjI1LE09ZVszOF08PDh8ZVszOV0+Pj4yNCxIPWVbMzldPDw4fGVbMzhdPj4+MjQseD1lWzQ4XTw8MTR8ZVs0OV0+Pj4xOCxFPWVbNDldPDwxNHxlWzQ4XT4+PjE4LGVbMF09Z15+bSZBLGVbMV09eV5+YiZ3LGVbMTBdPVRefkImayxlWzExXT1fXn5VJkksZVsyMF09Tl5+TCZ6LGVbMjFdPVBefkYmaixlWzMwXT1xXn5WJlgsZVszMV09JF5+VyZZLGVbNDBdPXRlXn5uZSZzZSxlWzQxXT1yZV5+b2UmaWUsZVsyXT1tXn5BJnYsZVszXT1iXn53JlMsZVsxMl09Ql5+ayZDLGVbMTNdPVVefkkmUixlWzIyXT1MXn56Jk0sZVsyM109Rl5+aiZILGVbMzJdPVZeflgmSixlWzMzXT1XXn5ZJlEsZVs0Ml09bmVefnNlJmFlLGVbNDNdPW9lXn5pZSZjZSxlWzRdPUFefnYmeCxlWzVdPXdeflMmRSxlWzE0XT1rXn5DJk8sZVsxNV09SV5+UiZELGVbMjRdPXpefk0mRyxlWzI1XT1qXn5IJkssZVszNF09WF5+SiZaLGVbMzVdPVleflEmZWUsZVs0NF09c2VefmFlJnVlLGVbNDVdPWllXn5jZSZsZSxlWzZdPXZefngmZyxlWzddPVNefkUmeSxlWzE2XT1DXn5PJlQsZVsxN109Ul5+RCZfLGVbMjZdPU1efkcmTixlWzI3XT1IXn5LJlAsZVszNl09Sl5+WiZxLGVbMzddPVFefmVlJiQsZVs0Nl09YWVefnVlJnRlLGVbNDddPWNlXn5sZSZyZSxlWzhdPXhefmcmbSxlWzldPUVefnkmYixlWzE4XT1PXn5UJkIsZVsxOV09RF5+XyZVLGVbMjhdPUdefk4mTCxlWzI5XT1LXn5QJkYsZVszOF09Wl5+cSZWLGVbMzldPWVlXn4kJlcsZVs0OF09dWVefnRlJm5lLGVbNDldPWxlXn5yZSZvZSxlWzBdXj1kW25dLGVbMV1ePWRbbisxXX07aWYoYyllLmV4cG9ydHM9XztlbHNle2ZvcihVPTA7VTxCLmxlbmd0aDsrK1UpaVtCW1VdXT1fW0JbVV1dO3UmJih2b2lkIDA9PT0obj1mdW5jdGlvbigpe3JldHVybiBffS5jYWxsKHQscix0LGUpKXx8KGUuZXhwb3J0cz1uKSl9fSgpfSw5NzU3OihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1cImlucHV0IGlzIGludmFsaWQgdHlwZVwiLG89XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxzPW8/d2luZG93Ont9O3MuSlNfU0hBNTEyX05PX1dJTkRPVyYmKG89ITEpO3ZhciBpPSFvJiZcIm9iamVjdFwiPT10eXBlb2Ygc2VsZjshcy5KU19TSEE1MTJfTk9fTk9ERV9KUyYmXCJvYmplY3RcIj09dHlwZW9mIHByb2Nlc3MmJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZT9zPXIuZzppJiYocz1zZWxmKTt2YXIgYT0hcy5KU19TSEE1MTJfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMsYz1yLmFtZE8sdT0hcy5KU19TSEE1MTJfTk9fQVJSQVlfQlVGRkVSJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXIsbD1cIjAxMjM0NTY3ODlhYmNkZWZcIi5zcGxpdChcIlwiKSxoPVstMjE0NzQ4MzY0OCw4Mzg4NjA4LDMyNzY4LDEyOF0scD1bMjQsMTYsOCwwXSxmPVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV0sZD1bXCJoZXhcIixcImFycmF5XCIsXCJkaWdlc3RcIixcImFycmF5QnVmZmVyXCJdLGc9W107IXMuSlNfU0hBNTEyX05PX05PREVfSlMmJkFycmF5LmlzQXJyYXl8fChBcnJheS5pc0FycmF5PWZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLCF1fHwhcy5KU19TSEE1MTJfTk9fQVJSQVlfQlVGRkVSX0lTX1ZJRVcmJkFycmF5QnVmZmVyLmlzVmlld3x8KEFycmF5QnVmZmVyLmlzVmlldz1mdW5jdGlvbihlKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgZSYmZS5idWZmZXImJmUuYnVmZmVyLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXJ9KTt2YXIgeT1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gbmV3IHcodCwhMCkudXBkYXRlKHIpW2VdKCl9fSxtPWZ1bmN0aW9uKGUpe3ZhciB0PXkoXCJoZXhcIixlKTt0LmNyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgdyhlKX0sdC51cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlKCkudXBkYXRlKGUpfTtmb3IodmFyIHI9MDtyPGQubGVuZ3RoOysrcil7dmFyIG49ZFtyXTt0W25dPXkobixlKX1yZXR1cm4gdH0sYj1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBuZXcgdihyLHQsITApLnVwZGF0ZShuKVtlXSgpfX0sQT1mdW5jdGlvbihlKXt2YXIgdD1iKFwiaGV4XCIsZSk7dC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB2KHQsZSl9LHQudXBkYXRlPWZ1bmN0aW9uKGUscil7cmV0dXJuIHQuY3JlYXRlKGUpLnVwZGF0ZShyKX07Zm9yKHZhciByPTA7cjxkLmxlbmd0aDsrK3Ipe3ZhciBuPWRbcl07dFtuXT1iKG4sZSl9cmV0dXJuIHR9O2Z1bmN0aW9uIHcoZSx0KXt0PyhnWzBdPWdbMV09Z1syXT1nWzNdPWdbNF09Z1s1XT1nWzZdPWdbN109Z1s4XT1nWzldPWdbMTBdPWdbMTFdPWdbMTJdPWdbMTNdPWdbMTRdPWdbMTVdPWdbMTZdPWdbMTddPWdbMThdPWdbMTldPWdbMjBdPWdbMjFdPWdbMjJdPWdbMjNdPWdbMjRdPWdbMjVdPWdbMjZdPWdbMjddPWdbMjhdPWdbMjldPWdbMzBdPWdbMzFdPWdbMzJdPTAsdGhpcy5ibG9ja3M9Zyk6dGhpcy5ibG9ja3M9WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDBdLDM4ND09ZT8odGhpcy5oMGg9MzQxODA3MDM2NSx0aGlzLmgwbD0zMjM4MzcxMDMyLHRoaXMuaDFoPTE2NTQyNzAyNTAsdGhpcy5oMWw9OTE0MTUwNjYzLHRoaXMuaDJoPTI0Mzg1MjkzNzAsdGhpcy5oMmw9ODEyNzAyOTk5LHRoaXMuaDNoPTM1NTQ2MjM2MCx0aGlzLmgzbD00MTQ0OTEyNjk3LHRoaXMuaDRoPTE3MzE0MDU0MTUsdGhpcy5oNGw9NDI5MDc3NTg1Nyx0aGlzLmg1aD0yMzk0MTgwMjMxLHRoaXMuaDVsPTE3NTA2MDMwMjUsdGhpcy5oNmg9MzY3NTAwODUyNSx0aGlzLmg2bD0xNjk0MDc2ODM5LHRoaXMuaDdoPTEyMDMwNjI4MTMsdGhpcy5oN2w9MzIwNDA3NTQyOCk6MjU2PT1lPyh0aGlzLmgwaD01NzM2NDUyMDQsdGhpcy5oMGw9NDIzMDczOTc1Nix0aGlzLmgxaD0yNjczMTcyMzg3LHRoaXMuaDFsPTMzNjA0NDk3MzAsdGhpcy5oMmg9NTk2ODgzNTYzLHRoaXMuaDJsPTE4Njc3NTU4NTcsdGhpcy5oM2g9MjUyMDI4MjkwNSx0aGlzLmgzbD0xNDk3NDI2NjIxLHRoaXMuaDRoPTI1MTkyMTk5MzgsdGhpcy5oNGw9MjgyNzk0MzkwNyx0aGlzLmg1aD0zMTkzODM5MTQxLHRoaXMuaDVsPTE0MDEzMDU0OTAsdGhpcy5oNmg9NzIxNTI1MjQ0LHRoaXMuaDZsPTc0Njk2MTA2Nix0aGlzLmg3aD0yNDY4ODU4NTIsdGhpcy5oN2w9MjE3NzE4Mjg4Mik6MjI0PT1lPyh0aGlzLmgwaD0yMzUyODIyMjE2LHRoaXMuaDBsPTQyNDk1NTI5OCx0aGlzLmgxaD0xOTQ0MTY0NzEwLHRoaXMuaDFsPTIzMTI5NTA5OTgsdGhpcy5oMmg9NTAyOTcwMjg2LHRoaXMuaDJsPTg1NTYxMjU0Nix0aGlzLmgzaD0xNzM4Mzk2OTQ4LHRoaXMuaDNsPTE0Nzk1MTYxMTEsdGhpcy5oNGg9MjU4ODEyNzc3LHRoaXMuaDRsPTIwNzc1MTEwODAsdGhpcy5oNWg9MjAxMTM5MzkwNyx0aGlzLmg1bD03OTk4OTA1OCx0aGlzLmg2aD0xMDY3Mjg3OTc2LHRoaXMuaDZsPTE3ODAyOTk0NjQsdGhpcy5oN2g9Mjg2NDUxMzczLHRoaXMuaDdsPTI0NDY3NTg1NjEpOih0aGlzLmgwaD0xNzc5MDMzNzAzLHRoaXMuaDBsPTQwODkyMzU3MjAsdGhpcy5oMWg9MzE0NDEzNDI3Nyx0aGlzLmgxbD0yMjI3ODczNTk1LHRoaXMuaDJoPTEwMTM5MDQyNDIsdGhpcy5oMmw9NDI3MTE3NTcyMyx0aGlzLmgzaD0yNzczNDgwNzYyLHRoaXMuaDNsPTE1OTU3NTAxMjksdGhpcy5oNGg9MTM1OTg5MzExOSx0aGlzLmg0bD0yOTE3NTY1MTM3LHRoaXMuaDVoPTI2MDA4MjI5MjQsdGhpcy5oNWw9NzI1NTExMTk5LHRoaXMuaDZoPTUyODczNDYzNSx0aGlzLmg2bD00MjE1Mzg5NTQ3LHRoaXMuaDdoPTE1NDE0NTkyMjUsdGhpcy5oN2w9MzI3MDMzMjA5KSx0aGlzLmJpdHM9ZSx0aGlzLmJsb2NrPXRoaXMuc3RhcnQ9dGhpcy5ieXRlcz10aGlzLmhCeXRlcz0wLHRoaXMuZmluYWxpemVkPXRoaXMuaGFzaGVkPSExfWZ1bmN0aW9uIHYoZSxyLG4pe3ZhciBvLHM9dHlwZW9mIGU7aWYoXCJzdHJpbmdcIiE9PXMpe2lmKFwib2JqZWN0XCIhPT1zKXRocm93IG5ldyBFcnJvcih0KTtpZihudWxsPT09ZSl0aHJvdyBuZXcgRXJyb3IodCk7aWYodSYmZS5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyKWU9bmV3IFVpbnQ4QXJyYXkoZSk7ZWxzZSBpZighKEFycmF5LmlzQXJyYXkoZSl8fHUmJkFycmF5QnVmZmVyLmlzVmlldyhlKSkpdGhyb3cgbmV3IEVycm9yKHQpO289ITB9dmFyIGk9ZS5sZW5ndGg7aWYoIW8pe2Zvcih2YXIgYSxjPVtdLGw9KGk9ZS5sZW5ndGgsMCksaD0wO2g8aTsrK2gpKGE9ZS5jaGFyQ29kZUF0KGgpKTwxMjg/Y1tsKytdPWE6YTwyMDQ4PyhjW2wrK109MTkyfGE+PjYsY1tsKytdPTEyOHw2MyZhKTphPDU1Mjk2fHxhPj01NzM0ND8oY1tsKytdPTIyNHxhPj4xMixjW2wrK109MTI4fGE+PjYmNjMsY1tsKytdPTEyOHw2MyZhKTooYT02NTUzNisoKDEwMjMmYSk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsraCkpLGNbbCsrXT0yNDB8YT4+MTgsY1tsKytdPTEyOHxhPj4xMiY2MyxjW2wrK109MTI4fGE+PjYmNjMsY1tsKytdPTEyOHw2MyZhKTtlPWN9ZS5sZW5ndGg+MTI4JiYoZT1uZXcgdyhyLCEwKS51cGRhdGUoZSkuYXJyYXkoKSk7dmFyIHA9W10sZj1bXTtmb3IoaD0wO2g8MTI4OysraCl7dmFyIGQ9ZVtoXXx8MDtwW2hdPTkyXmQsZltoXT01NF5kfXcuY2FsbCh0aGlzLHIsbiksdGhpcy51cGRhdGUoZiksdGhpcy5vS2V5UGFkPXAsdGhpcy5pbm5lcj0hMCx0aGlzLnNoYXJlZE1lbW9yeT1ufXcucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJmaW5hbGl6ZSBhbHJlYWR5IGNhbGxlZFwiKTt2YXIgcixuPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1uKXtpZihcIm9iamVjdFwiIT09bil0aHJvdyBuZXcgRXJyb3IodCk7aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKHQpO2lmKHUmJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcillPW5ldyBVaW50OEFycmF5KGUpO2Vsc2UgaWYoIShBcnJheS5pc0FycmF5KGUpfHx1JiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcih0KTtyPSEwfWZvcih2YXIgbyxzLGk9MCxhPWUubGVuZ3RoLGM9dGhpcy5ibG9ja3M7aTxhOyl7aWYodGhpcy5oYXNoZWQmJih0aGlzLmhhc2hlZD0hMSxjWzBdPXRoaXMuYmxvY2ssY1sxXT1jWzJdPWNbM109Y1s0XT1jWzVdPWNbNl09Y1s3XT1jWzhdPWNbOV09Y1sxMF09Y1sxMV09Y1sxMl09Y1sxM109Y1sxNF09Y1sxNV09Y1sxNl09Y1sxN109Y1sxOF09Y1sxOV09Y1syMF09Y1syMV09Y1syMl09Y1syM109Y1syNF09Y1syNV09Y1syNl09Y1syN109Y1syOF09Y1syOV09Y1szMF09Y1szMV09Y1szMl09MCkscilmb3Iocz10aGlzLnN0YXJ0O2k8YSYmczwxMjg7KytpKWNbcz4+Ml18PWVbaV08PHBbMyZzKytdO2Vsc2UgZm9yKHM9dGhpcy5zdGFydDtpPGEmJnM8MTI4OysraSkobz1lLmNoYXJDb2RlQXQoaSkpPDEyOD9jW3M+PjJdfD1vPDxwWzMmcysrXTpvPDIwNDg/KGNbcz4+Ml18PSgxOTJ8bz4+Nik8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8NjMmbyk8PHBbMyZzKytdKTpvPDU1Mjk2fHxvPj01NzM0ND8oY1tzPj4yXXw9KDIyNHxvPj4xMik8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8bz4+NiY2Myk8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8NjMmbyk8PHBbMyZzKytdKToobz02NTUzNisoKDEwMjMmbyk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsraSkpLGNbcz4+Ml18PSgyNDB8bz4+MTgpPDxwWzMmcysrXSxjW3M+PjJdfD0oMTI4fG8+PjEyJjYzKTw8cFszJnMrK10sY1tzPj4yXXw9KDEyOHxvPj42JjYzKTw8cFszJnMrK10sY1tzPj4yXXw9KDEyOHw2MyZvKTw8cFszJnMrK10pO3RoaXMubGFzdEJ5dGVJbmRleD1zLHRoaXMuYnl0ZXMrPXMtdGhpcy5zdGFydCxzPj0xMjg/KHRoaXMuYmxvY2s9Y1szMl0sdGhpcy5zdGFydD1zLTEyOCx0aGlzLmhhc2goKSx0aGlzLmhhc2hlZD0hMCk6dGhpcy5zdGFydD1zfXJldHVybiB0aGlzLmJ5dGVzPjQyOTQ5NjcyOTUmJih0aGlzLmhCeXRlcys9dGhpcy5ieXRlcy80Mjk0OTY3Mjk2PDwwLHRoaXMuYnl0ZXM9dGhpcy5ieXRlcyU0Mjk0OTY3Mjk2KSx0aGlzfSx3LnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKCF0aGlzLmZpbmFsaXplZCl7dGhpcy5maW5hbGl6ZWQ9ITA7dmFyIGU9dGhpcy5ibG9ja3MsdD10aGlzLmxhc3RCeXRlSW5kZXg7ZVszMl09dGhpcy5ibG9jayxlW3Q+PjJdfD1oWzMmdF0sdGhpcy5ibG9jaz1lWzMyXSx0Pj0xMTImJih0aGlzLmhhc2hlZHx8dGhpcy5oYXNoKCksZVswXT10aGlzLmJsb2NrLGVbMV09ZVsyXT1lWzNdPWVbNF09ZVs1XT1lWzZdPWVbN109ZVs4XT1lWzldPWVbMTBdPWVbMTFdPWVbMTJdPWVbMTNdPWVbMTRdPWVbMTVdPWVbMTZdPWVbMTddPWVbMThdPWVbMTldPWVbMjBdPWVbMjFdPWVbMjJdPWVbMjNdPWVbMjRdPWVbMjVdPWVbMjZdPWVbMjddPWVbMjhdPWVbMjldPWVbMzBdPWVbMzFdPWVbMzJdPTApLGVbMzBdPXRoaXMuaEJ5dGVzPDwzfHRoaXMuYnl0ZXM+Pj4yOSxlWzMxXT10aGlzLmJ5dGVzPDwzLHRoaXMuaGFzaCgpfX0sdy5wcm90b3R5cGUuaGFzaD1mdW5jdGlvbigpe3ZhciBlLHQscixuLG8scyxpLGEsYyx1LGwsaCxwLGQsZyx5LG0sYixBLHcsdixTLHgsRSxULF89dGhpcy5oMGgsQj10aGlzLmgwbCxVPXRoaXMuaDFoLGs9dGhpcy5oMWwsST10aGlzLmgyaCxDPXRoaXMuaDJsLFI9dGhpcy5oM2gsTz10aGlzLmgzbCxEPXRoaXMuaDRoLE49dGhpcy5oNGwsUD10aGlzLmg1aCxMPXRoaXMuaDVsLEY9dGhpcy5oNmgsej10aGlzLmg2bCxqPXRoaXMuaDdoLE09dGhpcy5oN2wsSD10aGlzLmJsb2Nrcztmb3IoZT0zMjtlPDE2MDtlKz0yKXQ9KCh3PUhbZS0zMF0pPj4+MXwodj1IW2UtMjldKTw8MzEpXih3Pj4+OHx2PDwyNCledz4+Pjcscj0odj4+PjF8dzw8MzEpXih2Pj4+OHx3PDwyNCleKHY+Pj43fHc8PDI1KSxuPSgodz1IW2UtNF0pPj4+MTl8KHY9SFtlLTNdKTw8MTMpXih2Pj4+Mjl8dzw8Myledz4+PjYsbz0odj4+PjE5fHc8PDEzKV4odz4+PjI5fHY8PDMpXih2Pj4+Nnx3PDwyNiksdz1IW2UtMzJdLHY9SFtlLTMxXSxjPSgoUz1IW2UtMTRdKT4+PjE2KSsodz4+PjE2KSsodD4+PjE2KSsobj4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmdCkrKDY1NTM1Jm4pKygoaT0oKHg9SFtlLTEzXSk+Pj4xNikrKHY+Pj4xNikrKHI+Pj4xNikrKG8+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikrKDY1NTM1JnIpKyg2NTUzNSZvKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSxIW2VdPWM8PDE2fDY1NTM1JmEsSFtlKzFdPWk8PDE2fDY1NTM1JnM7dmFyIEc9XyxLPUIscT1VLCQ9ayxWPUksVz1DLFg9UixZPU8sSj1ELFE9TixaPVAsZWU9TCx0ZT1GLHJlPXosbmU9aixvZT1NO2Zvcih5PXEmVixtPSQmVyxlPTA7ZTwxNjA7ZSs9OCl0PShHPj4+Mjh8Szw8NCleKEs+Pj4yfEc8PDMwKV4oSz4+Pjd8Rzw8MjUpLHI9KEs+Pj4yOHxHPDw0KV4oRz4+PjJ8Szw8MzApXihHPj4+N3xLPDwyNSksbj0oSj4+PjE0fFE8PDE4KV4oSj4+PjE4fFE8PDE0KV4oUT4+Pjl8Sjw8MjMpLG89KFE+Pj4xNHxKPDwxOCleKFE+Pj4xOHxKPDwxNCleKEo+Pj45fFE8PDIzKSxiPSh1PUcmcSleRyZWXnksQT0obD1LJiQpXksmV15tLEU9SiZaXn5KJnRlLFQ9USZlZV5+USZyZSx3PUhbZV0sdj1IW2UrMV0sdz0oYz0oKFM9ZltlXSk+Pj4xNikrKHc+Pj4xNikrKEU+Pj4xNikrKG4+Pj4xNikrKG5lPj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKyg2NTUzNSZFKSsoNjU1MzUmbikrKDY1NTM1Jm5lKSsoKGk9KCh4PWZbZSsxXSk+Pj4xNikrKHY+Pj4xNikrKFQ+Pj4xNikrKG8+Pj4xNikrKG9lPj4+MTYpKygocz0oNjU1MzUmeCkrKDY1NTM1JnYpKyg2NTUzNSZUKSsoNjU1MzUmbykrKDY1NTM1Jm9lKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEsdj1pPDwxNnw2NTUzNSZzLFM9KGM9KGI+Pj4xNikrKHQ+Pj4xNikrKChhPSg2NTUzNSZiKSsoNjU1MzUmdCkrKChpPShBPj4+MTYpKyhyPj4+MTYpKygocz0oNjU1MzUmQSkrKDY1NTM1JnIpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSx4PWk8PDE2fDY1NTM1JnMsbmU9KGM9KFg+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZYKSsoNjU1MzUmdykrKChpPShZPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmWSkrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxvZT1pPDwxNnw2NTUzNSZzLHQ9KChYPShjPShTPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKygoaT0oeD4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEpPj4+Mjh8KFk9aTw8MTZ8NjU1MzUmcyk8PDQpXihZPj4+MnxYPDwzMCleKFk+Pj43fFg8PDI1KSxyPShZPj4+Mjh8WDw8NCleKFg+Pj4yfFk8PDMwKV4oWD4+Pjd8WTw8MjUpLG49KG5lPj4+MTR8b2U8PDE4KV4obmU+Pj4xOHxvZTw8MTQpXihvZT4+Pjl8bmU8PDIzKSxvPShvZT4+PjE0fG5lPDwxOCleKG9lPj4+MTh8bmU8PDE0KV4obmU+Pj45fG9lPDwyMyksYj0oaD1YJkcpXlgmcV51LEE9KHA9WSZLKV5ZJiRebCxFPW5lJkpefm5lJlosVD1vZSZRXn5vZSZlZSx3PUhbZSsyXSx2PUhbZSszXSx3PShjPSgoUz1mW2UrMl0pPj4+MTYpKyh3Pj4+MTYpKyhFPj4+MTYpKyhuPj4+MTYpKyh0ZT4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmRSkrKDY1NTM1Jm4pKyg2NTUzNSZ0ZSkrKChpPSgoeD1mW2UrM10pPj4+MTYpKyh2Pj4+MTYpKyhUPj4+MTYpKyhvPj4+MTYpKyhyZT4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSsoNjU1MzUmVCkrKDY1NTM1Jm8pKyg2NTUzNSZyZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLHRlPShjPShWPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmVikrKDY1NTM1JncpKygoaT0oVz4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JlcpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEscmU9aTw8MTZ8NjU1MzUmcyx0PSgoVj0oYz0oUz4+PjE2KSsodz4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoKGk9KHg+Pj4xNikrKHY+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhKT4+PjI4fChXPWk8PDE2fDY1NTM1JnMpPDw0KV4oVz4+PjJ8Vjw8MzApXihXPj4+N3xWPDwyNSkscj0oVz4+PjI4fFY8PDQpXihWPj4+MnxXPDwzMCleKFY+Pj43fFc8PDI1KSxuPSh0ZT4+PjE0fHJlPDwxOCleKHRlPj4+MTh8cmU8PDE0KV4ocmU+Pj45fHRlPDwyMyksbz0ocmU+Pj4xNHx0ZTw8MTgpXihyZT4+PjE4fHRlPDwxNCleKHRlPj4+OXxyZTw8MjMpLGI9KGQ9ViZYKV5WJkdeaCxBPShnPVcmWSleVyZLXnAsRT10ZSZuZV5+dGUmSixUPXJlJm9lXn5yZSZRLHc9SFtlKzRdLHY9SFtlKzVdLHc9KGM9KChTPWZbZSs0XSk+Pj4xNikrKHc+Pj4xNikrKEU+Pj4xNikrKG4+Pj4xNikrKFo+Pj4xNikrKChhPSg2NTUzNSZTKSsoNjU1MzUmdykrKDY1NTM1JkUpKyg2NTUzNSZuKSsoNjU1MzUmWikrKChpPSgoeD1mW2UrNV0pPj4+MTYpKyh2Pj4+MTYpKyhUPj4+MTYpKyhvPj4+MTYpKyhlZT4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSsoNjU1MzUmVCkrKDY1NTM1Jm8pKyg2NTUzNSZlZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLFo9KGM9KHE+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZxKSsoNjU1MzUmdykrKChpPSgkPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmJCkrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxlZT1pPDwxNnw2NTUzNSZzLHQ9KChxPShjPShTPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKygoaT0oeD4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEpPj4+Mjh8KCQ9aTw8MTZ8NjU1MzUmcyk8PDQpXigkPj4+MnxxPDwzMCleKCQ+Pj43fHE8PDI1KSxyPSgkPj4+Mjh8cTw8NCleKHE+Pj4yfCQ8PDMwKV4ocT4+Pjd8JDw8MjUpLG49KFo+Pj4xNHxlZTw8MTgpXihaPj4+MTh8ZWU8PDE0KV4oZWU+Pj45fFo8PDIzKSxvPShlZT4+PjE0fFo8PDE4KV4oZWU+Pj4xOHxaPDwxNCleKFo+Pj45fGVlPDwyMyksYj0oeT1xJlYpXnEmWF5kLEE9KG09JCZXKV4kJlleZyxFPVomdGVeflombmUsVD1lZSZyZV5+ZWUmb2Usdz1IW2UrNl0sdj1IW2UrN10sdz0oYz0oKFM9ZltlKzZdKT4+PjE2KSsodz4+PjE2KSsoRT4+PjE2KSsobj4+PjE2KSsoSj4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmRSkrKDY1NTM1Jm4pKyg2NTUzNSZKKSsoKGk9KCh4PWZbZSs3XSk+Pj4xNikrKHY+Pj4xNikrKFQ+Pj4xNikrKG8+Pj4xNikrKFE+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikrKDY1NTM1JlQpKyg2NTUzNSZvKSsoNjU1MzUmUSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLEo9KGM9KEc+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZHKSsoNjU1MzUmdykrKChpPShLPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmSykrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxRPWk8PDE2fDY1NTM1JnMsRz0oYz0oUz4+PjE2KSsodz4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoKGk9KHg+Pj4xNikrKHY+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLEs9aTw8MTZ8NjU1MzUmcztjPShfPj4+MTYpKyhHPj4+MTYpKygoYT0oNjU1MzUmXykrKDY1NTM1JkcpKygoaT0oQj4+PjE2KSsoSz4+PjE2KSsoKHM9KDY1NTM1JkIpKyg2NTUzNSZLKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmgwaD1jPDwxNnw2NTUzNSZhLHRoaXMuaDBsPWk8PDE2fDY1NTM1JnMsYz0oVT4+PjE2KSsocT4+PjE2KSsoKGE9KDY1NTM1JlUpKyg2NTUzNSZxKSsoKGk9KGs+Pj4xNikrKCQ+Pj4xNikrKChzPSg2NTUzNSZrKSsoNjU1MzUmJCkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oMWg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmgxbD1pPDwxNnw2NTUzNSZzLGM9KEk+Pj4xNikrKFY+Pj4xNikrKChhPSg2NTUzNSZJKSsoNjU1MzUmVikrKChpPShDPj4+MTYpKyhXPj4+MTYpKygocz0oNjU1MzUmQykrKDY1NTM1JlcpKT4+PjE2KSk+Pj4xNikpPj4+MTYpLHRoaXMuaDJoPWM8PDE2fDY1NTM1JmEsdGhpcy5oMmw9aTw8MTZ8NjU1MzUmcyxjPShSPj4+MTYpKyhYPj4+MTYpKygoYT0oNjU1MzUmUikrKDY1NTM1JlgpKygoaT0oTz4+PjE2KSsoWT4+PjE2KSsoKHM9KDY1NTM1Jk8pKyg2NTUzNSZZKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmgzaD1jPDwxNnw2NTUzNSZhLHRoaXMuaDNsPWk8PDE2fDY1NTM1JnMsYz0oRD4+PjE2KSsoSj4+PjE2KSsoKGE9KDY1NTM1JkQpKyg2NTUzNSZKKSsoKGk9KE4+Pj4xNikrKFE+Pj4xNikrKChzPSg2NTUzNSZOKSsoNjU1MzUmUSkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oNGg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmg0bD1pPDwxNnw2NTUzNSZzLGM9KFA+Pj4xNikrKFo+Pj4xNikrKChhPSg2NTUzNSZQKSsoNjU1MzUmWikrKChpPShMPj4+MTYpKyhlZT4+PjE2KSsoKHM9KDY1NTM1JkwpKyg2NTUzNSZlZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oNWg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmg1bD1pPDwxNnw2NTUzNSZzLGM9KEY+Pj4xNikrKHRlPj4+MTYpKygoYT0oNjU1MzUmRikrKDY1NTM1JnRlKSsoKGk9KHo+Pj4xNikrKHJlPj4+MTYpKygocz0oNjU1MzUmeikrKDY1NTM1JnJlKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmg2aD1jPDwxNnw2NTUzNSZhLHRoaXMuaDZsPWk8PDE2fDY1NTM1JnMsYz0oaj4+PjE2KSsobmU+Pj4xNikrKChhPSg2NTUzNSZqKSsoNjU1MzUmbmUpKygoaT0oTT4+PjE2KSsob2U+Pj4xNikrKChzPSg2NTUzNSZNKSsoNjU1MzUmb2UpKT4+PjE2KSk+Pj4xNikpPj4+MTYpLHRoaXMuaDdoPWM8PDE2fDY1NTM1JmEsdGhpcy5oN2w9aTw8MTZ8NjU1MzUmc30sdy5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDBoLHQ9dGhpcy5oMGwscj10aGlzLmgxaCxuPXRoaXMuaDFsLG89dGhpcy5oMmgscz10aGlzLmgybCxpPXRoaXMuaDNoLGE9dGhpcy5oM2wsYz10aGlzLmg0aCx1PXRoaXMuaDRsLGg9dGhpcy5oNWgscD10aGlzLmg1bCxmPXRoaXMuaDZoLGQ9dGhpcy5oNmwsZz10aGlzLmg3aCx5PXRoaXMuaDdsLG09dGhpcy5iaXRzLGI9bFtlPj4yOCYxNV0rbFtlPj4yNCYxNV0rbFtlPj4yMCYxNV0rbFtlPj4xNiYxNV0rbFtlPj4xMiYxNV0rbFtlPj44JjE1XStsW2U+PjQmMTVdK2xbMTUmZV0rbFt0Pj4yOCYxNV0rbFt0Pj4yNCYxNV0rbFt0Pj4yMCYxNV0rbFt0Pj4xNiYxNV0rbFt0Pj4xMiYxNV0rbFt0Pj44JjE1XStsW3Q+PjQmMTVdK2xbMTUmdF0rbFtyPj4yOCYxNV0rbFtyPj4yNCYxNV0rbFtyPj4yMCYxNV0rbFtyPj4xNiYxNV0rbFtyPj4xMiYxNV0rbFtyPj44JjE1XStsW3I+PjQmMTVdK2xbMTUmcl0rbFtuPj4yOCYxNV0rbFtuPj4yNCYxNV0rbFtuPj4yMCYxNV0rbFtuPj4xNiYxNV0rbFtuPj4xMiYxNV0rbFtuPj44JjE1XStsW24+PjQmMTVdK2xbMTUmbl0rbFtvPj4yOCYxNV0rbFtvPj4yNCYxNV0rbFtvPj4yMCYxNV0rbFtvPj4xNiYxNV0rbFtvPj4xMiYxNV0rbFtvPj44JjE1XStsW28+PjQmMTVdK2xbMTUmb10rbFtzPj4yOCYxNV0rbFtzPj4yNCYxNV0rbFtzPj4yMCYxNV0rbFtzPj4xNiYxNV0rbFtzPj4xMiYxNV0rbFtzPj44JjE1XStsW3M+PjQmMTVdK2xbMTUmc10rbFtpPj4yOCYxNV0rbFtpPj4yNCYxNV0rbFtpPj4yMCYxNV0rbFtpPj4xNiYxNV0rbFtpPj4xMiYxNV0rbFtpPj44JjE1XStsW2k+PjQmMTVdK2xbMTUmaV07cmV0dXJuIG0+PTI1NiYmKGIrPWxbYT4+MjgmMTVdK2xbYT4+MjQmMTVdK2xbYT4+MjAmMTVdK2xbYT4+MTYmMTVdK2xbYT4+MTImMTVdK2xbYT4+OCYxNV0rbFthPj40JjE1XStsWzE1JmFdKSxtPj0zODQmJihiKz1sW2M+PjI4JjE1XStsW2M+PjI0JjE1XStsW2M+PjIwJjE1XStsW2M+PjE2JjE1XStsW2M+PjEyJjE1XStsW2M+PjgmMTVdK2xbYz4+NCYxNV0rbFsxNSZjXStsW3U+PjI4JjE1XStsW3U+PjI0JjE1XStsW3U+PjIwJjE1XStsW3U+PjE2JjE1XStsW3U+PjEyJjE1XStsW3U+PjgmMTVdK2xbdT4+NCYxNV0rbFsxNSZ1XStsW2g+PjI4JjE1XStsW2g+PjI0JjE1XStsW2g+PjIwJjE1XStsW2g+PjE2JjE1XStsW2g+PjEyJjE1XStsW2g+PjgmMTVdK2xbaD4+NCYxNV0rbFsxNSZoXStsW3A+PjI4JjE1XStsW3A+PjI0JjE1XStsW3A+PjIwJjE1XStsW3A+PjE2JjE1XStsW3A+PjEyJjE1XStsW3A+PjgmMTVdK2xbcD4+NCYxNV0rbFsxNSZwXSksNTEyPT1tJiYoYis9bFtmPj4yOCYxNV0rbFtmPj4yNCYxNV0rbFtmPj4yMCYxNV0rbFtmPj4xNiYxNV0rbFtmPj4xMiYxNV0rbFtmPj44JjE1XStsW2Y+PjQmMTVdK2xbMTUmZl0rbFtkPj4yOCYxNV0rbFtkPj4yNCYxNV0rbFtkPj4yMCYxNV0rbFtkPj4xNiYxNV0rbFtkPj4xMiYxNV0rbFtkPj44JjE1XStsW2Q+PjQmMTVdK2xbMTUmZF0rbFtnPj4yOCYxNV0rbFtnPj4yNCYxNV0rbFtnPj4yMCYxNV0rbFtnPj4xNiYxNV0rbFtnPj4xMiYxNV0rbFtnPj44JjE1XStsW2c+PjQmMTVdK2xbMTUmZ10rbFt5Pj4yOCYxNV0rbFt5Pj4yNCYxNV0rbFt5Pj4yMCYxNV0rbFt5Pj4xNiYxNV0rbFt5Pj4xMiYxNV0rbFt5Pj44JjE1XStsW3k+PjQmMTVdK2xbMTUmeV0pLGJ9LHcucHJvdG90eXBlLnRvU3RyaW5nPXcucHJvdG90eXBlLmhleCx3LnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7dmFyIGU9dGhpcy5oMGgsdD10aGlzLmgwbCxyPXRoaXMuaDFoLG49dGhpcy5oMWwsbz10aGlzLmgyaCxzPXRoaXMuaDJsLGk9dGhpcy5oM2gsYT10aGlzLmgzbCxjPXRoaXMuaDRoLHU9dGhpcy5oNGwsbD10aGlzLmg1aCxoPXRoaXMuaDVsLHA9dGhpcy5oNmgsZj10aGlzLmg2bCxkPXRoaXMuaDdoLGc9dGhpcy5oN2wseT10aGlzLmJpdHMsbT1bZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZSx0Pj4yNCYyNTUsdD4+MTYmMjU1LHQ+PjgmMjU1LDI1NSZ0LHI+PjI0JjI1NSxyPj4xNiYyNTUscj4+OCYyNTUsMjU1JnIsbj4+MjQmMjU1LG4+PjE2JjI1NSxuPj44JjI1NSwyNTUmbixvPj4yNCYyNTUsbz4+MTYmMjU1LG8+PjgmMjU1LDI1NSZvLHM+PjI0JjI1NSxzPj4xNiYyNTUscz4+OCYyNTUsMjU1JnMsaT4+MjQmMjU1LGk+PjE2JjI1NSxpPj44JjI1NSwyNTUmaV07cmV0dXJuIHk+PTI1NiYmbS5wdXNoKGE+PjI0JjI1NSxhPj4xNiYyNTUsYT4+OCYyNTUsMjU1JmEpLHk+PTM4NCYmbS5wdXNoKGM+PjI0JjI1NSxjPj4xNiYyNTUsYz4+OCYyNTUsMjU1JmMsdT4+MjQmMjU1LHU+PjE2JjI1NSx1Pj44JjI1NSwyNTUmdSxsPj4yNCYyNTUsbD4+MTYmMjU1LGw+PjgmMjU1LDI1NSZsLGg+PjI0JjI1NSxoPj4xNiYyNTUsaD4+OCYyNTUsMjU1JmgpLDUxMj09eSYmbS5wdXNoKHA+PjI0JjI1NSxwPj4xNiYyNTUscD4+OCYyNTUsMjU1JnAsZj4+MjQmMjU1LGY+PjE2JjI1NSxmPj44JjI1NSwyNTUmZixkPj4yNCYyNTUsZD4+MTYmMjU1LGQ+PjgmMjU1LDI1NSZkLGc+PjI0JjI1NSxnPj4xNiYyNTUsZz4+OCYyNTUsMjU1JmcpLG19LHcucHJvdG90eXBlLmFycmF5PXcucHJvdG90eXBlLmRpZ2VzdCx3LnByb3RvdHlwZS5hcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTt2YXIgZT10aGlzLmJpdHMsdD1uZXcgQXJyYXlCdWZmZXIoZS84KSxyPW5ldyBEYXRhVmlldyh0KTtyZXR1cm4gci5zZXRVaW50MzIoMCx0aGlzLmgwaCksci5zZXRVaW50MzIoNCx0aGlzLmgwbCksci5zZXRVaW50MzIoOCx0aGlzLmgxaCksci5zZXRVaW50MzIoMTIsdGhpcy5oMWwpLHIuc2V0VWludDMyKDE2LHRoaXMuaDJoKSxyLnNldFVpbnQzMigyMCx0aGlzLmgybCksci5zZXRVaW50MzIoMjQsdGhpcy5oM2gpLGU+PTI1NiYmci5zZXRVaW50MzIoMjgsdGhpcy5oM2wpLGU+PTM4NCYmKHIuc2V0VWludDMyKDMyLHRoaXMuaDRoKSxyLnNldFVpbnQzMigzNix0aGlzLmg0bCksci5zZXRVaW50MzIoNDAsdGhpcy5oNWgpLHIuc2V0VWludDMyKDQ0LHRoaXMuaDVsKSksNTEyPT1lJiYoci5zZXRVaW50MzIoNDgsdGhpcy5oNmgpLHIuc2V0VWludDMyKDUyLHRoaXMuaDZsKSxyLnNldFVpbnQzMig1Nix0aGlzLmg3aCksci5zZXRVaW50MzIoNjAsdGhpcy5oN2wpKSx0fSx3LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBlPW5ldyB3KHRoaXMuYml0cywhMSk7cmV0dXJuIHRoaXMuY29weVRvKGUpLGV9LHcucHJvdG90eXBlLmNvcHlUbz1mdW5jdGlvbihlKXt2YXIgdD0wLHI9W1wiaDBoXCIsXCJoMGxcIixcImgxaFwiLFwiaDFsXCIsXCJoMmhcIixcImgybFwiLFwiaDNoXCIsXCJoM2xcIixcImg0aFwiLFwiaDRsXCIsXCJoNWhcIixcImg1bFwiLFwiaDZoXCIsXCJoNmxcIixcImg3aFwiLFwiaDdsXCIsXCJzdGFydFwiLFwiYnl0ZXNcIixcImhCeXRlc1wiLFwiZmluYWxpemVkXCIsXCJoYXNoZWRcIixcImxhc3RCeXRlSW5kZXhcIl07Zm9yKHQ9MDt0PHIubGVuZ3RoOysrdCllW3JbdF1dPXRoaXNbclt0XV07Zm9yKHQ9MDt0PHRoaXMuYmxvY2tzLmxlbmd0aDsrK3QpZS5ibG9ja3NbdF09dGhpcy5ibG9ja3NbdF19LHYucHJvdG90eXBlPW5ldyB3LHYucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYody5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKSx0aGlzLmlubmVyKXt0aGlzLmlubmVyPSExO3ZhciBlPXRoaXMuYXJyYXkoKTt3LmNhbGwodGhpcyx0aGlzLmJpdHMsdGhpcy5zaGFyZWRNZW1vcnkpLHRoaXMudXBkYXRlKHRoaXMub0tleVBhZCksdGhpcy51cGRhdGUoZSksdy5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKX19LHYucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHYoW10sdGhpcy5iaXRzLCExKTt0aGlzLmNvcHlUbyhlKSxlLmlubmVyPXRoaXMuaW5uZXI7Zm9yKHZhciB0PTA7dDx0aGlzLm9LZXlQYWQubGVuZ3RoOysrdCllLm9LZXlQYWRbdF09dGhpcy5vS2V5UGFkW3RdO3JldHVybiBlfTt2YXIgUz1tKDUxMik7Uy5zaGE1MTI9UyxTLnNoYTM4ND1tKDM4NCksUy5zaGE1MTJfMjU2PW0oMjU2KSxTLnNoYTUxMl8yMjQ9bSgyMjQpLFMuc2hhNTEyLmhtYWM9QSg1MTIpLFMuc2hhMzg0LmhtYWM9QSgzODQpLFMuc2hhNTEyXzI1Ni5obWFjPUEoMjU2KSxTLnNoYTUxMl8yMjQuaG1hYz1BKDIyNCksYT9lLmV4cG9ydHM9Uzoocy5zaGE1MTI9Uy5zaGE1MTIscy5zaGEzODQ9Uy5zaGEzODQscy5zaGE1MTJfMjU2PVMuc2hhNTEyXzI1NixzLnNoYTUxMl8yMjQ9Uy5zaGE1MTJfMjI0LGMmJih2b2lkIDA9PT0obj1mdW5jdGlvbigpe3JldHVybiBTfS5jYWxsKFMscixTLGUpKXx8KGUuZXhwb3J0cz1uKSkpfSgpfSw0MzYwOihlLHQscik9Pnt2YXIgbj1yKDU5Mikuc3RyaW5naWZ5LG89cig5Mzg1KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJue3BhcnNlOm8oZSksc3RyaW5naWZ5Om59fSxlLmV4cG9ydHMucGFyc2U9bygpLGUuZXhwb3J0cy5zdHJpbmdpZnk9bn0sOTM4NTooZSx0LHIpPT57dmFyIG49bnVsbDtjb25zdCBvPS8oPzpffFxcXFx1MDA1W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkoPzpwfFxcXFx1MDA3MCkoPzpyfFxcXFx1MDA3MikoPzpvfFxcXFx1MDA2W0ZmXSkoPzp0fFxcXFx1MDA3NCkoPzpvfFxcXFx1MDA2W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkvLHM9Lyg/OmN8XFxcXHUwMDYzKSg/Om98XFxcXHUwMDZbRmZdKSg/Om58XFxcXHUwMDZbRWVdKSg/OnN8XFxcXHUwMDczKSg/OnR8XFxcXHUwMDc0KSg/OnJ8XFxcXHUwMDcyKSg/OnV8XFxcXHUwMDc1KSg/OmN8XFxcXHUwMDYzKSg/OnR8XFxcXHUwMDc0KSg/Om98XFxcXHUwMDZbRmZdKSg/OnJ8XFxcXHUwMDcyKS87ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3ZhciB0PXtzdHJpY3Q6ITEsc3RvcmVBc1N0cmluZzohMSxhbHdheXNQYXJzZUFzQmlnOiExLHVzZU5hdGl2ZUJpZ0ludDohMSxwcm90b0FjdGlvbjpcImVycm9yXCIsY29uc3RydWN0b3JBY3Rpb246XCJlcnJvclwifTtpZihudWxsIT1lKXtpZighMD09PWUuc3RyaWN0JiYodC5zdHJpY3Q9ITApLCEwPT09ZS5zdG9yZUFzU3RyaW5nJiYodC5zdG9yZUFzU3RyaW5nPSEwKSx0LmFsd2F5c1BhcnNlQXNCaWc9ITA9PT1lLmFsd2F5c1BhcnNlQXNCaWcmJmUuYWx3YXlzUGFyc2VBc0JpZyx0LnVzZU5hdGl2ZUJpZ0ludD0hMD09PWUudXNlTmF0aXZlQmlnSW50JiZlLnVzZU5hdGl2ZUJpZ0ludCx2b2lkIDAhPT1lLmNvbnN0cnVjdG9yQWN0aW9uKXtpZihcImVycm9yXCIhPT1lLmNvbnN0cnVjdG9yQWN0aW9uJiZcImlnbm9yZVwiIT09ZS5jb25zdHJ1Y3RvckFjdGlvbiYmXCJwcmVzZXJ2ZVwiIT09ZS5jb25zdHJ1Y3RvckFjdGlvbil0aHJvdyBuZXcgRXJyb3IoYEluY29ycmVjdCB2YWx1ZSBmb3IgY29uc3RydWN0b3JBY3Rpb24gb3B0aW9uLCBtdXN0IGJlIFwiZXJyb3JcIiwgXCJpZ25vcmVcIiBvciB1bmRlZmluZWQgYnV0IHBhc3NlZCAke2UuY29uc3RydWN0b3JBY3Rpb259YCk7dC5jb25zdHJ1Y3RvckFjdGlvbj1lLmNvbnN0cnVjdG9yQWN0aW9ufWlmKHZvaWQgMCE9PWUucHJvdG9BY3Rpb24pe2lmKFwiZXJyb3JcIiE9PWUucHJvdG9BY3Rpb24mJlwiaWdub3JlXCIhPT1lLnByb3RvQWN0aW9uJiZcInByZXNlcnZlXCIhPT1lLnByb3RvQWN0aW9uKXRocm93IG5ldyBFcnJvcihgSW5jb3JyZWN0IHZhbHVlIGZvciBwcm90b0FjdGlvbiBvcHRpb24sIG11c3QgYmUgXCJlcnJvclwiLCBcImlnbm9yZVwiIG9yIHVuZGVmaW5lZCBidXQgcGFzc2VkICR7ZS5wcm90b0FjdGlvbn1gKTt0LnByb3RvQWN0aW9uPWUucHJvdG9BY3Rpb259fXZhciBpLGEsYyx1LGw9eydcIic6J1wiJyxcIlxcXFxcIjpcIlxcXFxcIixcIi9cIjpcIi9cIixiOlwiXFxiXCIsZjpcIlxcZlwiLG46XCJcXG5cIixyOlwiXFxyXCIsdDpcIlxcdFwifSxoPWZ1bmN0aW9uKGUpe3Rocm93e25hbWU6XCJTeW50YXhFcnJvclwiLG1lc3NhZ2U6ZSxhdDppLHRleHQ6Y319LHA9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUhPT1hJiZoKFwiRXhwZWN0ZWQgJ1wiK2UrXCInIGluc3RlYWQgb2YgJ1wiK2ErXCInXCIpLGE9Yy5jaGFyQXQoaSksaSs9MSxhfSxmPWZ1bmN0aW9uKCl7dmFyIGUsbz1cIlwiO2ZvcihcIi1cIj09PWEmJihvPVwiLVwiLHAoXCItXCIpKTthPj1cIjBcIiYmYTw9XCI5XCI7KW8rPWEscCgpO2lmKFwiLlwiPT09YSlmb3Iobys9XCIuXCI7cCgpJiZhPj1cIjBcIiYmYTw9XCI5XCI7KW8rPWE7aWYoXCJlXCI9PT1hfHxcIkVcIj09PWEpZm9yKG8rPWEscCgpLFwiLVwiIT09YSYmXCIrXCIhPT1hfHwobys9YSxwKCkpO2E+PVwiMFwiJiZhPD1cIjlcIjspbys9YSxwKCk7aWYoZT0rbyxpc0Zpbml0ZShlKSlyZXR1cm4gbnVsbD09biYmKG49cig1MTE3KSksby5sZW5ndGg+MTU/dC5zdG9yZUFzU3RyaW5nP286dC51c2VOYXRpdmVCaWdJbnQ/QmlnSW50KG8pOm5ldyBuKG8pOnQuYWx3YXlzUGFyc2VBc0JpZz90LnVzZU5hdGl2ZUJpZ0ludD9CaWdJbnQoZSk6bmV3IG4oZSk6ZTtoKFwiQmFkIG51bWJlclwiKX0sZD1mdW5jdGlvbigpe3ZhciBlLHQscixuPVwiXCI7aWYoJ1wiJz09PWEpZm9yKHZhciBvPWk7cCgpOyl7aWYoJ1wiJz09PWEpcmV0dXJuIGktMT5vJiYobis9Yy5zdWJzdHJpbmcobyxpLTEpKSxwKCksbjtpZihcIlxcXFxcIj09PWEpe2lmKGktMT5vJiYobis9Yy5zdWJzdHJpbmcobyxpLTEpKSxwKCksXCJ1XCI9PT1hKXtmb3Iocj0wLHQ9MDt0PDQmJihlPXBhcnNlSW50KHAoKSwxNiksaXNGaW5pdGUoZSkpO3QrPTEpcj0xNipyK2U7bis9U3RyaW5nLmZyb21DaGFyQ29kZShyKX1lbHNle2lmKFwic3RyaW5nXCIhPXR5cGVvZiBsW2FdKWJyZWFrO24rPWxbYV19bz1pfX1oKFwiQmFkIHN0cmluZ1wiKX0sZz1mdW5jdGlvbigpe2Zvcig7YSYmYTw9XCIgXCI7KXAoKX07cmV0dXJuIHU9ZnVuY3Rpb24oKXtzd2l0Y2goZygpLGEpe2Nhc2VcIntcIjpyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZSxyPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoXCJ7XCI9PT1hKXtpZihwKFwie1wiKSxnKCksXCJ9XCI9PT1hKXJldHVybiBwKFwifVwiKSxyO2Zvcig7YTspe2lmKGU9ZCgpLGcoKSxwKFwiOlwiKSwhMD09PXQuc3RyaWN0JiZPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChyLGUpJiZoKCdEdXBsaWNhdGUga2V5IFwiJytlKydcIicpLCEwPT09by50ZXN0KGUpP1wiZXJyb3JcIj09PXQucHJvdG9BY3Rpb24/aChcIk9iamVjdCBjb250YWlucyBmb3JiaWRkZW4gcHJvdG90eXBlIHByb3BlcnR5XCIpOlwiaWdub3JlXCI9PT10LnByb3RvQWN0aW9uP3UoKTpyW2VdPXUoKTohMD09PXMudGVzdChlKT9cImVycm9yXCI9PT10LmNvbnN0cnVjdG9yQWN0aW9uP2goXCJPYmplY3QgY29udGFpbnMgZm9yYmlkZGVuIGNvbnN0cnVjdG9yIHByb3BlcnR5XCIpOlwiaWdub3JlXCI9PT10LmNvbnN0cnVjdG9yQWN0aW9uP3UoKTpyW2VdPXUoKTpyW2VdPXUoKSxnKCksXCJ9XCI9PT1hKXJldHVybiBwKFwifVwiKSxyO3AoXCIsXCIpLGcoKX19aChcIkJhZCBvYmplY3RcIil9KCk7Y2FzZVwiW1wiOnJldHVybiBmdW5jdGlvbigpe3ZhciBlPVtdO2lmKFwiW1wiPT09YSl7aWYocChcIltcIiksZygpLFwiXVwiPT09YSlyZXR1cm4gcChcIl1cIiksZTtmb3IoO2E7KXtpZihlLnB1c2godSgpKSxnKCksXCJdXCI9PT1hKXJldHVybiBwKFwiXVwiKSxlO3AoXCIsXCIpLGcoKX19aChcIkJhZCBhcnJheVwiKX0oKTtjYXNlJ1wiJzpyZXR1cm4gZCgpO2Nhc2VcIi1cIjpyZXR1cm4gZigpO2RlZmF1bHQ6cmV0dXJuIGE+PVwiMFwiJiZhPD1cIjlcIj9mKCk6ZnVuY3Rpb24oKXtzd2l0Y2goYSl7Y2FzZVwidFwiOnJldHVybiBwKFwidFwiKSxwKFwiclwiKSxwKFwidVwiKSxwKFwiZVwiKSwhMDtjYXNlXCJmXCI6cmV0dXJuIHAoXCJmXCIpLHAoXCJhXCIpLHAoXCJsXCIpLHAoXCJzXCIpLHAoXCJlXCIpLCExO2Nhc2VcIm5cIjpyZXR1cm4gcChcIm5cIikscChcInVcIikscChcImxcIikscChcImxcIiksbnVsbH1oKFwiVW5leHBlY3RlZCAnXCIrYStcIidcIil9KCl9fSxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBjPWUrXCJcIixpPTAsYT1cIiBcIixyPXUoKSxnKCksYSYmaChcIlN5bnRheCBlcnJvclwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2Z1bmN0aW9uIGUocixuKXt2YXIgbyxzPXJbbl07cmV0dXJuIHMmJlwib2JqZWN0XCI9PXR5cGVvZiBzJiZPYmplY3Qua2V5cyhzKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2b2lkIDAhPT0obz1lKHMsdCkpP3NbdF09bzpkZWxldGUgc1t0XX0pKSx0LmNhbGwocixuLHMpfSh7XCJcIjpyfSxcIlwiKTpyfX19LDU5MjooZSx0LHIpPT57dmFyIG49cig1MTE3KSxvPWUuZXhwb3J0czshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZSx0LHIscz0vW1xcXFxcXFwiXFx4MDAtXFx4MWZcXHg3Zi1cXHg5ZlxcdTAwYWRcXHUwNjAwLVxcdTA2MDRcXHUwNzBmXFx1MTdiNFxcdTE3YjVcXHUyMDBjLVxcdTIwMGZcXHUyMDI4LVxcdTIwMmZcXHUyMDYwLVxcdTIwNmZcXHVmZWZmXFx1ZmZmMC1cXHVmZmZmXS9nLGk9e1wiXFxiXCI6XCJcXFxcYlwiLFwiXFx0XCI6XCJcXFxcdFwiLFwiXFxuXCI6XCJcXFxcblwiLFwiXFxmXCI6XCJcXFxcZlwiLFwiXFxyXCI6XCJcXFxcclwiLCdcIic6J1xcXFxcIicsXCJcXFxcXCI6XCJcXFxcXFxcXFwifTtmdW5jdGlvbiBhKGUpe3JldHVybiBzLmxhc3RJbmRleD0wLHMudGVzdChlKT8nXCInK2UucmVwbGFjZShzLChmdW5jdGlvbihlKXt2YXIgdD1pW2VdO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P3Q6XCJcXFxcdVwiKyhcIjAwMDBcIitlLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCl9KSkrJ1wiJzonXCInK2UrJ1wiJ31mdW5jdGlvbiBjKG8scyl7dmFyIGksdSxsLGgscCxmPWUsZD1zW29dLGc9bnVsbCE9ZCYmKGQgaW5zdGFuY2VvZiBufHxuLmlzQmlnTnVtYmVyKGQpKTtzd2l0Y2goZCYmXCJvYmplY3RcIj09dHlwZW9mIGQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGQudG9KU09OJiYoZD1kLnRvSlNPTihvKSksXCJmdW5jdGlvblwiPT10eXBlb2YgciYmKGQ9ci5jYWxsKHMsbyxkKSksdHlwZW9mIGQpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBnP2Q6YShkKTtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZCk/U3RyaW5nKGQpOlwibnVsbFwiO2Nhc2VcImJvb2xlYW5cIjpjYXNlXCJudWxsXCI6Y2FzZVwiYmlnaW50XCI6cmV0dXJuIFN0cmluZyhkKTtjYXNlXCJvYmplY3RcIjppZighZClyZXR1cm5cIm51bGxcIjtpZihlKz10LHA9W10sXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShkKSl7Zm9yKGg9ZC5sZW5ndGgsaT0wO2k8aDtpKz0xKXBbaV09YyhpLGQpfHxcIm51bGxcIjtyZXR1cm4gbD0wPT09cC5sZW5ndGg/XCJbXVwiOmU/XCJbXFxuXCIrZStwLmpvaW4oXCIsXFxuXCIrZSkrXCJcXG5cIitmK1wiXVwiOlwiW1wiK3Auam9pbihcIixcIikrXCJdXCIsZT1mLGx9aWYociYmXCJvYmplY3RcIj09dHlwZW9mIHIpZm9yKGg9ci5sZW5ndGgsaT0wO2k8aDtpKz0xKVwic3RyaW5nXCI9PXR5cGVvZiByW2ldJiYobD1jKHU9cltpXSxkKSkmJnAucHVzaChhKHUpKyhlP1wiOiBcIjpcIjpcIikrbCk7ZWxzZSBPYmplY3Qua2V5cyhkKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgcj1jKHQsZCk7ciYmcC5wdXNoKGEodCkrKGU/XCI6IFwiOlwiOlwiKStyKX0pKTtyZXR1cm4gbD0wPT09cC5sZW5ndGg/XCJ7fVwiOmU/XCJ7XFxuXCIrZStwLmpvaW4oXCIsXFxuXCIrZSkrXCJcXG5cIitmK1wifVwiOlwie1wiK3Auam9pbihcIixcIikrXCJ9XCIsZT1mLGx9fVwiZnVuY3Rpb25cIiE9dHlwZW9mIG8uc3RyaW5naWZ5JiYoby5zdHJpbmdpZnk9ZnVuY3Rpb24obixvLHMpe3ZhciBpO2lmKGU9XCJcIix0PVwiXCIsXCJudW1iZXJcIj09dHlwZW9mIHMpZm9yKGk9MDtpPHM7aSs9MSl0Kz1cIiBcIjtlbHNlXCJzdHJpbmdcIj09dHlwZW9mIHMmJih0PXMpO2lmKHI9byxvJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiYoXCJvYmplY3RcIiE9dHlwZW9mIG98fFwibnVtYmVyXCIhPXR5cGVvZiBvLmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKFwiSlNPTi5zdHJpbmdpZnlcIik7cmV0dXJuIGMoXCJcIix7XCJcIjpufSl9KX0oKX0sMzEyNjooZSx0LHIpPT57dmFyIG49XCJmdW5jdGlvblwiPT10eXBlb2YgTWFwJiZNYXAucHJvdG90eXBlLG89T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciYmbj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1hcC5wcm90b3R5cGUsXCJzaXplXCIpOm51bGwscz1uJiZvJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmdldD9vLmdldDpudWxsLGk9biYmTWFwLnByb3RvdHlwZS5mb3JFYWNoLGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU2V0JiZTZXQucHJvdG90eXBlLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciYmYT9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFNldC5wcm90b3R5cGUsXCJzaXplXCIpOm51bGwsdT1hJiZjJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBjLmdldD9jLmdldDpudWxsLGw9YSYmU2V0LnByb3RvdHlwZS5mb3JFYWNoLGg9XCJmdW5jdGlvblwiPT10eXBlb2YgV2Vha01hcCYmV2Vha01hcC5wcm90b3R5cGU/V2Vha01hcC5wcm90b3R5cGUuaGFzOm51bGwscD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBXZWFrU2V0JiZXZWFrU2V0LnByb3RvdHlwZT9XZWFrU2V0LnByb3RvdHlwZS5oYXM6bnVsbCxmPVwiZnVuY3Rpb25cIj09dHlwZW9mIFdlYWtSZWYmJldlYWtSZWYucHJvdG90eXBlP1dlYWtSZWYucHJvdG90eXBlLmRlcmVmOm51bGwsZD1Cb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLGc9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyx5PUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyxtPVN0cmluZy5wcm90b3R5cGUubWF0Y2gsYj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBCaWdJbnQ/QmlnSW50LnByb3RvdHlwZS52YWx1ZU9mOm51bGwsQT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLHc9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP1N5bWJvbC5wcm90b3R5cGUudG9TdHJpbmc6bnVsbCx2PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJvYmplY3RcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcixTPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUseD0oXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdD9SZWZsZWN0LmdldFByb3RvdHlwZU9mOk9iamVjdC5nZXRQcm90b3R5cGVPZil8fChbXS5fX3Byb3RvX189PT1BcnJheS5wcm90b3R5cGU/ZnVuY3Rpb24oZSl7cmV0dXJuIGUuX19wcm90b19ffTpudWxsKSxFPXIoNDY1NCkuY3VzdG9tLFQ9RSYmSShFKT9FOm51bGwsXz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnZvaWQgMCE9PVN5bWJvbC50b1N0cmluZ1RhZz9TeW1ib2wudG9TdHJpbmdUYWc6bnVsbDtmdW5jdGlvbiBCKGUsdCxyKXt2YXIgbj1cImRvdWJsZVwiPT09KHIucXVvdGVTdHlsZXx8dCk/J1wiJzpcIidcIjtyZXR1cm4gbitlK259ZnVuY3Rpb24gVShlKXtyZXR1cm4gU3RyaW5nKGUpLnJlcGxhY2UoL1wiL2csXCImcXVvdDtcIil9ZnVuY3Rpb24gayhlKXtyZXR1cm4hKFwiW29iamVjdCBBcnJheV1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfWZ1bmN0aW9uIEkoZSl7aWYodilyZXR1cm4gZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUgaW5zdGFuY2VvZiBTeW1ib2w7aWYoXCJzeW1ib2xcIj09dHlwZW9mIGUpcmV0dXJuITA7aWYoIWV8fFwib2JqZWN0XCIhPXR5cGVvZiBlfHwhdylyZXR1cm4hMTt0cnl7cmV0dXJuIHcuY2FsbChlKSwhMH1jYXRjaChlKXt9cmV0dXJuITF9ZS5leHBvcnRzPWZ1bmN0aW9uIGUodCxyLG4sbyl7dmFyIGE9cnx8e307aWYoUihhLFwicXVvdGVTdHlsZVwiKSYmXCJzaW5nbGVcIiE9PWEucXVvdGVTdHlsZSYmXCJkb3VibGVcIiE9PWEucXVvdGVTdHlsZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gXCJxdW90ZVN0eWxlXCIgbXVzdCBiZSBcInNpbmdsZVwiIG9yIFwiZG91YmxlXCInKTtpZihSKGEsXCJtYXhTdHJpbmdMZW5ndGhcIikmJihcIm51bWJlclwiPT10eXBlb2YgYS5tYXhTdHJpbmdMZW5ndGg/YS5tYXhTdHJpbmdMZW5ndGg8MCYmYS5tYXhTdHJpbmdMZW5ndGghPT0xLzA6bnVsbCE9PWEubWF4U3RyaW5nTGVuZ3RoKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gXCJtYXhTdHJpbmdMZW5ndGhcIiwgaWYgcHJvdmlkZWQsIG11c3QgYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLCBJbmZpbml0eSwgb3IgYG51bGxgJyk7dmFyIGM9IVIoYSxcImN1c3RvbUluc3BlY3RcIil8fGEuY3VzdG9tSW5zcGVjdDtpZihcImJvb2xlYW5cIiE9dHlwZW9mIGMpdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIFwiY3VzdG9tSW5zcGVjdFwiLCBpZiBwcm92aWRlZCwgbXVzdCBiZSBgdHJ1ZWAgb3IgYGZhbHNlYCcpO2lmKFIoYSxcImluZGVudFwiKSYmbnVsbCE9PWEuaW5kZW50JiZcIlxcdFwiIT09YS5pbmRlbnQmJiEocGFyc2VJbnQoYS5pbmRlbnQsMTApPT09YS5pbmRlbnQmJmEuaW5kZW50PjApKXRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgXCJpbmRlbnRcIiBtdXN0IGJlIFwiXFxcXHRcIiwgYW4gaW50ZWdlciA+IDAsIG9yIGBudWxsYCcpO2lmKHZvaWQgMD09PXQpcmV0dXJuXCJ1bmRlZmluZWRcIjtpZihudWxsPT09dClyZXR1cm5cIm51bGxcIjtpZihcImJvb2xlYW5cIj09dHlwZW9mIHQpcmV0dXJuIHQ/XCJ0cnVlXCI6XCJmYWxzZVwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBOKHQsYSk7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIDA9PT10PzEvMC90PjA/XCIwXCI6XCItMFwiOlN0cmluZyh0KTtpZihcImJpZ2ludFwiPT10eXBlb2YgdClyZXR1cm4gU3RyaW5nKHQpK1wiblwiO3ZhciBnPXZvaWQgMD09PWEuZGVwdGg/NTphLmRlcHRoO2lmKHZvaWQgMD09PW4mJihuPTApLG4+PWcmJmc+MCYmXCJvYmplY3RcIj09dHlwZW9mIHQpcmV0dXJuIGsodCk/XCJbQXJyYXldXCI6XCJbT2JqZWN0XVwiO3ZhciBBLFM9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihcIlxcdFwiPT09ZS5pbmRlbnQpcj1cIlxcdFwiO2Vsc2V7aWYoIShcIm51bWJlclwiPT10eXBlb2YgZS5pbmRlbnQmJmUuaW5kZW50PjApKXJldHVybiBudWxsO3I9QXJyYXkoZS5pbmRlbnQrMSkuam9pbihcIiBcIil9cmV0dXJue2Jhc2U6cixwcmV2OkFycmF5KHQrMSkuam9pbihyKX19KGEsbik7aWYodm9pZCAwPT09bylvPVtdO2Vsc2UgaWYoRChvLHQpPj0wKXJldHVyblwiW0NpcmN1bGFyXVwiO2Z1bmN0aW9uIEUodCxyLHMpe2lmKHImJihvPW8uc2xpY2UoKSkucHVzaChyKSxzKXt2YXIgaT17ZGVwdGg6YS5kZXB0aH07cmV0dXJuIFIoYSxcInF1b3RlU3R5bGVcIikmJihpLnF1b3RlU3R5bGU9YS5xdW90ZVN0eWxlKSxlKHQsaSxuKzEsbyl9cmV0dXJuIGUodCxhLG4rMSxvKX1pZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0KXt2YXIgQz1mdW5jdGlvbihlKXtpZihlLm5hbWUpcmV0dXJuIGUubmFtZTt2YXIgdD1tLmNhbGwoeS5jYWxsKGUpLC9eZnVuY3Rpb25cXHMqKFtcXHckXSspLyk7cmV0dXJuIHQ/dFsxXTpudWxsfSh0KSxQPU0odCxFKTtyZXR1cm5cIltGdW5jdGlvblwiKyhDP1wiOiBcIitDOlwiIChhbm9ueW1vdXMpXCIpK1wiXVwiKyhQLmxlbmd0aD4wP1wiIHsgXCIrUC5qb2luKFwiLCBcIikrXCIgfVwiOlwiXCIpfWlmKEkodCkpe3ZhciBIPXY/U3RyaW5nKHQpLnJlcGxhY2UoL14oU3ltYm9sXFwoLipcXCkpX1teKV0qJC8sXCIkMVwiKTp3LmNhbGwodCk7cmV0dXJuXCJvYmplY3RcIiE9dHlwZW9mIHR8fHY/SDpMKEgpfWlmKChBPXQpJiZcIm9iamVjdFwiPT10eXBlb2YgQSYmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBIVE1MRWxlbWVudCYmQSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50fHxcInN0cmluZ1wiPT10eXBlb2YgQS5ub2RlTmFtZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgQS5nZXRBdHRyaWJ1dGUpKXtmb3IodmFyIEc9XCI8XCIrU3RyaW5nKHQubm9kZU5hbWUpLnRvTG93ZXJDYXNlKCksSz10LmF0dHJpYnV0ZXN8fFtdLHE9MDtxPEsubGVuZ3RoO3ErKylHKz1cIiBcIitLW3FdLm5hbWUrXCI9XCIrQihVKEtbcV0udmFsdWUpLFwiZG91YmxlXCIsYSk7cmV0dXJuIEcrPVwiPlwiLHQuY2hpbGROb2RlcyYmdC5jaGlsZE5vZGVzLmxlbmd0aCYmKEcrPVwiLi4uXCIpLEcrXCI8L1wiK1N0cmluZyh0Lm5vZGVOYW1lKS50b0xvd2VyQ2FzZSgpK1wiPlwifWlmKGsodCkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm5cIltdXCI7dmFyICQ9TSh0LEUpO3JldHVybiBTJiYhZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0KyspaWYoRChlW3RdLFwiXFxuXCIpPj0wKXJldHVybiExO3JldHVybiEwfSgkKT9cIltcIitqKCQsUykrXCJdXCI6XCJbIFwiKyQuam9pbihcIiwgXCIpK1wiIF1cIn1pZihmdW5jdGlvbihlKXtyZXR1cm4hKFwiW29iamVjdCBFcnJvcl1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSl7dmFyIFY9TSh0LEUpO3JldHVybiAwPT09Vi5sZW5ndGg/XCJbXCIrU3RyaW5nKHQpK1wiXVwiOlwieyBbXCIrU3RyaW5nKHQpK1wiXSBcIitWLmpvaW4oXCIsIFwiKStcIiB9XCJ9aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJmMpe2lmKFQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbVF0pcmV0dXJuIHRbVF0oKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lmluc3BlY3QpcmV0dXJuIHQuaW5zcGVjdCgpfWlmKGZ1bmN0aW9uKGUpe2lmKCFzfHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e3MuY2FsbChlKTt0cnl7dS5jYWxsKGUpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgTWFwfWNhdGNoKGUpe31yZXR1cm4hMX0odCkpe3ZhciBXPVtdO3JldHVybiBpLmNhbGwodCwoZnVuY3Rpb24oZSxyKXtXLnB1c2goRShyLHQsITApK1wiID0+IFwiK0UoZSx0KSl9KSkseihcIk1hcFwiLHMuY2FsbCh0KSxXLFMpfWlmKGZ1bmN0aW9uKGUpe2lmKCF1fHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e3UuY2FsbChlKTt0cnl7cy5jYWxsKGUpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgU2V0fWNhdGNoKGUpe31yZXR1cm4hMX0odCkpe3ZhciBYPVtdO3JldHVybiBsLmNhbGwodCwoZnVuY3Rpb24oZSl7WC5wdXNoKEUoZSx0KSl9KSkseihcIlNldFwiLHUuY2FsbCh0KSxYLFMpfWlmKGZ1bmN0aW9uKGUpe2lmKCFofHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e2guY2FsbChlLGgpO3RyeXtwLmNhbGwoZSxwKX1jYXRjaChlKXtyZXR1cm4hMH1yZXR1cm4gZSBpbnN0YW5jZW9mIFdlYWtNYXB9Y2F0Y2goZSl7fXJldHVybiExfSh0KSlyZXR1cm4gRihcIldlYWtNYXBcIik7aWYoZnVuY3Rpb24oZSl7aWYoIXB8fCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZSlyZXR1cm4hMTt0cnl7cC5jYWxsKGUscCk7dHJ5e2guY2FsbChlLGgpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgV2Vha1NldH1jYXRjaChlKXt9cmV0dXJuITF9KHQpKXJldHVybiBGKFwiV2Vha1NldFwiKTtpZihmdW5jdGlvbihlKXtpZighZnx8IWV8fFwib2JqZWN0XCIhPXR5cGVvZiBlKXJldHVybiExO3RyeXtyZXR1cm4gZi5jYWxsKGUpLCEwfWNhdGNoKGUpe31yZXR1cm4hMX0odCkpcmV0dXJuIEYoXCJXZWFrUmVmXCIpO2lmKGZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IE51bWJlcl1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSlyZXR1cm4gTChFKE51bWJlcih0KSkpO2lmKGZ1bmN0aW9uKGUpe2lmKCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZXx8IWIpcmV0dXJuITE7dHJ5e3JldHVybiBiLmNhbGwoZSksITB9Y2F0Y2goZSl7fXJldHVybiExfSh0KSlyZXR1cm4gTChFKGIuY2FsbCh0KSkpO2lmKGZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IEJvb2xlYW5dXCIhPT1PKGUpfHxfJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXyBpbiBlKX0odCkpcmV0dXJuIEwoZC5jYWxsKHQpKTtpZihmdW5jdGlvbihlKXtyZXR1cm4hKFwiW29iamVjdCBTdHJpbmddXCIhPT1PKGUpfHxfJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXyBpbiBlKX0odCkpcmV0dXJuIEwoRShTdHJpbmcodCkpKTtpZighZnVuY3Rpb24oZSl7cmV0dXJuIShcIltvYmplY3QgRGF0ZV1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSYmIWZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IFJlZ0V4cF1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSl7dmFyIFk9TSh0LEUpLEo9eD94KHQpPT09T2JqZWN0LnByb3RvdHlwZTp0IGluc3RhbmNlb2YgT2JqZWN0fHx0LmNvbnN0cnVjdG9yPT09T2JqZWN0LFE9dCBpbnN0YW5jZW9mIE9iamVjdD9cIlwiOlwibnVsbCBwcm90b3R5cGVcIixaPSFKJiZfJiZPYmplY3QodCk9PT10JiZfIGluIHQ/Tyh0KS5zbGljZSg4LC0xKTpRP1wiT2JqZWN0XCI6XCJcIixlZT0oSnx8XCJmdW5jdGlvblwiIT10eXBlb2YgdC5jb25zdHJ1Y3Rvcj9cIlwiOnQuY29uc3RydWN0b3IubmFtZT90LmNvbnN0cnVjdG9yLm5hbWUrXCIgXCI6XCJcIikrKFp8fFE/XCJbXCIrW10uY29uY2F0KFp8fFtdLFF8fFtdKS5qb2luKFwiOiBcIikrXCJdIFwiOlwiXCIpO3JldHVybiAwPT09WS5sZW5ndGg/ZWUrXCJ7fVwiOlM/ZWUrXCJ7XCIraihZLFMpK1wifVwiOmVlK1wieyBcIitZLmpvaW4oXCIsIFwiKStcIiB9XCJ9cmV0dXJuIFN0cmluZyh0KX07dmFyIEM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW4gdGhpc307ZnVuY3Rpb24gUihlLHQpe3JldHVybiBDLmNhbGwoZSx0KX1mdW5jdGlvbiBPKGUpe3JldHVybiBnLmNhbGwoZSl9ZnVuY3Rpb24gRChlLHQpe2lmKGUuaW5kZXhPZilyZXR1cm4gZS5pbmRleE9mKHQpO2Zvcih2YXIgcj0wLG49ZS5sZW5ndGg7cjxuO3IrKylpZihlW3JdPT09dClyZXR1cm4gcjtyZXR1cm4tMX1mdW5jdGlvbiBOKGUsdCl7aWYoZS5sZW5ndGg+dC5tYXhTdHJpbmdMZW5ndGgpe3ZhciByPWUubGVuZ3RoLXQubWF4U3RyaW5nTGVuZ3RoLG49XCIuLi4gXCIrcitcIiBtb3JlIGNoYXJhY3RlclwiKyhyPjE/XCJzXCI6XCJcIik7cmV0dXJuIE4oZS5zbGljZSgwLHQubWF4U3RyaW5nTGVuZ3RoKSx0KStufXJldHVybiBCKGUucmVwbGFjZSgvKFsnXFxcXF0pL2csXCJcXFxcJDFcIikucmVwbGFjZSgvW1xceDAwLVxceDFmXS9nLFApLFwic2luZ2xlXCIsdCl9ZnVuY3Rpb24gUChlKXt2YXIgdD1lLmNoYXJDb2RlQXQoMCkscj17ODpcImJcIiw5OlwidFwiLDEwOlwiblwiLDEyOlwiZlwiLDEzOlwiclwifVt0XTtyZXR1cm4gcj9cIlxcXFxcIityOlwiXFxcXHhcIisodDwxNj9cIjBcIjpcIlwiKSt0LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIEwoZSl7cmV0dXJuXCJPYmplY3QoXCIrZStcIilcIn1mdW5jdGlvbiBGKGUpe3JldHVybiBlK1wiIHsgPyB9XCJ9ZnVuY3Rpb24geihlLHQscixuKXtyZXR1cm4gZStcIiAoXCIrdCtcIikge1wiKyhuP2oocixuKTpyLmpvaW4oXCIsIFwiKSkrXCJ9XCJ9ZnVuY3Rpb24gaihlLHQpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5cIlwiO3ZhciByPVwiXFxuXCIrdC5wcmV2K3QuYmFzZTtyZXR1cm4gcitlLmpvaW4oXCIsXCIrcikrXCJcXG5cIit0LnByZXZ9ZnVuY3Rpb24gTShlLHQpe3ZhciByPWsoZSksbj1bXTtpZihyKXtuLmxlbmd0aD1lLmxlbmd0aDtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKyluW29dPVIoZSxvKT90KGVbb10sZSk6XCJcIn12YXIgcyxpPVwiZnVuY3Rpb25cIj09dHlwZW9mIEE/QShlKTpbXTtpZih2KXtzPXt9O2Zvcih2YXIgYT0wO2E8aS5sZW5ndGg7YSsrKXNbXCIkXCIraVthXV09aVthXX1mb3IodmFyIGMgaW4gZSlSKGUsYykmJihyJiZTdHJpbmcoTnVtYmVyKGMpKT09PWMmJmM8ZS5sZW5ndGh8fHYmJnNbXCIkXCIrY11pbnN0YW5jZW9mIFN5bWJvbHx8KC9bXlxcdyRdLy50ZXN0KGMpP24ucHVzaCh0KGMsZSkrXCI6IFwiK3QoZVtjXSxlKSk6bi5wdXNoKGMrXCI6IFwiK3QoZVtjXSxlKSkpKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBBKWZvcih2YXIgdT0wO3U8aS5sZW5ndGg7dSsrKVMuY2FsbChlLGlbdV0pJiZuLnB1c2goXCJbXCIrdChpW3VdKStcIl06IFwiK3QoZVtpW3VdXSxlKSk7cmV0dXJuIG59fSwzNjgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDE4MDEpLG89cig3NjE1KSxzPXIoMzEyNiksaT1uKFwiJVR5cGVFcnJvciVcIiksYT1uKFwiJVdlYWtNYXAlXCIsITApLGM9bihcIiVNYXAlXCIsITApLHU9byhcIldlYWtNYXAucHJvdG90eXBlLmdldFwiLCEwKSxsPW8oXCJXZWFrTWFwLnByb3RvdHlwZS5zZXRcIiwhMCksaD1vKFwiV2Vha01hcC5wcm90b3R5cGUuaGFzXCIsITApLHA9byhcIk1hcC5wcm90b3R5cGUuZ2V0XCIsITApLGY9byhcIk1hcC5wcm90b3R5cGUuc2V0XCIsITApLGQ9byhcIk1hcC5wcm90b3R5cGUuaGFzXCIsITApLGc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbj1lO251bGwhPT0ocj1uLm5leHQpO249cilpZihyLmtleT09PXQpcmV0dXJuIG4ubmV4dD1yLm5leHQsci5uZXh0PWUubmV4dCxlLm5leHQ9cixyfTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbj17YXNzZXJ0OmZ1bmN0aW9uKGUpe2lmKCFuLmhhcyhlKSl0aHJvdyBuZXcgaShcIlNpZGUgY2hhbm5lbCBkb2VzIG5vdCBjb250YWluIFwiK3MoZSkpfSxnZXQ6ZnVuY3Rpb24obil7aWYoYSYmbiYmKFwib2JqZWN0XCI9PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKSl7aWYoZSlyZXR1cm4gdShlLG4pfWVsc2UgaWYoYyl7aWYodClyZXR1cm4gcCh0LG4pfWVsc2UgaWYocilyZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgcj1nKGUsdCk7cmV0dXJuIHImJnIudmFsdWV9KHIsbil9LGhhczpmdW5jdGlvbihuKXtpZihhJiZuJiYoXCJvYmplY3RcIj09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pKXtpZihlKXJldHVybiBoKGUsbil9ZWxzZSBpZihjKXtpZih0KXJldHVybiBkKHQsbil9ZWxzZSBpZihyKXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiEhZyhlLHQpfShyLG4pO3JldHVybiExfSxzZXQ6ZnVuY3Rpb24obixvKXthJiZuJiYoXCJvYmplY3RcIj09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pPyhlfHwoZT1uZXcgYSksbChlLG4sbykpOmM/KHR8fCh0PW5ldyBjKSxmKHQsbixvKSk6KHJ8fChyPXtrZXk6e30sbmV4dDpudWxsfSksZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWcoZSx0KTtuP24udmFsdWU9cjplLm5leHQ9e2tleTp0LG5leHQ6ZS5uZXh0LHZhbHVlOnJ9fShyLG4sbykpfX07cmV0dXJuIG59fSwyODU4OmU9PntcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciByPTAsbj1uZXcgQXJyYXkodCk7cjx0O3IrKyluW3JdPWVbcl07cmV0dXJuIG59ZnVuY3Rpb24gcigpe3RoaXMuX2RlZmF1bHRzPVtdfVtcInVzZVwiLFwib25cIixcIm9uY2VcIixcInNldFwiLFwicXVlcnlcIixcInR5cGVcIixcImFjY2VwdFwiLFwiYXV0aFwiLFwid2l0aENyZWRlbnRpYWxzXCIsXCJzb3J0UXVlcnlcIixcInJldHJ5XCIsXCJva1wiLFwicmVkaXJlY3RzXCIsXCJ0aW1lb3V0XCIsXCJidWZmZXJcIixcInNlcmlhbGl6ZVwiLFwicGFyc2VcIixcImNhXCIsXCJrZXlcIixcInBmeFwiLFwiY2VydFwiLFwiZGlzYWJsZVRMU0NlcnRzXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe3IucHJvdG90eXBlW2VdPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1hcmd1bWVudHNbbl07cmV0dXJuIHRoaXMuX2RlZmF1bHRzLnB1c2goe2ZuOmUsYXJnczpyfSksdGhpc319KSksci5wcm90b3R5cGUuX3NldERlZmF1bHRzPWZ1bmN0aW9uKGUpe3RoaXMuX2RlZmF1bHRzLmZvckVhY2goKGZ1bmN0aW9uKHIpe3ZhciBuO2Vbci5mbl0uYXBwbHkoZSxmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiB0KGUpfShuPXIuYXJncyl8fGZ1bmN0aW9uKGUpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KG4pfHxmdW5jdGlvbihlLHIpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0KGUscik7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT90KGUscik6dm9pZCAwfX0obil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpfSkpfSxlLmV4cG9ydHM9cn0sNTM5MTooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4obj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9dmFyIG87XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz9vPXdpbmRvdzpcInVuZGVmaW5lZFwiPT10eXBlb2Ygc2VsZj8oY29uc29sZS53YXJuKFwiVXNpbmcgYnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBpbiBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKSxvPXZvaWQgMCk6bz1zZWxmO3ZhciBzPXIoMTA2OSksaT1yKDU3OTkpLGE9cigzMDY1KSxjPXIoNDI4NyksdT1yKDE5NjApLGw9cig5NjkpLGg9cigyODU4KTtmdW5jdGlvbiBwKCl7fWUuZXhwb3J0cz1mdW5jdGlvbihlLHIpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHI/bmV3IHQuUmVxdWVzdChcIkdFVFwiLGUpLmVuZChyKToxPT09YXJndW1lbnRzLmxlbmd0aD9uZXcgdC5SZXF1ZXN0KFwiR0VUXCIsZSk6bmV3IHQuUmVxdWVzdChlLHIpfTt2YXIgZj10PWUuZXhwb3J0czt0LlJlcXVlc3Q9dyxmLmdldFhIUj1mdW5jdGlvbigpe2lmKG8uWE1MSHR0cFJlcXVlc3QmJighby5sb2NhdGlvbnx8XCJmaWxlOlwiIT09by5sb2NhdGlvbi5wcm90b2NvbHx8IW8uQWN0aXZlWE9iamVjdCkpcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdDt0cnl7cmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTEhUVFBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUC42LjBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUC4zLjBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUFwiKX1jYXRjaChlKXt9dGhyb3cgbmV3IEVycm9yKFwiQnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBjb3VsZCBub3QgZmluZCBYSFJcIil9O3ZhciBkPVwiXCIudHJpbT9mdW5jdGlvbihlKXtyZXR1cm4gZS50cmltKCl9OmZ1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoLyheXFxzKnxcXHMqJCkvZyxcIlwiKX07ZnVuY3Rpb24gZyhlKXtpZighdShlKSlyZXR1cm4gZTt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmeSh0LHIsZVtyXSk7cmV0dXJuIHQuam9pbihcIiZcIil9ZnVuY3Rpb24geShlLHQscil7aWYodm9pZCAwIT09cilpZihudWxsIT09cilpZihBcnJheS5pc0FycmF5KHIpKXIuZm9yRWFjaCgoZnVuY3Rpb24ocil7eShlLHQscil9KSk7ZWxzZSBpZih1KHIpKWZvcih2YXIgbiBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLG4pJiZ5KGUsXCJcIi5jb25jYXQodCxcIltcIikuY29uY2F0KG4sXCJdXCIpLHJbbl0pO2Vsc2UgZS5wdXNoKGVuY29kZVVSSSh0KStcIj1cIitlbmNvZGVVUklDb21wb25lbnQocikpO2Vsc2UgZS5wdXNoKGVuY29kZVVSSSh0KSl9ZnVuY3Rpb24gbShlKXtmb3IodmFyIHQscixuPXt9LG89ZS5zcGxpdChcIiZcIikscz0wLGk9by5sZW5ndGg7czxpOysrcyktMT09PShyPSh0PW9bc10pLmluZGV4T2YoXCI9XCIpKT9uW2RlY29kZVVSSUNvbXBvbmVudCh0KV09XCJcIjpuW2RlY29kZVVSSUNvbXBvbmVudCh0LnNsaWNlKDAscikpXT1kZWNvZGVVUklDb21wb25lbnQodC5zbGljZShyKzEpKTtyZXR1cm4gbn1mdW5jdGlvbiBiKGUpe3JldHVybi9bLytdanNvbigkfFteLVxcd10pL2kudGVzdChlKX1mdW5jdGlvbiBBKGUpe3RoaXMucmVxPWUsdGhpcy54aHI9dGhpcy5yZXEueGhyLHRoaXMudGV4dD1cIkhFQURcIiE9PXRoaXMucmVxLm1ldGhvZCYmKFwiXCI9PT10aGlzLnhoci5yZXNwb25zZVR5cGV8fFwidGV4dFwiPT09dGhpcy54aHIucmVzcG9uc2VUeXBlKXx8dm9pZCAwPT09dGhpcy54aHIucmVzcG9uc2VUeXBlP3RoaXMueGhyLnJlc3BvbnNlVGV4dDpudWxsLHRoaXMuc3RhdHVzVGV4dD10aGlzLnJlcS54aHIuc3RhdHVzVGV4dDt2YXIgdD10aGlzLnhoci5zdGF0dXM7MTIyMz09PXQmJih0PTIwNCksdGhpcy5fc2V0U3RhdHVzUHJvcGVydGllcyh0KSx0aGlzLmhlYWRlcnM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixvLHM9ZS5zcGxpdCgvXFxyP1xcbi8pLGk9e30sYT0wLGM9cy5sZW5ndGg7YTxjOysrYSktMSE9PSh0PShyPXNbYV0pLmluZGV4T2YoXCI6XCIpKSYmKG49ci5zbGljZSgwLHQpLnRvTG93ZXJDYXNlKCksbz1kKHIuc2xpY2UodCsxKSksaVtuXT1vKTtyZXR1cm4gaX0odGhpcy54aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpLHRoaXMuaGVhZGVyPXRoaXMuaGVhZGVycyx0aGlzLmhlYWRlcltcImNvbnRlbnQtdHlwZVwiXT10aGlzLnhoci5nZXRSZXNwb25zZUhlYWRlcihcImNvbnRlbnQtdHlwZVwiKSx0aGlzLl9zZXRIZWFkZXJQcm9wZXJ0aWVzKHRoaXMuaGVhZGVyKSxudWxsPT09dGhpcy50ZXh0JiZlLl9yZXNwb25zZVR5cGU/dGhpcy5ib2R5PXRoaXMueGhyLnJlc3BvbnNlOnRoaXMuYm9keT1cIkhFQURcIj09PXRoaXMucmVxLm1ldGhvZD9udWxsOnRoaXMuX3BhcnNlQm9keSh0aGlzLnRleHQ/dGhpcy50ZXh0OnRoaXMueGhyLnJlc3BvbnNlKX1mdW5jdGlvbiB3KGUsdCl7dmFyIHI9dGhpczt0aGlzLl9xdWVyeT10aGlzLl9xdWVyeXx8W10sdGhpcy5tZXRob2Q9ZSx0aGlzLnVybD10LHRoaXMuaGVhZGVyPXt9LHRoaXMuX2hlYWRlcj17fSx0aGlzLm9uKFwiZW5kXCIsKGZ1bmN0aW9uKCl7dmFyIGUsdD1udWxsLG49bnVsbDt0cnl7bj1uZXcgQShyKX1jYXRjaChlKXtyZXR1cm4odD1uZXcgRXJyb3IoXCJQYXJzZXIgaXMgdW5hYmxlIHRvIHBhcnNlIHRoZSByZXNwb25zZVwiKSkucGFyc2U9ITAsdC5vcmlnaW5hbD1lLHIueGhyPyh0LnJhd1Jlc3BvbnNlPXZvaWQgMD09PXIueGhyLnJlc3BvbnNlVHlwZT9yLnhoci5yZXNwb25zZVRleHQ6ci54aHIucmVzcG9uc2UsdC5zdGF0dXM9ci54aHIuc3RhdHVzP3IueGhyLnN0YXR1czpudWxsLHQuc3RhdHVzQ29kZT10LnN0YXR1cyk6KHQucmF3UmVzcG9uc2U9bnVsbCx0LnN0YXR1cz1udWxsKSxyLmNhbGxiYWNrKHQpfXIuZW1pdChcInJlc3BvbnNlXCIsbik7dHJ5e3IuX2lzUmVzcG9uc2VPSyhuKXx8KGU9bmV3IEVycm9yKG4uc3RhdHVzVGV4dHx8bi50ZXh0fHxcIlVuc3VjY2Vzc2Z1bCBIVFRQIHJlc3BvbnNlXCIpKX1jYXRjaCh0KXtlPXR9ZT8oZS5vcmlnaW5hbD10LGUucmVzcG9uc2U9bixlLnN0YXR1cz1uLnN0YXR1cyxyLmNhbGxiYWNrKGUsbikpOnIuY2FsbGJhY2sobnVsbCxuKX0pKX1mdW5jdGlvbiB2KGUsdCxyKXt2YXIgbj1mKFwiREVMRVRFXCIsZSk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKHI9dCx0PW51bGwpLHQmJm4uc2VuZCh0KSxyJiZuLmVuZChyKSxufWYuc2VyaWFsaXplT2JqZWN0PWcsZi5wYXJzZVN0cmluZz1tLGYudHlwZXM9e2h0bWw6XCJ0ZXh0L2h0bWxcIixqc29uOlwiYXBwbGljYXRpb24vanNvblwiLHhtbDpcInRleHQveG1sXCIsdXJsZW5jb2RlZDpcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLGZvcm06XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcImZvcm0tZGF0YVwiOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJ9LGYuc2VyaWFsaXplPXtcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiOmEuc3RyaW5naWZ5LFwiYXBwbGljYXRpb24vanNvblwiOml9LGYucGFyc2U9e1wiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCI6bSxcImFwcGxpY2F0aW9uL2pzb25cIjpKU09OLnBhcnNlfSxsKEEucHJvdG90eXBlKSxBLnByb3RvdHlwZS5fcGFyc2VCb2R5PWZ1bmN0aW9uKGUpe3ZhciB0PWYucGFyc2VbdGhpcy50eXBlXTtyZXR1cm4gdGhpcy5yZXEuX3BhcnNlcj90aGlzLnJlcS5fcGFyc2VyKHRoaXMsZSk6KCF0JiZiKHRoaXMudHlwZSkmJih0PWYucGFyc2VbXCJhcHBsaWNhdGlvbi9qc29uXCJdKSx0JiZlJiYoZS5sZW5ndGg+MHx8ZSBpbnN0YW5jZW9mIE9iamVjdCk/dChlKTpudWxsKX0sQS5wcm90b3R5cGUudG9FcnJvcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMucmVxLHQ9ZS5tZXRob2Qscj1lLnVybCxuPVwiY2Fubm90IFwiLmNvbmNhdCh0LFwiIFwiKS5jb25jYXQocixcIiAoXCIpLmNvbmNhdCh0aGlzLnN0YXR1cyxcIilcIiksbz1uZXcgRXJyb3Iobik7cmV0dXJuIG8uc3RhdHVzPXRoaXMuc3RhdHVzLG8ubWV0aG9kPXQsby51cmw9cixvfSxmLlJlc3BvbnNlPUEscyh3LnByb3RvdHlwZSksYyh3LnByb3RvdHlwZSksdy5wcm90b3R5cGUudHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zZXQoXCJDb250ZW50LVR5cGVcIixmLnR5cGVzW2VdfHxlKSx0aGlzfSx3LnByb3RvdHlwZS5hY2NlcHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc2V0KFwiQWNjZXB0XCIsZi50eXBlc1tlXXx8ZSksdGhpc30sdy5wcm90b3R5cGUuYXV0aD1mdW5jdGlvbihlLHQscil7MT09PWFyZ3VtZW50cy5sZW5ndGgmJih0PVwiXCIpLFwib2JqZWN0XCI9PT1uKHQpJiZudWxsIT09dCYmKHI9dCx0PVwiXCIpLHJ8fChyPXt0eXBlOlwiZnVuY3Rpb25cIj09dHlwZW9mIGJ0b2E/XCJiYXNpY1wiOlwiYXV0b1wifSk7dmFyIG89ZnVuY3Rpb24oZSl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYnRvYSlyZXR1cm4gYnRvYShlKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgdXNlIGJhc2ljIGF1dGgsIGJ0b2EgaXMgbm90IGEgZnVuY3Rpb25cIil9O3JldHVybiB0aGlzLl9hdXRoKGUsdCxyLG8pfSx3LnByb3RvdHlwZS5xdWVyeT1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiIT10eXBlb2YgZSYmKGU9ZyhlKSksZSYmdGhpcy5fcXVlcnkucHVzaChlKSx0aGlzfSx3LnByb3RvdHlwZS5hdHRhY2g9ZnVuY3Rpb24oZSx0LHIpe2lmKHQpe2lmKHRoaXMuX2RhdGEpdGhyb3cgbmV3IEVycm9yKFwic3VwZXJhZ2VudCBjYW4ndCBtaXggLnNlbmQoKSBhbmQgLmF0dGFjaCgpXCIpO3RoaXMuX2dldEZvcm1EYXRhKCkuYXBwZW5kKGUsdCxyfHx0Lm5hbWUpfXJldHVybiB0aGlzfSx3LnByb3RvdHlwZS5fZ2V0Rm9ybURhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9ybURhdGF8fCh0aGlzLl9mb3JtRGF0YT1uZXcgby5Gb3JtRGF0YSksdGhpcy5fZm9ybURhdGF9LHcucHJvdG90eXBlLmNhbGxiYWNrPWZ1bmN0aW9uKGUsdCl7aWYodGhpcy5fc2hvdWxkUmV0cnkoZSx0KSlyZXR1cm4gdGhpcy5fcmV0cnkoKTt2YXIgcj10aGlzLl9jYWxsYmFjazt0aGlzLmNsZWFyVGltZW91dCgpLGUmJih0aGlzLl9tYXhSZXRyaWVzJiYoZS5yZXRyaWVzPXRoaXMuX3JldHJpZXMtMSksdGhpcy5lbWl0KFwiZXJyb3JcIixlKSkscihlLHQpfSx3LnByb3RvdHlwZS5jcm9zc0RvbWFpbkVycm9yPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IEVycm9yKFwiUmVxdWVzdCBoYXMgYmVlbiB0ZXJtaW5hdGVkXFxuUG9zc2libGUgY2F1c2VzOiB0aGUgbmV0d29yayBpcyBvZmZsaW5lLCBPcmlnaW4gaXMgbm90IGFsbG93ZWQgYnkgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCB0aGUgcGFnZSBpcyBiZWluZyB1bmxvYWRlZCwgZXRjLlwiKTtlLmNyb3NzRG9tYWluPSEwLGUuc3RhdHVzPXRoaXMuc3RhdHVzLGUubWV0aG9kPXRoaXMubWV0aG9kLGUudXJsPXRoaXMudXJsLHRoaXMuY2FsbGJhY2soZSl9LHcucHJvdG90eXBlLmFnZW50PWZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybihcIlRoaXMgaXMgbm90IHN1cHBvcnRlZCBpbiBicm93c2VyIHZlcnNpb24gb2Ygc3VwZXJhZ2VudFwiKSx0aGlzfSx3LnByb3RvdHlwZS5jYT13LnByb3RvdHlwZS5hZ2VudCx3LnByb3RvdHlwZS5idWZmZXI9dy5wcm90b3R5cGUuY2Esdy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJTdHJlYW1pbmcgaXMgbm90IHN1cHBvcnRlZCBpbiBicm93c2VyIHZlcnNpb24gb2Ygc3VwZXJhZ2VudFwiKX0sdy5wcm90b3R5cGUucGlwZT13LnByb3RvdHlwZS53cml0ZSx3LnByb3RvdHlwZS5faXNIb3N0PWZ1bmN0aW9uKGUpe3JldHVybiBlJiZcIm9iamVjdFwiPT09bihlKSYmIUFycmF5LmlzQXJyYXkoZSkmJlwiW29iamVjdCBPYmplY3RdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LHcucHJvdG90eXBlLmVuZD1mdW5jdGlvbihlKXt0aGlzLl9lbmRDYWxsZWQmJmNvbnNvbGUud2FybihcIldhcm5pbmc6IC5lbmQoKSB3YXMgY2FsbGVkIHR3aWNlLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gc3VwZXJhZ2VudFwiKSx0aGlzLl9lbmRDYWxsZWQ9ITAsdGhpcy5fY2FsbGJhY2s9ZXx8cCx0aGlzLl9maW5hbGl6ZVF1ZXJ5U3RyaW5nKCksdGhpcy5fZW5kKCl9LHcucHJvdG90eXBlLl9zZXRVcGxvYWRUaW1lb3V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLl91cGxvYWRUaW1lb3V0JiYhdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyJiYodGhpcy5fdXBsb2FkVGltZW91dFRpbWVyPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5fdGltZW91dEVycm9yKFwiVXBsb2FkIHRpbWVvdXQgb2YgXCIsZS5fdXBsb2FkVGltZW91dCxcIkVUSU1FRE9VVFwiKX0pLHRoaXMuX3VwbG9hZFRpbWVvdXQpKX0sdy5wcm90b3R5cGUuX2VuZD1mdW5jdGlvbigpe2lmKHRoaXMuX2Fib3J0ZWQpcmV0dXJuIHRoaXMuY2FsbGJhY2sobmV3IEVycm9yKFwiVGhlIHJlcXVlc3QgaGFzIGJlZW4gYWJvcnRlZCBldmVuIGJlZm9yZSAuZW5kKCkgd2FzIGNhbGxlZFwiKSk7dmFyIGU9dGhpczt0aGlzLnhocj1mLmdldFhIUigpO3ZhciB0PXRoaXMueGhyLHI9dGhpcy5fZm9ybURhdGF8fHRoaXMuX2RhdGE7dGhpcy5fc2V0VGltZW91dHMoKSx0Lm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3ZhciByPXQucmVhZHlTdGF0ZTtpZihyPj0yJiZlLl9yZXNwb25zZVRpbWVvdXRUaW1lciYmY2xlYXJUaW1lb3V0KGUuX3Jlc3BvbnNlVGltZW91dFRpbWVyKSw0PT09cil7dmFyIG47dHJ5e249dC5zdGF0dXN9Y2F0Y2goZSl7bj0wfWlmKCFuKXtpZihlLnRpbWVkb3V0fHxlLl9hYm9ydGVkKXJldHVybjtyZXR1cm4gZS5jcm9zc0RvbWFpbkVycm9yKCl9ZS5lbWl0KFwiZW5kXCIpfX07dmFyIG49ZnVuY3Rpb24odCxyKXtyLnRvdGFsPjAmJihyLnBlcmNlbnQ9ci5sb2FkZWQvci50b3RhbCoxMDAsMTAwPT09ci5wZXJjZW50JiZjbGVhclRpbWVvdXQoZS5fdXBsb2FkVGltZW91dFRpbWVyKSksci5kaXJlY3Rpb249dCxlLmVtaXQoXCJwcm9ncmVzc1wiLHIpfTtpZih0aGlzLmhhc0xpc3RlbmVycyhcInByb2dyZXNzXCIpKXRyeXt0LmFkZEV2ZW50TGlzdGVuZXIoXCJwcm9ncmVzc1wiLG4uYmluZChudWxsLFwiZG93bmxvYWRcIikpLHQudXBsb2FkJiZ0LnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixuLmJpbmQobnVsbCxcInVwbG9hZFwiKSl9Y2F0Y2goZSl7fXQudXBsb2FkJiZ0aGlzLl9zZXRVcGxvYWRUaW1lb3V0KCk7dHJ5e3RoaXMudXNlcm5hbWUmJnRoaXMucGFzc3dvcmQ/dC5vcGVuKHRoaXMubWV0aG9kLHRoaXMudXJsLCEwLHRoaXMudXNlcm5hbWUsdGhpcy5wYXNzd29yZCk6dC5vcGVuKHRoaXMubWV0aG9kLHRoaXMudXJsLCEwKX1jYXRjaChlKXtyZXR1cm4gdGhpcy5jYWxsYmFjayhlKX1pZih0aGlzLl93aXRoQ3JlZGVudGlhbHMmJih0LndpdGhDcmVkZW50aWFscz0hMCksIXRoaXMuX2Zvcm1EYXRhJiZcIkdFVFwiIT09dGhpcy5tZXRob2QmJlwiSEVBRFwiIT09dGhpcy5tZXRob2QmJlwic3RyaW5nXCIhPXR5cGVvZiByJiYhdGhpcy5faXNIb3N0KHIpKXt2YXIgbz10aGlzLl9oZWFkZXJbXCJjb250ZW50LXR5cGVcIl0scz10aGlzLl9zZXJpYWxpemVyfHxmLnNlcmlhbGl6ZVtvP28uc3BsaXQoXCI7XCIpWzBdOlwiXCJdOyFzJiZiKG8pJiYocz1mLnNlcmlhbGl6ZVtcImFwcGxpY2F0aW9uL2pzb25cIl0pLHMmJihyPXMocikpfWZvcih2YXIgaSBpbiB0aGlzLmhlYWRlciludWxsIT09dGhpcy5oZWFkZXJbaV0mJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmhlYWRlcixpKSYmdC5zZXRSZXF1ZXN0SGVhZGVyKGksdGhpcy5oZWFkZXJbaV0pO3RoaXMuX3Jlc3BvbnNlVHlwZSYmKHQucmVzcG9uc2VUeXBlPXRoaXMuX3Jlc3BvbnNlVHlwZSksdGhpcy5lbWl0KFwicmVxdWVzdFwiLHRoaXMpLHQuc2VuZCh2b2lkIDA9PT1yP251bGw6cil9LGYuYWdlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGh9LFtcIkdFVFwiLFwiUE9TVFwiLFwiT1BUSU9OU1wiLFwiUEFUQ0hcIixcIlBVVFwiLFwiREVMRVRFXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe2gucHJvdG90eXBlW2UudG9Mb3dlckNhc2UoKV09ZnVuY3Rpb24odCxyKXt2YXIgbj1uZXcgZi5SZXF1ZXN0KGUsdCk7cmV0dXJuIHRoaXMuX3NldERlZmF1bHRzKG4pLHImJm4uZW5kKHIpLG59fSkpLGgucHJvdG90eXBlLmRlbD1oLnByb3RvdHlwZS5kZWxldGUsZi5nZXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJHRVRcIixlKTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYocj10LHQ9bnVsbCksdCYmbi5xdWVyeSh0KSxyJiZuLmVuZChyKSxufSxmLmhlYWQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJIRUFEXCIsZSk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKHI9dCx0PW51bGwpLHQmJm4ucXVlcnkodCksciYmbi5lbmQociksbn0sZi5vcHRpb25zPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1mKFwiT1BUSU9OU1wiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5kZWw9dixmLmRlbGV0ZT12LGYucGF0Y2g9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJQQVRDSFwiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5wb3N0PWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1mKFwiUE9TVFwiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5wdXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJQVVRcIixlKTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYocj10LHQ9bnVsbCksdCYmbi5zZW5kKHQpLHImJm4uZW5kKHIpLG59fSwxOTYwOmU9PntcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KGUpe3JldHVybih0PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPT1lJiZcIm9iamVjdFwiPT09dChlKX19LDQyODc6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuKG49XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfXZhciBvPXIoMTk2MCk7ZnVuY3Rpb24gcyhlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gcy5wcm90b3R5cGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMucHJvdG90eXBlLHQpJiYoZVt0XT1zLnByb3RvdHlwZVt0XSk7cmV0dXJuIGV9KGUpfWUuZXhwb3J0cz1zLHMucHJvdG90eXBlLmNsZWFyVGltZW91dD1mdW5jdGlvbigpe3JldHVybiBjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpLGNsZWFyVGltZW91dCh0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lciksY2xlYXJUaW1lb3V0KHRoaXMuX3VwbG9hZFRpbWVvdXRUaW1lciksZGVsZXRlIHRoaXMuX3RpbWVyLGRlbGV0ZSB0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lcixkZWxldGUgdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyLHRoaXN9LHMucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9wYXJzZXI9ZSx0aGlzfSxzLnByb3RvdHlwZS5yZXNwb25zZVR5cGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3Jlc3BvbnNlVHlwZT1lLHRoaXN9LHMucHJvdG90eXBlLnNlcmlhbGl6ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2VyaWFsaXplcj1lLHRoaXN9LHMucHJvdG90eXBlLnRpbWVvdXQ9ZnVuY3Rpb24oZSl7aWYoIWV8fFwib2JqZWN0XCIhPT1uKGUpKXJldHVybiB0aGlzLl90aW1lb3V0PWUsdGhpcy5fcmVzcG9uc2VUaW1lb3V0PTAsdGhpcy5fdXBsb2FkVGltZW91dD0wLHRoaXM7Zm9yKHZhciB0IGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCkpc3dpdGNoKHQpe2Nhc2VcImRlYWRsaW5lXCI6dGhpcy5fdGltZW91dD1lLmRlYWRsaW5lO2JyZWFrO2Nhc2VcInJlc3BvbnNlXCI6dGhpcy5fcmVzcG9uc2VUaW1lb3V0PWUucmVzcG9uc2U7YnJlYWs7Y2FzZVwidXBsb2FkXCI6dGhpcy5fdXBsb2FkVGltZW91dD1lLnVwbG9hZDticmVhaztkZWZhdWx0OmNvbnNvbGUud2FybihcIlVua25vd24gdGltZW91dCBvcHRpb25cIix0KX1yZXR1cm4gdGhpc30scy5wcm90b3R5cGUucmV0cnk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMCE9PWFyZ3VtZW50cy5sZW5ndGgmJiEwIT09ZXx8KGU9MSksZTw9MCYmKGU9MCksdGhpcy5fbWF4UmV0cmllcz1lLHRoaXMuX3JldHJpZXM9MCx0aGlzLl9yZXRyeUNhbGxiYWNrPXQsdGhpc307dmFyIGk9bmV3IFNldChbXCJFVElNRURPVVRcIixcIkVDT05OUkVTRVRcIixcIkVBRERSSU5VU0VcIixcIkVDT05OUkVGVVNFRFwiLFwiRVBJUEVcIixcIkVOT1RGT1VORFwiLFwiRU5FVFVOUkVBQ0hcIixcIkVBSV9BR0FJTlwiXSksYT1uZXcgU2V0KFs0MDgsNDEzLDQyOSw1MDAsNTAyLDUwMyw1MDQsNTIxLDUyMiw1MjRdKTtzLnByb3RvdHlwZS5fc2hvdWxkUmV0cnk9ZnVuY3Rpb24oZSx0KXtpZighdGhpcy5fbWF4UmV0cmllc3x8dGhpcy5fcmV0cmllcysrPj10aGlzLl9tYXhSZXRyaWVzKXJldHVybiExO2lmKHRoaXMuX3JldHJ5Q2FsbGJhY2spdHJ5e3ZhciByPXRoaXMuX3JldHJ5Q2FsbGJhY2soZSx0KTtpZighMD09PXIpcmV0dXJuITA7aWYoITE9PT1yKXJldHVybiExfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9aWYodCYmdC5zdGF0dXMmJmEuaGFzKHQuc3RhdHVzKSlyZXR1cm4hMDtpZihlKXtpZihlLmNvZGUmJmkuaGFzKGUuY29kZSkpcmV0dXJuITA7aWYoZS50aW1lb3V0JiZcIkVDT05OQUJPUlRFRFwiPT09ZS5jb2RlKXJldHVybiEwO2lmKGUuY3Jvc3NEb21haW4pcmV0dXJuITB9cmV0dXJuITF9LHMucHJvdG90eXBlLl9yZXRyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNsZWFyVGltZW91dCgpLHRoaXMucmVxJiYodGhpcy5yZXE9bnVsbCx0aGlzLnJlcT10aGlzLnJlcXVlc3QoKSksdGhpcy5fYWJvcnRlZD0hMSx0aGlzLnRpbWVkb3V0PSExLHRoaXMudGltZWRvdXRFcnJvcj1udWxsLHRoaXMuX2VuZCgpfSxzLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZighdGhpcy5fZnVsbGZpbGxlZFByb21pc2Upe3ZhciBuPXRoaXM7dGhpcy5fZW5kQ2FsbGVkJiZjb25zb2xlLndhcm4oXCJXYXJuaW5nOiBzdXBlcmFnZW50IHJlcXVlc3Qgd2FzIHNlbnQgdHdpY2UsIGJlY2F1c2UgYm90aCAuZW5kKCkgYW5kIC50aGVuKCkgd2VyZSBjYWxsZWQuIE5ldmVyIGNhbGwgLmVuZCgpIGlmIHlvdSB1c2UgcHJvbWlzZXNcIiksdGhpcy5fZnVsbGZpbGxlZFByb21pc2U9bmV3IFByb21pc2UoKGZ1bmN0aW9uKGUsdCl7bi5vbihcImFib3J0XCIsKGZ1bmN0aW9uKCl7aWYoIShyLl9tYXhSZXRyaWVzJiZyLl9tYXhSZXRyaWVzPnIuX3JldHJpZXMpKWlmKHIudGltZWRvdXQmJnIudGltZWRvdXRFcnJvcil0KHIudGltZWRvdXRFcnJvcik7ZWxzZXt2YXIgZT1uZXcgRXJyb3IoXCJBYm9ydGVkXCIpO2UuY29kZT1cIkFCT1JURURcIixlLnN0YXR1cz1yLnN0YXR1cyxlLm1ldGhvZD1yLm1ldGhvZCxlLnVybD1yLnVybCx0KGUpfX0pKSxuLmVuZCgoZnVuY3Rpb24ocixuKXtyP3Qocik6ZShuKX0pKX0pKX1yZXR1cm4gdGhpcy5fZnVsbGZpbGxlZFByb21pc2UudGhlbihlLHQpfSxzLnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxlKX0scy5wcm90b3R5cGUudXNlPWZ1bmN0aW9uKGUpe3JldHVybiBlKHRoaXMpLHRoaXN9LHMucHJvdG90eXBlLm9rPWZ1bmN0aW9uKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKFwiQ2FsbGJhY2sgcmVxdWlyZWRcIik7cmV0dXJuIHRoaXMuX29rQ2FsbGJhY2s9ZSx0aGlzfSxzLnByb3RvdHlwZS5faXNSZXNwb25zZU9LPWZ1bmN0aW9uKGUpe3JldHVybiEhZSYmKHRoaXMuX29rQ2FsbGJhY2s/dGhpcy5fb2tDYWxsYmFjayhlKTplLnN0YXR1cz49MjAwJiZlLnN0YXR1czwzMDApfSxzLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2hlYWRlcltlLnRvTG93ZXJDYXNlKCldfSxzLnByb3RvdHlwZS5nZXRIZWFkZXI9cy5wcm90b3R5cGUuZ2V0LHMucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQpe2lmKG8oZSkpe2Zvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiZ0aGlzLnNldChyLGVbcl0pO3JldHVybiB0aGlzfXJldHVybiB0aGlzLl9oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXT10LHRoaXMuaGVhZGVyW2VdPXQsdGhpc30scy5wcm90b3R5cGUudW5zZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGRlbGV0ZSB0aGlzLl9oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXSxkZWxldGUgdGhpcy5oZWFkZXJbZV0sdGhpc30scy5wcm90b3R5cGUuZmllbGQ9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIi5maWVsZChuYW1lLCB2YWwpIG5hbWUgY2FuIG5vdCBiZSBlbXB0eVwiKTtpZih0aGlzLl9kYXRhKXRocm93IG5ldyBFcnJvcihcIi5maWVsZCgpIGNhbid0IGJlIHVzZWQgaWYgLnNlbmQoKSBpcyB1c2VkLiBQbGVhc2UgdXNlIG9ubHkgLnNlbmQoKSBvciBvbmx5IC5maWVsZCgpICYgLmF0dGFjaCgpXCIpO2lmKG8oZSkpe2Zvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiZ0aGlzLmZpZWxkKHIsZVtyXSk7cmV0dXJuIHRoaXN9aWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKHZhciBuIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJnRoaXMuZmllbGQoZSx0W25dKTtyZXR1cm4gdGhpc31pZihudWxsPT10KXRocm93IG5ldyBFcnJvcihcIi5maWVsZChuYW1lLCB2YWwpIHZhbCBjYW4gbm90IGJlIGVtcHR5XCIpO3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdCYmKHQ9U3RyaW5nKHQpKSx0aGlzLl9nZXRGb3JtRGF0YSgpLmFwcGVuZChlLHQpLHRoaXN9LHMucHJvdG90eXBlLmFib3J0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Fib3J0ZWR8fCh0aGlzLl9hYm9ydGVkPSEwLHRoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpLHRoaXMucmVxJiZ0aGlzLnJlcS5hYm9ydCgpLHRoaXMuY2xlYXJUaW1lb3V0KCksdGhpcy5lbWl0KFwiYWJvcnRcIikpLHRoaXN9LHMucHJvdG90eXBlLl9hdXRoPWZ1bmN0aW9uKGUsdCxyLG4pe3N3aXRjaChyLnR5cGUpe2Nhc2VcImJhc2ljXCI6dGhpcy5zZXQoXCJBdXRob3JpemF0aW9uXCIsXCJCYXNpYyBcIi5jb25jYXQobihcIlwiLmNvbmNhdChlLFwiOlwiKS5jb25jYXQodCkpKSk7YnJlYWs7Y2FzZVwiYXV0b1wiOnRoaXMudXNlcm5hbWU9ZSx0aGlzLnBhc3N3b3JkPXQ7YnJlYWs7Y2FzZVwiYmVhcmVyXCI6dGhpcy5zZXQoXCJBdXRob3JpemF0aW9uXCIsXCJCZWFyZXIgXCIuY29uY2F0KGUpKX1yZXR1cm4gdGhpc30scy5wcm90b3R5cGUud2l0aENyZWRlbnRpYWxzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMCksdGhpcy5fd2l0aENyZWRlbnRpYWxzPWUsdGhpc30scy5wcm90b3R5cGUucmVkaXJlY3RzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9tYXhSZWRpcmVjdHM9ZSx0aGlzfSxzLnByb3RvdHlwZS5tYXhSZXNwb25zZVNpemU9ZnVuY3Rpb24oZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXJndW1lbnRcIik7cmV0dXJuIHRoaXMuX21heFJlc3BvbnNlU2l6ZT1lLHRoaXN9LHMucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybnttZXRob2Q6dGhpcy5tZXRob2QsdXJsOnRoaXMudXJsLGRhdGE6dGhpcy5fZGF0YSxoZWFkZXJzOnRoaXMuX2hlYWRlcn19LHMucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKSxyPXRoaXMuX2hlYWRlcltcImNvbnRlbnQtdHlwZVwiXTtpZih0aGlzLl9mb3JtRGF0YSl0aHJvdyBuZXcgRXJyb3IoXCIuc2VuZCgpIGNhbid0IGJlIHVzZWQgaWYgLmF0dGFjaCgpIG9yIC5maWVsZCgpIGlzIHVzZWQuIFBsZWFzZSB1c2Ugb25seSAuc2VuZCgpIG9yIG9ubHkgLmZpZWxkKCkgJiAuYXR0YWNoKClcIik7aWYodCYmIXRoaXMuX2RhdGEpQXJyYXkuaXNBcnJheShlKT90aGlzLl9kYXRhPVtdOnRoaXMuX2lzSG9zdChlKXx8KHRoaXMuX2RhdGE9e30pO2Vsc2UgaWYoZSYmdGhpcy5fZGF0YSYmdGhpcy5faXNIb3N0KHRoaXMuX2RhdGEpKXRocm93IG5ldyBFcnJvcihcIkNhbid0IG1lcmdlIHRoZXNlIHNlbmQgY2FsbHNcIik7aWYodCYmbyh0aGlzLl9kYXRhKSlmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRoaXMuX2RhdGFbbl09ZVtuXSk7ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBlPyhyfHx0aGlzLnR5cGUoXCJmb3JtXCIpLChyPXRoaXMuX2hlYWRlcltcImNvbnRlbnQtdHlwZVwiXSkmJihyPXIudG9Mb3dlckNhc2UoKS50cmltKCkpLHRoaXMuX2RhdGE9XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIj09PXI/dGhpcy5fZGF0YT9cIlwiLmNvbmNhdCh0aGlzLl9kYXRhLFwiJlwiKS5jb25jYXQoZSk6ZToodGhpcy5fZGF0YXx8XCJcIikrZSk6dGhpcy5fZGF0YT1lO3JldHVybiF0fHx0aGlzLl9pc0hvc3QoZSl8fHJ8fHRoaXMudHlwZShcImpzb25cIiksdGhpc30scy5wcm90b3R5cGUuc29ydFF1ZXJ5PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9zb3J0PXZvaWQgMD09PWV8fGUsdGhpc30scy5wcm90b3R5cGUuX2ZpbmFsaXplUXVlcnlTdHJpbmc9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9xdWVyeS5qb2luKFwiJlwiKTtpZihlJiYodGhpcy51cmwrPSh0aGlzLnVybC5pbmNsdWRlcyhcIj9cIik/XCImXCI6XCI/XCIpK2UpLHRoaXMuX3F1ZXJ5Lmxlbmd0aD0wLHRoaXMuX3NvcnQpe3ZhciB0PXRoaXMudXJsLmluZGV4T2YoXCI/XCIpO2lmKHQ+PTApe3ZhciByPXRoaXMudXJsLnNsaWNlKHQrMSkuc3BsaXQoXCImXCIpO1wiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX3NvcnQ/ci5zb3J0KHRoaXMuX3NvcnQpOnIuc29ydCgpLHRoaXMudXJsPXRoaXMudXJsLnNsaWNlKDAsdCkrXCI/XCIrci5qb2luKFwiJlwiKX19fSxzLnByb3RvdHlwZS5fYXBwZW5kUXVlcnlTdHJpbmc9ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oXCJVbnN1cHBvcnRlZFwiKX0scy5wcm90b3R5cGUuX3RpbWVvdXRFcnJvcj1mdW5jdGlvbihlLHQscil7aWYoIXRoaXMuX2Fib3J0ZWQpe3ZhciBuPW5ldyBFcnJvcihcIlwiLmNvbmNhdChlK3QsXCJtcyBleGNlZWRlZFwiKSk7bi50aW1lb3V0PXQsbi5jb2RlPVwiRUNPTk5BQk9SVEVEXCIsbi5lcnJubz1yLHRoaXMudGltZWRvdXQ9ITAsdGhpcy50aW1lZG91dEVycm9yPW4sdGhpcy5hYm9ydCgpLHRoaXMuY2FsbGJhY2sobil9fSxzLnByb3RvdHlwZS5fc2V0VGltZW91dHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX3RpbWVvdXQmJiF0aGlzLl90aW1lciYmKHRoaXMuX3RpbWVyPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5fdGltZW91dEVycm9yKFwiVGltZW91dCBvZiBcIixlLl90aW1lb3V0LFwiRVRJTUVcIil9KSx0aGlzLl90aW1lb3V0KSksdGhpcy5fcmVzcG9uc2VUaW1lb3V0JiYhdGhpcy5fcmVzcG9uc2VUaW1lb3V0VGltZXImJih0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lcj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuX3RpbWVvdXRFcnJvcihcIlJlc3BvbnNlIHRpbWVvdXQgb2YgXCIsZS5fcmVzcG9uc2VUaW1lb3V0LFwiRVRJTUVET1VUXCIpfSksdGhpcy5fcmVzcG9uc2VUaW1lb3V0KSl9fSw5Njk6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMzA5NCk7ZnVuY3Rpb24gbyhlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gby5wcm90b3R5cGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8ucHJvdG90eXBlLHQpJiYoZVt0XT1vLnByb3RvdHlwZVt0XSk7cmV0dXJuIGV9KGUpfWUuZXhwb3J0cz1vLG8ucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXX0sby5wcm90b3R5cGUuX3NldEhlYWRlclByb3BlcnRpZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVtcImNvbnRlbnQtdHlwZVwiXXx8XCJcIjt0aGlzLnR5cGU9bi50eXBlKHQpO3ZhciByPW4ucGFyYW1zKHQpO2Zvcih2YXIgbyBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLG8pJiYodGhpc1tvXT1yW29dKTt0aGlzLmxpbmtzPXt9O3RyeXtlLmxpbmsmJih0aGlzLmxpbmtzPW4ucGFyc2VMaW5rcyhlLmxpbmspKX1jYXRjaChlKXt9fSxvLnByb3RvdHlwZS5fc2V0U3RhdHVzUHJvcGVydGllcz1mdW5jdGlvbihlKXt2YXIgdD1lLzEwMHwwO3RoaXMuc3RhdHVzQ29kZT1lLHRoaXMuc3RhdHVzPXRoaXMuc3RhdHVzQ29kZSx0aGlzLnN0YXR1c1R5cGU9dCx0aGlzLmluZm89MT09PXQsdGhpcy5vaz0yPT09dCx0aGlzLnJlZGlyZWN0PTM9PT10LHRoaXMuY2xpZW50RXJyb3I9ND09PXQsdGhpcy5zZXJ2ZXJFcnJvcj01PT09dCx0aGlzLmVycm9yPSg0PT09dHx8NT09PXQpJiZ0aGlzLnRvRXJyb3IoKSx0aGlzLmNyZWF0ZWQ9MjAxPT09ZSx0aGlzLmFjY2VwdGVkPTIwMj09PWUsdGhpcy5ub0NvbnRlbnQ9MjA0PT09ZSx0aGlzLmJhZFJlcXVlc3Q9NDAwPT09ZSx0aGlzLnVuYXV0aG9yaXplZD00MDE9PT1lLHRoaXMubm90QWNjZXB0YWJsZT00MDY9PT1lLHRoaXMuZm9yYmlkZGVuPTQwMz09PWUsdGhpcy5ub3RGb3VuZD00MDQ9PT1lLHRoaXMudW5wcm9jZXNzYWJsZUVudGl0eT00MjI9PT1lfX0sMzA5NDooZSx0KT0+e1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSx0KXt2YXIgcjtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgU3ltYm9sfHxudWxsPT1lW1N5bWJvbC5pdGVyYXRvcl0pe2lmKEFycmF5LmlzQXJyYXkoZSl8fChyPWZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIG4oZSx0KTt2YXIgcj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PXImJmUuY29uc3RydWN0b3ImJihyPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PXJ8fFwiU2V0XCI9PT1yP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PXJ8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHIpP24oZSx0KTp2b2lkIDB9fShlKSl8fHQmJmUmJlwibnVtYmVyXCI9PXR5cGVvZiBlLmxlbmd0aCl7ciYmKGU9cik7dmFyIG89MCxzPWZ1bmN0aW9uKCl7fTtyZXR1cm57cyxuOmZ1bmN0aW9uKCl7cmV0dXJuIG8+PWUubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTplW28rK119fSxlOmZ1bmN0aW9uKGUpe3Rocm93IGV9LGY6c319dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfXZhciBpLGE9ITAsYz0hMTtyZXR1cm57czpmdW5jdGlvbigpe3I9ZVtTeW1ib2wuaXRlcmF0b3JdKCl9LG46ZnVuY3Rpb24oKXt2YXIgZT1yLm5leHQoKTtyZXR1cm4gYT1lLmRvbmUsZX0sZTpmdW5jdGlvbihlKXtjPSEwLGk9ZX0sZjpmdW5jdGlvbigpe3RyeXthfHxudWxsPT1yLnJldHVybnx8ci5yZXR1cm4oKX1maW5hbGx5e2lmKGMpdGhyb3cgaX19fX1mdW5jdGlvbiBuKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciByPTAsbj1uZXcgQXJyYXkodCk7cjx0O3IrKyluW3JdPWVbcl07cmV0dXJuIG59dC50eXBlPWZ1bmN0aW9uKGUpe3JldHVybiBlLnNwbGl0KC8gKjsgKi8pLnNoaWZ0KCl9LHQucGFyYW1zPWZ1bmN0aW9uKGUpe3ZhciB0LG49e30sbz1yKGUuc3BsaXQoLyAqOyAqLykpO3RyeXtmb3Ioby5zKCk7ISh0PW8ubigpKS5kb25lOyl7dmFyIHM9dC52YWx1ZS5zcGxpdCgvICo9ICovKSxpPXMuc2hpZnQoKSxhPXMuc2hpZnQoKTtpJiZhJiYobltpXT1hKX19Y2F0Y2goZSl7by5lKGUpfWZpbmFsbHl7by5mKCl9cmV0dXJuIG59LHQucGFyc2VMaW5rcz1mdW5jdGlvbihlKXt2YXIgdCxuPXt9LG89cihlLnNwbGl0KC8gKiwgKi8pKTt0cnl7Zm9yKG8ucygpOyEodD1vLm4oKSkuZG9uZTspe3ZhciBzPXQudmFsdWUuc3BsaXQoLyAqOyAqLyksaT1zWzBdLnNsaWNlKDEsLTEpO25bc1sxXS5zcGxpdCgvICo9ICovKVsxXS5zbGljZSgxLC0xKV09aX19Y2F0Y2goZSl7by5lKGUpfWZpbmFsbHl7by5mKCl9cmV0dXJuIG59LHQuY2xlYW5IZWFkZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZGVsZXRlIGVbXCJjb250ZW50LXR5cGVcIl0sZGVsZXRlIGVbXCJjb250ZW50LWxlbmd0aFwiXSxkZWxldGUgZVtcInRyYW5zZmVyLWVuY29kaW5nXCJdLGRlbGV0ZSBlLmhvc3QsdCYmKGRlbGV0ZSBlLmF1dGhvcml6YXRpb24sZGVsZXRlIGUuY29va2llKSxlfX0sNTMzNTplPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9U3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlLHI9LyUyMC9nLG49XCJSRkMzOTg2XCI7ZS5leHBvcnRzPXtkZWZhdWx0Om4sZm9ybWF0dGVyczp7UkZDMTczODpmdW5jdGlvbihlKXtyZXR1cm4gdC5jYWxsKGUscixcIitcIil9LFJGQzM5ODY6ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZyhlKX19LFJGQzE3Mzg6XCJSRkMxNzM4XCIsUkZDMzk4NjpufX0sMzA2NTooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig0MjQ2KSxvPXIoMTY4OCkscz1yKDUzMzUpO2UuZXhwb3J0cz17Zm9ybWF0czpzLHBhcnNlOm8sc3RyaW5naWZ5Om59fSwxNjg4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDQ1NjIpLG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxzPUFycmF5LmlzQXJyYXksaT17YWxsb3dEb3RzOiExLGFsbG93UHJvdG90eXBlczohMSxhbGxvd1NwYXJzZTohMSxhcnJheUxpbWl0OjIwLGNoYXJzZXQ6XCJ1dGYtOFwiLGNoYXJzZXRTZW50aW5lbDohMSxjb21tYTohMSxkZWNvZGVyOm4uZGVjb2RlLGRlbGltaXRlcjpcIiZcIixkZXB0aDo1LGlnbm9yZVF1ZXJ5UHJlZml4OiExLGludGVycHJldE51bWVyaWNFbnRpdGllczohMSxwYXJhbWV0ZXJMaW1pdDoxZTMscGFyc2VBcnJheXM6ITAscGxhaW5PYmplY3RzOiExLHN0cmljdE51bGxIYW5kbGluZzohMX0sYT1mdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC8mIyhcXGQrKTsvZywoZnVuY3Rpb24oZSx0KXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludCh0LDEwKSl9KSl9LGM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUmJnQuY29tbWEmJmUuaW5kZXhPZihcIixcIik+LTE/ZS5zcGxpdChcIixcIik6ZX0sdT1mdW5jdGlvbihlLHQscixuKXtpZihlKXt2YXIgcz1yLmFsbG93RG90cz9lLnJlcGxhY2UoL1xcLihbXi5bXSspL2csXCJbJDFdXCIpOmUsaT0vKFxcW1teW1xcXV0qXSkvZyxhPXIuZGVwdGg+MCYmLyhcXFtbXltcXF1dKl0pLy5leGVjKHMpLHU9YT9zLnNsaWNlKDAsYS5pbmRleCk6cyxsPVtdO2lmKHUpe2lmKCFyLnBsYWluT2JqZWN0cyYmby5jYWxsKE9iamVjdC5wcm90b3R5cGUsdSkmJiFyLmFsbG93UHJvdG90eXBlcylyZXR1cm47bC5wdXNoKHUpfWZvcih2YXIgaD0wO3IuZGVwdGg+MCYmbnVsbCE9PShhPWkuZXhlYyhzKSkmJmg8ci5kZXB0aDspe2lmKGgrPTEsIXIucGxhaW5PYmplY3RzJiZvLmNhbGwoT2JqZWN0LnByb3RvdHlwZSxhWzFdLnNsaWNlKDEsLTEpKSYmIXIuYWxsb3dQcm90b3R5cGVzKXJldHVybjtsLnB1c2goYVsxXSl9cmV0dXJuIGEmJmwucHVzaChcIltcIitzLnNsaWNlKGEuaW5kZXgpK1wiXVwiKSxmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG89bj90OmModCxyKSxzPWUubGVuZ3RoLTE7cz49MDstLXMpe3ZhciBpLGE9ZVtzXTtpZihcIltdXCI9PT1hJiZyLnBhcnNlQXJyYXlzKWk9W10uY29uY2F0KG8pO2Vsc2V7aT1yLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9O3ZhciB1PVwiW1wiPT09YS5jaGFyQXQoMCkmJlwiXVwiPT09YS5jaGFyQXQoYS5sZW5ndGgtMSk/YS5zbGljZSgxLC0xKTphLGw9cGFyc2VJbnQodSwxMCk7ci5wYXJzZUFycmF5c3x8XCJcIiE9PXU/IWlzTmFOKGwpJiZhIT09dSYmU3RyaW5nKGwpPT09dSYmbD49MCYmci5wYXJzZUFycmF5cyYmbDw9ci5hcnJheUxpbWl0PyhpPVtdKVtsXT1vOmlbdV09bzppPXswOm99fW89aX1yZXR1cm4gb30obCx0LHIsbil9fTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mdW5jdGlvbihlKXtpZighZSlyZXR1cm4gaTtpZihudWxsIT09ZS5kZWNvZGVyJiZ2b2lkIDAhPT1lLmRlY29kZXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuZGVjb2Rlcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVjb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi5cIik7aWYodm9pZCAwIT09ZS5jaGFyc2V0JiZcInV0Zi04XCIhPT1lLmNoYXJzZXQmJlwiaXNvLTg4NTktMVwiIT09ZS5jaGFyc2V0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgY2hhcnNldCBvcHRpb24gbXVzdCBiZSBlaXRoZXIgdXRmLTgsIGlzby04ODU5LTEsIG9yIHVuZGVmaW5lZFwiKTt2YXIgdD12b2lkIDA9PT1lLmNoYXJzZXQ/aS5jaGFyc2V0OmUuY2hhcnNldDtyZXR1cm57YWxsb3dEb3RzOnZvaWQgMD09PWUuYWxsb3dEb3RzP2kuYWxsb3dEb3RzOiEhZS5hbGxvd0RvdHMsYWxsb3dQcm90b3R5cGVzOlwiYm9vbGVhblwiPT10eXBlb2YgZS5hbGxvd1Byb3RvdHlwZXM/ZS5hbGxvd1Byb3RvdHlwZXM6aS5hbGxvd1Byb3RvdHlwZXMsYWxsb3dTcGFyc2U6XCJib29sZWFuXCI9PXR5cGVvZiBlLmFsbG93U3BhcnNlP2UuYWxsb3dTcGFyc2U6aS5hbGxvd1NwYXJzZSxhcnJheUxpbWl0OlwibnVtYmVyXCI9PXR5cGVvZiBlLmFycmF5TGltaXQ/ZS5hcnJheUxpbWl0OmkuYXJyYXlMaW1pdCxjaGFyc2V0OnQsY2hhcnNldFNlbnRpbmVsOlwiYm9vbGVhblwiPT10eXBlb2YgZS5jaGFyc2V0U2VudGluZWw/ZS5jaGFyc2V0U2VudGluZWw6aS5jaGFyc2V0U2VudGluZWwsY29tbWE6XCJib29sZWFuXCI9PXR5cGVvZiBlLmNvbW1hP2UuY29tbWE6aS5jb21tYSxkZWNvZGVyOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuZGVjb2Rlcj9lLmRlY29kZXI6aS5kZWNvZGVyLGRlbGltaXRlcjpcInN0cmluZ1wiPT10eXBlb2YgZS5kZWxpbWl0ZXJ8fG4uaXNSZWdFeHAoZS5kZWxpbWl0ZXIpP2UuZGVsaW1pdGVyOmkuZGVsaW1pdGVyLGRlcHRoOlwibnVtYmVyXCI9PXR5cGVvZiBlLmRlcHRofHwhMT09PWUuZGVwdGg/K2UuZGVwdGg6aS5kZXB0aCxpZ25vcmVRdWVyeVByZWZpeDohMD09PWUuaWdub3JlUXVlcnlQcmVmaXgsaW50ZXJwcmV0TnVtZXJpY0VudGl0aWVzOlwiYm9vbGVhblwiPT10eXBlb2YgZS5pbnRlcnByZXROdW1lcmljRW50aXRpZXM/ZS5pbnRlcnByZXROdW1lcmljRW50aXRpZXM6aS5pbnRlcnByZXROdW1lcmljRW50aXRpZXMscGFyYW1ldGVyTGltaXQ6XCJudW1iZXJcIj09dHlwZW9mIGUucGFyYW1ldGVyTGltaXQ/ZS5wYXJhbWV0ZXJMaW1pdDppLnBhcmFtZXRlckxpbWl0LHBhcnNlQXJyYXlzOiExIT09ZS5wYXJzZUFycmF5cyxwbGFpbk9iamVjdHM6XCJib29sZWFuXCI9PXR5cGVvZiBlLnBsYWluT2JqZWN0cz9lLnBsYWluT2JqZWN0czppLnBsYWluT2JqZWN0cyxzdHJpY3ROdWxsSGFuZGxpbmc6XCJib29sZWFuXCI9PXR5cGVvZiBlLnN0cmljdE51bGxIYW5kbGluZz9lLnN0cmljdE51bGxIYW5kbGluZzppLnN0cmljdE51bGxIYW5kbGluZ319KHQpO2lmKFwiXCI9PT1lfHxudWxsPT1lKXJldHVybiByLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9O2Zvcih2YXIgbD1cInN0cmluZ1wiPT10eXBlb2YgZT9mdW5jdGlvbihlLHQpe3ZhciByLHU9e30sbD10Lmlnbm9yZVF1ZXJ5UHJlZml4P2UucmVwbGFjZSgvXlxcPy8sXCJcIik6ZSxoPXQucGFyYW1ldGVyTGltaXQ9PT0xLzA/dm9pZCAwOnQucGFyYW1ldGVyTGltaXQscD1sLnNwbGl0KHQuZGVsaW1pdGVyLGgpLGY9LTEsZD10LmNoYXJzZXQ7aWYodC5jaGFyc2V0U2VudGluZWwpZm9yKHI9MDtyPHAubGVuZ3RoOysrcikwPT09cFtyXS5pbmRleE9mKFwidXRmOD1cIikmJihcInV0Zjg9JUUyJTlDJTkzXCI9PT1wW3JdP2Q9XCJ1dGYtOFwiOlwidXRmOD0lMjYlMjMxMDAwMyUzQlwiPT09cFtyXSYmKGQ9XCJpc28tODg1OS0xXCIpLGY9cixyPXAubGVuZ3RoKTtmb3Iocj0wO3I8cC5sZW5ndGg7KytyKWlmKHIhPT1mKXt2YXIgZyx5LG09cFtyXSxiPW0uaW5kZXhPZihcIl09XCIpLEE9LTE9PT1iP20uaW5kZXhPZihcIj1cIik6YisxOy0xPT09QT8oZz10LmRlY29kZXIobSxpLmRlY29kZXIsZCxcImtleVwiKSx5PXQuc3RyaWN0TnVsbEhhbmRsaW5nP251bGw6XCJcIik6KGc9dC5kZWNvZGVyKG0uc2xpY2UoMCxBKSxpLmRlY29kZXIsZCxcImtleVwiKSx5PW4ubWF5YmVNYXAoYyhtLnNsaWNlKEErMSksdCksKGZ1bmN0aW9uKGUpe3JldHVybiB0LmRlY29kZXIoZSxpLmRlY29kZXIsZCxcInZhbHVlXCIpfSkpKSx5JiZ0LmludGVycHJldE51bWVyaWNFbnRpdGllcyYmXCJpc28tODg1OS0xXCI9PT1kJiYoeT1hKHkpKSxtLmluZGV4T2YoXCJbXT1cIik+LTEmJih5PXMoeSk/W3ldOnkpLG8uY2FsbCh1LGcpP3VbZ109bi5jb21iaW5lKHVbZ10seSk6dVtnXT15fXJldHVybiB1fShlLHIpOmUsaD1yLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9LHA9T2JqZWN0LmtleXMobCksZj0wO2Y8cC5sZW5ndGg7KytmKXt2YXIgZD1wW2ZdLGc9dShkLGxbZF0scixcInN0cmluZ1wiPT10eXBlb2YgZSk7aD1uLm1lcmdlKGgsZyxyKX1yZXR1cm4hMD09PXIuYWxsb3dTcGFyc2U/aDpuLmNvbXBhY3QoaCl9fSw0MjQ2OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDM2ODApLG89cig0NTYyKSxzPXIoNTMzNSksaT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGE9e2JyYWNrZXRzOmZ1bmN0aW9uKGUpe3JldHVybiBlK1wiW11cIn0sY29tbWE6XCJjb21tYVwiLGluZGljZXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZStcIltcIit0K1wiXVwifSxyZXBlYXQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9fSxjPUFycmF5LmlzQXJyYXksdT1BcnJheS5wcm90b3R5cGUucHVzaCxsPWZ1bmN0aW9uKGUsdCl7dS5hcHBseShlLGModCk/dDpbdF0pfSxoPURhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nLHA9cy5kZWZhdWx0LGY9e2FkZFF1ZXJ5UHJlZml4OiExLGFsbG93RG90czohMSxjaGFyc2V0OlwidXRmLThcIixjaGFyc2V0U2VudGluZWw6ITEsZGVsaW1pdGVyOlwiJlwiLGVuY29kZTohMCxlbmNvZGVyOm8uZW5jb2RlLGVuY29kZVZhbHVlc09ubHk6ITEsZm9ybWF0OnAsZm9ybWF0dGVyOnMuZm9ybWF0dGVyc1twXSxpbmRpY2VzOiExLHNlcmlhbGl6ZURhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGguY2FsbChlKX0sc2tpcE51bGxzOiExLHN0cmljdE51bGxIYW5kbGluZzohMX0sZD1mdW5jdGlvbiBlKHQscixzLGksYSx1LGgscCxkLGcseSxtLGIsQSx3KXt2YXIgdixTPXQ7aWYody5oYXModCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJDeWNsaWMgb2JqZWN0IHZhbHVlXCIpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGg/Uz1oKHIsUyk6UyBpbnN0YW5jZW9mIERhdGU/Uz1nKFMpOlwiY29tbWFcIj09PXMmJmMoUykmJihTPW8ubWF5YmVNYXAoUywoZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEYXRlP2coZSk6ZX0pKSksbnVsbD09PVMpe2lmKGkpcmV0dXJuIHUmJiFiP3UocixmLmVuY29kZXIsQSxcImtleVwiLHkpOnI7Uz1cIlwifWlmKFwic3RyaW5nXCI9PXR5cGVvZih2PVMpfHxcIm51bWJlclwiPT10eXBlb2Ygdnx8XCJib29sZWFuXCI9PXR5cGVvZiB2fHxcInN5bWJvbFwiPT10eXBlb2Ygdnx8XCJiaWdpbnRcIj09dHlwZW9mIHZ8fG8uaXNCdWZmZXIoUykpcmV0dXJuIHU/W20oYj9yOnUocixmLmVuY29kZXIsQSxcImtleVwiLHkpKStcIj1cIittKHUoUyxmLmVuY29kZXIsQSxcInZhbHVlXCIseSkpXTpbbShyKStcIj1cIittKFN0cmluZyhTKSldO3ZhciB4LEU9W107aWYodm9pZCAwPT09UylyZXR1cm4gRTtpZihcImNvbW1hXCI9PT1zJiZjKFMpKXg9W3t2YWx1ZTpTLmxlbmd0aD4wP1Muam9pbihcIixcIil8fG51bGw6dm9pZCAwfV07ZWxzZSBpZihjKGgpKXg9aDtlbHNle3ZhciBUPU9iamVjdC5rZXlzKFMpO3g9cD9ULnNvcnQocCk6VH1mb3IodmFyIF89MDtfPHgubGVuZ3RoOysrXyl7dmFyIEI9eFtfXSxVPVwib2JqZWN0XCI9PXR5cGVvZiBCJiZ2b2lkIDAhPT1CLnZhbHVlP0IudmFsdWU6U1tCXTtpZighYXx8bnVsbCE9PVUpe3ZhciBrPWMoUyk/XCJmdW5jdGlvblwiPT10eXBlb2Ygcz9zKHIsQik6cjpyKyhkP1wiLlwiK0I6XCJbXCIrQitcIl1cIik7dy5zZXQodCwhMCk7dmFyIEk9bigpO2woRSxlKFUsayxzLGksYSx1LGgscCxkLGcseSxtLGIsQSxJKSl9fXJldHVybiBFfTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixvPWUsdT1mdW5jdGlvbihlKXtpZighZSlyZXR1cm4gZjtpZihudWxsIT09ZS5lbmNvZGVyJiZ2b2lkIDAhPT1lLmVuY29kZXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuZW5jb2Rlcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiRW5jb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi5cIik7dmFyIHQ9ZS5jaGFyc2V0fHxmLmNoYXJzZXQ7aWYodm9pZCAwIT09ZS5jaGFyc2V0JiZcInV0Zi04XCIhPT1lLmNoYXJzZXQmJlwiaXNvLTg4NTktMVwiIT09ZS5jaGFyc2V0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgY2hhcnNldCBvcHRpb24gbXVzdCBiZSBlaXRoZXIgdXRmLTgsIGlzby04ODU5LTEsIG9yIHVuZGVmaW5lZFwiKTt2YXIgcj1zLmRlZmF1bHQ7aWYodm9pZCAwIT09ZS5mb3JtYXQpe2lmKCFpLmNhbGwocy5mb3JtYXR0ZXJzLGUuZm9ybWF0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBmb3JtYXQgb3B0aW9uIHByb3ZpZGVkLlwiKTtyPWUuZm9ybWF0fXZhciBuPXMuZm9ybWF0dGVyc1tyXSxvPWYuZmlsdGVyO3JldHVybihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmZpbHRlcnx8YyhlLmZpbHRlcikpJiYobz1lLmZpbHRlcikse2FkZFF1ZXJ5UHJlZml4OlwiYm9vbGVhblwiPT10eXBlb2YgZS5hZGRRdWVyeVByZWZpeD9lLmFkZFF1ZXJ5UHJlZml4OmYuYWRkUXVlcnlQcmVmaXgsYWxsb3dEb3RzOnZvaWQgMD09PWUuYWxsb3dEb3RzP2YuYWxsb3dEb3RzOiEhZS5hbGxvd0RvdHMsY2hhcnNldDp0LGNoYXJzZXRTZW50aW5lbDpcImJvb2xlYW5cIj09dHlwZW9mIGUuY2hhcnNldFNlbnRpbmVsP2UuY2hhcnNldFNlbnRpbmVsOmYuY2hhcnNldFNlbnRpbmVsLGRlbGltaXRlcjp2b2lkIDA9PT1lLmRlbGltaXRlcj9mLmRlbGltaXRlcjplLmRlbGltaXRlcixlbmNvZGU6XCJib29sZWFuXCI9PXR5cGVvZiBlLmVuY29kZT9lLmVuY29kZTpmLmVuY29kZSxlbmNvZGVyOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuZW5jb2Rlcj9lLmVuY29kZXI6Zi5lbmNvZGVyLGVuY29kZVZhbHVlc09ubHk6XCJib29sZWFuXCI9PXR5cGVvZiBlLmVuY29kZVZhbHVlc09ubHk/ZS5lbmNvZGVWYWx1ZXNPbmx5OmYuZW5jb2RlVmFsdWVzT25seSxmaWx0ZXI6byxmb3JtYXQ6cixmb3JtYXR0ZXI6bixzZXJpYWxpemVEYXRlOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuc2VyaWFsaXplRGF0ZT9lLnNlcmlhbGl6ZURhdGU6Zi5zZXJpYWxpemVEYXRlLHNraXBOdWxsczpcImJvb2xlYW5cIj09dHlwZW9mIGUuc2tpcE51bGxzP2Uuc2tpcE51bGxzOmYuc2tpcE51bGxzLHNvcnQ6XCJmdW5jdGlvblwiPT10eXBlb2YgZS5zb3J0P2Uuc29ydDpudWxsLHN0cmljdE51bGxIYW5kbGluZzpcImJvb2xlYW5cIj09dHlwZW9mIGUuc3RyaWN0TnVsbEhhbmRsaW5nP2Uuc3RyaWN0TnVsbEhhbmRsaW5nOmYuc3RyaWN0TnVsbEhhbmRsaW5nfX0odCk7XCJmdW5jdGlvblwiPT10eXBlb2YgdS5maWx0ZXI/bz0oMCx1LmZpbHRlcikoXCJcIixvKTpjKHUuZmlsdGVyKSYmKHI9dS5maWx0ZXIpO3ZhciBoLHA9W107aWYoXCJvYmplY3RcIiE9dHlwZW9mIG98fG51bGw9PT1vKXJldHVyblwiXCI7aD10JiZ0LmFycmF5Rm9ybWF0IGluIGE/dC5hcnJheUZvcm1hdDp0JiZcImluZGljZXNcImluIHQ/dC5pbmRpY2VzP1wiaW5kaWNlc1wiOlwicmVwZWF0XCI6XCJpbmRpY2VzXCI7dmFyIGc9YVtoXTtyfHwocj1PYmplY3Qua2V5cyhvKSksdS5zb3J0JiZyLnNvcnQodS5zb3J0KTtmb3IodmFyIHk9bigpLG09MDttPHIubGVuZ3RoOysrbSl7dmFyIGI9clttXTt1LnNraXBOdWxscyYmbnVsbD09PW9bYl18fGwocCxkKG9bYl0sYixnLHUuc3RyaWN0TnVsbEhhbmRsaW5nLHUuc2tpcE51bGxzLHUuZW5jb2RlP3UuZW5jb2RlcjpudWxsLHUuZmlsdGVyLHUuc29ydCx1LmFsbG93RG90cyx1LnNlcmlhbGl6ZURhdGUsdS5mb3JtYXQsdS5mb3JtYXR0ZXIsdS5lbmNvZGVWYWx1ZXNPbmx5LHUuY2hhcnNldCx5KSl9dmFyIEE9cC5qb2luKHUuZGVsaW1pdGVyKSx3PSEwPT09dS5hZGRRdWVyeVByZWZpeD9cIj9cIjpcIlwiO3JldHVybiB1LmNoYXJzZXRTZW50aW5lbCYmKFwiaXNvLTg4NTktMVwiPT09dS5jaGFyc2V0P3crPVwidXRmOD0lMjYlMjMxMDAwMyUzQiZcIjp3Kz1cInV0Zjg9JUUyJTlDJTkzJlwiKSxBLmxlbmd0aD4wP3crQTpcIlwifX0sNDU2MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig1MzM1KSxvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscz1BcnJheS5pc0FycmF5LGk9ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8MjU2OysrdCllLnB1c2goXCIlXCIrKCh0PDE2P1wiMFwiOlwiXCIpK3QudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtyZXR1cm4gZX0oKSxhPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXQmJnQucGxhaW5PYmplY3RzP09iamVjdC5jcmVhdGUobnVsbCk6e30sbj0wO248ZS5sZW5ndGg7KytuKXZvaWQgMCE9PWVbbl0mJihyW25dPWVbbl0pO3JldHVybiByfTtlLmV4cG9ydHM9e2FycmF5VG9PYmplY3Q6YSxhc3NpZ246ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LmtleXModCkucmVkdWNlKChmdW5jdGlvbihlLHIpe3JldHVybiBlW3JdPXRbcl0sZX0pLGUpfSxjb21iaW5lOmZ1bmN0aW9uKGUsdCl7cmV0dXJuW10uY29uY2F0KGUsdCl9LGNvbXBhY3Q6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVt7b2JqOntvOmV9LHByb3A6XCJvXCJ9XSxyPVtdLG49MDtuPHQubGVuZ3RoOysrbilmb3IodmFyIG89dFtuXSxpPW8ub2JqW28ucHJvcF0sYT1PYmplY3Qua2V5cyhpKSxjPTA7YzxhLmxlbmd0aDsrK2Mpe3ZhciB1PWFbY10sbD1pW3VdO1wib2JqZWN0XCI9PXR5cGVvZiBsJiZudWxsIT09bCYmLTE9PT1yLmluZGV4T2YobCkmJih0LnB1c2goe29iajppLHByb3A6dX0pLHIucHVzaChsKSl9cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcig7ZS5sZW5ndGg+MTspe3ZhciB0PWUucG9wKCkscj10Lm9ialt0LnByb3BdO2lmKHMocikpe2Zvcih2YXIgbj1bXSxvPTA7bzxyLmxlbmd0aDsrK28pdm9pZCAwIT09cltvXSYmbi5wdXNoKHJbb10pO3Qub2JqW3QucHJvcF09bn19fSh0KSxlfSxkZWNvZGU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUucmVwbGFjZSgvXFwrL2csXCIgXCIpO2lmKFwiaXNvLTg4NTktMVwiPT09cilyZXR1cm4gbi5yZXBsYWNlKC8lWzAtOWEtZl17Mn0vZ2ksdW5lc2NhcGUpO3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KG4pfWNhdGNoKGUpe3JldHVybiBufX0sZW5jb2RlOmZ1bmN0aW9uKGUsdCxyLG8scyl7aWYoMD09PWUubGVuZ3RoKXJldHVybiBlO3ZhciBhPWU7aWYoXCJzeW1ib2xcIj09dHlwZW9mIGU/YT1TeW1ib2wucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk6XCJzdHJpbmdcIiE9dHlwZW9mIGUmJihhPVN0cmluZyhlKSksXCJpc28tODg1OS0xXCI9PT1yKXJldHVybiBlc2NhcGUoYSkucmVwbGFjZSgvJXVbMC05YS1mXXs0fS9naSwoZnVuY3Rpb24oZSl7cmV0dXJuXCIlMjYlMjNcIitwYXJzZUludChlLnNsaWNlKDIpLDE2KStcIiUzQlwifSkpO2Zvcih2YXIgYz1cIlwiLHU9MDt1PGEubGVuZ3RoOysrdSl7dmFyIGw9YS5jaGFyQ29kZUF0KHUpOzQ1PT09bHx8NDY9PT1sfHw5NT09PWx8fDEyNj09PWx8fGw+PTQ4JiZsPD01N3x8bD49NjUmJmw8PTkwfHxsPj05NyYmbDw9MTIyfHxzPT09bi5SRkMxNzM4JiYoNDA9PT1sfHw0MT09PWwpP2MrPWEuY2hhckF0KHUpOmw8MTI4P2MrPWlbbF06bDwyMDQ4P2MrPWlbMTkyfGw+PjZdK2lbMTI4fDYzJmxdOmw8NTUyOTZ8fGw+PTU3MzQ0P2MrPWlbMjI0fGw+PjEyXStpWzEyOHxsPj42JjYzXStpWzEyOHw2MyZsXToodSs9MSxsPTY1NTM2KygoMTAyMyZsKTw8MTB8MTAyMyZhLmNoYXJDb2RlQXQodSkpLGMrPWlbMjQwfGw+PjE4XStpWzEyOHxsPj4xMiY2M10raVsxMjh8bD4+NiY2M10raVsxMjh8NjMmbF0pfXJldHVybiBjfSxpc0J1ZmZlcjpmdW5jdGlvbihlKXtyZXR1cm4hKCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZXx8IShlLmNvbnN0cnVjdG9yJiZlLmNvbnN0cnVjdG9yLmlzQnVmZmVyJiZlLmNvbnN0cnVjdG9yLmlzQnVmZmVyKGUpKSl9LGlzUmVnRXhwOmZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBSZWdFeHBdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LG1heWJlTWFwOmZ1bmN0aW9uKGUsdCl7aWYocyhlKSl7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rPTEpci5wdXNoKHQoZVtuXSkpO3JldHVybiByfXJldHVybiB0KGUpfSxtZXJnZTpmdW5jdGlvbiBlKHQscixuKXtpZighcilyZXR1cm4gdDtpZihcIm9iamVjdFwiIT10eXBlb2Ygcil7aWYocyh0KSl0LnB1c2gocik7ZWxzZXtpZighdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQpcmV0dXJuW3Qscl07KG4mJihuLnBsYWluT2JqZWN0c3x8bi5hbGxvd1Byb3RvdHlwZXMpfHwhby5jYWxsKE9iamVjdC5wcm90b3R5cGUscikpJiYodFtyXT0hMCl9cmV0dXJuIHR9aWYoIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0KXJldHVyblt0XS5jb25jYXQocik7dmFyIGk9dDtyZXR1cm4gcyh0KSYmIXMocikmJihpPWEodCxuKSkscyh0KSYmcyhyKT8oci5mb3JFYWNoKChmdW5jdGlvbihyLHMpe2lmKG8uY2FsbCh0LHMpKXt2YXIgaT10W3NdO2kmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiZyJiZcIm9iamVjdFwiPT10eXBlb2Ygcj90W3NdPWUoaSxyLG4pOnQucHVzaChyKX1lbHNlIHRbc109cn0pKSx0KTpPYmplY3Qua2V5cyhyKS5yZWR1Y2UoKGZ1bmN0aW9uKHQscyl7dmFyIGk9cltzXTtyZXR1cm4gby5jYWxsKHQscyk/dFtzXT1lKHRbc10saSxuKTp0W3NdPWksdH0pLGkpfX19LDc3NjU6ZnVuY3Rpb24oZSx0KXshZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9ZnVuY3Rpb24oZSl7dmFyIHQscj1uZXcgRmxvYXQ2NEFycmF5KDE2KTtpZihlKWZvcih0PTA7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfSxyPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwibm8gUFJOR1wiKX0sbj1uZXcgVWludDhBcnJheSgxNiksbz1uZXcgVWludDhBcnJheSgzMik7b1swXT05O3ZhciBzPXQoKSxpPXQoWzFdKSxhPXQoWzU2MTI5LDFdKSxjPXQoWzMwODgzLDQ5NTMsMTk5MTQsMzAxODcsNTU0NjcsMTY3MDUsMjYzNywxMTIsNTk1NDQsMzA1ODUsMTY1MDUsMzYwMzksNjUxMzksMTExMTksMjc4ODYsMjA5OTVdKSx1PXQoWzYxNzg1LDk5MDYsMzk4MjgsNjAzNzQsNDUzOTgsMzM0MTEsNTI3NCwyMjQsNTM1NTIsNjExNzEsMzMwMTAsNjU0Miw2NDc0MywyMjIzOSw1NTc3Miw5MjIyXSksbD10KFs1NDU1NCwzNjY0NSwxMTYxNiw1MTU0Miw0MjkzMCwzODE4MSw1MTA0MCwyNjkyNCw1NjQxMiw2NDk4Miw1NzkwNSw0OTMxNiwyMTUwMiw1MjU5MCwxNDAzNSw4NTUzXSksaD10KFsyNjIwMCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNF0pLHA9dChbNDExMzYsMTg5NTgsNjk1MSw1MDQxNCw1ODQ4OCw0NDMzNSw2MTUwLDEyMDk5LDU1MjA3LDE1ODY3LDE1MywxMTA4NSw1NzA5OSwyMDQxNyw5MzQ0LDExMTM5XSk7ZnVuY3Rpb24gZihlLHQscixuKXtlW3RdPXI+PjI0JjI1NSxlW3QrMV09cj4+MTYmMjU1LGVbdCsyXT1yPj44JjI1NSxlW3QrM109MjU1JnIsZVt0KzRdPW4+PjI0JjI1NSxlW3QrNV09bj4+MTYmMjU1LGVbdCs2XT1uPj44JjI1NSxlW3QrN109MjU1Jm59ZnVuY3Rpb24gZChlLHQscixuLG8pe3ZhciBzLGk9MDtmb3Iocz0wO3M8bztzKyspaXw9ZVt0K3NdXnJbbitzXTtyZXR1cm4oMSZpLTE+Pj44KS0xfWZ1bmN0aW9uIGcoZSx0LHIsbil7cmV0dXJuIGQoZSx0LHIsbiwxNil9ZnVuY3Rpb24geShlLHQscixuKXtyZXR1cm4gZChlLHQscixuLDMyKX1mdW5jdGlvbiBtKGUsdCxyLG4peyFmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG8scz0yNTUmblswXXwoMjU1Jm5bMV0pPDw4fCgyNTUmblsyXSk8PDE2fCgyNTUmblszXSk8PDI0LGk9MjU1JnJbMF18KDI1NSZyWzFdKTw8OHwoMjU1JnJbMl0pPDwxNnwoMjU1JnJbM10pPDwyNCxhPTI1NSZyWzRdfCgyNTUmcls1XSk8PDh8KDI1NSZyWzZdKTw8MTZ8KDI1NSZyWzddKTw8MjQsYz0yNTUmcls4XXwoMjU1JnJbOV0pPDw4fCgyNTUmclsxMF0pPDwxNnwoMjU1JnJbMTFdKTw8MjQsdT0yNTUmclsxMl18KDI1NSZyWzEzXSk8PDh8KDI1NSZyWzE0XSk8PDE2fCgyNTUmclsxNV0pPDwyNCxsPTI1NSZuWzRdfCgyNTUmbls1XSk8PDh8KDI1NSZuWzZdKTw8MTZ8KDI1NSZuWzddKTw8MjQsaD0yNTUmdFswXXwoMjU1JnRbMV0pPDw4fCgyNTUmdFsyXSk8PDE2fCgyNTUmdFszXSk8PDI0LHA9MjU1JnRbNF18KDI1NSZ0WzVdKTw8OHwoMjU1JnRbNl0pPDwxNnwoMjU1JnRbN10pPDwyNCxmPTI1NSZ0WzhdfCgyNTUmdFs5XSk8PDh8KDI1NSZ0WzEwXSk8PDE2fCgyNTUmdFsxMV0pPDwyNCxkPTI1NSZ0WzEyXXwoMjU1JnRbMTNdKTw8OHwoMjU1JnRbMTRdKTw8MTZ8KDI1NSZ0WzE1XSk8PDI0LGc9MjU1Jm5bOF18KDI1NSZuWzldKTw8OHwoMjU1Jm5bMTBdKTw8MTZ8KDI1NSZuWzExXSk8PDI0LHk9MjU1JnJbMTZdfCgyNTUmclsxN10pPDw4fCgyNTUmclsxOF0pPDwxNnwoMjU1JnJbMTldKTw8MjQsbT0yNTUmclsyMF18KDI1NSZyWzIxXSk8PDh8KDI1NSZyWzIyXSk8PDE2fCgyNTUmclsyM10pPDwyNCxiPTI1NSZyWzI0XXwoMjU1JnJbMjVdKTw8OHwoMjU1JnJbMjZdKTw8MTZ8KDI1NSZyWzI3XSk8PDI0LEE9MjU1JnJbMjhdfCgyNTUmclsyOV0pPDw4fCgyNTUmclszMF0pPDwxNnwoMjU1JnJbMzFdKTw8MjQsdz0yNTUmblsxMl18KDI1NSZuWzEzXSk8PDh8KDI1NSZuWzE0XSk8PDE2fCgyNTUmblsxNV0pPDwyNCx2PXMsUz1pLHg9YSxFPWMsVD11LF89bCxCPWgsVT1wLGs9ZixJPWQsQz1nLFI9eSxPPW0sRD1iLE49QSxQPXcsTD0wO0w8MjA7TCs9Mil2Xj0obz0oT149KG89KGtePShvPShUXj0obz12K098MCk8PDd8bz4+PjI1KSt2fDApPDw5fG8+Pj4yMykrVHwwKTw8MTN8bz4+PjE5KStrfDApPDwxOHxvPj4+MTQsX149KG89KFNePShvPShEXj0obz0oSV49KG89XytTfDApPDw3fG8+Pj4yNSkrX3wwKTw8OXxvPj4+MjMpK0l8MCk8PDEzfG8+Pj4xOSkrRHwwKTw8MTh8bz4+PjE0LENePShvPShCXj0obz0oeF49KG89KE5ePShvPUMrQnwwKTw8N3xvPj4+MjUpK0N8MCk8PDl8bz4+PjIzKStOfDApPDwxM3xvPj4+MTkpK3h8MCk8PDE4fG8+Pj4xNCxQXj0obz0oUl49KG89KFVePShvPShFXj0obz1QK1J8MCk8PDd8bz4+PjI1KStQfDApPDw5fG8+Pj4yMykrRXwwKTw8MTN8bz4+PjE5KStVfDApPDwxOHxvPj4+MTQsdl49KG89KEVePShvPSh4Xj0obz0oU149KG89ditFfDApPDw3fG8+Pj4yNSkrdnwwKTw8OXxvPj4+MjMpK1N8MCk8PDEzfG8+Pj4xOSkreHwwKTw8MTh8bz4+PjE0LF9ePShvPShUXj0obz0oVV49KG89KEJePShvPV8rVHwwKTw8N3xvPj4+MjUpK198MCk8PDl8bz4+PjIzKStCfDApPDwxM3xvPj4+MTkpK1V8MCk8PDE4fG8+Pj4xNCxDXj0obz0oSV49KG89KGtePShvPShSXj0obz1DK0l8MCk8PDd8bz4+PjI1KStDfDApPDw5fG8+Pj4yMykrUnwwKTw8MTN8bz4+PjE5KStrfDApPDwxOHxvPj4+MTQsUF49KG89KE5ePShvPShEXj0obz0oT149KG89UCtOfDApPDw3fG8+Pj4yNSkrUHwwKTw8OXxvPj4+MjMpK098MCk8PDEzfG8+Pj4xOSkrRHwwKTw8MTh8bz4+PjE0O3Y9ditzfDAsUz1TK2l8MCx4PXgrYXwwLEU9RStjfDAsVD1UK3V8MCxfPV8rbHwwLEI9QitofDAsVT1VK3B8MCxrPWsrZnwwLEk9SStkfDAsQz1DK2d8MCxSPVIreXwwLE89TyttfDAsRD1EK2J8MCxOPU4rQXwwLFA9UCt3fDAsZVswXT12Pj4+MCYyNTUsZVsxXT12Pj4+OCYyNTUsZVsyXT12Pj4+MTYmMjU1LGVbM109dj4+PjI0JjI1NSxlWzRdPVM+Pj4wJjI1NSxlWzVdPVM+Pj44JjI1NSxlWzZdPVM+Pj4xNiYyNTUsZVs3XT1TPj4+MjQmMjU1LGVbOF09eD4+PjAmMjU1LGVbOV09eD4+PjgmMjU1LGVbMTBdPXg+Pj4xNiYyNTUsZVsxMV09eD4+PjI0JjI1NSxlWzEyXT1FPj4+MCYyNTUsZVsxM109RT4+PjgmMjU1LGVbMTRdPUU+Pj4xNiYyNTUsZVsxNV09RT4+PjI0JjI1NSxlWzE2XT1UPj4+MCYyNTUsZVsxN109VD4+PjgmMjU1LGVbMThdPVQ+Pj4xNiYyNTUsZVsxOV09VD4+PjI0JjI1NSxlWzIwXT1fPj4+MCYyNTUsZVsyMV09Xz4+PjgmMjU1LGVbMjJdPV8+Pj4xNiYyNTUsZVsyM109Xz4+PjI0JjI1NSxlWzI0XT1CPj4+MCYyNTUsZVsyNV09Qj4+PjgmMjU1LGVbMjZdPUI+Pj4xNiYyNTUsZVsyN109Qj4+PjI0JjI1NSxlWzI4XT1VPj4+MCYyNTUsZVsyOV09VT4+PjgmMjU1LGVbMzBdPVU+Pj4xNiYyNTUsZVszMV09VT4+PjI0JjI1NSxlWzMyXT1rPj4+MCYyNTUsZVszM109az4+PjgmMjU1LGVbMzRdPWs+Pj4xNiYyNTUsZVszNV09az4+PjI0JjI1NSxlWzM2XT1JPj4+MCYyNTUsZVszN109ST4+PjgmMjU1LGVbMzhdPUk+Pj4xNiYyNTUsZVszOV09ST4+PjI0JjI1NSxlWzQwXT1DPj4+MCYyNTUsZVs0MV09Qz4+PjgmMjU1LGVbNDJdPUM+Pj4xNiYyNTUsZVs0M109Qz4+PjI0JjI1NSxlWzQ0XT1SPj4+MCYyNTUsZVs0NV09Uj4+PjgmMjU1LGVbNDZdPVI+Pj4xNiYyNTUsZVs0N109Uj4+PjI0JjI1NSxlWzQ4XT1PPj4+MCYyNTUsZVs0OV09Tz4+PjgmMjU1LGVbNTBdPU8+Pj4xNiYyNTUsZVs1MV09Tz4+PjI0JjI1NSxlWzUyXT1EPj4+MCYyNTUsZVs1M109RD4+PjgmMjU1LGVbNTRdPUQ+Pj4xNiYyNTUsZVs1NV09RD4+PjI0JjI1NSxlWzU2XT1OPj4+MCYyNTUsZVs1N109Tj4+PjgmMjU1LGVbNThdPU4+Pj4xNiYyNTUsZVs1OV09Tj4+PjI0JjI1NSxlWzYwXT1QPj4+MCYyNTUsZVs2MV09UD4+PjgmMjU1LGVbNjJdPVA+Pj4xNiYyNTUsZVs2M109UD4+PjI0JjI1NX0oZSx0LHIsbil9ZnVuY3Rpb24gYihlLHQscixuKXshZnVuY3Rpb24oZSx0LHIsbil7Zm9yKHZhciBvLHM9MjU1Jm5bMF18KDI1NSZuWzFdKTw8OHwoMjU1Jm5bMl0pPDwxNnwoMjU1Jm5bM10pPDwyNCxpPTI1NSZyWzBdfCgyNTUmclsxXSk8PDh8KDI1NSZyWzJdKTw8MTZ8KDI1NSZyWzNdKTw8MjQsYT0yNTUmcls0XXwoMjU1JnJbNV0pPDw4fCgyNTUmcls2XSk8PDE2fCgyNTUmcls3XSk8PDI0LGM9MjU1JnJbOF18KDI1NSZyWzldKTw8OHwoMjU1JnJbMTBdKTw8MTZ8KDI1NSZyWzExXSk8PDI0LHU9MjU1JnJbMTJdfCgyNTUmclsxM10pPDw4fCgyNTUmclsxNF0pPDwxNnwoMjU1JnJbMTVdKTw8MjQsbD0yNTUmbls0XXwoMjU1Jm5bNV0pPDw4fCgyNTUmbls2XSk8PDE2fCgyNTUmbls3XSk8PDI0LGg9MjU1JnRbMF18KDI1NSZ0WzFdKTw8OHwoMjU1JnRbMl0pPDwxNnwoMjU1JnRbM10pPDwyNCxwPTI1NSZ0WzRdfCgyNTUmdFs1XSk8PDh8KDI1NSZ0WzZdKTw8MTZ8KDI1NSZ0WzddKTw8MjQsZj0yNTUmdFs4XXwoMjU1JnRbOV0pPDw4fCgyNTUmdFsxMF0pPDwxNnwoMjU1JnRbMTFdKTw8MjQsZD0yNTUmdFsxMl18KDI1NSZ0WzEzXSk8PDh8KDI1NSZ0WzE0XSk8PDE2fCgyNTUmdFsxNV0pPDwyNCxnPTI1NSZuWzhdfCgyNTUmbls5XSk8PDh8KDI1NSZuWzEwXSk8PDE2fCgyNTUmblsxMV0pPDwyNCx5PTI1NSZyWzE2XXwoMjU1JnJbMTddKTw8OHwoMjU1JnJbMThdKTw8MTZ8KDI1NSZyWzE5XSk8PDI0LG09MjU1JnJbMjBdfCgyNTUmclsyMV0pPDw4fCgyNTUmclsyMl0pPDwxNnwoMjU1JnJbMjNdKTw8MjQsYj0yNTUmclsyNF18KDI1NSZyWzI1XSk8PDh8KDI1NSZyWzI2XSk8PDE2fCgyNTUmclsyN10pPDwyNCxBPTI1NSZyWzI4XXwoMjU1JnJbMjldKTw8OHwoMjU1JnJbMzBdKTw8MTZ8KDI1NSZyWzMxXSk8PDI0LHc9MjU1Jm5bMTJdfCgyNTUmblsxM10pPDw4fCgyNTUmblsxNF0pPDwxNnwoMjU1Jm5bMTVdKTw8MjQsdj0wO3Y8MjA7dis9MilzXj0obz0obV49KG89KGZePShvPSh1Xj0obz1zK218MCk8PDd8bz4+PjI1KStzfDApPDw5fG8+Pj4yMykrdXwwKTw8MTN8bz4+PjE5KStmfDApPDwxOHxvPj4+MTQsbF49KG89KGlePShvPShiXj0obz0oZF49KG89bCtpfDApPDw3fG8+Pj4yNSkrbHwwKTw8OXxvPj4+MjMpK2R8MCk8PDEzfG8+Pj4xOSkrYnwwKTw8MTh8bz4+PjE0LGdePShvPShoXj0obz0oYV49KG89KEFePShvPWcraHwwKTw8N3xvPj4+MjUpK2d8MCk8PDl8bz4+PjIzKStBfDApPDwxM3xvPj4+MTkpK2F8MCk8PDE4fG8+Pj4xNCx3Xj0obz0oeV49KG89KHBePShvPShjXj0obz13K3l8MCk8PDd8bz4+PjI1KSt3fDApPDw5fG8+Pj4yMykrY3wwKTw8MTN8bz4+PjE5KStwfDApPDwxOHxvPj4+MTQsc149KG89KGNePShvPShhXj0obz0oaV49KG89cytjfDApPDw3fG8+Pj4yNSkrc3wwKTw8OXxvPj4+MjMpK2l8MCk8PDEzfG8+Pj4xOSkrYXwwKTw8MTh8bz4+PjE0LGxePShvPSh1Xj0obz0ocF49KG89KGhePShvPWwrdXwwKTw8N3xvPj4+MjUpK2x8MCk8PDl8bz4+PjIzKStofDApPDwxM3xvPj4+MTkpK3B8MCk8PDE4fG8+Pj4xNCxnXj0obz0oZF49KG89KGZePShvPSh5Xj0obz1nK2R8MCk8PDd8bz4+PjI1KStnfDApPDw5fG8+Pj4yMykreXwwKTw8MTN8bz4+PjE5KStmfDApPDwxOHxvPj4+MTQsd149KG89KEFePShvPShiXj0obz0obV49KG89dytBfDApPDw3fG8+Pj4yNSkrd3wwKTw8OXxvPj4+MjMpK218MCk8PDEzfG8+Pj4xOSkrYnwwKTw8MTh8bz4+PjE0O2VbMF09cz4+PjAmMjU1LGVbMV09cz4+PjgmMjU1LGVbMl09cz4+PjE2JjI1NSxlWzNdPXM+Pj4yNCYyNTUsZVs0XT1sPj4+MCYyNTUsZVs1XT1sPj4+OCYyNTUsZVs2XT1sPj4+MTYmMjU1LGVbN109bD4+PjI0JjI1NSxlWzhdPWc+Pj4wJjI1NSxlWzldPWc+Pj44JjI1NSxlWzEwXT1nPj4+MTYmMjU1LGVbMTFdPWc+Pj4yNCYyNTUsZVsxMl09dz4+PjAmMjU1LGVbMTNdPXc+Pj44JjI1NSxlWzE0XT13Pj4+MTYmMjU1LGVbMTVdPXc+Pj4yNCYyNTUsZVsxNl09aD4+PjAmMjU1LGVbMTddPWg+Pj44JjI1NSxlWzE4XT1oPj4+MTYmMjU1LGVbMTldPWg+Pj4yNCYyNTUsZVsyMF09cD4+PjAmMjU1LGVbMjFdPXA+Pj44JjI1NSxlWzIyXT1wPj4+MTYmMjU1LGVbMjNdPXA+Pj4yNCYyNTUsZVsyNF09Zj4+PjAmMjU1LGVbMjVdPWY+Pj44JjI1NSxlWzI2XT1mPj4+MTYmMjU1LGVbMjddPWY+Pj4yNCYyNTUsZVsyOF09ZD4+PjAmMjU1LGVbMjldPWQ+Pj44JjI1NSxlWzMwXT1kPj4+MTYmMjU1LGVbMzFdPWQ+Pj4yNCYyNTV9KGUsdCxyLG4pfXZhciBBPW5ldyBVaW50OEFycmF5KFsxMDEsMTIwLDExMiw5NywxMTAsMTAwLDMyLDUxLDUwLDQ1LDk4LDEyMSwxMTYsMTAxLDMyLDEwN10pO2Z1bmN0aW9uIHcoZSx0LHIsbixvLHMsaSl7dmFyIGEsYyx1PW5ldyBVaW50OEFycmF5KDE2KSxsPW5ldyBVaW50OEFycmF5KDY0KTtmb3IoYz0wO2M8MTY7YysrKXVbY109MDtmb3IoYz0wO2M8ODtjKyspdVtjXT1zW2NdO2Zvcig7bz49NjQ7KXtmb3IobShsLHUsaSxBKSxjPTA7Yzw2NDtjKyspZVt0K2NdPXJbbitjXV5sW2NdO2ZvcihhPTEsYz04O2M8MTY7YysrKWE9YSsoMjU1JnVbY10pfDAsdVtjXT0yNTUmYSxhPj4+PTg7by09NjQsdCs9NjQsbis9NjR9aWYobz4wKWZvcihtKGwsdSxpLEEpLGM9MDtjPG87YysrKWVbdCtjXT1yW24rY11ebFtjXTtyZXR1cm4gMH1mdW5jdGlvbiB2KGUsdCxyLG4sbyl7dmFyIHMsaSxhPW5ldyBVaW50OEFycmF5KDE2KSxjPW5ldyBVaW50OEFycmF5KDY0KTtmb3IoaT0wO2k8MTY7aSsrKWFbaV09MDtmb3IoaT0wO2k8ODtpKyspYVtpXT1uW2ldO2Zvcig7cj49NjQ7KXtmb3IobShjLGEsbyxBKSxpPTA7aTw2NDtpKyspZVt0K2ldPWNbaV07Zm9yKHM9MSxpPTg7aTwxNjtpKyspcz1zKygyNTUmYVtpXSl8MCxhW2ldPTI1NSZzLHM+Pj49ODtyLT02NCx0Kz02NH1pZihyPjApZm9yKG0oYyxhLG8sQSksaT0wO2k8cjtpKyspZVt0K2ldPWNbaV07cmV0dXJuIDB9ZnVuY3Rpb24gUyhlLHQscixuLG8pe3ZhciBzPW5ldyBVaW50OEFycmF5KDMyKTtiKHMsbixvLEEpO2Zvcih2YXIgaT1uZXcgVWludDhBcnJheSg4KSxhPTA7YTw4O2ErKylpW2FdPW5bYSsxNl07cmV0dXJuIHYoZSx0LHIsaSxzKX1mdW5jdGlvbiB4KGUsdCxyLG4sbyxzLGkpe3ZhciBhPW5ldyBVaW50OEFycmF5KDMyKTtiKGEscyxpLEEpO2Zvcih2YXIgYz1uZXcgVWludDhBcnJheSg4KSx1PTA7dTw4O3UrKyljW3VdPXNbdSsxNl07cmV0dXJuIHcoZSx0LHIsbixvLGMsYSl9dmFyIEU9ZnVuY3Rpb24oZSl7dmFyIHQscixuLG8scyxpLGEsYzt0aGlzLmJ1ZmZlcj1uZXcgVWludDhBcnJheSgxNiksdGhpcy5yPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5oPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5wYWQ9bmV3IFVpbnQxNkFycmF5KDgpLHRoaXMubGVmdG92ZXI9MCx0aGlzLmZpbj0wLHQ9MjU1JmVbMF18KDI1NSZlWzFdKTw8OCx0aGlzLnJbMF09ODE5MSZ0LHI9MjU1JmVbMl18KDI1NSZlWzNdKTw8OCx0aGlzLnJbMV09ODE5MSYodD4+PjEzfHI8PDMpLG49MjU1JmVbNF18KDI1NSZlWzVdKTw8OCx0aGlzLnJbMl09NzkzOSYocj4+PjEwfG48PDYpLG89MjU1JmVbNl18KDI1NSZlWzddKTw8OCx0aGlzLnJbM109ODE5MSYobj4+Pjd8bzw8OSkscz0yNTUmZVs4XXwoMjU1JmVbOV0pPDw4LHRoaXMucls0XT0yNTUmKG8+Pj40fHM8PDEyKSx0aGlzLnJbNV09cz4+PjEmODE5MCxpPTI1NSZlWzEwXXwoMjU1JmVbMTFdKTw8OCx0aGlzLnJbNl09ODE5MSYocz4+PjE0fGk8PDIpLGE9MjU1JmVbMTJdfCgyNTUmZVsxM10pPDw4LHRoaXMucls3XT04MDY1JihpPj4+MTF8YTw8NSksYz0yNTUmZVsxNF18KDI1NSZlWzE1XSk8PDgsdGhpcy5yWzhdPTgxOTEmKGE+Pj44fGM8PDgpLHRoaXMucls5XT1jPj4+NSYxMjcsdGhpcy5wYWRbMF09MjU1JmVbMTZdfCgyNTUmZVsxN10pPDw4LHRoaXMucGFkWzFdPTI1NSZlWzE4XXwoMjU1JmVbMTldKTw8OCx0aGlzLnBhZFsyXT0yNTUmZVsyMF18KDI1NSZlWzIxXSk8PDgsdGhpcy5wYWRbM109MjU1JmVbMjJdfCgyNTUmZVsyM10pPDw4LHRoaXMucGFkWzRdPTI1NSZlWzI0XXwoMjU1JmVbMjVdKTw8OCx0aGlzLnBhZFs1XT0yNTUmZVsyNl18KDI1NSZlWzI3XSk8PDgsdGhpcy5wYWRbNl09MjU1JmVbMjhdfCgyNTUmZVsyOV0pPDw4LHRoaXMucGFkWzddPTI1NSZlWzMwXXwoMjU1JmVbMzFdKTw8OH07ZnVuY3Rpb24gVChlLHQscixuLG8scyl7dmFyIGk9bmV3IEUocyk7cmV0dXJuIGkudXBkYXRlKHIsbixvKSxpLmZpbmlzaChlLHQpLDB9ZnVuY3Rpb24gXyhlLHQscixuLG8scyl7dmFyIGk9bmV3IFVpbnQ4QXJyYXkoMTYpO3JldHVybiBUKGksMCxyLG4sbyxzKSxnKGUsdCxpLDApfWZ1bmN0aW9uIEIoZSx0LHIsbixvKXt2YXIgcztpZihyPDMyKXJldHVybi0xO2Zvcih4KGUsMCx0LDAscixuLG8pLFQoZSwxNixlLDMyLHItMzIsZSkscz0wO3M8MTY7cysrKWVbc109MDtyZXR1cm4gMH1mdW5jdGlvbiBVKGUsdCxyLG4sbyl7dmFyIHMsaT1uZXcgVWludDhBcnJheSgzMik7aWYocjwzMilyZXR1cm4tMTtpZihTKGksMCwzMixuLG8pLDAhPT1fKHQsMTYsdCwzMixyLTMyLGkpKXJldHVybi0xO2Zvcih4KGUsMCx0LDAscixuLG8pLHM9MDtzPDMyO3MrKyllW3NdPTA7cmV0dXJuIDB9ZnVuY3Rpb24gayhlLHQpe3ZhciByO2ZvcihyPTA7cjwxNjtyKyspZVtyXT0wfHRbcl19ZnVuY3Rpb24gSShlKXt2YXIgdCxyLG49MTtmb3IodD0wO3Q8MTY7dCsrKXI9ZVt0XStuKzY1NTM1LG49TWF0aC5mbG9vcihyLzY1NTM2KSxlW3RdPXItNjU1MzYqbjtlWzBdKz1uLTErMzcqKG4tMSl9ZnVuY3Rpb24gQyhlLHQscil7Zm9yKHZhciBuLG89fihyLTEpLHM9MDtzPDE2O3MrKyluPW8mKGVbc11edFtzXSksZVtzXV49bix0W3NdXj1ufWZ1bmN0aW9uIFIoZSxyKXt2YXIgbixvLHMsaT10KCksYT10KCk7Zm9yKG49MDtuPDE2O24rKylhW25dPXJbbl07Zm9yKEkoYSksSShhKSxJKGEpLG89MDtvPDI7bysrKXtmb3IoaVswXT1hWzBdLTY1NTE3LG49MTtuPDE1O24rKylpW25dPWFbbl0tNjU1MzUtKGlbbi0xXT4+MTYmMSksaVtuLTFdJj02NTUzNTtpWzE1XT1hWzE1XS0zMjc2Ny0oaVsxNF0+PjE2JjEpLHM9aVsxNV0+PjE2JjEsaVsxNF0mPTY1NTM1LEMoYSxpLDEtcyl9Zm9yKG49MDtuPDE2O24rKyllWzIqbl09MjU1JmFbbl0sZVsyKm4rMV09YVtuXT4+OH1mdW5jdGlvbiBPKGUsdCl7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoMzIpLG49bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBSKHIsZSksUihuLHQpLHkociwwLG4sMCl9ZnVuY3Rpb24gRChlKXt2YXIgdD1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIFIodCxlKSwxJnRbMF19ZnVuY3Rpb24gTihlLHQpe3ZhciByO2ZvcihyPTA7cjwxNjtyKyspZVtyXT10WzIqcl0rKHRbMipyKzFdPDw4KTtlWzE1XSY9MzI3Njd9ZnVuY3Rpb24gUChlLHQscil7Zm9yKHZhciBuPTA7bjwxNjtuKyspZVtuXT10W25dK3Jbbl19ZnVuY3Rpb24gTChlLHQscil7Zm9yKHZhciBuPTA7bjwxNjtuKyspZVtuXT10W25dLXJbbl19ZnVuY3Rpb24gRihlLHQscil7dmFyIG4sbyxzPTAsaT0wLGE9MCxjPTAsdT0wLGw9MCxoPTAscD0wLGY9MCxkPTAsZz0wLHk9MCxtPTAsYj0wLEE9MCx3PTAsdj0wLFM9MCx4PTAsRT0wLFQ9MCxfPTAsQj0wLFU9MCxrPTAsST0wLEM9MCxSPTAsTz0wLEQ9MCxOPTAsUD1yWzBdLEw9clsxXSxGPXJbMl0sej1yWzNdLGo9cls0XSxNPXJbNV0sSD1yWzZdLEc9cls3XSxLPXJbOF0scT1yWzldLCQ9clsxMF0sVj1yWzExXSxXPXJbMTJdLFg9clsxM10sWT1yWzE0XSxKPXJbMTVdO3MrPShuPXRbMF0pKlAsaSs9bipMLGErPW4qRixjKz1uKnosdSs9bipqLGwrPW4qTSxoKz1uKkgscCs9bipHLGYrPW4qSyxkKz1uKnEsZys9biokLHkrPW4qVixtKz1uKlcsYis9bipYLEErPW4qWSx3Kz1uKkosaSs9KG49dFsxXSkqUCxhKz1uKkwsYys9bipGLHUrPW4qeixsKz1uKmosaCs9bipNLHArPW4qSCxmKz1uKkcsZCs9bipLLGcrPW4qcSx5Kz1uKiQsbSs9bipWLGIrPW4qVyxBKz1uKlgsdys9bipZLHYrPW4qSixhKz0obj10WzJdKSpQLGMrPW4qTCx1Kz1uKkYsbCs9bip6LGgrPW4qaixwKz1uKk0sZis9bipILGQrPW4qRyxnKz1uKksseSs9bipxLG0rPW4qJCxiKz1uKlYsQSs9bipXLHcrPW4qWCx2Kz1uKlksUys9bipKLGMrPShuPXRbM10pKlAsdSs9bipMLGwrPW4qRixoKz1uKnoscCs9bipqLGYrPW4qTSxkKz1uKkgsZys9bipHLHkrPW4qSyxtKz1uKnEsYis9biokLEErPW4qVix3Kz1uKlcsdis9bipYLFMrPW4qWSx4Kz1uKkosdSs9KG49dFs0XSkqUCxsKz1uKkwsaCs9bipGLHArPW4qeixmKz1uKmosZCs9bipNLGcrPW4qSCx5Kz1uKkcsbSs9bipLLGIrPW4qcSxBKz1uKiQsdys9bipWLHYrPW4qVyxTKz1uKlgseCs9bipZLEUrPW4qSixsKz0obj10WzVdKSpQLGgrPW4qTCxwKz1uKkYsZis9bip6LGQrPW4qaixnKz1uKk0seSs9bipILG0rPW4qRyxiKz1uKkssQSs9bipxLHcrPW4qJCx2Kz1uKlYsUys9bipXLHgrPW4qWCxFKz1uKlksVCs9bipKLGgrPShuPXRbNl0pKlAscCs9bipMLGYrPW4qRixkKz1uKnosZys9bipqLHkrPW4qTSxtKz1uKkgsYis9bipHLEErPW4qSyx3Kz1uKnEsdis9biokLFMrPW4qVix4Kz1uKlcsRSs9bipYLFQrPW4qWSxfKz1uKkoscCs9KG49dFs3XSkqUCxmKz1uKkwsZCs9bipGLGcrPW4qeix5Kz1uKmosbSs9bipNLGIrPW4qSCxBKz1uKkcsdys9bipLLHYrPW4qcSxTKz1uKiQseCs9bipWLEUrPW4qVyxUKz1uKlgsXys9bipZLEIrPW4qSixmKz0obj10WzhdKSpQLGQrPW4qTCxnKz1uKkYseSs9bip6LG0rPW4qaixiKz1uKk0sQSs9bipILHcrPW4qRyx2Kz1uKkssUys9bipxLHgrPW4qJCxFKz1uKlYsVCs9bipXLF8rPW4qWCxCKz1uKlksVSs9bipKLGQrPShuPXRbOV0pKlAsZys9bipMLHkrPW4qRixtKz1uKnosYis9bipqLEErPW4qTSx3Kz1uKkgsdis9bipHLFMrPW4qSyx4Kz1uKnEsRSs9biokLFQrPW4qVixfKz1uKlcsQis9bipYLFUrPW4qWSxrKz1uKkosZys9KG49dFsxMF0pKlAseSs9bipMLG0rPW4qRixiKz1uKnosQSs9bipqLHcrPW4qTSx2Kz1uKkgsUys9bipHLHgrPW4qSyxFKz1uKnEsVCs9biokLF8rPW4qVixCKz1uKlcsVSs9bipYLGsrPW4qWSxJKz1uKkoseSs9KG49dFsxMV0pKlAsbSs9bipMLGIrPW4qRixBKz1uKnosdys9bipqLHYrPW4qTSxTKz1uKkgseCs9bipHLEUrPW4qSyxUKz1uKnEsXys9biokLEIrPW4qVixVKz1uKlcsays9bipYLEkrPW4qWSxDKz1uKkosbSs9KG49dFsxMl0pKlAsYis9bipMLEErPW4qRix3Kz1uKnosdis9bipqLFMrPW4qTSx4Kz1uKkgsRSs9bipHLFQrPW4qSyxfKz1uKnEsQis9biokLFUrPW4qVixrKz1uKlcsSSs9bipYLEMrPW4qWSxSKz1uKkosYis9KG49dFsxM10pKlAsQSs9bipMLHcrPW4qRix2Kz1uKnosUys9bipqLHgrPW4qTSxFKz1uKkgsVCs9bipHLF8rPW4qSyxCKz1uKnEsVSs9biokLGsrPW4qVixJKz1uKlcsQys9bipYLFIrPW4qWSxPKz1uKkosQSs9KG49dFsxNF0pKlAsdys9bipMLHYrPW4qRixTKz1uKnoseCs9bipqLEUrPW4qTSxUKz1uKkgsXys9bipHLEIrPW4qSyxVKz1uKnEsays9biokLEkrPW4qVixDKz1uKlcsUis9bipYLE8rPW4qWSxEKz1uKkosdys9KG49dFsxNV0pKlAsaSs9MzgqKFMrPW4qRiksYSs9MzgqKHgrPW4qeiksYys9MzgqKEUrPW4qaiksdSs9MzgqKFQrPW4qTSksbCs9MzgqKF8rPW4qSCksaCs9MzgqKEIrPW4qRykscCs9MzgqKFUrPW4qSyksZis9MzgqKGsrPW4qcSksZCs9MzgqKEkrPW4qJCksZys9MzgqKEMrPW4qVikseSs9MzgqKFIrPW4qVyksbSs9MzgqKE8rPW4qWCksYis9MzgqKEQrPW4qWSksQSs9MzgqKE4rPW4qSikscz0obj0ocys9MzgqKHYrPW4qTCkpKyhvPTEpKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxpPShuPWkrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksYT0obj1hK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGM9KG49YytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSx1PShuPXUrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksbD0obj1sK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGg9KG49aCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxwPShuPXArbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksZj0obj1mK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGQ9KG49ZCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxnPShuPWcrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSkseT0obj15K28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLG09KG49bStvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxiPShuPWIrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksQT0obj1BK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLHc9KG49dytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxzPShuPShzKz1vLTErMzcqKG8tMSkpKyhvPTEpKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxpPShuPWkrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksYT0obj1hK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGM9KG49YytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSx1PShuPXUrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksbD0obj1sK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGg9KG49aCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxwPShuPXArbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksZj0obj1mK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGQ9KG49ZCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxnPShuPWcrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSkseT0obj15K28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLG09KG49bStvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxiPShuPWIrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksQT0obj1BK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLHc9KG49dytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxzKz1vLTErMzcqKG8tMSksZVswXT1zLGVbMV09aSxlWzJdPWEsZVszXT1jLGVbNF09dSxlWzVdPWwsZVs2XT1oLGVbN109cCxlWzhdPWYsZVs5XT1kLGVbMTBdPWcsZVsxMV09eSxlWzEyXT1tLGVbMTNdPWIsZVsxNF09QSxlWzE1XT13fWZ1bmN0aW9uIHooZSx0KXtGKGUsdCx0KX1mdW5jdGlvbiBqKGUscil7dmFyIG4sbz10KCk7Zm9yKG49MDtuPDE2O24rKylvW25dPXJbbl07Zm9yKG49MjUzO24+PTA7bi0tKXoobyxvKSwyIT09biYmNCE9PW4mJkYobyxvLHIpO2ZvcihuPTA7bjwxNjtuKyspZVtuXT1vW25dfWZ1bmN0aW9uIE0oZSxyKXt2YXIgbixvPXQoKTtmb3Iobj0wO248MTY7bisrKW9bbl09cltuXTtmb3Iobj0yNTA7bj49MDtuLS0peihvLG8pLDEhPT1uJiZGKG8sbyxyKTtmb3Iobj0wO248MTY7bisrKWVbbl09b1tuXX1mdW5jdGlvbiBIKGUscixuKXt2YXIgbyxzLGk9bmV3IFVpbnQ4QXJyYXkoMzIpLGM9bmV3IEZsb2F0NjRBcnJheSg4MCksdT10KCksbD10KCksaD10KCkscD10KCksZj10KCksZD10KCk7Zm9yKHM9MDtzPDMxO3MrKylpW3NdPXJbc107Zm9yKGlbMzFdPTEyNyZyWzMxXXw2NCxpWzBdJj0yNDgsTihjLG4pLHM9MDtzPDE2O3MrKylsW3NdPWNbc10scFtzXT11W3NdPWhbc109MDtmb3IodVswXT1wWzBdPTEscz0yNTQ7cz49MDstLXMpQyh1LGwsbz1pW3M+Pj4zXT4+Pig3JnMpJjEpLEMoaCxwLG8pLFAoZix1LGgpLEwodSx1LGgpLFAoaCxsLHApLEwobCxsLHApLHoocCxmKSx6KGQsdSksRih1LGgsdSksRihoLGwsZiksUChmLHUsaCksTCh1LHUsaCkseihsLHUpLEwoaCxwLGQpLEYodSxoLGEpLFAodSx1LHApLEYoaCxoLHUpLEYodSxwLGQpLEYocCxsLGMpLHoobCxmKSxDKHUsbCxvKSxDKGgscCxvKTtmb3Iocz0wO3M8MTY7cysrKWNbcysxNl09dVtzXSxjW3MrMzJdPWhbc10sY1tzKzQ4XT1sW3NdLGNbcys2NF09cFtzXTt2YXIgZz1jLnN1YmFycmF5KDMyKSx5PWMuc3ViYXJyYXkoMTYpO3JldHVybiBqKGcsZyksRih5LHksZyksUihlLHkpLDB9ZnVuY3Rpb24gRyhlLHQpe3JldHVybiBIKGUsdCxvKX1mdW5jdGlvbiBLKGUsdCl7cmV0dXJuIHIodCwzMiksRyhlLHQpfWZ1bmN0aW9uIHEoZSx0LHIpe3ZhciBvPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gSChvLHIsdCksYihlLG4sbyxBKX1FLnByb3RvdHlwZS5ibG9ja3M9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbixvLHMsaSxhLGMsdSxsLGgscCxmLGQsZyx5LG0sYixBLHcsdixTPXRoaXMuZmluPzA6MjA0OCx4PXRoaXMuaFswXSxFPXRoaXMuaFsxXSxUPXRoaXMuaFsyXSxfPXRoaXMuaFszXSxCPXRoaXMuaFs0XSxVPXRoaXMuaFs1XSxrPXRoaXMuaFs2XSxJPXRoaXMuaFs3XSxDPXRoaXMuaFs4XSxSPXRoaXMuaFs5XSxPPXRoaXMuclswXSxEPXRoaXMuclsxXSxOPXRoaXMuclsyXSxQPXRoaXMuclszXSxMPXRoaXMucls0XSxGPXRoaXMucls1XSx6PXRoaXMucls2XSxqPXRoaXMucls3XSxNPXRoaXMucls4XSxIPXRoaXMucls5XTtyPj0xNjspcD1oPTAscCs9KHgrPTgxOTEmKG49MjU1JmVbdCswXXwoMjU1JmVbdCsxXSk8PDgpKSpPLHArPShFKz04MTkxJihuPj4+MTN8KG89MjU1JmVbdCsyXXwoMjU1JmVbdCszXSk8PDgpPDwzKSkqKDUqSCkscCs9KFQrPTgxOTEmKG8+Pj4xMHwocz0yNTUmZVt0KzRdfCgyNTUmZVt0KzVdKTw8OCk8PDYpKSooNSpNKSxwKz0oXys9ODE5MSYocz4+Pjd8KGk9MjU1JmVbdCs2XXwoMjU1JmVbdCs3XSk8PDgpPDw5KSkqKDUqaiksaD0ocCs9KEIrPTgxOTEmKGk+Pj40fChhPTI1NSZlW3QrOF18KDI1NSZlW3QrOV0pPDw4KTw8MTIpKSooNSp6KSk+Pj4xMyxwJj04MTkxLHArPShVKz1hPj4+MSY4MTkxKSooNSpGKSxwKz0oays9ODE5MSYoYT4+PjE0fChjPTI1NSZlW3QrMTBdfCgyNTUmZVt0KzExXSk8PDgpPDwyKSkqKDUqTCkscCs9KEkrPTgxOTEmKGM+Pj4xMXwodT0yNTUmZVt0KzEyXXwoMjU1JmVbdCsxM10pPDw4KTw8NSkpKig1KlApLHArPShDKz04MTkxJih1Pj4+OHwobD0yNTUmZVt0KzE0XXwoMjU1JmVbdCsxNV0pPDw4KTw8OCkpKig1Kk4pLGY9aCs9KHArPShSKz1sPj4+NXxTKSooNSpEKSk+Pj4xMyxmKz14KkQsZis9RSpPLGYrPVQqKDUqSCksZis9XyooNSpNKSxoPShmKz1CKig1KmopKT4+PjEzLGYmPTgxOTEsZis9VSooNSp6KSxmKz1rKig1KkYpLGYrPUkqKDUqTCksZis9QyooNSpQKSxoKz0oZis9UiooNSpOKSk+Pj4xMyxmJj04MTkxLGQ9aCxkKz14Kk4sZCs9RSpELGQrPVQqTyxkKz1fKig1KkgpLGg9KGQrPUIqKDUqTSkpPj4+MTMsZCY9ODE5MSxkKz1VKig1KmopLGQrPWsqKDUqeiksZCs9SSooNSpGKSxkKz1DKig1KkwpLGc9aCs9KGQrPVIqKDUqUCkpPj4+MTMsZys9eCpQLGcrPUUqTixnKz1UKkQsZys9XypPLGg9KGcrPUIqKDUqSCkpPj4+MTMsZyY9ODE5MSxnKz1VKig1Kk0pLGcrPWsqKDUqaiksZys9SSooNSp6KSxnKz1DKig1KkYpLHk9aCs9KGcrPVIqKDUqTCkpPj4+MTMseSs9eCpMLHkrPUUqUCx5Kz1UKk4seSs9XypELGg9KHkrPUIqTyk+Pj4xMyx5Jj04MTkxLHkrPVUqKDUqSCkseSs9ayooNSpNKSx5Kz1JKig1KmopLHkrPUMqKDUqeiksbT1oKz0oeSs9UiooNSpGKSk+Pj4xMyxtKz14KkYsbSs9RSpMLG0rPVQqUCxtKz1fKk4saD0obSs9QipEKT4+PjEzLG0mPTgxOTEsbSs9VSpPLG0rPWsqKDUqSCksbSs9SSooNSpNKSxtKz1DKig1KmopLGI9aCs9KG0rPVIqKDUqeikpPj4+MTMsYis9eCp6LGIrPUUqRixiKz1UKkwsYis9XypQLGg9KGIrPUIqTik+Pj4xMyxiJj04MTkxLGIrPVUqRCxiKz1rKk8sYis9SSooNSpIKSxiKz1DKig1Kk0pLEE9aCs9KGIrPVIqKDUqaikpPj4+MTMsQSs9eCpqLEErPUUqeixBKz1UKkYsQSs9XypMLGg9KEErPUIqUCk+Pj4xMyxBJj04MTkxLEErPVUqTixBKz1rKkQsQSs9SSpPLEErPUMqKDUqSCksdz1oKz0oQSs9UiooNSpNKSk+Pj4xMyx3Kz14Kk0sdys9RSpqLHcrPVQqeix3Kz1fKkYsaD0odys9QipMKT4+PjEzLHcmPTgxOTEsdys9VSpQLHcrPWsqTix3Kz1JKkQsdys9QypPLHY9aCs9KHcrPVIqKDUqSCkpPj4+MTMsdis9eCpILHYrPUUqTSx2Kz1UKmosdis9Xyp6LGg9KHYrPUIqRik+Pj4xMyx2Jj04MTkxLHYrPVUqTCx2Kz1rKlAsdis9SSpOLHYrPUMqRCx4PXA9ODE5MSYoaD0oaD0oKGgrPSh2Kz1SKk8pPj4+MTMpPDwyKStofDApKyhwJj04MTkxKXwwKSxFPWYrPWg+Pj49MTMsVD1kJj04MTkxLF89ZyY9ODE5MSxCPXkmPTgxOTEsVT1tJj04MTkxLGs9YiY9ODE5MSxJPUEmPTgxOTEsQz13Jj04MTkxLFI9diY9ODE5MSx0Kz0xNixyLT0xNjt0aGlzLmhbMF09eCx0aGlzLmhbMV09RSx0aGlzLmhbMl09VCx0aGlzLmhbM109Xyx0aGlzLmhbNF09Qix0aGlzLmhbNV09VSx0aGlzLmhbNl09ayx0aGlzLmhbN109SSx0aGlzLmhbOF09Qyx0aGlzLmhbOV09Un0sRS5wcm90b3R5cGUuZmluaXNoPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaT1uZXcgVWludDE2QXJyYXkoMTApO2lmKHRoaXMubGVmdG92ZXIpe2ZvcihzPXRoaXMubGVmdG92ZXIsdGhpcy5idWZmZXJbcysrXT0xO3M8MTY7cysrKXRoaXMuYnVmZmVyW3NdPTA7dGhpcy5maW49MSx0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KX1mb3Iocj10aGlzLmhbMV0+Pj4xMyx0aGlzLmhbMV0mPTgxOTEscz0yO3M8MTA7cysrKXRoaXMuaFtzXSs9cixyPXRoaXMuaFtzXT4+PjEzLHRoaXMuaFtzXSY9ODE5MTtmb3IodGhpcy5oWzBdKz01KnIscj10aGlzLmhbMF0+Pj4xMyx0aGlzLmhbMF0mPTgxOTEsdGhpcy5oWzFdKz1yLHI9dGhpcy5oWzFdPj4+MTMsdGhpcy5oWzFdJj04MTkxLHRoaXMuaFsyXSs9cixpWzBdPXRoaXMuaFswXSs1LHI9aVswXT4+PjEzLGlbMF0mPTgxOTEscz0xO3M8MTA7cysrKWlbc109dGhpcy5oW3NdK3Iscj1pW3NdPj4+MTMsaVtzXSY9ODE5MTtmb3IoaVs5XS09ODE5MixuPSgxXnIpLTEscz0wO3M8MTA7cysrKWlbc10mPW47Zm9yKG49fm4scz0wO3M8MTA7cysrKXRoaXMuaFtzXT10aGlzLmhbc10mbnxpW3NdO2Zvcih0aGlzLmhbMF09NjU1MzUmKHRoaXMuaFswXXx0aGlzLmhbMV08PDEzKSx0aGlzLmhbMV09NjU1MzUmKHRoaXMuaFsxXT4+PjN8dGhpcy5oWzJdPDwxMCksdGhpcy5oWzJdPTY1NTM1Jih0aGlzLmhbMl0+Pj42fHRoaXMuaFszXTw8NyksdGhpcy5oWzNdPTY1NTM1Jih0aGlzLmhbM10+Pj45fHRoaXMuaFs0XTw8NCksdGhpcy5oWzRdPTY1NTM1Jih0aGlzLmhbNF0+Pj4xMnx0aGlzLmhbNV08PDF8dGhpcy5oWzZdPDwxNCksdGhpcy5oWzVdPTY1NTM1Jih0aGlzLmhbNl0+Pj4yfHRoaXMuaFs3XTw8MTEpLHRoaXMuaFs2XT02NTUzNSYodGhpcy5oWzddPj4+NXx0aGlzLmhbOF08PDgpLHRoaXMuaFs3XT02NTUzNSYodGhpcy5oWzhdPj4+OHx0aGlzLmhbOV08PDUpLG89dGhpcy5oWzBdK3RoaXMucGFkWzBdLHRoaXMuaFswXT02NTUzNSZvLHM9MTtzPDg7cysrKW89KHRoaXMuaFtzXSt0aGlzLnBhZFtzXXwwKSsobz4+PjE2KXwwLHRoaXMuaFtzXT02NTUzNSZvO2VbdCswXT10aGlzLmhbMF0+Pj4wJjI1NSxlW3QrMV09dGhpcy5oWzBdPj4+OCYyNTUsZVt0KzJdPXRoaXMuaFsxXT4+PjAmMjU1LGVbdCszXT10aGlzLmhbMV0+Pj44JjI1NSxlW3QrNF09dGhpcy5oWzJdPj4+MCYyNTUsZVt0KzVdPXRoaXMuaFsyXT4+PjgmMjU1LGVbdCs2XT10aGlzLmhbM10+Pj4wJjI1NSxlW3QrN109dGhpcy5oWzNdPj4+OCYyNTUsZVt0KzhdPXRoaXMuaFs0XT4+PjAmMjU1LGVbdCs5XT10aGlzLmhbNF0+Pj44JjI1NSxlW3QrMTBdPXRoaXMuaFs1XT4+PjAmMjU1LGVbdCsxMV09dGhpcy5oWzVdPj4+OCYyNTUsZVt0KzEyXT10aGlzLmhbNl0+Pj4wJjI1NSxlW3QrMTNdPXRoaXMuaFs2XT4+PjgmMjU1LGVbdCsxNF09dGhpcy5oWzddPj4+MCYyNTUsZVt0KzE1XT10aGlzLmhbN10+Pj44JjI1NX0sRS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvO2lmKHRoaXMubGVmdG92ZXIpe2Zvcigobz0xNi10aGlzLmxlZnRvdmVyKT5yJiYobz1yKSxuPTA7bjxvO24rKyl0aGlzLmJ1ZmZlclt0aGlzLmxlZnRvdmVyK25dPWVbdCtuXTtpZihyLT1vLHQrPW8sdGhpcy5sZWZ0b3Zlcis9byx0aGlzLmxlZnRvdmVyPDE2KXJldHVybjt0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KSx0aGlzLmxlZnRvdmVyPTB9aWYocj49MTYmJihvPXItciUxNix0aGlzLmJsb2NrcyhlLHQsbyksdCs9byxyLT1vKSxyKXtmb3Iobj0wO248cjtuKyspdGhpcy5idWZmZXJbdGhpcy5sZWZ0b3ZlcituXT1lW3Qrbl07dGhpcy5sZWZ0b3Zlcis9cn19O3ZhciAkPUIsVj1VLFc9WzExMTYzNTI0MDgsMzYwOTc2NzQ1OCwxODk5NDQ3NDQxLDYwMjg5MTcyNSwzMDQ5MzIzNDcxLDM5NjQ0ODQzOTksMzkyMTAwOTU3MywyMTczMjk1NTQ4LDk2MTk4NzE2Myw0MDgxNjI4NDcyLDE1MDg5NzA5OTMsMzA1MzgzNDI2NSwyNDUzNjM1NzQ4LDI5Mzc2NzE1NzksMjg3MDc2MzIyMSwzNjY0NjA5NTYwLDM2MjQzODEwODAsMjczNDg4MzM5NCwzMTA1OTg0MDEsMTE2NDk5NjU0Miw2MDcyMjUyNzgsMTMyMzYxMDc2NCwxNDI2ODgxOTg3LDM1OTAzMDQ5OTQsMTkyNTA3ODM4OCw0MDY4MTgyMzgzLDIxNjIwNzgyMDYsOTkxMzM2MTEzLDI2MTQ4ODgxMDMsNjMzODAzMzE3LDMyNDgyMjI1ODAsMzQ3OTc3NDg2OCwzODM1MzkwNDAxLDI2NjY2MTM0NTgsNDAyMjIyNDc3NCw5NDQ3MTExMzksMjY0MzQ3MDc4LDIzNDEyNjI3NzMsNjA0ODA3NjI4LDIwMDc4MDA5MzMsNzcwMjU1OTgzLDE0OTU5OTA5MDEsMTI0OTE1MDEyMiwxODU2NDMxMjM1LDE1NTUwODE2OTIsMzE3NTIxODEzMiwxOTk2MDY0OTg2LDIxOTg5NTA4MzcsMjU1NDIyMDg4MiwzOTk5NzE5MzM5LDI4MjE4MzQzNDksNzY2Nzg0MDE2LDI5NTI5OTY4MDgsMjU2NjU5NDg3OSwzMjEwMzEzNjcxLDMyMDMzMzc5NTYsMzMzNjU3MTg5MSwxMDM0NDU3MDI2LDM1ODQ1Mjg3MTEsMjQ2Njk0ODkwMSwxMTM5MjY5OTMsMzc1ODMyNjM4MywzMzgyNDE4OTUsMTY4NzE3OTM2LDY2NjMwNzIwNSwxMTg4MTc5OTY0LDc3MzUyOTkxMiwxNTQ2MDQ1NzM0LDEyOTQ3NTczNzIsMTUyMjgwNTQ4NSwxMzk2MTgyMjkxLDI2NDM4MzM4MjMsMTY5NTE4MzcwMCwyMzQzNTI3MzkwLDE5ODY2NjEwNTEsMTAxNDQ3NzQ4MCwyMTc3MDI2MzUwLDEyMDY3NTkxNDIsMjQ1Njk1NjAzNywzNDQwNzc2MjcsMjczMDQ4NTkyMSwxMjkwODYzNDYwLDI4MjAzMDI0MTEsMzE1ODQ1NDI3MywzMjU5NzMwODAwLDM1MDU5NTI2NTcsMzM0NTc2NDc3MSwxMDYyMTcwMDgsMzUxNjA2NTgxNywzNjA2MDA4MzQ0LDM2MDAzNTI4MDQsMTQzMjcyNTc3Niw0MDk0NTcxOTA5LDE0NjcwMzE1OTQsMjc1NDIzMzQ0LDg1MTE2OTcyMCw0MzAyMjc3MzQsMzEwMDgyMzc1Miw1MDY5NDg2MTYsMTM2MzI1ODE5NSw2NTkwNjA1NTYsMzc1MDY4NTU5Myw4ODM5OTc4NzcsMzc4NTA1MDI4MCw5NTgxMzk1NzEsMzMxODMwNzQyNywxMzIyODIyMjE4LDM4MTI3MjM0MDMsMTUzNzAwMjA2MywyMDAzMDM0OTk1LDE3NDc4NzM3NzksMzYwMjAzNjg5OSwxOTU1NTYyMjIyLDE1NzU5OTAwMTIsMjAyNDEwNDgxNSwxMTI1NTkyOTI4LDIyMjc3MzA0NTIsMjcxNjkwNDMwNiwyMzYxODUyNDI0LDQ0Mjc3NjA0NCwyNDI4NDM2NDc0LDU5MzY5ODM0NCwyNzU2NzM0MTg3LDM3MzMxMTAyNDksMzIwNDAzMTQ3OSwyOTk5MzUxNTczLDMzMjkzMjUyOTgsMzgxNTkyMDQyNywzMzkxNTY5NjE0LDM5MjgzODM5MDAsMzUxNTI2NzI3MSw1NjYyODA3MTEsMzk0MDE4NzYwNiwzNDU0MDY5NTM0LDQxMTg2MzAyNzEsNDAwMDIzOTk5MiwxMTY0MTg0NzQsMTkxNDEzODU1NCwxNzQyOTI0MjEsMjczMTA1NTI3MCwyODkzODAzNTYsMzIwMzk5MzAwNiw0NjAzOTMyNjksMzIwNjIwMzE1LDY4NTQ3MTczMyw1ODc0OTY4MzYsODUyMTQyOTcxLDEwODY3OTI4NTEsMTAxNzAzNjI5OCwzNjU1NDMxMDAsMTEyNjAwMDU4MCwyNjE4Mjk3Njc2LDEyODgwMzM0NzAsMzQwOTg1NTE1OCwxNTAxNTA1OTQ4LDQyMzQ1MDk4NjYsMTYwNzE2NzkxNSw5ODcxNjc0NjgsMTgxNjQwMjMxNiwxMjQ2MTg5NTkxXTtmdW5jdGlvbiBYKGUsdCxyLG4pe2Zvcih2YXIgbyxzLGksYSxjLHUsbCxoLHAsZixkLGcseSxtLGIsQSx3LHYsUyx4LEUsVCxfLEIsVSxrLEk9bmV3IEludDMyQXJyYXkoMTYpLEM9bmV3IEludDMyQXJyYXkoMTYpLFI9ZVswXSxPPWVbMV0sRD1lWzJdLE49ZVszXSxQPWVbNF0sTD1lWzVdLEY9ZVs2XSx6PWVbN10saj10WzBdLE09dFsxXSxIPXRbMl0sRz10WzNdLEs9dFs0XSxxPXRbNV0sJD10WzZdLFY9dFs3XSxYPTA7bj49MTI4Oyl7Zm9yKFM9MDtTPDE2O1MrKyl4PTgqUytYLElbU109clt4KzBdPDwyNHxyW3grMV08PDE2fHJbeCsyXTw8OHxyW3grM10sQ1tTXT1yW3grNF08PDI0fHJbeCs1XTw8MTZ8clt4KzZdPDw4fHJbeCs3XTtmb3IoUz0wO1M8ODA7UysrKWlmKG89UixzPU8saT1ELGE9TixjPVAsdT1MLGw9RixwPWosZj1NLGQ9SCxnPUcseT1LLG09cSxiPSQsXz02NTUzNSYoVD1WKSxCPVQ+Pj4xNixVPTY1NTM1JihFPXopLGs9RT4+PjE2LF8rPTY1NTM1JihUPShLPj4+MTR8UDw8MTgpXihLPj4+MTh8UDw8MTQpXihQPj4+OXxLPDwyMykpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT0oUD4+PjE0fEs8PDE4KV4oUD4+PjE4fEs8PDE0KV4oSz4+Pjl8UDw8MjMpKSxrKz1FPj4+MTYsXys9NjU1MzUmKFQ9SyZxXn5LJiQpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT1QJkxeflAmRiksays9RT4+PjE2LF8rPTY1NTM1JihUPVdbMipTKzFdKSxCKz1UPj4+MTYsVSs9NjU1MzUmKEU9V1syKlNdKSxrKz1FPj4+MTYsRT1JW1MlMTZdLEIrPShUPUNbUyUxNl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsVSs9KEIrPShfKz02NTUzNSZUKT4+PjE2KT4+PjE2LF89NjU1MzUmKFQ9dj02NTUzNSZffEI8PDE2KSxCPVQ+Pj4xNixVPTY1NTM1JihFPXc9NjU1MzUmVXwoays9VT4+PjE2KTw8MTYpLGs9RT4+PjE2LF8rPTY1NTM1JihUPShqPj4+Mjh8Ujw8NCleKFI+Pj4yfGo8PDMwKV4oUj4+Pjd8ajw8MjUpKSxCKz1UPj4+MTYsVSs9NjU1MzUmKEU9KFI+Pj4yOHxqPDw0KV4oaj4+PjJ8Ujw8MzApXihqPj4+N3xSPDwyNSkpLGsrPUU+Pj4xNixCKz0oVD1qJk1eaiZIXk0mSCk+Pj4xNixVKz02NTUzNSYoRT1SJk9eUiZEXk8mRCksays9RT4+PjE2LGg9NjU1MzUmKFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNil8KGsrPVU+Pj4xNik8PDE2LEE9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPWcpLEI9VD4+PjE2LFU9NjU1MzUmKEU9YSksaz1FPj4+MTYsQis9KFQ9dik+Pj4xNixVKz02NTUzNSYoRT13KSxrKz1FPj4+MTYsTz1vLEQ9cyxOPWksUD1hPTY1NTM1JihVKz0oQis9KF8rPTY1NTM1JlQpPj4+MTYpPj4+MTYpfChrKz1VPj4+MTYpPDwxNixMPWMsRj11LHo9bCxSPWgsTT1wLEg9ZixHPWQsSz1nPTY1NTM1Jl98Qjw8MTYscT15LCQ9bSxWPWIsaj1BLFMlMTY9PTE1KWZvcih4PTA7eDwxNjt4KyspRT1JW3hdLF89NjU1MzUmKFQ9Q1t4XSksQj1UPj4+MTYsVT02NTUzNSZFLGs9RT4+PjE2LEU9SVsoeCs5KSUxNl0sXys9NjU1MzUmKFQ9Q1soeCs5KSUxNl0pLEIrPVQ+Pj4xNixVKz02NTUzNSZFLGsrPUU+Pj4xNix3PUlbKHgrMSklMTZdLF8rPTY1NTM1JihUPSgodj1DWyh4KzEpJTE2XSk+Pj4xfHc8PDMxKV4odj4+Pjh8dzw8MjQpXih2Pj4+N3x3PDwyNSkpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT0odz4+PjF8djw8MzEpXih3Pj4+OHx2PDwyNCledz4+PjcpLGsrPUU+Pj4xNix3PUlbKHgrMTQpJTE2XSxCKz0oVD0oKHY9Q1soeCsxNCklMTZdKT4+PjE5fHc8PDEzKV4odz4+PjI5fHY8PDMpXih2Pj4+Nnx3PDwyNikpPj4+MTYsVSs9NjU1MzUmKEU9KHc+Pj4xOXx2PDwxMyleKHY+Pj4yOXx3PDwzKV53Pj4+Niksays9RT4+PjE2LGsrPShVKz0oQis9KF8rPTY1NTM1JlQpPj4+MTYpPj4+MTYpPj4+MTYsSVt4XT02NTUzNSZVfGs8PDE2LENbeF09NjU1MzUmX3xCPDwxNjtfPTY1NTM1JihUPWopLEI9VD4+PjE2LFU9NjU1MzUmKEU9Uiksaz1FPj4+MTYsRT1lWzBdLEIrPShUPXRbMF0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzBdPVI9NjU1MzUmVXxrPDwxNix0WzBdPWo9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPU0pLEI9VD4+PjE2LFU9NjU1MzUmKEU9Tyksaz1FPj4+MTYsRT1lWzFdLEIrPShUPXRbMV0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzFdPU89NjU1MzUmVXxrPDwxNix0WzFdPU09NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUgpLEI9VD4+PjE2LFU9NjU1MzUmKEU9RCksaz1FPj4+MTYsRT1lWzJdLEIrPShUPXRbMl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzJdPUQ9NjU1MzUmVXxrPDwxNix0WzJdPUg9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUcpLEI9VD4+PjE2LFU9NjU1MzUmKEU9Tiksaz1FPj4+MTYsRT1lWzNdLEIrPShUPXRbM10pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzNdPU49NjU1MzUmVXxrPDwxNix0WzNdPUc9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUspLEI9VD4+PjE2LFU9NjU1MzUmKEU9UCksaz1FPj4+MTYsRT1lWzRdLEIrPShUPXRbNF0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzRdPVA9NjU1MzUmVXxrPDwxNix0WzRdPUs9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPXEpLEI9VD4+PjE2LFU9NjU1MzUmKEU9TCksaz1FPj4+MTYsRT1lWzVdLEIrPShUPXRbNV0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzVdPUw9NjU1MzUmVXxrPDwxNix0WzVdPXE9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPSQpLEI9VD4+PjE2LFU9NjU1MzUmKEU9Riksaz1FPj4+MTYsRT1lWzZdLEIrPShUPXRbNl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzZdPUY9NjU1MzUmVXxrPDwxNix0WzZdPSQ9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPVYpLEI9VD4+PjE2LFU9NjU1MzUmKEU9eiksaz1FPj4+MTYsRT1lWzddLEIrPShUPXRbN10pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzddPXo9NjU1MzUmVXxrPDwxNix0WzddPVY9NjU1MzUmX3xCPDwxNixYKz0xMjgsbi09MTI4fXJldHVybiBufWZ1bmN0aW9uIFkoZSx0LHIpe3ZhciBuLG89bmV3IEludDMyQXJyYXkoOCkscz1uZXcgSW50MzJBcnJheSg4KSxpPW5ldyBVaW50OEFycmF5KDI1NiksYT1yO2ZvcihvWzBdPTE3NzkwMzM3MDMsb1sxXT0zMTQ0MTM0Mjc3LG9bMl09MTAxMzkwNDI0MixvWzNdPTI3NzM0ODA3NjIsb1s0XT0xMzU5ODkzMTE5LG9bNV09MjYwMDgyMjkyNCxvWzZdPTUyODczNDYzNSxvWzddPTE1NDE0NTkyMjUsc1swXT00MDg5MjM1NzIwLHNbMV09MjIyNzg3MzU5NSxzWzJdPTQyNzExNzU3MjMsc1szXT0xNTk1NzUwMTI5LHNbNF09MjkxNzU2NTEzNyxzWzVdPTcyNTUxMTE5OSxzWzZdPTQyMTUzODk1NDcsc1s3XT0zMjcwMzMyMDksWChvLHMsdCxyKSxyJT0xMjgsbj0wO248cjtuKyspaVtuXT10W2EtcituXTtmb3IoaVtyXT0xMjgsaVsocj0yNTYtMTI4KihyPDExMj8xOjApKS05XT0wLGYoaSxyLTgsYS81MzY4NzA5MTJ8MCxhPDwzKSxYKG8scyxpLHIpLG49MDtuPDg7bisrKWYoZSw4Km4sb1tuXSxzW25dKTtyZXR1cm4gMH1mdW5jdGlvbiBKKGUscil7dmFyIG49dCgpLG89dCgpLHM9dCgpLGk9dCgpLGE9dCgpLGM9dCgpLGw9dCgpLGg9dCgpLHA9dCgpO0wobixlWzFdLGVbMF0pLEwocCxyWzFdLHJbMF0pLEYobixuLHApLFAobyxlWzBdLGVbMV0pLFAocCxyWzBdLHJbMV0pLEYobyxvLHApLEYocyxlWzNdLHJbM10pLEYocyxzLHUpLEYoaSxlWzJdLHJbMl0pLFAoaSxpLGkpLEwoYSxvLG4pLEwoYyxpLHMpLFAobCxpLHMpLFAoaCxvLG4pLEYoZVswXSxhLGMpLEYoZVsxXSxoLGwpLEYoZVsyXSxsLGMpLEYoZVszXSxhLGgpfWZ1bmN0aW9uIFEoZSx0LHIpe3ZhciBuO2ZvcihuPTA7bjw0O24rKylDKGVbbl0sdFtuXSxyKX1mdW5jdGlvbiBaKGUscil7dmFyIG49dCgpLG89dCgpLHM9dCgpO2oocyxyWzJdKSxGKG4sclswXSxzKSxGKG8sclsxXSxzKSxSKGUsbyksZVszMV1ePUQobik8PDd9ZnVuY3Rpb24gZWUoZSx0LHIpe3ZhciBuLG87Zm9yKGsoZVswXSxzKSxrKGVbMV0saSksayhlWzJdLGkpLGsoZVszXSxzKSxvPTI1NTtvPj0wOy0tbylRKGUsdCxuPXJbby84fDBdPj4oNyZvKSYxKSxKKHQsZSksSihlLGUpLFEoZSx0LG4pfWZ1bmN0aW9uIHRlKGUscil7dmFyIG49W3QoKSx0KCksdCgpLHQoKV07ayhuWzBdLGwpLGsoblsxXSxoKSxrKG5bMl0saSksRihuWzNdLGwsaCksZWUoZSxuLHIpfWZ1bmN0aW9uIHJlKGUsbixvKXt2YXIgcyxpPW5ldyBVaW50OEFycmF5KDY0KSxhPVt0KCksdCgpLHQoKSx0KCldO2ZvcihvfHxyKG4sMzIpLFkoaSxuLDMyKSxpWzBdJj0yNDgsaVszMV0mPTEyNyxpWzMxXXw9NjQsdGUoYSxpKSxaKGUsYSkscz0wO3M8MzI7cysrKW5bcyszMl09ZVtzXTtyZXR1cm4gMH12YXIgbmU9bmV3IEZsb2F0NjRBcnJheShbMjM3LDIxMSwyNDUsOTIsMjYsOTksMTgsODgsMjE0LDE1NiwyNDcsMTYyLDIyMiwyNDksMjIyLDIwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDE2XSk7ZnVuY3Rpb24gb2UoZSx0KXt2YXIgcixuLG8scztmb3Iobj02MztuPj0zMjstLW4pe2ZvcihyPTAsbz1uLTMyLHM9bi0xMjtvPHM7KytvKXRbb10rPXItMTYqdFtuXSpuZVtvLShuLTMyKV0scj1NYXRoLmZsb29yKCh0W29dKzEyOCkvMjU2KSx0W29dLT0yNTYqcjt0W29dKz1yLHRbbl09MH1mb3Iocj0wLG89MDtvPDMyO28rKyl0W29dKz1yLSh0WzMxXT4+NCkqbmVbb10scj10W29dPj44LHRbb10mPTI1NTtmb3Iobz0wO288MzI7bysrKXRbb10tPXIqbmVbb107Zm9yKG49MDtuPDMyO24rKyl0W24rMV0rPXRbbl0+PjgsZVtuXT0yNTUmdFtuXX1mdW5jdGlvbiBzZShlKXt2YXIgdCxyPW5ldyBGbG9hdDY0QXJyYXkoNjQpO2Zvcih0PTA7dDw2NDt0Kyspclt0XT1lW3RdO2Zvcih0PTA7dDw2NDt0KyspZVt0XT0wO29lKGUscil9ZnVuY3Rpb24gaWUoZSxyLG4sbyl7dmFyIHMsaSxhPW5ldyBVaW50OEFycmF5KDY0KSxjPW5ldyBVaW50OEFycmF5KDY0KSx1PW5ldyBVaW50OEFycmF5KDY0KSxsPW5ldyBGbG9hdDY0QXJyYXkoNjQpLGg9W3QoKSx0KCksdCgpLHQoKV07WShhLG8sMzIpLGFbMF0mPTI0OCxhWzMxXSY9MTI3LGFbMzFdfD02NDt2YXIgcD1uKzY0O2ZvcihzPTA7czxuO3MrKyllWzY0K3NdPXJbc107Zm9yKHM9MDtzPDMyO3MrKyllWzMyK3NdPWFbMzIrc107Zm9yKFkodSxlLnN1YmFycmF5KDMyKSxuKzMyKSxzZSh1KSx0ZShoLHUpLFooZSxoKSxzPTMyO3M8NjQ7cysrKWVbc109b1tzXTtmb3IoWShjLGUsbis2NCksc2UoYykscz0wO3M8NjQ7cysrKWxbc109MDtmb3Iocz0wO3M8MzI7cysrKWxbc109dVtzXTtmb3Iocz0wO3M8MzI7cysrKWZvcihpPTA7aTwzMjtpKyspbFtzK2ldKz1jW3NdKmFbaV07cmV0dXJuIG9lKGUuc3ViYXJyYXkoMzIpLGwpLHB9ZnVuY3Rpb24gYWUoZSxyLG4sbyl7dmFyIGEsdT1uZXcgVWludDhBcnJheSgzMiksbD1uZXcgVWludDhBcnJheSg2NCksaD1bdCgpLHQoKSx0KCksdCgpXSxmPVt0KCksdCgpLHQoKSx0KCldO2lmKG48NjQpcmV0dXJuLTE7aWYoZnVuY3Rpb24oZSxyKXt2YXIgbj10KCksbz10KCksYT10KCksdT10KCksbD10KCksaD10KCksZj10KCk7cmV0dXJuIGsoZVsyXSxpKSxOKGVbMV0scikseihhLGVbMV0pLEYodSxhLGMpLEwoYSxhLGVbMl0pLFAodSxlWzJdLHUpLHoobCx1KSx6KGgsbCksRihmLGgsbCksRihuLGYsYSksRihuLG4sdSksTShuLG4pLEYobixuLGEpLEYobixuLHUpLEYobixuLHUpLEYoZVswXSxuLHUpLHoobyxlWzBdKSxGKG8sbyx1KSxPKG8sYSkmJkYoZVswXSxlWzBdLHApLHoobyxlWzBdKSxGKG8sbyx1KSxPKG8sYSk/LTE6KEQoZVswXSk9PT1yWzMxXT4+NyYmTChlWzBdLHMsZVswXSksRihlWzNdLGVbMF0sZVsxXSksMCl9KGYsbykpcmV0dXJuLTE7Zm9yKGE9MDthPG47YSsrKWVbYV09clthXTtmb3IoYT0wO2E8MzI7YSsrKWVbYSszMl09b1thXTtpZihZKGwsZSxuKSxzZShsKSxlZShoLGYsbCksdGUoZixyLnN1YmFycmF5KDMyKSksSihoLGYpLFoodSxoKSxuLT02NCx5KHIsMCx1LDApKXtmb3IoYT0wO2E8bjthKyspZVthXT0wO3JldHVybi0xfWZvcihhPTA7YTxuO2ErKyllW2FdPXJbYSs2NF07cmV0dXJuIG59dmFyIGNlPTY0LHVlPTMyLGxlPTY0O2Z1bmN0aW9uIGhlKGUsdCl7aWYoMzIhPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQga2V5IHNpemVcIik7aWYoMjQhPT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgbm9uY2Ugc2l6ZVwiKX1mdW5jdGlvbiBwZSgpe2Zvcih2YXIgZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspaWYoIShhcmd1bWVudHNbZV1pbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJ1bmV4cGVjdGVkIHR5cGUsIHVzZSBVaW50OEFycmF5XCIpfWZ1bmN0aW9uIGZlKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKWVbdF09MH1lLmxvd2xldmVsPXtjcnlwdG9fY29yZV9oc2Fsc2EyMDpiLGNyeXB0b19zdHJlYW1feG9yOngsY3J5cHRvX3N0cmVhbTpTLGNyeXB0b19zdHJlYW1fc2Fsc2EyMF94b3I6dyxjcnlwdG9fc3RyZWFtX3NhbHNhMjA6dixjcnlwdG9fb25ldGltZWF1dGg6VCxjcnlwdG9fb25ldGltZWF1dGhfdmVyaWZ5Ol8sY3J5cHRvX3ZlcmlmeV8xNjpnLGNyeXB0b192ZXJpZnlfMzI6eSxjcnlwdG9fc2VjcmV0Ym94OkIsY3J5cHRvX3NlY3JldGJveF9vcGVuOlUsY3J5cHRvX3NjYWxhcm11bHQ6SCxjcnlwdG9fc2NhbGFybXVsdF9iYXNlOkcsY3J5cHRvX2JveF9iZWZvcmVubTpxLGNyeXB0b19ib3hfYWZ0ZXJubTokLGNyeXB0b19ib3g6ZnVuY3Rpb24oZSx0LHIsbixvLHMpe3ZhciBpPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShpLG8scyksJChlLHQscixuLGkpfSxjcnlwdG9fYm94X29wZW46ZnVuY3Rpb24oZSx0LHIsbixvLHMpe3ZhciBpPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShpLG8scyksVihlLHQscixuLGkpfSxjcnlwdG9fYm94X2tleXBhaXI6SyxjcnlwdG9faGFzaDpZLGNyeXB0b19zaWduOmllLGNyeXB0b19zaWduX2tleXBhaXI6cmUsY3J5cHRvX3NpZ25fb3BlbjphZSxjcnlwdG9fc2VjcmV0Ym94X0tFWUJZVEVTOjMyLGNyeXB0b19zZWNyZXRib3hfTk9OQ0VCWVRFUzoyNCxjcnlwdG9fc2VjcmV0Ym94X1pFUk9CWVRFUzozMixjcnlwdG9fc2VjcmV0Ym94X0JPWFpFUk9CWVRFUzoxNixjcnlwdG9fc2NhbGFybXVsdF9CWVRFUzozMixjcnlwdG9fc2NhbGFybXVsdF9TQ0FMQVJCWVRFUzozMixjcnlwdG9fYm94X1BVQkxJQ0tFWUJZVEVTOjMyLGNyeXB0b19ib3hfU0VDUkVUS0VZQllURVM6MzIsY3J5cHRvX2JveF9CRUZPUkVOTUJZVEVTOjMyLGNyeXB0b19ib3hfTk9OQ0VCWVRFUzoyNCxjcnlwdG9fYm94X1pFUk9CWVRFUzozMixjcnlwdG9fYm94X0JPWFpFUk9CWVRFUzoxNixjcnlwdG9fc2lnbl9CWVRFUzpjZSxjcnlwdG9fc2lnbl9QVUJMSUNLRVlCWVRFUzp1ZSxjcnlwdG9fc2lnbl9TRUNSRVRLRVlCWVRFUzpsZSxjcnlwdG9fc2lnbl9TRUVEQllURVM6MzIsY3J5cHRvX2hhc2hfQllURVM6NjQsZ2Y6dCxEOmMsTDpuZSxwYWNrMjU1MTk6Uix1bnBhY2syNTUxOTpOLE06RixBOlAsUzp6LFo6TCxwb3cyNTIzOk0sYWRkOkosc2V0MjU1MTk6ayxtb2RMOm9lLHNjYWxhcm11bHQ6ZWUsc2NhbGFyYmFzZTp0ZX0sZS5yYW5kb21CeXRlcz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgVWludDhBcnJheShlKTtyZXR1cm4gcih0LGUpLHR9LGUuc2VjcmV0Ym94PWZ1bmN0aW9uKGUsdCxyKXtwZShlLHQsciksaGUocix0KTtmb3IodmFyIG49bmV3IFVpbnQ4QXJyYXkoMzIrZS5sZW5ndGgpLG89bmV3IFVpbnQ4QXJyYXkobi5sZW5ndGgpLHM9MDtzPGUubGVuZ3RoO3MrKyluW3MrMzJdPWVbc107cmV0dXJuIEIobyxuLG4ubGVuZ3RoLHQsciksby5zdWJhcnJheSgxNil9LGUuc2VjcmV0Ym94Lm9wZW49ZnVuY3Rpb24oZSx0LHIpe3BlKGUsdCxyKSxoZShyLHQpO2Zvcih2YXIgbj1uZXcgVWludDhBcnJheSgxNitlLmxlbmd0aCksbz1uZXcgVWludDhBcnJheShuLmxlbmd0aCkscz0wO3M8ZS5sZW5ndGg7cysrKW5bcysxNl09ZVtzXTtyZXR1cm4gbi5sZW5ndGg8MzJ8fDAhPT1VKG8sbixuLmxlbmd0aCx0LHIpP251bGw6by5zdWJhcnJheSgzMil9LGUuc2VjcmV0Ym94LmtleUxlbmd0aD0zMixlLnNlY3JldGJveC5ub25jZUxlbmd0aD0yNCxlLnNlY3JldGJveC5vdmVyaGVhZExlbmd0aD0xNixlLnNjYWxhck11bHQ9ZnVuY3Rpb24oZSx0KXtpZihwZShlLHQpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIG4gc2l6ZVwiKTtpZigzMiE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBwIHNpemVcIik7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBIKHIsZSx0KSxyfSxlLnNjYWxhck11bHQuYmFzZT1mdW5jdGlvbihlKXtpZihwZShlKSwzMiE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBuIHNpemVcIik7dmFyIHQ9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBHKHQsZSksdH0sZS5zY2FsYXJNdWx0LnNjYWxhckxlbmd0aD0zMixlLnNjYWxhck11bHQuZ3JvdXBFbGVtZW50TGVuZ3RoPTMyLGUuYm94PWZ1bmN0aW9uKHQscixuLG8pe3ZhciBzPWUuYm94LmJlZm9yZShuLG8pO3JldHVybiBlLnNlY3JldGJveCh0LHIscyl9LGUuYm94LmJlZm9yZT1mdW5jdGlvbihlLHQpe3BlKGUsdCksZnVuY3Rpb24oZSx0KXtpZigzMiE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBwdWJsaWMga2V5IHNpemVcIik7aWYoMzIhPT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgc2VjcmV0IGtleSBzaXplXCIpfShlLHQpO3ZhciByPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShyLGUsdCkscn0sZS5ib3guYWZ0ZXI9ZS5zZWNyZXRib3gsZS5ib3gub3Blbj1mdW5jdGlvbih0LHIsbixvKXt2YXIgcz1lLmJveC5iZWZvcmUobixvKTtyZXR1cm4gZS5zZWNyZXRib3gub3Blbih0LHIscyl9LGUuYm94Lm9wZW4uYWZ0ZXI9ZS5zZWNyZXRib3gub3BlbixlLmJveC5rZXlQYWlyPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IFVpbnQ4QXJyYXkoMzIpLHQ9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBLKGUsdCkse3B1YmxpY0tleTplLHNlY3JldEtleTp0fX0sZS5ib3gua2V5UGFpci5mcm9tU2VjcmV0S2V5PWZ1bmN0aW9uKGUpe2lmKHBlKGUpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlY3JldCBrZXkgc2l6ZVwiKTt2YXIgdD1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIEcodCxlKSx7cHVibGljS2V5OnQsc2VjcmV0S2V5Om5ldyBVaW50OEFycmF5KGUpfX0sZS5ib3gucHVibGljS2V5TGVuZ3RoPTMyLGUuYm94LnNlY3JldEtleUxlbmd0aD0zMixlLmJveC5zaGFyZWRLZXlMZW5ndGg9MzIsZS5ib3gubm9uY2VMZW5ndGg9MjQsZS5ib3gub3ZlcmhlYWRMZW5ndGg9ZS5zZWNyZXRib3gub3ZlcmhlYWRMZW5ndGgsZS5zaWduPWZ1bmN0aW9uKGUsdCl7aWYocGUoZSx0KSx0Lmxlbmd0aCE9PWxlKXRocm93IG5ldyBFcnJvcihcImJhZCBzZWNyZXQga2V5IHNpemVcIik7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoY2UrZS5sZW5ndGgpO3JldHVybiBpZShyLGUsZS5sZW5ndGgsdCkscn0sZS5zaWduLm9wZW49ZnVuY3Rpb24oZSx0KXtpZihwZShlLHQpLHQubGVuZ3RoIT09dWUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHB1YmxpYyBrZXkgc2l6ZVwiKTt2YXIgcj1uZXcgVWludDhBcnJheShlLmxlbmd0aCksbj1hZShyLGUsZS5sZW5ndGgsdCk7aWYobjwwKXJldHVybiBudWxsO2Zvcih2YXIgbz1uZXcgVWludDhBcnJheShuKSxzPTA7czxvLmxlbmd0aDtzKyspb1tzXT1yW3NdO3JldHVybiBvfSxlLnNpZ24uZGV0YWNoZWQ9ZnVuY3Rpb24odCxyKXtmb3IodmFyIG49ZS5zaWduKHQsciksbz1uZXcgVWludDhBcnJheShjZSkscz0wO3M8by5sZW5ndGg7cysrKW9bc109bltzXTtyZXR1cm4gb30sZS5zaWduLmRldGFjaGVkLnZlcmlmeT1mdW5jdGlvbihlLHQscil7aWYocGUoZSx0LHIpLHQubGVuZ3RoIT09Y2UpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNpZ25hdHVyZSBzaXplXCIpO2lmKHIubGVuZ3RoIT09dWUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHB1YmxpYyBrZXkgc2l6ZVwiKTt2YXIgbixvPW5ldyBVaW50OEFycmF5KGNlK2UubGVuZ3RoKSxzPW5ldyBVaW50OEFycmF5KGNlK2UubGVuZ3RoKTtmb3Iobj0wO248Y2U7bisrKW9bbl09dFtuXTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKW9bbitjZV09ZVtuXTtyZXR1cm4gYWUocyxvLG8ubGVuZ3RoLHIpPj0wfSxlLnNpZ24ua2V5UGFpcj1mdW5jdGlvbigpe3ZhciBlPW5ldyBVaW50OEFycmF5KHVlKSx0PW5ldyBVaW50OEFycmF5KGxlKTtyZXR1cm4gcmUoZSx0KSx7cHVibGljS2V5OmUsc2VjcmV0S2V5OnR9fSxlLnNpZ24ua2V5UGFpci5mcm9tU2VjcmV0S2V5PWZ1bmN0aW9uKGUpe2lmKHBlKGUpLGUubGVuZ3RoIT09bGUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlY3JldCBrZXkgc2l6ZVwiKTtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkodWUpLHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdPWVbMzIrcl07cmV0dXJue3B1YmxpY0tleTp0LHNlY3JldEtleTpuZXcgVWludDhBcnJheShlKX19LGUuc2lnbi5rZXlQYWlyLmZyb21TZWVkPWZ1bmN0aW9uKGUpe2lmKHBlKGUpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlZWQgc2l6ZVwiKTtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkodWUpLHI9bmV3IFVpbnQ4QXJyYXkobGUpLG49MDtuPDMyO24rKylyW25dPWVbbl07cmV0dXJuIHJlKHQsciwhMCkse3B1YmxpY0tleTp0LHNlY3JldEtleTpyfX0sZS5zaWduLnB1YmxpY0tleUxlbmd0aD11ZSxlLnNpZ24uc2VjcmV0S2V5TGVuZ3RoPWxlLGUuc2lnbi5zZWVkTGVuZ3RoPTMyLGUuc2lnbi5zaWduYXR1cmVMZW5ndGg9Y2UsZS5oYXNoPWZ1bmN0aW9uKGUpe3BlKGUpO3ZhciB0PW5ldyBVaW50OEFycmF5KDY0KTtyZXR1cm4gWSh0LGUsZS5sZW5ndGgpLHR9LGUuaGFzaC5oYXNoTGVuZ3RoPTY0LGUudmVyaWZ5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHBlKGUsdCksMCE9PWUubGVuZ3RoJiYwIT09dC5sZW5ndGgmJmUubGVuZ3RoPT09dC5sZW5ndGgmJjA9PT1kKGUsMCx0LDAsZS5sZW5ndGgpfSxlLnNldFBSTkc9ZnVuY3Rpb24oZSl7cj1lfSxmdW5jdGlvbigpe3ZhciB0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGYuY3J5cHRvfHxzZWxmLm1zQ3J5cHRvOm51bGw7dCYmdC5nZXRSYW5kb21WYWx1ZXM/ZS5zZXRQUk5HKChmdW5jdGlvbihlLHIpe3ZhciBuLG89bmV3IFVpbnQ4QXJyYXkocik7Zm9yKG49MDtuPHI7bis9NjU1MzYpdC5nZXRSYW5kb21WYWx1ZXMoby5zdWJhcnJheShuLG4rTWF0aC5taW4oci1uLDY1NTM2KSkpO2ZvcihuPTA7bjxyO24rKyllW25dPW9bbl07ZmUobyl9KSk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHJlcXVpcmUmJih0PXJlcXVpcmUoXCJjcnlwdG9cIikpJiZ0LnJhbmRvbUJ5dGVzJiZlLnNldFBSTkcoKGZ1bmN0aW9uKGUscil7dmFyIG4sbz10LnJhbmRvbUJ5dGVzKHIpO2ZvcihuPTA7bjxyO24rKyllW25dPW9bbl07ZmUobyl9KSl9KCl9KHZvaWQgMCE9PWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM6c2VsZi5uYWNsPXNlbGYubmFjbHx8e30pfSw1OTIyOihlLHQscik9Pnt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtjb25zdHtkZWZhdWx0Om99PXIoMTExMykse3NldFNlbmRUcmFuc2FjdGlvbkhlYWRlcnM6c309cig1MTgwKTtlLmV4cG9ydHM9e0FsZ29kOmZ1bmN0aW9uKGU9XCJcIix0PVwiaHR0cDovL3IyLmFsZ29yYW5kLm5ldHdvcmtcIixyPTQxODAsaT17fSl7bGV0IGE9ZTtcInN0cmluZ1wiPT10eXBlb2YgYSYmKGE9e1wiWC1BbGdvLUFQSS1Ub2tlblwiOmF9KTtjb25zdCBjPW5ldyBvKGEsdCxyLGkpO2Z1bmN0aW9uIHUoZSl7cmV0dXJuIHZvaWQgMCE9PWUubm90ZWI2NCYmbnVsbCE9PWUubm90ZWI2NCYmKGUubm90ZT1uLmZyb20oZS5ub3RlYjY0LFwiYmFzZTY0XCIpKSxlfXRoaXMuc3RhdHVzPWFzeW5jKGU9e30pPT4oYXdhaXQgYy5nZXQoXCIvdjEvc3RhdHVzXCIse30sZSkpLmJvZHksdGhpcy5oZWFsdGhDaGVjaz1hc3luYyhlPXt9KT0+e2NvbnN0IHQ9YXdhaXQgYy5nZXQoXCIvaGVhbHRoXCIse30sZSk7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKGBIZWFsdGggcmVzcG9uc2U6ICR7dC5zdGF0dXN9YCk7cmV0dXJue319LHRoaXMuc3RhdHVzQWZ0ZXJCbG9jaz1hc3luYyhlLHQ9e30pPT57aWYoIU51bWJlci5pc0ludGVnZXIoZSkpdGhyb3cgRXJyb3IoXCJyb3VuZE51bWJlciBzaG91bGQgYmUgYW4gaW50ZWdlclwiKTtyZXR1cm4oYXdhaXQgYy5nZXQoYC92MS9zdGF0dXMvd2FpdC1mb3ItYmxvY2stYWZ0ZXIvJHtlfWAse30sdCkpLmJvZHl9LHRoaXMucGVuZGluZ1RyYW5zYWN0aW9ucz1hc3luYyhlLHQ9e30pPT57aWYoIU51bWJlci5pc0ludGVnZXIoZSkpdGhyb3cgRXJyb3IoXCJtYXhUeG5zIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHI9YXdhaXQgYy5nZXQoXCIvdjEvdHJhbnNhY3Rpb25zL3BlbmRpbmdcIix7bWF4OmV9LHQpO2lmKDIwMD09PXIuc3RhdHVzQ29kZSYmdm9pZCAwIT09ci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zKWZvcihsZXQgZT0wO2U8ci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zLmxlbmd0aDtlKyspci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zW2VdPXUoci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zW2VdKTtyZXR1cm4gci5ib2R5fSx0aGlzLnZlcnNpb25zPWFzeW5jKGU9e30pPT4oYXdhaXQgYy5nZXQoXCIvdmVyc2lvbnNcIix7fSxlKSkuYm9keSx0aGlzLmxlZGdlclN1cHBseT1hc3luYyhlPXt9KT0+KGF3YWl0IGMuZ2V0KFwiL3YxL2xlZGdlci9zdXBwbHlcIix7fSxlKSkuYm9keSx0aGlzLnRyYW5zYWN0aW9uQnlBZGRyZXNzPWFzeW5jKGUsdD1udWxsLHI9bnVsbCxuPW51bGwsbz17fSk9PntpZihudWxsIT09dCYmIU51bWJlci5pc0ludGVnZXIodCkpdGhyb3cgRXJyb3IoXCJmaXJzdCByb3VuZCBzaG91bGQgYmUgYW4gaW50ZWdlclwiKTtpZihudWxsIT09ciYmIU51bWJlci5pc0ludGVnZXIocikpdGhyb3cgRXJyb3IoXCJsYXN0IHJvdW5kIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHM9YXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX0vdHJhbnNhY3Rpb25zYCx7Zmlyc3RSb3VuZDp0LGxhc3RSb3VuZDpyLG1heDpufSxvKTtpZigyMDA9PT1zLnN0YXR1c0NvZGUmJnZvaWQgMCE9PXMuYm9keS50cmFuc2FjdGlvbnMpZm9yKGxldCBlPTA7ZTxzLmJvZHkudHJhbnNhY3Rpb25zLmxlbmd0aDtlKyspcy5ib2R5LnRyYW5zYWN0aW9uc1tlXT11KHMuYm9keS50cmFuc2FjdGlvbnNbZV0pO3JldHVybiBzLmJvZHl9LHRoaXMudHJhbnNhY3Rpb25CeUFkZHJlc3NBbmREYXRlPWFzeW5jKGUsdCxyLG49bnVsbCxvPXt9KT0+e2NvbnN0IHM9YXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX0vdHJhbnNhY3Rpb25zYCx7ZnJvbURhdGU6dCx0b0RhdGU6cixtYXg6bn0sbyk7aWYoMjAwPT09cy5zdGF0dXNDb2RlJiZ2b2lkIDAhPT1zLmJvZHkudHJhbnNhY3Rpb25zKWZvcihsZXQgZT0wO2U8cy5ib2R5LnRyYW5zYWN0aW9ucy5sZW5ndGg7ZSsrKXMuYm9keS50cmFuc2FjdGlvbnNbZV09dShzLmJvZHkudHJhbnNhY3Rpb25zW2VdKTtyZXR1cm4gcy5ib2R5fSx0aGlzLnRyYW5zYWN0aW9uQnlJZD1hc3luYyhlLHQ9e30pPT57Y29uc3Qgcj1hd2FpdCBjLmdldChgL3YxL3RyYW5zYWN0aW9uLyR7ZX1gLHt9LHQpO3JldHVybiAyMDA9PT1yLnN0YXR1c0NvZGUmJihyLmJvZHk9dShyLmJvZHkpKSxyLmJvZHl9LHRoaXMudHJhbnNhY3Rpb25JbmZvcm1hdGlvbj1hc3luYyhlLHQscj17fSk9Pntjb25zdCBuPWF3YWl0IGMuZ2V0KGAvdjEvYWNjb3VudC8ke2V9L3RyYW5zYWN0aW9uLyR7dH1gLHt9LHIpO3JldHVybiAyMDA9PT1uLnN0YXR1c0NvZGUmJihuLmJvZHk9dShuLmJvZHkpKSxuLmJvZHl9LHRoaXMucGVuZGluZ1RyYW5zYWN0aW9uSW5mb3JtYXRpb249YXN5bmMoZSx0PXt9KT0+e2NvbnN0IHI9YXdhaXQgYy5nZXQoYC92MS90cmFuc2FjdGlvbnMvcGVuZGluZy8ke2V9YCx7fSx0KTtyZXR1cm4gMjAwPT09ci5zdGF0dXNDb2RlJiYoci5ib2R5PXUoci5ib2R5KSksci5ib2R5fSx0aGlzLmFjY291bnRJbmZvcm1hdGlvbj1hc3luYyhlLHQ9e30pPT4oYXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX1gLHt9LHQpKS5ib2R5LHRoaXMuYXNzZXRJbmZvcm1hdGlvbj1hc3luYyhlLHQ9e30pPT4oYXdhaXQgYy5nZXQoYC92MS9hc3NldC8ke2V9YCx7fSx0KSkuYm9keSx0aGlzLnN1Z2dlc3RlZEZlZT1hc3luYyhlPXt9KT0+KGF3YWl0IGMuZ2V0KFwiL3YxL3RyYW5zYWN0aW9ucy9mZWVcIix7fSxlKSkuYm9keSx0aGlzLnNlbmRSYXdUcmFuc2FjdGlvbj1hc3luYyhlLHQ9e30pPT57Y29uc3Qgcj1zKHQpO3JldHVybihhd2FpdCBjLnBvc3QoXCIvdjEvdHJhbnNhY3Rpb25zXCIsbi5mcm9tKGUpLHIpKS5ib2R5fSx0aGlzLnNlbmRSYXdUcmFuc2FjdGlvbnM9YXN5bmMoZSx0PXt9KT0+e2NvbnN0IHI9cyh0KSxvPUFycmF5LnByb3RvdHlwZS5jb25jYXQoLi4uZS5tYXAoKGU9PkFycmF5LmZyb20oZSkpKSk7cmV0dXJuKGF3YWl0IGMucG9zdChcIi92MS90cmFuc2FjdGlvbnNcIixuLmZyb20obykscikpLmJvZHl9LHRoaXMuZ2V0VHJhbnNhY3Rpb25QYXJhbXM9YXN5bmMoZT17fSk9Pihhd2FpdCBjLmdldChcIi92MS90cmFuc2FjdGlvbnMvcGFyYW1zXCIse30sZSkpLmJvZHksdGhpcy5zdWdnZXN0UGFyYW1zPWFzeW5jKGU9e30pPT57Y29uc3QgdD1hd2FpdCB0aGlzLmdldFRyYW5zYWN0aW9uUGFyYW1zKGUpO3JldHVybntmbGF0RmVlOiExLGZlZTp0LmZlZSxmaXJzdFJvdW5kOnQubGFzdFJvdW5kLGxhc3RSb3VuZDp0Lmxhc3RSb3VuZCsxZTMsZ2VuZXNpc0lEOnQuZ2VuZXNpc0lELGdlbmVzaXNIYXNoOnQuZ2VuZXNpc2hhc2hiNjR9fSx0aGlzLmJsb2NrPWFzeW5jKGUsdD17fSk9PntpZighTnVtYmVyLmlzSW50ZWdlcihlKSl0aHJvdyBFcnJvcihcInJvdW5kTnVtYmVyIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHI9YXdhaXQgYy5nZXQoYC92MS9ibG9jay8ke2V9YCx7fSx0KTtpZigyMDA9PT1yLnN0YXR1c0NvZGUmJnZvaWQgMCE9PXIuYm9keS50eG5zLnRyYW5zYWN0aW9ucylmb3IobGV0IGU9MDtlPHIuYm9keS50eG5zLnRyYW5zYWN0aW9ucy5sZW5ndGg7ZSsrKXIuYm9keS50eG5zLnRyYW5zYWN0aW9uc1tlXT11KHIuYm9keS50eG5zLnRyYW5zYWN0aW9uc1tlXSk7cmV0dXJuIHIuYm9keX19fX0sMTgzNDooZSx0LHIpPT57dmFyIG49cigyNDg2KS5CdWZmZXI7Y29uc3Qgbz1yKDcxMTYpLHM9cigzMDMzKSxpPXIoMTA2MyksYT1yKDU1ODMpLGM9cig4ODAwKSx1PXIoOTQwNCksbD1yKDI1MTQpLGg9cig5NDE3KTtlLmV4cG9ydHM9e0R5bmFtaWNGZWU6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIscyxpLGEpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcih0KXx8dDwwKXRocm93IEVycm9yKFwiYW1vdW50IG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIpfHxyPDApdGhyb3cgRXJyb3IoXCJmaXJzdFZhbGlkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHMpfHxzPDApdGhyb3cgRXJyb3IoXCJsYXN0VmFsaWQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDA9PT1pJiYoaT1vLkFMR09SQU5EX1pFUk9fQUREUkVTU19TVFJJTkcpLHZvaWQgMD09PWEpe2NvbnN0IGU9dS5yYW5kb21CeXRlcygzMik7YT1uLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIil9Y29uc3QgaD1uLmZyb20oXCJBU0FGQWdFSEJnVW1BeUQrdktDN0ZFcGFUcWUwT0tSb0dzZ09iS0VGdkxZSC9GWlRKY2xXbGZhaUV5RG1tcFllYnkxZmVzaG1CNUpsVXI2WUkxN1RNMlBLaUpHTHVjazRxUlcyK1NCL2c3RmxmL0g4VTdrdHdZRklvZFpkL0MxTEg2UFdkeWhLM2RJQUVtMlFhVElFSWhJekFCQWpFaEF6QUFjeEFCSVFNd0FJTVFFU0VERVdJeElRTVJBakVoQXhCeWdTRURFSktSSVFNUWdrRWhBeEFpVVNFREVFSVFRU0VERUdLaElRXCIsXCJiYXNlNjRcIikscD1bdCxyLHMsZSxpLGFdLGY9W2wudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuQUREUkVTUyxsLnZhbFR5cGVzLkFERFJFU1MsbC52YWxUeXBlcy5CQVNFNjRdLGQ9bC5pbmplY3QoaCxbNSw2LDcsMTEsNDQsNzZdLHAsZik7dGhpcy5wcm9ncmFtQnl0ZXM9ZDtjb25zdCBnPW5ldyBjLkxvZ2ljU2lnKGQsdm9pZCAwKTt0aGlzLmFkZHJlc3M9Zy5hZGRyZXNzKCl9Z2V0UHJvZ3JhbSgpe3JldHVybiB0aGlzLnByb2dyYW1CeXRlc31nZXRBZGRyZXNzKCl7cmV0dXJuIHRoaXMuYWRkcmVzc319LGdldER5bmFtaWNGZWVUcmFuc2FjdGlvbnM6ZnVuY3Rpb24oZSx0LHIsbil7aWYoIXQudmVyaWZ5KG8uZGVjb2RlQWRkcmVzcyhlLmZyb20pLnB1YmxpY0tleSkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWduYXR1cmVcIik7ZS5mZWU9bixlLmZlZTxoLkFMR09SQU5EX01JTl9UWF9GRUUmJihlLmZlZT1oLkFMR09SQU5EX01JTl9UWF9GRUUpO2NvbnN0IGE9dS5rZXlQYWlyRnJvbVNlY3JldEtleShyKSxjPW8uZW5jb2RlQWRkcmVzcyhhLnB1YmxpY0tleSkse2xlYXNlOmx9PWU7ZGVsZXRlIGUubGVhc2U7Y29uc3QgcD1uZXcgaC5UcmFuc2FjdGlvbihlKTtwLmFkZExlYXNlKGwsbik7Y29uc3QgZj17ZnJvbTpjLHRvOmUuZnJvbSxmZWU6bixhbW91bnQ6cC5mZWUsZmlyc3RSb3VuZDplLmZpcnN0Um91bmQsbGFzdFJvdW5kOmUubGFzdFJvdW5kLGdlbmVzaXNIYXNoOmUuZ2VuZXNpc0hhc2gsdHlwZTpcInBheVwifSxkPW5ldyBoLlRyYW5zYWN0aW9uKGYpO2QuYWRkTGVhc2UobCxuKTtjb25zdCBnPWkuYXNzaWduR3JvdXBJRChbZCxwXSx2b2lkIDApLHk9Z1swXSxtPWdbMV0sYj17bHNpZzp0LmdldF9vYmpfZm9yX2VuY29kaW5nKCksdHhuOm0uZ2V0X29ial9mb3JfZW5jb2RpbmcoKX0sQT15LnNpZ25UeG4ociksdz1zLmVuY29kZShiKSx2PW5ldyBVaW50OEFycmF5KEEubGVuZ3RoK3cubGVuZ3RoKTtyZXR1cm4gdi5zZXQoQSksdi5zZXQodyxBLmxlbmd0aCksdn0sc2lnbkR5bmFtaWNGZWU6ZnVuY3Rpb24oZSx0LHIpe2NvbnN0IG49YS5yZWFkUHJvZ3JhbShlLHZvaWQgMCkscz1uWzBdLGk9blsxXSxsPXUua2V5UGFpckZyb21TZWNyZXRLZXkodCksaD17ZnJvbTpvLmVuY29kZUFkZHJlc3MobC5wdWJsaWNLZXkpLHRvOm8uZW5jb2RlQWRkcmVzcyhpWzBdKSxmZWU6MCxhbW91bnQ6c1syXSxjbG9zZVJlbWFpbmRlclRvOm8uZW5jb2RlQWRkcmVzcyhpWzFdKSxmaXJzdFJvdW5kOnNbM10sbGFzdFJvdW5kOnNbNF0sZ2VuZXNpc0hhc2g6cix0eXBlOlwicGF5XCIsbGVhc2U6bmV3IFVpbnQ4QXJyYXkoaVsyXSl9LHA9bmV3IGMuTG9naWNTaWcoZSx2b2lkIDApO3JldHVybiBwLnNpZ24odCkse3R4bjpoLGxzaWc6cH19fX0sMTc4NjooZSx0LHIpPT57dmFyIG49cigyNDg2KS5CdWZmZXI7Y29uc3Qgbz1yKDM0NzcpLHtrZWNjYWsyNTY6c309cig1ODMpLGk9cig1NTgzKSxhPXIoODgwMCksYz1yKDI1MTQpLHU9cig5NDE3KTtlLmV4cG9ydHM9e0hUTEM6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGkpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihzKXx8czwwKXRocm93IEVycm9yKFwiZXhwaXJ5Um91bmQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoaSl8fGk8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2xldCB1PVwiXCI7aWYoXCJzaGEyNTZcIj09PXIpdT1cIkFTQUVDQUVBQ1NZRElPYWFsaDV2TFY5NnlHWUhrbVZTdnBnalh0TXpZOHFJa1l1NXlUaXBGYmI1SUgrRHNXVi84ZnhUdVMzQmdVaWgxbDM4TFVzZm85WjNLRXJkMGdBU2JaQnBJUDY4b0xzVVNscE9wN1E0cEdnYXlBNXNvUVc4dGdmOFZsTWx5VmFWOXFJVE1RRWlEakVRSXhJUU1RY3lBeElRTVFna0VoQXhDU2dTTFFFcEVoQXhDU29TTVFJbERSQVJFQT09XCI7ZWxzZXtpZihcImtlY2NhazI1NlwiIT09cil0aHJvdyBFcnJvcihcImhhc2ggZnVuY3Rpb24gdW5yZWNvZ25pemVkXCIpO3U9XCJBU0FFQ0FFQUNTWURJT2FhbGg1dkxWOTZ5R1lIa21WU3ZwZ2pYdE16WThxSWtZdTV5VGlwRmJiNUlIK0RzV1YvOGZ4VHVTM0JnVWloMWwzOExVc2ZvOVozS0VyZDBnQVNiWkJwSVA2OG9Mc1VTbHBPcDdRNHBHZ2F5QTVzb1FXOHRnZjhWbE1seVZhVjlxSVRNUUVpRGpFUUl4SVFNUWN5QXhJUU1RZ2tFaEF4Q1NnU0xRSXBFaEF4Q1NvU01RSWxEUkFSRUE9PVwifWlmKDMyIT09bi5mcm9tKG8sXCJiYXNlNjRcIikubGVuZ3RoKXRocm93IEVycm9yKFwiaGFzaCBpbWFnZSBtdXN0IGJlIDMyIGJ5dGVzXCIpO2NvbnN0IGw9bi5mcm9tKHUsXCJiYXNlNjRcIiksaD1baSxzLHQsbyxlXSxwPVtjLnZhbFR5cGVzLklOVCxjLnZhbFR5cGVzLklOVCxjLnZhbFR5cGVzLkFERFJFU1MsYy52YWxUeXBlcy5CQVNFNjQsYy52YWxUeXBlcy5BRERSRVNTXSxmPWMuaW5qZWN0KGwsWzMsNiwxMCw0Miw3Nl0saCxwKTt0aGlzLnByb2dyYW1CeXRlcz1mO2NvbnN0IGQ9bmV3IGEuTG9naWNTaWcoZix2b2lkIDApO3RoaXMuYWRkcmVzcz1kLmFkZHJlc3MoKX1nZXRQcm9ncmFtKCl7cmV0dXJuIHRoaXMucHJvZ3JhbUJ5dGVzfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sc2lnblRyYW5zYWN0aW9uV2l0aEhUTENVbmxvY2s6ZnVuY3Rpb24oZSx0LHIpe2NvbnN0IGM9bi5mcm9tKHIsXCJiYXNlNjRcIiksbD1pLnJlYWRQcm9ncmFtKGUsdm9pZCAwKSxoPWxbMF0scD1sWzFdWzFdLGY9ZVtlLmxlbmd0aC0xNV07aWYoMT09PWYpe2NvbnN0IGU9by5jcmVhdGUoKTtpZihlLnVwZGF0ZShjKSwhbi5mcm9tKGUuaGV4KCksXCJoZXhcIikuZXF1YWxzKHApKXRocm93IG5ldyBFcnJvcihcInNoYTI1NiBoYXNoIG9mIHByZWltYWdlIGRpZCBub3QgbWF0Y2ggc3RvcmVkIGNvbnRyYWN0IGhhc2hcIil9ZWxzZXtpZigyIT09Zil0aHJvdyBuZXcgRXJyb3IoXCJoYXNoIGZ1bmN0aW9uIGluIGNvbnRyYWN0IHVucmVjb2duaXplZFwiKTt7Y29uc3QgZT1zLmNyZWF0ZSgpO2lmKGUudXBkYXRlKGMpLCFuLmZyb20oZS5oZXgoKSxcImhleFwiKS5lcXVhbHMocCkpdGhyb3cgbmV3IEVycm9yKFwia2VjY2FrMjU2IGhhc2ggb2YgcHJlaW1hZ2UgZGlkIG5vdCBtYXRjaCBzdG9yZWQgY29udHJhY3QgaGFzaFwiKX19Y29uc3QgZD1bY10sZz1uZXcgYS5Mb2dpY1NpZyhlLGQpO2RlbGV0ZSB0LnRvO2NvbnN0IHk9aFswXSxtPW5ldyB1LlRyYW5zYWN0aW9uKHQpO2lmKG0uZmVlPnkpdGhyb3cgbmV3IEVycm9yKGBmaW5hbCBmZWUgb2YgcGF5bWVudCB0cmFuc2FjdGlvbiR7bS5mZWUudG9TdHJpbmcoKX1ncmVhdGVyIHRoYW4gdHJhbnNhY3Rpb24gbWF4IGZlZSR7eS50b1N0cmluZygpfWApO3JldHVybiBhLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uKHQsZyl9fX0sODg4NjooZSx0LHIpPT57Y29uc3Qgbj1yKDE4MzQpLG89cigxNzg2KSxzPXIoNDc0OCksaT1yKDM3NTgpLGE9cigyMjAwKTtlLmV4cG9ydHM9e0R5bmFtaWNGZWU6bi5EeW5hbWljRmVlLGdldER5bmFtaWNGZWVUcmFuc2FjdGlvbnM6bi5nZXREeW5hbWljRmVlVHJhbnNhY3Rpb25zLHNpZ25EeW5hbWljRmVlOm4uc2lnbkR5bmFtaWNGZWUsSFRMQzpvLkhUTEMsc2lnblRyYW5zYWN0aW9uV2l0aEhUTENVbmxvY2s6by5zaWduVHJhbnNhY3Rpb25XaXRoSFRMQ1VubG9jayxMaW1pdE9yZGVyOnMuTGltaXRPcmRlcixnZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb246cy5nZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb24sU3BsaXQ6aS5TcGxpdCxnZXRTcGxpdEZ1bmRzVHJhbnNhY3Rpb246aS5nZXRTcGxpdEZ1bmRzVHJhbnNhY3Rpb24sUGVyaW9kaWNQYXltZW50OmEuUGVyaW9kaWNQYXltZW50LGdldFBlcmlvZGljUGF5bWVudFdpdGhkcmF3YWxUcmFuc2FjdGlvbjphLmdldFBlcmlvZGljUGF5bWVudFdpdGhkcmF3YWxUcmFuc2FjdGlvbn19LDQ3NDg6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig1NTgzKSxjPXIoODgwMCksdT1yKDk0MDQpLGw9cigyNTE0KSxoPXIoNDEzKTtlLmV4cG9ydHM9e0xpbWl0T3JkZXI6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGksYSl7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHQpfHx0PDApdGhyb3cgRXJyb3IoXCJhc3NldGlkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIpfHxyPDApdGhyb3cgRXJyb3IoXCJyYXRuIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG8pfHxvPDApdGhyb3cgRXJyb3IoXCJyYXRkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHMpfHxzPDApdGhyb3cgRXJyb3IoXCJleHBpcnlSb3VuZCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihpKXx8aTwwKXRocm93IEVycm9yKFwibWluVHJhZGUgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoYSl8fGE8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2NvbnN0IHU9bi5mcm9tKFwiQVNBS0FBRUZBZ1lFQndnSkNpWUJJUDY4b0xzVVNscE9wN1E0cEdnYXlBNXNvUVc4dGdmOFZsTWx5VmFWOXFJVE1SWWlFakVRSXhJUU1RRWtEaEF5QkNNU1FBQlZNZ1FsRWpFSUlRUU5FREVKTWdNU0VETUJFQ0VGRWhBekFSRWhCaElRTXdFVUtCSVFNd0VUTWdNU0VETUJFaUVISFRVQ05RRXhDQ0VJSFRVRU5RTTBBVFFERFVBQUpEUUJOQU1TTkFJMEJBOFFRQUFXQURFSktCSXhBaUVKRFJBeEJ6SURFaEF4Q0NJU0VCQT1cIixcImJhc2U2NFwiKSxoPVthLGksdCxvLHIscyxlXSxwPVtsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLkFERFJFU1NdLGY9bC5pbmplY3QodSxbNSw3LDksMTAsMTEsMTIsMTZdLGgscCk7dGhpcy5wcm9ncmFtQnl0ZXM9Zjtjb25zdCBkPW5ldyBjLkxvZ2ljU2lnKGYsdm9pZCAwKTt0aGlzLmFkZHJlc3M9ZC5hZGRyZXNzKCksdGhpcy5vd25lcj1lLHRoaXMuYXNzZXRpZD10fWdldFByb2dyYW0oKXtyZXR1cm4gdGhpcy5wcm9ncmFtQnl0ZXN9Z2V0QWRkcmVzcygpe3JldHVybiB0aGlzLmFkZHJlc3N9fSxnZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb246ZnVuY3Rpb24oZSx0LHIsbixsLHAsZixkKXtjb25zdCBnPXUua2V5UGFpckZyb21TZWNyZXRLZXkobikseT1vLmVuY29kZUFkZHJlc3MoZy5wdWJsaWNLZXkpLG09YS5yZWFkUHJvZ3JhbShlLHZvaWQgMCksYj1tWzBdLEE9bVsxXTtsZXQgdztjb25zdCB2PWJbNl0sUz1vLmVuY29kZUFkZHJlc3MoQVswXSkseD1jLm1ha2VMb2dpY1NpZyhlLHZvaWQgMCksRT14LmFkZHJlc3MoKSxUPVtzLm1ha2VQYXltZW50VHhuKEUseSxsLHIsdyxwLGYsdm9pZCAwLGQsdm9pZCAwKSxzLm1ha2VBc3NldFRyYW5zZmVyVHhuKHksUyx3LHZvaWQgMCxsLHQscCxmLHZvaWQgMCxkLHZvaWQgMCx2KV0sXz1pLmFzc2lnbkdyb3VwSUQoVCksQj1iWzddLFU9Yls4XTtpZih0KkI8cipVKXRocm93IG5ldyBFcnJvcihgYmFkIHBheW1lbnQgcmF0aW8sICR7dC50b1N0cmluZygpfSoke0IudG9TdHJpbmcoKX0gIT49ICR7ci50b1N0cmluZygpfSoke1UudG9TdHJpbmcoKX1gKTtjb25zdCBrPWJbNF07aWYocjxrKXRocm93IG5ldyBFcnJvcihgcGF5bWVudCBhbW91bnQgJHtyLnRvU3RyaW5nKCl9IGxlc3MgdGhhbiBtaW5pbXVtIHRyYWRlICR7ay50b1N0cmluZygpfWApO2NvbnN0IEk9YlsyXTtpZihfWzBdLmZlZT5JKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIHBheW1lbnQgdHJhbnNhY3Rpb24gJHtfWzBdLmZlZS50b1N0cmluZygpfSBncmVhdGVyIHRoYW4gdHJhbnNhY3Rpb24gbWF4IGZlZSAke0kudG9TdHJpbmcoKX1gKTtpZihfWzFdLmZlZT5JKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIGFzc2V0IHRyYW5zYWN0aW9uICR7X1sxXS5mZWUudG9TdHJpbmcoKX0gZ3JlYXRlciB0aGFuIHRyYW5zYWN0aW9uIG1heCBmZWUgJHtJLnRvU3RyaW5nKCl9YCk7Y29uc3QgQz1jLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0KF9bMF0seCksUj1fWzFdLnNpZ25UeG4obik7cmV0dXJuIGguY29uY2F0QXJyYXlzKEMuYmxvYixSKX19fSwyMjAwOihlLHQscik9Pnt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtjb25zdCBvPXIoNzExNikscz1yKDE5ODgpLGk9cig1NTgzKSxhPXIoODgwMCksYz1yKDk0MDQpLHU9cigyNTE0KTtlLmV4cG9ydHM9e1BlcmlvZGljUGF5bWVudDpjbGFzc3tjb25zdHJ1Y3RvcihlLHQscixvLHMsaSx1KXtpZih0aGlzLnJlY2VpdmVyPWUsIU51bWJlci5pc1NhZmVJbnRlZ2VyKHQpfHx0PDApdGhyb3cgRXJyb3IoXCJhbW91bnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih0aGlzLmFtb3VudD10LCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyKXx8cjwwKXRocm93IEVycm9yKFwid2l0aGRyYXdhbFdpbmRvdyBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHRoaXMud2l0aGRyYXdhbFdpbmRvdz1yLCFOdW1iZXIuaXNTYWZlSW50ZWdlcihvKXx8bzwwKXRocm93IEVycm9yKFwicGVyaW9kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5wZXJpb2Q9bywhTnVtYmVyLmlzU2FmZUludGVnZXIocyl8fHM8MCl0aHJvdyBFcnJvcihcImV4cGlyeVJvdW5kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5leHBpcnlSb3VuZD1zLCFOdW1iZXIuaXNTYWZlSW50ZWdlcihpKXx8aTwwKXRocm93IEVycm9yKFwibWF4RmVlIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5tYXhGZWU9aSx2b2lkIDA9PT11KXtjb25zdCBlPWMucmFuZG9tQnl0ZXMoMzIpO3RoaXMubGVhc2U9bi5mcm9tKGUpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfWVsc2UgdGhpcy5sZWFzZT11O3RoaXMucHJvZ3JhbUJ5dGVzPXRoaXMuZ2V0UHJvZ3JhbSgpO2NvbnN0IGw9bmV3IGEuTG9naWNTaWcodGhpcy5wcm9ncmFtQnl0ZXMsdm9pZCAwKTt0aGlzLmFkZHJlc3M9bC5hZGRyZXNzKCl9Z2V0UHJvZ3JhbSgpe2NvbnN0IGU9bi5mcm9tKFwiQVNBSEFRWUZBQVFEQnlZQ0lBRUNBd1FGQmdjSUFRSURCQVVHQndnQkFnTUVCUVlIQ0FFQ0F3UUZCZ2NJSUpLdmtZVGtFendKZjJhcnpKT3hFUnNTb2dHOW5RektQa3BJb2M0VHpQVEZNUkFpRWpFQkl3NFFNUUlrR0NVU0VERUVJUVF4QWdnU0VERUdLQklRTVFreUF4SXhCeWtTRURFSUlRVVNFREVKS1JJeEJ6SURFaEF4QWlFR0RSQXhDQ1VTRUJFUVwiLFwiYmFzZTY0XCIpLHQ9W3RoaXMubWF4RmVlLHRoaXMucGVyaW9kLHRoaXMud2l0aGRyYXdhbFdpbmRvdyx0aGlzLmFtb3VudCx0aGlzLmV4cGlyeVJvdW5kLHRoaXMubGVhc2UsdGhpcy5yZWNlaXZlcl0scj1bdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5CQVNFNjQsdS52YWxUeXBlcy5BRERSRVNTXTtyZXR1cm4gdS5pbmplY3QoZSxbNCw1LDcsOCw5LDEyLDQ2XSx0LHIpfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sZ2V0UGVyaW9kaWNQYXltZW50V2l0aGRyYXdhbFRyYW5zYWN0aW9uOmZ1bmN0aW9uKGUsdCxyLG4pe2NvbnN0IGM9aS5yZWFkUHJvZ3JhbShlLHZvaWQgMCksdT1jWzBdLGw9Y1sxXSxoPXVbMl0scD11WzRdLGY9dVs1XTtpZihyJWghPTApdGhyb3cgbmV3IEVycm9yKGBmaXJzdFZhbGlkIHJvdW5kICR7ci50b1N0cmluZygpfSB3YXMgbm90IGEgbXVsdGlwbGUgb2YgY29udHJhY3QgcGVyaW9kICR7aC50b1N0cmluZygpfWApO2NvbnN0IGQ9bFsxXSxnPW8uZW5jb2RlQWRkcmVzcyhkKSx5PWxbMF0sbT1uZXcgVWludDhBcnJheSh5KSxiPXIrcCxBPWc7bGV0IHcsdjtjb25zdCBTPWEubWFrZUxvZ2ljU2lnKGUsdm9pZCAwKSx4PVMuYWRkcmVzcygpLEU9e2Zyb206eCx0bzpBLGZlZTp0LGFtb3VudDpmLGNsb3NlUmVtYWluZGVyVG86dyxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOmIsbm90ZTp2LGdlbmVzaXNIYXNoOm4sZ2VuZXNpc0lEOlwiXCIsdHlwZTpcInBheVwiLGxlYXNlOm19LFQ9cy5tYWtlUGF5bWVudFR4bih4LEEsdCxmLHcscixiLHYsbixcIlwiKTtpZihULmZlZT51WzFdKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIHBheW1lbnQgdHJhbnNhY3Rpb24ke1QuZmVlLnRvU3RyaW5nKCl9Z3JlYXRlciB0aGFuIHRyYW5zYWN0aW9uIG1heCBmZWUke3VbMV0udG9TdHJpbmcoKX1gKTtyZXR1cm4gYS5zaWduTG9naWNTaWdUcmFuc2FjdGlvbihFLFMpfX19LDM3NTg6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig4ODAwKSxjPXIoNTU4MyksdT1yKDI1MTQpLGw9cig0MTMpO2UuZXhwb3J0cz17U3BsaXQ6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGksYyxsKXtpZighTnVtYmVyLmlzU2FmZUludGVnZXIocyl8fHM8MCl0aHJvdyBFcnJvcihcInJhdDIgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIobyl8fG88MCl0aHJvdyBFcnJvcihcInJhdDEgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoaSl8fGk8MCl0aHJvdyBFcnJvcihcImV4cGlyeVJvdW5kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKGMpfHxjPDApdGhyb3cgRXJyb3IoXCJtaW5QYXkgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIobCl8fGw8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2NvbnN0IGg9bi5mcm9tKFwiQVNBSUFRVUNBQVlIQ0FrbUF5Q3p0d1FuMCtEeWNOK3Zzayt2Sldjc296L2I3TkRTNmkzM0hPa3ZUcGYrWWlDM3FVcElnSEdXRTgvMUxQaDlTR0NhbFNON0lhSVRlZVdTWGJmc1M1d3NYeUM0a0JRMzhaOHpjd1dWQXltNFM4dnBGQi9jMFhDNlI0bW5QaTlFQkFEc1BERVFJaEl4QVNNTUVESUVKQkpBQUJreENTZ1NNUWN5QXhJUU1RZ2xFaEF4QWlFRURSQWlRQUF1TXdBQU13RUFFakVKTWdNU0VETUFCeWtTRURNQkJ5b1NFRE1BQ0NFRkN6TUJDQ0VHQ3hJUU13QUlJUWNQRUJBPVwiLFwiYmFzZTY0XCIpLHA9W2wsaSxzLG8sYyxlLHQscl0sZj1bdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5BRERSRVNTLHUudmFsVHlwZXMuQUREUkVTUyx1LnZhbFR5cGVzLkFERFJFU1NdLGQ9dS5pbmplY3QoaCxbNCw3LDgsOSwxMCwxNCw0Nyw4MF0scCxmKTt0aGlzLnByb2dyYW1CeXRlcz1kO2NvbnN0IGc9YS5tYWtlTG9naWNTaWcoZCx2b2lkIDApO3RoaXMuYWRkcmVzcz1nLmFkZHJlc3MoKX1nZXRQcm9ncmFtKCl7cmV0dXJuIHRoaXMucHJvZ3JhbUJ5dGVzfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sZ2V0U3BsaXRGdW5kc1RyYW5zYWN0aW9uOmZ1bmN0aW9uKGUsdCxyLG4sdSxoKXtjb25zdCBwPWMucmVhZFByb2dyYW0oZSx2b2lkIDApLGY9cFswXSxkPXBbMV07bGV0IGc9Zls2XSx5PWZbNV0sbT0wO2NvbnN0IGI9KGUsdCk9PntpZihcIm51bWJlclwiIT10eXBlb2YgZXx8XCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwiZ2NkIG9wZXJhdGVzIG9ubHkgb24gcG9zaXRpdmUgaW50ZWdlcnNcIik7cmV0dXJuIHQ/Yih0LGUldCk6ZX0sQT1iKGcseSk7Zz1NYXRoLmZsb29yKGcvQSkseT1NYXRoLmZsb29yKHkvQSk7Y29uc3Qgdz15L2c7bT1NYXRoLnJvdW5kKHQvKDErdykpO2NvbnN0IHY9dC1tO2lmKHkqbSE9Zyp2KXRocm93IEVycm9yKFwiY291bGQgbm90IHNwbGl0IGZ1bmRzIGluIGEgd2F5IHRoYXQgc2F0aXNmaWVkIHRoZSBjb250cmFjdCByYXRpb1wiKTtjb25zdCBTPWEubWFrZUxvZ2ljU2lnKGUsdm9pZCAwKS5hZGRyZXNzKCkseD1vLmVuY29kZUFkZHJlc3MoZFsxXSksRT1vLmVuY29kZUFkZHJlc3MoZFsyXSksVD1bcy5tYWtlUGF5bWVudFR4bihTLHgsdSxtLHZvaWQgMCxyLG4sdm9pZCAwLGgpLHMubWFrZVBheW1lbnRUeG4oUyxFLHUsdix2b2lkIDAscixuLHZvaWQgMCxoKV0sXz1pLmFzc2lnbkdyb3VwSUQoVCkubWFwKChlPT5hLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0KGUsYSkuYmxvYikpO3JldHVybiBsLmNvbmNhdEFycmF5cyhfWzBdLF9bMV0pfX19LDI1MTQ6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KTtmdW5jdGlvbiBzKGUsdCl7bGV0IHI9MDtmb3IoO3Q+MTI4OyllLnB1c2goMjU1JnR8MTI4KSx0Pj49NyxyKz0xO3JldHVybiBlLnB1c2goMjU1JnQpLHIrMX1jb25zdCBpPXtJTlQ6MSxBRERSRVNTOjIsQkFTRTY0OjN9O2UuZXhwb3J0cz17aW5qZWN0OmZ1bmN0aW9uKGUsdCxyLGEpe2lmKHQubGVuZ3RoIT09ci5sZW5ndGh8fHQubGVuZ3RoIT09YS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTGVuZ3RocyBkbyBub3QgbWF0Y2hcIik7bGV0IGM9ZTtmdW5jdGlvbiB1KGUsdCxyLG8pe2NvbnN0IHM9ZS5zbGljZSgwLHIpLGk9ZS5zbGljZShyK28sZS5sZW5ndGgpLGE9W3Msbi5mcm9tKHQpLGldO3JldHVybiBuLmNvbmNhdChhKX1mb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7bGV0IGw9MCxoPXJbZV07c3dpdGNoKGFbZV0pe2Nhc2UgaS5JTlQ6Y29uc3Qgcj1bXTtsPXMocixoKSxjPXUoYyxyLHRbZV0sMSk7YnJlYWs7Y2FzZSBpLkFERFJFU1M6aD1vLmRlY29kZUFkZHJlc3MoaCksYz11KGMsaC5wdWJsaWNLZXksdFtlXSwzMik7YnJlYWs7Y2FzZSBpLkJBU0U2NDpjb25zdCBhPVtdO2g9bi5mcm9tKGgsXCJiYXNlNjRcIikscyhhLGgubGVuZ3RoKSxoPW4uY29uY2F0KFtuLmZyb20oYSksaF0pLGM9dShjLGgsdFtlXSwzMyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJ1bnJlY29nbml6ZWQgdmFsdWUgdHlwZVwiKX1pZigwIT09bClmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdKz1sLTF9cmV0dXJuIGN9LHZhbFR5cGVzOml9fSw3Njc3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7SlE6KCk9Pm0sXzQ6KCk9PlMsWDM6KCk9PnYsUjA6KCk9PmIsakQ6KCk9PkEsWWg6KCk9PkQsYkw6KCk9Pk4sTHM6KCk9PlIsVVY6KCk9PkIsQXg6KCk9PncsQTk6KCk9Pl8sdzE6KCk9PngsTks6KCk9PmQsUlk6KCk9PnksUHU6KCk9PmcsVms6KCk9PmMsbmg6KCk9Pmgsa0c6KCk9PmEscUg6KCk9PmwsSkg6KCk9PnUsdko6KCk9PkksbzU6KCk9PkMsQUU6KCk9PmssSTU6KCk9Pk99KTt2YXIgbj1yKDcxMTYpLG89cig4OTIyKSxzPXIoNDEzKSxpPXIoMjQ4NikuQnVmZmVyO2NvbnN0IGE9NjU1MzUsYz0zMix1PTEsbD0xLGg9MixwPS9eKFthLXpcXGRbXFxdKCksXSspXFxbKFsxLTldW1xcZF0qKV0kLyxmPS9edWZpeGVkKFsxLTldW1xcZF0qKXgoWzEtOV1bXFxkXSopJC87Y2xhc3MgZHtzdGF0aWMgZnJvbShlKXtpZihlLmVuZHNXaXRoKFwiW11cIikpe2NvbnN0IHQ9ZC5mcm9tKGUuc2xpY2UoMCxlLmxlbmd0aC0yKSk7cmV0dXJuIG5ldyBTKHQpfWlmKGUuZW5kc1dpdGgoXCJdXCIpKXtjb25zdCB0PWUubWF0Y2gocCk7aWYoMyE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihgbWFsZm9ybWVkIHN0YXRpYyBhcnJheSBzdHJpbmc6ICR7ZX1gKTtjb25zdCByPXRbMl0sbj1wYXJzZUludChyLDEwKTtpZihuPmEpdGhyb3cgbmV3IEVycm9yKGBhcnJheSBsZW5ndGggZXhjZWVkcyBsaW1pdCAke2F9YCk7Y29uc3Qgbz1kLmZyb20odFsxXSk7cmV0dXJuIG5ldyB2KG8sbil9aWYoZS5zdGFydHNXaXRoKFwidWludFwiKSl7Y29uc3QgdD1lPT5bLi4uZV0uZXZlcnkoKGU9PlwiMDEyMzQ1Njc4OVwiLmluY2x1ZGVzKGUpKSkscj1lLnNsaWNlKDQsZS5sZW5ndGgpO2lmKCF0KHIpKXRocm93IG5ldyBFcnJvcihgbWFsZm9ybWVkIHVpbnQgc3RyaW5nOiAke3J9YCk7Y29uc3Qgbj1wYXJzZUludChyLDEwKTtpZihuPmEpdGhyb3cgbmV3IEVycm9yKGBtYWxmb3JtZWQgdWludCBzdHJpbmc6ICR7bn1gKTtyZXR1cm4gbmV3IGcobil9aWYoXCJieXRlXCI9PT1lKXJldHVybiBuZXcgQTtpZihlLnN0YXJ0c1dpdGgoXCJ1Zml4ZWRcIikpe2NvbnN0IHQ9ZS5tYXRjaChmKTtpZigzIT09dC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBtYWxmb3JtZWQgdWZpeGVkIHR5cGU6ICR7ZX1gKTtjb25zdCByPXBhcnNlSW50KHRbMV0sMTApLG49cGFyc2VJbnQodFsyXSwxMCk7cmV0dXJuIG5ldyB5KHIsbil9aWYoXCJib29sXCI9PT1lKXJldHVybiBuZXcgYjtpZihcImFkZHJlc3NcIj09PWUpcmV0dXJuIG5ldyBtO2lmKFwic3RyaW5nXCI9PT1lKXJldHVybiBuZXcgdztpZihlLmxlbmd0aD49MiYmXCIoXCI9PT1lWzBdJiZcIilcIj09PWVbZS5sZW5ndGgtMV0pe2NvbnN0IHQ9eC5wYXJzZVR1cGxlQ29udGVudChlLnNsaWNlKDEsZS5sZW5ndGgtMSkpLHI9W107Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspe2NvbnN0IG49ZC5mcm9tKHRbZV0pO3IucHVzaChuKX1yZXR1cm4gbmV3IHgocil9dGhyb3cgbmV3IEVycm9yKGBjYW5ub3QgY29udmVydCBhIHN0cmluZyAke2V9IHRvIGFuIEFCSSB0eXBlYCl9fWNsYXNzIGcgZXh0ZW5kcyBke2NvbnN0cnVjdG9yKGUpe2lmKHN1cGVyKCksZSU4IT0wfHxlPDh8fGU+NTEyKXRocm93IG5ldyBFcnJvcihgdW5zdXBwb3J0ZWQgdWludCB0eXBlIGJpdFNpemU6ICR7ZX1gKTt0aGlzLmJpdFNpemU9ZX10b1N0cmluZygpe3JldHVybmB1aW50JHt0aGlzLmJpdFNpemV9YH1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBnJiZ0aGlzLmJpdFNpemU9PT1lLmJpdFNpemV9aXNEeW5hbWljKCl7cmV0dXJuITF9Ynl0ZUxlbigpe3JldHVybiB0aGlzLmJpdFNpemUvOH1lbmNvZGUoZSl7aWYoXCJiaWdpbnRcIiE9dHlwZW9mIGUmJlwibnVtYmVyXCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyB1aW50JHt0aGlzLmJpdFNpemV9OiAke2V9YCk7aWYoZT49QmlnSW50KDIqKnRoaXMuYml0U2l6ZSl8fGU8QmlnSW50KDApKXRocm93IG5ldyBFcnJvcihgJHtlfSBpcyBub3QgYSBub24tbmVnYXRpdmUgaW50IG9yIHRvbyBiaWcgdG8gZml0IGluIHNpemUgdWludCR7dGhpcy5iaXRTaXplfWApO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlJiYhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKGAke2V9IHNob3VsZCBiZSBjb252ZXJ0ZWQgaW50byBhIEJpZ0ludCBiZWZvcmUgaXQgaXMgZW5jb2RlZGApO3JldHVybigwLG8uaikoZSx0aGlzLmJpdFNpemUvOCl9ZGVjb2RlKGUpe2lmKGUubGVuZ3RoIT09dGhpcy5iaXRTaXplLzgpdGhyb3cgbmV3IEVycm9yKGBieXRlIHN0cmluZyBtdXN0IGNvcnJlc3BvbmQgdG8gYSB1aW50JHt0aGlzLmJpdFNpemV9YCk7cmV0dXJuKDAsby52KShlKX19Y2xhc3MgeSBleHRlbmRzIGR7Y29uc3RydWN0b3IoZSx0KXtpZihzdXBlcigpLGUlOCE9MHx8ZTw4fHxlPjUxMil0aHJvdyBuZXcgRXJyb3IoYHVuc3VwcG9ydGVkIHVmaXhlZCB0eXBlIGJpdFNpemU6ICR7ZX1gKTtpZih0PjE2MHx8dDwxKXRocm93IG5ldyBFcnJvcihgdW5zdXBwb3J0ZWQgdWZpeGVkIHR5cGUgcHJlY2lzaW9uOiAke3R9YCk7dGhpcy5iaXRTaXplPWUsdGhpcy5wcmVjaXNpb249dH10b1N0cmluZygpe3JldHVybmB1Zml4ZWQke3RoaXMuYml0U2l6ZX14JHt0aGlzLnByZWNpc2lvbn1gfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHkmJnRoaXMuYml0U2l6ZT09PWUuYml0U2l6ZSYmdGhpcy5wcmVjaXNpb249PT1lLnByZWNpc2lvbn1pc0R5bmFtaWMoKXtyZXR1cm4hMX1ieXRlTGVuKCl7cmV0dXJuIHRoaXMuYml0U2l6ZS84fWVuY29kZShlKXtpZihcImJpZ2ludFwiIT10eXBlb2YgZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2lmKGU+PUJpZ0ludCgyKip0aGlzLmJpdFNpemUpfHxlPEJpZ0ludCgwKSl0aHJvdyBuZXcgRXJyb3IoYCR7ZX0gaXMgbm90IGEgbm9uLW5lZ2F0aXZlIGludCBvciB0b28gYmlnIHRvIGZpdCBpbiBzaXplICR7dGhpcy50b1N0cmluZygpfWApO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlJiYhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKGAke2V9IHNob3VsZCBiZSBjb252ZXJ0ZWQgaW50byBhIEJpZ0ludCBiZWZvcmUgaXQgaXMgZW5jb2RlZGApO3JldHVybigwLG8uaikoZSx0aGlzLmJpdFNpemUvOCl9ZGVjb2RlKGUpe2lmKGUubGVuZ3RoIT09dGhpcy5iaXRTaXplLzgpdGhyb3cgbmV3IEVycm9yKGBieXRlIHN0cmluZyBtdXN0IGNvcnJlc3BvbmQgdG8gYSAke3RoaXMudG9TdHJpbmcoKX1gKTtyZXR1cm4oMCxvLnYpKGUpfX1jbGFzcyBtIGV4dGVuZHMgZHt0b1N0cmluZygpe3JldHVyblwiYWRkcmVzc1wifWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIG19aXNEeW5hbWljKCl7cmV0dXJuITF9Ynl0ZUxlbigpe3JldHVybiBjfWVuY29kZShlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSYmIShlIGluc3RhbmNlb2YgVWludDhBcnJheSkpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybigwLG4uZGVjb2RlQWRkcmVzcykoZSkucHVibGljS2V5O2lmKDMyIT09ZS5ieXRlTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJ5dGUgc3RyaW5nIG11c3QgYmUgMzIgYnl0ZXMgbG9uZyBmb3IgYW4gYWRkcmVzc1wiKTtyZXR1cm4gZX1kZWNvZGUoZSl7aWYoMzIhPT1lLmJ5dGVMZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZSBzdHJpbmcgbXVzdCBiZSAzMiBieXRlcyBsb25nIGZvciBhbiBhZGRyZXNzXCIpO3JldHVybigwLG4uZW5jb2RlQWRkcmVzcykoZSl9fWNsYXNzIGIgZXh0ZW5kcyBke3RvU3RyaW5nKCl7cmV0dXJuXCJib29sXCJ9ZXF1YWxzKGUpe3JldHVybiBlIGluc3RhbmNlb2YgYn1pc0R5bmFtaWMoKXtyZXR1cm4hMX1ieXRlTGVuKCl7cmV0dXJuIGx9ZW5jb2RlKGUpe2lmKFwiYm9vbGVhblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBlbmNvZGUgdmFsdWUgYXMgYm9vbDogJHtlfWApO3JldHVybiBlP25ldyBVaW50OEFycmF5KFsxMjhdKTpuZXcgVWludDhBcnJheShbMF0pfWRlY29kZShlKXtpZigxIT09ZS5ieXRlTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJvb2wgc3RyaW5nIG11c3QgYmUgMSBieXRlIGxvbmdcIik7Y29uc3QgdD1lWzBdO2lmKDEyOD09PXQpcmV0dXJuITA7aWYoMD09PXQpcmV0dXJuITE7dGhyb3cgbmV3IEVycm9yKFwiYm9vbGVhbiBjb3VsZCBub3QgYmUgZGVjb2RlZCBmcm9tIHRoZSBieXRlIHN0cmluZ1wiKX19Y2xhc3MgQSBleHRlbmRzIGR7dG9TdHJpbmcoKXtyZXR1cm5cImJ5dGVcIn1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBfWlzRHluYW1pYygpe3JldHVybiExfWJ5dGVMZW4oKXtyZXR1cm4gdX1lbmNvZGUoZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUmJlwiYmlnaW50XCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyBieXRlOiAke2V9YCk7aWYoXCJiaWdpbnRcIj09dHlwZW9mIGUmJihlPU51bWJlcihlKSksZTwwfHxlPjI1NSl0aHJvdyBuZXcgRXJyb3IoYCR7ZX0gY2Fubm90IGJlIGVuY29kZWQgaW50byBhIGJ5dGVgKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW2VdKX1kZWNvZGUoZSl7aWYoMSE9PWUuYnl0ZUxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJieXRlIHN0cmluZyBtdXN0IGJlIDEgYnl0ZSBsb25nXCIpO3JldHVybiBlWzBdfX1jbGFzcyB3IGV4dGVuZHMgZHt0b1N0cmluZygpe3JldHVyblwic3RyaW5nXCJ9ZXF1YWxzKGUpe3JldHVybiBlIGluc3RhbmNlb2Ygd31pc0R5bmFtaWMoKXtyZXR1cm4hMH1ieXRlTGVuKCl7dGhyb3cgbmV3IEVycm9yKGAke3RoaXMudG9TdHJpbmcoKX0gaXMgYSBkeW5hbWljIHR5cGVgKX1lbmNvZGUoZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUmJiEoZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyBzdHJpbmc6ICR7ZX1gKTtjb25zdCB0PWkuZnJvbShlKSxyPSgwLG8uaikoZS5sZW5ndGgsaCksbj1uZXcgVWludDhBcnJheShlLmxlbmd0aCtoKTtyZXR1cm4gbi5zZXQociksbi5zZXQodCxoKSxufWRlY29kZShlKXtpZihlLmxlbmd0aDxoKXRocm93IG5ldyBFcnJvcihgYnl0ZSBzdHJpbmcgaXMgdG9vIHNob3J0IHRvIGJlIGRlY29kZWQuIEFjdHVhbCBsZW5ndGggaXMgJHtlLmxlbmd0aH0sIGJ1dCBleHBlY3RlZCBhdCBsZWFzdCAke2h9YCk7Y29uc3QgdD1pLmZyb20oZSkucmVhZFVJbnRCRSgwLGgpLHI9ZS5zbGljZShoLGUubGVuZ3RoKTtpZih0IT09ci5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBzdHJpbmcgbGVuZ3RoIGJ5dGVzIGRvIG5vdCBtYXRjaCB0aGUgYWN0dWFsIGxlbmd0aCBvZiBzdHJpbmcuIEV4cGVjdGVkICR7dH0sIGdvdCAke3IubGVuZ3RofWApO3JldHVybiBpLmZyb20ocikudG9TdHJpbmcoXCJ1dGYtOFwiKX19Y2xhc3MgdiBleHRlbmRzIGR7Y29uc3RydWN0b3IoZSx0KXtpZihzdXBlcigpLHQ8MSl0aHJvdyBuZXcgRXJyb3IoYHN0YXRpYyBhcnJheSBtdXN0IGhhdmUgYSBsZW5ndGggZ3JlYXRlciB0aGFuIDA6ICR7dH1gKTt0aGlzLmNoaWxkVHlwZT1lLHRoaXMuc3RhdGljTGVuZ3RoPXR9dG9TdHJpbmcoKXtyZXR1cm5gJHt0aGlzLmNoaWxkVHlwZS50b1N0cmluZygpfVske3RoaXMuc3RhdGljTGVuZ3RofV1gfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHYmJnRoaXMuc3RhdGljTGVuZ3RoPT09ZS5zdGF0aWNMZW5ndGgmJnRoaXMuY2hpbGRUeXBlLmVxdWFscyhlLmNoaWxkVHlwZSl9aXNEeW5hbWljKCl7cmV0dXJuIHRoaXMuY2hpbGRUeXBlLmlzRHluYW1pYygpfWJ5dGVMZW4oKXtyZXR1cm4gdGhpcy5jaGlsZFR5cGUuY29uc3RydWN0b3I9PT1iP01hdGguY2VpbCh0aGlzLnN0YXRpY0xlbmd0aC84KTp0aGlzLnN0YXRpY0xlbmd0aCp0aGlzLmNoaWxkVHlwZS5ieXRlTGVuKCl9ZW5jb2RlKGUpe2lmKCEoQXJyYXkuaXNBcnJheShlKXx8ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyAke3RoaXMudG9TdHJpbmcoKX06ICR7ZX1gKTtpZihlLmxlbmd0aCE9PXRoaXMuc3RhdGljTGVuZ3RoKXRocm93IG5ldyBFcnJvcihgVmFsdWUgYXJyYXkgZG9lcyBub3QgbWF0Y2ggc3RhdGljIGFycmF5IGxlbmd0aC4gRXhwZWN0ZWQgJHt0aGlzLnN0YXRpY0xlbmd0aH0sIGdvdCAke2UubGVuZ3RofWApO3JldHVybiB0aGlzLnRvQUJJVHVwbGVUeXBlKCkuZW5jb2RlKGUpfWRlY29kZShlKXtyZXR1cm4gdGhpcy50b0FCSVR1cGxlVHlwZSgpLmRlY29kZShlKX10b0FCSVR1cGxlVHlwZSgpe3JldHVybiBuZXcgeChBcnJheSh0aGlzLnN0YXRpY0xlbmd0aCkuZmlsbCh0aGlzLmNoaWxkVHlwZSkpfX1jbGFzcyBTIGV4dGVuZHMgZHtjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMuY2hpbGRUeXBlPWV9dG9TdHJpbmcoKXtyZXR1cm5gJHt0aGlzLmNoaWxkVHlwZS50b1N0cmluZygpfVtdYH1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBTJiZ0aGlzLmNoaWxkVHlwZS5lcXVhbHMoZS5jaGlsZFR5cGUpfWlzRHluYW1pYygpe3JldHVybiEwfWJ5dGVMZW4oKXt0aHJvdyBuZXcgRXJyb3IoYCR7dGhpcy50b1N0cmluZygpfSBpcyBhIGR5bmFtaWMgdHlwZWApfWVuY29kZShlKXtpZighKEFycmF5LmlzQXJyYXkoZSl8fGUgaW5zdGFuY2VvZiBVaW50OEFycmF5KSl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBlbmNvZGUgdmFsdWUgYXMgJHt0aGlzLnRvU3RyaW5nKCl9OiAke2V9YCk7Y29uc3QgdD10aGlzLnRvQUJJVHVwbGVUeXBlKGUubGVuZ3RoKSxyPXQuZW5jb2RlKGUpLG49KDAsby5qKSh0LmNoaWxkVHlwZXMubGVuZ3RoLGgpO3JldHVybigwLHMuY29uY2F0QXJyYXlzKShuLHIpfWRlY29kZShlKXtjb25zdCB0PWkuZnJvbShlKS5yZWFkVUludEJFKDAsaCk7cmV0dXJuIHRoaXMudG9BQklUdXBsZVR5cGUodCkuZGVjb2RlKGUuc2xpY2UoaCxlLmxlbmd0aCkpfXRvQUJJVHVwbGVUeXBlKGUpe3JldHVybiBuZXcgeChBcnJheShlKS5maWxsKHRoaXMuY2hpbGRUeXBlKSl9fWNsYXNzIHggZXh0ZW5kcyBke2NvbnN0cnVjdG9yKGUpe2lmKHN1cGVyKCksZS5sZW5ndGg+PWEpdGhyb3cgbmV3IEVycm9yKFwidHVwbGUgdHlwZSBjaGlsZCB0eXBlIG51bWJlciBsYXJnZXIgdGhhbiBtYXhpbXVtIHVpbnQxNiBlcnJvclwiKTt0aGlzLmNoaWxkVHlwZXM9ZX10b1N0cmluZygpe2NvbnN0IGU9W107Zm9yKGxldCB0PTA7dDx0aGlzLmNoaWxkVHlwZXMubGVuZ3RoO3QrKyllW3RdPXRoaXMuY2hpbGRUeXBlc1t0XS50b1N0cmluZygpO3JldHVybmAoJHtlLmpvaW4oXCIsXCIpfSlgfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHgmJnRoaXMuY2hpbGRUeXBlcy5sZW5ndGg9PT1lLmNoaWxkVHlwZXMubGVuZ3RoJiZ0aGlzLmNoaWxkVHlwZXMuZXZlcnkoKCh0LHIpPT50LmVxdWFscyhlLmNoaWxkVHlwZXNbcl0pKSl9aXNEeW5hbWljKCl7cmV0dXJuIHRoaXMuY2hpbGRUeXBlcy5zb21lKChlPT5lLmlzRHluYW1pYygpKSl9Ynl0ZUxlbigpe2xldCBlPTA7Zm9yKGxldCB0PTA7dDx0aGlzLmNoaWxkVHlwZXMubGVuZ3RoO3QrKylpZih0aGlzLmNoaWxkVHlwZXNbdF0uY29uc3RydWN0b3I9PT1iKXtjb25zdCByPVQodGhpcy5jaGlsZFR5cGVzLHQsMSksbj1yKzE7dCs9cixlKz1NYXRoLnRydW5jKChuKzcpLzgpfWVsc2UgZSs9dGhpcy5jaGlsZFR5cGVzW3RdLmJ5dGVMZW4oKTtyZXR1cm4gZX1lbmNvZGUoZSl7aWYoIShBcnJheS5pc0FycmF5KGUpfHxlIGluc3RhbmNlb2YgVWludDhBcnJheSkpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2NvbnN0IHQ9QXJyYXkuZnJvbShlKTtpZihlLmxlbmd0aD5hKXRocm93IG5ldyBFcnJvcihcImxlbmd0aCBvZiB0dXBsZSBhcnJheSBzaG91bGQgbm90IGV4Y2VlZCBhIHVpbnQxNlwiKTtjb25zdCByPXRoaXMuY2hpbGRUeXBlcyxuPVtdLGk9W10sYz1uZXcgTWFwO2xldCB1PTA7Zm9yKDt1PHIubGVuZ3RoOyl7Y29uc3QgZT1yW3VdO2lmKGUuaXNEeW5hbWljKCkpYy5zZXQobi5sZW5ndGgsITApLG4ucHVzaChuZXcgVWludDhBcnJheShbMCwwXSkpLGkucHVzaChlLmVuY29kZSh0W3VdKSk7ZWxzZXtpZihlLmNvbnN0cnVjdG9yPT09Yil7Y29uc3QgZT1UKHIsdSwtMSk7bGV0IHM9VChyLHUsMSk7aWYoZSU4IT0wKXRocm93IG5ldyBFcnJvcihcImV4cGVjdGVkIGJlZm9yZSBpbmRleCBzaG91bGQgaGF2ZSBudW1iZXIgb2YgYm9vbCBtb2QgOCBlcXVhbCAwXCIpO3M9TWF0aC5taW4oNyxzKTtjb25zdCBpPUUodC5zbGljZSh1LHUrcysxKSk7bi5wdXNoKCgwLG8uaikoaSwxKSksdSs9c31lbHNle2NvbnN0IHI9ZS5lbmNvZGUodFt1XSk7bi5wdXNoKHIpfWMuc2V0KHUsITEpLGkucHVzaChuZXcgVWludDhBcnJheSl9dSs9MX1sZXQgbD0wO2Zvcihjb25zdCBlIG9mIG4pbCs9ZS5sZW5ndGg7bGV0IHA9MDtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoO2UrKyl7aWYoYy5nZXQoZSkpe2NvbnN0IHQ9bCtwO2lmKHQ+YSl0aHJvdyBuZXcgRXJyb3IoYGJ5dGUgbGVuZ3RoIG9mICR7dH0gc2hvdWxkIG5vdCBleGNlZWQgYSB1aW50MTZgKTtuW2VdPSgwLG8uaikodCxoKX1wKz1pW2VdLmxlbmd0aH1yZXR1cm4oMCxzLmNvbmNhdEFycmF5cykoLi4ubiwuLi5pKX1kZWNvZGUoZSl7Y29uc3QgdD10aGlzLmNoaWxkVHlwZXMscj1bXSxuPVtdO2xldCBvPTAscz0wO2NvbnN0IGE9aS5mcm9tKGUpO2Zvcig7bzx0Lmxlbmd0aDspe2NvbnN0IGk9dFtvXTtpZihpLmlzRHluYW1pYygpKXtpZihlLnNsaWNlKHMsZS5sZW5ndGgpLmxlbmd0aDxoKXRocm93IG5ldyBFcnJvcihcImR5bmFtaWMgdHlwZSBpbiB0dXBsZSBpcyB0b28gc2hvcnQgdG8gYmUgZGVjb2RlZFwiKTtjb25zdCB0PWEucmVhZFVJbnRCRShzLGgpO2lmKHIubGVuZ3RoPjAmJihyW3IubGVuZ3RoLTFdLnJpZ2h0PXQsdDxyW3IubGVuZ3RoLTFdLmxlZnQpKXRocm93IG5ldyBFcnJvcihcImR5bmFtaWMgaW5kZXggc2VnbWVudCBtaXNjYWxjdWxhdGlvbjogbGVmdCBpcyBncmVhdGVyIHRoYW4gcmlnaHQgaW5kZXhcIik7Y29uc3Qgbz17bGVmdDp0LHJpZ2h0Oi0xfTtyLnB1c2gobyksbi5wdXNoKG51bGwpLHMrPWh9ZWxzZSBpZihpLmNvbnN0cnVjdG9yPT09Yil7Y29uc3QgdD1UKHRoaXMuY2hpbGRUeXBlcyxvLC0xKTtsZXQgcj1UKHRoaXMuY2hpbGRUeXBlcyxvLDEpO2lmKHQlOCE9MCl0aHJvdyBuZXcgRXJyb3IoXCJleHBlY3RlZCBiZWZvcmUgYm9vbCBudW1iZXIgbW9kIDggPT09IDBcIik7cj1NYXRoLm1pbig3LHIpO2ZvcihsZXQgdD0wO3Q8PXI7dCsrKXtjb25zdCByPTEyOD4+dDsoZVtzXSZyKT4wP24ucHVzaChuZXcgVWludDhBcnJheShbMTI4XSkpOm4ucHVzaChuZXcgVWludDhBcnJheShbMF0pKX1vKz1yLHMrPTF9ZWxzZXtjb25zdCB0PWkuYnl0ZUxlbigpO24ucHVzaChlLnNsaWNlKHMscyt0KSkscys9dH1pZihvIT09dC5sZW5ndGgtMSYmcz49ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiaW5wdXQgYnl0ZSBub3QgZW5vdWdoIHRvIGRlY29kZVwiKTtvKz0xfWlmKHIubGVuZ3RoPjAmJihyW3IubGVuZ3RoLTFdLnJpZ2h0PWUubGVuZ3RoLHM9ZS5sZW5ndGgpLHM8ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiaW5wdXQgYnl0ZSBub3QgZnVsbHkgY29uc3VtZWRcIik7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspe2NvbnN0IHQ9cltlXTtpZih0LmxlZnQ+dC5yaWdodCl0aHJvdyBuZXcgRXJyb3IoXCJkeW5hbWljIHNlZ21lbnQgc2hvdWxkIGRpc3BsYXkgYSBbbCwgcl0gc3BhY2Ugd2l0aCBsIDw9IHJcIik7aWYoZSE9PXIubGVuZ3RoLTEmJnQucmlnaHQhPT1yW2UrMV0ubGVmdCl0aHJvdyBuZXcgRXJyb3IoXCJkeW5hbWljIHNlZ21lbnQgc2hvdWxkIGJlIGNvbnNlY3V0aXZlXCIpfWxldCBjPTA7Zm9yKGxldCBvPTA7bzx0Lmxlbmd0aDtvKyspdFtvXS5pc0R5bmFtaWMoKSYmKG5bb109ZS5zbGljZShyW2NdLmxlZnQscltjXS5yaWdodCksYys9MSk7Y29uc3QgdT1bXTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgcj10W2VdLmRlY29kZShuW2VdKTt1LnB1c2gocil9cmV0dXJuIHV9c3RhdGljIHBhcnNlVHVwbGVDb250ZW50KGUpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5bXTtpZihlLmVuZHNXaXRoKFwiLFwiKXx8ZS5zdGFydHNXaXRoKFwiLFwiKSl0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgc2hvdWxkIG5vdCBzdGFydCB3aXRoIGNvbW1hXCIpO2lmKGUuaW5jbHVkZXMoXCIsLFwiKSl0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgc2hvdWxkIG5vdCBoYXZlIGNvbnNlY3V0aXZlIGNvbW1hc1wiKTtjb25zdCB0PVtdO2xldCByPTAsbj1cIlwiO2Zvcihjb25zdCBvIG9mIGUpbis9byxcIihcIj09PW8/cis9MTpcIilcIj09PW8/ci09MTpcIixcIj09PW8mJjA9PT1yJiYodC5wdXNoKG4uc2xpY2UoMCxuLmxlbmd0aC0xKSksbj1cIlwiKTtpZigwIT09bi5sZW5ndGgmJnQucHVzaChuKSwwIT09cil0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgaGFzIG1pc21hdGNoZWQgcGFyZW50aGVzZXNcIik7cmV0dXJuIHR9fWZ1bmN0aW9uIEUoZSl7bGV0IHQ9MDtpZihlLmxlbmd0aD44KXRocm93IG5ldyBFcnJvcihcInZhbHVlIGxpc3QgcGFzc2VkIGluIHNob3VsZCBiZSBubyBncmVhdGVyIHRoYW4gbGVuZ3RoIDhcIik7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspe2NvbnN0IG49ZVtyXTtpZihcImJvb2xlYW5cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKFwibm9uLWJvb2xlYW4gdmFsdWVzIGNhbm5vdCBiZSBjb21wcmVzc2VkIGludG8gYSBieXRlXCIpO24mJih0fD0xPDw3LXIpfXJldHVybiB0fWZ1bmN0aW9uIFQoZSx0LHIpe2xldCBuPTA7Zm9yKDs7KXtjb25zdCBvPXQrcipuO2lmKGVbb10uY29uc3RydWN0b3IhPT1iKXtuLT0xO2JyZWFrfWlmKG8hPT1lLmxlbmd0aC0xJiYxPT09ciluKz0xO2Vsc2V7aWYoIShvPjAmJi0xPT09cikpYnJlYWs7bis9MX19cmV0dXJuIG59dmFyIF8sQixVPXIoOTQwNCk7ZnVuY3Rpb24gayhlKXtyZXR1cm4gZT09PV8uYW55fHxlPT09Xy5wYXl8fGU9PT1fLmtleXJlZ3x8ZT09PV8uYWNmZ3x8ZT09PV8uYXhmZXJ8fGU9PT1fLmFmcnp8fGU9PT1fLmFwcGx9ZnVuY3Rpb24gSShlLHQpe3JldHVybiBlPT09Xy5hbnl8fHQudHlwZSYmdC50eXBlLnRvU3RyaW5nKCk9PT1lLnRvU3RyaW5nKCl9ZnVuY3Rpb24gQyhlKXtyZXR1cm4gZT09PUIuYWNjb3VudHx8ZT09PUIuYXBwbGljYXRpb258fGU9PT1CLmFzc2V0fSFmdW5jdGlvbihlKXtlLmFueT1cInR4blwiLGUucGF5PVwicGF5XCIsZS5rZXlyZWc9XCJrZXlyZWdcIixlLmFjZmc9XCJhY2ZnXCIsZS5heGZlcj1cImF4ZmVyXCIsZS5hZnJ6PVwiYWZyelwiLGUuYXBwbD1cImFwcGxcIn0oX3x8KF89e30pKSxmdW5jdGlvbihlKXtlLmFjY291bnQ9XCJhY2NvdW50XCIsZS5hcHBsaWNhdGlvbj1cImFwcGxpY2F0aW9uXCIsZS5hc3NldD1cImFzc2V0XCJ9KEJ8fChCPXt9KSk7Y2xhc3MgUntjb25zdHJ1Y3RvcihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZS5uYW1lfHxcIm9iamVjdFwiIT10eXBlb2YgZS5yZXR1cm5zfHwhQXJyYXkuaXNBcnJheShlLmFyZ3MpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQUJJTWV0aG9kIHBhcmFtZXRlcnNcIik7dGhpcy5uYW1lPWUubmFtZSx0aGlzLmRlc2NyaXB0aW9uPWUuZGVzYyx0aGlzLmFyZ3M9ZS5hcmdzLm1hcCgoKHt0eXBlOmUsbmFtZTp0LGRlc2M6cn0pPT5rKGUpfHxDKGUpP3t0eXBlOmUsbmFtZTp0LGRlc2NyaXB0aW9uOnJ9Ont0eXBlOmQuZnJvbShlKSxuYW1lOnQsZGVzY3JpcHRpb246cn0pKSx0aGlzLnJldHVybnM9e3R5cGU6XCJ2b2lkXCI9PT1lLnJldHVybnMudHlwZT9lLnJldHVybnMudHlwZTpkLmZyb20oZS5yZXR1cm5zLnR5cGUpLGRlc2NyaXB0aW9uOmUucmV0dXJucy5kZXNjfX1nZXRTaWduYXR1cmUoKXtjb25zdCBlPXRoaXMuYXJncy5tYXAoKGU9PmUudHlwZS50b1N0cmluZygpKSkuam9pbihcIixcIiksdD10aGlzLnJldHVybnMudHlwZS50b1N0cmluZygpO3JldHVybmAke3RoaXMubmFtZX0oJHtlfSkke3R9YH1nZXRTZWxlY3Rvcigpe2NvbnN0IGU9KDAsVS5nZW5lcmljSGFzaCkodGhpcy5nZXRTaWduYXR1cmUoKSk7cmV0dXJuIG5ldyBVaW50OEFycmF5KGUuc2xpY2UoMCw0KSl9dHhuQ291bnQoKXtsZXQgZT0xO2Zvcihjb25zdCB0IG9mIHRoaXMuYXJncylcInN0cmluZ1wiPT10eXBlb2YgdC50eXBlJiZrKHQudHlwZSkmJihlKz0xKTtyZXR1cm4gZX10b0pTT04oKXtyZXR1cm57bmFtZTp0aGlzLm5hbWUsZGVzYzp0aGlzLmRlc2NyaXB0aW9uLGFyZ3M6dGhpcy5hcmdzLm1hcCgoKHt0eXBlOmUsbmFtZTp0LGRlc2NyaXB0aW9uOnJ9KT0+KHt0eXBlOmUudG9TdHJpbmcoKSxuYW1lOnQsZGVzYzpyfSkpKSxyZXR1cm5zOnt0eXBlOnRoaXMucmV0dXJucy50eXBlLnRvU3RyaW5nKCksZGVzYzp0aGlzLnJldHVybnMuZGVzY3JpcHRpb259fX1zdGF0aWMgZnJvbVNpZ25hdHVyZShlKXtjb25zdHtuYW1lOnQsYXJnczpyLHJldHVybnM6bn09ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmluZGV4T2YoXCIoXCIpO2lmKC0xPT09dCl0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbWV0aG9kIHNpZ25hdHVyZTogJHtlfWApO2xldCByPS0xLG49MDtmb3IobGV0IG89dDtvPGUubGVuZ3RoO28rKyl7Y29uc3QgdD1lW29dO2lmKFwiKFwiPT09dCluKz0xO2Vsc2UgaWYoXCIpXCI9PT10KXtpZigwPT09bilicmVhaztpZihuLT0xLDA9PT1uKXtyPW87YnJlYWt9fX1pZigtMT09PXIpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG1ldGhvZCBzaWduYXR1cmU6ICR7ZX1gKTtyZXR1cm57bmFtZTplLnNsaWNlKDAsdCksYXJnczp4LnBhcnNlVHVwbGVDb250ZW50KGUuc2xpY2UodCsxLHIpKSxyZXR1cm5zOmUuc2xpY2UocisxKX19KGUpO3JldHVybiBuZXcgUih7bmFtZTp0LGFyZ3M6ci5tYXAoKGU9Pih7dHlwZTplfSkpKSxyZXR1cm5zOnt0eXBlOm59fSl9fWZ1bmN0aW9uIE8oZSx0KXtpZihudWxsPT09ZXx8IUFycmF5LmlzQXJyYXkoZSl8fCFlLmV2ZXJ5KChlPT5lIGluc3RhbmNlb2YgUikpKXRocm93IG5ldyBFcnJvcihcIk1ldGhvZHMgbGlzdCBwcm92aWRlZCBpcyBudWxsIG9yIG5vdCB0aGUgY29ycmVjdCB0eXBlXCIpO2NvbnN0IHI9ZS5maWx0ZXIoKGU9PmUubmFtZT09PXQpKTtpZihyLmxlbmd0aD4xKXRocm93IG5ldyBFcnJvcihgZm91bmQgJHtyLmxlbmd0aH0gbWV0aG9kcyB3aXRoIHRoZSBzYW1lIG5hbWUgJHtyLm1hcCgoZT0+ZS5nZXRTaWduYXR1cmUoKSkpLmpvaW4oXCIsXCIpfWApO2lmKDA9PT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYGZvdW5kIDAgbWV0aG9kcyB3aXRoIHRoZSBuYW1lICR7dH1gKTtyZXR1cm4gclswXX1jbGFzcyBEe2NvbnN0cnVjdG9yKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlLm5hbWV8fCFBcnJheS5pc0FycmF5KGUubWV0aG9kcyl8fGUubmV0d29ya3MmJlwib2JqZWN0XCIhPXR5cGVvZiBlLm5ldHdvcmtzKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQUJJQ29udHJhY3QgcGFyYW1ldGVyc1wiKTt0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuZGVzY3JpcHRpb249ZS5kZXNjLHRoaXMubmV0d29ya3M9ZS5uZXR3b3Jrcz97Li4uZS5uZXR3b3Jrc306e30sdGhpcy5tZXRob2RzPWUubWV0aG9kcy5tYXAoKGU9Pm5ldyBSKGUpKSl9dG9KU09OKCl7cmV0dXJue25hbWU6dGhpcy5uYW1lLGRlc2M6dGhpcy5kZXNjcmlwdGlvbixuZXR3b3Jrczp0aGlzLm5ldHdvcmtzLG1ldGhvZHM6dGhpcy5tZXRob2RzLm1hcCgoZT0+ZS50b0pTT04oKSkpfX1nZXRNZXRob2RCeU5hbWUoZSl7cmV0dXJuIE8odGhpcy5tZXRob2RzLGUpfX1jbGFzcyBOe2NvbnN0cnVjdG9yKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlLm5hbWV8fCFBcnJheS5pc0FycmF5KGUubWV0aG9kcykpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBBQklJbnRlcmZhY2UgcGFyYW1ldGVyc1wiKTt0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuZGVzY3JpcHRpb249ZS5kZXNjLHRoaXMubWV0aG9kcz1lLm1ldGhvZHMubWFwKChlPT5uZXcgUihlKSkpfXRvSlNPTigpe3JldHVybntuYW1lOnRoaXMubmFtZSxkZXNjOnRoaXMuZGVzY3JpcHRpb24sbWV0aG9kczp0aGlzLm1ldGhvZHMubWFwKChlPT5lLnRvSlNPTigpKSl9fWdldE1ldGhvZEJ5TmFtZShlKXtyZXR1cm4gTyh0aGlzLm1ldGhvZHMsZSl9fX0sNzk4ODooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse1o6KCk9PnN9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KTtmdW5jdGlvbiBzKCl7Y29uc3QgZT1uLmtleVBhaXIoKTtyZXR1cm57YWRkcjpvLmVuY29kZUFkZHJlc3MoZS5wdWJsaWNLZXkpLHNrOmUuc2VjcmV0S2V5fX19LDI2OTE6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5jfSk7dmFyIG49cig3MTE2KSxvPXIoMzAzMykscz1yKDk0MDQpLGk9cig0MTMpLGE9cigyNDg2KS5CdWZmZXI7Y2xhc3MgY3tjb25zdHJ1Y3Rvcih7YmlkZGVyS2V5OmUsYmlkQW1vdW50OnQsYmlkSUQ6cixhdWN0aW9uS2V5Om8sYXVjdGlvbklEOnMsbWF4UHJpY2U6aX0pe3RoaXMubmFtZT1cIkJpZFwiLHRoaXMudGFnPWEuZnJvbShbOTcsNjZdKTtjb25zdCBjPW4uZGVjb2RlQWRkcmVzcyhlKSx1PW4uZGVjb2RlQWRkcmVzcyhvKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIodCl8fHQ8MCl0aHJvdyBFcnJvcihcIkJpZCBhbW91bnQgbXVzdCBiZSBwb3NpdGl2ZSBhbmQgMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyKXx8cjwwKXRocm93IEVycm9yKFwiQmlkSUQgbXVzdCBiZSBwb3NpdGl2ZSBhbmQgMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihzKXx8czwwKXRocm93IEVycm9yKFwiYXVjdGlvbklEIG11c3QgYmUgcG9zaXRpdmVcIik7T2JqZWN0LmFzc2lnbih0aGlzLHtiaWRkZXJLZXk6YyxiaWRBbW91bnQ6dCxiaWRJRDpyLGF1Y3Rpb25LZXk6dSxhdWN0aW9uSUQ6cyxtYXhQcmljZTppfSl9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtyZXR1cm57YmlkZGVyOmEuZnJvbSh0aGlzLmJpZGRlcktleS5wdWJsaWNLZXkpLGN1cjp0aGlzLmJpZEFtb3VudCxwcmljZTp0aGlzLm1heFByaWNlLGlkOnRoaXMuYmlkSUQsYXVjOmEuZnJvbSh0aGlzLmF1Y3Rpb25LZXkucHVibGljS2V5KSxhaWQ6dGhpcy5hdWN0aW9uSUR9fXNpZ25CaWQoZSl7Y29uc3QgdD1vLmVuY29kZSh0aGlzLmdldF9vYmpfZm9yX2VuY29kaW5nKCkpLHI9YS5mcm9tKGkuY29uY2F0QXJyYXlzKHRoaXMudGFnLHQpKSxuPXMuc2lnbihyLGUpLGM9e3Q6XCJiXCIsYjp7c2lnOmEuZnJvbShuKSxiaWQ6dGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpfX07cmV0dXJuIG5ldyBVaW50OEFycmF5KG8uZW5jb2RlKGMpKX19fSwxMTEzOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse2RlZmF1bHQ6KCk9PnV9KTt2YXIgbj1yKDQxMyksbz1yKDUzOTEpLHM9cigyNDg2KS5CdWZmZXI7Y2xhc3MgaXtjb25zdHJ1Y3RvcihlLHQscixuPXt9KXt0aGlzLmRlZmF1bHRIZWFkZXJzPW47Y29uc3Qgbz10LmVuZHNXaXRoKFwiL1wiKT90OmAke3R9L2Ascz1uZXcgVVJMKG8pO2lmKHZvaWQgMCE9PXImJihzLnBvcnQ9ci50b1N0cmluZygpKSwwPT09cy5wcm90b2NvbC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlIHNlcnZlciBVUkwsIHByb3RvY29sIG11c3QgYmUgZGVmaW5lZC5cIik7dGhpcy5iYXNlVVJMPXMsdGhpcy50b2tlbkhlYWRlcj1lfWFkZHJlc3NXaXRoUGF0aChlKXtsZXQgdDtyZXR1cm4gdD1lLnN0YXJ0c1dpdGgoXCIuL1wiKT9lOmUuc3RhcnRzV2l0aChcIi9cIik/YC4ke2V9YDpgLi8ke2V9YCxuZXcgVVJMKHQsdGhpcy5iYXNlVVJMKS50b1N0cmluZygpfXN0YXRpYyBzdXBlcmFnZW50VG9IVFRQQ2xpZW50UmVzcG9uc2UoZSl7cmV0dXJuIGUuYm9keSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyJiYoZS5ib2R5PW5ldyBVaW50OEFycmF5KGUuYm9keSkpLGV9c3RhdGljIGZvcm1hdFN1cGVyYWdlbnRFcnJvcihlKXtpZihlLnJlc3BvbnNlKXRyeXtjb25zdCB0PUpTT04ucGFyc2Uocy5mcm9tKGUucmVzcG9uc2UuYm9keSkudG9TdHJpbmcoKSk7ZS5tZXNzYWdlPWBOZXR3b3JrIHJlcXVlc3QgZXJyb3IuIFJlY2VpdmVkIHN0YXR1cyAke2UucmVzcG9uc2Uuc3RhdHVzfTogJHt0Lm1lc3NhZ2V9YH1jYXRjaChlKXt9cmV0dXJuIGV9YXN5bmMgZ2V0KGUsdCxyPXt9KXtjb25zdCBuPW8uZ2V0KHRoaXMuYWRkcmVzc1dpdGhQYXRoKGUpKS5zZXQodGhpcy50b2tlbkhlYWRlcikuc2V0KHRoaXMuZGVmYXVsdEhlYWRlcnMpLnNldChyKS5yZXNwb25zZVR5cGUoXCJhcnJheWJ1ZmZlclwiKS5xdWVyeSh0KTt0cnl7Y29uc3QgZT1hd2FpdCBuO3JldHVybiBpLnN1cGVyYWdlbnRUb0hUVFBDbGllbnRSZXNwb25zZShlKX1jYXRjaChlKXt0aHJvdyBpLmZvcm1hdFN1cGVyYWdlbnRFcnJvcihlKX19YXN5bmMgcG9zdChlLHQscixuPXt9KXtjb25zdCBhPW8ucG9zdCh0aGlzLmFkZHJlc3NXaXRoUGF0aChlKSkuc2V0KHRoaXMudG9rZW5IZWFkZXIpLnNldCh0aGlzLmRlZmF1bHRIZWFkZXJzKS5zZXQobikucXVlcnkocikuc2VyaWFsaXplKChlPT5lKSkucmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIikuc2VuZChzLmZyb20odCkpO3RyeXtjb25zdCBlPWF3YWl0IGE7cmV0dXJuIGkuc3VwZXJhZ2VudFRvSFRUUENsaWVudFJlc3BvbnNlKGUpfWNhdGNoKGUpe3Rocm93IGkuZm9ybWF0U3VwZXJhZ2VudEVycm9yKGUpfX1hc3luYyBkZWxldGUoZSx0LHIsbj17fSl7Y29uc3QgYT1vLmRlbGV0ZSh0aGlzLmFkZHJlc3NXaXRoUGF0aChlKSkuc2V0KHRoaXMudG9rZW5IZWFkZXIpLnNldCh0aGlzLmRlZmF1bHRIZWFkZXJzKS5zZXQobikucXVlcnkocikuc2VyaWFsaXplKChlPT5lKSkucmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIikuc2VuZChzLmZyb20odCkpO3RyeXtjb25zdCBlPWF3YWl0IGE7cmV0dXJuIGkuc3VwZXJhZ2VudFRvSFRUUENsaWVudFJlc3BvbnNlKGUpfWNhdGNoKGUpe3Rocm93IGkuZm9ybWF0U3VwZXJhZ2VudEVycm9yKGUpfX19dmFyIGE9cigyNDg2KS5CdWZmZXI7ZnVuY3Rpb24gYyhlKXtyZXR1cm4gT2JqZWN0LmtleXMoZSkucmVkdWNlKCgodCxyKT0+KHRbci50b0xvd2VyQ2FzZSgpXT1lW3JdLHQpKSx7fSl9Y2xhc3MgdXtjb25zdHJ1Y3RvcihlLHQscixuPXt9KXt0aGlzLmJjPXZvaWQgMCE9PXQ/bmV3IGkoZSx0LHIsbik6ZX1zdGF0aWMgcGFyc2VKU09OKGUsdCxyPXt9KXt0cnl7cmV0dXJuIDA9PT1PYmplY3Qua2V5cyhyKS5sZW5ndGg/ZSYmSlNPTi5wYXJzZShlKTplJiZuLnBhcnNlSlNPTihlLHIpfWNhdGNoKHIpe2NvbnN0IG49cjt0aHJvdyBuLnJhd1Jlc3BvbnNlPWV8fG51bGwsbi5zdGF0dXNDb2RlPXQsbn19c3RhdGljIHNlcmlhbGl6ZURhdGEoZSx0KXtpZighZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7aWYoXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10W1wiY29udGVudC10eXBlXCJdKXJldHVybiBuZXcgVWludDhBcnJheShhLmZyb20oSlNPTi5zdHJpbmdpZnkoZSkpKTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYS5mcm9tKGUpKTtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyZXR1cm4gZTt0aHJvdyBuZXcgRXJyb3IoXCJwcm92aWRlZCBkYXRhIGlzIG5laXRoZXIgYSBzdHJpbmcgbm9yIGEgVWludDhBcnJheSBhbmQgY29udGVudC10eXBlIGlzIG5vdCBhcHBsaWNhdGlvbi9qc29uXCIpfXN0YXRpYyBwcmVwYXJlUmVzcG9uc2UoZSx0LHI9e30pe2xldCBuLHtib2R5Om99PWU7cmV0dXJuXCJhcHBsaWNhdGlvbi9tc2dwYWNrXCIhPT10JiYobj1vJiZhLmZyb20obykudG9TdHJpbmcoKXx8XCJcIiksXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10JiYobz11LnBhcnNlSlNPTihuLGUuc3RhdHVzLHIpKSx7Li4uZSxib2R5Om8sdGV4dDpuLG9rOjI9PT1NYXRoLnRydW5jKGUuc3RhdHVzLzEwMCl9fXN0YXRpYyBwcmVwYXJlUmVzcG9uc2VFcnJvcihlKXtyZXR1cm4gZS5yZXNwb25zZSYmKGUucmVzcG9uc2U9dS5wcmVwYXJlUmVzcG9uc2UoZS5yZXNwb25zZSxcImFwcGxpY2F0aW9uL2pzb25cIiksZS5zdGF0dXM9ZS5yZXNwb25zZS5zdGF0dXMpLGV9YXN5bmMgZ2V0KGUsdCxyPXt9LG49e30pe2NvbnN0IG89ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZXx8IU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLFwiZm9ybWF0XCIpKXJldHVyblwiYXBwbGljYXRpb24vanNvblwiO3N3aXRjaChlLmZvcm1hdCl7Y2FzZVwibXNncGFja1wiOnJldHVyblwiYXBwbGljYXRpb24vbXNncGFja1wiO2Nhc2VcImpzb25cIjpkZWZhdWx0OnJldHVyblwiYXBwbGljYXRpb24vanNvblwifX0odCkscz17Li4ucixhY2NlcHQ6b307dHJ5e2NvbnN0IHI9YXdhaXQgdGhpcy5iYy5nZXQoZSxmdW5jdGlvbihlKXtmb3IoY29uc3QgdCBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpJiYoZVt0XSYmMCE9PWVbdF0ubGVuZ3RofHxkZWxldGUgZVt0XSk7cmV0dXJuIGV9KHQpLHMpO3JldHVybiB1LnByZXBhcmVSZXNwb25zZShyLG8sbil9Y2F0Y2goZSl7dGhyb3cgdS5wcmVwYXJlUmVzcG9uc2VFcnJvcihlKX19YXN5bmMgcG9zdChlLHQscj17fSl7Y29uc3Qgbj17XCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIiwuLi5jKHIpfTt0cnl7Y29uc3Qgcj1hd2FpdCB0aGlzLmJjLnBvc3QoZSx1LnNlcmlhbGl6ZURhdGEodCxuKSx2b2lkIDAsbik7cmV0dXJuIHUucHJlcGFyZVJlc3BvbnNlKHIsXCJhcHBsaWNhdGlvbi9qc29uXCIpfWNhdGNoKGUpe3Rocm93IHUucHJlcGFyZVJlc3BvbnNlRXJyb3IoZSl9fWFzeW5jIGRlbGV0ZShlLHQscj17fSl7Y29uc3Qgbj17XCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIiwuLi5jKHIpfSxvPWF3YWl0IHRoaXMuYmMuZGVsZXRlKGUsdS5zZXJpYWxpemVEYXRhKHQsbiksdm9pZCAwLG4pO3JldHVybiB1LnByZXBhcmVSZXNwb25zZShvLFwiYXBwbGljYXRpb24vanNvblwiKX19fSw2NDc3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7WjooKT0+aX0pO3ZhciBuPXIoMzQ4MCksbz1yKDk0MTcpLHM9cigyNDg2KS5CdWZmZXI7Y2xhc3MgaSBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQ9XCJodHRwOi8vMTI3LjAuMC4xXCIscj03ODMzLG49e30pe3N1cGVyKFwiWC1LTUQtQVBJLVRva2VuXCIsZSx0LHIsbil9YXN5bmMgdmVyc2lvbnMoKXtyZXR1cm4oYXdhaXQgdGhpcy5jLmdldChcIi92ZXJzaW9uc1wiKSkuYm9keX1hc3luYyBsaXN0V2FsbGV0cygpe3JldHVybihhd2FpdCB0aGlzLmMuZ2V0KFwiL3YxL3dhbGxldHNcIikpLmJvZHl9YXN5bmMgY3JlYXRlV2FsbGV0KGUsdCxyPW5ldyBVaW50OEFycmF5LG49XCJzcWxpdGVcIil7Y29uc3Qgbz17d2FsbGV0X25hbWU6ZSx3YWxsZXRfZHJpdmVyX25hbWU6bix3YWxsZXRfcGFzc3dvcmQ6dCxtYXN0ZXJfZGVyaXZhdGlvbl9rZXk6cy5mcm9tKHIpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0XCIsbykpLmJvZHl9YXN5bmMgaW5pdFdhbGxldEhhbmRsZShlLHQpe2NvbnN0IHI9e3dhbGxldF9pZDplLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L2luaXRcIixyKSkuYm9keX1hc3luYyByZWxlYXNlV2FsbGV0SGFuZGxlKGUpe2NvbnN0IHQ9e3dhbGxldF9oYW5kbGVfdG9rZW46ZX07cmV0dXJuKGF3YWl0IHRoaXMuYy5wb3N0KFwiL3YxL3dhbGxldC9yZWxlYXNlXCIsdCkpLmJvZHl9YXN5bmMgcmVuZXdXYWxsZXRIYW5kbGUoZSl7Y29uc3QgdD17d2FsbGV0X2hhbmRsZV90b2tlbjplfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L3JlbmV3XCIsdCkpLmJvZHl9YXN5bmMgcmVuYW1lV2FsbGV0KGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaWQ6ZSx3YWxsZXRfcGFzc3dvcmQ6dCx3YWxsZXRfbmFtZTpyfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L3JlbmFtZVwiLG4pKS5ib2R5fWFzeW5jIGdldFdhbGxldChlKXtjb25zdCB0PXt3YWxsZXRfaGFuZGxlX3Rva2VuOmV9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS93YWxsZXQvaW5mb1wiLHQpKS5ib2R5fWFzeW5jIGV4cG9ydE1hc3RlckRlcml2YXRpb25LZXkoZSx0KXtjb25zdCByPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsd2FsbGV0X3Bhc3N3b3JkOnR9LG49YXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbWFzdGVyLWtleS9leHBvcnRcIixyKTtyZXR1cm57bWFzdGVyX2Rlcml2YXRpb25fa2V5OnMuZnJvbShuLmJvZHkubWFzdGVyX2Rlcml2YXRpb25fa2V5LFwiYmFzZTY0XCIpfX1hc3luYyBpbXBvcnRLZXkoZSx0KXtjb25zdCByPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUscHJpdmF0ZV9rZXk6cy5mcm9tKHQpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEva2V5L2ltcG9ydFwiLHIpKS5ib2R5fWFzeW5jIGV4cG9ydEtleShlLHQscil7Y29uc3Qgbj17d2FsbGV0X2hhbmRsZV90b2tlbjplLGFkZHJlc3M6cix3YWxsZXRfcGFzc3dvcmQ6dH0sbz1hd2FpdCB0aGlzLmMucG9zdChcIi92MS9rZXkvZXhwb3J0XCIsbik7cmV0dXJue3ByaXZhdGVfa2V5OnMuZnJvbShvLmJvZHkucHJpdmF0ZV9rZXksXCJiYXNlNjRcIil9fWFzeW5jIGdlbmVyYXRlS2V5KGUpe2NvbnN0IHQ9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxkaXNwbGF5X21uZW1vbmljOiExfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEva2V5XCIsdCkpLmJvZHl9YXN5bmMgZGVsZXRlS2V5KGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsYWRkcmVzczpyLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLmRlbGV0ZShcIi92MS9rZXlcIixuKSkuYm9keX1hc3luYyBsaXN0S2V5cyhlKXtjb25zdCB0PXt3YWxsZXRfaGFuZGxlX3Rva2VuOmV9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9rZXkvbGlzdFwiLHQpKS5ib2R5fWFzeW5jIHNpZ25UcmFuc2FjdGlvbihlLHQscil7Y29uc3Qgbj1vLmluc3RhbnRpYXRlVHhuSWZOZWVkZWQociksaT17d2FsbGV0X2hhbmRsZV90b2tlbjplLHdhbGxldF9wYXNzd29yZDp0LHRyYW5zYWN0aW9uOnMuZnJvbShuLnRvQnl0ZSgpKS50b1N0cmluZyhcImJhc2U2NFwiKX0sYT1hd2FpdCB0aGlzLmMucG9zdChcIi92MS90cmFuc2FjdGlvbi9zaWduXCIsaSk7cmV0dXJuIDIwMD09PWEuc3RhdHVzP3MuZnJvbShhLmJvZHkuc2lnbmVkX3RyYW5zYWN0aW9uLFwiYmFzZTY0XCIpOmEuYm9keX1hc3luYyBzaWduVHJhbnNhY3Rpb25XaXRoU3BlY2lmaWNQdWJsaWNLZXkoZSx0LHIsbil7Y29uc3QgaT1vLmluc3RhbnRpYXRlVHhuSWZOZWVkZWQociksYT17d2FsbGV0X2hhbmRsZV90b2tlbjplLHdhbGxldF9wYXNzd29yZDp0LHRyYW5zYWN0aW9uOnMuZnJvbShpLnRvQnl0ZSgpKS50b1N0cmluZyhcImJhc2U2NFwiKSxwdWJsaWNfa2V5OnMuZnJvbShuKS50b1N0cmluZyhcImJhc2U2NFwiKX0sYz1hd2FpdCB0aGlzLmMucG9zdChcIi92MS90cmFuc2FjdGlvbi9zaWduXCIsYSk7cmV0dXJuIDIwMD09PWMuc3RhdHVzP3MuZnJvbShjLmJvZHkuc2lnbmVkX3RyYW5zYWN0aW9uLFwiYmFzZTY0XCIpOmMuYm9keX1hc3luYyBsaXN0TXVsdGlzaWcoZSl7Y29uc3QgdD17d2FsbGV0X2hhbmRsZV90b2tlbjplfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbXVsdGlzaWcvbGlzdFwiLHQpKS5ib2R5fWFzeW5jIGltcG9ydE11bHRpc2lnKGUsdCxyLG4pe2NvbnN0IG89e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxtdWx0aXNpZ192ZXJzaW9uOnQsdGhyZXNob2xkOnIscGtzOm59O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9tdWx0aXNpZy9pbXBvcnRcIixvKSkuYm9keX1hc3luYyBleHBvcnRNdWx0aXNpZyhlLHQpe2NvbnN0IHI9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxhZGRyZXNzOnR9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9tdWx0aXNpZy9leHBvcnRcIixyKSkuYm9keX1hc3luYyBzaWduTXVsdGlzaWdUcmFuc2FjdGlvbihlLHQscixuLGkpe2NvbnN0IGE9by5pbnN0YW50aWF0ZVR4bklmTmVlZGVkKHIpLGM9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSx0cmFuc2FjdGlvbjpzLmZyb20oYS50b0J5dGUoKSkudG9TdHJpbmcoXCJiYXNlNjRcIikscHVibGljX2tleTpzLmZyb20obikudG9TdHJpbmcoXCJiYXNlNjRcIikscGFydGlhbF9tdWx0aXNpZzppLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbXVsdGlzaWcvc2lnblwiLGMpKS5ib2R5fWFzeW5jIGRlbGV0ZU11bHRpc2lnKGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsYWRkcmVzczpyLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLmRlbGV0ZShcIi92MS9tdWx0aXNpZ1wiLG4pKS5ib2R5fX19LDE2NjM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5rfSk7dmFyIG49cigzNDgwKSxvPXIoODY4MCk7Y2xhc3MgcyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH1gfWV4Y2x1ZGUoZSl7cmV0dXJuIHRoaXMucXVlcnkuZXhjbHVkZT1lLHRoaXN9fWNsYXNzIGkgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFzc2V0SUQ9bix0aGlzLmFjY291bnQ9cix0aGlzLmFzc2V0SUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXNzZXRzLyR7dGhpcy5hc3NldElEfWB9fWNsYXNzIGEgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFwcGxpY2F0aW9uSUQ9bix0aGlzLmFjY291bnQ9cix0aGlzLmFwcGxpY2F0aW9uSUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXBwbGljYXRpb25zLyR7dGhpcy5hcHBsaWNhdGlvbklEfWB9fXZhciBjPXIoMzAzMyk7Y2xhc3MgdSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe2lmKHN1cGVyKGUpLCFOdW1iZXIuaXNJbnRlZ2VyKHQpKXRocm93IEVycm9yKFwicm91bmROdW1iZXIgc2hvdWxkIGJlIGFuIGludGVnZXJcIik7dGhpcy5yb3VuZD10LHRoaXMucXVlcnk9e2Zvcm1hdDpcIm1zZ3BhY2tcIn19cGF0aCgpe3JldHVybmAvdjIvYmxvY2tzLyR7dGhpcy5yb3VuZH1gfXByZXBhcmUoZSl7aWYoZSYmZS5ieXRlTGVuZ3RoPjApcmV0dXJuIGMuZGVjb2RlKGUpfX12YXIgbD1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBoKGU9e30pe2xldCB0PWU7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmV2ZXJ5KChlPT5cImNvbnRlbnQtdHlwZVwiIT09ZS50b0xvd2VyQ2FzZSgpKSkmJih0PXsuLi5lfSx0W1wiQ29udGVudC1UeXBlXCJdPVwidGV4dC9wbGFpblwiKSx0fWNsYXNzIHAgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlKSx0aGlzLnNvdXJjZT10LHRoaXMuc291cmNlPXR9cGF0aCgpe3JldHVyblwiL3YyL3RlYWwvY29tcGlsZVwifWFzeW5jIGRvKGU9e30pe2NvbnN0IHQ9aChlKTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QodGhpcy5wYXRoKCksbC5mcm9tKHRoaXMuc291cmNlKSx0KSkuYm9keX19dmFyIGY9cigyNDg2KS5CdWZmZXI7Y2xhc3MgZCBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpLHRoaXMuYmxvYj1jLmVuY29kZSh0LmdldF9vYmpfZm9yX2VuY29kaW5nKCEwKSl9cGF0aCgpe3JldHVyblwiL3YyL3RlYWwvZHJ5cnVuXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1oKGUpO3JldHVybihhd2FpdCB0aGlzLmMucG9zdCh0aGlzLnBhdGgoKSxmLmZyb20odGhpcy5ibG9iKSx0KSkuYm9keX19Y2xhc3MgZyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2Fzc2V0cy8ke3RoaXMuaW5kZXh9YH19Y2xhc3MgeSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FwcGxpY2F0aW9ucy8ke3RoaXMuaW5kZXh9YH19Y2xhc3MgbSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvaGVhbHRoXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1hd2FpdCB0aGlzLmMuZ2V0KHRoaXMucGF0aCgpLHt9LGUpO2lmKCF0Lm9rKXRocm93IG5ldyBFcnJvcihgSGVhbHRoIHJlc3BvbnNlOiAke3Quc3RhdHVzfWApO3JldHVybnt9fX1jbGFzcyBiIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSksdGhpcy50eGlkPXQsdGhpcy50eGlkPXQsdGhpcy5xdWVyeS5mb3JtYXQ9XCJtc2dwYWNrXCJ9cHJlcGFyZShlKXtpZihlJiZlLmJ5dGVMZW5ndGg+MClyZXR1cm4gYy5kZWNvZGUoZSl9cGF0aCgpe3JldHVybmAvdjIvdHJhbnNhY3Rpb25zL3BlbmRpbmcvJHt0aGlzLnR4aWR9YH1tYXgoZSl7cmV0dXJuIHRoaXMucXVlcnkubWF4PWUsdGhpc319Y2xhc3MgQSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLnF1ZXJ5LmZvcm1hdD1cIm1zZ3BhY2tcIn1wYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zL3BlbmRpbmdcIn1wcmVwYXJlKGUpe2lmKGUmJmUuYnl0ZUxlbmd0aD4wKXJldHVybiBjLmRlY29kZShlKX1tYXgoZSl7cmV0dXJuIHRoaXMucXVlcnkubWF4PWUsdGhpc319Y2xhc3MgdyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpLHRoaXMuYWRkcmVzcz10LHRoaXMuYWRkcmVzcz10LHRoaXMucXVlcnkuZm9ybWF0PVwibXNncGFja1wifXByZXBhcmUoZSl7aWYoZSYmZS5ieXRlTGVuZ3RoPjApcmV0dXJuIGMuZGVjb2RlKGUpfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hZGRyZXNzfS90cmFuc2FjdGlvbnMvcGVuZGluZ2B9bWF4KGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm1heD1lLHRoaXN9fXZhciB2PXIoNTE4MCk7Y2xhc3MgUyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvc3RhdHVzXCJ9fWNsYXNzIHggZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe2lmKHN1cGVyKGUsdCksdGhpcy5yb3VuZD1yLCFOdW1iZXIuaXNJbnRlZ2VyKHIpKXRocm93IEVycm9yKFwicm91bmQgc2hvdWxkIGJlIGFuIGludGVnZXJcIik7dGhpcy5yb3VuZD1yfXBhdGgoKXtyZXR1cm5gL3YyL3N0YXR1cy93YWl0LWZvci1ibG9jay1hZnRlci8ke3RoaXMucm91bmR9YH19Y2xhc3MgRSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zL3BhcmFtc1wifXByZXBhcmUoZSl7cmV0dXJue2ZsYXRGZWU6ITEsZmVlOmUuZmVlLGZpcnN0Um91bmQ6ZVtcImxhc3Qtcm91bmRcIl0sbGFzdFJvdW5kOmVbXCJsYXN0LXJvdW5kXCJdKzFlMyxnZW5lc2lzSUQ6ZVtcImdlbmVzaXMtaWRcIl0sZ2VuZXNpc0hhc2g6ZVtcImdlbmVzaXMtaGFzaFwiXX19fWNsYXNzIFQgZXh0ZW5kcyBvLlp7cGF0aCgpe3JldHVyblwiL3YyL2xlZGdlci9zdXBwbHlcIn19Y2xhc3MgXyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdmVyc2lvbnNcIn19Y2xhc3MgQiBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvZ2VuZXNpc1wifX1jbGFzcyBVIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyLG4pe3N1cGVyKGUsdCksdGhpcy5yb3VuZD1yLHRoaXMudHhJRD1uLHRoaXMucm91bmQ9cix0aGlzLnR4SUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9ibG9ja3MvJHt0aGlzLnJvdW5kfS90cmFuc2FjdGlvbnMvJHt0aGlzLnR4SUR9L3Byb29mYH19Y2xhc3MgayBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQ9XCJodHRwOi8vcjIuYWxnb3JhbmQubmV0d29ya1wiLHI9NDE4MCxuPXt9KXtzdXBlcihcIlgtQWxnby1BUEktVG9rZW5cIixlLHQscixuKX1oZWFsdGhDaGVjaygpe3JldHVybiBuZXcgbSh0aGlzLmMpfXZlcnNpb25zQ2hlY2soKXtyZXR1cm4gbmV3IF8odGhpcy5jKX1zZW5kUmF3VHJhbnNhY3Rpb24oZSl7cmV0dXJuIG5ldyB2LmRlZmF1bHQodGhpcy5jLGUpfWFjY291bnRJbmZvcm1hdGlvbihlKXtyZXR1cm4gbmV3IHModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9YWNjb3VudEFzc2V0SW5mb3JtYXRpb24oZSx0KXtyZXR1cm4gbmV3IGkodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSx0KX1hY2NvdW50QXBwbGljYXRpb25JbmZvcm1hdGlvbihlLHQpe3JldHVybiBuZXcgYSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlLHQpfWJsb2NrKGUpe3JldHVybiBuZXcgdSh0aGlzLmMsZSl9cGVuZGluZ1RyYW5zYWN0aW9uSW5mb3JtYXRpb24oZSl7cmV0dXJuIG5ldyBiKHRoaXMuYyxlKX1wZW5kaW5nVHJhbnNhY3Rpb25zSW5mb3JtYXRpb24oKXtyZXR1cm4gbmV3IEEodGhpcy5jKX1wZW5kaW5nVHJhbnNhY3Rpb25CeUFkZHJlc3MoZSl7cmV0dXJuIG5ldyB3KHRoaXMuYyxlKX1zdGF0dXMoKXtyZXR1cm4gbmV3IFModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfXN0YXR1c0FmdGVyQmxvY2soZSl7cmV0dXJuIG5ldyB4KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWdldFRyYW5zYWN0aW9uUGFyYW1zKCl7cmV0dXJuIG5ldyBFKHRoaXMuYyl9c3VwcGx5KCl7cmV0dXJuIG5ldyBUKHRoaXMuYyx0aGlzLmludERlY29kaW5nKX1jb21waWxlKGUpe3JldHVybiBuZXcgcCh0aGlzLmMsZSl9ZHJ5cnVuKGUpe3JldHVybiBuZXcgZCh0aGlzLmMsZSl9Z2V0QXNzZXRCeUlEKGUpe3JldHVybiBuZXcgZyh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1nZXRBcHBsaWNhdGlvbkJ5SUQoZSl7cmV0dXJuIG5ldyB5KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWdlbmVzaXMoKXtyZXR1cm4gbmV3IEIodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfWdldFByb29mKGUsdCl7cmV0dXJuIG5ldyBVKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUsdCl9fX0sMjI3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse0FjY291bnQ6KCk9PmEsQWNjb3VudEFwcGxpY2F0aW9uUmVzcG9uc2U6KCk9PmMsQWNjb3VudEFzc2V0UmVzcG9uc2U6KCk9PnUsQWNjb3VudFBhcnRpY2lwYXRpb246KCk9PmwsQWNjb3VudFN0YXRlRGVsdGE6KCk9PmgsQXBwbGljYXRpb246KCk9PnAsQXBwbGljYXRpb25Mb2NhbFN0YXRlOigpPT5mLEFwcGxpY2F0aW9uUGFyYW1zOigpPT5kLEFwcGxpY2F0aW9uU3RhdGVTY2hlbWE6KCk9PmcsQXNzZXQ6KCk9PnksQXNzZXRIb2xkaW5nOigpPT5tLEFzc2V0UGFyYW1zOigpPT5iLEJsb2NrUmVzcG9uc2U6KCk9PkEsQnVpbGRWZXJzaW9uOigpPT53LENhdGNocG9pbnRBYm9ydFJlc3BvbnNlOigpPT52LENhdGNocG9pbnRTdGFydFJlc3BvbnNlOigpPT5TLENvbXBpbGVSZXNwb25zZTooKT0+eCxEaXNhc3NlbWJsZVJlc3BvbnNlOigpPT5FLERyeXJ1blJlcXVlc3Q6KCk9PlQsRHJ5cnVuUmVzcG9uc2U6KCk9Pl8sRHJ5cnVuU291cmNlOigpPT5CLERyeXJ1blN0YXRlOigpPT5VLERyeXJ1blR4blJlc3VsdDooKT0+ayxFcnJvclJlc3BvbnNlOigpPT5JLEV2YWxEZWx0YTooKT0+QyxFdmFsRGVsdGFLZXlWYWx1ZTooKT0+UixOb2RlU3RhdHVzUmVzcG9uc2U6KCk9Pk8sUGVuZGluZ1RyYW5zYWN0aW9uUmVzcG9uc2U6KCk9PkQsUGVuZGluZ1RyYW5zYWN0aW9uc1Jlc3BvbnNlOigpPT5OLFBvc3RUcmFuc2FjdGlvbnNSZXNwb25zZTooKT0+UCxQcm9vZlJlc3BvbnNlOigpPT5MLFN1cHBseVJlc3BvbnNlOigpPT5GLFRlYWxLZXlWYWx1ZTooKT0+eixUZWFsVmFsdWU6KCk9PmosVHJhbnNhY3Rpb25QYXJhbWV0ZXJzUmVzcG9uc2U6KCk9Pk0sVmVyc2lvbjooKT0+SH0pO3ZhciBuPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIG8oZSx0KXtsZXQgcjtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyPXQ/ZTpuLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIik7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmdldF9vYmpfZm9yX2VuY29kaW5nKXI9ZS5nZXRfb2JqX2Zvcl9lbmNvZGluZyh0KTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpe3I9W107Zm9yKGNvbnN0IG4gb2YgZSlyLnB1c2gobyhuLHQpKX1lbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBlKXtjb25zdCBuPXt9O2Zvcihjb25zdCByIG9mIE9iamVjdC5rZXlzKGUpKW5bcl09byhlW3JdLHQpO3I9bn1lbHNle2lmKCFmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZXx8bnVsbD09ZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGV9KGUpKXRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgdmFsdWU6ICR7U3RyaW5nKGUpfWApO3I9ZX1yZXR1cm4gcn1jbGFzcyBze2dldF9vYmpfZm9yX2VuY29kaW5nKGU9ITEpe2NvbnN0IHQ9e307Zm9yKGNvbnN0IHIgb2YgT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVfbWFwKSl7Y29uc3Qgbj10aGlzLmF0dHJpYnV0ZV9tYXBbcl0scz10aGlzW3JdO3ZvaWQgMCE9PXMmJih0W25dPW51bGw9PT1zP251bGw6byhzLGUpKX1yZXR1cm4gdH19dmFyIGk9cigyNDg2KS5CdWZmZXI7Y2xhc3MgYSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2FkZHJlc3M6ZSxhbW91bnQ6dCxhbW91bnRXaXRob3V0UGVuZGluZ1Jld2FyZHM6cixtaW5CYWxhbmNlOm4scGVuZGluZ1Jld2FyZHM6byxyZXdhcmRzOnMscm91bmQ6aSxzdGF0dXM6YSx0b3RhbEFwcHNPcHRlZEluOmMsdG90YWxBc3NldHNPcHRlZEluOnUsdG90YWxDcmVhdGVkQXBwczpsLHRvdGFsQ3JlYXRlZEFzc2V0czpoLGFwcHNMb2NhbFN0YXRlOnAsYXBwc1RvdGFsRXh0cmFQYWdlczpmLGFwcHNUb3RhbFNjaGVtYTpkLGFzc2V0czpnLGF1dGhBZGRyOnksY3JlYXRlZEFwcHM6bSxjcmVhdGVkQXNzZXRzOmIscGFydGljaXBhdGlvbjpBLHJld2FyZEJhc2U6dyxzaWdUeXBlOnZ9KXtzdXBlcigpLHRoaXMuYWRkcmVzcz1lLHRoaXMuYW1vdW50PXQsdGhpcy5hbW91bnRXaXRob3V0UGVuZGluZ1Jld2FyZHM9cix0aGlzLm1pbkJhbGFuY2U9bix0aGlzLnBlbmRpbmdSZXdhcmRzPW8sdGhpcy5yZXdhcmRzPXMsdGhpcy5yb3VuZD1pLHRoaXMuc3RhdHVzPWEsdGhpcy50b3RhbEFwcHNPcHRlZEluPWMsdGhpcy50b3RhbEFzc2V0c09wdGVkSW49dSx0aGlzLnRvdGFsQ3JlYXRlZEFwcHM9bCx0aGlzLnRvdGFsQ3JlYXRlZEFzc2V0cz1oLHRoaXMuYXBwc0xvY2FsU3RhdGU9cCx0aGlzLmFwcHNUb3RhbEV4dHJhUGFnZXM9Zix0aGlzLmFwcHNUb3RhbFNjaGVtYT1kLHRoaXMuYXNzZXRzPWcsdGhpcy5hdXRoQWRkcj15LHRoaXMuY3JlYXRlZEFwcHM9bSx0aGlzLmNyZWF0ZWRBc3NldHM9Yix0aGlzLnBhcnRpY2lwYXRpb249QSx0aGlzLnJld2FyZEJhc2U9dyx0aGlzLnNpZ1R5cGU9dix0aGlzLmF0dHJpYnV0ZV9tYXA9e2FkZHJlc3M6XCJhZGRyZXNzXCIsYW1vdW50OlwiYW1vdW50XCIsYW1vdW50V2l0aG91dFBlbmRpbmdSZXdhcmRzOlwiYW1vdW50LXdpdGhvdXQtcGVuZGluZy1yZXdhcmRzXCIsbWluQmFsYW5jZTpcIm1pbi1iYWxhbmNlXCIscGVuZGluZ1Jld2FyZHM6XCJwZW5kaW5nLXJld2FyZHNcIixyZXdhcmRzOlwicmV3YXJkc1wiLHJvdW5kOlwicm91bmRcIixzdGF0dXM6XCJzdGF0dXNcIix0b3RhbEFwcHNPcHRlZEluOlwidG90YWwtYXBwcy1vcHRlZC1pblwiLHRvdGFsQXNzZXRzT3B0ZWRJbjpcInRvdGFsLWFzc2V0cy1vcHRlZC1pblwiLHRvdGFsQ3JlYXRlZEFwcHM6XCJ0b3RhbC1jcmVhdGVkLWFwcHNcIix0b3RhbENyZWF0ZWRBc3NldHM6XCJ0b3RhbC1jcmVhdGVkLWFzc2V0c1wiLGFwcHNMb2NhbFN0YXRlOlwiYXBwcy1sb2NhbC1zdGF0ZVwiLGFwcHNUb3RhbEV4dHJhUGFnZXM6XCJhcHBzLXRvdGFsLWV4dHJhLXBhZ2VzXCIsYXBwc1RvdGFsU2NoZW1hOlwiYXBwcy10b3RhbC1zY2hlbWFcIixhc3NldHM6XCJhc3NldHNcIixhdXRoQWRkcjpcImF1dGgtYWRkclwiLGNyZWF0ZWRBcHBzOlwiY3JlYXRlZC1hcHBzXCIsY3JlYXRlZEFzc2V0czpcImNyZWF0ZWQtYXNzZXRzXCIscGFydGljaXBhdGlvbjpcInBhcnRpY2lwYXRpb25cIixyZXdhcmRCYXNlOlwicmV3YXJkLWJhc2VcIixzaWdUeXBlOlwic2lnLXR5cGVcIn19fWNsYXNzIGMgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcigpLHRoaXMucm91bmQ9ZSx0aGlzLmFwcExvY2FsU3RhdGU9dCx0aGlzLmNyZWF0ZWRBcHA9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e3JvdW5kOlwicm91bmRcIixhcHBMb2NhbFN0YXRlOlwiYXBwLWxvY2FsLXN0YXRlXCIsY3JlYXRlZEFwcDpcImNyZWF0ZWQtYXBwXCJ9fX1jbGFzcyB1IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLnJvdW5kPWUsdGhpcy5hc3NldEhvbGRpbmc9dCx0aGlzLmNyZWF0ZWRBc3NldD1yLHRoaXMuYXR0cmlidXRlX21hcD17cm91bmQ6XCJyb3VuZFwiLGFzc2V0SG9sZGluZzpcImFzc2V0LWhvbGRpbmdcIixjcmVhdGVkQXNzZXQ6XCJjcmVhdGVkLWFzc2V0XCJ9fX1jbGFzcyBsIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7c2VsZWN0aW9uUGFydGljaXBhdGlvbktleTplLHZvdGVGaXJzdFZhbGlkOnQsdm90ZUtleURpbHV0aW9uOnIsdm90ZUxhc3RWYWxpZDpuLHZvdGVQYXJ0aWNpcGF0aW9uS2V5Om8sc3RhdGVQcm9vZktleTpzfSl7c3VwZXIoKSx0aGlzLnNlbGVjdGlvblBhcnRpY2lwYXRpb25LZXk9XCJzdHJpbmdcIj09dHlwZW9mIGU/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKGUsXCJiYXNlNjRcIikpOmUsdGhpcy52b3RlRmlyc3RWYWxpZD10LHRoaXMudm90ZUtleURpbHV0aW9uPXIsdGhpcy52b3RlTGFzdFZhbGlkPW4sdGhpcy52b3RlUGFydGljaXBhdGlvbktleT1cInN0cmluZ1wiPT10eXBlb2Ygbz9uZXcgVWludDhBcnJheShpLmZyb20obyxcImJhc2U2NFwiKSk6byx0aGlzLnN0YXRlUHJvb2ZLZXk9XCJzdHJpbmdcIj09dHlwZW9mIHM/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHMsXCJiYXNlNjRcIikpOnMsdGhpcy5hdHRyaWJ1dGVfbWFwPXtzZWxlY3Rpb25QYXJ0aWNpcGF0aW9uS2V5Olwic2VsZWN0aW9uLXBhcnRpY2lwYXRpb24ta2V5XCIsdm90ZUZpcnN0VmFsaWQ6XCJ2b3RlLWZpcnN0LXZhbGlkXCIsdm90ZUtleURpbHV0aW9uOlwidm90ZS1rZXktZGlsdXRpb25cIix2b3RlTGFzdFZhbGlkOlwidm90ZS1sYXN0LXZhbGlkXCIsdm90ZVBhcnRpY2lwYXRpb25LZXk6XCJ2b3RlLXBhcnRpY2lwYXRpb24ta2V5XCIsc3RhdGVQcm9vZktleTpcInN0YXRlLXByb29mLWtleVwifX19Y2xhc3MgaCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMuYWRkcmVzcz1lLHRoaXMuZGVsdGE9dCx0aGlzLmF0dHJpYnV0ZV9tYXA9e2FkZHJlc3M6XCJhZGRyZXNzXCIsZGVsdGE6XCJkZWx0YVwifX19Y2xhc3MgcCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMuaWQ9ZSx0aGlzLnBhcmFtcz10LHRoaXMuYXR0cmlidXRlX21hcD17aWQ6XCJpZFwiLHBhcmFtczpcInBhcmFtc1wifX19Y2xhc3MgZiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKCksdGhpcy5pZD1lLHRoaXMuc2NoZW1hPXQsdGhpcy5rZXlWYWx1ZT1yLHRoaXMuYXR0cmlidXRlX21hcD17aWQ6XCJpZFwiLHNjaGVtYTpcInNjaGVtYVwiLGtleVZhbHVlOlwia2V5LXZhbHVlXCJ9fX1jbGFzcyBkIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7YXBwcm92YWxQcm9ncmFtOmUsY2xlYXJTdGF0ZVByb2dyYW06dCxjcmVhdG9yOnIsZXh0cmFQcm9ncmFtUGFnZXM6bixnbG9iYWxTdGF0ZTpvLGdsb2JhbFN0YXRlU2NoZW1hOnMsbG9jYWxTdGF0ZVNjaGVtYTphfSl7c3VwZXIoKSx0aGlzLmFwcHJvdmFsUHJvZ3JhbT1cInN0cmluZ1wiPT10eXBlb2YgZT9uZXcgVWludDhBcnJheShpLmZyb20oZSxcImJhc2U2NFwiKSk6ZSx0aGlzLmNsZWFyU3RhdGVQcm9ncmFtPVwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBVaW50OEFycmF5KGkuZnJvbSh0LFwiYmFzZTY0XCIpKTp0LHRoaXMuY3JlYXRvcj1yLHRoaXMuZXh0cmFQcm9ncmFtUGFnZXM9bix0aGlzLmdsb2JhbFN0YXRlPW8sdGhpcy5nbG9iYWxTdGF0ZVNjaGVtYT1zLHRoaXMubG9jYWxTdGF0ZVNjaGVtYT1hLHRoaXMuYXR0cmlidXRlX21hcD17YXBwcm92YWxQcm9ncmFtOlwiYXBwcm92YWwtcHJvZ3JhbVwiLGNsZWFyU3RhdGVQcm9ncmFtOlwiY2xlYXItc3RhdGUtcHJvZ3JhbVwiLGNyZWF0b3I6XCJjcmVhdG9yXCIsZXh0cmFQcm9ncmFtUGFnZXM6XCJleHRyYS1wcm9ncmFtLXBhZ2VzXCIsZ2xvYmFsU3RhdGU6XCJnbG9iYWwtc3RhdGVcIixnbG9iYWxTdGF0ZVNjaGVtYTpcImdsb2JhbC1zdGF0ZS1zY2hlbWFcIixsb2NhbFN0YXRlU2NoZW1hOlwibG9jYWwtc3RhdGUtc2NoZW1hXCJ9fX1jbGFzcyBnIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5udW1VaW50PWUsdGhpcy5udW1CeXRlU2xpY2U9dCx0aGlzLmF0dHJpYnV0ZV9tYXA9e251bVVpbnQ6XCJudW0tdWludFwiLG51bUJ5dGVTbGljZTpcIm51bS1ieXRlLXNsaWNlXCJ9fX1jbGFzcyB5IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5pbmRleD1lLHRoaXMucGFyYW1zPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtpbmRleDpcImluZGV4XCIscGFyYW1zOlwicGFyYW1zXCJ9fX1jbGFzcyBtIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmFtb3VudD1lLHRoaXMuYXNzZXRJZD10LHRoaXMuaXNGcm96ZW49cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2Ftb3VudDpcImFtb3VudFwiLGFzc2V0SWQ6XCJhc3NldC1pZFwiLGlzRnJvemVuOlwiaXMtZnJvemVuXCJ9fX1jbGFzcyBiIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7Y3JlYXRvcjplLGRlY2ltYWxzOnQsdG90YWw6cixjbGF3YmFjazpuLGRlZmF1bHRGcm96ZW46byxmcmVlemU6cyxtYW5hZ2VyOmEsbWV0YWRhdGFIYXNoOmMsbmFtZTp1LG5hbWVCNjQ6bCxyZXNlcnZlOmgsdW5pdE5hbWU6cCx1bml0TmFtZUI2NDpmLHVybDpkLHVybEI2NDpnfSl7c3VwZXIoKSx0aGlzLmNyZWF0b3I9ZSx0aGlzLmRlY2ltYWxzPXQsdGhpcy50b3RhbD1yLHRoaXMuY2xhd2JhY2s9bix0aGlzLmRlZmF1bHRGcm96ZW49byx0aGlzLmZyZWV6ZT1zLHRoaXMubWFuYWdlcj1hLHRoaXMubWV0YWRhdGFIYXNoPVwic3RyaW5nXCI9PXR5cGVvZiBjP25ldyBVaW50OEFycmF5KGkuZnJvbShjLFwiYmFzZTY0XCIpKTpjLHRoaXMubmFtZT11LHRoaXMubmFtZUI2ND1cInN0cmluZ1wiPT10eXBlb2YgbD9uZXcgVWludDhBcnJheShpLmZyb20obCxcImJhc2U2NFwiKSk6bCx0aGlzLnJlc2VydmU9aCx0aGlzLnVuaXROYW1lPXAsdGhpcy51bml0TmFtZUI2ND1cInN0cmluZ1wiPT10eXBlb2YgZj9uZXcgVWludDhBcnJheShpLmZyb20oZixcImJhc2U2NFwiKSk6Zix0aGlzLnVybD1kLHRoaXMudXJsQjY0PVwic3RyaW5nXCI9PXR5cGVvZiBnP25ldyBVaW50OEFycmF5KGkuZnJvbShnLFwiYmFzZTY0XCIpKTpnLHRoaXMuYXR0cmlidXRlX21hcD17Y3JlYXRvcjpcImNyZWF0b3JcIixkZWNpbWFsczpcImRlY2ltYWxzXCIsdG90YWw6XCJ0b3RhbFwiLGNsYXdiYWNrOlwiY2xhd2JhY2tcIixkZWZhdWx0RnJvemVuOlwiZGVmYXVsdC1mcm96ZW5cIixmcmVlemU6XCJmcmVlemVcIixtYW5hZ2VyOlwibWFuYWdlclwiLG1ldGFkYXRhSGFzaDpcIm1ldGFkYXRhLWhhc2hcIixuYW1lOlwibmFtZVwiLG5hbWVCNjQ6XCJuYW1lLWI2NFwiLHJlc2VydmU6XCJyZXNlcnZlXCIsdW5pdE5hbWU6XCJ1bml0LW5hbWVcIix1bml0TmFtZUI2NDpcInVuaXQtbmFtZS1iNjRcIix1cmw6XCJ1cmxcIix1cmxCNjQ6XCJ1cmwtYjY0XCJ9fX1jbGFzcyBBIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5ibG9jaz1lLHRoaXMuY2VydD10LHRoaXMuYXR0cmlidXRlX21hcD17YmxvY2s6XCJibG9ja1wiLGNlcnQ6XCJjZXJ0XCJ9fX1jbGFzcyB3IGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7YnJhbmNoOmUsYnVpbGROdW1iZXI6dCxjaGFubmVsOnIsY29tbWl0SGFzaDpuLG1ham9yOm8sbWlub3I6c30pe3N1cGVyKCksdGhpcy5icmFuY2g9ZSx0aGlzLmJ1aWxkTnVtYmVyPXQsdGhpcy5jaGFubmVsPXIsdGhpcy5jb21taXRIYXNoPW4sdGhpcy5tYWpvcj1vLHRoaXMubWlub3I9cyx0aGlzLmF0dHJpYnV0ZV9tYXA9e2JyYW5jaDpcImJyYW5jaFwiLGJ1aWxkTnVtYmVyOlwiYnVpbGRfbnVtYmVyXCIsY2hhbm5lbDpcImNoYW5uZWxcIixjb21taXRIYXNoOlwiY29tbWl0X2hhc2hcIixtYWpvcjpcIm1ham9yXCIsbWlub3I6XCJtaW5vclwifX19Y2xhc3MgdiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSx0aGlzLmNhdGNodXBNZXNzYWdlPWUsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwTWVzc2FnZTpcImNhdGNodXAtbWVzc2FnZVwifX19Y2xhc3MgUyBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSx0aGlzLmNhdGNodXBNZXNzYWdlPWUsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwTWVzc2FnZTpcImNhdGNodXAtbWVzc2FnZVwifX19Y2xhc3MgeCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKCksdGhpcy5oYXNoPWUsdGhpcy5yZXN1bHQ9dCx0aGlzLnNvdXJjZW1hcD1yLHRoaXMuYXR0cmlidXRlX21hcD17aGFzaDpcImhhc2hcIixyZXN1bHQ6XCJyZXN1bHRcIixzb3VyY2VtYXA6XCJzb3VyY2VtYXBcIn19fWNsYXNzIEUgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksdGhpcy5yZXN1bHQ9ZSx0aGlzLmF0dHJpYnV0ZV9tYXA9e3Jlc3VsdDpcInJlc3VsdFwifX19Y2xhc3MgVCBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2FjY291bnRzOmUsYXBwczp0LGxhdGVzdFRpbWVzdGFtcDpyLHByb3RvY29sVmVyc2lvbjpuLHJvdW5kOm8sc291cmNlczpzLHR4bnM6aX0pe3N1cGVyKCksdGhpcy5hY2NvdW50cz1lLHRoaXMuYXBwcz10LHRoaXMubGF0ZXN0VGltZXN0YW1wPXIsdGhpcy5wcm90b2NvbFZlcnNpb249bix0aGlzLnJvdW5kPW8sdGhpcy5zb3VyY2VzPXMsdGhpcy50eG5zPWksdGhpcy5hdHRyaWJ1dGVfbWFwPXthY2NvdW50czpcImFjY291bnRzXCIsYXBwczpcImFwcHNcIixsYXRlc3RUaW1lc3RhbXA6XCJsYXRlc3QtdGltZXN0YW1wXCIscHJvdG9jb2xWZXJzaW9uOlwicHJvdG9jb2wtdmVyc2lvblwiLHJvdW5kOlwicm91bmRcIixzb3VyY2VzOlwic291cmNlc1wiLHR4bnM6XCJ0eG5zXCJ9fX1jbGFzcyBfIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmVycm9yPWUsdGhpcy5wcm90b2NvbFZlcnNpb249dCx0aGlzLnR4bnM9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2Vycm9yOlwiZXJyb3JcIixwcm90b2NvbFZlcnNpb246XCJwcm90b2NvbC12ZXJzaW9uXCIsdHhuczpcInR4bnNcIn19fWNsYXNzIEIgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyLG4pe3N1cGVyKCksdGhpcy5maWVsZE5hbWU9ZSx0aGlzLnNvdXJjZT10LHRoaXMudHhuSW5kZXg9cix0aGlzLmFwcEluZGV4PW4sdGhpcy5hdHRyaWJ1dGVfbWFwPXtmaWVsZE5hbWU6XCJmaWVsZC1uYW1lXCIsc291cmNlOlwic291cmNlXCIsdHhuSW5kZXg6XCJ0eG4taW5kZXhcIixhcHBJbmRleDpcImFwcC1pbmRleFwifX19Y2xhc3MgVSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2xpbmU6ZSxwYzp0LHN0YWNrOnIsZXJyb3I6bixzY3JhdGNoOm99KXtzdXBlcigpLHRoaXMubGluZT1lLHRoaXMucGM9dCx0aGlzLnN0YWNrPXIsdGhpcy5lcnJvcj1uLHRoaXMuc2NyYXRjaD1vLHRoaXMuYXR0cmlidXRlX21hcD17bGluZTpcImxpbmVcIixwYzpcInBjXCIsc3RhY2s6XCJzdGFja1wiLGVycm9yOlwiZXJyb3JcIixzY3JhdGNoOlwic2NyYXRjaFwifX19Y2xhc3MgayBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2Rpc2Fzc2VtYmx5OmUsYXBwQ2FsbE1lc3NhZ2VzOnQsYXBwQ2FsbFRyYWNlOnIsYnVkZ2V0QWRkZWQ6bixidWRnZXRDb25zdW1lZDpvLGNvc3Q6cyxnbG9iYWxEZWx0YTppLGxvY2FsRGVsdGFzOmEsbG9naWNTaWdEaXNhc3NlbWJseTpjLGxvZ2ljU2lnTWVzc2FnZXM6dSxsb2dpY1NpZ1RyYWNlOmwsbG9nczpofSl7c3VwZXIoKSx0aGlzLmRpc2Fzc2VtYmx5PWUsdGhpcy5hcHBDYWxsTWVzc2FnZXM9dCx0aGlzLmFwcENhbGxUcmFjZT1yLHRoaXMuYnVkZ2V0QWRkZWQ9bix0aGlzLmJ1ZGdldENvbnN1bWVkPW8sdGhpcy5jb3N0PXMsdGhpcy5nbG9iYWxEZWx0YT1pLHRoaXMubG9jYWxEZWx0YXM9YSx0aGlzLmxvZ2ljU2lnRGlzYXNzZW1ibHk9Yyx0aGlzLmxvZ2ljU2lnTWVzc2FnZXM9dSx0aGlzLmxvZ2ljU2lnVHJhY2U9bCx0aGlzLmxvZ3M9aCx0aGlzLmF0dHJpYnV0ZV9tYXA9e2Rpc2Fzc2VtYmx5OlwiZGlzYXNzZW1ibHlcIixhcHBDYWxsTWVzc2FnZXM6XCJhcHAtY2FsbC1tZXNzYWdlc1wiLGFwcENhbGxUcmFjZTpcImFwcC1jYWxsLXRyYWNlXCIsYnVkZ2V0QWRkZWQ6XCJidWRnZXQtYWRkZWRcIixidWRnZXRDb25zdW1lZDpcImJ1ZGdldC1jb25zdW1lZFwiLGNvc3Q6XCJjb3N0XCIsZ2xvYmFsRGVsdGE6XCJnbG9iYWwtZGVsdGFcIixsb2NhbERlbHRhczpcImxvY2FsLWRlbHRhc1wiLGxvZ2ljU2lnRGlzYXNzZW1ibHk6XCJsb2dpYy1zaWctZGlzYXNzZW1ibHlcIixsb2dpY1NpZ01lc3NhZ2VzOlwibG9naWMtc2lnLW1lc3NhZ2VzXCIsbG9naWNTaWdUcmFjZTpcImxvZ2ljLXNpZy10cmFjZVwiLGxvZ3M6XCJsb2dzXCJ9fX1jbGFzcyBJIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5tZXNzYWdlPWUsdGhpcy5kYXRhPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXttZXNzYWdlOlwibWVzc2FnZVwiLGRhdGE6XCJkYXRhXCJ9fX1jbGFzcyBDIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmFjdGlvbj1lLHRoaXMuYnl0ZXM9dCx0aGlzLnVpbnQ9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2FjdGlvbjpcImFjdGlvblwiLGJ5dGVzOlwiYnl0ZXNcIix1aW50OlwidWludFwifX19Y2xhc3MgUiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMua2V5PWUsdGhpcy52YWx1ZT10LHRoaXMuYXR0cmlidXRlX21hcD17a2V5Olwia2V5XCIsdmFsdWU6XCJ2YWx1ZVwifX19Y2xhc3MgTyBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2NhdGNodXBUaW1lOmUsbGFzdFJvdW5kOnQsbGFzdFZlcnNpb246cixuZXh0VmVyc2lvbjpuLG5leHRWZXJzaW9uUm91bmQ6byxuZXh0VmVyc2lvblN1cHBvcnRlZDpzLHN0b3BwZWRBdFVuc3VwcG9ydGVkUm91bmQ6aSx0aW1lU2luY2VMYXN0Um91bmQ6YSxjYXRjaHBvaW50OmMsY2F0Y2hwb2ludEFjcXVpcmVkQmxvY2tzOnUsY2F0Y2hwb2ludFByb2Nlc3NlZEFjY291bnRzOmwsY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM6aCxjYXRjaHBvaW50VG90YWxCbG9ja3M6cCxjYXRjaHBvaW50VmVyaWZpZWRBY2NvdW50czpmLGxhc3RDYXRjaHBvaW50OmR9KXtzdXBlcigpLHRoaXMuY2F0Y2h1cFRpbWU9ZSx0aGlzLmxhc3RSb3VuZD10LHRoaXMubGFzdFZlcnNpb249cix0aGlzLm5leHRWZXJzaW9uPW4sdGhpcy5uZXh0VmVyc2lvblJvdW5kPW8sdGhpcy5uZXh0VmVyc2lvblN1cHBvcnRlZD1zLHRoaXMuc3RvcHBlZEF0VW5zdXBwb3J0ZWRSb3VuZD1pLHRoaXMudGltZVNpbmNlTGFzdFJvdW5kPWEsdGhpcy5jYXRjaHBvaW50PWMsdGhpcy5jYXRjaHBvaW50QWNxdWlyZWRCbG9ja3M9dSx0aGlzLmNhdGNocG9pbnRQcm9jZXNzZWRBY2NvdW50cz1sLHRoaXMuY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM9aCx0aGlzLmNhdGNocG9pbnRUb3RhbEJsb2Nrcz1wLHRoaXMuY2F0Y2hwb2ludFZlcmlmaWVkQWNjb3VudHM9Zix0aGlzLmxhc3RDYXRjaHBvaW50PWQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwVGltZTpcImNhdGNodXAtdGltZVwiLGxhc3RSb3VuZDpcImxhc3Qtcm91bmRcIixsYXN0VmVyc2lvbjpcImxhc3QtdmVyc2lvblwiLG5leHRWZXJzaW9uOlwibmV4dC12ZXJzaW9uXCIsbmV4dFZlcnNpb25Sb3VuZDpcIm5leHQtdmVyc2lvbi1yb3VuZFwiLG5leHRWZXJzaW9uU3VwcG9ydGVkOlwibmV4dC12ZXJzaW9uLXN1cHBvcnRlZFwiLHN0b3BwZWRBdFVuc3VwcG9ydGVkUm91bmQ6XCJzdG9wcGVkLWF0LXVuc3VwcG9ydGVkLXJvdW5kXCIsdGltZVNpbmNlTGFzdFJvdW5kOlwidGltZS1zaW5jZS1sYXN0LXJvdW5kXCIsY2F0Y2hwb2ludDpcImNhdGNocG9pbnRcIixjYXRjaHBvaW50QWNxdWlyZWRCbG9ja3M6XCJjYXRjaHBvaW50LWFjcXVpcmVkLWJsb2Nrc1wiLGNhdGNocG9pbnRQcm9jZXNzZWRBY2NvdW50czpcImNhdGNocG9pbnQtcHJvY2Vzc2VkLWFjY291bnRzXCIsY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM6XCJjYXRjaHBvaW50LXRvdGFsLWFjY291bnRzXCIsY2F0Y2hwb2ludFRvdGFsQmxvY2tzOlwiY2F0Y2hwb2ludC10b3RhbC1ibG9ja3NcIixjYXRjaHBvaW50VmVyaWZpZWRBY2NvdW50czpcImNhdGNocG9pbnQtdmVyaWZpZWQtYWNjb3VudHNcIixsYXN0Q2F0Y2hwb2ludDpcImxhc3QtY2F0Y2hwb2ludFwifX19Y2xhc3MgRCBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe3Bvb2xFcnJvcjplLHR4bjp0LGFwcGxpY2F0aW9uSW5kZXg6cixhc3NldENsb3NpbmdBbW91bnQ6bixhc3NldEluZGV4Om8sY2xvc2VSZXdhcmRzOnMsY2xvc2luZ0Ftb3VudDppLGNvbmZpcm1lZFJvdW5kOmEsZ2xvYmFsU3RhdGVEZWx0YTpjLGlubmVyVHhuczp1LGxvY2FsU3RhdGVEZWx0YTpsLGxvZ3M6aCxyZWNlaXZlclJld2FyZHM6cCxzZW5kZXJSZXdhcmRzOmZ9KXtzdXBlcigpLHRoaXMucG9vbEVycm9yPWUsdGhpcy50eG49dCx0aGlzLmFwcGxpY2F0aW9uSW5kZXg9cix0aGlzLmFzc2V0Q2xvc2luZ0Ftb3VudD1uLHRoaXMuYXNzZXRJbmRleD1vLHRoaXMuY2xvc2VSZXdhcmRzPXMsdGhpcy5jbG9zaW5nQW1vdW50PWksdGhpcy5jb25maXJtZWRSb3VuZD1hLHRoaXMuZ2xvYmFsU3RhdGVEZWx0YT1jLHRoaXMuaW5uZXJUeG5zPXUsdGhpcy5sb2NhbFN0YXRlRGVsdGE9bCx0aGlzLmxvZ3M9aCx0aGlzLnJlY2VpdmVyUmV3YXJkcz1wLHRoaXMuc2VuZGVyUmV3YXJkcz1mLHRoaXMuYXR0cmlidXRlX21hcD17cG9vbEVycm9yOlwicG9vbC1lcnJvclwiLHR4bjpcInR4blwiLGFwcGxpY2F0aW9uSW5kZXg6XCJhcHBsaWNhdGlvbi1pbmRleFwiLGFzc2V0Q2xvc2luZ0Ftb3VudDpcImFzc2V0LWNsb3NpbmctYW1vdW50XCIsYXNzZXRJbmRleDpcImFzc2V0LWluZGV4XCIsY2xvc2VSZXdhcmRzOlwiY2xvc2UtcmV3YXJkc1wiLGNsb3NpbmdBbW91bnQ6XCJjbG9zaW5nLWFtb3VudFwiLGNvbmZpcm1lZFJvdW5kOlwiY29uZmlybWVkLXJvdW5kXCIsZ2xvYmFsU3RhdGVEZWx0YTpcImdsb2JhbC1zdGF0ZS1kZWx0YVwiLGlubmVyVHhuczpcImlubmVyLXR4bnNcIixsb2NhbFN0YXRlRGVsdGE6XCJsb2NhbC1zdGF0ZS1kZWx0YVwiLGxvZ3M6XCJsb2dzXCIscmVjZWl2ZXJSZXdhcmRzOlwicmVjZWl2ZXItcmV3YXJkc1wiLHNlbmRlclJld2FyZHM6XCJzZW5kZXItcmV3YXJkc1wifX19Y2xhc3MgTiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMudG9wVHJhbnNhY3Rpb25zPWUsdGhpcy50b3RhbFRyYW5zYWN0aW9ucz10LHRoaXMuYXR0cmlidXRlX21hcD17dG9wVHJhbnNhY3Rpb25zOlwidG9wLXRyYW5zYWN0aW9uc1wiLHRvdGFsVHJhbnNhY3Rpb25zOlwidG90YWwtdHJhbnNhY3Rpb25zXCJ9fX1jbGFzcyBQIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMudHhpZD1lLHRoaXMuYXR0cmlidXRlX21hcD17dHhpZDpcInR4SWRcIn19fWNsYXNzIEwgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKHtpZHg6ZSxwcm9vZjp0LHN0aWJoYXNoOnIsdHJlZWRlcHRoOm4saGFzaHR5cGU6b30pe3N1cGVyKCksdGhpcy5pZHg9ZSx0aGlzLnByb29mPVwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBVaW50OEFycmF5KGkuZnJvbSh0LFwiYmFzZTY0XCIpKTp0LHRoaXMuc3RpYmhhc2g9XCJzdHJpbmdcIj09dHlwZW9mIHI/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHIsXCJiYXNlNjRcIikpOnIsdGhpcy50cmVlZGVwdGg9bix0aGlzLmhhc2h0eXBlPW8sdGhpcy5hdHRyaWJ1dGVfbWFwPXtpZHg6XCJpZHhcIixwcm9vZjpcInByb29mXCIsc3RpYmhhc2g6XCJzdGliaGFzaFwiLHRyZWVkZXB0aDpcInRyZWVkZXB0aFwiLGhhc2h0eXBlOlwiaGFzaHR5cGVcIn19fWNsYXNzIEYgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcigpLHRoaXMuY3VycmVudFJvdW5kPWUsdGhpcy5vbmxpbmVNb25leT10LHRoaXMudG90YWxNb25leT1yLHRoaXMuYXR0cmlidXRlX21hcD17Y3VycmVudFJvdW5kOlwiY3VycmVudF9yb3VuZFwiLG9ubGluZU1vbmV5Olwib25saW5lLW1vbmV5XCIsdG90YWxNb25leTpcInRvdGFsLW1vbmV5XCJ9fX1jbGFzcyB6IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5rZXk9ZSx0aGlzLnZhbHVlPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtrZXk6XCJrZXlcIix2YWx1ZTpcInZhbHVlXCJ9fX1jbGFzcyBqIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLnR5cGU9ZSx0aGlzLmJ5dGVzPXQsdGhpcy51aW50PXIsdGhpcy5hdHRyaWJ1dGVfbWFwPXt0eXBlOlwidHlwZVwiLGJ5dGVzOlwiYnl0ZXNcIix1aW50OlwidWludFwifX19Y2xhc3MgTSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2NvbnNlbnN1c1ZlcnNpb246ZSxmZWU6dCxnZW5lc2lzSGFzaDpyLGdlbmVzaXNJZDpuLGxhc3RSb3VuZDpvLG1pbkZlZTpzfSl7c3VwZXIoKSx0aGlzLmNvbnNlbnN1c1ZlcnNpb249ZSx0aGlzLmZlZT10LHRoaXMuZ2VuZXNpc0hhc2g9XCJzdHJpbmdcIj09dHlwZW9mIHI/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHIsXCJiYXNlNjRcIikpOnIsdGhpcy5nZW5lc2lzSWQ9bix0aGlzLmxhc3RSb3VuZD1vLHRoaXMubWluRmVlPXMsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjb25zZW5zdXNWZXJzaW9uOlwiY29uc2Vuc3VzLXZlcnNpb25cIixmZWU6XCJmZWVcIixnZW5lc2lzSGFzaDpcImdlbmVzaXMtaGFzaFwiLGdlbmVzaXNJZDpcImdlbmVzaXMtaWRcIixsYXN0Um91bmQ6XCJsYXN0LXJvdW5kXCIsbWluRmVlOlwibWluLWZlZVwifX19Y2xhc3MgSCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoKSx0aGlzLmJ1aWxkPWUsdGhpcy5nZW5lc2lzSGFzaEI2ND1cInN0cmluZ1wiPT10eXBlb2YgdD9uZXcgVWludDhBcnJheShpLmZyb20odCxcImJhc2U2NFwiKSk6dCx0aGlzLmdlbmVzaXNJZD1yLHRoaXMudmVyc2lvbnM9bix0aGlzLmF0dHJpYnV0ZV9tYXA9e2J1aWxkOlwiYnVpbGRcIixnZW5lc2lzSGFzaEI2NDpcImdlbmVzaXNfaGFzaF9iNjRcIixnZW5lc2lzSWQ6XCJnZW5lc2lzX2lkXCIsdmVyc2lvbnM6XCJ2ZXJzaW9uc1wifX19fSw1MTgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse3NldFNlbmRUcmFuc2FjdGlvbkhlYWRlcnM6KCk9PmksZGVmYXVsdDooKT0+Y30pO3ZhciBuPXIoODY4MCksbz1yKDQxMykscz1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBpKGU9e30pe2xldCB0PWU7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmV2ZXJ5KChlPT5cImNvbnRlbnQtdHlwZVwiIT09ZS50b0xvd2VyQ2FzZSgpKSkmJih0PXsuLi5lfSx0W1wiQ29udGVudC1UeXBlXCJdPVwiYXBwbGljYXRpb24veC1iaW5hcnlcIiksdH1mdW5jdGlvbiBhKGUpe3JldHVybiBlJiZ2b2lkIDAhPT1lLmJ5dGVMZW5ndGh9Y2xhc3MgYyBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpO2xldCByPXQ7aWYoQXJyYXkuaXNBcnJheSh0KSl7aWYoIXQuZXZlcnkoYSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFycmF5IGVsZW1lbnRzIG11c3QgYmUgYnl0ZSBhcnJheXNcIik7cj0oMCxvLmNvbmNhdEFycmF5cykoLi4udCl9ZWxzZSBpZighYShyKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBieXRlIGFycmF5XCIpO3RoaXMudHhuQnl0ZXNUb1Bvc3Q9cn1wYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1pKGUpO3JldHVybihhd2FpdCB0aGlzLmMucG9zdCh0aGlzLnBhdGgoKSxzLmZyb20odGhpcy50eG5CeXRlc1RvUG9zdCksdCkpLmJvZHl9fX0sOTU4MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse1o6KCk9PlR9KTt2YXIgbj1yKDM0ODApLG89cig4NjgwKTtjbGFzcyBzIGV4dGVuZHMgby5ae3BhdGgoKXtyZXR1cm5cIi9oZWFsdGhcIn19Y2xhc3MgaSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2Fzc2V0cy8ke3RoaXMuaW5kZXh9L2JhbGFuY2VzYH1saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9Y3VycmVuY3lHcmVhdGVyVGhhbihlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImN1cnJlbmN5LWdyZWF0ZXItdGhhblwiXT1lLHRoaXN9Y3VycmVuY3lMZXNzVGhhbihlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImN1cnJlbmN5LWxlc3MtdGhhblwiXT1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fXZhciBhPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIGMoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/ZTphLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIil9Y2xhc3MgdSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vdHJhbnNhY3Rpb25zYH1ub3RlUHJlZml4KGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibm90ZS1wcmVmaXhcIl09YyhlKSx0aGlzfXR4VHlwZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcInR4LXR5cGVcIl09ZSx0aGlzfXNpZ1R5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzaWctdHlwZVwiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bWluUm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtaW4tcm91bmRcIl09ZSx0aGlzfW1heFJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWF4LXJvdW5kXCJdPWUsdGhpc31hc3NldElEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXNzZXQtaWRcIl09ZSx0aGlzfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31iZWZvcmVUaW1lKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYmVmb3JlLXRpbWVcIl09ZSx0aGlzfWFmdGVyVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFmdGVyLXRpbWVcIl09ZSx0aGlzfWN1cnJlbmN5R3JlYXRlclRoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1ncmVhdGVyLXRoYW5cIl09ZSx0aGlzfWN1cnJlbmN5TGVzc1RoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1sZXNzLXRoYW5cIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31yZWtleVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wicmVrZXktdG9cIl09ZSx0aGlzfX1jbGFzcyBsIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuaW5kZXg9cix0aGlzLmluZGV4PXJ9cGF0aCgpe3JldHVybmAvdjIvYXNzZXRzLyR7dGhpcy5pbmRleH0vdHJhbnNhY3Rpb25zYH1ub3RlUHJlZml4KGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibm90ZS1wcmVmaXhcIl09YyhlKSx0aGlzfXR4VHlwZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcInR4LXR5cGVcIl09ZSx0aGlzfXNpZ1R5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzaWctdHlwZVwiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bWluUm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtaW4tcm91bmRcIl09ZSx0aGlzfW1heFJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWF4LXJvdW5kXCJdPWUsdGhpc31hc3NldElEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXNzZXQtaWRcIl09ZSx0aGlzfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31iZWZvcmVUaW1lKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYmVmb3JlLXRpbWVcIl09ZSx0aGlzfWFmdGVyVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFmdGVyLXRpbWVcIl09ZSx0aGlzfWN1cnJlbmN5R3JlYXRlclRoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1ncmVhdGVyLXRoYW5cIl09ZSx0aGlzfWN1cnJlbmN5TGVzc1RoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1sZXNzLXRoYW5cIl09ZSx0aGlzfWFkZHJlc3NSb2xlKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYWRkcmVzcy1yb2xlXCJdPWUsdGhpc31hZGRyZXNzKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmFkZHJlc3M9ZSx0aGlzfWV4Y2x1ZGVDbG9zZVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiZXhjbHVkZS1jbG9zZS10b1wiXT1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfXJla2V5VG8oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJyZWtleS10b1wiXT1lLHRoaXN9fWNsYXNzIGggZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5yb3VuZD1yLHRoaXMucm91bmQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9ibG9ja3MvJHt0aGlzLnJvdW5kfWB9fWNsYXNzIHAgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy50eElEPXIsdGhpcy50eElEPXJ9cGF0aCgpe3JldHVybmAvdjIvdHJhbnNhY3Rpb25zLyR7dGhpcy50eElEfWB9fWNsYXNzIGYgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5hY2NvdW50PXIsdGhpcy5hY2NvdW50PXJ9cGF0aCgpe3JldHVybmAvdjIvYWNjb3VudHMvJHt0aGlzLmFjY291bnR9YH1yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31leGNsdWRlKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmV4Y2x1ZGU9ZSx0aGlzfX1jbGFzcyBkIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuYWNjb3VudD1yLHRoaXMuYWNjb3VudD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hY2NvdW50fS9hc3NldHNgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9YXNzZXRJZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc319Y2xhc3MgZyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vY3JlYXRlZC1hc3NldHNgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc319Y2xhc3MgeSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXBwcy1sb2NhbC1zdGF0ZWB9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfXJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5LnJvdW5kPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfX1jbGFzcyBtIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuYWNjb3VudD1yLHRoaXMuYWNjb3VudD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hY2NvdW50fS9jcmVhdGVkLWFwcGxpY2F0aW9uc2B9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfXJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5LnJvdW5kPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfX1jbGFzcyBiIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuaW5kZXg9cix0aGlzLmluZGV4PXJ9cGF0aCgpe3JldHVybmAvdjIvYXNzZXRzLyR7dGhpcy5pbmRleH1gfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fWNsYXNzIEEgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5pbmRleD1yLHRoaXMuaW5kZXg9cn1wYXRoKCl7cmV0dXJuYC92Mi9hcHBsaWNhdGlvbnMvJHt0aGlzLmluZGV4fWB9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc319Y2xhc3MgdyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFwcElEPXIsdGhpcy5hcHBJRD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FwcGxpY2F0aW9ucy8ke3RoaXMuYXBwSUR9L2xvZ3NgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31taW5Sb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm1pbi1yb3VuZFwiXT1lLHRoaXN9bWF4Um91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtYXgtcm91bmRcIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31zZW5kZXIoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzZW5kZXItYWRkcmVzc1wiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc319Y2xhc3MgdiBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvYWNjb3VudHNcIn1jdXJyZW5jeUdyZWF0ZXJUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktZ3JlYXRlci10aGFuXCJdPWUsdGhpc31jdXJyZW5jeUxlc3NUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktbGVzcy10aGFuXCJdPWUsdGhpc31saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9cm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnkucm91bmQ9ZSx0aGlzfWF1dGhBZGRyKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXV0aC1hZGRyXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9ZXhjbHVkZShlKXtyZXR1cm4gdGhpcy5xdWVyeS5leGNsdWRlPWUsdGhpc319Y2xhc3MgUyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zXCJ9bm90ZVByZWZpeChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm5vdGUtcHJlZml4XCJdPWMoZSksdGhpc310eFR5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJ0eC10eXBlXCJdPWUsdGhpc31zaWdUeXBlKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wic2lnLXR5cGVcIl09ZSx0aGlzfXR4aWQoZSl7cmV0dXJuIHRoaXMucXVlcnkudHhpZD1lLHRoaXN9cm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnkucm91bmQ9ZSx0aGlzfW1pblJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWluLXJvdW5kXCJdPWUsdGhpc31tYXhSb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm1heC1yb3VuZFwiXT1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9YmVmb3JlVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImJlZm9yZS10aW1lXCJdPWUsdGhpc31hZnRlclRpbWUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhZnRlci10aW1lXCJdPWUsdGhpc31jdXJyZW5jeUdyZWF0ZXJUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktZ3JlYXRlci10aGFuXCJdPWUsdGhpc31jdXJyZW5jeUxlc3NUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktbGVzcy10aGFuXCJdPWUsdGhpc31hZGRyZXNzUm9sZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFkZHJlc3Mtcm9sZVwiXT1lLHRoaXN9YWRkcmVzcyhlKXtyZXR1cm4gdGhpcy5xdWVyeS5hZGRyZXNzPWUsdGhpc31leGNsdWRlQ2xvc2VUbyhlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImV4Y2x1ZGUtY2xvc2UtdG9cIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31yZWtleVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wicmVrZXktdG9cIl09ZSx0aGlzfWFwcGxpY2F0aW9uSUQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhcHBsaWNhdGlvbi1pZFwiXT1lLHRoaXN9fWNsYXNzIHggZXh0ZW5kcyBvLlp7cGF0aCgpe3JldHVyblwiL3YyL2Fzc2V0c1wifWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31jcmVhdG9yKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmNyZWF0b3I9ZSx0aGlzfW5hbWUoZSl7cmV0dXJuIHRoaXMucXVlcnkubmFtZT1lLHRoaXN9dW5pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS51bml0PWUsdGhpc31pbmRleChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc319Y2xhc3MgRSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvYXBwbGljYXRpb25zXCJ9aW5kZXgoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhcHBsaWNhdGlvbi1pZFwiXT1lLHRoaXN9Y3JlYXRvcihlKXtyZXR1cm4gdGhpcy5xdWVyeS5jcmVhdG9yPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fWNsYXNzIFQgZXh0ZW5kcyBuLlp7Y29uc3RydWN0b3IoZSx0PVwiaHR0cDovLzEyNy4wLjAuMVwiLHI9ODA4MCxuPXt9KXtzdXBlcihcIlgtSW5kZXhlci1BUEktVG9rZW5cIixlLHQscixuKX1tYWtlSGVhbHRoQ2hlY2soKXtyZXR1cm4gbmV3IHModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfWxvb2t1cEFzc2V0QmFsYW5jZXMoZSl7cmV0dXJuIG5ldyBpKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFzc2V0VHJhbnNhY3Rpb25zKGUpe3JldHVybiBuZXcgbCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBY2NvdW50VHJhbnNhY3Rpb25zKGUpe3JldHVybiBuZXcgdSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBCbG9jayhlKXtyZXR1cm4gbmV3IGgodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwVHJhbnNhY3Rpb25CeUlEKGUpe3JldHVybiBuZXcgcCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBY2NvdW50QnlJRChlKXtyZXR1cm4gbmV3IGYodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudEFzc2V0cyhlKXtyZXR1cm4gbmV3IGQodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudENyZWF0ZWRBc3NldHMoZSl7cmV0dXJuIG5ldyBnKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFjY291bnRBcHBMb2NhbFN0YXRlcyhlKXtyZXR1cm4gbmV3IHkodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudENyZWF0ZWRBcHBsaWNhdGlvbnMoZSl7cmV0dXJuIG5ldyBtKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFzc2V0QnlJRChlKXtyZXR1cm4gbmV3IGIodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQXBwbGljYXRpb25zKGUpe3JldHVybiBuZXcgQSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBcHBsaWNhdGlvbkxvZ3MoZSl7cmV0dXJuIG5ldyB3KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfXNlYXJjaEFjY291bnRzKCl7cmV0dXJuIG5ldyB2KHRoaXMuYyx0aGlzLmludERlY29kaW5nKX1zZWFyY2hGb3JUcmFuc2FjdGlvbnMoKXtyZXR1cm4gbmV3IFModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfXNlYXJjaEZvckFzc2V0cygpe3JldHVybiBuZXcgeCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyl9c2VhcmNoRm9yQXBwbGljYXRpb25zKCl7cmV0dXJuIG5ldyBFKHRoaXMuYyx0aGlzLmludERlY29kaW5nKX19fSw4NjgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7WjooKT0+b30pO3ZhciBuPXIoNzE5Nyk7Y2xhc3Mgb3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMuYz1lLHRoaXMucXVlcnk9e30sdGhpcy5pbnREZWNvZGluZz10fHxuLlouREVGQVVMVH1wcmVwYXJlKGUpe3JldHVybiBlfWFzeW5jIGRvKGU9e30pe2NvbnN0IHQ9e307XCJkZWZhdWx0XCIhPT10aGlzLmludERlY29kaW5nJiYodC5pbnREZWNvZGluZz10aGlzLmludERlY29kaW5nKTtjb25zdCByPWF3YWl0IHRoaXMuYy5nZXQodGhpcy5wYXRoKCksdGhpcy5xdWVyeSxlLHQpO3JldHVybiB0aGlzLnByZXBhcmUoci5ib2R5KX1zZXRJbnREZWNvZGluZyhlKXtpZihcImRlZmF1bHRcIiE9PWUmJlwic2FmZVwiIT09ZSYmXCJtaXhlZFwiIT09ZSYmXCJiaWdpbnRcIiE9PWUpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG1ldGhvZCBmb3IgaW50IGRlY29kaW5nOiAke2V9YCk7cmV0dXJuIHRoaXMuaW50RGVjb2Rpbmc9ZSx0aGlzfX19LDM0ODA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5zfSk7dmFyIG49cigxMTEzKSxvPXIoNzE5Nyk7Y2xhc3Mgc3tjb25zdHJ1Y3RvcihlLHQscixzLGk9e30pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0KXRoaXMuYz1uZXcgbi5kZWZhdWx0KHQpO2Vsc2V7bGV0IG87bz1cInN0cmluZ1wiPT10eXBlb2YgdD9mdW5jdGlvbihlPVwiXCIsdCl7Y29uc3Qgcj17fTtyZXR1cm4gclt0XT1lLHJ9KHQsZSk6dCx0aGlzLmM9bmV3IG4uZGVmYXVsdChvLHIscyxpKX10aGlzLmludERlY29kaW5nPW8uWi5ERUZBVUxUfXNldEludEVuY29kaW5nKGUpe3RoaXMuaW50RGVjb2Rpbmc9ZX1nZXRJbnRFbmNvZGluZygpe3JldHVybiB0aGlzLmludERlY29kaW5nfX19LDM0NTg6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtiOigpPT5wLEE6KCk9PmR9KTt2YXIgbj1yKDc2NzcpLG89cig5NDE3KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig1MDYyKSxjPXIoODM0KSx1PXIoMTYyNCksbD1yKDI0ODYpLkJ1ZmZlcjtjb25zdCBoPWwuZnJvbShbMjEsMzEsMTI0LDExN10pO3ZhciBwO2Z1bmN0aW9uIGYoZSx0LHIpe2lmKG51bGwhPXImJmU9PT1yKXJldHVybiAwO2NvbnN0IG49bnVsbD09cj8wOjE7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKyspaWYoZT09PXRbcl0pcmV0dXJuIHIrbjtyZXR1cm4gdC5wdXNoKGUpLHQubGVuZ3RoLTErbn0hZnVuY3Rpb24oZSl7ZVtlLkJVSUxESU5HPTBdPVwiQlVJTERJTkdcIixlW2UuQlVJTFQ9MV09XCJCVUlMVFwiLGVbZS5TSUdORUQ9Ml09XCJTSUdORURcIixlW2UuU1VCTUlUVEVEPTNdPVwiU1VCTUlUVEVEXCIsZVtlLkNPTU1JVFRFRD00XT1cIkNPTU1JVFRFRFwifShwfHwocD17fSkpO2NsYXNzIGR7Y29uc3RydWN0b3IoKXt0aGlzLnN0YXR1cz1wLkJVSUxESU5HLHRoaXMudHJhbnNhY3Rpb25zPVtdLHRoaXMubWV0aG9kQ2FsbHM9bmV3IE1hcCx0aGlzLnNpZ25lZFR4bnM9W10sdGhpcy50eElEcz1bXX1nZXRTdGF0dXMoKXtyZXR1cm4gdGhpcy5zdGF0dXN9Y291bnQoKXtyZXR1cm4gdGhpcy50cmFuc2FjdGlvbnMubGVuZ3RofWNsb25lKCl7Y29uc3QgZT1uZXcgZDtyZXR1cm4gZS50cmFuc2FjdGlvbnM9dGhpcy50cmFuc2FjdGlvbnMubWFwKCgoe3R4bjplLHNpZ25lcjp0fSk9Pih7dHhuOm8uVHJhbnNhY3Rpb24uZnJvbV9vYmpfZm9yX2VuY29kaW5nKHsuLi5lLmdldF9vYmpfZm9yX2VuY29kaW5nKCksZ3JwOnZvaWQgMH0pLHNpZ25lcjp0fSkpKSxlLm1ldGhvZENhbGxzPW5ldyBNYXAodGhpcy5tZXRob2RDYWxscyksZX1hZGRUcmFuc2FjdGlvbihlKXtpZih0aGlzLnN0YXR1cyE9PXAuQlVJTERJTkcpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGFkZCB0cmFuc2FjdGlvbnMgd2hlbiBjb21wb3NlciBzdGF0dXMgaXMgbm90IEJVSUxESU5HXCIpO2lmKHRoaXMudHJhbnNhY3Rpb25zLmxlbmd0aD09PWQuTUFYX0dST1VQX1NJWkUpdGhyb3cgbmV3IEVycm9yKGBBZGRpbmcgYW4gYWRkaXRpb25hbCB0cmFuc2FjdGlvbiBleGNlZWRzIHRoZSBtYXhpbXVtIGF0b21pYyBncm91cCBzaXplIG9mICR7ZC5NQVhfR1JPVVBfU0laRX1gKTtpZihlLnR4bi5ncm91cCYmZS50eG4uZ3JvdXAuc29tZSgoZT0+MCE9PWUpKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIGEgdHJhbnNhY3Rpb24gd2l0aCBub256ZXJvIGdyb3VwIElEXCIpO3RoaXMudHJhbnNhY3Rpb25zLnB1c2goZSl9YWRkTWV0aG9kQ2FsbCh7YXBwSUQ6ZSxtZXRob2Q6dCxtZXRob2RBcmdzOnIsc2VuZGVyOm8sc3VnZ2VzdGVkUGFyYW1zOmksb25Db21wbGV0ZTphLGFwcHJvdmFsUHJvZ3JhbTpsLGNsZWFyUHJvZ3JhbTpoLG51bUdsb2JhbEludHM6ZyxudW1HbG9iYWxCeXRlU2xpY2VzOnksbnVtTG9jYWxJbnRzOm0sbnVtTG9jYWxCeXRlU2xpY2VzOmIsZXh0cmFQYWdlczpBLG5vdGU6dyxsZWFzZTp2LHJla2V5VG86UyxzaWduZXI6eH0pe2lmKHRoaXMuc3RhdHVzIT09cC5CVUlMRElORyl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIHRyYW5zYWN0aW9ucyB3aGVuIGNvbXBvc2VyIHN0YXR1cyBpcyBub3QgQlVJTERJTkdcIik7aWYodGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoK3QudHhuQ291bnQoKT5kLk1BWF9HUk9VUF9TSVpFKXRocm93IG5ldyBFcnJvcihgQWRkaW5nIGFkZGl0aW9uYWwgdHJhbnNhY3Rpb25zIGV4Y2VlZHMgdGhlIG1heGltdW0gYXRvbWljIGdyb3VwIHNpemUgb2YgJHtkLk1BWF9HUk9VUF9TSVpFfWApO2lmKDA9PT1lKXtpZihudWxsPT1sfHxudWxsPT1ofHxudWxsPT1nfHxudWxsPT15fHxudWxsPT1tfHxudWxsPT1iKXRocm93IG5ldyBFcnJvcihcIk9uZSBvZiB0aGUgZm9sbG93aW5nIHJlcXVpcmVkIHBhcmFtZXRlcnMgZm9yIGFwcGxpY2F0aW9uIGNyZWF0aW9uIGlzIG1pc3Npbmc6IGFwcHJvdmFsUHJvZ3JhbSwgY2xlYXJQcm9ncmFtLCBudW1HbG9iYWxJbnRzLCBudW1HbG9iYWxCeXRlU2xpY2VzLCBudW1Mb2NhbEludHMsIG51bUxvY2FsQnl0ZVNsaWNlc1wiKX1lbHNlIGlmKGE9PT11LmhxLlVwZGF0ZUFwcGxpY2F0aW9uT0Mpe2lmKG51bGw9PWx8fG51bGw9PWgpdGhyb3cgbmV3IEVycm9yKFwiT25lIG9mIHRoZSBmb2xsb3dpbmcgcmVxdWlyZWQgcGFyYW1ldGVycyBmb3IgT25BcHBsaWNhdGlvbkNvbXBsZXRlLlVwZGF0ZUFwcGxpY2F0aW9uT0MgaXMgbWlzc2luZzogYXBwcm92YWxQcm9ncmFtLCBjbGVhclByb2dyYW1cIik7aWYobnVsbCE9Z3x8bnVsbCE9eXx8bnVsbCE9bXx8bnVsbCE9Ynx8bnVsbCE9QSl0aHJvdyBuZXcgRXJyb3IoXCJPbmUgb2YgdGhlIGZvbGxvd2luZyBhcHBsaWNhdGlvbiBjcmVhdGlvbiBwYXJhbWV0ZXJzIHdlcmUgc2V0IG9uIGEgbm9uLWNyZWF0aW9uIGNhbGw6IG51bUdsb2JhbEludHMsIG51bUdsb2JhbEJ5dGVTbGljZXMsIG51bUxvY2FsSW50cywgbnVtTG9jYWxCeXRlU2xpY2VzLCBleHRyYVBhZ2VzXCIpfWVsc2UgaWYobnVsbCE9bHx8bnVsbCE9aHx8bnVsbCE9Z3x8bnVsbCE9eXx8bnVsbCE9bXx8bnVsbCE9Ynx8bnVsbCE9QSl0aHJvdyBuZXcgRXJyb3IoXCJPbmUgb2YgdGhlIGZvbGxvd2luZyBhcHBsaWNhdGlvbiBjcmVhdGlvbiBwYXJhbWV0ZXJzIHdlcmUgc2V0IG9uIGEgbm9uLWNyZWF0aW9uIGNhbGw6IGFwcHJvdmFsUHJvZ3JhbSwgY2xlYXJQcm9ncmFtLCBudW1HbG9iYWxJbnRzLCBudW1HbG9iYWxCeXRlU2xpY2VzLCBudW1Mb2NhbEludHMsIG51bUxvY2FsQnl0ZVNsaWNlcywgZXh0cmFQYWdlc1wiKTtpZihudWxsPT1yJiYocj1bXSksci5sZW5ndGghPT10LmFyZ3MubGVuZ3RoKXRocm93IG5ldyBFcnJvcihgSW5jb3JyZWN0IG51bWJlciBvZiBtZXRob2QgYXJndW1lbnRzLiBFeHBlY3RlZCAke3QuYXJncy5sZW5ndGh9LCBnb3QgJHtyLmxlbmd0aH1gKTtsZXQgRT1bXSxUPVtdO2NvbnN0IF89W10sQj1bXSxVPVtdLGs9bmV3IE1hcDtmb3IobGV0IGU9MDtlPHIubGVuZ3RoO2UrKyl7bGV0IG89dC5hcmdzW2VdLnR5cGU7Y29uc3Qgcz1yW2VdO2lmKCgwLG4uQUUpKG8pKXtpZighKDAsYy5Ydykocyl8fCEoMCxuLnZKKShvLHMudHhuKSl0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkICR7b30gdHJhbnNhY3Rpb24gZm9yIGFyZ3VtZW50IGF0IGluZGV4ICR7ZX1gKTtpZihzLnR4bi5ncm91cCYmcy50eG4uZ3JvdXAuc29tZSgoZT0+MCE9PWUpKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIGEgdHJhbnNhY3Rpb24gd2l0aCBub256ZXJvIGdyb3VwIElEXCIpO18ucHVzaChzKX1lbHNle2lmKCgwLGMuWHcpKHMpKXRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgbm9uLXRyYW5zYWN0aW9uIHZhbHVlIGZvciBhcmd1bWVudCBhdCBpbmRleCAke2V9YCk7aWYoKDAsbi5vNSkobykmJihrLnNldChCLmxlbmd0aCxFLmxlbmd0aCksQi5wdXNoKG8pLFUucHVzaChzKSxvPW5ldyBuLlB1KDgpKSxcInN0cmluZ1wiPT10eXBlb2Ygbyl0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gQUJJIHR5cGU6ICR7b31gKTtFLnB1c2gobyksVC5wdXNoKHMpfX1jb25zdCBJPVtdLEM9W10sUj1bXSxPPVtdO2ZvcihsZXQgdD0wO3Q8Qi5sZW5ndGg7dCsrKXtjb25zdCByPUJbdF0scz1VW3RdO2xldCBpPTA7c3dpdGNoKHIpe2Nhc2Ugbi5VVi5hY2NvdW50Ontjb25zdCBlPW5ldyBuLkpRO2k9ZihlLmRlY29kZShlLmVuY29kZShzKSksQyxvKTticmVha31jYXNlIG4uVVYuYXBwbGljYXRpb246e2NvbnN0IHQ9bmV3IG4uUHUoNjQpLHI9dC5kZWNvZGUodC5lbmNvZGUocykpO2lmKHI+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBzYWZlIGludGVnZXIgZm9yIGFwcGxpY2F0aW9uIHZhbHVlLCBnb3QgJHtyfWApO2k9ZihOdW1iZXIociksUixlKTticmVha31jYXNlIG4uVVYuYXNzZXQ6e2NvbnN0IGU9bmV3IG4uUHUoNjQpLHQ9ZS5kZWNvZGUoZS5lbmNvZGUocykpO2lmKHQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBzYWZlIGludGVnZXIgZm9yIGFzc2V0IHZhbHVlLCBnb3QgJHt0fWApO2k9ZihOdW1iZXIodCksTyk7YnJlYWt9ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcmVmZXJlbmNlIHR5cGU6ICR7cn1gKX1JLnB1c2goaSl9Zm9yKGxldCBlPTA7ZTxJLmxlbmd0aDtlKyspVFtrLmdldChlKV09SVtlXTtpZihFLmxlbmd0aD4xNSl7Y29uc3QgZT1FLnNsaWNlKDE0KSx0PVQuc2xpY2UoMTQpO0U9RS5zbGljZSgwLDE0KSxUPVQuc2xpY2UoMCwxNCksRS5wdXNoKG5ldyBuLncxKGUpKSxULnB1c2godCl9Y29uc3QgRD1bdC5nZXRTZWxlY3RvcigpXTtmb3IobGV0IGU9MDtlPEUubGVuZ3RoO2UrKylELnB1c2goRVtlXS5lbmNvZGUoVFtlXSkpO2NvbnN0IE49e3R4bjooMCxzLm1ha2VBcHBsaWNhdGlvbkNhbGxUeG5Gcm9tT2JqZWN0KSh7ZnJvbTpvLGFwcEluZGV4OmUsYXBwQXJnczpELGFjY291bnRzOkMsZm9yZWlnbkFwcHM6Uixmb3JlaWduQXNzZXRzOk8sb25Db21wbGV0ZTpudWxsPT1hP3UuaHEuTm9PcE9DOmEsYXBwcm92YWxQcm9ncmFtOmwsY2xlYXJQcm9ncmFtOmgsbnVtR2xvYmFsSW50czpnLG51bUdsb2JhbEJ5dGVTbGljZXM6eSxudW1Mb2NhbEludHM6bSxudW1Mb2NhbEJ5dGVTbGljZXM6YixleHRyYVBhZ2VzOkEsbGVhc2U6dixub3RlOncscmVrZXlUbzpTLHN1Z2dlc3RlZFBhcmFtczppfSksc2lnbmVyOnh9O3RoaXMudHJhbnNhY3Rpb25zLnB1c2goLi4uXyxOKSx0aGlzLm1ldGhvZENhbGxzLnNldCh0aGlzLnRyYW5zYWN0aW9ucy5sZW5ndGgtMSx0KX1idWlsZEdyb3VwKCl7aWYodGhpcy5zdGF0dXM9PT1wLkJVSUxESU5HKXtpZigwPT09dGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBidWlsZCBhIGdyb3VwIHdpdGggMCB0cmFuc2FjdGlvbnNcIik7dGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoPjEmJigwLGkuYXNzaWduR3JvdXBJRCkodGhpcy50cmFuc2FjdGlvbnMubWFwKChlPT5lLnR4bikpKSx0aGlzLnN0YXR1cz1wLkJVSUxUfXJldHVybiB0aGlzLnRyYW5zYWN0aW9uc31hc3luYyBnYXRoZXJTaWduYXR1cmVzKCl7aWYodGhpcy5zdGF0dXM+PXAuU0lHTkVEKXJldHVybiB0aGlzLnNpZ25lZFR4bnM7Y29uc3QgZT10aGlzLmJ1aWxkR3JvdXAoKSx0PWUubWFwKChlPT5lLnR4bikpLHI9bmV3IE1hcDtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3R7c2lnbmVyOm59PWVbdF07ci5oYXMobil8fHIuc2V0KG4sW10pLHIuZ2V0KG4pLnB1c2godCl9Y29uc3Qgbj1BcnJheS5mcm9tKHIpLHM9YXdhaXQgUHJvbWlzZS5hbGwobi5tYXAoKChbZSxyXSk9PmUodCxyKSkpKSxpPWUubWFwKCgoKT0+bnVsbCkpO2ZvcihsZXQgZT0wO2U8bi5sZW5ndGg7ZSsrKXtjb25zdCB0PW5bZV1bMV0scj1zW2VdO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKWlbdFtlXV09cltlXX1pZighaS5ldmVyeSgoZT0+bnVsbCE9ZSkpKXRocm93IG5ldyBFcnJvcihgTWlzc2luZyBzaWduYXR1cmVzLiBHb3QgJHtpfWApO2NvbnN0IGE9aS5tYXAoKChlLHQpPT57dHJ5e3JldHVybigwLG8uZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24pKGUpLnR4bi50eElEKCl9Y2F0Y2goZSl7dGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZGVjb2RlIHNpZ25lZCB0cmFuc2FjdGlvbiBhdCBpbmRleCAke3R9LiAke2V9YCl9fSkpO3JldHVybiB0aGlzLnNpZ25lZFR4bnM9aSx0aGlzLnR4SURzPWEsdGhpcy5zdGF0dXM9cC5TSUdORUQsaX1hc3luYyBzdWJtaXQoZSl7aWYodGhpcy5zdGF0dXM+cC5TVUJNSVRURUQpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNhY3Rpb24gZ3JvdXAgY2Fubm90IGJlIHJlc3VibWl0dGVkXCIpO2NvbnN0IHQ9YXdhaXQgdGhpcy5nYXRoZXJTaWduYXR1cmVzKCk7cmV0dXJuIGF3YWl0IGUuc2VuZFJhd1RyYW5zYWN0aW9uKHQpLmRvKCksdGhpcy5zdGF0dXM9cC5TVUJNSVRURUQsdGhpcy50eElEc31hc3luYyBleGVjdXRlKGUsdCl7aWYodGhpcy5zdGF0dXM9PT1wLkNPTU1JVFRFRCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2FjdGlvbiBncm91cCBoYXMgYWxyZWFkeSBiZWVuIGV4ZWN1dGVkIHN1Y2Nlc3NmdWxseVwiKTtjb25zdCByPWF3YWl0IHRoaXMuc3VibWl0KGUpO3RoaXMuc3RhdHVzPXAuU1VCTUlUVEVEO2NvbnN0IG49dGhpcy50cmFuc2FjdGlvbnMuZmluZEluZGV4KCgoZSx0KT0+dGhpcy5tZXRob2RDYWxscy5oYXModCkpKSxvPS0xPT09bj8wOm4scz1hd2FpdCgwLGEuSykoZSxyW29dLHQpO3RoaXMuc3RhdHVzPXAuQ09NTUlUVEVEO2NvbnN0IGk9c1tcImNvbmZpcm1lZC1yb3VuZFwiXSxjPVtdO2Zvcihjb25zdFt0LG9db2YgdGhpcy5tZXRob2RDYWxscyl7Y29uc3QgaT1yW3RdLGE9e3R4SUQ6aSxyYXdSZXR1cm5WYWx1ZTpuZXcgVWludDhBcnJheSxtZXRob2Q6b307dHJ5e2NvbnN0IHI9dD09PW4/czphd2FpdCBlLnBlbmRpbmdUcmFuc2FjdGlvbkluZm9ybWF0aW9uKGkpLmRvKCk7aWYoYS50eEluZm89cixcInZvaWRcIiE9PW8ucmV0dXJucy50eXBlKXtjb25zdCBlPXIubG9nc3x8W107aWYoMD09PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkFwcCBjYWxsIHRyYW5zYWN0aW9uIGRpZCBub3QgbG9nIGEgcmV0dXJuIHZhbHVlXCIpO2NvbnN0IHQ9bC5mcm9tKGVbZS5sZW5ndGgtMV0sXCJiYXNlNjRcIik7aWYodC5ieXRlTGVuZ3RoPDR8fCF0LnNsaWNlKDAsNCkuZXF1YWxzKGgpKXRocm93IG5ldyBFcnJvcihcIkFwcCBjYWxsIHRyYW5zYWN0aW9uIGRpZCBub3QgbG9nIGEgcmV0dXJuIHZhbHVlXCIpO2EucmF3UmV0dXJuVmFsdWU9bmV3IFVpbnQ4QXJyYXkodC5zbGljZSg0KSksYS5yZXR1cm5WYWx1ZT1vLnJldHVybnMudHlwZS5kZWNvZGUoYS5yYXdSZXR1cm5WYWx1ZSl9fWNhdGNoKGUpe2EuZGVjb2RlRXJyb3I9ZX1jLnB1c2goYSl9cmV0dXJue2NvbmZpcm1lZFJvdW5kOmksdHhJRHM6cixtZXRob2RSZXN1bHRzOmN9fX1kLk1BWF9HUk9VUF9TSVpFPTE2fSw5MDcwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7ckQ6KCk9Pm8sXzooKT0+cyxITjooKT0+aX0pO2NvbnN0IG49MWU2LG89XCJNaWNyb2FsZ29zIHNob3VsZCBiZSBwb3NpdGl2ZSBhbmQgbGVzcyB0aGFuIDJeNTMgLSAxLlwiO2Z1bmN0aW9uIHMoZSl7aWYoZTwwfHwhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKG8pO3JldHVybiBlL259ZnVuY3Rpb24gaShlKXtjb25zdCB0PWUqbjtyZXR1cm4gTWF0aC5yb3VuZCh0KX19LDQzODM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtQOigpPT5jLHg6KCk9Pnl9KTt2YXIgbj1yKDIyNyksbz1yKDE4MjQpLHM9cig3MTE2KSxpPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIGEoZSl7cmV0dXJuIGUucGFyYW1zW1wiYXBwcm92YWwtcHJvZ3JhbVwiXT1pLmZyb20oZS5wYXJhbXNbXCJhcHByb3ZhbC1wcm9ncmFtXCJdLnRvU3RyaW5nKCksXCJiYXNlNjRcIiksZS5wYXJhbXNbXCJjbGVhci1zdGF0ZS1wcm9ncmFtXCJdPWkuZnJvbShlLnBhcmFtc1tcImNsZWFyLXN0YXRlLXByb2dyYW1cIl0udG9TdHJpbmcoKSxcImJhc2U2NFwiKSxlfWFzeW5jIGZ1bmN0aW9uIGMoe2NsaWVudDplLHR4bnM6dCxwcm90b2NvbFZlcnNpb246cixsYXRlc3RUaW1lc3RhbXA6aSxyb3VuZDpjLHNvdXJjZXM6dX0pe2NvbnN0IGw9W10saD1bXSxwPVtdLGY9W10sZD1bXTtmb3IoY29uc3QgZSBvZiB0KWUudHhuLnR5cGU9PT1vLmkuYXBwbCYmKGQucHVzaCgoMCxzLmVuY29kZUFkZHJlc3MpKGUudHhuLmZyb20ucHVibGljS2V5KSksZS50eG4uYXBwQWNjb3VudHMmJmQucHVzaCguLi5lLnR4bi5hcHBBY2NvdW50cy5tYXAoKGU9PigwLHMuZW5jb2RlQWRkcmVzcykoZS5wdWJsaWNLZXkpKSkpLGUudHhuLmFwcEZvcmVpZ25BcHBzJiYocC5wdXNoKC4uLmUudHhuLmFwcEZvcmVpZ25BcHBzKSxkLnB1c2goLi4uZS50eG4uYXBwRm9yZWlnbkFwcHMubWFwKChlPT4oMCxzLmdldEFwcGxpY2F0aW9uQWRkcmVzcykoZSkpKSkpLGUudHhuLmFwcEZvcmVpZ25Bc3NldHMmJmYucHVzaCguLi5lLnR4bi5hcHBGb3JlaWduQXNzZXRzKSx2b2lkIDA9PT1lLnR4bi5hcHBJbmRleHx8MD09PWUudHhuLmFwcEluZGV4P2wucHVzaChuZXcgbi5BcHBsaWNhdGlvbigxMzgwMDExNTg4LG5ldyBuLkFwcGxpY2F0aW9uUGFyYW1zKHtjcmVhdG9yOigwLHMuZW5jb2RlQWRkcmVzcykoZS50eG4uZnJvbS5wdWJsaWNLZXkpLGFwcHJvdmFsUHJvZ3JhbTplLnR4bi5hcHBBcHByb3ZhbFByb2dyYW0sY2xlYXJTdGF0ZVByb2dyYW06ZS50eG4uYXBwQ2xlYXJQcm9ncmFtLGxvY2FsU3RhdGVTY2hlbWE6bmV3IG4uQXBwbGljYXRpb25TdGF0ZVNjaGVtYShlLnR4bi5hcHBMb2NhbEludHMsZS50eG4uYXBwTG9jYWxCeXRlU2xpY2VzKSxnbG9iYWxTdGF0ZVNjaGVtYTpuZXcgbi5BcHBsaWNhdGlvblN0YXRlU2NoZW1hKGUudHhuLmFwcEdsb2JhbEludHMsZS50eG4uYXBwR2xvYmFsQnl0ZVNsaWNlcyl9KSkpOihwLnB1c2goZS50eG4uYXBwSW5kZXgpLGQucHVzaCgoMCxzLmdldEFwcGxpY2F0aW9uQWRkcmVzcykoZS50eG4uYXBwSW5kZXgpKSkpO2NvbnN0IGc9W107Zm9yKGNvbnN0IHQgb2ZbLi4ubmV3IFNldChmKV0pZy5wdXNoKGUuZ2V0QXNzZXRCeUlEKHQpLmRvKCkudGhlbigoZT0+e2QucHVzaChlLnBhcmFtcy5jcmVhdG9yKX0pKSk7YXdhaXQgUHJvbWlzZS5hbGwoZyk7Y29uc3QgeT1bXTtmb3IoY29uc3QgdCBvZlsuLi5uZXcgU2V0KHApXSl5LnB1c2goZS5nZXRBcHBsaWNhdGlvbkJ5SUQodCkuZG8oKS50aGVuKChlPT57Y29uc3QgdD1hKGUpO2wucHVzaCh0KSxkLnB1c2godC5wYXJhbXMuY3JlYXRvcil9KSkpO2F3YWl0IFByb21pc2UuYWxsKHkpO2NvbnN0IG09W107Zm9yKGNvbnN0IHQgb2ZbLi4ubmV3IFNldChkKV0pbS5wdXNoKGUuYWNjb3VudEluZm9ybWF0aW9uKHQpLmRvKCkudGhlbigoZT0+e1wiY3JlYXRlZC1hcHBzXCJpbiBlJiYoZVtcImNyZWF0ZWQtYXBwc1wiXT1lW1wiY3JlYXRlZC1hcHBzXCJdLm1hcCgoZT0+YShlKSkpKSxoLnB1c2goZSl9KSkpO3JldHVybiBhd2FpdCBQcm9taXNlLmFsbChtKSxuZXcgbi5EcnlydW5SZXF1ZXN0KHt0eG5zOnQubWFwKChlPT4oey4uLmUsdHhuOmUudHhuLmdldF9vYmpfZm9yX2VuY29kaW5nKCl9KSkpLGFjY291bnRzOmgsYXBwczpsLGxhdGVzdFRpbWVzdGFtcDppLHJvdW5kOmMscHJvdG9jb2xWZXJzaW9uOnIsc291cmNlczp1fSl9Y2xhc3MgdXtjb25zdHJ1Y3RvcihlKXt0aGlzLnR5cGU9MCx0aGlzLmJ5dGVzPVwiXCIsdGhpcy51aW50PTAsdGhpcy50eXBlPWUudHlwZSx0aGlzLmJ5dGVzPWUuYnl0ZXMsdGhpcy51aW50PWUudWludH10b1N0cmluZygpe3JldHVybiAxPT09dGhpcy50eXBlP2AweCR7aS5mcm9tKHRoaXMuYnl0ZXMsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIil9YDp0aGlzLnVpbnQudG9TdHJpbmcoKX19Y2xhc3MgbHtjb25zdHJ1Y3RvcihlKXt0aGlzLmVycm9yPVwiXCIsdGhpcy5saW5lPTAsdGhpcy5wYz0wLHRoaXMuc2NyYXRjaD1bXSx0aGlzLnN0YWNrPVtdLHRoaXMuZXJyb3I9dm9pZCAwPT09ZS5lcnJvcj9cIlwiOmUuZXJyb3IsdGhpcy5saW5lPWUubGluZSx0aGlzLnBjPWUucGMsdGhpcy5zY3JhdGNoPWUuc2NyYXRjaCx0aGlzLnN0YWNrPWUuc3RhY2subWFwKChlPT5uZXcgdShlKSkpfX1jbGFzcyBoe2NvbnN0cnVjdG9yKGUpe3RoaXMudHJhY2U9W10sdm9pZCAwIT09ZSYmKHRoaXMudHJhY2U9ZS5tYXAoKGU9Pm5ldyBsKGUpKSkpfX1mdW5jdGlvbiBwKGUsdCl7cmV0dXJuIGUubGVuZ3RoPnQmJnQ+MD9gJHtlLnNsaWNlKDAsdCl9Li4uYDplfWZ1bmN0aW9uIGYoZSx0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuXCJcIjtsZXQgcj1udWxsO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKShuPmUubGVuZ3RofHxKU09OLnN0cmluZ2lmeShlW25dKSE9PUpTT04uc3RyaW5naWZ5KHRbbl0pKSYmKHI9bik7aWYobnVsbD09cilyZXR1cm5cIlwiO2NvbnN0IG49dFtyXTtyZXR1cm4gbi5ieXRlcy5sZW5ndGg+MD9gJHtyfSA9IDB4JHtpLmZyb20obi5ieXRlcyxcImJhc2U2NFwiKS50b1N0cmluZyhcImhleFwiKX1gOmAke3J9ID0gJHtuLnVpbnQudG9TdHJpbmcoKX1gfWZ1bmN0aW9uIGQoZSx0KXtyZXR1cm5gWyR7KHQ/ZS5yZXZlcnNlKCk6ZSkubWFwKChlPT57c3dpdGNoKGUudHlwZSl7Y2FzZSAxOnJldHVybmAweCR7aS5mcm9tKGUuYnl0ZXMsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIil9YDtjYXNlIDI6cmV0dXJuYCR7ZS51aW50LnRvU3RyaW5nKCl9YDtkZWZhdWx0OnJldHVyblwiXCJ9fSkpLmpvaW4oXCIsIFwiKX1dYH1jbGFzcyBne2NvbnN0cnVjdG9yKGUpe3RoaXMuZGlzYXNzZW1ibHk9W10sdGhpcy5hcHBDYWxsTWVzc2FnZXM9W10sdGhpcy5sb2NhbERlbHRhcz1bXSx0aGlzLmdsb2JhbERlbHRhPVtdLHRoaXMuY29zdD0wLHRoaXMubG9naWNTaWdNZXNzYWdlcz1bXSx0aGlzLmxvZ2ljU2lnRGlzYXNzZW1ibHk9W10sdGhpcy5sb2dzPVtdLHRoaXMuYXBwQ2FsbFRyYWNlPXZvaWQgMCx0aGlzLmxvZ2ljU2lnVHJhY2U9dm9pZCAwLHRoaXMucmVxdWlyZWQ9W1wiZGlzYXNzZW1ibHlcIl0sdGhpcy5vcHRpb25hbHM9W1wiYXBwLWNhbGwtbWVzc2FnZXNcIixcImxvY2FsLWRlbHRhc1wiLFwiZ2xvYmFsLWRlbHRhXCIsXCJjb3N0XCIsXCJsb2dpYy1zaWctbWVzc2FnZXNcIixcImxvZ2ljLXNpZy1kaXNhc3NlbWJseVwiLFwibG9nc1wiXSx0aGlzLnRyYWNlcz1bXCJhcHAtY2FsbC10cmFjZVwiLFwibG9naWMtc2lnLXRyYWNlXCJdLHRoaXMuZGlzYXNzZW1ibHk9ZS5kaXNhc3NlbWJseSx0aGlzLmFwcENhbGxNZXNzYWdlcz1lW1wiYXBwLWNhbGwtbWVzc2FnZXNcIl0sdGhpcy5sb2NhbERlbHRhcz1lW1wibG9jYWwtZGVsdGFzXCJdLHRoaXMuZ2xvYmFsRGVsdGE9ZVtcImdsb2JhbC1kZWx0YVwiXSx0aGlzLmNvc3Q9ZS5jb3N0LHRoaXMubG9naWNTaWdNZXNzYWdlcz1lW1wibG9naWMtc2lnLW1lc3NhZ2VzXCJdLHRoaXMubG9naWNTaWdEaXNhc3NlbWJseT1lW1wibG9naWMtc2lnLWRpc2Fzc2VtYmx5XCJdLHRoaXMubG9ncz1lLmxvZ3MsdGhpcy5hcHBDYWxsVHJhY2U9bmV3IGgoZVtcImFwcC1jYWxsLXRyYWNlXCJdKSx0aGlzLmxvZ2ljU2lnVHJhY2U9bmV3IGgoZVtcImxvZ2ljLXNpZy10cmFjZVwiXSl9YXBwQ2FsbFJlamVjdGVkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuYXBwQ2FsbE1lc3NhZ2VzJiZ0aGlzLmFwcENhbGxNZXNzYWdlcy5pbmNsdWRlcyhcIlJFSkVDVFwiKX1sb2dpY1NpZ1JlamVjdGVkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMubG9naWNTaWdNZXNzYWdlcyYmdGhpcy5sb2dpY1NpZ01lc3NhZ2VzLmluY2x1ZGVzKFwiUkVKRUNUXCIpfXN0YXRpYyB0cmFjZShlLHQscil7Y29uc3Qgbj1yLm1heFZhbHVlV2lkdGh8fDMwLG89W1tcInBjI1wiLFwibG4jXCIsXCJzb3VyY2VcIixcInNjcmF0Y2hcIixcInN0YWNrXCJdXTtmb3IobGV0IHM9MDtzPGUudHJhY2UubGVuZ3RoO3MrKyl7Y29uc3R7bGluZTppLGVycm9yOmEscGM6YyxzY3JhdGNoOnUsc3RhY2s6bH09ZS50cmFjZVtzXSxoPXZvaWQgMCE9PXU/dTpbXSxnPXM+MCYmdm9pZCAwIT09ZS50cmFjZVtzLTFdLnNjcmF0Y2g/ZS50cmFjZVtzLTFdLnNjcmF0Y2g6W10seT1cIlwiPT09YT90W2ldOmAhISAke2F9ICEhYDtvLnB1c2goW2MudG9TdHJpbmcoKS5wYWRFbmQoMyxcIiBcIiksaS50b1N0cmluZygpLnBhZEVuZCgzLFwiIFwiKSxwKHksbikscChmKGcsaCksbikscChkKGwsci50b3BPZlN0YWNrRmlyc3QpLG4pXSl9Y29uc3Qgcz1vLnJlZHVjZSgoKGUsdCk9Pntjb25zdCByPW5ldyBBcnJheShvWzBdLmxlbmd0aCkuZmlsbCgwKTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKylyW25dPXRbbl0ubGVuZ3RoPmVbbl0/dFtuXS5sZW5ndGg6ZVtuXTtyZXR1cm4gcn0pLG5ldyBBcnJheShvWzBdLmxlbmd0aCkuZmlsbCgwKSk7cmV0dXJuYCR7by5tYXAoKGU9PmUubWFwKCgoZSx0KT0+ZS5wYWRFbmQoc1t0XSsxLFwiIFwiKSkpLmpvaW4oXCJ8XCIpLnRyaW0oKSkpLmpvaW4oXCJcXG5cIil9XFxuYH1hcHBUcmFjZShlKXtpZih2b2lkIDA9PT10aGlzLmFwcENhbGxUcmFjZXx8IXRoaXMuZGlzYXNzZW1ibHkpcmV0dXJuXCJcIjtsZXQgdD1lO3JldHVybiB2b2lkIDA9PT1lJiYodD17bWF4VmFsdWVXaWR0aDozMCx0b3BPZlN0YWNrRmlyc3Q6ITF9KSxnLnRyYWNlKHRoaXMuYXBwQ2FsbFRyYWNlLHRoaXMuZGlzYXNzZW1ibHksdCl9bHNpZ1RyYWNlKGUpe2lmKHZvaWQgMD09PXRoaXMubG9naWNTaWdUcmFjZXx8dm9pZCAwPT09dGhpcy5sb2dpY1NpZ0Rpc2Fzc2VtYmx5KXJldHVyblwiXCI7bGV0IHQ9ZTtyZXR1cm4gdm9pZCAwPT09ZSYmKHQ9e21heFZhbHVlV2lkdGg6MzAsdG9wT2ZTdGFja0ZpcnN0OiEwfSksZy50cmFjZSh0aGlzLmxvZ2ljU2lnVHJhY2UsdGhpcy5sb2dpY1NpZ0Rpc2Fzc2VtYmx5LHQpfX1jbGFzcyB5e2NvbnN0cnVjdG9yKGUpe3RoaXMuZXJyb3I9XCJcIix0aGlzLnByb3RvY29sVmVyc2lvbj1cIlwiLHRoaXMudHhucz1bXSx0aGlzLmVycm9yPWUuZXJyb3IsdGhpcy5wcm90b2NvbFZlcnNpb249ZVtcInByb3RvY29sLXZlcnNpb25cIl0sdGhpcy50eG5zPWUudHhucy5tYXAoKGU9Pm5ldyBnKGUpKSl9fX0sNzExNjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtBTEdPUkFORF9aRVJPX0FERFJFU1NfU1RSSU5HOigpPT51LE1BTEZPUk1FRF9BRERSRVNTX0VSUk9SX01TRzooKT0+cCxDSEVDS1NVTV9BRERSRVNTX0VSUk9SX01TRzooKT0+ZixJTlZBTElEX01TSUdfVkVSU0lPTl9FUlJPUl9NU0c6KCk9PmQsSU5WQUxJRF9NU0lHX1RIUkVTSE9MRF9FUlJPUl9NU0c6KCk9PmcsSU5WQUxJRF9NU0lHX1BLX0VSUk9SX01TRzooKT0+eSxVTkVYUEVDVEVEX1BLX0xFTl9FUlJPUl9NU0c6KCk9Pm0sZGVjb2RlQWRkcmVzczooKT0+Yixpc1ZhbGlkQWRkcmVzczooKT0+QSxlbmNvZGVBZGRyZXNzOigpPT53LGZyb21NdWx0aXNpZ1ByZUltZzooKT0+dixmcm9tTXVsdGlzaWdQcmVJbWdBZGRyczooKT0+UyxnZXRBcHBsaWNhdGlvbkFkZHJlc3M6KCk9Pnh9KTt2YXIgbj1yKDcyNjcpLG89ci5uKG4pLHM9cig5NDA0KSxpPXIoNDEzKSxhPXIoNjk2MyksYz1yKDI0ODYpLkJ1ZmZlcjtjb25zdCB1PVwiQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVk1SEZLUVwiLGw9bmV3IFVpbnQ4QXJyYXkoWzc3LDExNywxMDgsMTE2LDEwNSwxMTUsMTA1LDEwMyw2NSwxMDAsMTAwLDExNF0pLGg9Yy5mcm9tKFwiYXBwSURcIikscD1cImFkZHJlc3Mgc2VlbXMgdG8gYmUgbWFsZm9ybWVkXCIsZj1cIndyb25nIGNoZWNrc3VtIGZvciBhZGRyZXNzXCIsZD1cImludmFsaWQgbXVsdGlzaWcgdmVyc2lvblwiLGc9XCJiYWQgbXVsdGlzaWcgdGhyZXNob2xkXCIseT1cImJhZCBtdWx0aXNpZyBwdWJsaWMga2V5IC0gd3JvbmcgbGVuZ3RoXCIsbT1cIm5hY2wgcHVibGljIGtleSBsZW5ndGggaXMgbm90IDMyIGJ5dGVzXCI7ZnVuY3Rpb24gYihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZXx8NTghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IocCk7Y29uc3QgdD1vKCkuZGVjb2RlLmFzQnl0ZXMoZS50b1N0cmluZygpKTtpZigzNiE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihwKTtjb25zdCByPW5ldyBVaW50OEFycmF5KHQuc2xpY2UoMCwzMikpLG49bmV3IFVpbnQ4QXJyYXkodC5zbGljZShzLlBVQkxJQ19LRVlfTEVOR1RILDM2KSksYT1zLmdlbmVyaWNIYXNoKHIpLnNsaWNlKHMuSEFTSF9CWVRFU19MRU5HVEgtNCxzLkhBU0hfQllURVNfTEVOR1RIKTtpZighaS5hcnJheUVxdWFsKGEsbikpdGhyb3cgbmV3IEVycm9yKGYpO3JldHVybntwdWJsaWNLZXk6cixjaGVja3N1bTpufX1mdW5jdGlvbiBBKGUpe3RyeXtiKGUpfWNhdGNoKGUpe3JldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIHcoZSl7Y29uc3QgdD1zLmdlbmVyaWNIYXNoKGUpLnNsaWNlKHMuUFVCTElDX0tFWV9MRU5HVEgtNCxzLlBVQkxJQ19LRVlfTEVOR1RIKTtyZXR1cm4gbygpLmVuY29kZShpLmNvbmNhdEFycmF5cyhlLHQpKS50b1N0cmluZygpLnNsaWNlKDAsNTgpfWZ1bmN0aW9uIHYoe3ZlcnNpb246ZSx0aHJlc2hvbGQ6dCxwa3M6cn0pe2lmKDEhPT1lfHxlPjI1NXx8ZTwwKXRocm93IG5ldyBFcnJvcihkKTtpZigwPT09dHx8MD09PXIubGVuZ3RofHx0PnIubGVuZ3RofHx0PjI1NSl0aHJvdyBuZXcgRXJyb3IoZyk7aWYoMzIhPT1zLlBVQkxJQ19LRVlfTEVOR1RIKXRocm93IG5ldyBFcnJvcihtKTtjb25zdCBuPW5ldyBVaW50OEFycmF5KGwubGVuZ3RoKzIrMzIqci5sZW5ndGgpO24uc2V0KGwsMCksbi5zZXQoW2VdLGwubGVuZ3RoKSxuLnNldChbdF0sbC5sZW5ndGgrMSk7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspe2lmKDMyIT09cltlXS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKHkpO24uc2V0KHJbZV0sbC5sZW5ndGgrMiszMiplKX1yZXR1cm4gbmV3IFVpbnQ4QXJyYXkocy5nZW5lcmljSGFzaChuKSl9ZnVuY3Rpb24gUyh7dmVyc2lvbjplLHRocmVzaG9sZDp0LGFkZHJzOnJ9KXtyZXR1cm4gdyh2KHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQscGtzOnIubWFwKChlPT5iKGUpLnB1YmxpY0tleSkpfSkpfWZ1bmN0aW9uIHgoZSl7Y29uc3QgdD1pLmNvbmNhdEFycmF5cyhoLCgwLGEuVCkoZSkpLHI9cy5nZW5lcmljSGFzaCh0KTtyZXR1cm4gdyhuZXcgVWludDhBcnJheShyKSl9fSw4OTIyOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7ajooKT0+byx2OigpPT5zfSk7dmFyIG49cigyNDg2KS5CdWZmZXI7ZnVuY3Rpb24gbyhlLHQpe2xldCByPWUudG9TdHJpbmcoMTYpO3IubGVuZ3RoIT09Mip0JiYocj1yLnBhZFN0YXJ0KDIqdCxcIjBcIikpO2NvbnN0IG49bmV3IFVpbnQ4QXJyYXkoci5sZW5ndGgvMik7Zm9yKGxldCBlPTAsdD0wO2U8ci5sZW5ndGgvMjtlKyssdCs9MiluW2VdPXBhcnNlSW50KHIuc2xpY2UodCx0KzIpLDE2KTtyZXR1cm4gbn1mdW5jdGlvbiBzKGUpe2xldCB0PUJpZ0ludCgwKTtjb25zdCByPW4uZnJvbShlKTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl0PUJpZ0ludChOdW1iZXIoci5yZWFkVUludEJFKG4sMSkpKSt0KkJpZ0ludCgyNTYpO3JldHVybiB0fX0sMzAzMzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtFUlJPUl9DT05UQUlOU19FTVBUWV9TVFJJTkc6KCk9Pm8sZW5jb2RlOigpPT5zLGRlY29kZTooKT0+aX0pO3ZhciBuPXIoNTQwNik7Y29uc3Qgbz1cIlRoZSBvYmplY3QgY29udGFpbnMgZW1wdHkgb3IgMCB2YWx1ZXMuIEZpcnN0IGVtcHR5IG9yIDAgdmFsdWUgZW5jb3VudGVyZWQgZHVyaW5nIGVuY29kaW5nOiBcIjtmdW5jdGlvbiBzKGUpe2NvbnN0IHQ9ZnVuY3Rpb24oZSl7Zm9yKGNvbnN0IHQgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSYmKCFlW3RdfHwwPT09ZVt0XS5sZW5ndGgpKXJldHVybntjb250YWluc0VtcHR5OiEwLGZpcnN0RW1wdHlLZXk6dH07cmV0dXJue2NvbnRhaW5zRW1wdHk6ITEsZmlyc3RFbXB0eUtleTp2b2lkIDB9fShlKTtpZih0LmNvbnRhaW5zRW1wdHkpdGhyb3cgbmV3IEVycm9yKG8rdC5maXJzdEVtcHR5S2V5KTtyZXR1cm4gbi5lbmNvZGUoZSx7c29ydEtleXM6ITB9KX1mdW5jdGlvbiBpKGUpe3JldHVybiBuLmRlY29kZShlKX19LDY5NjM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtUOigpPT5vLHU6KCk9PnN9KTt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBvKGUpe2lmKFwiYmlnaW50XCIhPXR5cGVvZiBlJiYhTnVtYmVyLmlzSW50ZWdlcihlKXx8ZTwwfHxlPkJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnB1dCBpcyBub3QgYSA2NC1iaXQgdW5zaWduZWQgaW50ZWdlclwiKTtjb25zdCB0PW4uYWxsb2NVbnNhZmUoOCk7cmV0dXJuIHQud3JpdGVCaWdVSW50NjRCRShCaWdJbnQoZSkpLG5ldyBVaW50OEFycmF5KHQpfWZ1bmN0aW9uIHMoZSx0PVwic2FmZVwiKXtpZihcInNhZmVcIiE9PXQmJlwibWl4ZWRcIiE9PXQmJlwiYmlnaW50XCIhPT10KXRocm93IG5ldyBFcnJvcihgVW5rbm93biBkZWNvZGluZ01vZGUgb3B0aW9uOiAke3R9YCk7aWYoMD09PWUuYnl0ZUxlbmd0aHx8ZS5ieXRlTGVuZ3RoPjgpdGhyb3cgbmV3IEVycm9yKGBEYXRhIGhhcyB1bmFjY2VwdGFibGUgbGVuZ3RoLiBFeHBlY3RlZCBsZW5ndGggaXMgYmV0d2VlbiAxIGFuZCA4LCBnb3QgJHtlLmJ5dGVMZW5ndGh9YCk7Y29uc3Qgcj1uLmFsbG9jVW5zYWZlKDgtZS5ieXRlTGVuZ3RoKTtyLmZpbGwoMCk7Y29uc3Qgbz1uLmNvbmNhdChbcixuLmZyb20oZSldKS5yZWFkQmlnVUludDY0QkUoKSxzPW8+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7aWYoXCJzYWZlXCI9PT10KXtpZihzKXRocm93IG5ldyBFcnJvcihgSW50ZWdlciBleGNlZWRzIG1heGltdW0gc2FmZSBpbnRlZ2VyOiAke28udG9TdHJpbmcoKX0uIFRyeSBkZWNvZGluZyB3aXRoIFwibWl4ZWRcIiBvciBcInNhZmVcIiBkZWNvZGluZ01vZGUuYCk7cmV0dXJuIE51bWJlcihvKX1yZXR1cm5cIm1peGVkXCIhPT10fHxzP286TnVtYmVyKG8pfX0sMTA2MzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtUeEdyb3VwOigpPT51LGNvbXB1dGVHcm91cElEOigpPT5sLGFzc2lnbkdyb3VwSUQ6KCk9PmgsZGVmYXVsdDooKT0+cH0pO3ZhciBuPXIoOTQxNyksbz1yKDk0MDQpLHM9cigzMDMzKSxpPXIoNzExNiksYT1yKDQxMyksYz1yKDI0ODYpLkJ1ZmZlcjtjbGFzcyB1e2NvbnN0cnVjdG9yKGUpe2lmKHRoaXMubmFtZT1cIlRyYW5zYWN0aW9uIGdyb3VwXCIsdGhpcy50YWc9Yy5mcm9tKFwiVEdcIiksZS5sZW5ndGg+MTYpe2NvbnN0IHQ9YCR7ZS5sZW5ndGgudG9TdHJpbmcoKX0gdHJhbnNhY3Rpb25zIGdyb3VwZWQgdG9nZXRoZXIgYnV0IG1heCBncm91cCBzaXplIGlzICR7MTYuLnRvU3RyaW5nKCl9YDt0aHJvdyBFcnJvcih0KX10aGlzLnR4R3JvdXBIYXNoZXM9ZX1nZXRfb2JqX2Zvcl9lbmNvZGluZygpe3JldHVybnt0eGxpc3Q6dGhpcy50eEdyb3VwSGFzaGVzfX1zdGF0aWMgZnJvbV9vYmpfZm9yX2VuY29kaW5nKGUpe2NvbnN0IHQ9T2JqZWN0LmNyZWF0ZSh0aGlzLnByb3RvdHlwZSk7dC5uYW1lPVwiVHJhbnNhY3Rpb24gZ3JvdXBcIix0LnRhZz1jLmZyb20oXCJUR1wiKSx0LnR4R3JvdXBIYXNoZXM9W107Zm9yKGNvbnN0IHIgb2YgZS50eGxpc3QpdC50eEdyb3VwSGFzaGVzLnB1c2goYy5mcm9tKHIpKTtyZXR1cm4gdH10b0J5dGUoKXtyZXR1cm4gcy5lbmNvZGUodGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpKX19ZnVuY3Rpb24gbChlKXtjb25zdCB0PVtdO2Zvcihjb25zdCByIG9mIGUpe2NvbnN0IGU9bi5pbnN0YW50aWF0ZVR4bklmTmVlZGVkKHIpO3QucHVzaChlLnJhd1R4SUQoKSl9Y29uc3Qgcj1uZXcgdSh0KSxzPXIudG9CeXRlKCksaT1jLmZyb20oYS5jb25jYXRBcnJheXMoci50YWcscykpLGw9by5nZW5lcmljSGFzaChpKTtyZXR1cm4gYy5mcm9tKGwpfWZ1bmN0aW9uIGgoZSx0KXtjb25zdCByPWwoZSksbz1bXTtmb3IoY29uc3QgcyBvZiBlKXtjb25zdCBlPW4uaW5zdGFudGlhdGVUeG5JZk5lZWRlZChzKTt0JiZpLmVuY29kZUFkZHJlc3MoZS5mcm9tLnB1YmxpY0tleSkhPT10fHwoZS5ncm91cD1yLG8ucHVzaChlKSl9cmV0dXJuIG99Y29uc3QgcD11fSw1NTgzOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse2NoZWNrQnl0ZUNvbnN0QmxvY2s6KCk9PmYsY2hlY2tJbnRDb25zdEJsb2NrOigpPT5wLGNoZWNrUHJvZ3JhbTooKT0+aCxjaGVja1B1c2hCeXRlT3A6KCk9PmcsY2hlY2tQdXNoSW50T3A6KCk9PmQsbGFuZ3NwZWNFdmFsTWF4VmVyc2lvbjooKT0+eSxsYW5nc3BlY0xvZ2ljU2lnVmVyc2lvbjooKT0+bSxwYXJzZVV2YXJpbnQ6KCk9PnMscmVhZFByb2dyYW06KCk9Pmx9KTtjb25zdCBuPUpTT04ucGFyc2UoJ3tcInpfXCI6NixcIkJWXCI6NSxcIkFQXCI6W3tcIk9wY29kZVwiOjAsXCJOYW1lXCI6XCJlcnJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkZhaWwgaW1tZWRpYXRlbHkuXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjEsXCJOYW1lXCI6XCJzaGEyNTZcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjozNSxcIlNpemVcIjoxLFwiRG9jXCI6XCJTSEEyNTYgaGFzaCBvZiB2YWx1ZSBBLCB5aWVsZHMgWzMyXWJ5dGVcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjIsXCJOYW1lXCI6XCJrZWNjYWsyNTZcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxMzAsXCJTaXplXCI6MSxcIkRvY1wiOlwiS2VjY2FrMjU2IGhhc2ggb2YgdmFsdWUgQSwgeWllbGRzIFszMl1ieXRlXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjozLFwiTmFtZVwiOlwic2hhNTEyXzI1NlwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjQ1LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIlNIQTUxMl8yNTYgaGFzaCBvZiB2YWx1ZSBBLCB5aWVsZHMgWzMyXWJ5dGVcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjQsXCJOYW1lXCI6XCJlZDI1NTE5dmVyaWZ5XCIsXCJBcmdzXCI6XCJCQkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxOTAwLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImZvciAoZGF0YSBBLCBzaWduYXR1cmUgQiwgcHVia2V5IEMpIHZlcmlmeSB0aGUgc2lnbmF0dXJlIG9mIChcXFxcXCJQcm9nRGF0YVxcXFxcIiB8fCBwcm9ncmFtX2hhc2ggfHwgZGF0YSkgYWdhaW5zdCB0aGUgcHVia2V5ID0+IHswIG9yIDF9XCIsXCJEb2NFeHRyYVwiOlwiVGhlIDMyIGJ5dGUgcHVibGljIGtleSBpcyB0aGUgbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjaywgcHJlY2VkZWQgYnkgdGhlIDY0IGJ5dGUgc2lnbmF0dXJlIGF0IHRoZSBzZWNvbmQtdG8tbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjaywgcHJlY2VkZWQgYnkgdGhlIGRhdGEgd2hpY2ggd2FzIHNpZ25lZCBhdCB0aGUgdGhpcmQtdG8tbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjay5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjUsXCJOYW1lXCI6XCJlY2RzYV92ZXJpZnlcIixcIkFyZ3NcIjpcIkJCQkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MTcwMCxcIlNpemVcIjoyLFwiRG9jXCI6XCJmb3IgKGRhdGEgQSwgc2lnbmF0dXJlIEIsIEMgYW5kIHB1YmtleSBELCBFKSB2ZXJpZnkgdGhlIHNpZ25hdHVyZSBvZiB0aGUgZGF0YSBhZ2FpbnN0IHRoZSBwdWJrZXkgPT4gezAgb3IgMX1cIixcIkRvY0V4dHJhXCI6XCJUaGUgMzIgYnl0ZSBZLWNvbXBvbmVudCBvZiBhIHB1YmxpYyBrZXkgaXMgdGhlIGxhc3QgZWxlbWVudCBvbiB0aGUgc3RhY2ssIHByZWNlZGVkIGJ5IFgtY29tcG9uZW50IG9mIGEgcHVia2V5LCBwcmVjZWRlZCBieSBTIGFuZCBSIGNvbXBvbmVudHMgb2YgYSBzaWduYXR1cmUsIHByZWNlZGVkIGJ5IHRoZSBkYXRhIHRoYXQgaXMgZmlmdGggZWxlbWVudCBvbiB0aGUgc3RhY2suIEFsbCB2YWx1ZXMgYXJlIGJpZy1lbmRpYW4gZW5jb2RlZC4gVGhlIHNpZ25lZCBkYXRhIG11c3QgYmUgMzIgYnl0ZXMgbG9uZywgYW5kIHNpZ25hdHVyZXMgaW4gbG93ZXItUyBmb3JtIGFyZSBvbmx5IGFjY2VwdGVkLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6NixcIk5hbWVcIjpcImVjZHNhX3BrX2RlY29tcHJlc3NcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJCXCIsXCJDb3N0XCI6NjUwLFwiU2l6ZVwiOjIsXCJEb2NcIjpcImRlY29tcHJlc3MgcHVia2V5IEEgaW50byBjb21wb25lbnRzIFgsIFlcIixcIkRvY0V4dHJhXCI6XCJUaGUgMzMgYnl0ZSBwdWJsaWMga2V5IGluIGEgY29tcHJlc3NlZCBmb3JtIHRvIGJlIGRlY29tcHJlc3NlZCBpbnRvIFggYW5kIFkgKHRvcCkgY29tcG9uZW50cy4gQWxsIHZhbHVlcyBhcmUgYmlnLWVuZGlhbiBlbmNvZGVkLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6NyxcIk5hbWVcIjpcImVjZHNhX3BrX3JlY292ZXJcIixcIkFyZ3NcIjpcIkJVQkJcIixcIlJldHVybnNcIjpcIkJCXCIsXCJDb3N0XCI6MjAwMCxcIlNpemVcIjoyLFwiRG9jXCI6XCJmb3IgKGRhdGEgQSwgcmVjb3ZlcnkgaWQgQiwgc2lnbmF0dXJlIEMsIEQpIHJlY292ZXIgYSBwdWJsaWMga2V5XCIsXCJEb2NFeHRyYVwiOlwiUyAodG9wKSBhbmQgUiBlbGVtZW50cyBvZiBhIHNpZ25hdHVyZSwgcmVjb3ZlcnkgaWQgYW5kIGRhdGEgKGJvdHRvbSkgYXJlIGV4cGVjdGVkIG9uIHRoZSBzdGFjayBhbmQgdXNlZCB0byBkZXJpdmVyIGEgcHVibGljIGtleS4gQWxsIHZhbHVlcyBhcmUgYmlnLWVuZGlhbiBlbmNvZGVkLiBUaGUgc2lnbmVkIGRhdGEgbXVzdCBiZSAzMiBieXRlcyBsb25nLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6OCxcIk5hbWVcIjpcIitcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHBsdXMgQi4gRmFpbCBvbiBvdmVyZmxvdy5cIixcIkRvY0V4dHJhXCI6XCJPdmVyZmxvdyBpcyBhbiBlcnJvciBjb25kaXRpb24gd2hpY2ggaGFsdHMgZXhlY3V0aW9uIGFuZCBmYWlscyB0aGUgdHJhbnNhY3Rpb24uIEZ1bGwgcHJlY2lzaW9uIGlzIGF2YWlsYWJsZSBmcm9tIGBhZGR3YC5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjksXCJOYW1lXCI6XCItXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtaW51cyBCLiBGYWlsIGlmIEIgPiBBLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTAsXCJOYW1lXCI6XCIvXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBkaXZpZGVkIGJ5IEIgKHRydW5jYXRlZCBkaXZpc2lvbikuIEZhaWwgaWYgQiA9PSAwLlwiLFwiRG9jRXh0cmFcIjpcImBkaXZtb2R3YCBpcyBhdmFpbGFibGUgdG8gZGl2aWRlIHRoZSB0d28tZWxlbWVudCB2YWx1ZXMgcHJvZHVjZWQgYnkgYG11bHdgIGFuZCBgYWRkd2AuXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMSxcIk5hbWVcIjpcIipcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIuIEZhaWwgb24gb3ZlcmZsb3cuXCIsXCJEb2NFeHRyYVwiOlwiT3ZlcmZsb3cgaXMgYW4gZXJyb3IgY29uZGl0aW9uIHdoaWNoIGhhbHRzIGV4ZWN1dGlvbiBhbmQgZmFpbHMgdGhlIHRyYW5zYWN0aW9uLiBGdWxsIHByZWNpc2lvbiBpcyBhdmFpbGFibGUgZnJvbSBgbXVsd2AuXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMixcIk5hbWVcIjpcIjxcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGxlc3MgdGhhbiBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMyxcIk5hbWVcIjpcIj5cIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGdyZWF0ZXIgdGhhbiBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNCxcIk5hbWVcIjpcIjw9XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gQiA9PiB7MCBvciAxfVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTUsXCJOYW1lXCI6XCI+PVwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIEIgPT4gezAgb3IgMX1cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2LFwiTmFtZVwiOlwiJiZcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGlzIG5vdCB6ZXJvIGFuZCBCIGlzIG5vdCB6ZXJvID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNyxcIk5hbWVcIjpcInx8XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBub3QgemVybyBvciBCIGlzIG5vdCB6ZXJvID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxOCxcIk5hbWVcIjpcIj09XCIsXCJBcmdzXCI6XCIuLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBlcXVhbCB0byBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxOSxcIk5hbWVcIjpcIiE9XCIsXCJBcmdzXCI6XCIuLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBub3QgZXF1YWwgdG8gQiA9PiB7MCBvciAxfVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjAsXCJOYW1lXCI6XCIhXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBID09IDAgeWllbGRzIDE7IGVsc2UgMFwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjEsXCJOYW1lXCI6XCJsZW5cIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInlpZWxkcyBsZW5ndGggb2YgYnl0ZSB2YWx1ZSBBXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoyMixcIk5hbWVcIjpcIml0b2JcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnZlcnRzIHVpbnQ2NCBBIHRvIGJpZyBlbmRpYW4gYnl0ZXNcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjIzLFwiTmFtZVwiOlwiYnRvaVwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29udmVydHMgYnl0ZXMgQSBhcyBiaWcgZW5kaWFuIHRvIHVpbnQ2NFwiLFwiRG9jRXh0cmFcIjpcImBidG9pYCBmYWlscyBpZiB0aGUgaW5wdXQgaXMgbG9uZ2VyIHRoYW4gOCBieXRlcy5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI0LFwiTmFtZVwiOlwiJVwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgbW9kdWxvIEIuIEZhaWwgaWYgQiA9PSAwLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjUsXCJOYW1lXCI6XCJ8XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLW9yIEJcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI2LFwiTmFtZVwiOlwiJlwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgYml0d2lzZS1hbmQgQlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjcsXCJOYW1lXCI6XCJeXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLXhvciBCXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoyOCxcIk5hbWVcIjpcIn5cIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImJpdHdpc2UgaW52ZXJ0IHZhbHVlIEFcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI5LFwiTmFtZVwiOlwibXVsd1wiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIgYXMgYSAxMjgtYml0IHJlc3VsdCBpbiB0d28gdWludDY0cy4gWCBpcyB0aGUgaGlnaCA2NCBiaXRzLCBZIGlzIHRoZSBsb3dcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjMwLFwiTmFtZVwiOlwiYWRkd1wiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHBsdXMgQiBhcyBhIDEyOC1iaXQgcmVzdWx0LiBYIGlzIHRoZSBjYXJyeS1iaXQsIFkgaXMgdGhlIGxvdy1vcmRlciA2NCBiaXRzLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MzEsXCJOYW1lXCI6XCJkaXZtb2R3XCIsXCJBcmdzXCI6XCJVVVVVXCIsXCJSZXR1cm5zXCI6XCJVVVVVXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiVyxYID0gKEEsQiAvIEMsRCk7IFksWiA9IChBLEIgbW9kdWxvIEMsRClcIixcIkRvY0V4dHJhXCI6XCJUaGUgbm90YXRpb24gSixLIGluZGljYXRlcyB0aGF0IHR3byB1aW50NjQgdmFsdWVzIEogYW5kIEsgYXJlIGludGVycHJldGVkIGFzIGEgdWludDEyOCB2YWx1ZSwgd2l0aCBKIGFzIHRoZSBoaWdoIHVpbnQ2NCBhbmQgSyB0aGUgbG93LlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MzIsXCJOYW1lXCI6XCJpbnRjYmxvY2tcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjAsXCJEb2NcIjpcInByZXBhcmUgYmxvY2sgb2YgdWludDY0IGNvbnN0YW50cyBmb3IgdXNlIGJ5IGludGNcIixcIkRvY0V4dHJhXCI6XCJgaW50Y2Jsb2NrYCBsb2FkcyBmb2xsb3dpbmcgcHJvZ3JhbSBieXRlcyBpbnRvIGFuIGFycmF5IG9mIGludGVnZXIgY29uc3RhbnRzIGluIHRoZSBldmFsdWF0b3IuIFRoZXNlIGludGVnZXIgY29uc3RhbnRzIGNhbiBiZSByZWZlcnJlZCB0byBieSBgaW50Y2AgYW5kIGBpbnRjXypgIHdoaWNoIHdpbGwgcHVzaCB0aGUgdmFsdWUgb250byB0aGUgc3RhY2suIFN1YnNlcXVlbnQgY2FsbHMgdG8gYGludGNibG9ja2AgcmVzZXQgYW5kIHJlcGxhY2UgdGhlIGludGVnZXIgY29uc3RhbnRzIGF2YWlsYWJsZSB0byB0aGUgc2NyaXB0LlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgbGVuZ3RofSBbe3ZhcnVpbnQgdmFsdWV9LCAuLi5dXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzMsXCJOYW1lXCI6XCJpbnRjXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJJdGggY29uc3RhbnQgZnJvbSBpbnRjYmxvY2tcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBpbnQgY29uc3RhbnQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzQsXCJOYW1lXCI6XCJpbnRjXzBcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDAgZnJvbSBpbnRjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjozNSxcIk5hbWVcIjpcImludGNfMVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29uc3RhbnQgMSBmcm9tIGludGNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjM2LFwiTmFtZVwiOlwiaW50Y18yXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAyIGZyb20gaW50Y2Jsb2NrXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzcsXCJOYW1lXCI6XCJpbnRjXzNcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDMgZnJvbSBpbnRjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjozOCxcIk5hbWVcIjpcImJ5dGVjYmxvY2tcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjAsXCJEb2NcIjpcInByZXBhcmUgYmxvY2sgb2YgYnl0ZS1hcnJheSBjb25zdGFudHMgZm9yIHVzZSBieSBieXRlY1wiLFwiRG9jRXh0cmFcIjpcImBieXRlY2Jsb2NrYCBsb2FkcyB0aGUgZm9sbG93aW5nIHByb2dyYW0gYnl0ZXMgaW50byBhbiBhcnJheSBvZiBieXRlLWFycmF5IGNvbnN0YW50cyBpbiB0aGUgZXZhbHVhdG9yLiBUaGVzZSBjb25zdGFudHMgY2FuIGJlIHJlZmVycmVkIHRvIGJ5IGBieXRlY2AgYW5kIGBieXRlY18qYCB3aGljaCB3aWxsIHB1c2ggdGhlIHZhbHVlIG9udG8gdGhlIHN0YWNrLiBTdWJzZXF1ZW50IGNhbGxzIHRvIGBieXRlY2Jsb2NrYCByZXNldCBhbmQgcmVwbGFjZSB0aGUgYnl0ZXMgY29uc3RhbnRzIGF2YWlsYWJsZSB0byB0aGUgc2NyaXB0LlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgbGVuZ3RofSBbKHt2YXJ1aW50IHZhbHVlIGxlbmd0aH0gYnl0ZXMpLCAuLi5dXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzksXCJOYW1lXCI6XCJieXRlY1wiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkRvY1wiOlwiSXRoIGNvbnN0YW50IGZyb20gYnl0ZWNibG9ja1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGJ5dGUgY29uc3RhbnQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDAsXCJOYW1lXCI6XCJieXRlY18wXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAwIGZyb20gYnl0ZWNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQxLFwiTmFtZVwiOlwiYnl0ZWNfMVwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29uc3RhbnQgMSBmcm9tIGJ5dGVjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0MixcIk5hbWVcIjpcImJ5dGVjXzJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDIgZnJvbSBieXRlY2Jsb2NrXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDMsXCJOYW1lXCI6XCJieXRlY18zXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAzIGZyb20gYnl0ZWNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQ0LFwiTmFtZVwiOlwiYXJnXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJOdGggTG9naWNTaWcgYXJndW1lbnRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhcmcgaW5kZXggTn1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0NSxcIk5hbWVcIjpcImFyZ18wXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJMb2dpY1NpZyBhcmd1bWVudCAwXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDYsXCJOYW1lXCI6XCJhcmdfMVwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiTG9naWNTaWcgYXJndW1lbnQgMVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQ3LFwiTmFtZVwiOlwiYXJnXzJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkxvZ2ljU2lnIGFyZ3VtZW50IDJcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0OCxcIk5hbWVcIjpcImFyZ18zXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJMb2dpY1NpZyBhcmd1bWVudCAzXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDksXCJOYW1lXCI6XCJ0eG5cIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJBcmdFbnVtXCI6W1wiU2VuZGVyXCIsXCJGZWVcIixcIkZpcnN0VmFsaWRcIixcIkZpcnN0VmFsaWRUaW1lXCIsXCJMYXN0VmFsaWRcIixcIk5vdGVcIixcIkxlYXNlXCIsXCJSZWNlaXZlclwiLFwiQW1vdW50XCIsXCJDbG9zZVJlbWFpbmRlclRvXCIsXCJWb3RlUEtcIixcIlNlbGVjdGlvblBLXCIsXCJWb3RlRmlyc3RcIixcIlZvdGVMYXN0XCIsXCJWb3RlS2V5RGlsdXRpb25cIixcIlR5cGVcIixcIlR5cGVFbnVtXCIsXCJYZmVyQXNzZXRcIixcIkFzc2V0QW1vdW50XCIsXCJBc3NldFNlbmRlclwiLFwiQXNzZXRSZWNlaXZlclwiLFwiQXNzZXRDbG9zZVRvXCIsXCJHcm91cEluZGV4XCIsXCJUeElEXCIsXCJBcHBsaWNhdGlvbklEXCIsXCJPbkNvbXBsZXRpb25cIixcIkFwcGxpY2F0aW9uQXJnc1wiLFwiTnVtQXBwQXJnc1wiLFwiQWNjb3VudHNcIixcIk51bUFjY291bnRzXCIsXCJBcHByb3ZhbFByb2dyYW1cIixcIkNsZWFyU3RhdGVQcm9ncmFtXCIsXCJSZWtleVRvXCIsXCJDb25maWdBc3NldFwiLFwiQ29uZmlnQXNzZXRUb3RhbFwiLFwiQ29uZmlnQXNzZXREZWNpbWFsc1wiLFwiQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuXCIsXCJDb25maWdBc3NldFVuaXROYW1lXCIsXCJDb25maWdBc3NldE5hbWVcIixcIkNvbmZpZ0Fzc2V0VVJMXCIsXCJDb25maWdBc3NldE1ldGFkYXRhSGFzaFwiLFwiQ29uZmlnQXNzZXRNYW5hZ2VyXCIsXCJDb25maWdBc3NldFJlc2VydmVcIixcIkNvbmZpZ0Fzc2V0RnJlZXplXCIsXCJDb25maWdBc3NldENsYXdiYWNrXCIsXCJGcmVlemVBc3NldFwiLFwiRnJlZXplQXNzZXRBY2NvdW50XCIsXCJGcmVlemVBc3NldEZyb3plblwiLFwiQXNzZXRzXCIsXCJOdW1Bc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTnVtQXBwbGljYXRpb25zXCIsXCJHbG9iYWxOdW1VaW50XCIsXCJHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkxvY2FsTnVtVWludFwiLFwiTG9jYWxOdW1CeXRlU2xpY2VcIixcIkV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJOb25wYXJ0aWNpcGF0aW9uXCIsXCJMb2dzXCIsXCJOdW1Mb2dzXCIsXCJDcmVhdGVkQXNzZXRJRFwiLFwiQ3JlYXRlZEFwcGxpY2F0aW9uSURcIixcIkxhc3RMb2dcIixcIlN0YXRlUHJvb2ZQS1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQlVVVVVCQkJVQkJCVVVVQlVVVUJCQlVCVVVCVUJVQkJCVVVVVUJCQkJCQkJCVUJVVVVVVVVVVVVVVUJVVVVCQlwiLFwiRG9jXCI6XCJmaWVsZCBGIG9mIGN1cnJlbnQgdHJhbnNhY3Rpb25cIixcIkRvY0V4dHJhXCI6XCJGaXJzdFZhbGlkVGltZSBjYXVzZXMgdGhlIHByb2dyYW0gdG8gZmFpbC4gVGhlIGZpZWxkIGlzIHJlc2VydmVkIGZvciBmdXR1cmUgdXNlLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjUwLFwiTmFtZVwiOlwiZ2xvYmFsXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJnbG9iYWwgZmllbGQgRlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGdsb2JhbCBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MSxcIk5hbWVcIjpcImd0eG5cIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJBcmdFbnVtXCI6W1wiU2VuZGVyXCIsXCJGZWVcIixcIkZpcnN0VmFsaWRcIixcIkZpcnN0VmFsaWRUaW1lXCIsXCJMYXN0VmFsaWRcIixcIk5vdGVcIixcIkxlYXNlXCIsXCJSZWNlaXZlclwiLFwiQW1vdW50XCIsXCJDbG9zZVJlbWFpbmRlclRvXCIsXCJWb3RlUEtcIixcIlNlbGVjdGlvblBLXCIsXCJWb3RlRmlyc3RcIixcIlZvdGVMYXN0XCIsXCJWb3RlS2V5RGlsdXRpb25cIixcIlR5cGVcIixcIlR5cGVFbnVtXCIsXCJYZmVyQXNzZXRcIixcIkFzc2V0QW1vdW50XCIsXCJBc3NldFNlbmRlclwiLFwiQXNzZXRSZWNlaXZlclwiLFwiQXNzZXRDbG9zZVRvXCIsXCJHcm91cEluZGV4XCIsXCJUeElEXCIsXCJBcHBsaWNhdGlvbklEXCIsXCJPbkNvbXBsZXRpb25cIixcIkFwcGxpY2F0aW9uQXJnc1wiLFwiTnVtQXBwQXJnc1wiLFwiQWNjb3VudHNcIixcIk51bUFjY291bnRzXCIsXCJBcHByb3ZhbFByb2dyYW1cIixcIkNsZWFyU3RhdGVQcm9ncmFtXCIsXCJSZWtleVRvXCIsXCJDb25maWdBc3NldFwiLFwiQ29uZmlnQXNzZXRUb3RhbFwiLFwiQ29uZmlnQXNzZXREZWNpbWFsc1wiLFwiQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuXCIsXCJDb25maWdBc3NldFVuaXROYW1lXCIsXCJDb25maWdBc3NldE5hbWVcIixcIkNvbmZpZ0Fzc2V0VVJMXCIsXCJDb25maWdBc3NldE1ldGFkYXRhSGFzaFwiLFwiQ29uZmlnQXNzZXRNYW5hZ2VyXCIsXCJDb25maWdBc3NldFJlc2VydmVcIixcIkNvbmZpZ0Fzc2V0RnJlZXplXCIsXCJDb25maWdBc3NldENsYXdiYWNrXCIsXCJGcmVlemVBc3NldFwiLFwiRnJlZXplQXNzZXRBY2NvdW50XCIsXCJGcmVlemVBc3NldEZyb3plblwiLFwiQXNzZXRzXCIsXCJOdW1Bc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTnVtQXBwbGljYXRpb25zXCIsXCJHbG9iYWxOdW1VaW50XCIsXCJHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkxvY2FsTnVtVWludFwiLFwiTG9jYWxOdW1CeXRlU2xpY2VcIixcIkV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJOb25wYXJ0aWNpcGF0aW9uXCIsXCJMb2dzXCIsXCJOdW1Mb2dzXCIsXCJDcmVhdGVkQXNzZXRJRFwiLFwiQ3JlYXRlZEFwcGxpY2F0aW9uSURcIixcIkxhc3RMb2dcIixcIlN0YXRlUHJvb2ZQS1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQlVVVVVCQkJVQkJCVVVVQlVVVUJCQlVCVVVCVUJVQkJCVVVVVUJCQkJCQkJCVUJVVVVVVVVVVVVVVUJVVVVCQlwiLFwiRG9jXCI6XCJmaWVsZCBGIG9mIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJmb3Igbm90ZXMgb24gdHJhbnNhY3Rpb24gZmllbGRzIGF2YWlsYWJsZSwgc2VlIGB0eG5gLiBJZiB0aGlzIHRyYW5zYWN0aW9uIGlzIF9pXyBpbiB0aGUgZ3JvdXAsIGBndHhuIGkgZmllbGRgIGlzIGVxdWl2YWxlbnQgdG8gYHR4biBmaWVsZGAuXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MixcIk5hbWVcIjpcImxvYWRcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIkl0aCBzY3JhdGNoIHNwYWNlIHZhbHVlLiBBbGwgc2NyYXRjaCBzcGFjZXMgYXJlIDAgYXQgcHJvZ3JhbSBzdGFydC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBwb3NpdGlvbiBpbiBzY3JhdGNoIHNwYWNlIHRvIGxvYWQgZnJvbX1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MyxcIk5hbWVcIjpcInN0b3JlXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJzdG9yZSBBIHRvIHRoZSBJdGggc2NyYXRjaCBzcGFjZVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHBvc2l0aW9uIGluIHNjcmF0Y2ggc3BhY2UgdG8gc3RvcmUgdG99XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTQsXCJOYW1lXCI6XCJ0eG5hXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjozLFwiQXJnRW51bVwiOltcIkFwcGxpY2F0aW9uQXJnc1wiLFwiQWNjb3VudHNcIixcIkFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJMb2dzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVQlwiLFwiRG9jXCI6XCJJdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgb2YgdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGFycmF5IGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjU1LFwiTmFtZVwiOlwiZ3R4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjQsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBmcm9tIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTYsXCJOYW1lXCI6XCJndHhuc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImZvciBub3RlcyBvbiB0cmFuc2FjdGlvbiBmaWVsZHMgYXZhaWxhYmxlLCBzZWUgYHR4bmAuIElmIHRvcCBvZiBzdGFjayBpcyBfaV8sIGBndHhucyBmaWVsZGAgaXMgZXF1aXZhbGVudCB0byBgZ3R4biBfaV8gZmllbGRgLiBndHhucyBleGlzdHMgc28gdGhhdCBfaV8gY2FuIGJlIGNhbGN1bGF0ZWQsIG9mdGVuIGJhc2VkIG9uIHRoZSBpbmRleCBvZiB0aGUgY3VycmVudCB0cmFuc2FjdGlvbi5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1NyxcIk5hbWVcIjpcImd0eG5zYVwiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiSXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTgsXCJOYW1lXCI6XCJnbG9hZFwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiSXRoIHNjcmF0Y2ggc3BhY2UgdmFsdWUgb2YgdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImBnbG9hZGAgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gaXMgYW4gQXBwbGljYXRpb25DYWxsIGFuZCBUIDwgR3JvdXBJbmRleC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHBvc2l0aW9uIGluIHNjcmF0Y2ggc3BhY2UgdG8gbG9hZCBmcm9tfVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjU5LFwiTmFtZVwiOlwiZ2xvYWRzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJJdGggc2NyYXRjaCBzcGFjZSB2YWx1ZSBvZiB0aGUgQXRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJEb2NFeHRyYVwiOlwiYGdsb2Fkc2AgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gaXMgYW4gQXBwbGljYXRpb25DYWxsIGFuZCBBIDwgR3JvdXBJbmRleC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBwb3NpdGlvbiBpbiBzY3JhdGNoIHNwYWNlIHRvIGxvYWQgZnJvbX1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo2MCxcIk5hbWVcIjpcImdhaWRcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIklEIG9mIHRoZSBhc3NldCBvciBhcHBsaWNhdGlvbiBjcmVhdGVkIGluIHRoZSBUdGggdHJhbnNhY3Rpb24gb2YgdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgZ2FpZGAgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gY3JlYXRlZCBhbiBhc3NldCBvciBhcHBsaWNhdGlvbiBhbmQgVCA8IEdyb3VwSW5kZXguXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjEsXCJOYW1lXCI6XCJnYWlkc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiSUQgb2YgdGhlIGFzc2V0IG9yIGFwcGxpY2F0aW9uIGNyZWF0ZWQgaW4gdGhlIEF0aCB0cmFuc2FjdGlvbiBvZiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImBnYWlkc2AgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gY3JlYXRlZCBhbiBhc3NldCBvciBhcHBsaWNhdGlvbiBhbmQgQSA8IEdyb3VwSW5kZXguXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjIsXCJOYW1lXCI6XCJsb2Fkc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQXRoIHNjcmF0Y2ggc3BhY2UgdmFsdWUuICBBbGwgc2NyYXRjaCBzcGFjZXMgYXJlIDAgYXQgcHJvZ3JhbSBzdGFydC5cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo2MyxcIk5hbWVcIjpcInN0b3Jlc1wiLFwiQXJnc1wiOlwiVS5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInN0b3JlIEIgdG8gdGhlIEF0aCBzY3JhdGNoIHNwYWNlXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjQsXCJOYW1lXCI6XCJibnpcIixcIkFyZ3NcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB0byBUQVJHRVQgaWYgdmFsdWUgQSBpcyBub3QgemVyb1wiLFwiRG9jRXh0cmFcIjpcIlRoZSBgYm56YCBpbnN0cnVjdGlvbiBvcGNvZGUgMHg0MCBpcyBmb2xsb3dlZCBieSB0d28gaW1tZWRpYXRlIGRhdGEgYnl0ZXMgd2hpY2ggYXJlIGEgaGlnaCBieXRlIGZpcnN0IGFuZCBsb3cgYnl0ZSBzZWNvbmQgd2hpY2ggdG9nZXRoZXIgZm9ybSBhIDE2IGJpdCBvZmZzZXQgd2hpY2ggdGhlIGluc3RydWN0aW9uIG1heSBicmFuY2ggdG8uIEZvciBhIGJueiBpbnN0cnVjdGlvbiBhdCBgcGNgLCBpZiB0aGUgbGFzdCBlbGVtZW50IG9mIHRoZSBzdGFjayBpcyBub3QgemVybyB0aGVuIGJyYW5jaCB0byBpbnN0cnVjdGlvbiBhdCBgcGMgKyAzICsgTmAsIGVsc2UgcHJvY2VlZCB0byBuZXh0IGluc3RydWN0aW9uIGF0IGBwYyArIDNgLiBCcmFuY2ggdGFyZ2V0cyBtdXN0IGJlIGFsaWduZWQgaW5zdHJ1Y3Rpb25zLiAoZS5nLiBCcmFuY2hpbmcgdG8gdGhlIHNlY29uZCBieXRlIG9mIGEgMiBieXRlIG9wIHdpbGwgYmUgcmVqZWN0ZWQuKSBTdGFydGluZyBhdCB2NCwgdGhlIG9mZnNldCBpcyB0cmVhdGVkIGFzIGEgc2lnbmVkIDE2IGJpdCBpbnRlZ2VyIGFsbG93aW5nIGZvciBiYWNrd2FyZCBicmFuY2hlcyBhbmQgbG9vcGluZy4gSW4gcHJpb3IgdmVyc2lvbiAodjEgdG8gdjMpLCBicmFuY2ggb2Zmc2V0cyBhcmUgbGltaXRlZCB0byBmb3J3YXJkIGJyYW5jaGVzIG9ubHksIDAtMHg3ZmZmLlxcXFxuXFxcXG5BdCB2MiBpdCBiZWNhbWUgYWxsb3dlZCB0byBicmFuY2ggdG8gdGhlIGVuZCBvZiB0aGUgcHJvZ3JhbSBleGFjdGx5IGFmdGVyIHRoZSBsYXN0IGluc3RydWN0aW9uOiBibnogdG8gYnl0ZSBOICh3aXRoIDAtaW5kZXhpbmcpIHdhcyBpbGxlZ2FsIGZvciBhIFRFQUwgcHJvZ3JhbSB3aXRoIE4gYnl0ZXMgYmVmb3JlIHYyLCBhbmQgaXMgbGVnYWwgYWZ0ZXIgaXQuIFRoaXMgY2hhbmdlIGVsaW1pbmF0ZXMgdGhlIG5lZWQgZm9yIGEgbGFzdCBpbnN0cnVjdGlvbiBvZiBuby1vcCBhcyBhIGJyYW5jaCB0YXJnZXQgYXQgdGhlIGVuZC4gKEJyYW5jaGluZyBiZXlvbmQgdGhlIGVuZC0taW4gb3RoZXIgd29yZHMsIHRvIGEgYnl0ZSBsYXJnZXIgdGhhbiBOLS1pcyBzdGlsbCBpbGxlZ2FsIGFuZCB3aWxsIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie2ludDE2IGJyYW5jaCBvZmZzZXQsIGJpZyBlbmRpYW59XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY1LFwiTmFtZVwiOlwiYnpcIixcIkFyZ3NcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB0byBUQVJHRVQgaWYgdmFsdWUgQSBpcyB6ZXJvXCIsXCJEb2NFeHRyYVwiOlwiU2VlIGBibnpgIGZvciBkZXRhaWxzIG9uIGhvdyBicmFuY2hlcyB3b3JrLiBgYnpgIGludmVydHMgdGhlIGJlaGF2aW9yIG9mIGBibnpgLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie2ludDE2IGJyYW5jaCBvZmZzZXQsIGJpZyBlbmRpYW59XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY2LFwiTmFtZVwiOlwiYlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiYnJhbmNoIHVuY29uZGl0aW9uYWxseSB0byBUQVJHRVRcIixcIkRvY0V4dHJhXCI6XCJTZWUgYGJuemAgZm9yIGRldGFpbHMgb24gaG93IGJyYW5jaGVzIHdvcmsuIGBiYCBhbHdheXMganVtcHMgdG8gdGhlIG9mZnNldC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcIntpbnQxNiBicmFuY2ggb2Zmc2V0LCBiaWcgZW5kaWFufVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo2NyxcIk5hbWVcIjpcInJldHVyblwiLFwiQXJnc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwidXNlIEEgYXMgc3VjY2VzcyB2YWx1ZTsgZW5kXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY4LFwiTmFtZVwiOlwiYXNzZXJ0XCIsXCJBcmdzXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJpbW1lZGlhdGVseSBmYWlsIHVubGVzcyBBIGlzIGEgbm9uLXplcm8gbnVtYmVyXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjcyLFwiTmFtZVwiOlwicG9wXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkaXNjYXJkIEFcIixcIkdyb3Vwc1wiOltcIkZsb3cgQ29udHJvbFwiXX0se1wiT3Bjb2RlXCI6NzMsXCJOYW1lXCI6XCJkdXBcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIi4uXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkdXBsaWNhdGUgQVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NCxcIk5hbWVcIjpcImR1cDJcIixcIkFyZ3NcIjpcIi4uXCIsXCJSZXR1cm5zXCI6XCIuLi4uXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkdXBsaWNhdGUgQSBhbmQgQlwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NSxcIk5hbWVcIjpcImRpZ1wiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiLi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIk50aCB2YWx1ZSBmcm9tIHRoZSB0b3Agb2YgdGhlIHN0YWNrLiBkaWcgMCBpcyBlcXVpdmFsZW50IHRvIGR1cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGRlcHRofVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NixcIk5hbWVcIjpcInN3YXBcIixcIkFyZ3NcIjpcIi4uXCIsXCJSZXR1cm5zXCI6XCIuLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwic3dhcHMgQSBhbmQgQiBvbiBzdGFja1wiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NyxcIk5hbWVcIjpcInNlbGVjdFwiLFwiQXJnc1wiOlwiLi5VXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJzZWxlY3RzIG9uZSBvZiB0d28gdmFsdWVzIGJhc2VkIG9uIHRvcC1vZi1zdGFjazogQiBpZiBDICE9IDAsIGVsc2UgQVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3OCxcIk5hbWVcIjpcImNvdmVyXCIsXCJBcmdzXCI6XCIuXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJyZW1vdmUgdG9wIG9mIHN0YWNrLCBhbmQgcGxhY2UgaXQgZGVlcGVyIGluIHRoZSBzdGFjayBzdWNoIHRoYXQgTiBlbGVtZW50cyBhcmUgYWJvdmUgaXQuIEZhaWxzIGlmIHN0YWNrIGRlcHRoIDw9IE4uXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggZGVwdGh9XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjc5LFwiTmFtZVwiOlwidW5jb3ZlclwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkRvY1wiOlwicmVtb3ZlIHRoZSB2YWx1ZSBhdCBkZXB0aCBOIGluIHRoZSBzdGFjayBhbmQgc2hpZnQgYWJvdmUgaXRlbXMgZG93biBzbyB0aGUgTnRoIGRlZXAgdmFsdWUgaXMgb24gdG9wIG9mIHRoZSBzdGFjay4gRmFpbHMgaWYgc3RhY2sgZGVwdGggPD0gTi5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBkZXB0aH1cIixcIkdyb3Vwc1wiOltcIkZsb3cgQ29udHJvbFwiXX0se1wiT3Bjb2RlXCI6ODAsXCJOYW1lXCI6XCJjb25jYXRcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJqb2luIEEgYW5kIEJcIixcIkRvY0V4dHJhXCI6XCJgY29uY2F0YCBmYWlscyBpZiB0aGUgcmVzdWx0IHdvdWxkIGJlIGdyZWF0ZXIgdGhhbiA0MDk2IGJ5dGVzLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODEsXCJOYW1lXCI6XCJzdWJzdHJpbmdcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcIkEgcmFuZ2Ugb2YgYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IFMgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgRS4gSWYgRSA8IFMsIG9yIGVpdGhlciBpcyBsYXJnZXIgdGhhbiB0aGUgYXJyYXkgbGVuZ3RoLCB0aGUgcHJvZ3JhbSBmYWlsc1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHN0YXJ0IHBvc2l0aW9ufSB7dWludDggZW5kIHBvc2l0aW9ufVwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBNYW5pcHVsYXRpb25cIl19LHtcIk9wY29kZVwiOjgyLFwiTmFtZVwiOlwic3Vic3RyaW5nM1wiLFwiQXJnc1wiOlwiQlVVXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHJhbmdlIG9mIGJ5dGVzIGZyb20gQSBzdGFydGluZyBhdCBCIHVwIHRvIGJ1dCBub3QgaW5jbHVkaW5nIEMuIElmIEMgPCBCLCBvciBlaXRoZXIgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4MyxcIk5hbWVcIjpcImdldGJpdFwiLFwiQXJnc1wiOlwiLlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkJ0aCBiaXQgb2YgKGJ5dGUtYXJyYXkgb3IgaW50ZWdlcikgQS5cIixcIkRvY0V4dHJhXCI6XCJzZWUgZXhwbGFuYXRpb24gb2YgYml0IG9yZGVyaW5nIGluIHNldGJpdFwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODQsXCJOYW1lXCI6XCJzZXRiaXRcIixcIkFyZ3NcIjpcIi5VVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQ29weSBvZiAoYnl0ZS1hcnJheSBvciBpbnRlZ2VyKSBBLCB3aXRoIHRoZSBCdGggYml0IHNldCB0byAoMCBvciAxKSBDXCIsXCJEb2NFeHRyYVwiOlwiV2hlbiBBIGlzIGEgdWludDY0LCBpbmRleCAwIGlzIHRoZSBsZWFzdCBzaWduaWZpY2FudCBiaXQuIFNldHRpbmcgYml0IDMgdG8gMSBvbiB0aGUgaW50ZWdlciAwIHlpZWxkcyA4LCBvciAyXjMuIFdoZW4gQSBpcyBhIGJ5dGUgYXJyYXksIGluZGV4IDAgaXMgdGhlIGxlZnRtb3N0IGJpdCBvZiB0aGUgbGVmdG1vc3QgYnl0ZS4gU2V0dGluZyBiaXRzIDAgdGhyb3VnaCAxMSB0byAxIGluIGEgNC1ieXRlLWFycmF5IG9mIDBzIHlpZWxkcyB0aGUgYnl0ZSBhcnJheSAweGZmZjAwMDAwLiBTZXR0aW5nIGJpdCAzIHRvIDEgb24gdGhlIDEtYnl0ZS1hcnJheSAweDAwIHlpZWxkcyB0aGUgYnl0ZSBhcnJheSAweDEwLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODUsXCJOYW1lXCI6XCJnZXRieXRlXCIsXCJBcmdzXCI6XCJCVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQnRoIGJ5dGUgb2YgQSwgYXMgYW4gaW50ZWdlclwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODYsXCJOYW1lXCI6XCJzZXRieXRlXCIsXCJBcmdzXCI6XCJCVVVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkNvcHkgb2YgQSB3aXRoIHRoZSBCdGggYnl0ZSBzZXQgdG8gc21hbGwgaW50ZWdlciAoYmV0d2VlbiAwLi4yNTUpIENcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjg3LFwiTmFtZVwiOlwiZXh0cmFjdFwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiQSByYW5nZSBvZiBieXRlcyBmcm9tIEEgc3RhcnRpbmcgYXQgUyB1cCB0byBidXQgbm90IGluY2x1ZGluZyBTK0wuIElmIEwgaXMgMCwgdGhlbiBleHRyYWN0IHRvIHRoZSBlbmQgb2YgdGhlIHN0cmluZy4gSWYgUyBvciBTK0wgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBzdGFydCBwb3NpdGlvbn0ge3VpbnQ4IGxlbmd0aH1cIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4OCxcIk5hbWVcIjpcImV4dHJhY3QzXCIsXCJBcmdzXCI6XCJCVVVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgcmFuZ2Ugb2YgYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IEIgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgQitDLiBJZiBCK0MgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4OSxcIk5hbWVcIjpcImV4dHJhY3RfdWludDE2XCIsXCJBcmdzXCI6XCJCVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSB1aW50MTYgZm9ybWVkIGZyb20gYSByYW5nZSBvZiBiaWctZW5kaWFuIGJ5dGVzIGZyb20gQSBzdGFydGluZyBhdCBCIHVwIHRvIGJ1dCBub3QgaW5jbHVkaW5nIEIrMi4gSWYgQisyIGlzIGxhcmdlciB0aGFuIHRoZSBhcnJheSBsZW5ndGgsIHRoZSBwcm9ncmFtIGZhaWxzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IE1hbmlwdWxhdGlvblwiXX0se1wiT3Bjb2RlXCI6OTAsXCJOYW1lXCI6XCJleHRyYWN0X3VpbnQzMlwiLFwiQXJnc1wiOlwiQlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgdWludDMyIGZvcm1lZCBmcm9tIGEgcmFuZ2Ugb2YgYmlnLWVuZGlhbiBieXRlcyBmcm9tIEEgc3RhcnRpbmcgYXQgQiB1cCB0byBidXQgbm90IGluY2x1ZGluZyBCKzQuIElmIEIrNCBpcyBsYXJnZXIgdGhhbiB0aGUgYXJyYXkgbGVuZ3RoLCB0aGUgcHJvZ3JhbSBmYWlsc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBNYW5pcHVsYXRpb25cIl19LHtcIk9wY29kZVwiOjkxLFwiTmFtZVwiOlwiZXh0cmFjdF91aW50NjRcIixcIkFyZ3NcIjpcIkJVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHVpbnQ2NCBmb3JtZWQgZnJvbSBhIHJhbmdlIG9mIGJpZy1lbmRpYW4gYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IEIgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgQis4LiBJZiBCKzggaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo5NixcIk5hbWVcIjpcImJhbGFuY2VcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImdldCBiYWxhbmNlIGZvciBhY2NvdW50IEEsIGluIG1pY3JvYWxnb3MuIFRoZSBiYWxhbmNlIGlzIG9ic2VydmVkIGFmdGVyIHRoZSBlZmZlY3RzIG9mIHByZXZpb3VzIHRyYW5zYWN0aW9ucyBpbiB0aGUgZ3JvdXAsIGFuZCBhZnRlciB0aGUgZmVlIGZvciB0aGUgY3VycmVudCB0cmFuc2FjdGlvbiBpcyBkZWR1Y3RlZC5cIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5BY2NvdW50cyBvZmZzZXQgKG9yLCBzaW5jZSB2NCwgYW4gX2F2YWlsYWJsZV8gYWNjb3VudCBhZGRyZXNzKSwgX2F2YWlsYWJsZV8gYXBwbGljYXRpb24gaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0KS4gUmV0dXJuOiB2YWx1ZS5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTcsXCJOYW1lXCI6XCJhcHBfb3B0ZWRfaW5cIixcIkFyZ3NcIjpcIi5VXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIGFjY291bnQgQSBpcyBvcHRlZCBpbiB0byBhcHBsaWNhdGlvbiBCLCBlbHNlIDBcIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5BY2NvdW50cyBvZmZzZXQgKG9yLCBzaW5jZSB2NCwgYW4gX2F2YWlsYWJsZV8gYWNjb3VudCBhZGRyZXNzKSwgX2F2YWlsYWJsZV8gYXBwbGljYXRpb24gaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0KS4gUmV0dXJuOiAxIGlmIG9wdGVkIGluIGFuZCAwIG90aGVyd2lzZS5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTgsXCJOYW1lXCI6XCJhcHBfbG9jYWxfZ2V0XCIsXCJBcmdzXCI6XCIuQlwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwibG9jYWwgc3RhdGUgb2YgdGhlIGtleSBCIGluIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uIGluIGFjY291bnQgQVwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkFjY291bnRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhY2NvdW50IGFkZHJlc3MpLCBzdGF0ZSBrZXkuIFJldHVybjogdmFsdWUuIFRoZSB2YWx1ZSBpcyB6ZXJvIChvZiB0eXBlIHVpbnQ2NCkgaWYgdGhlIGtleSBkb2VzIG5vdCBleGlzdC5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTksXCJOYW1lXCI6XCJhcHBfbG9jYWxfZ2V0X2V4XCIsXCJBcmdzXCI6XCIuVUJcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJYIGlzIHRoZSBsb2NhbCBzdGF0ZSBvZiBhcHBsaWNhdGlvbiBCLCBrZXkgQyBpbiBhY2NvdW50IEEuIFkgaXMgMSBpZiBrZXkgZXhpc3RlZCwgZWxzZSAwXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIF9hdmFpbGFibGVfIGFwcGxpY2F0aW9uIGlkIChvciwgc2luY2UgdjQsIGEgVHhuLkZvcmVpZ25BcHBzIG9mZnNldCksIHN0YXRlIGtleS4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAodG9wIG9mIHRoZSBzdGFjaywgMSBpZiB0aGUgYXBwbGljYXRpb24gYW5kIGtleSBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLiBUaGUgdmFsdWUgaXMgemVybyAob2YgdHlwZSB1aW50NjQpIGlmIHRoZSBrZXkgZG9lcyBub3QgZXhpc3QuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMCxcIk5hbWVcIjpcImFwcF9nbG9iYWxfZ2V0XCIsXCJBcmdzXCI6XCJCXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJnbG9iYWwgc3RhdGUgb2YgdGhlIGtleSBBIGluIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBzdGF0ZSBrZXkuIFJldHVybjogdmFsdWUuIFRoZSB2YWx1ZSBpcyB6ZXJvIChvZiB0eXBlIHVpbnQ2NCkgaWYgdGhlIGtleSBkb2VzIG5vdCBleGlzdC5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6MTAxLFwiTmFtZVwiOlwiYXBwX2dsb2JhbF9nZXRfZXhcIixcIkFyZ3NcIjpcIlVCXCIsXCJSZXR1cm5zXCI6XCIuVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiWCBpcyB0aGUgZ2xvYmFsIHN0YXRlIG9mIGFwcGxpY2F0aW9uIEEsIGtleSBCLiBZIGlzIDEgaWYga2V5IGV4aXN0ZWQsIGVsc2UgMFwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkZvcmVpZ25BcHBzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhcHBsaWNhdGlvbiBpZCksIHN0YXRlIGtleS4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAodG9wIG9mIHRoZSBzdGFjaywgMSBpZiB0aGUgYXBwbGljYXRpb24gYW5kIGtleSBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLiBUaGUgdmFsdWUgaXMgemVybyAob2YgdHlwZSB1aW50NjQpIGlmIHRoZSBrZXkgZG9lcyBub3QgZXhpc3QuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMixcIk5hbWVcIjpcImFwcF9sb2NhbF9wdXRcIixcIkFyZ3NcIjpcIi5CLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwid3JpdGUgQyB0byBrZXkgQiBpbiBhY2NvdW50IEFcXCdzIGxvY2FsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIHN0YXRlIGtleSwgdmFsdWUuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMyxcIk5hbWVcIjpcImFwcF9nbG9iYWxfcHV0XCIsXCJBcmdzXCI6XCJCLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwid3JpdGUgQiB0byBrZXkgQSBpbiB0aGUgZ2xvYmFsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwNCxcIk5hbWVcIjpcImFwcF9sb2NhbF9kZWxcIixcIkFyZ3NcIjpcIi5CXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkZWxldGUga2V5IEIgZnJvbSBhY2NvdW50IEFcXCdzIGxvY2FsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIHN0YXRlIGtleS5cXFxcblxcXFxuRGVsZXRpbmcgYSBrZXkgd2hpY2ggaXMgYWxyZWFkeSBhYnNlbnQgaGFzIG5vIGVmZmVjdCBvbiB0aGUgYXBwbGljYXRpb24gbG9jYWwgc3RhdGUuIChJbiBwYXJ0aWN1bGFyLCBpdCBkb2VzIF9ub3RfIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMDUsXCJOYW1lXCI6XCJhcHBfZ2xvYmFsX2RlbFwiLFwiQXJnc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZGVsZXRlIGtleSBBIGZyb20gdGhlIGdsb2JhbCBzdGF0ZSBvZiB0aGUgY3VycmVudCBhcHBsaWNhdGlvblwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogc3RhdGUga2V5LlxcXFxuXFxcXG5EZWxldGluZyBhIGtleSB3aGljaCBpcyBhbHJlYWR5IGFic2VudCBoYXMgbm8gZWZmZWN0IG9uIHRoZSBhcHBsaWNhdGlvbiBnbG9iYWwgc3RhdGUuIChJbiBwYXJ0aWN1bGFyLCBpdCBkb2VzIF9ub3RfIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMTIsXCJOYW1lXCI6XCJhc3NldF9ob2xkaW5nX2dldFwiLFwiQXJnc1wiOlwiLlVcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIkFzc2V0QmFsYW5jZVwiLFwiQXNzZXRGcm96ZW5cIl0sXCJBcmdFbnVtVHlwZXNcIjpcIlVVXCIsXCJEb2NcIjpcIlggaXMgZmllbGQgRiBmcm9tIGFjY291bnQgQVxcJ3MgaG9sZGluZyBvZiBhc3NldCBCLiBZIGlzIDEgaWYgQSBpcyBvcHRlZCBpbnRvIEIsIGVsc2UgMFwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkFjY291bnRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhZGRyZXNzKSwgYXNzZXQgaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFzc2V0cyBvZmZzZXQpLiBSZXR1cm46IGRpZF9leGlzdCBmbGFnICgxIGlmIHRoZSBhc3NldCBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGFzc2V0IGhvbGRpbmcgZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjExMyxcIk5hbWVcIjpcImFzc2V0X3BhcmFtc19nZXRcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIkFzc2V0VG90YWxcIixcIkFzc2V0RGVjaW1hbHNcIixcIkFzc2V0RGVmYXVsdEZyb3plblwiLFwiQXNzZXRVbml0TmFtZVwiLFwiQXNzZXROYW1lXCIsXCJBc3NldFVSTFwiLFwiQXNzZXRNZXRhZGF0YUhhc2hcIixcIkFzc2V0TWFuYWdlclwiLFwiQXNzZXRSZXNlcnZlXCIsXCJBc3NldEZyZWV6ZVwiLFwiQXNzZXRDbGF3YmFja1wiLFwiQXNzZXRDcmVhdG9yXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJVVVVCQkJCQkJCQkJcIixcIkRvY1wiOlwiWCBpcyBmaWVsZCBGIGZyb20gYXNzZXQgQS4gWSBpcyAxIGlmIEEgZXhpc3RzLCBlbHNlIDBcIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5Gb3JlaWduQXNzZXRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhc3NldCBpZC4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAoMSBpZiB0aGUgYXNzZXQgZXhpc3RlZCBhbmQgMCBvdGhlcndpc2UpLCB2YWx1ZS5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhc3NldCBwYXJhbXMgZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjExNCxcIk5hbWVcIjpcImFwcF9wYXJhbXNfZ2V0XCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBBcHByb3ZhbFByb2dyYW1cIixcIkFwcENsZWFyU3RhdGVQcm9ncmFtXCIsXCJBcHBHbG9iYWxOdW1VaW50XCIsXCJBcHBHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkFwcExvY2FsTnVtVWludFwiLFwiQXBwTG9jYWxOdW1CeXRlU2xpY2VcIixcIkFwcEV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJBcHBDcmVhdG9yXCIsXCJBcHBBZGRyZXNzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVVVVVQkJcIixcIkRvY1wiOlwiWCBpcyBmaWVsZCBGIGZyb20gYXBwIEEuIFkgaXMgMSBpZiBBIGV4aXN0cywgZWxzZSAwXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0IG9yIGFuIF9hdmFpbGFibGVfIGFwcCBpZC4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAoMSBpZiB0aGUgYXBwbGljYXRpb24gZXhpc3RlZCBhbmQgMCBvdGhlcndpc2UpLCB2YWx1ZS5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhcHAgcGFyYW1zIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMTUsXCJOYW1lXCI6XCJhY2N0X3BhcmFtc19nZXRcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJYIGlzIGZpZWxkIEYgZnJvbSBhY2NvdW50IEEuIFkgaXMgMSBpZiBBIG93bnMgcG9zaXRpdmUgYWxnb3MsIGVsc2UgMFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGFjY291bnQgcGFyYW1zIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMjAsXCJOYW1lXCI6XCJtaW5fYmFsYW5jZVwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZ2V0IG1pbmltdW0gcmVxdWlyZWQgYmFsYW5jZSBmb3IgYWNjb3VudCBBLCBpbiBtaWNyb2FsZ29zLiBSZXF1aXJlZCBiYWxhbmNlIGlzIGFmZmVjdGVkIGJ5IFtBU0FdKGh0dHBzOi8vZGV2ZWxvcGVyLmFsZ29yYW5kLm9yZy9kb2NzL2ZlYXR1cmVzL2FzYS8jYXNzZXRzLW92ZXJ2aWV3KSBhbmQgW0FwcF0oaHR0cHM6Ly9kZXZlbG9wZXIuYWxnb3JhbmQub3JnL2RvY3MvZmVhdHVyZXMvYXNjMS9zdGF0ZWZ1bC8jbWluaW11bS1iYWxhbmNlLXJlcXVpcmVtZW50LWZvci1hLXNtYXJ0LWNvbnRyYWN0KSB1c2FnZS4gV2hlbiBjcmVhdGluZyBvciBvcHRpbmcgaW50byBhbiBhcHAsIHRoZSBtaW5pbXVtIGJhbGFuY2UgZ3Jvd3MgYmVmb3JlIHRoZSBhcHAgY29kZSBydW5zLCB0aGVyZWZvcmUgdGhlIGluY3JlYXNlIGlzIHZpc2libGUgdGhlcmUuIFdoZW4gZGVsZXRpbmcgb3IgY2xvc2luZyBvdXQsIHRoZSBtaW5pbXVtIGJhbGFuY2UgZGVjcmVhc2VzIGFmdGVyIHRoZSBhcHAgZXhlY3V0ZXMuXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIF9hdmFpbGFibGVfIGFwcGxpY2F0aW9uIGlkIChvciwgc2luY2UgdjQsIGEgVHhuLkZvcmVpZ25BcHBzIG9mZnNldCkuIFJldHVybjogdmFsdWUuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEyOCxcIk5hbWVcIjpcInB1c2hieXRlc1wiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MCxcIkRvY1wiOlwiaW1tZWRpYXRlIEJZVEVTXCIsXCJEb2NFeHRyYVwiOlwicHVzaGJ5dGVzIGFyZ3MgYXJlIG5vdCBhZGRlZCB0byB0aGUgYnl0ZWNibG9jayBkdXJpbmcgYXNzZW1ibHkgcHJvY2Vzc2VzXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dmFydWludCBsZW5ndGh9IHtieXRlc31cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxMjksXCJOYW1lXCI6XCJwdXNoaW50XCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjowLFwiRG9jXCI6XCJpbW1lZGlhdGUgVUlOVFwiLFwiRG9jRXh0cmFcIjpcInB1c2hpbnQgYXJncyBhcmUgbm90IGFkZGVkIHRvIHRoZSBpbnRjYmxvY2sgZHVyaW5nIGFzc2VtYmx5IHByb2Nlc3Nlc1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgaW50fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjEzNixcIk5hbWVcIjpcImNhbGxzdWJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB1bmNvbmRpdGlvbmFsbHkgdG8gVEFSR0VULCBzYXZpbmcgdGhlIG5leHQgaW5zdHJ1Y3Rpb24gb24gdGhlIGNhbGwgc3RhY2tcIixcIkRvY0V4dHJhXCI6XCJUaGUgY2FsbCBzdGFjayBpcyBzZXBhcmF0ZSBmcm9tIHRoZSBkYXRhIHN0YWNrLiBPbmx5IGBjYWxsc3ViYCBhbmQgYHJldHN1YmAgbWFuaXB1bGF0ZSBpdC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcIntpbnQxNiBicmFuY2ggb2Zmc2V0LCBiaWcgZW5kaWFufVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjoxMzcsXCJOYW1lXCI6XCJyZXRzdWJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInBvcCB0aGUgdG9wIGluc3RydWN0aW9uIGZyb20gdGhlIGNhbGwgc3RhY2sgYW5kIGJyYW5jaCB0byBpdFwiLFwiRG9jRXh0cmFcIjpcIlRoZSBjYWxsIHN0YWNrIGlzIHNlcGFyYXRlIGZyb20gdGhlIGRhdGEgc3RhY2suIE9ubHkgYGNhbGxzdWJgIGFuZCBgcmV0c3ViYCBtYW5pcHVsYXRlIGl0LlwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjoxNDQsXCJOYW1lXCI6XCJzaGxcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIDJeQiwgbW9kdWxvIDJeNjRcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NSxcIk5hbWVcIjpcInNoclwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgZGl2aWRlZCBieSAyXkJcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NixcIk5hbWVcIjpcInNxcnRcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjo0LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIlRoZSBsYXJnZXN0IGludGVnZXIgSSBzdWNoIHRoYXQgSV4yIDw9IEFcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NyxcIk5hbWVcIjpcImJpdGxlblwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiVGhlIGhpZ2hlc3Qgc2V0IGJpdCBpbiBBLiBJZiBBIGlzIGEgYnl0ZS1hcnJheSwgaXQgaXMgaW50ZXJwcmV0ZWQgYXMgYSBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXIuIGJpdGxlbiBvZiAwIGlzIDAsIGJpdGxlbiBvZiA4IGlzIDRcIixcIkRvY0V4dHJhXCI6XCJiaXRsZW4gaW50ZXJwcmV0cyBhcnJheXMgYXMgYmlnLWVuZGlhbiBpbnRlZ2VycywgdW5saWtlIHNldGJpdC9nZXRiaXRcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0OCxcIk5hbWVcIjpcImV4cFwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgcmFpc2VkIHRvIHRoZSBCdGggcG93ZXIuIEZhaWwgaWYgQSA9PSBCID09IDAgYW5kIG9uIG92ZXJmbG93XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNDksXCJOYW1lXCI6XCJleHB3XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVVcIixcIkNvc3RcIjoxMCxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHJhaXNlZCB0byB0aGUgQnRoIHBvd2VyIGFzIGEgMTI4LWJpdCByZXN1bHQgaW4gdHdvIHVpbnQ2NHMuIFggaXMgdGhlIGhpZ2ggNjQgYml0cywgWSBpcyB0aGUgbG93LiBGYWlsIGlmIEEgPT0gQiA9PSAwIG9yIGlmIHRoZSByZXN1bHRzIGV4Y2VlZHMgMl4xMjgtMVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTUwLFwiTmFtZVwiOlwiYnNxcnRcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo0MCxcIlNpemVcIjoxLFwiRG9jXCI6XCJUaGUgbGFyZ2VzdCBpbnRlZ2VyIEkgc3VjaCB0aGF0IEleMiA8PSBBLiBBIGFuZCBJIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE1MSxcIk5hbWVcIjpcImRpdndcIixcIkFyZ3NcIjpcIlVVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSxCIC8gQy4gRmFpbCBpZiBDID09IDAgb3IgaWYgcmVzdWx0IG92ZXJmbG93cy5cIixcIkRvY0V4dHJhXCI6XCJUaGUgbm90YXRpb24gQSxCIGluZGljYXRlcyB0aGF0IEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGEgdWludDEyOCB2YWx1ZSwgd2l0aCBBIGFzIHRoZSBoaWdoIHVpbnQ2NCBhbmQgQiB0aGUgbG93LlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYwLFwiTmFtZVwiOlwiYitcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MTAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBwbHVzIEIuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYxLFwiTmFtZVwiOlwiYi1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MTAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtaW51cyBCLiBBIGFuZCBCIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzLiBGYWlsIG9uIHVuZGVyZmxvdy5cIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYyLFwiTmFtZVwiOlwiYi9cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBkaXZpZGVkIGJ5IEIgKHRydW5jYXRlZCBkaXZpc2lvbikuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnMuIEZhaWwgaWYgQiBpcyB6ZXJvLlwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjMsXCJOYW1lXCI6XCJiKlwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoyMCxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnMuXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2NCxcIk5hbWVcIjpcImI8XCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiMSBpZiBBIGlzIGxlc3MgdGhhbiBCLCBlbHNlIDAuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTY1LFwiTmFtZVwiOlwiYj5cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZ3JlYXRlciB0aGFuIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjYsXCJOYW1lXCI6XCJiPD1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjcsXCJOYW1lXCI6XCJiPj1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjgsXCJOYW1lXCI6XCJiPT1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZXF1YWwgdG8gQiwgZWxzZSAwLiBBIGFuZCBCIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2OSxcIk5hbWVcIjpcImIhPVwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIjAgaWYgQSBpcyBlcXVhbCB0byBCLCBlbHNlIDEuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTcwLFwiTmFtZVwiOlwiYiVcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtb2R1bG8gQi4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vycy4gRmFpbCBpZiBCIGlzIHplcm8uXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE3MSxcIk5hbWVcIjpcImJ8XCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjYsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLW9yIEIuIEEgYW5kIEIgYXJlIHplcm8tbGVmdCBleHRlbmRlZCB0byB0aGUgZ3JlYXRlciBvZiB0aGVpciBsZW5ndGhzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IExvZ2ljXCJdfSx7XCJPcGNvZGVcIjoxNzIsXCJOYW1lXCI6XCJiJlwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo2LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgYml0d2lzZS1hbmQgQi4gQSBhbmQgQiBhcmUgemVyby1sZWZ0IGV4dGVuZGVkIHRvIHRoZSBncmVhdGVyIG9mIHRoZWlyIGxlbmd0aHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTG9naWNcIl19LHtcIk9wY29kZVwiOjE3MyxcIk5hbWVcIjpcImJeXCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjYsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLXhvciBCLiBBIGFuZCBCIGFyZSB6ZXJvLWxlZnQgZXh0ZW5kZWQgdG8gdGhlIGdyZWF0ZXIgb2YgdGhlaXIgbGVuZ3Roc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBMb2dpY1wiXX0se1wiT3Bjb2RlXCI6MTc0LFwiTmFtZVwiOlwiYn5cIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo0LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgd2l0aCBhbGwgYml0cyBpbnZlcnRlZFwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBMb2dpY1wiXX0se1wiT3Bjb2RlXCI6MTc1LFwiTmFtZVwiOlwiYnplcm9cIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInplcm8gZmlsbGVkIGJ5dGUtYXJyYXkgb2YgbGVuZ3RoIEFcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxNzYsXCJOYW1lXCI6XCJsb2dcIixcIkFyZ3NcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIndyaXRlIEEgdG8gbG9nIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwiYGxvZ2AgZmFpbHMgaWYgY2FsbGVkIG1vcmUgdGhhbiBNYXhMb2dDYWxscyB0aW1lcyBpbiBhIHByb2dyYW0sIG9yIGlmIHRoZSBzdW0gb2YgbG9nZ2VkIGJ5dGVzIGV4Y2VlZHMgMTAyNCBieXRlcy5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6MTc3LFwiTmFtZVwiOlwiaXR4bl9iZWdpblwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiYmVnaW4gcHJlcGFyYXRpb24gb2YgYSBuZXcgaW5uZXIgdHJhbnNhY3Rpb24gaW4gYSBuZXcgdHJhbnNhY3Rpb24gZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgaXR4bl9iZWdpbmAgaW5pdGlhbGl6ZXMgU2VuZGVyIHRvIHRoZSBhcHBsaWNhdGlvbiBhZGRyZXNzOyBGZWUgdG8gdGhlIG1pbmltdW0gYWxsb3dhYmxlLCB0YWtpbmcgaW50byBhY2NvdW50IE1pblR4bkZlZSBhbmQgY3JlZGl0IGZyb20gb3ZlcnBheWluZyBpbiBlYXJsaWVyIHRyYW5zYWN0aW9uczsgRmlyc3RWYWxpZC9MYXN0VmFsaWQgdG8gdGhlIHZhbHVlcyBpbiB0aGUgaW52b2tpbmcgdHJhbnNhY3Rpb24sIGFuZCBhbGwgb3RoZXIgZmllbGRzIHRvIHplcm8gb3IgZW1wdHkgdmFsdWVzLlwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxNzgsXCJOYW1lXCI6XCJpdHhuX2ZpZWxkXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIlNlbmRlclwiLFwiRmVlXCIsXCJGaXJzdFZhbGlkXCIsXCJGaXJzdFZhbGlkVGltZVwiLFwiTGFzdFZhbGlkXCIsXCJOb3RlXCIsXCJMZWFzZVwiLFwiUmVjZWl2ZXJcIixcIkFtb3VudFwiLFwiQ2xvc2VSZW1haW5kZXJUb1wiLFwiVm90ZVBLXCIsXCJTZWxlY3Rpb25QS1wiLFwiVm90ZUZpcnN0XCIsXCJWb3RlTGFzdFwiLFwiVm90ZUtleURpbHV0aW9uXCIsXCJUeXBlXCIsXCJUeXBlRW51bVwiLFwiWGZlckFzc2V0XCIsXCJBc3NldEFtb3VudFwiLFwiQXNzZXRTZW5kZXJcIixcIkFzc2V0UmVjZWl2ZXJcIixcIkFzc2V0Q2xvc2VUb1wiLFwiR3JvdXBJbmRleFwiLFwiVHhJRFwiLFwiQXBwbGljYXRpb25JRFwiLFwiT25Db21wbGV0aW9uXCIsXCJBcHBsaWNhdGlvbkFyZ3NcIixcIk51bUFwcEFyZ3NcIixcIkFjY291bnRzXCIsXCJOdW1BY2NvdW50c1wiLFwiQXBwcm92YWxQcm9ncmFtXCIsXCJDbGVhclN0YXRlUHJvZ3JhbVwiLFwiUmVrZXlUb1wiLFwiQ29uZmlnQXNzZXRcIixcIkNvbmZpZ0Fzc2V0VG90YWxcIixcIkNvbmZpZ0Fzc2V0RGVjaW1hbHNcIixcIkNvbmZpZ0Fzc2V0RGVmYXVsdEZyb3plblwiLFwiQ29uZmlnQXNzZXRVbml0TmFtZVwiLFwiQ29uZmlnQXNzZXROYW1lXCIsXCJDb25maWdBc3NldFVSTFwiLFwiQ29uZmlnQXNzZXRNZXRhZGF0YUhhc2hcIixcIkNvbmZpZ0Fzc2V0TWFuYWdlclwiLFwiQ29uZmlnQXNzZXRSZXNlcnZlXCIsXCJDb25maWdBc3NldEZyZWV6ZVwiLFwiQ29uZmlnQXNzZXRDbGF3YmFja1wiLFwiRnJlZXplQXNzZXRcIixcIkZyZWV6ZUFzc2V0QWNjb3VudFwiLFwiRnJlZXplQXNzZXRGcm96ZW5cIixcIkFzc2V0c1wiLFwiTnVtQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIk51bUFwcGxpY2F0aW9uc1wiLFwiR2xvYmFsTnVtVWludFwiLFwiR2xvYmFsTnVtQnl0ZVNsaWNlXCIsXCJMb2NhbE51bVVpbnRcIixcIkxvY2FsTnVtQnl0ZVNsaWNlXCIsXCJFeHRyYVByb2dyYW1QYWdlc1wiLFwiTm9ucGFydGljaXBhdGlvblwiLFwiTG9nc1wiLFwiTnVtTG9nc1wiLFwiQ3JlYXRlZEFzc2V0SURcIixcIkNyZWF0ZWRBcHBsaWNhdGlvbklEXCIsXCJMYXN0TG9nXCIsXCJTdGF0ZVByb29mUEtcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJVVVVVQkJCVUJCQlVVVUJVVVVCQkJVQlVVQlVCVUJCQlVVVVVCQkJCQkJCQlVCVVVVVVVVVVVVVVVCVVVVQkJcIixcIkRvY1wiOlwic2V0IGZpZWxkIEYgb2YgdGhlIGN1cnJlbnQgaW5uZXIgdHJhbnNhY3Rpb24gdG8gQVwiLFwiRG9jRXh0cmFcIjpcImBpdHhuX2ZpZWxkYCBmYWlscyBpZiBBIGlzIG9mIHRoZSB3cm9uZyB0eXBlIGZvciBGLCBpbmNsdWRpbmcgYSBieXRlIGFycmF5IG9mIHRoZSB3cm9uZyBzaXplIGZvciB1c2UgYXMgYW4gYWRkcmVzcyB3aGVuIEYgaXMgYW4gYWRkcmVzcyBmaWVsZC4gYGl0eG5fZmllbGRgIGFsc28gZmFpbHMgaWYgQSBpcyBhbiBhY2NvdW50LCBhc3NldCwgb3IgYXBwIHRoYXQgaXMgbm90IF9hdmFpbGFibGVfLCBvciBhbiBhdHRlbXB0IGlzIG1hZGUgZXh0ZW5kIGFuIGFycmF5IGZpZWxkIGJleW9uZCB0aGUgbGltaXQgaW1wb3NlZCBieSBjb25zZW5zdXMgcGFyYW1ldGVycy4gKEFkZHJlc3NlcyBzZXQgaW50byBhc3NldCBwYXJhbXMgb2YgYWNmZyB0cmFuc2FjdGlvbnMgbmVlZCBub3QgYmUgX2F2YWlsYWJsZV8uKVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxNzksXCJOYW1lXCI6XCJpdHhuX3N1Ym1pdFwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZXhlY3V0ZSB0aGUgY3VycmVudCBpbm5lciB0cmFuc2FjdGlvbiBncm91cC4gRmFpbCBpZiBleGVjdXRpbmcgdGhpcyBncm91cCB3b3VsZCBleGNlZWQgdGhlIGlubmVyIHRyYW5zYWN0aW9uIGxpbWl0LCBvciBpZiBhbnkgdHJhbnNhY3Rpb24gaW4gdGhlIGdyb3VwIGZhaWxzLlwiLFwiRG9jRXh0cmFcIjpcImBpdHhuX3N1Ym1pdGAgcmVzZXRzIHRoZSBjdXJyZW50IHRyYW5zYWN0aW9uIHNvIHRoYXQgaXQgY2FuIG5vdCBiZSByZXN1Ym1pdHRlZC4gQSBuZXcgYGl0eG5fYmVnaW5gIGlzIHJlcXVpcmVkIHRvIHByZXBhcmUgYW5vdGhlciBpbm5lciB0cmFuc2FjdGlvbi5cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTgwLFwiTmFtZVwiOlwiaXR4blwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIGxhc3QgaW5uZXIgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTgxLFwiTmFtZVwiOlwiaXR4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBvZiB0aGUgbGFzdCBpbm5lciB0cmFuc2FjdGlvblwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJJbm5lciBUcmFuc2FjdGlvbnNcIl19LHtcIk9wY29kZVwiOjE4MixcIk5hbWVcIjpcIml0eG5fbmV4dFwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiYmVnaW4gcHJlcGFyYXRpb24gb2YgYSBuZXcgaW5uZXIgdHJhbnNhY3Rpb24gaW4gdGhlIHNhbWUgdHJhbnNhY3Rpb24gZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgaXR4bl9uZXh0YCBpbml0aWFsaXplcyB0aGUgdHJhbnNhY3Rpb24gZXhhY3RseSBhcyBgaXR4bl9iZWdpbmAgZG9lc1wiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxODMsXCJOYW1lXCI6XCJnaXR4blwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgbGFzdCBpbm5lciBncm91cCBzdWJtaXR0ZWRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxODQsXCJOYW1lXCI6XCJnaXR4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjQsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBmcm9tIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGxhc3QgaW5uZXIgZ3JvdXAgc3VibWl0dGVkXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGFycmF5IGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxOTIsXCJOYW1lXCI6XCJ0eG5hc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiQXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIG9mIHRoZSBjdXJyZW50IHRyYW5zYWN0aW9uXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MTkzLFwiTmFtZVwiOlwiZ3R4bmFzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjozLFwiQXJnRW51bVwiOltcIkFwcGxpY2F0aW9uQXJnc1wiLFwiQWNjb3VudHNcIixcIkFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJMb2dzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVQlwiLFwiRG9jXCI6XCJBdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgZnJvbSB0aGUgVHRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxOTQsXCJOYW1lXCI6XCJndHhuc2FzXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiQnRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjE5NSxcIk5hbWVcIjpcImFyZ3NcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkF0aCBMb2dpY1NpZyBhcmd1bWVudFwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjE5NixcIk5hbWVcIjpcImdsb2Fkc3NcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJCdGggc2NyYXRjaCBzcGFjZSB2YWx1ZSBvZiB0aGUgQXRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MTk3LFwiTmFtZVwiOlwiaXR4bmFzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJBdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgb2YgdGhlIGxhc3QgaW5uZXIgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTk4LFwiTmFtZVwiOlwiZ2l0eG5hc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiQXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgbGFzdCBpbm5lciBncm91cCBzdWJtaXR0ZWRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfV19Jyk7bGV0IG87ZnVuY3Rpb24gcyhlKXtsZXQgdD0wLHI9MDtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7Y29uc3Qgbz1lW25dO2lmKG88MTI4KXJldHVybiBuPjl8fDk9PT1uJiZvPjE/WzAsLShuKzEpXTpbdHxvPDxyLG4rMV07dCs9KDEyNyZvKTw8cixyKz03fXJldHVyblswLDBdfWZ1bmN0aW9uIGkoZSx0KXtsZXQgcj0xO2NvbnN0IG49cyhlLnNsaWNlKHQrcikpLG89blswXTtsZXQgaT1uWzFdO2lmKGk8PTApdGhyb3cgbmV3IEVycm9yKGBjb3VsZCBub3QgZGVjb2RlIGludCBjb25zdCBibG9jayBzaXplIGF0IHBjPSR7dCtyfWApO2NvbnN0IGE9W107cis9aTtmb3IobGV0IG49MDtuPG87bisrKXtpZih0K3I+PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImludGNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtsZXQgbztpZihbbyxpXT1zKGUuc2xpY2UodCtyKSksaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgaW50IGNvbnN0WyR7bn1dIGJsb2NrIHNpemUgYXQgcGM9JHt0K3J9YCk7YS5wdXNoKG8pLHIrPWl9cmV0dXJuW3IsYV19ZnVuY3Rpb24gYShlLHQpe2xldCByPTE7Y29uc3Qgbj1zKGUuc2xpY2UodCtyKSksbz1uWzBdO2xldCBpPW5bMV07aWYoaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgW11ieXRlIGNvbnN0IGJsb2NrIHNpemUgYXQgcGM9JHt0K3J9YCk7Y29uc3QgYT1bXTtyKz1pO2ZvcihsZXQgbj0wO248bztuKyspe2lmKHQrcj49ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZWNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtsZXQgbztpZihbbyxpXT1zKGUuc2xpY2UodCtyKSksaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgW11ieXRlXSBjb25zdFske259XSBibG9jayBzaXplIGF0IHBjPSR7dCtyfWApO2lmKHIrPWksdCtyK28+ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZWNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtjb25zdCBjPWUuc2xpY2UodCtyLHQrcitvKTthLnB1c2goYykscis9b31yZXR1cm5bcixhXX1mdW5jdGlvbiBjKGUsdCl7bGV0IHI9MTtjb25zdFtuLG9dPXMoZS5zbGljZSh0K3IpKTtpZihvPD0wKXRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGRlY29kZSBwdXNoIGludCBjb25zdCBhdCBwYz0ke3Qrcn1gKTtyZXR1cm4gcis9byxbcixuXX1mdW5jdGlvbiB1KGUsdCl7bGV0IHI9MTtjb25zdFtuLG9dPXMoZS5zbGljZSh0K3IpKTtpZihvPD0wKXRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGRlY29kZSBwdXNoIFtdYnl0ZSBjb25zdCBzaXplIGF0IHBjPSR7dCtyfWApO2lmKHIrPW8sdCtyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwicHVzaGJ5dGVzIHJhbiBwYXN0IGVuZCBvZiBwcm9ncmFtXCIpO2NvbnN0IGk9ZS5zbGljZSh0K3IsdCtyK24pO3JldHVybiByKz1uLFtyLGldfWZ1bmN0aW9uIGwoZSx0KXtpZighZSl0aHJvdyBuZXcgRXJyb3IoXCJlbXB0eSBwcm9ncmFtXCIpO2lmKHZvaWQgMD09PXQmJih0PVtdKSwhQXJyYXkuaXNBcnJheSh0KSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGFyZ3VtZW50c1wiKTtjb25zdFtyLGxdPXMoZSk7aWYobDw9MCl0aHJvdyBuZXcgRXJyb3IoXCJ2ZXJzaW9uIHBhcnNpbmcgZXJyb3JcIik7aWYocj5uLnpfKXRocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkIHZlcnNpb25cIik7bGV0IGg9MCx7bGVuZ3RoOnB9PWU7Zm9yKGNvbnN0IGUgb2YgdClwKz1lLmxlbmd0aDtpZihwPjFlMyl0aHJvdyBuZXcgRXJyb3IoXCJwcm9ncmFtIHRvbyBsb25nXCIpO2lmKCFvKXtvPXt9O2Zvcihjb25zdCBlIG9mIG4uQVApb1tlLk9wY29kZV09ZX1sZXQgZj1sLGQ9W10sZz1bXTtmb3IoO2Y8ZS5sZW5ndGg7KXtjb25zdCB0PW9bZVtmXV07aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGluc3RydWN0aW9uXCIpO2grPXQuQ29zdDtsZXQgcj10LlNpemU7aWYoMD09PXIpc3dpdGNoKHQuT3Bjb2RlKXtjYXNlIDMyOntsZXQgdDtbcix0XT1pKGUsZiksZD1kLmNvbmNhdCh0KTticmVha31jYXNlIDM4OntsZXQgdDtbcix0XT1hKGUsZiksZz1nLmNvbmNhdCh0KTticmVha31jYXNlIDEyOTp7bGV0IHQ7W3IsdF09YyhlLGYpLGQucHVzaCh0KTticmVha31jYXNlIDEyODp7bGV0IHQ7W3IsdF09dShlLGYpLGcucHVzaCh0KTticmVha31kZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgaW5zdHJ1Y3Rpb25cIil9Zis9cn1pZihyPDQmJmg+MmU0KXRocm93IG5ldyBFcnJvcihcInByb2dyYW0gdG9vIGNvc3RseSBmb3IgVGVhbCB2ZXJzaW9uIDwgNC4gY29uc2lkZXIgdXNpbmcgdjQuXCIpO3JldHVybltkLGcsITBdfWZ1bmN0aW9uIGgoZSx0KXtjb25zdFssLHJdPWwoZSx0KTtyZXR1cm4gcn1mdW5jdGlvbiBwKGUsdCl7Y29uc3Rbcl09aShlLHQpO3JldHVybiByfWZ1bmN0aW9uIGYoZSx0KXtjb25zdFtyXT1hKGUsdCk7cmV0dXJuIHJ9ZnVuY3Rpb24gZChlLHQpe2NvbnN0W3JdPWMoZSx0KTtyZXR1cm4gcn1mdW5jdGlvbiBnKGUsdCl7Y29uc3Rbcl09dShlLHQpO3JldHVybiByfWNvbnN0IHk9bi56XyxtPW4uQlZ9LDg4MDA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3Iucih0KSxyLmQodCx7TG9naWNTaWc6KCk9PmgsTG9naWNTaWdBY2NvdW50OigpPT5wLG1ha2VMb2dpY1NpZzooKT0+ZixzaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdDooKT0+ZCxzaWduTG9naWNTaWdUcmFuc2FjdGlvbjooKT0+Zyxsb2dpY1NpZ0Zyb21CeXRlOigpPT55LHRlYWxTaWduOigpPT5iLHRlYWxTaWduRnJvbVByb2dyYW06KCk9PkF9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KSxzPXIoMzAzMyksaT1yKDU1ODMpLGE9cig0MTU4KSxjPXIoNDEzKSx1PXIoOTQxNyksbD1yKDI0ODYpLkJ1ZmZlcjtjbGFzcyBoe2NvbnN0cnVjdG9yKGUsdCl7aWYodGhpcy50YWc9bC5mcm9tKFwiUHJvZ3JhbVwiKSx0JiYoIUFycmF5LmlzQXJyYXkodCl8fCF0LmV2ZXJ5KChlPT5lLmNvbnN0cnVjdG9yPT09VWludDhBcnJheXx8bC5pc0J1ZmZlcihlKSkpKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhcmd1bWVudHNcIik7bGV0IHI7aWYobnVsbCE9dCYmKHI9dC5tYXAoKGU9Pm5ldyBVaW50OEFycmF5KGUpKSkpLCFpLmNoZWNrUHJvZ3JhbShlLHIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHJvZ3JhbVwiKTt0aGlzLmxvZ2ljPWUsdGhpcy5hcmdzPXIsdGhpcy5zaWc9dm9pZCAwLHRoaXMubXNpZz12b2lkIDB9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtjb25zdCBlPXtsOnRoaXMubG9naWN9O3JldHVybiB0aGlzLmFyZ3MmJihlLmFyZz10aGlzLmFyZ3MpLHRoaXMuc2lnP2Uuc2lnPXRoaXMuc2lnOnRoaXMubXNpZyYmKGUubXNpZz10aGlzLm1zaWcpLGV9c3RhdGljIGZyb21fb2JqX2Zvcl9lbmNvZGluZyhlKXtjb25zdCB0PW5ldyBoKGUubCxlLmFyZyk7cmV0dXJuIHQuc2lnPWUuc2lnLHQubXNpZz1lLm1zaWcsdH12ZXJpZnkoZSl7aWYodGhpcy5zaWcmJnRoaXMubXNpZylyZXR1cm4hMTt0cnl7aS5jaGVja1Byb2dyYW0odGhpcy5sb2dpYyx0aGlzLmFyZ3MpfWNhdGNoKGUpe3JldHVybiExfWNvbnN0IHQ9Yy5jb25jYXRBcnJheXModGhpcy50YWcsdGhpcy5sb2dpYyk7aWYoIXRoaXMuc2lnJiYhdGhpcy5tc2lnKXtjb25zdCByPW4uZ2VuZXJpY0hhc2godCk7cmV0dXJuIGMuYXJyYXlFcXVhbChyLGUpfXJldHVybiB0aGlzLnNpZz9uLnZlcmlmeSh0LHRoaXMuc2lnLGUpOigwLGEuRjIpKHQsdGhpcy5tc2lnLGUpfWFkZHJlc3MoKXtjb25zdCBlPWMuY29uY2F0QXJyYXlzKHRoaXMudGFnLHRoaXMubG9naWMpLHQ9bi5nZW5lcmljSGFzaChlKTtyZXR1cm4gby5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KHQpKX1zaWduKGUsdCl7aWYobnVsbD09dCl0aGlzLnNpZz10aGlzLnNpZ25Qcm9ncmFtKGUpO2Vsc2V7Y29uc3Qgcj10LmFkZHJzLm1hcCgoZT0+KHtwazpvLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5fSkpKTt0aGlzLm1zaWc9e3Y6dC52ZXJzaW9uLHRocjp0LnRocmVzaG9sZCxzdWJzaWc6cn07Y29uc3RbbixzXT10aGlzLnNpbmdsZVNpZ25NdWx0aXNpZyhlLHRoaXMubXNpZyk7dGhpcy5tc2lnLnN1YnNpZ1tzXS5zPW59fWFwcGVuZFRvTXVsdGlzaWcoZSl7aWYodm9pZCAwPT09dGhpcy5tc2lnKXRocm93IG5ldyBFcnJvcihcIm5vIG11bHRpc2lnIHByZXNlbnRcIik7Y29uc3RbdCxyXT10aGlzLnNpbmdsZVNpZ25NdWx0aXNpZyhlLHRoaXMubXNpZyk7dGhpcy5tc2lnLnN1YnNpZ1tyXS5zPXR9c2lnblByb2dyYW0oZSl7Y29uc3QgdD1jLmNvbmNhdEFycmF5cyh0aGlzLnRhZyx0aGlzLmxvZ2ljKTtyZXR1cm4gbi5zaWduKHQsZSl9c2luZ2xlU2lnbk11bHRpc2lnKGUsdCl7bGV0IHI9LTE7Y29uc3Qgbz1uLmtleVBhaXJGcm9tU2VjcmV0S2V5KGUpLnB1YmxpY0tleTtmb3IobGV0IGU9MDtlPHQuc3Vic2lnLmxlbmd0aDtlKyspe2NvbnN0e3BrOm59PXQuc3Vic2lnW2VdO2lmKGMuYXJyYXlFcXVhbChuLG8pKXtyPWU7YnJlYWt9fWlmKC0xPT09cil0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHNlY3JldCBrZXlcIik7cmV0dXJuW3RoaXMuc2lnblByb2dyYW0oZSkscl19dG9CeXRlKCl7cmV0dXJuIHMuZW5jb2RlKHRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKSl9c3RhdGljIGZyb21CeXRlKGUpe2NvbnN0IHQ9cy5kZWNvZGUoZSk7cmV0dXJuIGguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQpfX1jbGFzcyBwe2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5sc2lnPW5ldyBoKGUsdCksdGhpcy5zaWdrZXk9dm9pZCAwfWdldF9vYmpfZm9yX2VuY29kaW5nKCl7Y29uc3QgZT17bHNpZzp0aGlzLmxzaWcuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX07cmV0dXJuIHRoaXMuc2lna2V5JiYoZS5zaWdrZXk9dGhpcy5zaWdrZXkpLGV9c3RhdGljIGZyb21fb2JqX2Zvcl9lbmNvZGluZyhlKXtjb25zdCB0PW5ldyBwKGUubHNpZy5sLGUubHNpZy5hcmcpO3JldHVybiB0LmxzaWc9aC5mcm9tX29ial9mb3JfZW5jb2RpbmcoZS5sc2lnKSx0LnNpZ2tleT1lLnNpZ2tleSx0fXRvQnl0ZSgpe3JldHVybiBzLmVuY29kZSh0aGlzLmdldF9vYmpfZm9yX2VuY29kaW5nKCkpfXN0YXRpYyBmcm9tQnl0ZShlKXtjb25zdCB0PXMuZGVjb2RlKGUpO3JldHVybiBwLmZyb21fb2JqX2Zvcl9lbmNvZGluZyh0KX1pc0RlbGVnYXRlZCgpe3JldHVybiEoIXRoaXMubHNpZy5zaWcmJiF0aGlzLmxzaWcubXNpZyl9dmVyaWZ5KCl7Y29uc3QgZT10aGlzLmFkZHJlc3MoKTtyZXR1cm4gdGhpcy5sc2lnLnZlcmlmeShvLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5KX1hZGRyZXNzKCl7aWYodGhpcy5sc2lnLnNpZyYmdGhpcy5sc2lnLm1zaWcpdGhyb3cgbmV3IEVycm9yKFwiTG9naWNTaWcgaGFzIHRvbyBtYW55IHNpZ25hdHVyZXMuIEF0IG1vc3Qgb25lIG9mIHNpZyBvciBtc2lnIG1heSBiZSBwcmVzZW50XCIpO2lmKHRoaXMubHNpZy5zaWcpe2lmKCF0aGlzLnNpZ2tleSl0aHJvdyBuZXcgRXJyb3IoXCJTaWduaW5nIGtleSBmb3IgZGVsZWdhdGVkIGFjY291bnQgaXMgbWlzc2luZ1wiKTtyZXR1cm4gby5lbmNvZGVBZGRyZXNzKHRoaXMuc2lna2V5KX1pZih0aGlzLmxzaWcubXNpZyl7Y29uc3QgZT17dmVyc2lvbjp0aGlzLmxzaWcubXNpZy52LHRocmVzaG9sZDp0aGlzLmxzaWcubXNpZy50aHIscGtzOnRoaXMubHNpZy5tc2lnLnN1YnNpZy5tYXAoKGU9PmUucGspKX07cmV0dXJuIG8uZW5jb2RlQWRkcmVzcyhvLmZyb21NdWx0aXNpZ1ByZUltZyhlKSl9cmV0dXJuIHRoaXMubHNpZy5hZGRyZXNzKCl9c2lnbk11bHRpc2lnKGUsdCl7dGhpcy5sc2lnLnNpZ24odCxlKX1hcHBlbmRUb011bHRpc2lnKGUpe3RoaXMubHNpZy5hcHBlbmRUb011bHRpc2lnKGUpfXNpZ24oZSl7dGhpcy5sc2lnLnNpZ24oZSksdGhpcy5zaWdrZXk9bi5rZXlQYWlyRnJvbVNlY3JldEtleShlKS5wdWJsaWNLZXl9fWZ1bmN0aW9uIGYoZSx0KXtyZXR1cm4gbmV3IGgoZSx0KX1mdW5jdGlvbiBkKGUsdCl7bGV0IHIsaTtpZih0IGluc3RhbmNlb2YgcClyPXQubHNpZyxpPW8uZGVjb2RlQWRkcmVzcyh0LmFkZHJlc3MoKSkucHVibGljS2V5O2Vsc2UgaWYocj10LHIuc2lnKWk9ZS5mcm9tLnB1YmxpY0tleTtlbHNlIGlmKHIubXNpZyl7Y29uc3QgZT17dmVyc2lvbjpyLm1zaWcudix0aHJlc2hvbGQ6ci5tc2lnLnRocixwa3M6ci5tc2lnLnN1YnNpZy5tYXAoKGU9PmUucGspKX07aT1vLmZyb21NdWx0aXNpZ1ByZUltZyhlKX1lbHNlIGk9by5kZWNvZGVBZGRyZXNzKHIuYWRkcmVzcygpKS5wdWJsaWNLZXk7cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXtpZighdC52ZXJpZnkocikpdGhyb3cgbmV3IEVycm9yKFwiTG9naWMgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBmYWlsZWQuIEVuc3VyZSB0aGUgcHJvZ3JhbSBhbmQgc2lnbmF0dXJlIGFyZSB2YWxpZC5cIik7Y29uc3Qgbz17bHNpZzp0LmdldF9vYmpfZm9yX2VuY29kaW5nKCksdHhuOmUuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX07cmV0dXJuIG4uYnl0ZXNFcXVhbChyLGUuZnJvbS5wdWJsaWNLZXkpfHwoby5zZ25yPWwuZnJvbShyKSkse3R4SUQ6ZS50eElEKCkudG9TdHJpbmcoKSxibG9iOnMuZW5jb2RlKG8pfX0oZSxyLGkpfWZ1bmN0aW9uIGcoZSx0KXtyZXR1cm4gZCh1Lmluc3RhbnRpYXRlVHhuSWZOZWVkZWQoZSksdCl9ZnVuY3Rpb24geShlKXtyZXR1cm4gaC5mcm9tQnl0ZShlKX1jb25zdCBtPWwuZnJvbShcIlByb2dEYXRhXCIpO2Z1bmN0aW9uIGIoZSx0LHIpe2NvbnN0IHM9Yy5jb25jYXRBcnJheXMoby5kZWNvZGVBZGRyZXNzKHIpLnB1YmxpY0tleSx0KSxpPWwuZnJvbShjLmNvbmNhdEFycmF5cyhtLHMpKTtyZXR1cm4gbi5zaWduKGksZSl9ZnVuY3Rpb24gQShlLHQscil7cmV0dXJuIGIoZSx0LG5ldyBoKHIpLmFkZHJlc3MoKSl9fSw2NjA4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse01VTFRJU0lHX0JBRF9TRU5ERVJfRVJST1JfTVNHOigpPT5OLHNpZ25UcmFuc2FjdGlvbjooKT0+UCxzaWduQmlkOigpPT5MLHNpZ25CeXRlczooKT0+Rix2ZXJpZnlCeXRlczooKT0+eixlbmNvZGVPYmo6KCk9PmosZGVjb2RlT2JqOigpPT5NLEVSUk9SX01VTFRJU0lHX0JBRF9TRU5ERVI6KCk9PkgsRVJST1JfSU5WQUxJRF9NSUNST0FMR09TOigpPT5HLEFsZ29kdjI6KCk9PmQuWixLbWQ6KCk9PmcuWixJbnREZWNvZGluZzooKT0+eS5aLEluZGV4ZXI6KCk9Pm0uWix3YWl0Rm9yQ29uZmlybWF0aW9uOigpPT5iLkssaXNWYWxpZEFkZHJlc3M6KCk9Pm8uaXNWYWxpZEFkZHJlc3MsZW5jb2RlQWRkcmVzczooKT0+by5lbmNvZGVBZGRyZXNzLGRlY29kZUFkZHJlc3M6KCk9Pm8uZGVjb2RlQWRkcmVzcyxnZXRBcHBsaWNhdGlvbkFkZHJlc3M6KCk9Pm8uZ2V0QXBwbGljYXRpb25BZGRyZXNzLGJ5dGVzVG9CaWdJbnQ6KCk9PkEudixiaWdJbnRUb0J5dGVzOigpPT5BLmosZW5jb2RlVWludDY0OigpPT53LlQsZGVjb2RlVWludDY0OigpPT53LnUsZ2VuZXJhdGVBY2NvdW50OigpPT52LlosbW9kZWxzdjI6KCk9PlMsbW5lbW9uaWNUb01hc3RlckRlcml2YXRpb25LZXk6KCk9PnguT0YsbWFzdGVyRGVyaXZhdGlvbktleVRvTW5lbW9uaWM6KCk9PngudkMsc2VjcmV0S2V5VG9NbmVtb25pYzooKT0+eC5RWCxtbmVtb25pY1RvU2VjcmV0S2V5OigpPT54LkNoLHNlZWRGcm9tTW5lbW9uaWM6KCk9PngubUUsbW5lbW9uaWNGcm9tU2VlZDooKT0+eC53MyxtaWNyb2FsZ29zVG9BbGdvczooKT0+bC5fLGFsZ29zVG9NaWNyb2FsZ29zOigpPT5sLkhOLElOVkFMSURfTUlDUk9BTEdPU19FUlJPUl9NU0c6KCk9PmwuckQsY29tcHV0ZUdyb3VwSUQ6KCk9PkUuY29tcHV0ZUdyb3VwSUQsYXNzaWduR3JvdXBJRDooKT0+RS5hc3NpZ25Hcm91cElELExvZ2ljU2lnQWNjb3VudDooKT0+VC5Mb2dpY1NpZ0FjY291bnQsbWFrZUxvZ2ljU2lnOigpPT5ULm1ha2VMb2dpY1NpZyxzaWduTG9naWNTaWdUcmFuc2FjdGlvbjooKT0+VC5zaWduTG9naWNTaWdUcmFuc2FjdGlvbixzaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdDooKT0+VC5zaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdCxsb2dpY1NpZ0Zyb21CeXRlOigpPT5ULmxvZ2ljU2lnRnJvbUJ5dGUsdGVhbFNpZ246KCk9PlQudGVhbFNpZ24sdGVhbFNpZ25Gcm9tUHJvZ3JhbTooKT0+VC50ZWFsU2lnbkZyb21Qcm9ncmFtLHNpZ25NdWx0aXNpZ1RyYW5zYWN0aW9uOigpPT5fLlBVLG1lcmdlTXVsdGlzaWdUcmFuc2FjdGlvbnM6KCk9Pl8uSjYsYXBwZW5kU2lnbk11bHRpc2lnVHJhbnNhY3Rpb246KCk9Pl8uUE8sbXVsdGlzaWdBZGRyZXNzOigpPT5fLnZILExvZ2ljVGVtcGxhdGVzOigpPT5LLERyeXJ1blJlc3VsdDooKT0+Qi54LGNyZWF0ZURyeXJ1bjooKT0+Qi5QLE9uQXBwbGljYXRpb25Db21wbGV0ZTooKT0+VS5PbkFwcGxpY2F0aW9uQ29tcGxldGUsbWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3Q6KCk9PlUubWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uQ2xlYXJTdGF0ZVR4bjooKT0+VS5tYWtlQXBwbGljYXRpb25DbGVhclN0YXRlVHhuLG1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG5Gcm9tT2JqZWN0LG1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuLG1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuRnJvbU9iamVjdDooKT0+VS5tYWtlQXBwbGljYXRpb25DbG9zZU91dFR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uQ3JlYXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4bixtYWtlQXBwbGljYXRpb25DcmVhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uRGVsZXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkRlbGV0ZVR4bixtYWtlQXBwbGljYXRpb25EZWxldGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkRlbGV0ZVR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uTm9PcFR4bjooKT0+VS5tYWtlQXBwbGljYXRpb25Ob09wVHhuLG1ha2VBcHBsaWNhdGlvbk5vT3BUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbk5vT3BUeG5Gcm9tT2JqZWN0LG1ha2VBcHBsaWNhdGlvbk9wdEluVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbk9wdEluVHhuLG1ha2VBcHBsaWNhdGlvbk9wdEluVHhuRnJvbU9iamVjdDooKT0+VS5tYWtlQXBwbGljYXRpb25PcHRJblR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uVXBkYXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvblVwZGF0ZVR4bixtYWtlQXBwbGljYXRpb25VcGRhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvblVwZGF0ZVR4bkZyb21PYmplY3QsbWFrZUFzc2V0Q29uZmlnVHhuOigpPT5VLm1ha2VBc3NldENvbmZpZ1R4bixtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldENvbmZpZ1R4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0Q3JlYXRlVHhuOigpPT5VLm1ha2VBc3NldENyZWF0ZVR4bixtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldENyZWF0ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0Q3JlYXRlVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0Q3JlYXRlVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0RGVzdHJveVR4bjooKT0+VS5tYWtlQXNzZXREZXN0cm95VHhuLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+VS5tYWtlQXNzZXREZXN0cm95VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0RnJlZXplVHhuOigpPT5VLm1ha2VBc3NldEZyZWV6ZVR4bixtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldEZyZWV6ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0RnJlZXplVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0RnJlZXplVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0VHJhbnNmZXJUeG46KCk9PlUubWFrZUFzc2V0VHJhbnNmZXJUeG4sbWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldFRyYW5zZmVyVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyxtYWtlQXNzZXRUcmFuc2ZlclR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0OigpPT5VLm1ha2VBc3NldFRyYW5zZmVyVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUtleVJlZ2lzdHJhdGlvblR4bjooKT0+VS5tYWtlS2V5UmVnaXN0cmF0aW9uVHhuLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+VS5tYWtlS2V5UmVnaXN0cmF0aW9uVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZVBheW1lbnRUeG46KCk9PlUubWFrZVBheW1lbnRUeG4sbWFrZVBheW1lbnRUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyxtYWtlUGF5bWVudFR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0OigpPT5VLm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsQUxHT1JBTkRfTUlOX1RYX0ZFRTooKT0+aS5BTEdPUkFORF9NSU5fVFhfRkVFLFRyYW5zYWN0aW9uOigpPT5pLlRyYW5zYWN0aW9uLGRlY29kZVNpZ25lZFRyYW5zYWN0aW9uOigpPT5pLmRlY29kZVNpZ25lZFRyYW5zYWN0aW9uLGRlY29kZVVuc2lnbmVkVHJhbnNhY3Rpb246KCk9PmkuZGVjb2RlVW5zaWduZWRUcmFuc2FjdGlvbixlbmNvZGVVbnNpZ25lZFRyYW5zYWN0aW9uOigpPT5pLmVuY29kZVVuc2lnbmVkVHJhbnNhY3Rpb24saW5zdGFudGlhdGVUeG5JZk5lZWRlZDooKT0+aS5pbnN0YW50aWF0ZVR4bklmTmVlZGVkLGlzVHJhbnNhY3Rpb25XaXRoU2lnbmVyOigpPT5rLlh3LG1ha2VCYXNpY0FjY291bnRUcmFuc2FjdGlvblNpZ25lcjooKT0+ay54NyxtYWtlTG9naWNTaWdBY2NvdW50VHJhbnNhY3Rpb25TaWduZXI6KCk9PmsuaTEsbWFrZU11bHRpU2lnQWNjb3VudFRyYW5zYWN0aW9uU2lnbmVyOigpPT5rLlZqLEF0b21pY1RyYW5zYWN0aW9uQ29tcG9zZXI6KCk9PkkuQSxBdG9taWNUcmFuc2FjdGlvbkNvbXBvc2VyU3RhdHVzOigpPT5JLmIsVHJhbnNhY3Rpb25UeXBlOigpPT5DLmksQUJJQWRkcmVzc1R5cGU6KCk9PlIuSlEsQUJJQXJyYXlEeW5hbWljVHlwZTooKT0+Ui5fNCxBQklBcnJheVN0YXRpY1R5cGU6KCk9PlIuWDMsQUJJQm9vbFR5cGU6KCk9PlIuUjAsQUJJQnl0ZVR5cGU6KCk9PlIuakQsQUJJQ29udHJhY3Q6KCk9PlIuWWgsQUJJSW50ZXJmYWNlOigpPT5SLmJMLEFCSU1ldGhvZDooKT0+Ui5McyxBQklSZWZlcmVuY2VUeXBlOigpPT5SLlVWLEFCSVN0cmluZ1R5cGU6KCk9PlIuQXgsQUJJVHJhbnNhY3Rpb25UeXBlOigpPT5SLkE5LEFCSVR1cGxlVHlwZTooKT0+Ui53MSxBQklUeXBlOigpPT5SLk5LLEFCSVVmaXhlZFR5cGU6KCk9PlIuUlksQUJJVWludFR5cGU6KCk9PlIuUHUsQUREUl9CWVRFX1NJWkU6KCk9PlIuVmssTEVOR1RIX0VOQ09ERV9CWVRFX1NJWkU6KCk9PlIubmgsTUFYX0xFTjooKT0+Ui5rRyxTSU5HTEVfQk9PTF9TSVpFOigpPT5SLnFILFNJTkdMRV9CWVRFX1NJWkU6KCk9PlIuSkgsYWJpQ2hlY2tUcmFuc2FjdGlvblR5cGU6KCk9PlIudkosYWJpVHlwZUlzUmVmZXJlbmNlOigpPT5SLm81LGFiaVR5cGVJc1RyYW5zYWN0aW9uOigpPT5SLkFFLGdldE1ldGhvZEJ5TmFtZTooKT0+Ui5JNX0pO3ZhciBuPXIoOTQwNCksbz1yKDcxMTYpLHM9cigzMDMzKSxpPXIoOTQxNyksYT1yKDg4ODYpLGM9ci5uKGEpLHU9cigyNjkxKSxsPXIoOTA3MCksaD1yKDQxMykscD1yKDU5MjIpLGY9e307Zm9yKGNvbnN0IGUgaW4gcClbXCJkZWZhdWx0XCIsXCJNVUxUSVNJR19CQURfU0VOREVSX0VSUk9SX01TR1wiLFwic2lnblRyYW5zYWN0aW9uXCIsXCJzaWduQmlkXCIsXCJzaWduQnl0ZXNcIixcInZlcmlmeUJ5dGVzXCIsXCJlbmNvZGVPYmpcIixcImRlY29kZU9ialwiLFwiRVJST1JfTVVMVElTSUdfQkFEX1NFTkRFUlwiLFwiRVJST1JfSU5WQUxJRF9NSUNST0FMR09TXCIsXCJBbGdvZHYyXCIsXCJLbWRcIixcIkludERlY29kaW5nXCIsXCJJbmRleGVyXCIsXCJ3YWl0Rm9yQ29uZmlybWF0aW9uXCIsXCJpc1ZhbGlkQWRkcmVzc1wiLFwiZW5jb2RlQWRkcmVzc1wiLFwiZGVjb2RlQWRkcmVzc1wiLFwiZ2V0QXBwbGljYXRpb25BZGRyZXNzXCIsXCJieXRlc1RvQmlnSW50XCIsXCJiaWdJbnRUb0J5dGVzXCIsXCJlbmNvZGVVaW50NjRcIixcImRlY29kZVVpbnQ2NFwiLFwiZ2VuZXJhdGVBY2NvdW50XCIsXCJtb2RlbHN2MlwiLFwibW5lbW9uaWNUb01hc3RlckRlcml2YXRpb25LZXlcIixcIm1hc3RlckRlcml2YXRpb25LZXlUb01uZW1vbmljXCIsXCJzZWNyZXRLZXlUb01uZW1vbmljXCIsXCJtbmVtb25pY1RvU2VjcmV0S2V5XCIsXCJzZWVkRnJvbU1uZW1vbmljXCIsXCJtbmVtb25pY0Zyb21TZWVkXCIsXCJtaWNyb2FsZ29zVG9BbGdvc1wiLFwiYWxnb3NUb01pY3JvYWxnb3NcIixcIklOVkFMSURfTUlDUk9BTEdPU19FUlJPUl9NU0dcIixcImNvbXB1dGVHcm91cElEXCIsXCJhc3NpZ25Hcm91cElEXCIsXCJMb2dpY1NpZ0FjY291bnRcIixcIm1ha2VMb2dpY1NpZ1wiLFwic2lnbkxvZ2ljU2lnVHJhbnNhY3Rpb25cIixcInNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0XCIsXCJsb2dpY1NpZ0Zyb21CeXRlXCIsXCJ0ZWFsU2lnblwiLFwidGVhbFNpZ25Gcm9tUHJvZ3JhbVwiLFwic2lnbk11bHRpc2lnVHJhbnNhY3Rpb25cIixcIm1lcmdlTXVsdGlzaWdUcmFuc2FjdGlvbnNcIixcImFwcGVuZFNpZ25NdWx0aXNpZ1RyYW5zYWN0aW9uXCIsXCJtdWx0aXNpZ0FkZHJlc3NcIixcIkxvZ2ljVGVtcGxhdGVzXCJdLmluZGV4T2YoZSk8MCYmKGZbZV09KCk9PnBbZV0pO3IuZCh0LGYpO3ZhciBkPXIoMTY2MyksZz1yKDY0NzcpLHk9cig3MTk3KSxtPXIoOTU4MiksYj1yKDUwNjIpLEE9cig4OTIyKSx3PXIoNjk2Myksdj1yKDc5ODgpLFM9cigyMjcpLHg9cigzNTEwKSxFPXIoMTA2MyksVD1yKDg4MDApLF89cig0MTU4KSxCPXIoNDM4MyksVT1yKDE5ODgpLGs9cig4MzQpLEk9cigzNDU4KSxDPXIoMjM4MCksUj1yKDc2NzcpLE89cigyNDg2KS5CdWZmZXI7Y29uc3QgRD1PLmZyb20oWzc3LDg4XSksTj1cIlRoZSB0cmFuc2FjdGlvbiBzZW5kZXIgYWRkcmVzcyBhbmQgbXVsdGlzaWcgcHJlaW1hZ2UgZG8gbm90IG1hdGNoLlwiO2Z1bmN0aW9uIFAoZSx0KXtpZih2b2lkIDA9PT1lLmZyb20pe2NvbnN0IHI9bi5rZXlQYWlyRnJvbVNlY3JldEtleSh0KTtlLmZyb209by5lbmNvZGVBZGRyZXNzKHIucHVibGljS2V5KX1jb25zdCByPWkuaW5zdGFudGlhdGVUeG5JZk5lZWRlZChlKTtyZXR1cm57dHhJRDpyLnR4SUQoKS50b1N0cmluZygpLGJsb2I6ci5zaWduVHhuKHQpfX1mdW5jdGlvbiBMKGUsdCl7cmV0dXJuIG5ldyB1LlooZSkuc2lnbkJpZCh0KX1mdW5jdGlvbiBGKGUsdCl7Y29uc3Qgcj1PLmZyb20oaC5jb25jYXRBcnJheXMoRCxlKSk7cmV0dXJuIG4uc2lnbihyLHQpfWZ1bmN0aW9uIHooZSx0LHIpe2NvbnN0IHM9Ty5mcm9tKGguY29uY2F0QXJyYXlzKEQsZSkpLGk9by5kZWNvZGVBZGRyZXNzKHIpLnB1YmxpY0tleTtyZXR1cm4gbi52ZXJpZnkocyx0LGkpfWZ1bmN0aW9uIGooZSl7cmV0dXJuIG5ldyBVaW50OEFycmF5KHMuZW5jb2RlKGUpKX1mdW5jdGlvbiBNKGUpe3JldHVybiBzLmRlY29kZShlKX1jb25zdCBIPW5ldyBFcnJvcihOKSxHPW5ldyBFcnJvcihsLnJEKSxLPWMoKX0sMTk4ODooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHttYWtlUGF5bWVudFR4bldpdGhTdWdnZXN0ZWRQYXJhbXM6KCk9PmksbWFrZVBheW1lbnRUeG46KCk9PmEsbWFrZVBheW1lbnRUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+YyxtYWtlS2V5UmVnaXN0cmF0aW9uVHhuV2l0aFN1Z2dlc3RlZFBhcmFtczooKT0+dSxtYWtlS2V5UmVnaXN0cmF0aW9uVHhuOigpPT5sLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+aCxtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5wLG1ha2VBc3NldENyZWF0ZVR4bjooKT0+ZixtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+ZCxtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5nLG1ha2VBc3NldENvbmZpZ1R4bjooKT0+eSxtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+bSxtYWtlQXNzZXREZXN0cm95VHhuV2l0aFN1Z2dlc3RlZFBhcmFtczooKT0+YixtYWtlQXNzZXREZXN0cm95VHhuOigpPT5BLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+dyxtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT52LG1ha2VBc3NldEZyZWV6ZVR4bjooKT0+UyxtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+eCxtYWtlQXNzZXRUcmFuc2ZlclR4bldpdGhTdWdnZXN0ZWRQYXJhbXM6KCk9PkUsbWFrZUFzc2V0VHJhbnNmZXJUeG46KCk9PlQsbWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+XyxtYWtlQXBwbGljYXRpb25DcmVhdGVUeG46KCk9PkIsbWFrZUFwcGxpY2F0aW9uQ3JlYXRlVHhuRnJvbU9iamVjdDooKT0+VSxtYWtlQXBwbGljYXRpb25VcGRhdGVUeG46KCk9PmssbWFrZUFwcGxpY2F0aW9uVXBkYXRlVHhuRnJvbU9iamVjdDooKT0+SSxtYWtlQXBwbGljYXRpb25EZWxldGVUeG46KCk9PkMsbWFrZUFwcGxpY2F0aW9uRGVsZXRlVHhuRnJvbU9iamVjdDooKT0+UixtYWtlQXBwbGljYXRpb25PcHRJblR4bjooKT0+TyxtYWtlQXBwbGljYXRpb25PcHRJblR4bkZyb21PYmplY3Q6KCk9PkQsbWFrZUFwcGxpY2F0aW9uQ2xvc2VPdXRUeG46KCk9Pk4sbWFrZUFwcGxpY2F0aW9uQ2xvc2VPdXRUeG5Gcm9tT2JqZWN0OigpPT5QLG1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG46KCk9PkwsbWFrZUFwcGxpY2F0aW9uQ2xlYXJTdGF0ZVR4bkZyb21PYmplY3Q6KCk9PkYsbWFrZUFwcGxpY2F0aW9uTm9PcFR4bjooKT0+eixtYWtlQXBwbGljYXRpb25Ob09wVHhuRnJvbU9iamVjdDooKT0+aixPbkFwcGxpY2F0aW9uQ29tcGxldGU6KCk9Pm8uaHEsbWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3Q6KCk9Pk19KTt2YXIgbj1yKDk0MTcpLG89cigxNjI0KSxzPXIoMTgyNCk7ZnVuY3Rpb24gaShlLHQscixvLGksYSxjKXtjb25zdCB1PXtmcm9tOmUsdG86dCxhbW91bnQ6cixjbG9zZVJlbWFpbmRlclRvOm8sbm90ZTppLHN1Z2dlc3RlZFBhcmFtczphLHR5cGU6cy5pLnBheSxyZUtleVRvOmN9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbih1KX1mdW5jdGlvbiBhKGUsdCxyLG4sbyxzLGEsYyx1LGwsaCl7cmV0dXJuIGkoZSx0LG4sbyxjLHtnZW5lc2lzSGFzaDp1LGdlbmVzaXNJRDpsLGZpcnN0Um91bmQ6cyxsYXN0Um91bmQ6YSxmZWU6cn0saCl9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gaShlLmZyb20sZS50byxlLmFtb3VudCxlLmNsb3NlUmVtYWluZGVyVG8sZS5ub3RlLGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gdShlLHQscixvLGksYSxjLHUsbCxoPSExLHApe2NvbnN0IGY9e2Zyb206ZSxub3RlOnQsdm90ZUtleTpyLHNlbGVjdGlvbktleTpvLHZvdGVGaXJzdDppLHZvdGVMYXN0OmEsdm90ZUtleURpbHV0aW9uOmMsc3VnZ2VzdGVkUGFyYW1zOnUsdHlwZTpzLmkua2V5cmVnLHJlS2V5VG86bCxub25QYXJ0aWNpcGF0aW9uOmgsc3RhdGVQcm9vZktleTpwfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZil9ZnVuY3Rpb24gbChlLHQscixuLG8scyxpLGEsYyxsLGgscCxmLGQ9ITEsZyl7cmV0dXJuIHUoZSxvLGEsYyxsLGgscCx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGYsZCxnKX1mdW5jdGlvbiBoKGUpe3JldHVybiB1KGUuZnJvbSxlLm5vdGUsZS52b3RlS2V5LGUuc2VsZWN0aW9uS2V5LGUudm90ZUZpcnN0LGUudm90ZUxhc3QsZS52b3RlS2V5RGlsdXRpb24sZS5zdWdnZXN0ZWRQYXJhbXMsZS5yZWtleVRvLGUubm9uUGFydGljaXBhdGlvbixlLnN0YXRlUHJvb2ZLZXkpfWZ1bmN0aW9uIHAoZSx0LHIsbyxpLGEsYyx1LGwsaCxwLGYsZCxnLHkpe2NvbnN0IG09e2Zyb206ZSxub3RlOnQsc3VnZ2VzdGVkUGFyYW1zOmcsYXNzZXRUb3RhbDpyLGFzc2V0RGVjaW1hbHM6byxhc3NldERlZmF1bHRGcm96ZW46aSxhc3NldFVuaXROYW1lOmgsYXNzZXROYW1lOnAsYXNzZXRVUkw6Zixhc3NldE1ldGFkYXRhSGFzaDpkLGFzc2V0TWFuYWdlcjphLGFzc2V0UmVzZXJ2ZTpjLGFzc2V0RnJlZXplOnUsYXNzZXRDbGF3YmFjazpsLHR5cGU6cy5pLmFjZmcscmVLZXlUbzp5fTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24obSl9ZnVuY3Rpb24gZihlLHQscixuLG8scyxpLGEsYyx1LGwsaCxmLGQsZyx5LG0sYixBKXtyZXR1cm4gcChlLG8sYSxjLHUsbCxoLGYsZCxnLHksbSxiLHtnZW5lc2lzSGFzaDpzLGdlbmVzaXNJRDppLGZpcnN0Um91bmQ6cixsYXN0Um91bmQ6bixmZWU6dH0sQSl9ZnVuY3Rpb24gZChlKXtyZXR1cm4gcChlLmZyb20sZS5ub3RlLGUudG90YWwsZS5kZWNpbWFscyxlLmRlZmF1bHRGcm96ZW4sZS5tYW5hZ2VyLGUucmVzZXJ2ZSxlLmZyZWV6ZSxlLmNsYXdiYWNrLGUudW5pdE5hbWUsZS5hc3NldE5hbWUsZS5hc3NldFVSTCxlLmFzc2V0TWV0YWRhdGFIYXNoLGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gZyhlLHQscixvLGksYSxjLHUsbD0hMCxoKXtpZihsJiYodm9pZCAwPT09b3x8dm9pZCAwPT09aXx8dm9pZCAwPT09YXx8dm9pZCAwPT09YykpdGhyb3cgRXJyb3IoXCJzdHJpY3QgZW1wdHkgYWRkcmVzcyBjaGVja2luZyB3YXMgdHVybmVkIG9uLCBidXQgYXQgbGVhc3Qgb25lIGVtcHR5IGFkZHJlc3Mgd2FzIHByb3ZpZGVkXCIpO2NvbnN0IHA9e2Zyb206ZSxzdWdnZXN0ZWRQYXJhbXM6dSxhc3NldEluZGV4OnIsYXNzZXRNYW5hZ2VyOm8sYXNzZXRSZXNlcnZlOmksYXNzZXRGcmVlemU6YSxhc3NldENsYXdiYWNrOmMsdHlwZTpzLmkuYWNmZyxub3RlOnQscmVLZXlUbzpofTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24ocCl9ZnVuY3Rpb24geShlLHQscixuLG8scyxpLGEsYyx1LGwsaCxwPSEwLGYpe3JldHVybiBnKGUsbyxhLGMsdSxsLGgse2dlbmVzaXNIYXNoOnMsZ2VuZXNpc0lEOmksZmlyc3RSb3VuZDpyLGxhc3RSb3VuZDpuLGZlZTp0fSxwLGYpfWZ1bmN0aW9uIG0oZSl7cmV0dXJuIGcoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5tYW5hZ2VyLGUucmVzZXJ2ZSxlLmZyZWV6ZSxlLmNsYXdiYWNrLGUuc3VnZ2VzdGVkUGFyYW1zLGUuc3RyaWN0RW1wdHlBZGRyZXNzQ2hlY2tpbmcsZS5yZWtleVRvKX1mdW5jdGlvbiBiKGUsdCxyLG8saSl7Y29uc3QgYT17ZnJvbTplLHN1Z2dlc3RlZFBhcmFtczpvLGFzc2V0SW5kZXg6cix0eXBlOnMuaS5hY2ZnLG5vdGU6dCxyZUtleVRvOml9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihhKX1mdW5jdGlvbiBBKGUsdCxyLG4sbyxzLGksYSxjKXtyZXR1cm4gYihlLG8sYSx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGMpfWZ1bmN0aW9uIHcoZSl7cmV0dXJuIGIoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5zdWdnZXN0ZWRQYXJhbXMsZS5yZWtleVRvKX1mdW5jdGlvbiB2KGUsdCxyLG8saSxhLGMpe2NvbnN0IHU9e2Zyb206ZSx0eXBlOnMuaS5hZnJ6LGZyZWV6ZUFjY291bnQ6byxhc3NldEluZGV4OnIsZnJlZXplU3RhdGU6aSxub3RlOnQsc3VnZ2VzdGVkUGFyYW1zOmEscmVLZXlUbzpjfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24odSl9ZnVuY3Rpb24gUyhlLHQscixuLG8scyxpLGEsYyx1LGwpe3JldHVybiB2KGUsbyxhLGMsdSx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGwpfWZ1bmN0aW9uIHgoZSl7cmV0dXJuIHYoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5mcmVlemVUYXJnZXQsZS5mcmVlemVTdGF0ZSxlLnN1Z2dlc3RlZFBhcmFtcyxlLnJla2V5VG8pfWZ1bmN0aW9uIEUoZSx0LHIsbyxpLGEsYyx1LGwpe2NvbnN0IGg9e3R5cGU6cy5pLmF4ZmVyLGZyb206ZSx0bzp0LGFtb3VudDppLHN1Z2dlc3RlZFBhcmFtczp1LGFzc2V0SW5kZXg6Yyxub3RlOmEsYXNzZXRSZXZvY2F0aW9uVGFyZ2V0Om8sY2xvc2VSZW1haW5kZXJUbzpyLHJlS2V5VG86bH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGgpfWZ1bmN0aW9uIFQoZSx0LHIsbixvLHMsaSxhLGMsdSxsLGgscCl7cmV0dXJuIEUoZSx0LHIsbixzLGMsaCx7Z2VuZXNpc0hhc2g6dSxnZW5lc2lzSUQ6bCxmaXJzdFJvdW5kOmksbGFzdFJvdW5kOmEsZmVlOm99LHApfWZ1bmN0aW9uIF8oZSl7cmV0dXJuIEUoZS5mcm9tLGUudG8sZS5jbG9zZVJlbWFpbmRlclRvLGUucmV2b2NhdGlvblRhcmdldCxlLmFtb3VudCxlLm5vdGUsZS5hc3NldEluZGV4LGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gQihlLHQscixvLGksYSxjLHUsbCxoLHAsZixkLGcseSxtLGIpe2NvbnN0IEE9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OjAsYXBwT25Db21wbGV0ZTpyLGFwcExvY2FsSW50czphLGFwcExvY2FsQnl0ZVNsaWNlczpjLGFwcEdsb2JhbEludHM6dSxhcHBHbG9iYWxCeXRlU2xpY2VzOmwsYXBwQXBwcm92YWxQcm9ncmFtOm8sYXBwQ2xlYXJQcm9ncmFtOmksYXBwQXJnczpoLGFwcEFjY291bnRzOnAsYXBwRm9yZWlnbkFwcHM6ZixhcHBGb3JlaWduQXNzZXRzOmQsbm90ZTpnLGxlYXNlOnkscmVLZXlUbzptLGV4dHJhUGFnZXM6Yn07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKEEpfWZ1bmN0aW9uIFUoZSl7cmV0dXJuIEIoZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUub25Db21wbGV0ZSxlLmFwcHJvdmFsUHJvZ3JhbSxlLmNsZWFyUHJvZ3JhbSxlLm51bUxvY2FsSW50cyxlLm51bUxvY2FsQnl0ZVNsaWNlcyxlLm51bUdsb2JhbEludHMsZS5udW1HbG9iYWxCeXRlU2xpY2VzLGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyxlLmV4dHJhUGFnZXMpfWZ1bmN0aW9uIGsoZSx0LHIsaSxhLGMsdSxsLGgscCxmLGQpe2NvbnN0IGc9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwQXBwcm92YWxQcm9ncmFtOmksYXBwT25Db21wbGV0ZTpvLmhxLlVwZGF0ZUFwcGxpY2F0aW9uT0MsYXBwQ2xlYXJQcm9ncmFtOmEsYXBwQXJnczpjLGFwcEFjY291bnRzOnUsYXBwRm9yZWlnbkFwcHM6bCxhcHBGb3JlaWduQXNzZXRzOmgsbm90ZTpwLGxlYXNlOmYscmVLZXlUbzpkfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZyl9ZnVuY3Rpb24gSShlKXtyZXR1cm4gayhlLmZyb20sZS5zdWdnZXN0ZWRQYXJhbXMsZS5hcHBJbmRleCxlLmFwcHJvdmFsUHJvZ3JhbSxlLmNsZWFyUHJvZ3JhbSxlLmFwcEFyZ3MsZS5hY2NvdW50cyxlLmZvcmVpZ25BcHBzLGUuZm9yZWlnbkFzc2V0cyxlLm5vdGUsZS5sZWFzZSxlLnJla2V5VG8pfWZ1bmN0aW9uIEMoZSx0LHIsaSxhLGMsdSxsLGgscCl7Y29uc3QgZj17dHlwZTpzLmkuYXBwbCxmcm9tOmUsc3VnZ2VzdGVkUGFyYW1zOnQsYXBwSW5kZXg6cixhcHBPbkNvbXBsZXRlOm8uaHEuRGVsZXRlQXBwbGljYXRpb25PQyxhcHBBcmdzOmksYXBwQWNjb3VudHM6YSxhcHBGb3JlaWduQXBwczpjLGFwcEZvcmVpZ25Bc3NldHM6dSxub3RlOmwsbGVhc2U6aCxyZUtleVRvOnB9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihmKX1mdW5jdGlvbiBSKGUpe3JldHVybiBDKGUuZnJvbSxlLnN1Z2dlc3RlZFBhcmFtcyxlLmFwcEluZGV4LGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyl9ZnVuY3Rpb24gTyhlLHQscixpLGEsYyx1LGwsaCxwKXtjb25zdCBmPXt0eXBlOnMuaS5hcHBsLGZyb206ZSxzdWdnZXN0ZWRQYXJhbXM6dCxhcHBJbmRleDpyLGFwcE9uQ29tcGxldGU6by5ocS5PcHRJbk9DLGFwcEFyZ3M6aSxhcHBBY2NvdW50czphLGFwcEZvcmVpZ25BcHBzOmMsYXBwRm9yZWlnbkFzc2V0czp1LG5vdGU6bCxsZWFzZTpoLHJlS2V5VG86cH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGYpfWZ1bmN0aW9uIEQoZSl7cmV0dXJuIE8oZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUuYXBwSW5kZXgsZS5hcHBBcmdzLGUuYWNjb3VudHMsZS5mb3JlaWduQXBwcyxlLmZvcmVpZ25Bc3NldHMsZS5ub3RlLGUubGVhc2UsZS5yZWtleVRvKX1mdW5jdGlvbiBOKGUsdCxyLGksYSxjLHUsbCxoLHApe2NvbnN0IGY9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwT25Db21wbGV0ZTpvLmhxLkNsb3NlT3V0T0MsYXBwQXJnczppLGFwcEFjY291bnRzOmEsYXBwRm9yZWlnbkFwcHM6YyxhcHBGb3JlaWduQXNzZXRzOnUsbm90ZTpsLGxlYXNlOmgscmVLZXlUbzpwfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZil9ZnVuY3Rpb24gUChlKXtyZXR1cm4gTihlLmZyb20sZS5zdWdnZXN0ZWRQYXJhbXMsZS5hcHBJbmRleCxlLmFwcEFyZ3MsZS5hY2NvdW50cyxlLmZvcmVpZ25BcHBzLGUuZm9yZWlnbkFzc2V0cyxlLm5vdGUsZS5sZWFzZSxlLnJla2V5VG8pfWZ1bmN0aW9uIEwoZSx0LHIsaSxhLGMsdSxsLGgscCl7Y29uc3QgZj17dHlwZTpzLmkuYXBwbCxmcm9tOmUsc3VnZ2VzdGVkUGFyYW1zOnQsYXBwSW5kZXg6cixhcHBPbkNvbXBsZXRlOm8uaHEuQ2xlYXJTdGF0ZU9DLGFwcEFyZ3M6aSxhcHBBY2NvdW50czphLGFwcEZvcmVpZ25BcHBzOmMsYXBwRm9yZWlnbkFzc2V0czp1LG5vdGU6bCxsZWFzZTpoLHJlS2V5VG86cH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGYpfWZ1bmN0aW9uIEYoZSl7cmV0dXJuIEwoZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUuYXBwSW5kZXgsZS5hcHBBcmdzLGUuYWNjb3VudHMsZS5mb3JlaWduQXBwcyxlLmZvcmVpZ25Bc3NldHMsZS5ub3RlLGUubGVhc2UsZS5yZWtleVRvKX1mdW5jdGlvbiB6KGUsdCxyLGksYSxjLHUsbCxoLHApe2NvbnN0IGY9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwT25Db21wbGV0ZTpvLmhxLk5vT3BPQyxhcHBBcmdzOmksYXBwQWNjb3VudHM6YSxhcHBGb3JlaWduQXBwczpjLGFwcEZvcmVpZ25Bc3NldHM6dSxub3RlOmwsbGVhc2U6aCxyZUtleVRvOnB9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihmKX1mdW5jdGlvbiBqKGUpe3JldHVybiB6KGUuZnJvbSxlLnN1Z2dlc3RlZFBhcmFtcyxlLmFwcEluZGV4LGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyl9ZnVuY3Rpb24gTShlKXtjb25zdCB0PXt0eXBlOnMuaS5hcHBsLGZyb206ZS5mcm9tLHN1Z2dlc3RlZFBhcmFtczplLnN1Z2dlc3RlZFBhcmFtcyxhcHBJbmRleDplLmFwcEluZGV4LGFwcE9uQ29tcGxldGU6ZS5vbkNvbXBsZXRlLGFwcExvY2FsSW50czplLm51bUxvY2FsSW50cyxhcHBMb2NhbEJ5dGVTbGljZXM6ZS5udW1Mb2NhbEJ5dGVTbGljZXMsYXBwR2xvYmFsSW50czplLm51bUdsb2JhbEludHMsYXBwR2xvYmFsQnl0ZVNsaWNlczplLm51bUdsb2JhbEJ5dGVTbGljZXMsYXBwQXBwcm92YWxQcm9ncmFtOmUuYXBwcm92YWxQcm9ncmFtLGFwcENsZWFyUHJvZ3JhbTplLmNsZWFyUHJvZ3JhbSxhcHBBcmdzOmUuYXBwQXJncyxhcHBBY2NvdW50czplLmFjY291bnRzLGFwcEZvcmVpZ25BcHBzOmUuZm9yZWlnbkFwcHMsYXBwRm9yZWlnbkFzc2V0czplLmZvcmVpZ25Bc3NldHMsbm90ZTplLm5vdGUsbGVhc2U6ZS5sZWFzZSxyZUtleVRvOmUucmVrZXlUbyxleHRyYVBhZ2VzOmUuZXh0cmFQYWdlc307cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKHQpfX0sMzUxMDooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse3ZDOigpPT5nLHczOigpPT5sLE9GOigpPT5kLENoOigpPT5wLFFYOigpPT5mLG1FOigpPT5ofSk7Y29uc3Qgbj1bXCJhYmFuZG9uXCIsXCJhYmlsaXR5XCIsXCJhYmxlXCIsXCJhYm91dFwiLFwiYWJvdmVcIixcImFic2VudFwiLFwiYWJzb3JiXCIsXCJhYnN0cmFjdFwiLFwiYWJzdXJkXCIsXCJhYnVzZVwiLFwiYWNjZXNzXCIsXCJhY2NpZGVudFwiLFwiYWNjb3VudFwiLFwiYWNjdXNlXCIsXCJhY2hpZXZlXCIsXCJhY2lkXCIsXCJhY291c3RpY1wiLFwiYWNxdWlyZVwiLFwiYWNyb3NzXCIsXCJhY3RcIixcImFjdGlvblwiLFwiYWN0b3JcIixcImFjdHJlc3NcIixcImFjdHVhbFwiLFwiYWRhcHRcIixcImFkZFwiLFwiYWRkaWN0XCIsXCJhZGRyZXNzXCIsXCJhZGp1c3RcIixcImFkbWl0XCIsXCJhZHVsdFwiLFwiYWR2YW5jZVwiLFwiYWR2aWNlXCIsXCJhZXJvYmljXCIsXCJhZmZhaXJcIixcImFmZm9yZFwiLFwiYWZyYWlkXCIsXCJhZ2FpblwiLFwiYWdlXCIsXCJhZ2VudFwiLFwiYWdyZWVcIixcImFoZWFkXCIsXCJhaW1cIixcImFpclwiLFwiYWlycG9ydFwiLFwiYWlzbGVcIixcImFsYXJtXCIsXCJhbGJ1bVwiLFwiYWxjb2hvbFwiLFwiYWxlcnRcIixcImFsaWVuXCIsXCJhbGxcIixcImFsbGV5XCIsXCJhbGxvd1wiLFwiYWxtb3N0XCIsXCJhbG9uZVwiLFwiYWxwaGFcIixcImFscmVhZHlcIixcImFsc29cIixcImFsdGVyXCIsXCJhbHdheXNcIixcImFtYXRldXJcIixcImFtYXppbmdcIixcImFtb25nXCIsXCJhbW91bnRcIixcImFtdXNlZFwiLFwiYW5hbHlzdFwiLFwiYW5jaG9yXCIsXCJhbmNpZW50XCIsXCJhbmdlclwiLFwiYW5nbGVcIixcImFuZ3J5XCIsXCJhbmltYWxcIixcImFua2xlXCIsXCJhbm5vdW5jZVwiLFwiYW5udWFsXCIsXCJhbm90aGVyXCIsXCJhbnN3ZXJcIixcImFudGVubmFcIixcImFudGlxdWVcIixcImFueGlldHlcIixcImFueVwiLFwiYXBhcnRcIixcImFwb2xvZ3lcIixcImFwcGVhclwiLFwiYXBwbGVcIixcImFwcHJvdmVcIixcImFwcmlsXCIsXCJhcmNoXCIsXCJhcmN0aWNcIixcImFyZWFcIixcImFyZW5hXCIsXCJhcmd1ZVwiLFwiYXJtXCIsXCJhcm1lZFwiLFwiYXJtb3JcIixcImFybXlcIixcImFyb3VuZFwiLFwiYXJyYW5nZVwiLFwiYXJyZXN0XCIsXCJhcnJpdmVcIixcImFycm93XCIsXCJhcnRcIixcImFydGVmYWN0XCIsXCJhcnRpc3RcIixcImFydHdvcmtcIixcImFza1wiLFwiYXNwZWN0XCIsXCJhc3NhdWx0XCIsXCJhc3NldFwiLFwiYXNzaXN0XCIsXCJhc3N1bWVcIixcImFzdGhtYVwiLFwiYXRobGV0ZVwiLFwiYXRvbVwiLFwiYXR0YWNrXCIsXCJhdHRlbmRcIixcImF0dGl0dWRlXCIsXCJhdHRyYWN0XCIsXCJhdWN0aW9uXCIsXCJhdWRpdFwiLFwiYXVndXN0XCIsXCJhdW50XCIsXCJhdXRob3JcIixcImF1dG9cIixcImF1dHVtblwiLFwiYXZlcmFnZVwiLFwiYXZvY2Fkb1wiLFwiYXZvaWRcIixcImF3YWtlXCIsXCJhd2FyZVwiLFwiYXdheVwiLFwiYXdlc29tZVwiLFwiYXdmdWxcIixcImF3a3dhcmRcIixcImF4aXNcIixcImJhYnlcIixcImJhY2hlbG9yXCIsXCJiYWNvblwiLFwiYmFkZ2VcIixcImJhZ1wiLFwiYmFsYW5jZVwiLFwiYmFsY29ueVwiLFwiYmFsbFwiLFwiYmFtYm9vXCIsXCJiYW5hbmFcIixcImJhbm5lclwiLFwiYmFyXCIsXCJiYXJlbHlcIixcImJhcmdhaW5cIixcImJhcnJlbFwiLFwiYmFzZVwiLFwiYmFzaWNcIixcImJhc2tldFwiLFwiYmF0dGxlXCIsXCJiZWFjaFwiLFwiYmVhblwiLFwiYmVhdXR5XCIsXCJiZWNhdXNlXCIsXCJiZWNvbWVcIixcImJlZWZcIixcImJlZm9yZVwiLFwiYmVnaW5cIixcImJlaGF2ZVwiLFwiYmVoaW5kXCIsXCJiZWxpZXZlXCIsXCJiZWxvd1wiLFwiYmVsdFwiLFwiYmVuY2hcIixcImJlbmVmaXRcIixcImJlc3RcIixcImJldHJheVwiLFwiYmV0dGVyXCIsXCJiZXR3ZWVuXCIsXCJiZXlvbmRcIixcImJpY3ljbGVcIixcImJpZFwiLFwiYmlrZVwiLFwiYmluZFwiLFwiYmlvbG9neVwiLFwiYmlyZFwiLFwiYmlydGhcIixcImJpdHRlclwiLFwiYmxhY2tcIixcImJsYWRlXCIsXCJibGFtZVwiLFwiYmxhbmtldFwiLFwiYmxhc3RcIixcImJsZWFrXCIsXCJibGVzc1wiLFwiYmxpbmRcIixcImJsb29kXCIsXCJibG9zc29tXCIsXCJibG91c2VcIixcImJsdWVcIixcImJsdXJcIixcImJsdXNoXCIsXCJib2FyZFwiLFwiYm9hdFwiLFwiYm9keVwiLFwiYm9pbFwiLFwiYm9tYlwiLFwiYm9uZVwiLFwiYm9udXNcIixcImJvb2tcIixcImJvb3N0XCIsXCJib3JkZXJcIixcImJvcmluZ1wiLFwiYm9ycm93XCIsXCJib3NzXCIsXCJib3R0b21cIixcImJvdW5jZVwiLFwiYm94XCIsXCJib3lcIixcImJyYWNrZXRcIixcImJyYWluXCIsXCJicmFuZFwiLFwiYnJhc3NcIixcImJyYXZlXCIsXCJicmVhZFwiLFwiYnJlZXplXCIsXCJicmlja1wiLFwiYnJpZGdlXCIsXCJicmllZlwiLFwiYnJpZ2h0XCIsXCJicmluZ1wiLFwiYnJpc2tcIixcImJyb2Njb2xpXCIsXCJicm9rZW5cIixcImJyb256ZVwiLFwiYnJvb21cIixcImJyb3RoZXJcIixcImJyb3duXCIsXCJicnVzaFwiLFwiYnViYmxlXCIsXCJidWRkeVwiLFwiYnVkZ2V0XCIsXCJidWZmYWxvXCIsXCJidWlsZFwiLFwiYnVsYlwiLFwiYnVsa1wiLFwiYnVsbGV0XCIsXCJidW5kbGVcIixcImJ1bmtlclwiLFwiYnVyZGVuXCIsXCJidXJnZXJcIixcImJ1cnN0XCIsXCJidXNcIixcImJ1c2luZXNzXCIsXCJidXN5XCIsXCJidXR0ZXJcIixcImJ1eWVyXCIsXCJidXp6XCIsXCJjYWJiYWdlXCIsXCJjYWJpblwiLFwiY2FibGVcIixcImNhY3R1c1wiLFwiY2FnZVwiLFwiY2FrZVwiLFwiY2FsbFwiLFwiY2FsbVwiLFwiY2FtZXJhXCIsXCJjYW1wXCIsXCJjYW5cIixcImNhbmFsXCIsXCJjYW5jZWxcIixcImNhbmR5XCIsXCJjYW5ub25cIixcImNhbm9lXCIsXCJjYW52YXNcIixcImNhbnlvblwiLFwiY2FwYWJsZVwiLFwiY2FwaXRhbFwiLFwiY2FwdGFpblwiLFwiY2FyXCIsXCJjYXJib25cIixcImNhcmRcIixcImNhcmdvXCIsXCJjYXJwZXRcIixcImNhcnJ5XCIsXCJjYXJ0XCIsXCJjYXNlXCIsXCJjYXNoXCIsXCJjYXNpbm9cIixcImNhc3RsZVwiLFwiY2FzdWFsXCIsXCJjYXRcIixcImNhdGFsb2dcIixcImNhdGNoXCIsXCJjYXRlZ29yeVwiLFwiY2F0dGxlXCIsXCJjYXVnaHRcIixcImNhdXNlXCIsXCJjYXV0aW9uXCIsXCJjYXZlXCIsXCJjZWlsaW5nXCIsXCJjZWxlcnlcIixcImNlbWVudFwiLFwiY2Vuc3VzXCIsXCJjZW50dXJ5XCIsXCJjZXJlYWxcIixcImNlcnRhaW5cIixcImNoYWlyXCIsXCJjaGFsa1wiLFwiY2hhbXBpb25cIixcImNoYW5nZVwiLFwiY2hhb3NcIixcImNoYXB0ZXJcIixcImNoYXJnZVwiLFwiY2hhc2VcIixcImNoYXRcIixcImNoZWFwXCIsXCJjaGVja1wiLFwiY2hlZXNlXCIsXCJjaGVmXCIsXCJjaGVycnlcIixcImNoZXN0XCIsXCJjaGlja2VuXCIsXCJjaGllZlwiLFwiY2hpbGRcIixcImNoaW1uZXlcIixcImNob2ljZVwiLFwiY2hvb3NlXCIsXCJjaHJvbmljXCIsXCJjaHVja2xlXCIsXCJjaHVua1wiLFwiY2h1cm5cIixcImNpZ2FyXCIsXCJjaW5uYW1vblwiLFwiY2lyY2xlXCIsXCJjaXRpemVuXCIsXCJjaXR5XCIsXCJjaXZpbFwiLFwiY2xhaW1cIixcImNsYXBcIixcImNsYXJpZnlcIixcImNsYXdcIixcImNsYXlcIixcImNsZWFuXCIsXCJjbGVya1wiLFwiY2xldmVyXCIsXCJjbGlja1wiLFwiY2xpZW50XCIsXCJjbGlmZlwiLFwiY2xpbWJcIixcImNsaW5pY1wiLFwiY2xpcFwiLFwiY2xvY2tcIixcImNsb2dcIixcImNsb3NlXCIsXCJjbG90aFwiLFwiY2xvdWRcIixcImNsb3duXCIsXCJjbHViXCIsXCJjbHVtcFwiLFwiY2x1c3RlclwiLFwiY2x1dGNoXCIsXCJjb2FjaFwiLFwiY29hc3RcIixcImNvY29udXRcIixcImNvZGVcIixcImNvZmZlZVwiLFwiY29pbFwiLFwiY29pblwiLFwiY29sbGVjdFwiLFwiY29sb3JcIixcImNvbHVtblwiLFwiY29tYmluZVwiLFwiY29tZVwiLFwiY29tZm9ydFwiLFwiY29taWNcIixcImNvbW1vblwiLFwiY29tcGFueVwiLFwiY29uY2VydFwiLFwiY29uZHVjdFwiLFwiY29uZmlybVwiLFwiY29uZ3Jlc3NcIixcImNvbm5lY3RcIixcImNvbnNpZGVyXCIsXCJjb250cm9sXCIsXCJjb252aW5jZVwiLFwiY29va1wiLFwiY29vbFwiLFwiY29wcGVyXCIsXCJjb3B5XCIsXCJjb3JhbFwiLFwiY29yZVwiLFwiY29yblwiLFwiY29ycmVjdFwiLFwiY29zdFwiLFwiY290dG9uXCIsXCJjb3VjaFwiLFwiY291bnRyeVwiLFwiY291cGxlXCIsXCJjb3Vyc2VcIixcImNvdXNpblwiLFwiY292ZXJcIixcImNveW90ZVwiLFwiY3JhY2tcIixcImNyYWRsZVwiLFwiY3JhZnRcIixcImNyYW1cIixcImNyYW5lXCIsXCJjcmFzaFwiLFwiY3JhdGVyXCIsXCJjcmF3bFwiLFwiY3JhenlcIixcImNyZWFtXCIsXCJjcmVkaXRcIixcImNyZWVrXCIsXCJjcmV3XCIsXCJjcmlja2V0XCIsXCJjcmltZVwiLFwiY3Jpc3BcIixcImNyaXRpY1wiLFwiY3JvcFwiLFwiY3Jvc3NcIixcImNyb3VjaFwiLFwiY3Jvd2RcIixcImNydWNpYWxcIixcImNydWVsXCIsXCJjcnVpc2VcIixcImNydW1ibGVcIixcImNydW5jaFwiLFwiY3J1c2hcIixcImNyeVwiLFwiY3J5c3RhbFwiLFwiY3ViZVwiLFwiY3VsdHVyZVwiLFwiY3VwXCIsXCJjdXBib2FyZFwiLFwiY3VyaW91c1wiLFwiY3VycmVudFwiLFwiY3VydGFpblwiLFwiY3VydmVcIixcImN1c2hpb25cIixcImN1c3RvbVwiLFwiY3V0ZVwiLFwiY3ljbGVcIixcImRhZFwiLFwiZGFtYWdlXCIsXCJkYW1wXCIsXCJkYW5jZVwiLFwiZGFuZ2VyXCIsXCJkYXJpbmdcIixcImRhc2hcIixcImRhdWdodGVyXCIsXCJkYXduXCIsXCJkYXlcIixcImRlYWxcIixcImRlYmF0ZVwiLFwiZGVicmlzXCIsXCJkZWNhZGVcIixcImRlY2VtYmVyXCIsXCJkZWNpZGVcIixcImRlY2xpbmVcIixcImRlY29yYXRlXCIsXCJkZWNyZWFzZVwiLFwiZGVlclwiLFwiZGVmZW5zZVwiLFwiZGVmaW5lXCIsXCJkZWZ5XCIsXCJkZWdyZWVcIixcImRlbGF5XCIsXCJkZWxpdmVyXCIsXCJkZW1hbmRcIixcImRlbWlzZVwiLFwiZGVuaWFsXCIsXCJkZW50aXN0XCIsXCJkZW55XCIsXCJkZXBhcnRcIixcImRlcGVuZFwiLFwiZGVwb3NpdFwiLFwiZGVwdGhcIixcImRlcHV0eVwiLFwiZGVyaXZlXCIsXCJkZXNjcmliZVwiLFwiZGVzZXJ0XCIsXCJkZXNpZ25cIixcImRlc2tcIixcImRlc3BhaXJcIixcImRlc3Ryb3lcIixcImRldGFpbFwiLFwiZGV0ZWN0XCIsXCJkZXZlbG9wXCIsXCJkZXZpY2VcIixcImRldm90ZVwiLFwiZGlhZ3JhbVwiLFwiZGlhbFwiLFwiZGlhbW9uZFwiLFwiZGlhcnlcIixcImRpY2VcIixcImRpZXNlbFwiLFwiZGlldFwiLFwiZGlmZmVyXCIsXCJkaWdpdGFsXCIsXCJkaWduaXR5XCIsXCJkaWxlbW1hXCIsXCJkaW5uZXJcIixcImRpbm9zYXVyXCIsXCJkaXJlY3RcIixcImRpcnRcIixcImRpc2FncmVlXCIsXCJkaXNjb3ZlclwiLFwiZGlzZWFzZVwiLFwiZGlzaFwiLFwiZGlzbWlzc1wiLFwiZGlzb3JkZXJcIixcImRpc3BsYXlcIixcImRpc3RhbmNlXCIsXCJkaXZlcnRcIixcImRpdmlkZVwiLFwiZGl2b3JjZVwiLFwiZGl6enlcIixcImRvY3RvclwiLFwiZG9jdW1lbnRcIixcImRvZ1wiLFwiZG9sbFwiLFwiZG9scGhpblwiLFwiZG9tYWluXCIsXCJkb25hdGVcIixcImRvbmtleVwiLFwiZG9ub3JcIixcImRvb3JcIixcImRvc2VcIixcImRvdWJsZVwiLFwiZG92ZVwiLFwiZHJhZnRcIixcImRyYWdvblwiLFwiZHJhbWFcIixcImRyYXN0aWNcIixcImRyYXdcIixcImRyZWFtXCIsXCJkcmVzc1wiLFwiZHJpZnRcIixcImRyaWxsXCIsXCJkcmlua1wiLFwiZHJpcFwiLFwiZHJpdmVcIixcImRyb3BcIixcImRydW1cIixcImRyeVwiLFwiZHVja1wiLFwiZHVtYlwiLFwiZHVuZVwiLFwiZHVyaW5nXCIsXCJkdXN0XCIsXCJkdXRjaFwiLFwiZHV0eVwiLFwiZHdhcmZcIixcImR5bmFtaWNcIixcImVhZ2VyXCIsXCJlYWdsZVwiLFwiZWFybHlcIixcImVhcm5cIixcImVhcnRoXCIsXCJlYXNpbHlcIixcImVhc3RcIixcImVhc3lcIixcImVjaG9cIixcImVjb2xvZ3lcIixcImVjb25vbXlcIixcImVkZ2VcIixcImVkaXRcIixcImVkdWNhdGVcIixcImVmZm9ydFwiLFwiZWdnXCIsXCJlaWdodFwiLFwiZWl0aGVyXCIsXCJlbGJvd1wiLFwiZWxkZXJcIixcImVsZWN0cmljXCIsXCJlbGVnYW50XCIsXCJlbGVtZW50XCIsXCJlbGVwaGFudFwiLFwiZWxldmF0b3JcIixcImVsaXRlXCIsXCJlbHNlXCIsXCJlbWJhcmtcIixcImVtYm9keVwiLFwiZW1icmFjZVwiLFwiZW1lcmdlXCIsXCJlbW90aW9uXCIsXCJlbXBsb3lcIixcImVtcG93ZXJcIixcImVtcHR5XCIsXCJlbmFibGVcIixcImVuYWN0XCIsXCJlbmRcIixcImVuZGxlc3NcIixcImVuZG9yc2VcIixcImVuZW15XCIsXCJlbmVyZ3lcIixcImVuZm9yY2VcIixcImVuZ2FnZVwiLFwiZW5naW5lXCIsXCJlbmhhbmNlXCIsXCJlbmpveVwiLFwiZW5saXN0XCIsXCJlbm91Z2hcIixcImVucmljaFwiLFwiZW5yb2xsXCIsXCJlbnN1cmVcIixcImVudGVyXCIsXCJlbnRpcmVcIixcImVudHJ5XCIsXCJlbnZlbG9wZVwiLFwiZXBpc29kZVwiLFwiZXF1YWxcIixcImVxdWlwXCIsXCJlcmFcIixcImVyYXNlXCIsXCJlcm9kZVwiLFwiZXJvc2lvblwiLFwiZXJyb3JcIixcImVydXB0XCIsXCJlc2NhcGVcIixcImVzc2F5XCIsXCJlc3NlbmNlXCIsXCJlc3RhdGVcIixcImV0ZXJuYWxcIixcImV0aGljc1wiLFwiZXZpZGVuY2VcIixcImV2aWxcIixcImV2b2tlXCIsXCJldm9sdmVcIixcImV4YWN0XCIsXCJleGFtcGxlXCIsXCJleGNlc3NcIixcImV4Y2hhbmdlXCIsXCJleGNpdGVcIixcImV4Y2x1ZGVcIixcImV4Y3VzZVwiLFwiZXhlY3V0ZVwiLFwiZXhlcmNpc2VcIixcImV4aGF1c3RcIixcImV4aGliaXRcIixcImV4aWxlXCIsXCJleGlzdFwiLFwiZXhpdFwiLFwiZXhvdGljXCIsXCJleHBhbmRcIixcImV4cGVjdFwiLFwiZXhwaXJlXCIsXCJleHBsYWluXCIsXCJleHBvc2VcIixcImV4cHJlc3NcIixcImV4dGVuZFwiLFwiZXh0cmFcIixcImV5ZVwiLFwiZXllYnJvd1wiLFwiZmFicmljXCIsXCJmYWNlXCIsXCJmYWN1bHR5XCIsXCJmYWRlXCIsXCJmYWludFwiLFwiZmFpdGhcIixcImZhbGxcIixcImZhbHNlXCIsXCJmYW1lXCIsXCJmYW1pbHlcIixcImZhbW91c1wiLFwiZmFuXCIsXCJmYW5jeVwiLFwiZmFudGFzeVwiLFwiZmFybVwiLFwiZmFzaGlvblwiLFwiZmF0XCIsXCJmYXRhbFwiLFwiZmF0aGVyXCIsXCJmYXRpZ3VlXCIsXCJmYXVsdFwiLFwiZmF2b3JpdGVcIixcImZlYXR1cmVcIixcImZlYnJ1YXJ5XCIsXCJmZWRlcmFsXCIsXCJmZWVcIixcImZlZWRcIixcImZlZWxcIixcImZlbWFsZVwiLFwiZmVuY2VcIixcImZlc3RpdmFsXCIsXCJmZXRjaFwiLFwiZmV2ZXJcIixcImZld1wiLFwiZmliZXJcIixcImZpY3Rpb25cIixcImZpZWxkXCIsXCJmaWd1cmVcIixcImZpbGVcIixcImZpbG1cIixcImZpbHRlclwiLFwiZmluYWxcIixcImZpbmRcIixcImZpbmVcIixcImZpbmdlclwiLFwiZmluaXNoXCIsXCJmaXJlXCIsXCJmaXJtXCIsXCJmaXJzdFwiLFwiZmlzY2FsXCIsXCJmaXNoXCIsXCJmaXRcIixcImZpdG5lc3NcIixcImZpeFwiLFwiZmxhZ1wiLFwiZmxhbWVcIixcImZsYXNoXCIsXCJmbGF0XCIsXCJmbGF2b3JcIixcImZsZWVcIixcImZsaWdodFwiLFwiZmxpcFwiLFwiZmxvYXRcIixcImZsb2NrXCIsXCJmbG9vclwiLFwiZmxvd2VyXCIsXCJmbHVpZFwiLFwiZmx1c2hcIixcImZseVwiLFwiZm9hbVwiLFwiZm9jdXNcIixcImZvZ1wiLFwiZm9pbFwiLFwiZm9sZFwiLFwiZm9sbG93XCIsXCJmb29kXCIsXCJmb290XCIsXCJmb3JjZVwiLFwiZm9yZXN0XCIsXCJmb3JnZXRcIixcImZvcmtcIixcImZvcnR1bmVcIixcImZvcnVtXCIsXCJmb3J3YXJkXCIsXCJmb3NzaWxcIixcImZvc3RlclwiLFwiZm91bmRcIixcImZveFwiLFwiZnJhZ2lsZVwiLFwiZnJhbWVcIixcImZyZXF1ZW50XCIsXCJmcmVzaFwiLFwiZnJpZW5kXCIsXCJmcmluZ2VcIixcImZyb2dcIixcImZyb250XCIsXCJmcm9zdFwiLFwiZnJvd25cIixcImZyb3plblwiLFwiZnJ1aXRcIixcImZ1ZWxcIixcImZ1blwiLFwiZnVubnlcIixcImZ1cm5hY2VcIixcImZ1cnlcIixcImZ1dHVyZVwiLFwiZ2FkZ2V0XCIsXCJnYWluXCIsXCJnYWxheHlcIixcImdhbGxlcnlcIixcImdhbWVcIixcImdhcFwiLFwiZ2FyYWdlXCIsXCJnYXJiYWdlXCIsXCJnYXJkZW5cIixcImdhcmxpY1wiLFwiZ2FybWVudFwiLFwiZ2FzXCIsXCJnYXNwXCIsXCJnYXRlXCIsXCJnYXRoZXJcIixcImdhdWdlXCIsXCJnYXplXCIsXCJnZW5lcmFsXCIsXCJnZW5pdXNcIixcImdlbnJlXCIsXCJnZW50bGVcIixcImdlbnVpbmVcIixcImdlc3R1cmVcIixcImdob3N0XCIsXCJnaWFudFwiLFwiZ2lmdFwiLFwiZ2lnZ2xlXCIsXCJnaW5nZXJcIixcImdpcmFmZmVcIixcImdpcmxcIixcImdpdmVcIixcImdsYWRcIixcImdsYW5jZVwiLFwiZ2xhcmVcIixcImdsYXNzXCIsXCJnbGlkZVwiLFwiZ2xpbXBzZVwiLFwiZ2xvYmVcIixcImdsb29tXCIsXCJnbG9yeVwiLFwiZ2xvdmVcIixcImdsb3dcIixcImdsdWVcIixcImdvYXRcIixcImdvZGRlc3NcIixcImdvbGRcIixcImdvb2RcIixcImdvb3NlXCIsXCJnb3JpbGxhXCIsXCJnb3NwZWxcIixcImdvc3NpcFwiLFwiZ292ZXJuXCIsXCJnb3duXCIsXCJncmFiXCIsXCJncmFjZVwiLFwiZ3JhaW5cIixcImdyYW50XCIsXCJncmFwZVwiLFwiZ3Jhc3NcIixcImdyYXZpdHlcIixcImdyZWF0XCIsXCJncmVlblwiLFwiZ3JpZFwiLFwiZ3JpZWZcIixcImdyaXRcIixcImdyb2NlcnlcIixcImdyb3VwXCIsXCJncm93XCIsXCJncnVudFwiLFwiZ3VhcmRcIixcImd1ZXNzXCIsXCJndWlkZVwiLFwiZ3VpbHRcIixcImd1aXRhclwiLFwiZ3VuXCIsXCJneW1cIixcImhhYml0XCIsXCJoYWlyXCIsXCJoYWxmXCIsXCJoYW1tZXJcIixcImhhbXN0ZXJcIixcImhhbmRcIixcImhhcHB5XCIsXCJoYXJib3JcIixcImhhcmRcIixcImhhcnNoXCIsXCJoYXJ2ZXN0XCIsXCJoYXRcIixcImhhdmVcIixcImhhd2tcIixcImhhemFyZFwiLFwiaGVhZFwiLFwiaGVhbHRoXCIsXCJoZWFydFwiLFwiaGVhdnlcIixcImhlZGdlaG9nXCIsXCJoZWlnaHRcIixcImhlbGxvXCIsXCJoZWxtZXRcIixcImhlbHBcIixcImhlblwiLFwiaGVyb1wiLFwiaGlkZGVuXCIsXCJoaWdoXCIsXCJoaWxsXCIsXCJoaW50XCIsXCJoaXBcIixcImhpcmVcIixcImhpc3RvcnlcIixcImhvYmJ5XCIsXCJob2NrZXlcIixcImhvbGRcIixcImhvbGVcIixcImhvbGlkYXlcIixcImhvbGxvd1wiLFwiaG9tZVwiLFwiaG9uZXlcIixcImhvb2RcIixcImhvcGVcIixcImhvcm5cIixcImhvcnJvclwiLFwiaG9yc2VcIixcImhvc3BpdGFsXCIsXCJob3N0XCIsXCJob3RlbFwiLFwiaG91clwiLFwiaG92ZXJcIixcImh1YlwiLFwiaHVnZVwiLFwiaHVtYW5cIixcImh1bWJsZVwiLFwiaHVtb3JcIixcImh1bmRyZWRcIixcImh1bmdyeVwiLFwiaHVudFwiLFwiaHVyZGxlXCIsXCJodXJyeVwiLFwiaHVydFwiLFwiaHVzYmFuZFwiLFwiaHlicmlkXCIsXCJpY2VcIixcImljb25cIixcImlkZWFcIixcImlkZW50aWZ5XCIsXCJpZGxlXCIsXCJpZ25vcmVcIixcImlsbFwiLFwiaWxsZWdhbFwiLFwiaWxsbmVzc1wiLFwiaW1hZ2VcIixcImltaXRhdGVcIixcImltbWVuc2VcIixcImltbXVuZVwiLFwiaW1wYWN0XCIsXCJpbXBvc2VcIixcImltcHJvdmVcIixcImltcHVsc2VcIixcImluY2hcIixcImluY2x1ZGVcIixcImluY29tZVwiLFwiaW5jcmVhc2VcIixcImluZGV4XCIsXCJpbmRpY2F0ZVwiLFwiaW5kb29yXCIsXCJpbmR1c3RyeVwiLFwiaW5mYW50XCIsXCJpbmZsaWN0XCIsXCJpbmZvcm1cIixcImluaGFsZVwiLFwiaW5oZXJpdFwiLFwiaW5pdGlhbFwiLFwiaW5qZWN0XCIsXCJpbmp1cnlcIixcImlubWF0ZVwiLFwiaW5uZXJcIixcImlubm9jZW50XCIsXCJpbnB1dFwiLFwiaW5xdWlyeVwiLFwiaW5zYW5lXCIsXCJpbnNlY3RcIixcImluc2lkZVwiLFwiaW5zcGlyZVwiLFwiaW5zdGFsbFwiLFwiaW50YWN0XCIsXCJpbnRlcmVzdFwiLFwiaW50b1wiLFwiaW52ZXN0XCIsXCJpbnZpdGVcIixcImludm9sdmVcIixcImlyb25cIixcImlzbGFuZFwiLFwiaXNvbGF0ZVwiLFwiaXNzdWVcIixcIml0ZW1cIixcIml2b3J5XCIsXCJqYWNrZXRcIixcImphZ3VhclwiLFwiamFyXCIsXCJqYXp6XCIsXCJqZWFsb3VzXCIsXCJqZWFuc1wiLFwiamVsbHlcIixcImpld2VsXCIsXCJqb2JcIixcImpvaW5cIixcImpva2VcIixcImpvdXJuZXlcIixcImpveVwiLFwianVkZ2VcIixcImp1aWNlXCIsXCJqdW1wXCIsXCJqdW5nbGVcIixcImp1bmlvclwiLFwianVua1wiLFwianVzdFwiLFwia2FuZ2Fyb29cIixcImtlZW5cIixcImtlZXBcIixcImtldGNodXBcIixcImtleVwiLFwia2lja1wiLFwia2lkXCIsXCJraWRuZXlcIixcImtpbmRcIixcImtpbmdkb21cIixcImtpc3NcIixcImtpdFwiLFwia2l0Y2hlblwiLFwia2l0ZVwiLFwia2l0dGVuXCIsXCJraXdpXCIsXCJrbmVlXCIsXCJrbmlmZVwiLFwia25vY2tcIixcImtub3dcIixcImxhYlwiLFwibGFiZWxcIixcImxhYm9yXCIsXCJsYWRkZXJcIixcImxhZHlcIixcImxha2VcIixcImxhbXBcIixcImxhbmd1YWdlXCIsXCJsYXB0b3BcIixcImxhcmdlXCIsXCJsYXRlclwiLFwibGF0aW5cIixcImxhdWdoXCIsXCJsYXVuZHJ5XCIsXCJsYXZhXCIsXCJsYXdcIixcImxhd25cIixcImxhd3N1aXRcIixcImxheWVyXCIsXCJsYXp5XCIsXCJsZWFkZXJcIixcImxlYWZcIixcImxlYXJuXCIsXCJsZWF2ZVwiLFwibGVjdHVyZVwiLFwibGVmdFwiLFwibGVnXCIsXCJsZWdhbFwiLFwibGVnZW5kXCIsXCJsZWlzdXJlXCIsXCJsZW1vblwiLFwibGVuZFwiLFwibGVuZ3RoXCIsXCJsZW5zXCIsXCJsZW9wYXJkXCIsXCJsZXNzb25cIixcImxldHRlclwiLFwibGV2ZWxcIixcImxpYXJcIixcImxpYmVydHlcIixcImxpYnJhcnlcIixcImxpY2Vuc2VcIixcImxpZmVcIixcImxpZnRcIixcImxpZ2h0XCIsXCJsaWtlXCIsXCJsaW1iXCIsXCJsaW1pdFwiLFwibGlua1wiLFwibGlvblwiLFwibGlxdWlkXCIsXCJsaXN0XCIsXCJsaXR0bGVcIixcImxpdmVcIixcImxpemFyZFwiLFwibG9hZFwiLFwibG9hblwiLFwibG9ic3RlclwiLFwibG9jYWxcIixcImxvY2tcIixcImxvZ2ljXCIsXCJsb25lbHlcIixcImxvbmdcIixcImxvb3BcIixcImxvdHRlcnlcIixcImxvdWRcIixcImxvdW5nZVwiLFwibG92ZVwiLFwibG95YWxcIixcImx1Y2t5XCIsXCJsdWdnYWdlXCIsXCJsdW1iZXJcIixcImx1bmFyXCIsXCJsdW5jaFwiLFwibHV4dXJ5XCIsXCJseXJpY3NcIixcIm1hY2hpbmVcIixcIm1hZFwiLFwibWFnaWNcIixcIm1hZ25ldFwiLFwibWFpZFwiLFwibWFpbFwiLFwibWFpblwiLFwibWFqb3JcIixcIm1ha2VcIixcIm1hbW1hbFwiLFwibWFuXCIsXCJtYW5hZ2VcIixcIm1hbmRhdGVcIixcIm1hbmdvXCIsXCJtYW5zaW9uXCIsXCJtYW51YWxcIixcIm1hcGxlXCIsXCJtYXJibGVcIixcIm1hcmNoXCIsXCJtYXJnaW5cIixcIm1hcmluZVwiLFwibWFya2V0XCIsXCJtYXJyaWFnZVwiLFwibWFza1wiLFwibWFzc1wiLFwibWFzdGVyXCIsXCJtYXRjaFwiLFwibWF0ZXJpYWxcIixcIm1hdGhcIixcIm1hdHJpeFwiLFwibWF0dGVyXCIsXCJtYXhpbXVtXCIsXCJtYXplXCIsXCJtZWFkb3dcIixcIm1lYW5cIixcIm1lYXN1cmVcIixcIm1lYXRcIixcIm1lY2hhbmljXCIsXCJtZWRhbFwiLFwibWVkaWFcIixcIm1lbG9keVwiLFwibWVsdFwiLFwibWVtYmVyXCIsXCJtZW1vcnlcIixcIm1lbnRpb25cIixcIm1lbnVcIixcIm1lcmN5XCIsXCJtZXJnZVwiLFwibWVyaXRcIixcIm1lcnJ5XCIsXCJtZXNoXCIsXCJtZXNzYWdlXCIsXCJtZXRhbFwiLFwibWV0aG9kXCIsXCJtaWRkbGVcIixcIm1pZG5pZ2h0XCIsXCJtaWxrXCIsXCJtaWxsaW9uXCIsXCJtaW1pY1wiLFwibWluZFwiLFwibWluaW11bVwiLFwibWlub3JcIixcIm1pbnV0ZVwiLFwibWlyYWNsZVwiLFwibWlycm9yXCIsXCJtaXNlcnlcIixcIm1pc3NcIixcIm1pc3Rha2VcIixcIm1peFwiLFwibWl4ZWRcIixcIm1peHR1cmVcIixcIm1vYmlsZVwiLFwibW9kZWxcIixcIm1vZGlmeVwiLFwibW9tXCIsXCJtb21lbnRcIixcIm1vbml0b3JcIixcIm1vbmtleVwiLFwibW9uc3RlclwiLFwibW9udGhcIixcIm1vb25cIixcIm1vcmFsXCIsXCJtb3JlXCIsXCJtb3JuaW5nXCIsXCJtb3NxdWl0b1wiLFwibW90aGVyXCIsXCJtb3Rpb25cIixcIm1vdG9yXCIsXCJtb3VudGFpblwiLFwibW91c2VcIixcIm1vdmVcIixcIm1vdmllXCIsXCJtdWNoXCIsXCJtdWZmaW5cIixcIm11bGVcIixcIm11bHRpcGx5XCIsXCJtdXNjbGVcIixcIm11c2V1bVwiLFwibXVzaHJvb21cIixcIm11c2ljXCIsXCJtdXN0XCIsXCJtdXR1YWxcIixcIm15c2VsZlwiLFwibXlzdGVyeVwiLFwibXl0aFwiLFwibmFpdmVcIixcIm5hbWVcIixcIm5hcGtpblwiLFwibmFycm93XCIsXCJuYXN0eVwiLFwibmF0aW9uXCIsXCJuYXR1cmVcIixcIm5lYXJcIixcIm5lY2tcIixcIm5lZWRcIixcIm5lZ2F0aXZlXCIsXCJuZWdsZWN0XCIsXCJuZWl0aGVyXCIsXCJuZXBoZXdcIixcIm5lcnZlXCIsXCJuZXN0XCIsXCJuZXRcIixcIm5ldHdvcmtcIixcIm5ldXRyYWxcIixcIm5ldmVyXCIsXCJuZXdzXCIsXCJuZXh0XCIsXCJuaWNlXCIsXCJuaWdodFwiLFwibm9ibGVcIixcIm5vaXNlXCIsXCJub21pbmVlXCIsXCJub29kbGVcIixcIm5vcm1hbFwiLFwibm9ydGhcIixcIm5vc2VcIixcIm5vdGFibGVcIixcIm5vdGVcIixcIm5vdGhpbmdcIixcIm5vdGljZVwiLFwibm92ZWxcIixcIm5vd1wiLFwibnVjbGVhclwiLFwibnVtYmVyXCIsXCJudXJzZVwiLFwibnV0XCIsXCJvYWtcIixcIm9iZXlcIixcIm9iamVjdFwiLFwib2JsaWdlXCIsXCJvYnNjdXJlXCIsXCJvYnNlcnZlXCIsXCJvYnRhaW5cIixcIm9idmlvdXNcIixcIm9jY3VyXCIsXCJvY2VhblwiLFwib2N0b2JlclwiLFwib2RvclwiLFwib2ZmXCIsXCJvZmZlclwiLFwib2ZmaWNlXCIsXCJvZnRlblwiLFwib2lsXCIsXCJva2F5XCIsXCJvbGRcIixcIm9saXZlXCIsXCJvbHltcGljXCIsXCJvbWl0XCIsXCJvbmNlXCIsXCJvbmVcIixcIm9uaW9uXCIsXCJvbmxpbmVcIixcIm9ubHlcIixcIm9wZW5cIixcIm9wZXJhXCIsXCJvcGluaW9uXCIsXCJvcHBvc2VcIixcIm9wdGlvblwiLFwib3JhbmdlXCIsXCJvcmJpdFwiLFwib3JjaGFyZFwiLFwib3JkZXJcIixcIm9yZGluYXJ5XCIsXCJvcmdhblwiLFwib3JpZW50XCIsXCJvcmlnaW5hbFwiLFwib3JwaGFuXCIsXCJvc3RyaWNoXCIsXCJvdGhlclwiLFwib3V0ZG9vclwiLFwib3V0ZXJcIixcIm91dHB1dFwiLFwib3V0c2lkZVwiLFwib3ZhbFwiLFwib3ZlblwiLFwib3ZlclwiLFwib3duXCIsXCJvd25lclwiLFwib3h5Z2VuXCIsXCJveXN0ZXJcIixcIm96b25lXCIsXCJwYWN0XCIsXCJwYWRkbGVcIixcInBhZ2VcIixcInBhaXJcIixcInBhbGFjZVwiLFwicGFsbVwiLFwicGFuZGFcIixcInBhbmVsXCIsXCJwYW5pY1wiLFwicGFudGhlclwiLFwicGFwZXJcIixcInBhcmFkZVwiLFwicGFyZW50XCIsXCJwYXJrXCIsXCJwYXJyb3RcIixcInBhcnR5XCIsXCJwYXNzXCIsXCJwYXRjaFwiLFwicGF0aFwiLFwicGF0aWVudFwiLFwicGF0cm9sXCIsXCJwYXR0ZXJuXCIsXCJwYXVzZVwiLFwicGF2ZVwiLFwicGF5bWVudFwiLFwicGVhY2VcIixcInBlYW51dFwiLFwicGVhclwiLFwicGVhc2FudFwiLFwicGVsaWNhblwiLFwicGVuXCIsXCJwZW5hbHR5XCIsXCJwZW5jaWxcIixcInBlb3BsZVwiLFwicGVwcGVyXCIsXCJwZXJmZWN0XCIsXCJwZXJtaXRcIixcInBlcnNvblwiLFwicGV0XCIsXCJwaG9uZVwiLFwicGhvdG9cIixcInBocmFzZVwiLFwicGh5c2ljYWxcIixcInBpYW5vXCIsXCJwaWNuaWNcIixcInBpY3R1cmVcIixcInBpZWNlXCIsXCJwaWdcIixcInBpZ2VvblwiLFwicGlsbFwiLFwicGlsb3RcIixcInBpbmtcIixcInBpb25lZXJcIixcInBpcGVcIixcInBpc3RvbFwiLFwicGl0Y2hcIixcInBpenphXCIsXCJwbGFjZVwiLFwicGxhbmV0XCIsXCJwbGFzdGljXCIsXCJwbGF0ZVwiLFwicGxheVwiLFwicGxlYXNlXCIsXCJwbGVkZ2VcIixcInBsdWNrXCIsXCJwbHVnXCIsXCJwbHVuZ2VcIixcInBvZW1cIixcInBvZXRcIixcInBvaW50XCIsXCJwb2xhclwiLFwicG9sZVwiLFwicG9saWNlXCIsXCJwb25kXCIsXCJwb255XCIsXCJwb29sXCIsXCJwb3B1bGFyXCIsXCJwb3J0aW9uXCIsXCJwb3NpdGlvblwiLFwicG9zc2libGVcIixcInBvc3RcIixcInBvdGF0b1wiLFwicG90dGVyeVwiLFwicG92ZXJ0eVwiLFwicG93ZGVyXCIsXCJwb3dlclwiLFwicHJhY3RpY2VcIixcInByYWlzZVwiLFwicHJlZGljdFwiLFwicHJlZmVyXCIsXCJwcmVwYXJlXCIsXCJwcmVzZW50XCIsXCJwcmV0dHlcIixcInByZXZlbnRcIixcInByaWNlXCIsXCJwcmlkZVwiLFwicHJpbWFyeVwiLFwicHJpbnRcIixcInByaW9yaXR5XCIsXCJwcmlzb25cIixcInByaXZhdGVcIixcInByaXplXCIsXCJwcm9ibGVtXCIsXCJwcm9jZXNzXCIsXCJwcm9kdWNlXCIsXCJwcm9maXRcIixcInByb2dyYW1cIixcInByb2plY3RcIixcInByb21vdGVcIixcInByb29mXCIsXCJwcm9wZXJ0eVwiLFwicHJvc3BlclwiLFwicHJvdGVjdFwiLFwicHJvdWRcIixcInByb3ZpZGVcIixcInB1YmxpY1wiLFwicHVkZGluZ1wiLFwicHVsbFwiLFwicHVscFwiLFwicHVsc2VcIixcInB1bXBraW5cIixcInB1bmNoXCIsXCJwdXBpbFwiLFwicHVwcHlcIixcInB1cmNoYXNlXCIsXCJwdXJpdHlcIixcInB1cnBvc2VcIixcInB1cnNlXCIsXCJwdXNoXCIsXCJwdXRcIixcInB1enpsZVwiLFwicHlyYW1pZFwiLFwicXVhbGl0eVwiLFwicXVhbnR1bVwiLFwicXVhcnRlclwiLFwicXVlc3Rpb25cIixcInF1aWNrXCIsXCJxdWl0XCIsXCJxdWl6XCIsXCJxdW90ZVwiLFwicmFiYml0XCIsXCJyYWNjb29uXCIsXCJyYWNlXCIsXCJyYWNrXCIsXCJyYWRhclwiLFwicmFkaW9cIixcInJhaWxcIixcInJhaW5cIixcInJhaXNlXCIsXCJyYWxseVwiLFwicmFtcFwiLFwicmFuY2hcIixcInJhbmRvbVwiLFwicmFuZ2VcIixcInJhcGlkXCIsXCJyYXJlXCIsXCJyYXRlXCIsXCJyYXRoZXJcIixcInJhdmVuXCIsXCJyYXdcIixcInJhem9yXCIsXCJyZWFkeVwiLFwicmVhbFwiLFwicmVhc29uXCIsXCJyZWJlbFwiLFwicmVidWlsZFwiLFwicmVjYWxsXCIsXCJyZWNlaXZlXCIsXCJyZWNpcGVcIixcInJlY29yZFwiLFwicmVjeWNsZVwiLFwicmVkdWNlXCIsXCJyZWZsZWN0XCIsXCJyZWZvcm1cIixcInJlZnVzZVwiLFwicmVnaW9uXCIsXCJyZWdyZXRcIixcInJlZ3VsYXJcIixcInJlamVjdFwiLFwicmVsYXhcIixcInJlbGVhc2VcIixcInJlbGllZlwiLFwicmVseVwiLFwicmVtYWluXCIsXCJyZW1lbWJlclwiLFwicmVtaW5kXCIsXCJyZW1vdmVcIixcInJlbmRlclwiLFwicmVuZXdcIixcInJlbnRcIixcInJlb3BlblwiLFwicmVwYWlyXCIsXCJyZXBlYXRcIixcInJlcGxhY2VcIixcInJlcG9ydFwiLFwicmVxdWlyZVwiLFwicmVzY3VlXCIsXCJyZXNlbWJsZVwiLFwicmVzaXN0XCIsXCJyZXNvdXJjZVwiLFwicmVzcG9uc2VcIixcInJlc3VsdFwiLFwicmV0aXJlXCIsXCJyZXRyZWF0XCIsXCJyZXR1cm5cIixcInJldW5pb25cIixcInJldmVhbFwiLFwicmV2aWV3XCIsXCJyZXdhcmRcIixcInJoeXRobVwiLFwicmliXCIsXCJyaWJib25cIixcInJpY2VcIixcInJpY2hcIixcInJpZGVcIixcInJpZGdlXCIsXCJyaWZsZVwiLFwicmlnaHRcIixcInJpZ2lkXCIsXCJyaW5nXCIsXCJyaW90XCIsXCJyaXBwbGVcIixcInJpc2tcIixcInJpdHVhbFwiLFwicml2YWxcIixcInJpdmVyXCIsXCJyb2FkXCIsXCJyb2FzdFwiLFwicm9ib3RcIixcInJvYnVzdFwiLFwicm9ja2V0XCIsXCJyb21hbmNlXCIsXCJyb29mXCIsXCJyb29raWVcIixcInJvb21cIixcInJvc2VcIixcInJvdGF0ZVwiLFwicm91Z2hcIixcInJvdW5kXCIsXCJyb3V0ZVwiLFwicm95YWxcIixcInJ1YmJlclwiLFwicnVkZVwiLFwicnVnXCIsXCJydWxlXCIsXCJydW5cIixcInJ1bndheVwiLFwicnVyYWxcIixcInNhZFwiLFwic2FkZGxlXCIsXCJzYWRuZXNzXCIsXCJzYWZlXCIsXCJzYWlsXCIsXCJzYWxhZFwiLFwic2FsbW9uXCIsXCJzYWxvblwiLFwic2FsdFwiLFwic2FsdXRlXCIsXCJzYW1lXCIsXCJzYW1wbGVcIixcInNhbmRcIixcInNhdGlzZnlcIixcInNhdG9zaGlcIixcInNhdWNlXCIsXCJzYXVzYWdlXCIsXCJzYXZlXCIsXCJzYXlcIixcInNjYWxlXCIsXCJzY2FuXCIsXCJzY2FyZVwiLFwic2NhdHRlclwiLFwic2NlbmVcIixcInNjaGVtZVwiLFwic2Nob29sXCIsXCJzY2llbmNlXCIsXCJzY2lzc29yc1wiLFwic2NvcnBpb25cIixcInNjb3V0XCIsXCJzY3JhcFwiLFwic2NyZWVuXCIsXCJzY3JpcHRcIixcInNjcnViXCIsXCJzZWFcIixcInNlYXJjaFwiLFwic2Vhc29uXCIsXCJzZWF0XCIsXCJzZWNvbmRcIixcInNlY3JldFwiLFwic2VjdGlvblwiLFwic2VjdXJpdHlcIixcInNlZWRcIixcInNlZWtcIixcInNlZ21lbnRcIixcInNlbGVjdFwiLFwic2VsbFwiLFwic2VtaW5hclwiLFwic2VuaW9yXCIsXCJzZW5zZVwiLFwic2VudGVuY2VcIixcInNlcmllc1wiLFwic2VydmljZVwiLFwic2Vzc2lvblwiLFwic2V0dGxlXCIsXCJzZXR1cFwiLFwic2V2ZW5cIixcInNoYWRvd1wiLFwic2hhZnRcIixcInNoYWxsb3dcIixcInNoYXJlXCIsXCJzaGVkXCIsXCJzaGVsbFwiLFwic2hlcmlmZlwiLFwic2hpZWxkXCIsXCJzaGlmdFwiLFwic2hpbmVcIixcInNoaXBcIixcInNoaXZlclwiLFwic2hvY2tcIixcInNob2VcIixcInNob290XCIsXCJzaG9wXCIsXCJzaG9ydFwiLFwic2hvdWxkZXJcIixcInNob3ZlXCIsXCJzaHJpbXBcIixcInNocnVnXCIsXCJzaHVmZmxlXCIsXCJzaHlcIixcInNpYmxpbmdcIixcInNpY2tcIixcInNpZGVcIixcInNpZWdlXCIsXCJzaWdodFwiLFwic2lnblwiLFwic2lsZW50XCIsXCJzaWxrXCIsXCJzaWxseVwiLFwic2lsdmVyXCIsXCJzaW1pbGFyXCIsXCJzaW1wbGVcIixcInNpbmNlXCIsXCJzaW5nXCIsXCJzaXJlblwiLFwic2lzdGVyXCIsXCJzaXR1YXRlXCIsXCJzaXhcIixcInNpemVcIixcInNrYXRlXCIsXCJza2V0Y2hcIixcInNraVwiLFwic2tpbGxcIixcInNraW5cIixcInNraXJ0XCIsXCJza3VsbFwiLFwic2xhYlwiLFwic2xhbVwiLFwic2xlZXBcIixcInNsZW5kZXJcIixcInNsaWNlXCIsXCJzbGlkZVwiLFwic2xpZ2h0XCIsXCJzbGltXCIsXCJzbG9nYW5cIixcInNsb3RcIixcInNsb3dcIixcInNsdXNoXCIsXCJzbWFsbFwiLFwic21hcnRcIixcInNtaWxlXCIsXCJzbW9rZVwiLFwic21vb3RoXCIsXCJzbmFja1wiLFwic25ha2VcIixcInNuYXBcIixcInNuaWZmXCIsXCJzbm93XCIsXCJzb2FwXCIsXCJzb2NjZXJcIixcInNvY2lhbFwiLFwic29ja1wiLFwic29kYVwiLFwic29mdFwiLFwic29sYXJcIixcInNvbGRpZXJcIixcInNvbGlkXCIsXCJzb2x1dGlvblwiLFwic29sdmVcIixcInNvbWVvbmVcIixcInNvbmdcIixcInNvb25cIixcInNvcnJ5XCIsXCJzb3J0XCIsXCJzb3VsXCIsXCJzb3VuZFwiLFwic291cFwiLFwic291cmNlXCIsXCJzb3V0aFwiLFwic3BhY2VcIixcInNwYXJlXCIsXCJzcGF0aWFsXCIsXCJzcGF3blwiLFwic3BlYWtcIixcInNwZWNpYWxcIixcInNwZWVkXCIsXCJzcGVsbFwiLFwic3BlbmRcIixcInNwaGVyZVwiLFwic3BpY2VcIixcInNwaWRlclwiLFwic3Bpa2VcIixcInNwaW5cIixcInNwaXJpdFwiLFwic3BsaXRcIixcInNwb2lsXCIsXCJzcG9uc29yXCIsXCJzcG9vblwiLFwic3BvcnRcIixcInNwb3RcIixcInNwcmF5XCIsXCJzcHJlYWRcIixcInNwcmluZ1wiLFwic3B5XCIsXCJzcXVhcmVcIixcInNxdWVlemVcIixcInNxdWlycmVsXCIsXCJzdGFibGVcIixcInN0YWRpdW1cIixcInN0YWZmXCIsXCJzdGFnZVwiLFwic3RhaXJzXCIsXCJzdGFtcFwiLFwic3RhbmRcIixcInN0YXJ0XCIsXCJzdGF0ZVwiLFwic3RheVwiLFwic3RlYWtcIixcInN0ZWVsXCIsXCJzdGVtXCIsXCJzdGVwXCIsXCJzdGVyZW9cIixcInN0aWNrXCIsXCJzdGlsbFwiLFwic3RpbmdcIixcInN0b2NrXCIsXCJzdG9tYWNoXCIsXCJzdG9uZVwiLFwic3Rvb2xcIixcInN0b3J5XCIsXCJzdG92ZVwiLFwic3RyYXRlZ3lcIixcInN0cmVldFwiLFwic3RyaWtlXCIsXCJzdHJvbmdcIixcInN0cnVnZ2xlXCIsXCJzdHVkZW50XCIsXCJzdHVmZlwiLFwic3R1bWJsZVwiLFwic3R5bGVcIixcInN1YmplY3RcIixcInN1Ym1pdFwiLFwic3Vid2F5XCIsXCJzdWNjZXNzXCIsXCJzdWNoXCIsXCJzdWRkZW5cIixcInN1ZmZlclwiLFwic3VnYXJcIixcInN1Z2dlc3RcIixcInN1aXRcIixcInN1bW1lclwiLFwic3VuXCIsXCJzdW5ueVwiLFwic3Vuc2V0XCIsXCJzdXBlclwiLFwic3VwcGx5XCIsXCJzdXByZW1lXCIsXCJzdXJlXCIsXCJzdXJmYWNlXCIsXCJzdXJnZVwiLFwic3VycHJpc2VcIixcInN1cnJvdW5kXCIsXCJzdXJ2ZXlcIixcInN1c3BlY3RcIixcInN1c3RhaW5cIixcInN3YWxsb3dcIixcInN3YW1wXCIsXCJzd2FwXCIsXCJzd2FybVwiLFwic3dlYXJcIixcInN3ZWV0XCIsXCJzd2lmdFwiLFwic3dpbVwiLFwic3dpbmdcIixcInN3aXRjaFwiLFwic3dvcmRcIixcInN5bWJvbFwiLFwic3ltcHRvbVwiLFwic3lydXBcIixcInN5c3RlbVwiLFwidGFibGVcIixcInRhY2tsZVwiLFwidGFnXCIsXCJ0YWlsXCIsXCJ0YWxlbnRcIixcInRhbGtcIixcInRhbmtcIixcInRhcGVcIixcInRhcmdldFwiLFwidGFza1wiLFwidGFzdGVcIixcInRhdHRvb1wiLFwidGF4aVwiLFwidGVhY2hcIixcInRlYW1cIixcInRlbGxcIixcInRlblwiLFwidGVuYW50XCIsXCJ0ZW5uaXNcIixcInRlbnRcIixcInRlcm1cIixcInRlc3RcIixcInRleHRcIixcInRoYW5rXCIsXCJ0aGF0XCIsXCJ0aGVtZVwiLFwidGhlblwiLFwidGhlb3J5XCIsXCJ0aGVyZVwiLFwidGhleVwiLFwidGhpbmdcIixcInRoaXNcIixcInRob3VnaHRcIixcInRocmVlXCIsXCJ0aHJpdmVcIixcInRocm93XCIsXCJ0aHVtYlwiLFwidGh1bmRlclwiLFwidGlja2V0XCIsXCJ0aWRlXCIsXCJ0aWdlclwiLFwidGlsdFwiLFwidGltYmVyXCIsXCJ0aW1lXCIsXCJ0aW55XCIsXCJ0aXBcIixcInRpcmVkXCIsXCJ0aXNzdWVcIixcInRpdGxlXCIsXCJ0b2FzdFwiLFwidG9iYWNjb1wiLFwidG9kYXlcIixcInRvZGRsZXJcIixcInRvZVwiLFwidG9nZXRoZXJcIixcInRvaWxldFwiLFwidG9rZW5cIixcInRvbWF0b1wiLFwidG9tb3Jyb3dcIixcInRvbmVcIixcInRvbmd1ZVwiLFwidG9uaWdodFwiLFwidG9vbFwiLFwidG9vdGhcIixcInRvcFwiLFwidG9waWNcIixcInRvcHBsZVwiLFwidG9yY2hcIixcInRvcm5hZG9cIixcInRvcnRvaXNlXCIsXCJ0b3NzXCIsXCJ0b3RhbFwiLFwidG91cmlzdFwiLFwidG93YXJkXCIsXCJ0b3dlclwiLFwidG93blwiLFwidG95XCIsXCJ0cmFja1wiLFwidHJhZGVcIixcInRyYWZmaWNcIixcInRyYWdpY1wiLFwidHJhaW5cIixcInRyYW5zZmVyXCIsXCJ0cmFwXCIsXCJ0cmFzaFwiLFwidHJhdmVsXCIsXCJ0cmF5XCIsXCJ0cmVhdFwiLFwidHJlZVwiLFwidHJlbmRcIixcInRyaWFsXCIsXCJ0cmliZVwiLFwidHJpY2tcIixcInRyaWdnZXJcIixcInRyaW1cIixcInRyaXBcIixcInRyb3BoeVwiLFwidHJvdWJsZVwiLFwidHJ1Y2tcIixcInRydWVcIixcInRydWx5XCIsXCJ0cnVtcGV0XCIsXCJ0cnVzdFwiLFwidHJ1dGhcIixcInRyeVwiLFwidHViZVwiLFwidHVpdGlvblwiLFwidHVtYmxlXCIsXCJ0dW5hXCIsXCJ0dW5uZWxcIixcInR1cmtleVwiLFwidHVyblwiLFwidHVydGxlXCIsXCJ0d2VsdmVcIixcInR3ZW50eVwiLFwidHdpY2VcIixcInR3aW5cIixcInR3aXN0XCIsXCJ0d29cIixcInR5cGVcIixcInR5cGljYWxcIixcInVnbHlcIixcInVtYnJlbGxhXCIsXCJ1bmFibGVcIixcInVuYXdhcmVcIixcInVuY2xlXCIsXCJ1bmNvdmVyXCIsXCJ1bmRlclwiLFwidW5kb1wiLFwidW5mYWlyXCIsXCJ1bmZvbGRcIixcInVuaGFwcHlcIixcInVuaWZvcm1cIixcInVuaXF1ZVwiLFwidW5pdFwiLFwidW5pdmVyc2VcIixcInVua25vd25cIixcInVubG9ja1wiLFwidW50aWxcIixcInVudXN1YWxcIixcInVudmVpbFwiLFwidXBkYXRlXCIsXCJ1cGdyYWRlXCIsXCJ1cGhvbGRcIixcInVwb25cIixcInVwcGVyXCIsXCJ1cHNldFwiLFwidXJiYW5cIixcInVyZ2VcIixcInVzYWdlXCIsXCJ1c2VcIixcInVzZWRcIixcInVzZWZ1bFwiLFwidXNlbGVzc1wiLFwidXN1YWxcIixcInV0aWxpdHlcIixcInZhY2FudFwiLFwidmFjdXVtXCIsXCJ2YWd1ZVwiLFwidmFsaWRcIixcInZhbGxleVwiLFwidmFsdmVcIixcInZhblwiLFwidmFuaXNoXCIsXCJ2YXBvclwiLFwidmFyaW91c1wiLFwidmFzdFwiLFwidmF1bHRcIixcInZlaGljbGVcIixcInZlbHZldFwiLFwidmVuZG9yXCIsXCJ2ZW50dXJlXCIsXCJ2ZW51ZVwiLFwidmVyYlwiLFwidmVyaWZ5XCIsXCJ2ZXJzaW9uXCIsXCJ2ZXJ5XCIsXCJ2ZXNzZWxcIixcInZldGVyYW5cIixcInZpYWJsZVwiLFwidmlicmFudFwiLFwidmljaW91c1wiLFwidmljdG9yeVwiLFwidmlkZW9cIixcInZpZXdcIixcInZpbGxhZ2VcIixcInZpbnRhZ2VcIixcInZpb2xpblwiLFwidmlydHVhbFwiLFwidmlydXNcIixcInZpc2FcIixcInZpc2l0XCIsXCJ2aXN1YWxcIixcInZpdGFsXCIsXCJ2aXZpZFwiLFwidm9jYWxcIixcInZvaWNlXCIsXCJ2b2lkXCIsXCJ2b2xjYW5vXCIsXCJ2b2x1bWVcIixcInZvdGVcIixcInZveWFnZVwiLFwid2FnZVwiLFwid2Fnb25cIixcIndhaXRcIixcIndhbGtcIixcIndhbGxcIixcIndhbG51dFwiLFwid2FudFwiLFwid2FyZmFyZVwiLFwid2FybVwiLFwid2FycmlvclwiLFwid2FzaFwiLFwid2FzcFwiLFwid2FzdGVcIixcIndhdGVyXCIsXCJ3YXZlXCIsXCJ3YXlcIixcIndlYWx0aFwiLFwid2VhcG9uXCIsXCJ3ZWFyXCIsXCJ3ZWFzZWxcIixcIndlYXRoZXJcIixcIndlYlwiLFwid2VkZGluZ1wiLFwid2Vla2VuZFwiLFwid2VpcmRcIixcIndlbGNvbWVcIixcIndlc3RcIixcIndldFwiLFwid2hhbGVcIixcIndoYXRcIixcIndoZWF0XCIsXCJ3aGVlbFwiLFwid2hlblwiLFwid2hlcmVcIixcIndoaXBcIixcIndoaXNwZXJcIixcIndpZGVcIixcIndpZHRoXCIsXCJ3aWZlXCIsXCJ3aWxkXCIsXCJ3aWxsXCIsXCJ3aW5cIixcIndpbmRvd1wiLFwid2luZVwiLFwid2luZ1wiLFwid2lua1wiLFwid2lubmVyXCIsXCJ3aW50ZXJcIixcIndpcmVcIixcIndpc2RvbVwiLFwid2lzZVwiLFwid2lzaFwiLFwid2l0bmVzc1wiLFwid29sZlwiLFwid29tYW5cIixcIndvbmRlclwiLFwid29vZFwiLFwid29vbFwiLFwid29yZFwiLFwid29ya1wiLFwid29ybGRcIixcIndvcnJ5XCIsXCJ3b3J0aFwiLFwid3JhcFwiLFwid3JlY2tcIixcIndyZXN0bGVcIixcIndyaXN0XCIsXCJ3cml0ZVwiLFwid3JvbmdcIixcInlhcmRcIixcInllYXJcIixcInllbGxvd1wiLFwieW91XCIsXCJ5b3VuZ1wiLFwieW91dGhcIixcInplYnJhXCIsXCJ6ZXJvXCIsXCJ6b25lXCIsXCJ6b29cIl07dmFyIG89cig5NDA0KSxzPXIoNzExNik7Y29uc3QgaT1cImZhaWxlZCB0byBkZWNvZGUgbW5lbW9uaWNcIjtmdW5jdGlvbiBhKGUpe2NvbnN0IHQ9W107bGV0IHI9MCxuPTA7cmV0dXJuIGUuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cnw9ZTw8bixuKz04LG4+PTExJiYodC5wdXNoKDIwNDcmcikscj4+PTExLG4tPTExKX0pKSxuJiZ0LnB1c2gociksdH1mdW5jdGlvbiBjKGUpe3JldHVybiBlLm1hcCgoZT0+bltlXSkpfWZ1bmN0aW9uIHUoZSl7cmV0dXJuIGMoYShvLmdlbmVyaWNIYXNoKGUpKSlbMF19ZnVuY3Rpb24gbChlKXtpZihlLmxlbmd0aCE9PW8uU0VFRF9CVFlFU19MRU5HVEgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoYFNlZWQgbGVuZ3RoIG11c3QgYmUgJHtvLlNFRURfQlRZRVNfTEVOR1RIfWApO2NvbnN0IHQ9YyhhKGUpKSxyPXUoZSk7cmV0dXJuYCR7dC5qb2luKFwiIFwiKX0gJHtyfWB9ZnVuY3Rpb24gaChlKXtjb25zdCB0PWUuc3BsaXQoXCIgXCIpLHI9dC5zbGljZSgwLDI0KTtmb3IoY29uc3QgZSBvZiByKWlmKC0xPT09bi5pbmRleE9mKGUpKXRocm93IG5ldyBFcnJvcihcInRoZSBtbmVtb25pYyBjb250YWlucyBhIHdvcmQgdGhhdCBpcyBub3QgaW4gdGhlIHdvcmRsaXN0XCIpO2NvbnN0IG89dFt0Lmxlbmd0aC0xXTtsZXQgcz1mdW5jdGlvbihlKXtjb25zdCB0PVtdO2xldCByPTAsbj0wO3JldHVybiBlLmZvckVhY2goKGZ1bmN0aW9uKGUpe2ZvcihyfD1lPDxuLG4rPTExO24+PTg7KXQucHVzaCgyNTUmcikscj4+PTgsbi09OH0pKSxuJiZ0LnB1c2gociksbmV3IFVpbnQ4QXJyYXkodCl9KHIubWFwKChlPT5uLmluZGV4T2YoZSkpKSk7aWYoMzMhPT1zLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoaSk7aWYoMCE9PXNbcy5sZW5ndGgtMV0pdGhyb3cgbmV3IEVycm9yKGkpO2lmKHM9cy5zbGljZSgwLHMubGVuZ3RoLTEpLHUocyk9PT1vKXJldHVybiBzO3Rocm93IG5ldyBFcnJvcihpKX1mdW5jdGlvbiBwKGUpe2NvbnN0IHQ9aChlKSxyPW8ua2V5UGFpckZyb21TZWVkKHQpO3JldHVybnthZGRyOnMuZW5jb2RlQWRkcmVzcyhyLnB1YmxpY0tleSksc2s6ci5zZWNyZXRLZXl9fWZ1bmN0aW9uIGYoZSl7cmV0dXJuIGwoZS5zbGljZSgwLG8uU0VFRF9CVFlFU19MRU5HVEgpKX1mdW5jdGlvbiBkKGUpe3JldHVybiBoKGUpfWZ1bmN0aW9uIGcoZSl7cmV0dXJuIGwoZSl9fSw0MTU4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7SjY6KCk9PnAsRjI6KCk9PmYsUFU6KCk9PmQsUE86KCk9Pmcsdkg6KCk9Pnl9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KSxzPXIoMzAzMyksaT1yKDk0MTcpLGE9cig0MTMpLGM9cigyNDg2KS5CdWZmZXI7Y29uc3QgdT1cIkNhbm5vdCBtZXJnZSB0eHMuIE11bHRpc2lnIHByZWltYWdlcyBkaWZmZXJcIixsPVwiQ2Fubm90IG11dGF0ZSBhIG11bHRpc2lnIGZpZWxkIGFzIGl0IHdvdWxkIGludmFsaWRhdGUgYWxsIGV4aXN0aW5nIHNpZ25hdHVyZXMuXCI7Y2xhc3MgaCBleHRlbmRzIGkuVHJhbnNhY3Rpb257YWRkTGVhc2UoKXt0aHJvdyBuZXcgRXJyb3IobCl9YWRkUmVrZXkoKXt0aHJvdyBuZXcgRXJyb3IobCl9c2lnblR4bihlKXt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2lnbiBhIG11bHRpc2lnIHRyYW5zYWN0aW9uIHVzaW5nIGBzaWduVHhuYC4gVXNlIGBwYXJ0aWFsU2lnblR4bmAgaW5zdGVhZC5cIil9cGFydGlhbFNpZ25UeG4oe3ZlcnNpb246ZSx0aHJlc2hvbGQ6dCxwa3M6cn0saSl7Y29uc3QgYT1uLmtleVBhaXJGcm9tU2VjcmV0S2V5KGkpLnB1YmxpY0tleTtyZXR1cm4gZnVuY3Rpb24oZSx7cmF3U2lnOnQsbXlQazpyfSx7dmVyc2lvbjppLHRocmVzaG9sZDphLHBrczp1fSl7bGV0IGw9ITE7Y29uc3QgaD11Lm1hcCgoZT0+bi5ieXRlc0VxdWFsKGUscik/KGw9ITAse3BrOmMuZnJvbShlKSxzOnR9KTp7cGs6Yy5mcm9tKGUpfSkpO2lmKCExPT09bCl0aHJvdyBuZXcgRXJyb3IoXCJLZXkgZG9lcyBub3QgZXhpc3RcIik7Y29uc3QgcD17bXNpZzp7djppLHRocjphLHN1YnNpZzpofSx0eG46ZX0sZj1vLmZyb21NdWx0aXNpZ1ByZUltZyh7dmVyc2lvbjppLHRocmVzaG9sZDphLHBrczp1fSk7cmV0dXJuIG8uZW5jb2RlQWRkcmVzcyhlLnNuZCkhPT1vLmVuY29kZUFkZHJlc3MoZikmJihwLnNnbnI9Yy5mcm9tKGYpKSxuZXcgVWludDhBcnJheShzLmVuY29kZShwKSl9KHRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKSx7cmF3U2lnOnRoaXMucmF3U2lnblR4bihpKSxteVBrOmF9LHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQscGtzOnJ9KX1zdGF0aWMgZnJvbV9vYmpfZm9yX2VuY29kaW5nKGUpe3JldHVybiBzdXBlci5mcm9tX29ial9mb3JfZW5jb2RpbmcoZSl9fWZ1bmN0aW9uIHAoZSl7aWYoZS5sZW5ndGg8Mil0aHJvdyBuZXcgRXJyb3IoXCJOb3QgZW5vdWdoIG11bHRpc2lnIHRyYW5zYWN0aW9ucyB0byBtZXJnZS4gTmVlZCBhdCBsZWFzdCB0d29cIik7Y29uc3QgdD1zLmRlY29kZShlWzBdKSxyPWguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQudHhuKS50eElEKCksbj10LnNnbnI/by5lbmNvZGVBZGRyZXNzKHQuc2ducik6dm9pZCAwLGk9e3ZlcnNpb246dC5tc2lnLnYsdGhyZXNob2xkOnQubXNpZy50aHIscGtzOnQubXNpZy5zdWJzaWcubWFwKChlPT5lLnBrKSl9LGE9by5lbmNvZGVBZGRyZXNzKG8uZnJvbU11bHRpc2lnUHJlSW1nKGkpKTtsZXQgbD10Lm1zaWcuc3Vic2lnO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBwPXMuZGVjb2RlKGVbaV0pO2lmKGguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHAudHhuKS50eElEKCkhPT1yKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBtZXJnZSB0eHMuIHR4SURzIGRpZmZlclwiKTtpZihuIT09KHAuc2ducj9vLmVuY29kZUFkZHJlc3MocC5zZ25yKTp2b2lkIDApKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBtZXJnZSB0eHMuIEF1dGggYWRkcnMgZGlmZmVyXCIpO2lmKHAubXNpZy5zdWJzaWcubGVuZ3RoIT09dC5tc2lnLnN1YnNpZy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKHUpO2NvbnN0IGY9e3ZlcnNpb246cC5tc2lnLnYsdGhyZXNob2xkOnAubXNpZy50aHIscGtzOnAubXNpZy5zdWJzaWcubWFwKChlPT5lLnBrKSl9O2lmKGEhPT1vLmVuY29kZUFkZHJlc3Moby5mcm9tTXVsdGlzaWdQcmVJbWcoZikpKXRocm93IG5ldyBFcnJvcih1KTtsPXAubXNpZy5zdWJzaWcubWFwKCgoZSxyKT0+e2NvbnN0IG49dC5tc2lnLnN1YnNpZ1tyXTtpZihuLnMpe2lmKGUucyYmMCE9PWMuY29tcGFyZShjLmZyb20oZS5zKSxjLmZyb20obi5zKSkpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IG1lcmdlIHR4cy4gc3Vic2lncyBhcmUgbWlzbWF0Y2hlZC5cIik7cmV0dXJue3BrOm4ucGssczpuLnN9fXJldHVybiBlLnM/e3BrOm4ucGssczplLnN9Om59KSl9Y29uc3QgcD17bXNpZzp7djp0Lm1zaWcudix0aHI6dC5tc2lnLnRocixzdWJzaWc6bH0sdHhuOnQudHhufTtyZXR1cm4gdm9pZCAwIT09biYmKHAuc2ducj1jLmZyb20oby5kZWNvZGVBZGRyZXNzKG4pLnB1YmxpY0tleSkpLG5ldyBVaW50OEFycmF5KHMuZW5jb2RlKHApKX1mdW5jdGlvbiBmKGUsdCxyKXtjb25zdCBzPXQudixpPXQudGhyLGM9dC5zdWJzaWcsdT1jLm1hcCgoZT0+ZS5waykpO2lmKHQuc3Vic2lnLmxlbmd0aDxpKXJldHVybiExO2xldCBsO3RyeXtsPW8uZnJvbU11bHRpc2lnUHJlSW1nKHt2ZXJzaW9uOnMsdGhyZXNob2xkOmkscGtzOnV9KX1jYXRjaChlKXtyZXR1cm4hMX1pZighYS5hcnJheUVxdWFsKGwscikpcmV0dXJuITE7bGV0IGg9MDtmb3IoY29uc3QgZSBvZiBjKXZvaWQgMCE9PWUucyYmKGgrPTEpO2lmKGg8aSlyZXR1cm4hMTtsZXQgcD0wO2Zvcihjb25zdCB0IG9mIGMpdm9pZCAwIT09dC5zJiZuLnZlcmlmeShlLHQucyx0LnBrKSYmKHArPTEpO3JldHVybiEocDxpKX1mdW5jdGlvbiBkKGUse3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSxzKXtjb25zdCBhPW8uZnJvbU11bHRpc2lnUHJlSW1nQWRkcnMoe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSk7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJmcm9tXCIpfHwoZS5mcm9tPWEpO2NvbnN0IGM9bi5tYXAoKGU9Pm8uZGVjb2RlQWRkcmVzcyhlKS5wdWJsaWNLZXkpKTtsZXQgdSxsO3JldHVybiBlIGluc3RhbmNlb2YgaS5UcmFuc2FjdGlvbj8odT1lLGw9aC5wcm90b3R5cGUucGFydGlhbFNpZ25UeG4uY2FsbCh1LHt2ZXJzaW9uOnQsdGhyZXNob2xkOnIscGtzOmN9LHMpKToodT1uZXcgaChlKSxsPXUucGFydGlhbFNpZ25UeG4oe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixwa3M6Y30scykpLHt0eElEOnUudHhJRCgpLnRvU3RyaW5nKCksYmxvYjpsfX1mdW5jdGlvbiBnKGUse3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSxpKXtjb25zdCBhPW4ubWFwKChlPT5vLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5KSksYz1zLmRlY29kZShlKSx1PWguZnJvbV9vYmpfZm9yX2VuY29kaW5nKGMudHhuKSxsPXUucGFydGlhbFNpZ25UeG4oe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixwa3M6YX0saSk7cmV0dXJue3R4SUQ6dS50eElEKCkudG9TdHJpbmcoKSxibG9iOnAoW2UsbF0pfX1mdW5jdGlvbiB5KHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQsYWRkcnM6cn0pe3JldHVybiBvLmZyb21NdWx0aXNpZ1ByZUltZ0FkZHJzKHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQsYWRkcnM6cn0pfX0sOTQwNDooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtnZW5lcmljSGFzaDooKT0+YSxyYW5kb21CeXRlczooKT0+YyxrZXlQYWlyRnJvbVNlZWQ6KCk9PnUsa2V5UGFpcjooKT0+bCxrZXlQYWlyRnJvbVNlY3JldEtleTooKT0+aCxzaWduOigpPT5wLGJ5dGVzRXF1YWw6KCk9PmYsdmVyaWZ5OigpPT5kLFBVQkxJQ19LRVlfTEVOR1RIOigpPT5nLFNFQ1JFVF9LRVlfTEVOR1RIOigpPT55LEhBU0hfQllURVNfTEVOR1RIOigpPT5tLFNFRURfQlRZRVNfTEVOR1RIOigpPT5ifSk7dmFyIG49cig3NzY1KSxvPXIubihuKSxzPXIoOTc1NyksaT1yLm4ocyk7ZnVuY3Rpb24gYShlKXtyZXR1cm4gaSgpLnNoYTUxMl8yNTYuYXJyYXkoZSl9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gbygpLnJhbmRvbUJ5dGVzKGUpfWZ1bmN0aW9uIHUoZSl7cmV0dXJuIG8oKS5zaWduLmtleVBhaXIuZnJvbVNlZWQoZSl9ZnVuY3Rpb24gbCgpe3JldHVybiB1KGMobygpLmJveC5zZWNyZXRLZXlMZW5ndGgpKX1mdW5jdGlvbiBoKGUpe3JldHVybiBvKCkuc2lnbi5rZXlQYWlyLmZyb21TZWNyZXRLZXkoZSl9ZnVuY3Rpb24gcChlLHQpe3JldHVybiBvKCkuc2lnbi5kZXRhY2hlZChlLHQpfWZ1bmN0aW9uIGYoZSx0KXtyZXR1cm4gbygpLnZlcmlmeShlLHQpfWZ1bmN0aW9uIGQoZSx0LHIpe3JldHVybiBvKCkuc2lnbi5kZXRhY2hlZC52ZXJpZnkoZSx0LHIpfWNvbnN0IGc9bygpLnNpZ24ucHVibGljS2V5TGVuZ3RoLHk9bygpLnNpZ24uc2VjcmV0S2V5TGVuZ3RoLG09MzIsYj0zMn0sODM0OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7eDc6KCk9PnMsaTE6KCk9PmksVmo6KCk9PmEsWHc6KCk9PmN9KTt2YXIgbj1yKDg4MDApLG89cig0MTU4KTtmdW5jdGlvbiBzKGUpe3JldHVybih0LHIpPT57Y29uc3Qgbj1bXTtmb3IoY29uc3QgbyBvZiByKW4ucHVzaCh0W29dLnNpZ25UeG4oZS5zaykpO3JldHVybiBQcm9taXNlLnJlc29sdmUobil9fWZ1bmN0aW9uIGkoZSl7cmV0dXJuKHQscik9Pntjb25zdCBvPVtdO2Zvcihjb25zdCBzIG9mIHIpe2NvbnN0e2Jsb2I6cn09KDAsbi5zaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdCkodFtzXSxlKTtvLnB1c2gocil9cmV0dXJuIFByb21pc2UucmVzb2x2ZShvKX19ZnVuY3Rpb24gYShlLHQpe3JldHVybihyLG4pPT57Y29uc3Qgcz1bXTtmb3IoY29uc3QgaSBvZiBuKXtjb25zdCBuPXJbaV0sYT1bXTtmb3IoY29uc3QgciBvZiB0KXtjb25zdHtibG9iOnR9PSgwLG8uUFUpKG4sZSxyKTthLnB1c2godCl9cy5wdXNoKCgwLG8uSjYpKGEpKX1yZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHMpfX1mdW5jdGlvbiBjKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiYyPT09T2JqZWN0LmtleXMoZSkubGVuZ3RoJiZcIm9iamVjdFwiPT10eXBlb2YgZS50eG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuc2lnbmVyfX0sOTQxNzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtBTEdPUkFORF9NSU5fVFhfRkVFOigpPT5oLFRyYW5zYWN0aW9uOigpPT5mLGVuY29kZVVuc2lnbmVkVHJhbnNhY3Rpb246KCk9PmQsZGVjb2RlVW5zaWduZWRUcmFuc2FjdGlvbjooKT0+ZyxkZWNvZGVTaWduZWRUcmFuc2FjdGlvbjooKT0+eSxpbnN0YW50aWF0ZVR4bklmTmVlZGVkOigpPT5tLGRlZmF1bHQ6KCk9PmJ9KTt2YXIgbj1yKDcyNjcpLG89ci5uKG4pLHM9cig3MTE2KSxpPXIoMzAzMyksYT1yKDk0MDQpLGM9cig0MTMpLHU9cigxNjI0KSxsPXIoMjQ4NikuQnVmZmVyO2NvbnN0IGg9MWUzO2Z1bmN0aW9uIHAoZSx0LHIpe2lmKG51bGw9PWUpcmV0dXJuO2xldCBuO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlP249bC5mcm9tKGUsXCJiYXNlNjRcIik6ZS5jb25zdHJ1Y3Rvcj09PVVpbnQ4QXJyYXk/bj1sLmZyb20oZSk6bC5pc0J1ZmZlcihlKSYmKG49ZSksbnVsbD09bnx8bi5ieXRlTGVuZ3RoIT09cil0aHJvdyBFcnJvcihgJHt0fSBtdXN0IGJlIGEgJHtyfSBieXRlIFVpbnQ4QXJyYXkgb3IgQnVmZmVyIG9yIGJhc2U2NCBzdHJpbmcuYCk7cmV0dXJuIG59Y2xhc3MgZntjb25zdHJ1Y3Rvcih7Li4uZX0pe3RoaXMubmFtZT1cIlRyYW5zYWN0aW9uXCIsdGhpcy50YWc9bC5mcm9tKFwiVFhcIik7Y29uc3QgdD17dHlwZTp1LmlVLnBheSxmbGF0RmVlOiExLG5vblBhcnRpY2lwYXRpb246ITF9O2lmKHZvaWQgMD09PWUudHlwZSYmKGUudHlwZT10LnR5cGUpLHZvaWQgMD09PWUuZmxhdEZlZSYmKGUuZmxhdEZlZT10LmZsYXRGZWUpLGUudHlwZT09PXUuaVUua2V5cmVnJiZ2b2lkIDAhPT1lLnZvdGVLZXkmJnZvaWQgMD09PWUubm9uUGFydGljaXBhdGlvbiYmKGUubm9uUGFydGljaXBhdGlvbj10Lm5vblBhcnRpY2lwYXRpb24pLHZvaWQgMCE9PWUuc3VnZ2VzdGVkUGFyYW1zKXtjb25zdCB0PWU7dC5nZW5lc2lzSGFzaD10LnN1Z2dlc3RlZFBhcmFtcy5nZW5lc2lzSGFzaCx0LmZlZT10LnN1Z2dlc3RlZFBhcmFtcy5mZWUsdm9pZCAwIT09dC5zdWdnZXN0ZWRQYXJhbXMuZmxhdEZlZSYmKHQuZmxhdEZlZT10LnN1Z2dlc3RlZFBhcmFtcy5mbGF0RmVlKSx0LmZpcnN0Um91bmQ9dC5zdWdnZXN0ZWRQYXJhbXMuZmlyc3RSb3VuZCx0Lmxhc3RSb3VuZD10LnN1Z2dlc3RlZFBhcmFtcy5sYXN0Um91bmQsdC5nZW5lc2lzSUQ9dC5zdWdnZXN0ZWRQYXJhbXMuZ2VuZXNpc0lEfWNvbnN0IHI9ZTtpZihyLmZyb209cy5kZWNvZGVBZGRyZXNzKHIuZnJvbSksdm9pZCAwIT09ci50byYmKHIudG89cy5kZWNvZGVBZGRyZXNzKHIudG8pKSx2b2lkIDAhPT1yLmNsb3NlUmVtYWluZGVyVG8mJihyLmNsb3NlUmVtYWluZGVyVG89cy5kZWNvZGVBZGRyZXNzKHIuY2xvc2VSZW1haW5kZXJUbykpLHZvaWQgMCE9PXIuYXNzZXRNYW5hZ2VyJiYoci5hc3NldE1hbmFnZXI9cy5kZWNvZGVBZGRyZXNzKHIuYXNzZXRNYW5hZ2VyKSksdm9pZCAwIT09ci5hc3NldFJlc2VydmUmJihyLmFzc2V0UmVzZXJ2ZT1zLmRlY29kZUFkZHJlc3Moci5hc3NldFJlc2VydmUpKSx2b2lkIDAhPT1yLmFzc2V0RnJlZXplJiYoci5hc3NldEZyZWV6ZT1zLmRlY29kZUFkZHJlc3Moci5hc3NldEZyZWV6ZSkpLHZvaWQgMCE9PXIuYXNzZXRDbGF3YmFjayYmKHIuYXNzZXRDbGF3YmFjaz1zLmRlY29kZUFkZHJlc3Moci5hc3NldENsYXdiYWNrKSksdm9pZCAwIT09ci5hc3NldFJldm9jYXRpb25UYXJnZXQmJihyLmFzc2V0UmV2b2NhdGlvblRhcmdldD1zLmRlY29kZUFkZHJlc3Moci5hc3NldFJldm9jYXRpb25UYXJnZXQpKSx2b2lkIDAhPT1yLmZyZWV6ZUFjY291bnQmJihyLmZyZWV6ZUFjY291bnQ9cy5kZWNvZGVBZGRyZXNzKHIuZnJlZXplQWNjb3VudCkpLHZvaWQgMCE9PXIucmVLZXlUbyYmKHIucmVLZXlUbz1zLmRlY29kZUFkZHJlc3Moci5yZUtleVRvKSksdm9pZCAwPT09ci5nZW5lc2lzSGFzaCl0aHJvdyBFcnJvcihcImdlbmVzaXMgaGFzaCBtdXN0IGJlIHNwZWNpZmllZCBhbmQgaW4gYSBiYXNlNjQgc3RyaW5nLlwiKTtpZihyLmdlbmVzaXNIYXNoPWwuZnJvbShyLmdlbmVzaXNIYXNoLFwiYmFzZTY0XCIpLHZvaWQgMCE9PXIuYW1vdW50JiYoIShOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFtb3VudCl8fFwiYmlnaW50XCI9PXR5cGVvZiByLmFtb3VudCYmci5hbW91bnQ8PUJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl8fHIuYW1vdW50PDApKXRocm93IEVycm9yKFwiQW1vdW50IG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjY0LTEuIElmIHRoZSBudW1iZXIgaXMgbGFyZ2VyIHRoYW4gMl41My0xLCB1c2UgYmlnaW50LlwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoci5mZWUpfHxyLmZlZTwwKXRocm93IEVycm9yKFwiZmVlIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuZmlyc3RSb3VuZCl8fHIuZmlyc3RSb3VuZDwwKXRocm93IEVycm9yKFwiZmlyc3RSb3VuZCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmxhc3RSb3VuZCl8fHIubGFzdFJvdW5kPDApdGhyb3cgRXJyb3IoXCJsYXN0Um91bmQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlclwiKTtpZih2b2lkIDAhPT1yLmV4dHJhUGFnZXMmJighTnVtYmVyLmlzSW50ZWdlcihyLmV4dHJhUGFnZXMpfHxyLmV4dHJhUGFnZXM8MHx8ci5leHRyYVBhZ2VzPjMpKXRocm93IEVycm9yKFwiZXh0cmFQYWdlcyBtdXN0IGJlIGFuIEludGVnZXIgYmV0d2VlbiBhbmQgaW5jbHVkaW5nIDAgdG8gM1wiKTtpZih2b2lkIDAhPT1yLmFzc2V0VG90YWwmJighKE51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXNzZXRUb3RhbCl8fFwiYmlnaW50XCI9PXR5cGVvZiByLmFzc2V0VG90YWwmJnIuYXNzZXRUb3RhbDw9QmlnSW50KFwiMHhmZmZmZmZmZmZmZmZmZmZmXCIpKXx8ci5hc3NldFRvdGFsPDApKXRocm93IEVycm9yKFwiVG90YWwgYXNzZXQgaXNzdWFuY2UgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNjQtMS4gSWYgdGhlIG51bWJlciBpcyBsYXJnZXIgdGhhbiAyXjUzLTEsIHVzZSBiaWdpbnQuXCIpO2lmKHZvaWQgMCE9PXIuYXNzZXREZWNpbWFscyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFzc2V0RGVjaW1hbHMpfHxyLmFzc2V0RGVjaW1hbHM8MHx8ci5hc3NldERlY2ltYWxzPjE5KSl0aHJvdyBFcnJvcihgYXNzZXREZWNpbWFscyBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gJHsxOS4udG9TdHJpbmcoKX1gKTtpZih2b2lkIDAhPT1yLmFzc2V0SW5kZXgmJighTnVtYmVyLmlzU2FmZUludGVnZXIoci5hc3NldEluZGV4KXx8ci5hc3NldEluZGV4PDApKXRocm93IEVycm9yKFwiQXNzZXQgaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcEluZGV4JiYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXBwSW5kZXgpfHxyLmFwcEluZGV4PDApKXRocm93IEVycm9yKFwiQXBwbGljYXRpb24gaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcExvY2FsSW50cyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcExvY2FsSW50cyl8fHIuYXBwTG9jYWxJbnRzPDApKXRocm93IEVycm9yKFwiQXBwbGljYXRpb24gbG9jYWwgaW50cyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwTG9jYWxCeXRlU2xpY2VzJiYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXBwTG9jYWxCeXRlU2xpY2VzKXx8ci5hcHBMb2NhbEJ5dGVTbGljZXM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBsb2NhbCBieXRlIHNsaWNlcyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwR2xvYmFsSW50cyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcEdsb2JhbEludHMpfHxyLmFwcEdsb2JhbEludHM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBnbG9iYWwgaW50cyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwR2xvYmFsQnl0ZVNsaWNlcyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcEdsb2JhbEJ5dGVTbGljZXMpfHxyLmFwcEdsb2JhbEJ5dGVTbGljZXM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBnbG9iYWwgYnl0ZSBzbGljZXMgY291bnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcEFwcHJvdmFsUHJvZ3JhbSYmci5hcHBBcHByb3ZhbFByb2dyYW0uY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwiYXBwQXBwcm92YWxQcm9ncmFtIG11c3QgYmUgYSBVaW50OEFycmF5LlwiKTtpZih2b2lkIDAhPT1yLmFwcENsZWFyUHJvZ3JhbSYmci5hcHBDbGVhclByb2dyYW0uY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwiYXBwQ2xlYXJQcm9ncmFtIG11c3QgYmUgYSBVaW50OEFycmF5LlwiKTtpZih2b2lkIDAhPT1yLmFwcEFyZ3Mpe2lmKCFBcnJheS5pc0FycmF5KHIuYXBwQXJncykpdGhyb3cgRXJyb3IoXCJhcHBBcmdzIG11c3QgYmUgYW4gQXJyYXkgb2YgVWludDhBcnJheS5cIik7ci5hcHBBcmdzPXIuYXBwQXJncy5zbGljZSgpLHIuYXBwQXJncy5mb3JFYWNoKChlPT57aWYoZS5jb25zdHJ1Y3RvciE9PVVpbnQ4QXJyYXkpdGhyb3cgRXJyb3IoXCJlYWNoIGVsZW1lbnQgb2YgQXBwQXJncyBtdXN0IGJlIGEgVWludDhBcnJheS5cIil9KSl9ZWxzZSByLmFwcEFyZ3M9W107aWYodm9pZCAwIT09ci5hcHBBY2NvdW50cyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBBY2NvdW50cykpdGhyb3cgRXJyb3IoXCJhcHBBY2NvdW50cyBtdXN0IGJlIGFuIEFycmF5IG9mIGFkZHJlc3Nlcy5cIik7ci5hcHBBY2NvdW50cz1yLmFwcEFjY291bnRzLm1hcCgoZT0+cy5kZWNvZGVBZGRyZXNzKGUpKSl9aWYodm9pZCAwIT09ci5hcHBGb3JlaWduQXBwcyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBGb3JlaWduQXBwcykpdGhyb3cgRXJyb3IoXCJhcHBGb3JlaWduQXBwcyBtdXN0IGJlIGFuIEFycmF5IG9mIGludGVnZXJzLlwiKTtyLmFwcEZvcmVpZ25BcHBzPXIuYXBwRm9yZWlnbkFwcHMuc2xpY2UoKSxyLmFwcEZvcmVpZ25BcHBzLmZvckVhY2goKGU9PntpZighTnVtYmVyLmlzU2FmZUludGVnZXIoZSl8fGU8MCl0aHJvdyBFcnJvcihcImVhY2ggZm9yZWlnbiBhcHBsaWNhdGlvbiBpbmRleCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpfSkpfWlmKHZvaWQgMCE9PXIuYXBwRm9yZWlnbkFzc2V0cyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBGb3JlaWduQXNzZXRzKSl0aHJvdyBFcnJvcihcImFwcEZvcmVpZ25Bc3NldHMgbXVzdCBiZSBhbiBBcnJheSBvZiBpbnRlZ2Vycy5cIik7ci5hcHBGb3JlaWduQXNzZXRzPXIuYXBwRm9yZWlnbkFzc2V0cy5zbGljZSgpLHIuYXBwRm9yZWlnbkFzc2V0cy5mb3JFYWNoKChlPT57aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKGUpfHxlPDApdGhyb3cgRXJyb3IoXCJlYWNoIGZvcmVpZ24gYXNzZXQgaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKX0pKX1pZih2b2lkIDAhPT1yLmFzc2V0TWV0YWRhdGFIYXNoJiYwIT09ci5hc3NldE1ldGFkYXRhSGFzaC5sZW5ndGgpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByLmFzc2V0TWV0YWRhdGFIYXNoJiYoci5hc3NldE1ldGFkYXRhSGFzaD1uZXcgVWludDhBcnJheShsLmZyb20oci5hc3NldE1ldGFkYXRhSGFzaCkpKSxyLmFzc2V0TWV0YWRhdGFIYXNoLmNvbnN0cnVjdG9yIT09VWludDhBcnJheXx8MzIhPT1yLmFzc2V0TWV0YWRhdGFIYXNoLmJ5dGVMZW5ndGgpdGhyb3cgRXJyb3IoXCJhc3NldE1ldGFkYXRhSGFzaCBtdXN0IGJlIGEgMzIgYnl0ZSBVaW50OEFycmF5IG9yIHN0cmluZy5cIik7ci5hc3NldE1ldGFkYXRhSGFzaC5ldmVyeSgoZT0+MD09PWUpKSYmKHIuYXNzZXRNZXRhZGF0YUhhc2g9dm9pZCAwKX1lbHNlIHIuYXNzZXRNZXRhZGF0YUhhc2g9dm9pZCAwO2lmKHZvaWQgMCE9PXIubm90ZSl7aWYoci5ub3RlLmNvbnN0cnVjdG9yIT09VWludDhBcnJheSl0aHJvdyBFcnJvcihcIm5vdGUgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpfWVsc2Ugci5ub3RlPW5ldyBVaW50OEFycmF5KDApO2lmKHZvaWQgMCE9PXIubGVhc2Upe2lmKHIubGVhc2UuY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwibGVhc2UgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpO2lmKDMyIT09ci5sZWFzZS5sZW5ndGgpdGhyb3cgRXJyb3IoYGxlYXNlIG11c3QgYmUgb2YgbGVuZ3RoICR7MzIuLnRvU3RyaW5nKCl9LmApO3IubGVhc2UuZXZlcnkoKGU9PjA9PT1lKSkmJihyLmxlYXNlPW5ldyBVaW50OEFycmF5KDApKX1lbHNlIHIubGVhc2U9bmV3IFVpbnQ4QXJyYXkoMCk7aWYoci52b3RlS2V5PXAoci52b3RlS2V5LFwidm90ZUtleVwiLDMyKSxyLnNlbGVjdGlvbktleT1wKHIuc2VsZWN0aW9uS2V5LFwic2VsZWN0aW9uS2V5XCIsMzIpLHIuc3RhdGVQcm9vZktleT1wKHIuc3RhdGVQcm9vZktleSxcInN0YXRlUHJvb2ZLZXlcIiw2NCksci5ub25QYXJ0aWNpcGF0aW9uJiYoci52b3RlS2V5fHxyLnNlbGVjdGlvbktleXx8ci52b3RlRmlyc3R8fHIuc3RhdGVQcm9vZktleXx8ci52b3RlTGFzdHx8ci52b3RlS2V5RGlsdXRpb24pKXRocm93IG5ldyBFcnJvcihcIm5vblBhcnRpY2lwYXRpb24gaXMgdHJ1ZSBidXQgcGFydGljaXBhdGlvbiBwYXJhbXMgYXJlIHByZXNlbnQuXCIpO2lmKCFyLm5vblBhcnRpY2lwYXRpb24mJihyLnZvdGVLZXl8fHIuc2VsZWN0aW9uS2V5fHxyLnN0YXRlUHJvb2ZLZXl8fHIudm90ZUZpcnN0fHxyLnZvdGVMYXN0fHxyLnZvdGVLZXlEaWx1dGlvbikmJiEoci52b3RlS2V5JiZyLnNlbGVjdGlvbktleSYmci52b3RlRmlyc3QmJnIudm90ZUxhc3QmJnIudm90ZUtleURpbHV0aW9uKSl0aHJvdyBuZXcgRXJyb3IoXCJvbmxpbmUga2V5IHJlZ2lzdHJhdGlvbiBtaXNzaW5nIGF0IGxlYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nIGZpZWxkczogdm90ZUtleSwgc2VsZWN0aW9uS2V5LCB2b3RlRmlyc3QsIHZvdGVMYXN0LCB2b3RlS2V5RGlsdXRpb25cIik7ZGVsZXRlIHIuc3VnZ2VzdGVkUGFyYW1zLE9iamVjdC5hc3NpZ24odGhpcyxjLnJlbW92ZVVuZGVmaW5lZFByb3BlcnRpZXMocikpLHIuZmxhdEZlZXx8KHRoaXMuZmVlKj10aGlzLmVzdGltYXRlU2l6ZSgpLHRoaXMuZmVlPGgmJih0aGlzLmZlZT1oKSksdGhpcy5ncm91cD12b2lkIDB9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtpZihcInBheVwiPT09dGhpcy50eXBlKXtjb25zdCBlPXthbXQ6dGhpcy5hbW91bnQsZmVlOnRoaXMuZmVlLGZ2OnRoaXMuZmlyc3RSb3VuZCxsdjp0aGlzLmxhc3RSb3VuZCxub3RlOmwuZnJvbSh0aGlzLm5vdGUpLHNuZDpsLmZyb20odGhpcy5mcm9tLnB1YmxpY0tleSksdHlwZTpcInBheVwiLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cH07cmV0dXJuIHZvaWQgMCE9PXRoaXMuY2xvc2VSZW1haW5kZXJUbyYmcy5lbmNvZGVBZGRyZXNzKHRoaXMuY2xvc2VSZW1haW5kZXJUby5wdWJsaWNLZXkpIT09cy5BTEdPUkFORF9aRVJPX0FERFJFU1NfU1RSSU5HJiYoZS5jbG9zZT1sLmZyb20odGhpcy5jbG9zZVJlbWFpbmRlclRvLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMucmVLZXlUbyYmKGUucmVrZXk9bC5mcm9tKHRoaXMucmVLZXlUby5wdWJsaWNLZXkpKSx2b2lkIDAhPT10aGlzLnRvJiYoZS5yY3Y9bC5mcm9tKHRoaXMudG8ucHVibGljS2V5KSksZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGUubHgubGVuZ3RofHxkZWxldGUgZS5seCxlLnJla2V5fHxkZWxldGUgZS5yZWtleSxlfWlmKFwia2V5cmVnXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2ZlZTp0aGlzLmZlZSxmdjp0aGlzLmZpcnN0Um91bmQsbHY6dGhpcy5sYXN0Um91bmQsbm90ZTpsLmZyb20odGhpcy5ub3RlKSxzbmQ6bC5mcm9tKHRoaXMuZnJvbS5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCx2b3Rla2V5OnRoaXMudm90ZUtleSxzZWxrZXk6dGhpcy5zZWxlY3Rpb25LZXksc3ByZmtleTp0aGlzLnN0YXRlUHJvb2ZLZXksdm90ZWZzdDp0aGlzLnZvdGVGaXJzdCx2b3RlbHN0OnRoaXMudm90ZUxhc3Qsdm90ZWtkOnRoaXMudm90ZUtleURpbHV0aW9ufTtyZXR1cm4gZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmx4Lmxlbmd0aHx8ZGVsZXRlIGUubHgsZS5mZWV8fGRlbGV0ZSBlLmZlZSxlLmZ2fHxkZWxldGUgZS5mdixlLmdlbnx8ZGVsZXRlIGUuZ2VuLHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsdm9pZCAwIT09dGhpcy5yZUtleVRvJiYoZS5yZWtleT1sLmZyb20odGhpcy5yZUtleVRvLnB1YmxpY0tleSkpLHRoaXMubm9uUGFydGljaXBhdGlvbiYmKGUubm9ucGFydD0hMCksZS5zZWxrZXl8fGRlbGV0ZSBlLnNlbGtleSxlLnZvdGVrZXl8fGRlbGV0ZSBlLnZvdGVrZXksZS5zcHJma2V5fHxkZWxldGUgZS5zcHJma2V5LGUudm90ZWZzdHx8ZGVsZXRlIGUudm90ZWZzdCxlLnZvdGVsc3R8fGRlbGV0ZSBlLnZvdGVsc3QsZS52b3Rla2R8fGRlbGV0ZSBlLnZvdGVrZCxlfWlmKFwiYWNmZ1wiPT09dGhpcy50eXBlKXtjb25zdCBlPXtmZWU6dGhpcy5mZWUsZnY6dGhpcy5maXJzdFJvdW5kLGx2OnRoaXMubGFzdFJvdW5kLG5vdGU6bC5mcm9tKHRoaXMubm90ZSksc25kOmwuZnJvbSh0aGlzLmZyb20ucHVibGljS2V5KSx0eXBlOnRoaXMudHlwZSxnZW46dGhpcy5nZW5lc2lzSUQsZ2g6dGhpcy5nZW5lc2lzSGFzaCxseDpsLmZyb20odGhpcy5sZWFzZSksZ3JwOnRoaXMuZ3JvdXAsY2FpZDp0aGlzLmFzc2V0SW5kZXgsYXBhcjp7dDp0aGlzLmFzc2V0VG90YWwsZGY6dGhpcy5hc3NldERlZmF1bHRGcm96ZW4sZGM6dGhpcy5hc3NldERlY2ltYWxzfX07cmV0dXJuIHZvaWQgMCE9PXRoaXMuYXNzZXRNYW5hZ2VyJiYoZS5hcGFyLm09bC5mcm9tKHRoaXMuYXNzZXRNYW5hZ2VyLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXRSZXNlcnZlJiYoZS5hcGFyLnI9bC5mcm9tKHRoaXMuYXNzZXRSZXNlcnZlLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXRGcmVlemUmJihlLmFwYXIuZj1sLmZyb20odGhpcy5hc3NldEZyZWV6ZS5wdWJsaWNLZXkpKSx2b2lkIDAhPT10aGlzLmFzc2V0Q2xhd2JhY2smJihlLmFwYXIuYz1sLmZyb20odGhpcy5hc3NldENsYXdiYWNrLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXROYW1lJiYoZS5hcGFyLmFuPXRoaXMuYXNzZXROYW1lKSx2b2lkIDAhPT10aGlzLmFzc2V0VW5pdE5hbWUmJihlLmFwYXIudW49dGhpcy5hc3NldFVuaXROYW1lKSx2b2lkIDAhPT10aGlzLmFzc2V0VVJMJiYoZS5hcGFyLmF1PXRoaXMuYXNzZXRVUkwpLHZvaWQgMCE9PXRoaXMuYXNzZXRNZXRhZGF0YUhhc2gmJihlLmFwYXIuYW09bC5mcm9tKHRoaXMuYXNzZXRNZXRhZGF0YUhhc2gpKSxlLm5vdGUubGVuZ3RofHxkZWxldGUgZS5ub3RlLGUubHgubGVuZ3RofHxkZWxldGUgZS5seCxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDAhPT10aGlzLnJlS2V5VG8mJihlLnJla2V5PWwuZnJvbSh0aGlzLnJlS2V5VG8ucHVibGljS2V5KSksZS5jYWlkfHxkZWxldGUgZS5jYWlkLGUuYXBhci50fHxlLmFwYXIudW58fGUuYXBhci5hbnx8ZS5hcGFyLmRmfHxlLmFwYXIubXx8ZS5hcGFyLnJ8fGUuYXBhci5mfHxlLmFwYXIuY3x8ZS5hcGFyLmF1fHxlLmFwYXIuYW18fGUuYXBhci5kYz8oZS5hcGFyLnR8fGRlbGV0ZSBlLmFwYXIudCxlLmFwYXIuZGN8fGRlbGV0ZSBlLmFwYXIuZGMsZS5hcGFyLnVufHxkZWxldGUgZS5hcGFyLnVuLGUuYXBhci5hbnx8ZGVsZXRlIGUuYXBhci5hbixlLmFwYXIuZGZ8fGRlbGV0ZSBlLmFwYXIuZGYsZS5hcGFyLm18fGRlbGV0ZSBlLmFwYXIubSxlLmFwYXIucnx8ZGVsZXRlIGUuYXBhci5yLGUuYXBhci5mfHxkZWxldGUgZS5hcGFyLmYsZS5hcGFyLmN8fGRlbGV0ZSBlLmFwYXIuYyxlLmFwYXIuYXV8fGRlbGV0ZSBlLmFwYXIuYXUsZS5hcGFyLmFtfHxkZWxldGUgZS5hcGFyLmFtKTpkZWxldGUgZS5hcGFyLHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsZX1pZihcImF4ZmVyXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2FhbXQ6dGhpcy5hbW91bnQsZmVlOnRoaXMuZmVlLGZ2OnRoaXMuZmlyc3RSb3VuZCxsdjp0aGlzLmxhc3RSb3VuZCxub3RlOmwuZnJvbSh0aGlzLm5vdGUpLHNuZDpsLmZyb20odGhpcy5mcm9tLnB1YmxpY0tleSksYXJjdjpsLmZyb20odGhpcy50by5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCx4YWlkOnRoaXMuYXNzZXRJbmRleH07cmV0dXJuIHZvaWQgMCE9PXRoaXMuY2xvc2VSZW1haW5kZXJUbyYmKGUuYWNsb3NlPWwuZnJvbSh0aGlzLmNsb3NlUmVtYWluZGVyVG8ucHVibGljS2V5KSksdm9pZCAwIT09dGhpcy5hc3NldFJldm9jYXRpb25UYXJnZXQmJihlLmFzbmQ9bC5mcm9tKHRoaXMuYXNzZXRSZXZvY2F0aW9uVGFyZ2V0LnB1YmxpY0tleSkpLGUubm90ZS5sZW5ndGh8fGRlbGV0ZSBlLm5vdGUsZS5seC5sZW5ndGh8fGRlbGV0ZSBlLmx4LGUuYWFtdHx8ZGVsZXRlIGUuYWFtdCxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGUuYWNsb3NlfHxkZWxldGUgZS5hY2xvc2UsZS5hc25kfHxkZWxldGUgZS5hc25kLGUucmVrZXl8fGRlbGV0ZSBlLnJla2V5LHZvaWQgMCE9PXRoaXMucmVLZXlUbyYmKGUucmVrZXk9bC5mcm9tKHRoaXMucmVLZXlUby5wdWJsaWNLZXkpKSxlfWlmKFwiYWZyelwiPT09dGhpcy50eXBlKXtjb25zdCBlPXtmZWU6dGhpcy5mZWUsZnY6dGhpcy5maXJzdFJvdW5kLGx2OnRoaXMubGFzdFJvdW5kLG5vdGU6bC5mcm9tKHRoaXMubm90ZSksc25kOmwuZnJvbSh0aGlzLmZyb20ucHVibGljS2V5KSx0eXBlOnRoaXMudHlwZSxnZW46dGhpcy5nZW5lc2lzSUQsZ2g6dGhpcy5nZW5lc2lzSGFzaCxseDpsLmZyb20odGhpcy5sZWFzZSksZ3JwOnRoaXMuZ3JvdXAsZmFpZDp0aGlzLmFzc2V0SW5kZXgsYWZyejp0aGlzLmZyZWV6ZVN0YXRlfTtyZXR1cm4gdm9pZCAwIT09dGhpcy5mcmVlemVBY2NvdW50JiYoZS5mYWRkPWwuZnJvbSh0aGlzLmZyZWV6ZUFjY291bnQucHVibGljS2V5KSksZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmx4Lmxlbmd0aHx8ZGVsZXRlIGUubHgsZS5hbXR8fGRlbGV0ZSBlLmFtdCxlLmZlZXx8ZGVsZXRlIGUuZmVlLGUuZnZ8fGRlbGV0ZSBlLmZ2LGUuZ2VufHxkZWxldGUgZS5nZW4sZS5hZnJ6fHxkZWxldGUgZS5hZnJ6LHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsdm9pZCAwIT09dGhpcy5yZUtleVRvJiYoZS5yZWtleT1sLmZyb20odGhpcy5yZUtleVRvLnB1YmxpY0tleSkpLGV9aWYoXCJhcHBsXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2ZlZTp0aGlzLmZlZSxmdjp0aGlzLmZpcnN0Um91bmQsbHY6dGhpcy5sYXN0Um91bmQsbm90ZTpsLmZyb20odGhpcy5ub3RlKSxzbmQ6bC5mcm9tKHRoaXMuZnJvbS5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCxhcGlkOnRoaXMuYXBwSW5kZXgsYXBhbjp0aGlzLmFwcE9uQ29tcGxldGUsYXBsczp7bnVpOnRoaXMuYXBwTG9jYWxJbnRzLG5iczp0aGlzLmFwcExvY2FsQnl0ZVNsaWNlc30sYXBnczp7bnVpOnRoaXMuYXBwR2xvYmFsSW50cyxuYnM6dGhpcy5hcHBHbG9iYWxCeXRlU2xpY2VzfSxhcGZhOnRoaXMuYXBwRm9yZWlnbkFwcHMsYXBhczp0aGlzLmFwcEZvcmVpZ25Bc3NldHMsYXBlcDp0aGlzLmV4dHJhUGFnZXN9O3JldHVybiB2b2lkIDAhPT10aGlzLnJlS2V5VG8mJihlLnJla2V5PWwuZnJvbSh0aGlzLnJlS2V5VG8ucHVibGljS2V5KSksdm9pZCAwIT09dGhpcy5hcHBBcHByb3ZhbFByb2dyYW0mJihlLmFwYXA9bC5mcm9tKHRoaXMuYXBwQXBwcm92YWxQcm9ncmFtKSksdm9pZCAwIT09dGhpcy5hcHBDbGVhclByb2dyYW0mJihlLmFwc3U9bC5mcm9tKHRoaXMuYXBwQ2xlYXJQcm9ncmFtKSksdm9pZCAwIT09dGhpcy5hcHBBcmdzJiYoZS5hcGFhPXRoaXMuYXBwQXJncy5tYXAoKGU9PmwuZnJvbShlKSkpKSx2b2lkIDAhPT10aGlzLmFwcEFjY291bnRzJiYoZS5hcGF0PXRoaXMuYXBwQWNjb3VudHMubWFwKChlPT5sLmZyb20oZS5wdWJsaWNLZXkpKSkpLGUubm90ZS5sZW5ndGh8fGRlbGV0ZSBlLm5vdGUsZS5seC5sZW5ndGh8fGRlbGV0ZSBlLmx4LGUuYW10fHxkZWxldGUgZS5hbXQsZS5mZWV8fGRlbGV0ZSBlLmZlZSxlLmZ2fHxkZWxldGUgZS5mdixlLmdlbnx8ZGVsZXRlIGUuZ2VuLGUuYXBpZHx8ZGVsZXRlIGUuYXBpZCxlLmFwbHMubnVpfHxkZWxldGUgZS5hcGxzLm51aSxlLmFwbHMubmJzfHxkZWxldGUgZS5hcGxzLm5icyxlLmFwbHMubnVpfHxlLmFwbHMubmJzfHxkZWxldGUgZS5hcGxzLGUuYXBncy5udWl8fGRlbGV0ZSBlLmFwZ3MubnVpLGUuYXBncy5uYnN8fGRlbGV0ZSBlLmFwZ3MubmJzLGUuYXBhYSYmZS5hcGFhLmxlbmd0aHx8ZGVsZXRlIGUuYXBhYSxlLmFwZ3MubnVpfHxlLmFwZ3MubmJzfHxkZWxldGUgZS5hcGdzLGUuYXBhcHx8ZGVsZXRlIGUuYXBhcCxlLmFwc3V8fGRlbGV0ZSBlLmFwc3UsZS5hcGFufHxkZWxldGUgZS5hcGFuLGUuYXBmYSYmZS5hcGZhLmxlbmd0aHx8ZGVsZXRlIGUuYXBmYSxlLmFwYXMmJmUuYXBhcy5sZW5ndGh8fGRlbGV0ZSBlLmFwYXMsZS5hcGF0JiZlLmFwYXQubGVuZ3RofHxkZWxldGUgZS5hcGF0LGUuYXBlcHx8ZGVsZXRlIGUuYXBlcCx2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGV9fXN0YXRpYyBmcm9tX29ial9mb3JfZW5jb2RpbmcoZSl7Y29uc3QgdD1PYmplY3QuY3JlYXRlKHRoaXMucHJvdG90eXBlKTtpZih0Lm5hbWU9XCJUcmFuc2FjdGlvblwiLHQudGFnPWwuZnJvbShcIlRYXCIpLHQuZ2VuZXNpc0lEPWUuZ2VuLHQuZ2VuZXNpc0hhc2g9bC5mcm9tKGUuZ2gpLCEoMCx1LnY4KShlLnR5cGUpKXRocm93IG5ldyBFcnJvcihgVW5yZWNvZ25pemVkIHRyYW5zYWN0aW9uIHR5cGU6ICR7ZS50eXBlfWApO3JldHVybiB0LnR5cGU9ZS50eXBlLHQuZmVlPWUuZmVlLHQuZmlyc3RSb3VuZD1lLmZ2LHQubGFzdFJvdW5kPWUubHYsdC5ub3RlPW5ldyBVaW50OEFycmF5KGUubm90ZSksdC5sZWFzZT1uZXcgVWludDhBcnJheShlLmx4KSx0LmZyb209cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLnNuZCkpKSx2b2lkIDAhPT1lLmdycCYmKHQuZ3JvdXA9bC5mcm9tKGUuZ3JwKSksdm9pZCAwIT09ZS5yZWtleSYmKHQucmVLZXlUbz1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUucmVrZXkpKSkpLFwicGF5XCI9PT1lLnR5cGU/KHQuYW1vdW50PWUuYW10LHQudG89cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLnJjdikpKSx2b2lkIDAhPT1lLmNsb3NlJiYodC5jbG9zZVJlbWFpbmRlclRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MoZS5jbG9zZSkpKSk6XCJrZXlyZWdcIj09PWUudHlwZT8odm9pZCAwIT09ZS52b3Rla2V5JiYodC52b3RlS2V5PWwuZnJvbShlLnZvdGVrZXkpKSx2b2lkIDAhPT1lLnNlbGtleSYmKHQuc2VsZWN0aW9uS2V5PWwuZnJvbShlLnNlbGtleSkpLHZvaWQgMCE9PWUuc3ByZmtleSYmKHQuc3RhdGVQcm9vZktleT1sLmZyb20oZS5zcHJma2V5KSksdm9pZCAwIT09ZS52b3Rla2QmJih0LnZvdGVLZXlEaWx1dGlvbj1lLnZvdGVrZCksdm9pZCAwIT09ZS52b3RlZnN0JiYodC52b3RlRmlyc3Q9ZS52b3RlZnN0KSx2b2lkIDAhPT1lLnZvdGVsc3QmJih0LnZvdGVMYXN0PWUudm90ZWxzdCksdm9pZCAwIT09ZS5ub25wYXJ0JiYodC5ub25QYXJ0aWNpcGF0aW9uPWUubm9ucGFydCkpOlwiYWNmZ1wiPT09ZS50eXBlPyh2b2lkIDAhPT1lLmNhaWQmJih0LmFzc2V0SW5kZXg9ZS5jYWlkKSx2b2lkIDAhPT1lLmFwYXImJih0LmFzc2V0VG90YWw9ZS5hcGFyLnQsdC5hc3NldERlZmF1bHRGcm96ZW49ZS5hcGFyLmRmLHZvaWQgMCE9PWUuYXBhci5kYyYmKHQuYXNzZXREZWNpbWFscz1lLmFwYXIuZGMpLHZvaWQgMCE9PWUuYXBhci5tJiYodC5hc3NldE1hbmFnZXI9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIubSkpKSksdm9pZCAwIT09ZS5hcGFyLnImJih0LmFzc2V0UmVzZXJ2ZT1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUuYXBhci5yKSkpKSx2b2lkIDAhPT1lLmFwYXIuZiYmKHQuYXNzZXRGcmVlemU9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIuZikpKSksdm9pZCAwIT09ZS5hcGFyLmMmJih0LmFzc2V0Q2xhd2JhY2s9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIuYykpKSksdm9pZCAwIT09ZS5hcGFyLnVuJiYodC5hc3NldFVuaXROYW1lPWUuYXBhci51biksdm9pZCAwIT09ZS5hcGFyLmFuJiYodC5hc3NldE5hbWU9ZS5hcGFyLmFuKSx2b2lkIDAhPT1lLmFwYXIuYXUmJih0LmFzc2V0VVJMPWUuYXBhci5hdSksdm9pZCAwIT09ZS5hcGFyLmFtJiYodC5hc3NldE1ldGFkYXRhSGFzaD1lLmFwYXIuYW0pKSk6XCJheGZlclwiPT09ZS50eXBlPyh2b2lkIDAhPT1lLnhhaWQmJih0LmFzc2V0SW5kZXg9ZS54YWlkKSx2b2lkIDAhPT1lLmFhbXQmJih0LmFtb3VudD1lLmFhbXQpLHZvaWQgMCE9PWUuYWNsb3NlJiYodC5jbG9zZVJlbWFpbmRlclRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hY2xvc2UpKSkpLHZvaWQgMCE9PWUuYXNuZCYmKHQuYXNzZXRSZXZvY2F0aW9uVGFyZ2V0PXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hc25kKSkpKSx0LnRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hcmN2KSkpKTpcImFmcnpcIj09PWUudHlwZT8odm9pZCAwIT09ZS5hZnJ6JiYodC5mcmVlemVTdGF0ZT1lLmFmcnopLHZvaWQgMCE9PWUuZmFpZCYmKHQuYXNzZXRJbmRleD1lLmZhaWQpLHQuZnJlZXplQWNjb3VudD1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUuZmFkZCkpKSk6XCJhcHBsXCI9PT1lLnR5cGUmJih2b2lkIDAhPT1lLmFwaWQmJih0LmFwcEluZGV4PWUuYXBpZCksdm9pZCAwIT09ZS5hcGFuJiYodC5hcHBPbkNvbXBsZXRlPWUuYXBhbiksdm9pZCAwIT09ZS5hcGxzJiYodm9pZCAwIT09ZS5hcGxzLm51aSYmKHQuYXBwTG9jYWxJbnRzPWUuYXBscy5udWkpLHZvaWQgMCE9PWUuYXBscy5uYnMmJih0LmFwcExvY2FsQnl0ZVNsaWNlcz1lLmFwbHMubmJzKSksdm9pZCAwIT09ZS5hcGdzJiYodm9pZCAwIT09ZS5hcGdzLm51aSYmKHQuYXBwR2xvYmFsSW50cz1lLmFwZ3MubnVpKSx2b2lkIDAhPT1lLmFwZ3MubmJzJiYodC5hcHBHbG9iYWxCeXRlU2xpY2VzPWUuYXBncy5uYnMpKSx2b2lkIDAhPT1lLmFwZXAmJih0LmV4dHJhUGFnZXM9ZS5hcGVwKSx2b2lkIDAhPT1lLmFwYXAmJih0LmFwcEFwcHJvdmFsUHJvZ3JhbT1uZXcgVWludDhBcnJheShlLmFwYXApKSx2b2lkIDAhPT1lLmFwc3UmJih0LmFwcENsZWFyUHJvZ3JhbT1uZXcgVWludDhBcnJheShlLmFwc3UpKSx2b2lkIDAhPT1lLmFwYWEmJih0LmFwcEFyZ3M9ZS5hcGFhLm1hcCgoZT0+bmV3IFVpbnQ4QXJyYXkoZSkpKSksdm9pZCAwIT09ZS5hcGF0JiYodC5hcHBBY2NvdW50cz1lLmFwYXQubWFwKChlPT5zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUpKSkpKSksdm9pZCAwIT09ZS5hcGZhJiYodC5hcHBGb3JlaWduQXBwcz1lLmFwZmEpLHZvaWQgMCE9PWUuYXBhcyYmKHQuYXBwRm9yZWlnbkFzc2V0cz1lLmFwYXMpKSx0fWVzdGltYXRlU2l6ZSgpe3JldHVybiB0aGlzLnRvQnl0ZSgpLmxlbmd0aCs3NX1ieXRlc1RvU2lnbigpe2NvbnN0IGU9dGhpcy50b0J5dGUoKTtyZXR1cm4gbC5mcm9tKGMuY29uY2F0QXJyYXlzKHRoaXMudGFnLGUpKX10b0J5dGUoKXtyZXR1cm4gaS5lbmNvZGUodGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpKX1yYXdTaWduVHhuKGUpe2NvbnN0IHQ9dGhpcy5ieXRlc1RvU2lnbigpLHI9YS5zaWduKHQsZSk7cmV0dXJuIGwuZnJvbShyKX1zaWduVHhuKGUpe2NvbnN0IHQ9e3NpZzp0aGlzLnJhd1NpZ25UeG4oZSksdHhuOnRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX0scj1hLmtleVBhaXJGcm9tU2VjcmV0S2V5KGUpLnB1YmxpY0tleTtyZXR1cm4gcy5lbmNvZGVBZGRyZXNzKHIpIT09cy5lbmNvZGVBZGRyZXNzKHRoaXMuZnJvbS5wdWJsaWNLZXkpJiYodC5zZ25yPWwuZnJvbShyKSksbmV3IFVpbnQ4QXJyYXkoaS5lbmNvZGUodCkpfXJhd1R4SUQoKXtjb25zdCBlPXRoaXMudG9CeXRlKCksdD1sLmZyb20oYy5jb25jYXRBcnJheXModGhpcy50YWcsZSkpO3JldHVybiBsLmZyb20oYS5nZW5lcmljSGFzaCh0KSl9dHhJRCgpe2NvbnN0IGU9dGhpcy5yYXdUeElEKCk7cmV0dXJuIG8oKS5lbmNvZGUoZSkuc2xpY2UoMCw1Mil9YWRkTGVhc2UoZSx0PTApe2xldCByO2lmKHZvaWQgMCE9PWUpe2lmKGUuY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwibGVhc2UgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpO2lmKDMyIT09ZS5sZW5ndGgpdGhyb3cgRXJyb3IoYGxlYXNlIG11c3QgYmUgb2YgbGVuZ3RoICR7MzIuLnRvU3RyaW5nKCl9LmApO3I9bmV3IFVpbnQ4QXJyYXkoZSl9ZWxzZSByPW5ldyBVaW50OEFycmF5KDApO3RoaXMubGVhc2U9ciwwIT09dCYmKHRoaXMuZmVlKz0zNyp0KX1hZGRSZWtleShlLHQ9MCl7dm9pZCAwIT09ZSYmKHRoaXMucmVLZXlUbz1zLmRlY29kZUFkZHJlc3MoZSkpLDAhPT10JiYodGhpcy5mZWUrPTM3KnQpfV9nZXREaWN0Rm9yRGlzcGxheSgpe2NvbnN0IGU9ey4uLnRoaXN9O3JldHVybiBlLnRhZz1lLnRhZy50b1N0cmluZygpLGUuZnJvbT1zLmVuY29kZUFkZHJlc3MoZS5mcm9tLnB1YmxpY0tleSksdm9pZCAwIT09ZS50byYmKGUudG89cy5lbmNvZGVBZGRyZXNzKGUudG8ucHVibGljS2V5KSksdm9pZCAwIT09ZS5mcmVlemVBY2NvdW50JiYoZS5mcmVlemVBY2NvdW50PXMuZW5jb2RlQWRkcmVzcyhlLmZyZWV6ZUFjY291bnQucHVibGljS2V5KSksdm9pZCAwIT09ZS5jbG9zZVJlbWFpbmRlclRvJiYoZS5jbG9zZVJlbWFpbmRlclRvPXMuZW5jb2RlQWRkcmVzcyhlLmNsb3NlUmVtYWluZGVyVG8ucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldE1hbmFnZXImJihlLmFzc2V0TWFuYWdlcj1zLmVuY29kZUFkZHJlc3MoZS5hc3NldE1hbmFnZXIucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldFJlc2VydmUmJihlLmFzc2V0UmVzZXJ2ZT1zLmVuY29kZUFkZHJlc3MoZS5hc3NldFJlc2VydmUucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldEZyZWV6ZSYmKGUuYXNzZXRGcmVlemU9cy5lbmNvZGVBZGRyZXNzKGUuYXNzZXRGcmVlemUucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldENsYXdiYWNrJiYoZS5hc3NldENsYXdiYWNrPXMuZW5jb2RlQWRkcmVzcyhlLmFzc2V0Q2xhd2JhY2sucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldFJldm9jYXRpb25UYXJnZXQmJihlLmFzc2V0UmV2b2NhdGlvblRhcmdldD1zLmVuY29kZUFkZHJlc3MoZS5hc3NldFJldm9jYXRpb25UYXJnZXQucHVibGljS2V5KSksdm9pZCAwIT09ZS5yZUtleVRvJiYoZS5yZUtleVRvPXMuZW5jb2RlQWRkcmVzcyhlLnJlS2V5VG8ucHVibGljS2V5KSksZS5nZW5lc2lzSGFzaD1lLmdlbmVzaXNIYXNoLnRvU3RyaW5nKFwiYmFzZTY0XCIpLGV9cHJldHR5UHJpbnQoKXtjb25zb2xlLmxvZyh0aGlzLl9nZXREaWN0Rm9yRGlzcGxheSgpKX10b1N0cmluZygpe3JldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLl9nZXREaWN0Rm9yRGlzcGxheSgpKX19ZnVuY3Rpb24gZChlKXtjb25zdCB0PWUuZ2V0X29ial9mb3JfZW5jb2RpbmcoKTtyZXR1cm4gaS5lbmNvZGUodCl9ZnVuY3Rpb24gZyhlKXtjb25zdCB0PWkuZGVjb2RlKGUpO3JldHVybiBmLmZyb21fb2JqX2Zvcl9lbmNvZGluZyh0KX1mdW5jdGlvbiB5KGUpe2NvbnN0IHQ9aS5kZWNvZGUoZSk7cmV0dXJuey4uLnQsdHhuOmYuZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQudHhuKX19ZnVuY3Rpb24gbShlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGY/ZTpuZXcgZihlKX1jb25zdCBiPWZ9LDIzODA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtpOigpPT5uLml9KTt2YXIgbj1yKDE4MjQpfSw3MTk3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbjtyLmQodCx7WjooKT0+b30pLGZ1bmN0aW9uKGUpe2UuREVGQVVMVD1cImRlZmF1bHRcIixlLlNBRkU9XCJzYWZlXCIsZS5NSVhFRD1cIm1peGVkXCIsZS5CSUdJTlQ9XCJiaWdpbnRcIn0obnx8KG49e30pKTtjb25zdCBvPW59LDE2MjQ6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuLG87ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZT09PW4ucGF5fHxlPT09bi5rZXlyZWd8fGU9PT1uLmFjZmd8fGU9PT1uLmF4ZmVyfHxlPT09bi5hZnJ6fHxlPT09bi5hcHBsfXIuZCh0LHtpVTooKT0+bix2ODooKT0+cyxocTooKT0+b30pLGZ1bmN0aW9uKGUpe2UucGF5PVwicGF5XCIsZS5rZXlyZWc9XCJrZXlyZWdcIixlLmFjZmc9XCJhY2ZnXCIsZS5heGZlcj1cImF4ZmVyXCIsZS5hZnJ6PVwiYWZyelwiLGUuYXBwbD1cImFwcGxcIn0obnx8KG49e30pKSxmdW5jdGlvbihlKXtlW2UuTm9PcE9DPTBdPVwiTm9PcE9DXCIsZVtlLk9wdEluT0M9MV09XCJPcHRJbk9DXCIsZVtlLkNsb3NlT3V0T0M9Ml09XCJDbG9zZU91dE9DXCIsZVtlLkNsZWFyU3RhdGVPQz0zXT1cIkNsZWFyU3RhdGVPQ1wiLGVbZS5VcGRhdGVBcHBsaWNhdGlvbk9DPTRdPVwiVXBkYXRlQXBwbGljYXRpb25PQ1wiLGVbZS5EZWxldGVBcHBsaWNhdGlvbk9DPTVdPVwiRGVsZXRlQXBwbGljYXRpb25PQ1wifShvfHwobz17fSkpfSwxODI0OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7aTooKT0+bi5pVX0pO3ZhciBuPXIoMTYyNCl9LDQxMzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtwYXJzZUpTT046KCk9PmEsYXJyYXlFcXVhbDooKT0+Yyxjb25jYXRBcnJheXM6KCk9PnUscmVtb3ZlVW5kZWZpbmVkUHJvcGVydGllczooKT0+bCxpc05vZGU6KCk9Pmh9KTt2YXIgbj1yKDQzNjApLG89ci5uKG4pLHM9cig3MTk3KTtjb25zdCBpPW8oKSh7dXNlTmF0aXZlQmlnSW50OiEwLHN0cmljdDohMH0pO2Z1bmN0aW9uIGEoZSx0KXtjb25zdCByPXQmJnQuaW50RGVjb2Rpbmc/dC5pbnREZWNvZGluZzpzLlouREVGQVVMVDtyZXR1cm4gaS5wYXJzZShlLCgoZSx0KT0+e2lmKG51bGwhPXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCkmJk9iamVjdC5zZXRQcm90b3R5cGVPZih0LE9iamVjdC5wcm90b3R5cGUpLFwiYmlnaW50XCI9PXR5cGVvZiB0KXtpZihcInNhZmVcIj09PXImJnQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBJbnRlZ2VyIGV4Y2VlZHMgbWF4aW11bSBzYWZlIGludGVnZXI6ICR7dC50b1N0cmluZygpfS4gVHJ5IHBhcnNpbmcgd2l0aCBhIGRpZmZlcmVudCBpbnREZWNvZGluZyBvcHRpb24uYCk7cmV0dXJuXCJiaWdpbnRcIj09PXJ8fFwibWl4ZWRcIj09PXImJnQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI/dDpOdW1iZXIodCl9cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJlwiYmlnaW50XCI9PT1yJiZOdW1iZXIuaXNJbnRlZ2VyKHQpP0JpZ0ludCh0KTp0fSkpfWZ1bmN0aW9uIGMoZSx0KXtyZXR1cm4gZS5sZW5ndGg9PT10Lmxlbmd0aCYmQXJyYXkuZnJvbShlKS5ldmVyeSgoKGUscik9PmU9PT10W3JdKSl9ZnVuY3Rpb24gdSguLi5lKXtjb25zdCB0PWUucmVkdWNlKCgoZSx0KT0+ZSt0Lmxlbmd0aCksMCkscj1uZXcgVWludDhBcnJheSh0KTtsZXQgbj0wO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXIuc2V0KGVbdF0sbiksbis9ZVt0XS5sZW5ndGg7cmV0dXJuIHJ9ZnVuY3Rpb24gbChlKXtjb25zdCB0PXsuLi5lfTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaCgoZT0+e3ZvaWQgMD09PXRbZV0mJmRlbGV0ZSB0W2VdfSkpLHR9ZnVuY3Rpb24gaCgpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBwcm9jZXNzJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyYmdm9pZCAwIT09cHJvY2Vzcy52ZXJzaW9ucy5ub2RlfX0sNTA2MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7YXN5bmMgZnVuY3Rpb24gbihlLHQscil7Y29uc3Qgbj1hd2FpdCBlLnN0YXR1cygpLmRvKCk7aWYodm9pZCAwPT09bil0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gZ2V0IG5vZGUgc3RhdHVzXCIpO2NvbnN0IG89bltcImxhc3Qtcm91bmRcIl0rMTtsZXQgcz1vO2Zvcig7czxvK3I7KXtsZXQgcj0hMTt0cnl7Y29uc3Qgbj1hd2FpdCBlLnBlbmRpbmdUcmFuc2FjdGlvbkluZm9ybWF0aW9uKHQpLmRvKCk7aWYobltcImNvbmZpcm1lZC1yb3VuZFwiXSlyZXR1cm4gbjtpZihuW1wicG9vbC1lcnJvclwiXSl0aHJvdyByPSEwLG5ldyBFcnJvcihgVHJhbnNhY3Rpb24gUmVqZWN0ZWQ6ICR7bltcInBvb2wtZXJyb3JcIl19YCl9Y2F0Y2goZSl7aWYocil0aHJvdyBlfWF3YWl0IGUuc3RhdHVzQWZ0ZXJCbG9jayhzKS5kbygpLHMrPTF9dGhyb3cgbmV3IEVycm9yKGBUcmFuc2FjdGlvbiBub3QgY29uZmlybWVkIGFmdGVyICR7cn0gcm91bmRzYCl9ci5kKHQse0s6KCk9Pm59KX0sNDY1NDooKT0+e319LF9fd2VicGFja19tb2R1bGVfY2FjaGVfXz17fTtmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKGUpe3ZhciB0PV9fd2VicGFja19tb2R1bGVfY2FjaGVfX1tlXTtpZih2b2lkIDAhPT10KXJldHVybiB0LmV4cG9ydHM7dmFyIHI9X193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW2VdPXtleHBvcnRzOnt9fTtyZXR1cm4gX193ZWJwYWNrX21vZHVsZXNfX1tlXS5jYWxsKHIuZXhwb3J0cyxyLHIuZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKSxyLmV4cG9ydHN9X193ZWJwYWNrX3JlcXVpcmVfXy5hbWRPPXt9LF9fd2VicGFja19yZXF1aXJlX18ubj1lPT57dmFyIHQ9ZSYmZS5fX2VzTW9kdWxlPygpPT5lLmRlZmF1bHQ6KCk9PmU7cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZCh0LHthOnR9KSx0fSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQ9KGUsdCk9Pntmb3IodmFyIHIgaW4gdClfX3dlYnBhY2tfcmVxdWlyZV9fLm8odCxyKSYmIV9fd2VicGFja19yZXF1aXJlX18ubyhlLHIpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtlbnVtZXJhYmxlOiEwLGdldDp0W3JdfSl9LF9fd2VicGFja19yZXF1aXJlX18uZz1mdW5jdGlvbigpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWxUaGlzKXJldHVybiBnbG9iYWxUaGlzO3RyeXtyZXR1cm4gdGhpc3x8bmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKX1jYXRjaChlKXtpZihcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93KXJldHVybiB3aW5kb3d9fSgpLF9fd2VicGFja19yZXF1aXJlX18ubz0oZSx0KT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCksX193ZWJwYWNrX3JlcXVpcmVfXy5yPWU9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgX193ZWJwYWNrX2V4cG9ydHNfXz17fTtyZXR1cm4oKCk9PntcInVzZSBzdHJpY3RcIjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18se2RlZmF1bHQ6KCk9PnJ9KTt2YXIgZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDY2MDgpLHQ9e307Zm9yKGNvbnN0IHIgaW4gZSlcImRlZmF1bHRcIiE9PXImJih0W3JdPSgpPT5lW3JdKTtfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXyx0KTtjb25zdCByPWV9KSgpLF9fd2VicGFja19leHBvcnRzX199KSgpfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWxnb3Nkay5taW4uanMubWFwIiwiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iLCIvKiFcbiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG5cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBiYXNlNjQgPSByZXF1aXJlKCdiYXNlNjQtanMnKVxuY29uc3QgaWVlZTc1NCA9IHJlcXVpcmUoJ2llZWU3NTQnKVxuY29uc3QgY3VzdG9tSW5zcGVjdFN5bWJvbCA9XG4gICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBTeW1ib2xbJ2ZvciddID09PSAnZnVuY3Rpb24nKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGRvdC1ub3RhdGlvblxuICAgID8gU3ltYm9sWydmb3InXSgnbm9kZWpzLnV0aWwuaW5zcGVjdC5jdXN0b20nKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGRvdC1ub3RhdGlvblxuICAgIDogbnVsbFxuXG5leHBvcnRzLkJ1ZmZlciA9IEJ1ZmZlclxuZXhwb3J0cy5TbG93QnVmZmVyID0gU2xvd0J1ZmZlclxuZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFUyA9IDUwXG5cbmNvbnN0IEtfTUFYX0xFTkdUSCA9IDB4N2ZmZmZmZmZcbmV4cG9ydHMua01heExlbmd0aCA9IEtfTUFYX0xFTkdUSFxuXG4vKipcbiAqIElmIGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGA6XG4gKiAgID09PSB0cnVlICAgIFVzZSBVaW50OEFycmF5IGltcGxlbWVudGF0aW9uIChmYXN0ZXN0KVxuICogICA9PT0gZmFsc2UgICBQcmludCB3YXJuaW5nIGFuZCByZWNvbW1lbmQgdXNpbmcgYGJ1ZmZlcmAgdjQueCB3aGljaCBoYXMgYW4gT2JqZWN0XG4gKiAgICAgICAgICAgICAgIGltcGxlbWVudGF0aW9uIChtb3N0IGNvbXBhdGlibGUsIGV2ZW4gSUU2KVxuICpcbiAqIEJyb3dzZXJzIHRoYXQgc3VwcG9ydCB0eXBlZCBhcnJheXMgYXJlIElFIDEwKywgRmlyZWZveCA0KywgQ2hyb21lIDcrLCBTYWZhcmkgNS4xKyxcbiAqIE9wZXJhIDExLjYrLCBpT1MgNC4yKy5cbiAqXG4gKiBXZSByZXBvcnQgdGhhdCB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHR5cGVkIGFycmF5cyBpZiB0aGUgYXJlIG5vdCBzdWJjbGFzc2FibGVcbiAqIHVzaW5nIF9fcHJvdG9fXy4gRmlyZWZveCA0LTI5IGxhY2tzIHN1cHBvcnQgZm9yIGFkZGluZyBuZXcgcHJvcGVydGllcyB0byBgVWludDhBcnJheWBcbiAqIChTZWU6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY5NTQzOCkuIElFIDEwIGxhY2tzIHN1cHBvcnRcbiAqIGZvciBfX3Byb3RvX18gYW5kIGhhcyBhIGJ1Z2d5IHR5cGVkIGFycmF5IGltcGxlbWVudGF0aW9uLlxuICovXG5CdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCA9IHR5cGVkQXJyYXlTdXBwb3J0KClcblxuaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCAmJiB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICBjb25zb2xlLmVycm9yKFxuICAgICdUaGlzIGJyb3dzZXIgbGFja3MgdHlwZWQgYXJyYXkgKFVpbnQ4QXJyYXkpIHN1cHBvcnQgd2hpY2ggaXMgcmVxdWlyZWQgYnkgJyArXG4gICAgJ2BidWZmZXJgIHY1LnguIFVzZSBgYnVmZmVyYCB2NC54IGlmIHlvdSByZXF1aXJlIG9sZCBicm93c2VyIHN1cHBvcnQuJ1xuICApXG59XG5cbmZ1bmN0aW9uIHR5cGVkQXJyYXlTdXBwb3J0ICgpIHtcbiAgLy8gQ2FuIHR5cGVkIGFycmF5IGluc3RhbmNlcyBjYW4gYmUgYXVnbWVudGVkP1xuICB0cnkge1xuICAgIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDEpXG4gICAgY29uc3QgcHJvdG8gPSB7IGZvbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gNDIgfSB9XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHByb3RvLCBVaW50OEFycmF5LnByb3RvdHlwZSlcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoYXJyLCBwcm90bylcbiAgICByZXR1cm4gYXJyLmZvbygpID09PSA0MlxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlci5wcm90b3R5cGUsICdwYXJlbnQnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKHRoaXMpKSByZXR1cm4gdW5kZWZpbmVkXG4gICAgcmV0dXJuIHRoaXMuYnVmZmVyXG4gIH1cbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShCdWZmZXIucHJvdG90eXBlLCAnb2Zmc2V0Jywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih0aGlzKSkgcmV0dXJuIHVuZGVmaW5lZFxuICAgIHJldHVybiB0aGlzLmJ5dGVPZmZzZXRcbiAgfVxufSlcblxuZnVuY3Rpb24gY3JlYXRlQnVmZmVyIChsZW5ndGgpIHtcbiAgaWYgKGxlbmd0aCA+IEtfTUFYX0xFTkdUSCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInICsgbGVuZ3RoICsgJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpXG4gIH1cbiAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2VcbiAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKVxuICBPYmplY3Quc2V0UHJvdG90eXBlT2YoYnVmLCBCdWZmZXIucHJvdG90eXBlKVxuICByZXR1cm4gYnVmXG59XG5cbi8qKlxuICogVGhlIEJ1ZmZlciBjb25zdHJ1Y3RvciByZXR1cm5zIGluc3RhbmNlcyBvZiBgVWludDhBcnJheWAgdGhhdCBoYXZlIHRoZWlyXG4gKiBwcm90b3R5cGUgY2hhbmdlZCB0byBgQnVmZmVyLnByb3RvdHlwZWAuIEZ1cnRoZXJtb3JlLCBgQnVmZmVyYCBpcyBhIHN1YmNsYXNzIG9mXG4gKiBgVWludDhBcnJheWAsIHNvIHRoZSByZXR1cm5lZCBpbnN0YW5jZXMgd2lsbCBoYXZlIGFsbCB0aGUgbm9kZSBgQnVmZmVyYCBtZXRob2RzXG4gKiBhbmQgdGhlIGBVaW50OEFycmF5YCBtZXRob2RzLiBTcXVhcmUgYnJhY2tldCBub3RhdGlvbiB3b3JrcyBhcyBleHBlY3RlZCAtLSBpdFxuICogcmV0dXJucyBhIHNpbmdsZSBvY3RldC5cbiAqXG4gKiBUaGUgYFVpbnQ4QXJyYXlgIHByb3RvdHlwZSByZW1haW5zIHVubW9kaWZpZWQuXG4gKi9cblxuZnVuY3Rpb24gQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICAvLyBDb21tb24gY2FzZS5cbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZ09yT2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBzdHJpbmcuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJ1xuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gYWxsb2NVbnNhZmUoYXJnKVxuICB9XG4gIHJldHVybiBmcm9tKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucG9vbFNpemUgPSA4MTkyIC8vIG5vdCB1c2VkIGJ5IHRoaXMgaW1wbGVtZW50YXRpb25cblxuZnVuY3Rpb24gZnJvbSAodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmcm9tU3RyaW5nKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0KVxuICB9XG5cbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZnJvbUFycmF5Vmlldyh2YWx1ZSlcbiAgfVxuXG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICdUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCAnICtcbiAgICAgICdvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSAnICsgKHR5cGVvZiB2YWx1ZSlcbiAgICApXG4gIH1cblxuICBpZiAoaXNJbnN0YW5jZSh2YWx1ZSwgQXJyYXlCdWZmZXIpIHx8XG4gICAgICAodmFsdWUgJiYgaXNJbnN0YW5jZSh2YWx1ZS5idWZmZXIsIEFycmF5QnVmZmVyKSkpIHtcbiAgICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG4gIH1cblxuICBpZiAodHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgKGlzSW5zdGFuY2UodmFsdWUsIFNoYXJlZEFycmF5QnVmZmVyKSB8fFxuICAgICAgKHZhbHVlICYmIGlzSW5zdGFuY2UodmFsdWUuYnVmZmVyLCBTaGFyZWRBcnJheUJ1ZmZlcikpKSkge1xuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICdUaGUgXCJ2YWx1ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG9mIHR5cGUgbnVtYmVyLiBSZWNlaXZlZCB0eXBlIG51bWJlcidcbiAgICApXG4gIH1cblxuICBjb25zdCB2YWx1ZU9mID0gdmFsdWUudmFsdWVPZiAmJiB2YWx1ZS52YWx1ZU9mKClcbiAgaWYgKHZhbHVlT2YgIT0gbnVsbCAmJiB2YWx1ZU9mICE9PSB2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZU9mLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG4gIH1cblxuICBjb25zdCBiID0gZnJvbU9iamVjdCh2YWx1ZSlcbiAgaWYgKGIpIHJldHVybiBiXG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1ByaW1pdGl2ZSAhPSBudWxsICYmXG4gICAgICB0eXBlb2YgdmFsdWVbU3ltYm9sLnRvUHJpbWl0aXZlXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZVtTeW1ib2wudG9QcmltaXRpdmVdKCdzdHJpbmcnKSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAnVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgJyArXG4gICAgJ29yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcgKyAodHlwZW9mIHZhbHVlKVxuICApXG59XG5cbi8qKlxuICogRnVuY3Rpb25hbGx5IGVxdWl2YWxlbnQgdG8gQnVmZmVyKGFyZywgZW5jb2RpbmcpIGJ1dCB0aHJvd3MgYSBUeXBlRXJyb3JcbiAqIGlmIHZhbHVlIGlzIGEgbnVtYmVyLlxuICogQnVmZmVyLmZyb20oc3RyWywgZW5jb2RpbmddKVxuICogQnVmZmVyLmZyb20oYXJyYXkpXG4gKiBCdWZmZXIuZnJvbShidWZmZXIpXG4gKiBCdWZmZXIuZnJvbShhcnJheUJ1ZmZlclssIGJ5dGVPZmZzZXRbLCBsZW5ndGhdXSlcbiAqKi9cbkJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGZyb20odmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gTm90ZTogQ2hhbmdlIHByb3RvdHlwZSAqYWZ0ZXIqIEJ1ZmZlci5mcm9tIGlzIGRlZmluZWQgdG8gd29ya2Fyb3VuZCBDaHJvbWUgYnVnOlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvcHVsbC8xNDhcbk9iamVjdC5zZXRQcm90b3R5cGVPZihCdWZmZXIucHJvdG90eXBlLCBVaW50OEFycmF5LnByb3RvdHlwZSlcbk9iamVjdC5zZXRQcm90b3R5cGVPZihCdWZmZXIsIFVpbnQ4QXJyYXkpXG5cbmZ1bmN0aW9uIGFzc2VydFNpemUgKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXInKVxuICB9IGVsc2UgaWYgKHNpemUgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicgKyBzaXplICsgJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWxsb2MgKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgaWYgKHNpemUgPD0gMCkge1xuICAgIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSlcbiAgfVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT25seSBwYXkgYXR0ZW50aW9uIHRvIGVuY29kaW5nIGlmIGl0J3MgYSBzdHJpbmcuIFRoaXNcbiAgICAvLyBwcmV2ZW50cyBhY2NpZGVudGFsbHkgc2VuZGluZyBpbiBhIG51bWJlciB0aGF0IHdvdWxkXG4gICAgLy8gYmUgaW50ZXJwcmV0ZWQgYXMgYSBzdGFydCBvZmZzZXQuXG4gICAgcmV0dXJuIHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZydcbiAgICAgID8gY3JlYXRlQnVmZmVyKHNpemUpLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgICA6IGNyZWF0ZUJ1ZmZlcihzaXplKS5maWxsKGZpbGwpXG4gIH1cbiAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcihzaXplKVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqIGFsbG9jKHNpemVbLCBmaWxsWywgZW5jb2RpbmddXSlcbiAqKi9cbkJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xuICByZXR1cm4gYWxsb2Moc2l6ZSwgZmlsbCwgZW5jb2RpbmcpXG59XG5cbmZ1bmN0aW9uIGFsbG9jVW5zYWZlIChzaXplKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcihzaXplIDwgMCA/IDAgOiBjaGVja2VkKHNpemUpIHwgMClcbn1cblxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIEJ1ZmZlcihudW0pLCBieSBkZWZhdWx0IGNyZWF0ZXMgYSBub24temVyby1maWxsZWQgQnVmZmVyIGluc3RhbmNlLlxuICogKi9cbkJ1ZmZlci5hbGxvY1Vuc2FmZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShzaXplKVxufVxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIFNsb3dCdWZmZXIobnVtKSwgYnkgZGVmYXVsdCBjcmVhdGVzIGEgbm9uLXplcm8tZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqL1xuQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShzaXplKVxufVxuXG5mdW5jdGlvbiBmcm9tU3RyaW5nIChzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgIT09ICdzdHJpbmcnIHx8IGVuY29kaW5nID09PSAnJykge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gIH1cblxuICBpZiAoIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgfVxuXG4gIGNvbnN0IGxlbmd0aCA9IGJ5dGVMZW5ndGgoc3RyaW5nLCBlbmNvZGluZykgfCAwXG4gIGxldCBidWYgPSBjcmVhdGVCdWZmZXIobGVuZ3RoKVxuXG4gIGNvbnN0IGFjdHVhbCA9IGJ1Zi53cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuXG4gIGlmIChhY3R1YWwgIT09IGxlbmd0aCkge1xuICAgIC8vIFdyaXRpbmcgYSBoZXggc3RyaW5nLCBmb3IgZXhhbXBsZSwgdGhhdCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgd2lsbFxuICAgIC8vIGNhdXNlIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IGludmFsaWQgY2hhcmFjdGVyIHRvIGJlIGlnbm9yZWQuIChlLmcuXG4gICAgLy8gJ2FieHhjZCcgd2lsbCBiZSB0cmVhdGVkIGFzICdhYicpXG4gICAgYnVmID0gYnVmLnNsaWNlKDAsIGFjdHVhbClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5TGlrZSAoYXJyYXkpIHtcbiAgY29uc3QgbGVuZ3RoID0gYXJyYXkubGVuZ3RoIDwgMCA/IDAgOiBjaGVja2VkKGFycmF5Lmxlbmd0aCkgfCAwXG4gIGNvbnN0IGJ1ZiA9IGNyZWF0ZUJ1ZmZlcihsZW5ndGgpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcbiAgICBidWZbaV0gPSBhcnJheVtpXSAmIDI1NVxuICB9XG4gIHJldHVybiBidWZcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5VmlldyAoYXJyYXlWaWV3KSB7XG4gIGlmIChpc0luc3RhbmNlKGFycmF5VmlldywgVWludDhBcnJheSkpIHtcbiAgICBjb25zdCBjb3B5ID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlWaWV3KVxuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIoY29weS5idWZmZXIsIGNvcHkuYnl0ZU9mZnNldCwgY29weS5ieXRlTGVuZ3RoKVxuICB9XG4gIHJldHVybiBmcm9tQXJyYXlMaWtlKGFycmF5Vmlldylcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5QnVmZmVyIChhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmIChieXRlT2Zmc2V0IDwgMCB8fCBhcnJheS5ieXRlTGVuZ3RoIDwgYnl0ZU9mZnNldCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcIm9mZnNldFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpXG4gIH1cblxuICBpZiAoYXJyYXkuYnl0ZUxlbmd0aCA8IGJ5dGVPZmZzZXQgKyAobGVuZ3RoIHx8IDApKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wibGVuZ3RoXCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJylcbiAgfVxuXG4gIGxldCBidWZcbiAgaWYgKGJ5dGVPZmZzZXQgPT09IHVuZGVmaW5lZCAmJiBsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGJ1ZiA9IG5ldyBVaW50OEFycmF5KGFycmF5KVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYnVmID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXksIGJ5dGVPZmZzZXQpXG4gIH0gZWxzZSB7XG4gICAgYnVmID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXksIGJ5dGVPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIC8vIFJldHVybiBhbiBhdWdtZW50ZWQgYFVpbnQ4QXJyYXlgIGluc3RhbmNlXG4gIE9iamVjdC5zZXRQcm90b3R5cGVPZihidWYsIEJ1ZmZlci5wcm90b3R5cGUpXG5cbiAgcmV0dXJuIGJ1ZlxufVxuXG5mdW5jdGlvbiBmcm9tT2JqZWN0IChvYmopIHtcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihvYmopKSB7XG4gICAgY29uc3QgbGVuID0gY2hlY2tlZChvYmoubGVuZ3RoKSB8IDBcbiAgICBjb25zdCBidWYgPSBjcmVhdGVCdWZmZXIobGVuKVxuXG4gICAgaWYgKGJ1Zi5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBidWZcbiAgICB9XG5cbiAgICBvYmouY29weShidWYsIDAsIDAsIGxlbilcbiAgICByZXR1cm4gYnVmXG4gIH1cblxuICBpZiAob2JqLmxlbmd0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKHR5cGVvZiBvYmoubGVuZ3RoICE9PSAnbnVtYmVyJyB8fCBudW1iZXJJc05hTihvYmoubGVuZ3RoKSkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcigwKVxuICAgIH1cbiAgICByZXR1cm4gZnJvbUFycmF5TGlrZShvYmopXG4gIH1cblxuICBpZiAob2JqLnR5cGUgPT09ICdCdWZmZXInICYmIEFycmF5LmlzQXJyYXkob2JqLmRhdGEpKSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUxpa2Uob2JqLmRhdGEpXG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tlZCAobGVuZ3RoKSB7XG4gIC8vIE5vdGU6IGNhbm5vdCB1c2UgYGxlbmd0aCA8IEtfTUFYX0xFTkdUSGAgaGVyZSBiZWNhdXNlIHRoYXQgZmFpbHMgd2hlblxuICAvLyBsZW5ndGggaXMgTmFOICh3aGljaCBpcyBvdGhlcndpc2UgY29lcmNlZCB0byB6ZXJvLilcbiAgaWYgKGxlbmd0aCA+PSBLX01BWF9MRU5HVEgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAnc2l6ZTogMHgnICsgS19NQVhfTEVOR1RILnRvU3RyaW5nKDE2KSArICcgYnl0ZXMnKVxuICB9XG4gIHJldHVybiBsZW5ndGggfCAwXG59XG5cbmZ1bmN0aW9uIFNsb3dCdWZmZXIgKGxlbmd0aCkge1xuICBpZiAoK2xlbmd0aCAhPSBsZW5ndGgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBlcWVxZXFcbiAgICBsZW5ndGggPSAwXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlci5hbGxvYygrbGVuZ3RoKVxufVxuXG5CdWZmZXIuaXNCdWZmZXIgPSBmdW5jdGlvbiBpc0J1ZmZlciAoYikge1xuICByZXR1cm4gYiAhPSBudWxsICYmIGIuX2lzQnVmZmVyID09PSB0cnVlICYmXG4gICAgYiAhPT0gQnVmZmVyLnByb3RvdHlwZSAvLyBzbyBCdWZmZXIuaXNCdWZmZXIoQnVmZmVyLnByb3RvdHlwZSkgd2lsbCBiZSBmYWxzZVxufVxuXG5CdWZmZXIuY29tcGFyZSA9IGZ1bmN0aW9uIGNvbXBhcmUgKGEsIGIpIHtcbiAgaWYgKGlzSW5zdGFuY2UoYSwgVWludDhBcnJheSkpIGEgPSBCdWZmZXIuZnJvbShhLCBhLm9mZnNldCwgYS5ieXRlTGVuZ3RoKVxuICBpZiAoaXNJbnN0YW5jZShiLCBVaW50OEFycmF5KSkgYiA9IEJ1ZmZlci5mcm9tKGIsIGIub2Zmc2V0LCBiLmJ5dGVMZW5ndGgpXG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGEpIHx8ICFCdWZmZXIuaXNCdWZmZXIoYikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgJ1RoZSBcImJ1ZjFcIiwgXCJidWYyXCIgYXJndW1lbnRzIG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXknXG4gICAgKVxuICB9XG5cbiAgaWYgKGEgPT09IGIpIHJldHVybiAwXG5cbiAgbGV0IHggPSBhLmxlbmd0aFxuICBsZXQgeSA9IGIubGVuZ3RoXG5cbiAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IE1hdGgubWluKHgsIHkpOyBpIDwgbGVuOyArK2kpIHtcbiAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgeCA9IGFbaV1cbiAgICAgIHkgPSBiW2ldXG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmICh4IDwgeSkgcmV0dXJuIC0xXG4gIGlmICh5IDwgeCkgcmV0dXJuIDFcbiAgcmV0dXJuIDBcbn1cblxuQnVmZmVyLmlzRW5jb2RpbmcgPSBmdW5jdGlvbiBpc0VuY29kaW5nIChlbmNvZGluZykge1xuICBzd2l0Y2ggKFN0cmluZyhlbmNvZGluZykudG9Mb3dlckNhc2UoKSkge1xuICAgIGNhc2UgJ2hleCc6XG4gICAgY2FzZSAndXRmOCc6XG4gICAgY2FzZSAndXRmLTgnOlxuICAgIGNhc2UgJ2FzY2lpJzpcbiAgICBjYXNlICdsYXRpbjEnOlxuICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgY2FzZSAnYmFzZTY0JzpcbiAgICBjYXNlICd1Y3MyJzpcbiAgICBjYXNlICd1Y3MtMic6XG4gICAgY2FzZSAndXRmMTZsZSc6XG4gICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgcmV0dXJuIHRydWVcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuQnVmZmVyLmNvbmNhdCA9IGZ1bmN0aW9uIGNvbmNhdCAobGlzdCwgbGVuZ3RoKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShsaXN0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpXG4gIH1cblxuICBpZiAobGlzdC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gQnVmZmVyLmFsbG9jKDApXG4gIH1cblxuICBsZXQgaVxuICBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICBsZW5ndGggPSAwXG4gICAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyArK2kpIHtcbiAgICAgIGxlbmd0aCArPSBsaXN0W2ldLmxlbmd0aFxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpXG4gIGxldCBwb3MgPSAwXG4gIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgbGV0IGJ1ZiA9IGxpc3RbaV1cbiAgICBpZiAoaXNJbnN0YW5jZShidWYsIFVpbnQ4QXJyYXkpKSB7XG4gICAgICBpZiAocG9zICsgYnVmLmxlbmd0aCA+IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkgYnVmID0gQnVmZmVyLmZyb20oYnVmKVxuICAgICAgICBidWYuY29weShidWZmZXIsIHBvcylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKFxuICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICBidWYsXG4gICAgICAgICAgcG9zXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJylcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmLmNvcHkoYnVmZmVyLCBwb3MpXG4gICAgfVxuICAgIHBvcyArPSBidWYubGVuZ3RoXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlclxufVxuXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmcubGVuZ3RoXG4gIH1cbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhzdHJpbmcpIHx8IGlzSW5zdGFuY2Uoc3RyaW5nLCBBcnJheUJ1ZmZlcikpIHtcbiAgICByZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGhcbiAgfVxuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIG9yIEFycmF5QnVmZmVyLiAnICtcbiAgICAgICdSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2Ygc3RyaW5nXG4gICAgKVxuICB9XG5cbiAgY29uc3QgbGVuID0gc3RyaW5nLmxlbmd0aFxuICBjb25zdCBtdXN0TWF0Y2ggPSAoYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdID09PSB0cnVlKVxuICBpZiAoIW11c3RNYXRjaCAmJiBsZW4gPT09IDApIHJldHVybiAwXG5cbiAgLy8gVXNlIGEgZm9yIGxvb3AgdG8gYXZvaWQgcmVjdXJzaW9uXG4gIGxldCBsb3dlcmVkQ2FzZSA9IGZhbHNlXG4gIGZvciAoOzspIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdhc2NpaSc6XG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxlblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4VG9CeXRlcyhzdHJpbmcpLmxlbmd0aFxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIGxlbiAqIDJcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBsZW4gPj4+IDFcbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRUb0J5dGVzKHN0cmluZykubGVuZ3RoXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHtcbiAgICAgICAgICByZXR1cm4gbXVzdE1hdGNoID8gLTEgOiB1dGY4VG9CeXRlcyhzdHJpbmcpLmxlbmd0aCAvLyBhc3N1bWUgdXRmOFxuICAgICAgICB9XG4gICAgICAgIGVuY29kaW5nID0gKCcnICsgZW5jb2RpbmcpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgbG93ZXJlZENhc2UgPSB0cnVlXG4gICAgfVxuICB9XG59XG5CdWZmZXIuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcblxuZnVuY3Rpb24gc2xvd1RvU3RyaW5nIChlbmNvZGluZywgc3RhcnQsIGVuZCkge1xuICBsZXQgbG93ZXJlZENhc2UgPSBmYWxzZVxuXG4gIC8vIE5vIG5lZWQgdG8gdmVyaWZ5IHRoYXQgXCJ0aGlzLmxlbmd0aCA8PSBNQVhfVUlOVDMyXCIgc2luY2UgaXQncyBhIHJlYWQtb25seVxuICAvLyBwcm9wZXJ0eSBvZiBhIHR5cGVkIGFycmF5LlxuXG4gIC8vIFRoaXMgYmVoYXZlcyBuZWl0aGVyIGxpa2UgU3RyaW5nIG5vciBVaW50OEFycmF5IGluIHRoYXQgd2Ugc2V0IHN0YXJ0L2VuZFxuICAvLyB0byB0aGVpciB1cHBlci9sb3dlciBib3VuZHMgaWYgdGhlIHZhbHVlIHBhc3NlZCBpcyBvdXQgb2YgcmFuZ2UuXG4gIC8vIHVuZGVmaW5lZCBpcyBoYW5kbGVkIHNwZWNpYWxseSBhcyBwZXIgRUNNQS0yNjIgNnRoIEVkaXRpb24sXG4gIC8vIFNlY3Rpb24gMTMuMy4zLjcgUnVudGltZSBTZW1hbnRpY3M6IEtleWVkQmluZGluZ0luaXRpYWxpemF0aW9uLlxuICBpZiAoc3RhcnQgPT09IHVuZGVmaW5lZCB8fCBzdGFydCA8IDApIHtcbiAgICBzdGFydCA9IDBcbiAgfVxuICAvLyBSZXR1cm4gZWFybHkgaWYgc3RhcnQgPiB0aGlzLmxlbmd0aC4gRG9uZSBoZXJlIHRvIHByZXZlbnQgcG90ZW50aWFsIHVpbnQzMlxuICAvLyBjb2VyY2lvbiBmYWlsIGJlbG93LlxuICBpZiAoc3RhcnQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgaWYgKGVuZCA9PT0gdW5kZWZpbmVkIHx8IGVuZCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgZW5kID0gdGhpcy5sZW5ndGhcbiAgfVxuXG4gIGlmIChlbmQgPD0gMCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgLy8gRm9yY2UgY29lcmNpb24gdG8gdWludDMyLiBUaGlzIHdpbGwgYWxzbyBjb2VyY2UgZmFsc2V5L05hTiB2YWx1ZXMgdG8gMC5cbiAgZW5kID4+Pj0gMFxuICBzdGFydCA+Pj49IDBcblxuICBpZiAoZW5kIDw9IHN0YXJ0KSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9ICd1dGY4J1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgcmV0dXJuIGhleFNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ3V0ZjgnOlxuICAgICAgY2FzZSAndXRmLTgnOlxuICAgICAgICByZXR1cm4gdXRmOFNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgICAgcmV0dXJuIGFzY2lpU2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnbGF0aW4xJzpcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIHJldHVybiBsYXRpbjFTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICByZXR1cm4gYmFzZTY0U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIHV0ZjE2bGVTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICAgICAgZW5jb2RpbmcgPSAoZW5jb2RpbmcgKyAnJykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cblxuLy8gVGhpcyBwcm9wZXJ0eSBpcyB1c2VkIGJ5IGBCdWZmZXIuaXNCdWZmZXJgIChhbmQgdGhlIGBpcy1idWZmZXJgIG5wbSBwYWNrYWdlKVxuLy8gdG8gZGV0ZWN0IGEgQnVmZmVyIGluc3RhbmNlLiBJdCdzIG5vdCBwb3NzaWJsZSB0byB1c2UgYGluc3RhbmNlb2YgQnVmZmVyYFxuLy8gcmVsaWFibHkgaW4gYSBicm93c2VyaWZ5IGNvbnRleHQgYmVjYXVzZSB0aGVyZSBjb3VsZCBiZSBtdWx0aXBsZSBkaWZmZXJlbnRcbi8vIGNvcGllcyBvZiB0aGUgJ2J1ZmZlcicgcGFja2FnZSBpbiB1c2UuIFRoaXMgbWV0aG9kIHdvcmtzIGV2ZW4gZm9yIEJ1ZmZlclxuLy8gaW5zdGFuY2VzIHRoYXQgd2VyZSBjcmVhdGVkIGZyb20gYW5vdGhlciBjb3B5IG9mIHRoZSBgYnVmZmVyYCBwYWNrYWdlLlxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2J1ZmZlci9pc3N1ZXMvMTU0XG5CdWZmZXIucHJvdG90eXBlLl9pc0J1ZmZlciA9IHRydWVcblxuZnVuY3Rpb24gc3dhcCAoYiwgbiwgbSkge1xuICBjb25zdCBpID0gYltuXVxuICBiW25dID0gYlttXVxuICBiW21dID0gaVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAxNiA9IGZ1bmN0aW9uIHN3YXAxNiAoKSB7XG4gIGNvbnN0IGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSAyICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzJylcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSAyKSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgMSlcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAzMiA9IGZ1bmN0aW9uIHN3YXAzMiAoKSB7XG4gIGNvbnN0IGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA0ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzJylcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgMylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgMilcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXA2NCA9IGZ1bmN0aW9uIHN3YXA2NCAoKSB7XG4gIGNvbnN0IGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA4ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzJylcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSA4KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgNylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgNilcbiAgICBzd2FwKHRoaXMsIGkgKyAyLCBpICsgNSlcbiAgICBzd2FwKHRoaXMsIGkgKyAzLCBpICsgNClcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkge1xuICBjb25zdCBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuZ3RoID09PSAwKSByZXR1cm4gJydcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHJldHVybiB1dGY4U2xpY2UodGhpcywgMCwgbGVuZ3RoKVxuICByZXR1cm4gc2xvd1RvU3RyaW5nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbn1cblxuQnVmZmVyLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZyA9IEJ1ZmZlci5wcm90b3R5cGUudG9TdHJpbmdcblxuQnVmZmVyLnByb3RvdHlwZS5lcXVhbHMgPSBmdW5jdGlvbiBlcXVhbHMgKGIpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYikpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXInKVxuICBpZiAodGhpcyA9PT0gYikgcmV0dXJuIHRydWVcbiAgcmV0dXJuIEJ1ZmZlci5jb21wYXJlKHRoaXMsIGIpID09PSAwXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5zcGVjdCA9IGZ1bmN0aW9uIGluc3BlY3QgKCkge1xuICBsZXQgc3RyID0gJydcbiAgY29uc3QgbWF4ID0gZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFU1xuICBzdHIgPSB0aGlzLnRvU3RyaW5nKCdoZXgnLCAwLCBtYXgpLnJlcGxhY2UoLyguezJ9KS9nLCAnJDEgJykudHJpbSgpXG4gIGlmICh0aGlzLmxlbmd0aCA+IG1heCkgc3RyICs9ICcgLi4uICdcbiAgcmV0dXJuICc8QnVmZmVyICcgKyBzdHIgKyAnPidcbn1cbmlmIChjdXN0b21JbnNwZWN0U3ltYm9sKSB7XG4gIEJ1ZmZlci5wcm90b3R5cGVbY3VzdG9tSW5zcGVjdFN5bWJvbF0gPSBCdWZmZXIucHJvdG90eXBlLmluc3BlY3Rcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAodGFyZ2V0LCBzdGFydCwgZW5kLCB0aGlzU3RhcnQsIHRoaXNFbmQpIHtcbiAgaWYgKGlzSW5zdGFuY2UodGFyZ2V0LCBVaW50OEFycmF5KSkge1xuICAgIHRhcmdldCA9IEJ1ZmZlci5mcm9tKHRhcmdldCwgdGFyZ2V0Lm9mZnNldCwgdGFyZ2V0LmJ5dGVMZW5ndGgpXG4gIH1cbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICAnVGhlIFwidGFyZ2V0XCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheS4gJyArXG4gICAgICAnUmVjZWl2ZWQgdHlwZSAnICsgKHR5cGVvZiB0YXJnZXQpXG4gICAgKVxuICB9XG5cbiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdGFydCA9IDBcbiAgfVxuICBpZiAoZW5kID09PSB1bmRlZmluZWQpIHtcbiAgICBlbmQgPSB0YXJnZXQgPyB0YXJnZXQubGVuZ3RoIDogMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRoaXNTdGFydCA9IDBcbiAgfVxuICBpZiAodGhpc0VuZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc0VuZCA9IHRoaXMubGVuZ3RoXG4gIH1cblxuICBpZiAoc3RhcnQgPCAwIHx8IGVuZCA+IHRhcmdldC5sZW5ndGggfHwgdGhpc1N0YXJ0IDwgMCB8fCB0aGlzRW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb3V0IG9mIHJhbmdlIGluZGV4JylcbiAgfVxuXG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCAmJiBzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCkge1xuICAgIHJldHVybiAtMVxuICB9XG4gIGlmIChzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMVxuICB9XG5cbiAgc3RhcnQgPj4+PSAwXG4gIGVuZCA+Pj49IDBcbiAgdGhpc1N0YXJ0ID4+Pj0gMFxuICB0aGlzRW5kID4+Pj0gMFxuXG4gIGlmICh0aGlzID09PSB0YXJnZXQpIHJldHVybiAwXG5cbiAgbGV0IHggPSB0aGlzRW5kIC0gdGhpc1N0YXJ0XG4gIGxldCB5ID0gZW5kIC0gc3RhcnRcbiAgY29uc3QgbGVuID0gTWF0aC5taW4oeCwgeSlcblxuICBjb25zdCB0aGlzQ29weSA9IHRoaXMuc2xpY2UodGhpc1N0YXJ0LCB0aGlzRW5kKVxuICBjb25zdCB0YXJnZXRDb3B5ID0gdGFyZ2V0LnNsaWNlKHN0YXJ0LCBlbmQpXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIGlmICh0aGlzQ29weVtpXSAhPT0gdGFyZ2V0Q29weVtpXSkge1xuICAgICAgeCA9IHRoaXNDb3B5W2ldXG4gICAgICB5ID0gdGFyZ2V0Q29weVtpXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoeCA8IHkpIHJldHVybiAtMVxuICBpZiAoeSA8IHgpIHJldHVybiAxXG4gIHJldHVybiAwXG59XG5cbi8vIEZpbmRzIGVpdGhlciB0aGUgZmlyc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0ID49IGBieXRlT2Zmc2V0YCxcbi8vIE9SIHRoZSBsYXN0IGluZGV4IG9mIGB2YWxgIGluIGBidWZmZXJgIGF0IG9mZnNldCA8PSBgYnl0ZU9mZnNldGAuXG4vL1xuLy8gQXJndW1lbnRzOlxuLy8gLSBidWZmZXIgLSBhIEJ1ZmZlciB0byBzZWFyY2hcbi8vIC0gdmFsIC0gYSBzdHJpbmcsIEJ1ZmZlciwgb3IgbnVtYmVyXG4vLyAtIGJ5dGVPZmZzZXQgLSBhbiBpbmRleCBpbnRvIGBidWZmZXJgOyB3aWxsIGJlIGNsYW1wZWQgdG8gYW4gaW50MzJcbi8vIC0gZW5jb2RpbmcgLSBhbiBvcHRpb25hbCBlbmNvZGluZywgcmVsZXZhbnQgaXMgdmFsIGlzIGEgc3RyaW5nXG4vLyAtIGRpciAtIHRydWUgZm9yIGluZGV4T2YsIGZhbHNlIGZvciBsYXN0SW5kZXhPZlxuZnVuY3Rpb24gYmlkaXJlY3Rpb25hbEluZGV4T2YgKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKSB7XG4gIC8vIEVtcHR5IGJ1ZmZlciBtZWFucyBubyBtYXRjaFxuICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gMCkgcmV0dXJuIC0xXG5cbiAgLy8gTm9ybWFsaXplIGJ5dGVPZmZzZXRcbiAgaWYgKHR5cGVvZiBieXRlT2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgIGVuY29kaW5nID0gYnl0ZU9mZnNldFxuICAgIGJ5dGVPZmZzZXQgPSAwXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA+IDB4N2ZmZmZmZmYpIHtcbiAgICBieXRlT2Zmc2V0ID0gMHg3ZmZmZmZmZlxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAtMHg4MDAwMDAwMCkge1xuICAgIGJ5dGVPZmZzZXQgPSAtMHg4MDAwMDAwMFxuICB9XG4gIGJ5dGVPZmZzZXQgPSArYnl0ZU9mZnNldCAvLyBDb2VyY2UgdG8gTnVtYmVyLlxuICBpZiAobnVtYmVySXNOYU4oYnl0ZU9mZnNldCkpIHtcbiAgICAvLyBieXRlT2Zmc2V0OiBpdCBpdCdzIHVuZGVmaW5lZCwgbnVsbCwgTmFOLCBcImZvb1wiLCBldGMsIHNlYXJjaCB3aG9sZSBidWZmZXJcbiAgICBieXRlT2Zmc2V0ID0gZGlyID8gMCA6IChidWZmZXIubGVuZ3RoIC0gMSlcbiAgfVxuXG4gIC8vIE5vcm1hbGl6ZSBieXRlT2Zmc2V0OiBuZWdhdGl2ZSBvZmZzZXRzIHN0YXJ0IGZyb20gdGhlIGVuZCBvZiB0aGUgYnVmZmVyXG4gIGlmIChieXRlT2Zmc2V0IDwgMCkgYnl0ZU9mZnNldCA9IGJ1ZmZlci5sZW5ndGggKyBieXRlT2Zmc2V0XG4gIGlmIChieXRlT2Zmc2V0ID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICBpZiAoZGlyKSByZXR1cm4gLTFcbiAgICBlbHNlIGJ5dGVPZmZzZXQgPSBidWZmZXIubGVuZ3RoIC0gMVxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAwKSB7XG4gICAgaWYgKGRpcikgYnl0ZU9mZnNldCA9IDBcbiAgICBlbHNlIHJldHVybiAtMVxuICB9XG5cbiAgLy8gTm9ybWFsaXplIHZhbFxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICB2YWwgPSBCdWZmZXIuZnJvbSh2YWwsIGVuY29kaW5nKVxuICB9XG5cbiAgLy8gRmluYWxseSwgc2VhcmNoIGVpdGhlciBpbmRleE9mIChpZiBkaXIgaXMgdHJ1ZSkgb3IgbGFzdEluZGV4T2ZcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih2YWwpKSB7XG4gICAgLy8gU3BlY2lhbCBjYXNlOiBsb29raW5nIGZvciBlbXB0eSBzdHJpbmcvYnVmZmVyIGFsd2F5cyBmYWlsc1xuICAgIGlmICh2YWwubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gLTFcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5SW5kZXhPZihidWZmZXIsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIHZhbCA9IHZhbCAmIDB4RkYgLy8gU2VhcmNoIGZvciBhIGJ5dGUgdmFsdWUgWzAtMjU1XVxuICAgIGlmICh0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgaWYgKGRpcikge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLCBbdmFsXSwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfVxuXG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ3ZhbCBtdXN0IGJlIHN0cmluZywgbnVtYmVyIG9yIEJ1ZmZlcicpXG59XG5cbmZ1bmN0aW9uIGFycmF5SW5kZXhPZiAoYXJyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgbGV0IGluZGV4U2l6ZSA9IDFcbiAgbGV0IGFyckxlbmd0aCA9IGFyci5sZW5ndGhcbiAgbGV0IHZhbExlbmd0aCA9IHZhbC5sZW5ndGhcblxuICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgaWYgKGVuY29kaW5nID09PSAndWNzMicgfHwgZW5jb2RpbmcgPT09ICd1Y3MtMicgfHxcbiAgICAgICAgZW5jb2RpbmcgPT09ICd1dGYxNmxlJyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi0xNmxlJykge1xuICAgICAgaWYgKGFyci5sZW5ndGggPCAyIHx8IHZhbC5sZW5ndGggPCAyKSB7XG4gICAgICAgIHJldHVybiAtMVxuICAgICAgfVxuICAgICAgaW5kZXhTaXplID0gMlxuICAgICAgYXJyTGVuZ3RoIC89IDJcbiAgICAgIHZhbExlbmd0aCAvPSAyXG4gICAgICBieXRlT2Zmc2V0IC89IDJcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZWFkIChidWYsIGkpIHtcbiAgICBpZiAoaW5kZXhTaXplID09PSAxKSB7XG4gICAgICByZXR1cm4gYnVmW2ldXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBidWYucmVhZFVJbnQxNkJFKGkgKiBpbmRleFNpemUpXG4gICAgfVxuICB9XG5cbiAgbGV0IGlcbiAgaWYgKGRpcikge1xuICAgIGxldCBmb3VuZEluZGV4ID0gLTFcbiAgICBmb3IgKGkgPSBieXRlT2Zmc2V0OyBpIDwgYXJyTGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChyZWFkKGFyciwgaSkgPT09IHJlYWQodmFsLCBmb3VuZEluZGV4ID09PSAtMSA/IDAgOiBpIC0gZm91bmRJbmRleCkpIHtcbiAgICAgICAgaWYgKGZvdW5kSW5kZXggPT09IC0xKSBmb3VuZEluZGV4ID0gaVxuICAgICAgICBpZiAoaSAtIGZvdW5kSW5kZXggKyAxID09PSB2YWxMZW5ndGgpIHJldHVybiBmb3VuZEluZGV4ICogaW5kZXhTaXplXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZm91bmRJbmRleCAhPT0gLTEpIGkgLT0gaSAtIGZvdW5kSW5kZXhcbiAgICAgICAgZm91bmRJbmRleCA9IC0xXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChieXRlT2Zmc2V0ICsgdmFsTGVuZ3RoID4gYXJyTGVuZ3RoKSBieXRlT2Zmc2V0ID0gYXJyTGVuZ3RoIC0gdmFsTGVuZ3RoXG4gICAgZm9yIChpID0gYnl0ZU9mZnNldDsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGxldCBmb3VuZCA9IHRydWVcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdmFsTGVuZ3RoOyBqKyspIHtcbiAgICAgICAgaWYgKHJlYWQoYXJyLCBpICsgaikgIT09IHJlYWQodmFsLCBqKSkge1xuICAgICAgICAgIGZvdW5kID0gZmFsc2VcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZm91bmQpIHJldHVybiBpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIC0xXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5jbHVkZXMgPSBmdW5jdGlvbiBpbmNsdWRlcyAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gdGhpcy5pbmRleE9mKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpICE9PSAtMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluZGV4T2YgPSBmdW5jdGlvbiBpbmRleE9mICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCB0cnVlKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmxhc3RJbmRleE9mID0gZnVuY3Rpb24gbGFzdEluZGV4T2YgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGZhbHNlKVxufVxuXG5mdW5jdGlvbiBoZXhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIG9mZnNldCA9IE51bWJlcihvZmZzZXQpIHx8IDBcbiAgY29uc3QgcmVtYWluaW5nID0gYnVmLmxlbmd0aCAtIG9mZnNldFxuICBpZiAoIWxlbmd0aCkge1xuICAgIGxlbmd0aCA9IHJlbWFpbmluZ1xuICB9IGVsc2Uge1xuICAgIGxlbmd0aCA9IE51bWJlcihsZW5ndGgpXG4gICAgaWYgKGxlbmd0aCA+IHJlbWFpbmluZykge1xuICAgICAgbGVuZ3RoID0gcmVtYWluaW5nXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc3RyTGVuID0gc3RyaW5nLmxlbmd0aFxuXG4gIGlmIChsZW5ndGggPiBzdHJMZW4gLyAyKSB7XG4gICAgbGVuZ3RoID0gc3RyTGVuIC8gMlxuICB9XG4gIGxldCBpXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIGNvbnN0IHBhcnNlZCA9IHBhcnNlSW50KHN0cmluZy5zdWJzdHIoaSAqIDIsIDIpLCAxNilcbiAgICBpZiAobnVtYmVySXNOYU4ocGFyc2VkKSkgcmV0dXJuIGlcbiAgICBidWZbb2Zmc2V0ICsgaV0gPSBwYXJzZWRcbiAgfVxuICByZXR1cm4gaVxufVxuXG5mdW5jdGlvbiB1dGY4V3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGY4VG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiBhc2NpaVdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYXNjaWlUb0J5dGVzKHN0cmluZyksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGJhc2U2NFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYmFzZTY0VG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiB1Y3MyV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGYxNmxlVG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKSB7XG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcpXG4gIGlmIChvZmZzZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICBvZmZzZXQgPSAwXG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBvZmZzZXRcbiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICAgIG9mZnNldCA9IDBcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgb2Zmc2V0WywgbGVuZ3RoXVssIGVuY29kaW5nXSlcbiAgfSBlbHNlIGlmIChpc0Zpbml0ZShvZmZzZXQpKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gICAgaWYgKGlzRmluaXRlKGxlbmd0aCkpIHtcbiAgICAgIGxlbmd0aCA9IGxlbmd0aCA+Pj4gMFxuICAgICAgaWYgKGVuY29kaW5nID09PSB1bmRlZmluZWQpIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgfSBlbHNlIHtcbiAgICAgIGVuY29kaW5nID0gbGVuZ3RoXG4gICAgICBsZW5ndGggPSB1bmRlZmluZWRcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0J1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkJ1xuICAgIClcbiAgfVxuXG4gIGNvbnN0IHJlbWFpbmluZyA9IHRoaXMubGVuZ3RoIC0gb2Zmc2V0XG4gIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCB8fCBsZW5ndGggPiByZW1haW5pbmcpIGxlbmd0aCA9IHJlbWFpbmluZ1xuXG4gIGlmICgoc3RyaW5nLmxlbmd0aCA+IDAgJiYgKGxlbmd0aCA8IDAgfHwgb2Zmc2V0IDwgMCkpIHx8IG9mZnNldCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0F0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzJylcbiAgfVxuXG4gIGlmICghZW5jb2RpbmcpIGVuY29kaW5nID0gJ3V0ZjgnXG5cbiAgbGV0IGxvd2VyZWRDYXNlID0gZmFsc2VcbiAgZm9yICg7Oykge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBoZXhXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuIHV0ZjhXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdhc2NpaSc6XG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGFzY2lpV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgICAgLy8gV2FybmluZzogbWF4TGVuZ3RoIG5vdCB0YWtlbiBpbnRvIGFjY291bnQgaW4gYmFzZTY0V3JpdGVcbiAgICAgICAgcmV0dXJuIGJhc2U2NFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiB1Y3MyV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gICAgICAgIGVuY29kaW5nID0gKCcnICsgZW5jb2RpbmcpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgbG93ZXJlZENhc2UgPSB0cnVlXG4gICAgfVxuICB9XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gdG9KU09OICgpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnQnVmZmVyJyxcbiAgICBkYXRhOiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnIgfHwgdGhpcywgMClcbiAgfVxufVxuXG5mdW5jdGlvbiBiYXNlNjRTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIGlmIChzdGFydCA9PT0gMCAmJiBlbmQgPT09IGJ1Zi5sZW5ndGgpIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21CeXRlQXJyYXkoYnVmKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYuc2xpY2Uoc3RhcnQsIGVuZCkpXG4gIH1cbn1cblxuZnVuY3Rpb24gdXRmOFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuICBjb25zdCByZXMgPSBbXVxuXG4gIGxldCBpID0gc3RhcnRcbiAgd2hpbGUgKGkgPCBlbmQpIHtcbiAgICBjb25zdCBmaXJzdEJ5dGUgPSBidWZbaV1cbiAgICBsZXQgY29kZVBvaW50ID0gbnVsbFxuICAgIGxldCBieXRlc1BlclNlcXVlbmNlID0gKGZpcnN0Qnl0ZSA+IDB4RUYpXG4gICAgICA/IDRcbiAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4REYpXG4gICAgICAgICAgPyAzXG4gICAgICAgICAgOiAoZmlyc3RCeXRlID4gMHhCRilcbiAgICAgICAgICAgICAgPyAyXG4gICAgICAgICAgICAgIDogMVxuXG4gICAgaWYgKGkgKyBieXRlc1BlclNlcXVlbmNlIDw9IGVuZCkge1xuICAgICAgbGV0IHNlY29uZEJ5dGUsIHRoaXJkQnl0ZSwgZm91cnRoQnl0ZSwgdGVtcENvZGVQb2ludFxuXG4gICAgICBzd2l0Y2ggKGJ5dGVzUGVyU2VxdWVuY2UpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIGlmIChmaXJzdEJ5dGUgPCAweDgwKSB7XG4gICAgICAgICAgICBjb2RlUG9pbnQgPSBmaXJzdEJ5dGVcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHgxRikgPDwgMHg2IHwgKHNlY29uZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweEYpIDw8IDB4QyB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKHRoaXJkQnl0ZSAmIDB4M0YpXG4gICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4N0ZGICYmICh0ZW1wQ29kZVBvaW50IDwgMHhEODAwIHx8IHRlbXBDb2RlUG9pbnQgPiAweERGRkYpKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGZvdXJ0aEJ5dGUgPSBidWZbaSArIDNdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4QzApID09PSAweDgwICYmIChmb3VydGhCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweDEyIHwgKHNlY29uZEJ5dGUgJiAweDNGKSA8PCAweEMgfCAodGhpcmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKGZvdXJ0aEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweEZGRkYgJiYgdGVtcENvZGVQb2ludCA8IDB4MTEwMDAwKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNvZGVQb2ludCA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgZGlkIG5vdCBnZW5lcmF0ZSBhIHZhbGlkIGNvZGVQb2ludCBzbyBpbnNlcnQgYVxuICAgICAgLy8gcmVwbGFjZW1lbnQgY2hhciAoVStGRkZEKSBhbmQgYWR2YW5jZSBvbmx5IDEgYnl0ZVxuICAgICAgY29kZVBvaW50ID0gMHhGRkZEXG4gICAgICBieXRlc1BlclNlcXVlbmNlID0gMVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50ID4gMHhGRkZGKSB7XG4gICAgICAvLyBlbmNvZGUgdG8gdXRmMTYgKHN1cnJvZ2F0ZSBwYWlyIGRhbmNlKVxuICAgICAgY29kZVBvaW50IC09IDB4MTAwMDBcbiAgICAgIHJlcy5wdXNoKGNvZGVQb2ludCA+Pj4gMTAgJiAweDNGRiB8IDB4RDgwMClcbiAgICAgIGNvZGVQb2ludCA9IDB4REMwMCB8IGNvZGVQb2ludCAmIDB4M0ZGXG4gICAgfVxuXG4gICAgcmVzLnB1c2goY29kZVBvaW50KVxuICAgIGkgKz0gYnl0ZXNQZXJTZXF1ZW5jZVxuICB9XG5cbiAgcmV0dXJuIGRlY29kZUNvZGVQb2ludHNBcnJheShyZXMpXG59XG5cbi8vIEJhc2VkIG9uIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzIyNzQ3MjcyLzY4MDc0MiwgdGhlIGJyb3dzZXIgd2l0aFxuLy8gdGhlIGxvd2VzdCBsaW1pdCBpcyBDaHJvbWUsIHdpdGggMHgxMDAwMCBhcmdzLlxuLy8gV2UgZ28gMSBtYWduaXR1ZGUgbGVzcywgZm9yIHNhZmV0eVxuY29uc3QgTUFYX0FSR1VNRU5UU19MRU5HVEggPSAweDEwMDBcblxuZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50c0FycmF5IChjb2RlUG9pbnRzKSB7XG4gIGNvbnN0IGxlbiA9IGNvZGVQb2ludHMubGVuZ3RoXG4gIGlmIChsZW4gPD0gTUFYX0FSR1VNRU5UU19MRU5HVEgpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNvZGVQb2ludHMpIC8vIGF2b2lkIGV4dHJhIHNsaWNlKClcbiAgfVxuXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgbGV0IHJlcyA9ICcnXG4gIGxldCBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBsZXQgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAobGV0IGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldICYgMHg3RilcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGxhdGluMVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgbGV0IHJldCA9ICcnXG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcblxuICBmb3IgKGxldCBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIHJldCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSlcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGhleFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgY29uc3QgbGVuID0gYnVmLmxlbmd0aFxuXG4gIGlmICghc3RhcnQgfHwgc3RhcnQgPCAwKSBzdGFydCA9IDBcbiAgaWYgKCFlbmQgfHwgZW5kIDwgMCB8fCBlbmQgPiBsZW4pIGVuZCA9IGxlblxuXG4gIGxldCBvdXQgPSAnJ1xuICBmb3IgKGxldCBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIG91dCArPSBoZXhTbGljZUxvb2t1cFRhYmxlW2J1ZltpXV1cbiAgfVxuICByZXR1cm4gb3V0XG59XG5cbmZ1bmN0aW9uIHV0ZjE2bGVTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIGNvbnN0IGJ5dGVzID0gYnVmLnNsaWNlKHN0YXJ0LCBlbmQpXG4gIGxldCByZXMgPSAnJ1xuICAvLyBJZiBieXRlcy5sZW5ndGggaXMgb2RkLCB0aGUgbGFzdCA4IGJpdHMgbXVzdCBiZSBpZ25vcmVkIChzYW1lIGFzIG5vZGUuanMpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoIC0gMTsgaSArPSAyKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0gKyAoYnl0ZXNbaSArIDFdICogMjU2KSlcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc2xpY2UgPSBmdW5jdGlvbiBzbGljZSAoc3RhcnQsIGVuZCkge1xuICBjb25zdCBsZW4gPSB0aGlzLmxlbmd0aFxuICBzdGFydCA9IH5+c3RhcnRcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiB+fmVuZFxuXG4gIGlmIChzdGFydCA8IDApIHtcbiAgICBzdGFydCArPSBsZW5cbiAgICBpZiAoc3RhcnQgPCAwKSBzdGFydCA9IDBcbiAgfSBlbHNlIGlmIChzdGFydCA+IGxlbikge1xuICAgIHN0YXJ0ID0gbGVuXG4gIH1cblxuICBpZiAoZW5kIDwgMCkge1xuICAgIGVuZCArPSBsZW5cbiAgICBpZiAoZW5kIDwgMCkgZW5kID0gMFxuICB9IGVsc2UgaWYgKGVuZCA+IGxlbikge1xuICAgIGVuZCA9IGxlblxuICB9XG5cbiAgaWYgKGVuZCA8IHN0YXJ0KSBlbmQgPSBzdGFydFxuXG4gIGNvbnN0IG5ld0J1ZiA9IHRoaXMuc3ViYXJyYXkoc3RhcnQsIGVuZClcbiAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2VcbiAgT2JqZWN0LnNldFByb3RvdHlwZU9mKG5ld0J1ZiwgQnVmZmVyLnByb3RvdHlwZSlcblxuICByZXR1cm4gbmV3QnVmXG59XG5cbi8qXG4gKiBOZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IGJ1ZmZlciBpc24ndCB0cnlpbmcgdG8gd3JpdGUgb3V0IG9mIGJvdW5kcy5cbiAqL1xuZnVuY3Rpb24gY2hlY2tPZmZzZXQgKG9mZnNldCwgZXh0LCBsZW5ndGgpIHtcbiAgaWYgKChvZmZzZXQgJSAxKSAhPT0gMCB8fCBvZmZzZXQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb2Zmc2V0IGlzIG5vdCB1aW50JylcbiAgaWYgKG9mZnNldCArIGV4dCA+IGxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RyeWluZyB0byBhY2Nlc3MgYmV5b25kIGJ1ZmZlciBsZW5ndGgnKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVaW50TEUgPVxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludExFID0gZnVuY3Rpb24gcmVhZFVJbnRMRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICBsZXQgdmFsID0gdGhpc1tvZmZzZXRdXG4gIGxldCBtdWwgPSAxXG4gIGxldCBpID0gMFxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsXG4gIH1cblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVpbnRCRSA9XG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50QkUgPSBmdW5jdGlvbiByZWFkVUludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcbiAgfVxuXG4gIGxldCB2YWwgPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF1cbiAgbGV0IG11bCA9IDFcbiAgd2hpbGUgKGJ5dGVMZW5ndGggPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1ieXRlTGVuZ3RoXSAqIG11bFxuICB9XG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVaW50OCA9XG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OCA9IGZ1bmN0aW9uIHJlYWRVSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAxLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVaW50MTZMRSA9XG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZMRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XSB8ICh0aGlzW29mZnNldCArIDFdIDw8IDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVpbnQxNkJFID1cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkJFID0gZnVuY3Rpb24gcmVhZFVJbnQxNkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSA8PCA4KSB8IHRoaXNbb2Zmc2V0ICsgMV1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVWludDMyTEUgPVxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyTEUgPSBmdW5jdGlvbiByZWFkVUludDMyTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICgodGhpc1tvZmZzZXRdKSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCAxNikpICtcbiAgICAgICh0aGlzW29mZnNldCArIDNdICogMHgxMDAwMDAwKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVaW50MzJCRSA9XG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcblxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSAqIDB4MTAwMDAwMCkgK1xuICAgICgodGhpc1tvZmZzZXQgKyAxXSA8PCAxNikgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDgpIHxcbiAgICB0aGlzW29mZnNldCArIDNdKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRCaWdVSW50NjRMRSA9IGRlZmluZUJpZ0ludE1ldGhvZChmdW5jdGlvbiByZWFkQmlnVUludDY0TEUgKG9mZnNldCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgdmFsaWRhdGVOdW1iZXIob2Zmc2V0LCAnb2Zmc2V0JylcbiAgY29uc3QgZmlyc3QgPSB0aGlzW29mZnNldF1cbiAgY29uc3QgbGFzdCA9IHRoaXNbb2Zmc2V0ICsgN11cbiAgaWYgKGZpcnN0ID09PSB1bmRlZmluZWQgfHwgbGFzdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYm91bmRzRXJyb3Iob2Zmc2V0LCB0aGlzLmxlbmd0aCAtIDgpXG4gIH1cblxuICBjb25zdCBsbyA9IGZpcnN0ICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogOCArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDE2ICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogMjRcblxuICBjb25zdCBoaSA9IHRoaXNbKytvZmZzZXRdICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogOCArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDE2ICtcbiAgICBsYXN0ICogMiAqKiAyNFxuXG4gIHJldHVybiBCaWdJbnQobG8pICsgKEJpZ0ludChoaSkgPDwgQmlnSW50KDMyKSlcbn0pXG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NEJFID0gZGVmaW5lQmlnSW50TWV0aG9kKGZ1bmN0aW9uIHJlYWRCaWdVSW50NjRCRSAob2Zmc2V0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICB2YWxpZGF0ZU51bWJlcihvZmZzZXQsICdvZmZzZXQnKVxuICBjb25zdCBmaXJzdCA9IHRoaXNbb2Zmc2V0XVxuICBjb25zdCBsYXN0ID0gdGhpc1tvZmZzZXQgKyA3XVxuICBpZiAoZmlyc3QgPT09IHVuZGVmaW5lZCB8fCBsYXN0ID09PSB1bmRlZmluZWQpIHtcbiAgICBib3VuZHNFcnJvcihvZmZzZXQsIHRoaXMubGVuZ3RoIC0gOClcbiAgfVxuXG4gIGNvbnN0IGhpID0gZmlyc3QgKiAyICoqIDI0ICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogMTYgK1xuICAgIHRoaXNbKytvZmZzZXRdICogMiAqKiA4ICtcbiAgICB0aGlzWysrb2Zmc2V0XVxuXG4gIGNvbnN0IGxvID0gdGhpc1srK29mZnNldF0gKiAyICoqIDI0ICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogMTYgK1xuICAgIHRoaXNbKytvZmZzZXRdICogMiAqKiA4ICtcbiAgICBsYXN0XG5cbiAgcmV0dXJuIChCaWdJbnQoaGkpIDw8IEJpZ0ludCgzMikpICsgQmlnSW50KGxvKVxufSlcblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50TEUgPSBmdW5jdGlvbiByZWFkSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgbGV0IHZhbCA9IHRoaXNbb2Zmc2V0XVxuICBsZXQgbXVsID0gMVxuICBsZXQgaSA9IDBcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyBpXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludEJFID0gZnVuY3Rpb24gcmVhZEludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIGJ5dGVMZW5ndGgsIHRoaXMubGVuZ3RoKVxuXG4gIGxldCBpID0gYnl0ZUxlbmd0aFxuICBsZXQgbXVsID0gMVxuICBsZXQgdmFsID0gdGhpc1tvZmZzZXQgKyAtLWldXG4gIHdoaWxlIChpID4gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIC0taV0gKiBtdWxcbiAgfVxuICBtdWwgKj0gMHg4MFxuXG4gIGlmICh2YWwgPj0gbXVsKSB2YWwgLT0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpXG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQ4ID0gZnVuY3Rpb24gcmVhZEludDggKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMSwgdGhpcy5sZW5ndGgpXG4gIGlmICghKHRoaXNbb2Zmc2V0XSAmIDB4ODApKSByZXR1cm4gKHRoaXNbb2Zmc2V0XSlcbiAgcmV0dXJuICgoMHhmZiAtIHRoaXNbb2Zmc2V0XSArIDEpICogLTEpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDE2TEUgPSBmdW5jdGlvbiByZWFkSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgY29uc3QgdmFsID0gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOClcbiAgcmV0dXJuICh2YWwgJiAweDgwMDApID8gdmFsIHwgMHhGRkZGMDAwMCA6IHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkJFID0gZnVuY3Rpb24gcmVhZEludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIGNvbnN0IHZhbCA9IHRoaXNbb2Zmc2V0ICsgMV0gfCAodGhpc1tvZmZzZXRdIDw8IDgpXG4gIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJMRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdKSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOCkgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10gPDwgMjQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyQkUgPSBmdW5jdGlvbiByZWFkSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcblxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSA8PCAyNCkgfFxuICAgICh0aGlzW29mZnNldCArIDFdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgOCkgfFxuICAgICh0aGlzW29mZnNldCArIDNdKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRCaWdJbnQ2NExFID0gZGVmaW5lQmlnSW50TWV0aG9kKGZ1bmN0aW9uIHJlYWRCaWdJbnQ2NExFIChvZmZzZXQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIHZhbGlkYXRlTnVtYmVyKG9mZnNldCwgJ29mZnNldCcpXG4gIGNvbnN0IGZpcnN0ID0gdGhpc1tvZmZzZXRdXG4gIGNvbnN0IGxhc3QgPSB0aGlzW29mZnNldCArIDddXG4gIGlmIChmaXJzdCA9PT0gdW5kZWZpbmVkIHx8IGxhc3QgPT09IHVuZGVmaW5lZCkge1xuICAgIGJvdW5kc0Vycm9yKG9mZnNldCwgdGhpcy5sZW5ndGggLSA4KVxuICB9XG5cbiAgY29uc3QgdmFsID0gdGhpc1tvZmZzZXQgKyA0XSArXG4gICAgdGhpc1tvZmZzZXQgKyA1XSAqIDIgKiogOCArXG4gICAgdGhpc1tvZmZzZXQgKyA2XSAqIDIgKiogMTYgK1xuICAgIChsYXN0IDw8IDI0KSAvLyBPdmVyZmxvd1xuXG4gIHJldHVybiAoQmlnSW50KHZhbCkgPDwgQmlnSW50KDMyKSkgK1xuICAgIEJpZ0ludChmaXJzdCArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDggK1xuICAgIHRoaXNbKytvZmZzZXRdICogMiAqKiAxNiArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDI0KVxufSlcblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkQmlnSW50NjRCRSA9IGRlZmluZUJpZ0ludE1ldGhvZChmdW5jdGlvbiByZWFkQmlnSW50NjRCRSAob2Zmc2V0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICB2YWxpZGF0ZU51bWJlcihvZmZzZXQsICdvZmZzZXQnKVxuICBjb25zdCBmaXJzdCA9IHRoaXNbb2Zmc2V0XVxuICBjb25zdCBsYXN0ID0gdGhpc1tvZmZzZXQgKyA3XVxuICBpZiAoZmlyc3QgPT09IHVuZGVmaW5lZCB8fCBsYXN0ID09PSB1bmRlZmluZWQpIHtcbiAgICBib3VuZHNFcnJvcihvZmZzZXQsIHRoaXMubGVuZ3RoIC0gOClcbiAgfVxuXG4gIGNvbnN0IHZhbCA9IChmaXJzdCA8PCAyNCkgKyAvLyBPdmVyZmxvd1xuICAgIHRoaXNbKytvZmZzZXRdICogMiAqKiAxNiArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDggK1xuICAgIHRoaXNbKytvZmZzZXRdXG5cbiAgcmV0dXJuIChCaWdJbnQodmFsKSA8PCBCaWdJbnQoMzIpKSArXG4gICAgQmlnSW50KHRoaXNbKytvZmZzZXRdICogMiAqKiAyNCArXG4gICAgdGhpc1srK29mZnNldF0gKiAyICoqIDE2ICtcbiAgICB0aGlzWysrb2Zmc2V0XSAqIDIgKiogOCArXG4gICAgbGFzdClcbn0pXG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0TEUgPSBmdW5jdGlvbiByZWFkRmxvYXRMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLCBvZmZzZXQsIHRydWUsIDIzLCA0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRGbG9hdEJFID0gZnVuY3Rpb24gcmVhZEZsb2F0QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUxFID0gZnVuY3Rpb24gcmVhZERvdWJsZUxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgNTIsIDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUJFID0gZnVuY3Rpb24gcmVhZERvdWJsZUJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgZmFsc2UsIDUyLCA4KVxufVxuXG5mdW5jdGlvbiBjaGVja0ludCAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBleHQsIG1heCwgbWluKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZikpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmZmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpXG4gIGlmICh2YWx1ZSA+IG1heCB8fCB2YWx1ZSA8IG1pbikgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJylcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVWludExFID1cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjb25zdCBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIGxldCBtdWwgPSAxXG4gIGxldCBpID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVaW50QkUgPVxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRCRSA9IGZ1bmN0aW9uIHdyaXRlVUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNvbnN0IG1heEJ5dGVzID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpIC0gMVxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG1heEJ5dGVzLCAwKVxuICB9XG5cbiAgbGV0IGkgPSBieXRlTGVuZ3RoIC0gMVxuICBsZXQgbXVsID0gMVxuICB0aGlzW29mZnNldCArIGldID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgtLWkgPj0gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAodmFsdWUgLyBtdWwpICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVpbnQ4ID1cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50OCA9IGZ1bmN0aW9uIHdyaXRlVUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweGZmLCAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVWludDE2TEUgPVxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFID0gZnVuY3Rpb24gd3JpdGVVSW50MTZMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4ZmZmZiwgMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOClcbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVpbnQxNkJFID1cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDE2QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVaW50MzJMRSA9XG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHhmZmZmZmZmZiwgMClcbiAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSA+Pj4gMjQpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVWludDMyQkUgPVxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFID0gZnVuY3Rpb24gd3JpdGVVSW50MzJCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4ZmZmZmZmZmYsIDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gMjQpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDE2KVxuICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuZnVuY3Rpb24gd3J0QmlnVUludDY0TEUgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbWluLCBtYXgpIHtcbiAgY2hlY2tJbnRCSSh2YWx1ZSwgbWluLCBtYXgsIGJ1Ziwgb2Zmc2V0LCA3KVxuXG4gIGxldCBsbyA9IE51bWJlcih2YWx1ZSAmIEJpZ0ludCgweGZmZmZmZmZmKSlcbiAgYnVmW29mZnNldCsrXSA9IGxvXG4gIGxvID0gbG8gPj4gOFxuICBidWZbb2Zmc2V0KytdID0gbG9cbiAgbG8gPSBsbyA+PiA4XG4gIGJ1ZltvZmZzZXQrK10gPSBsb1xuICBsbyA9IGxvID4+IDhcbiAgYnVmW29mZnNldCsrXSA9IGxvXG4gIGxldCBoaSA9IE51bWJlcih2YWx1ZSA+PiBCaWdJbnQoMzIpICYgQmlnSW50KDB4ZmZmZmZmZmYpKVxuICBidWZbb2Zmc2V0KytdID0gaGlcbiAgaGkgPSBoaSA+PiA4XG4gIGJ1ZltvZmZzZXQrK10gPSBoaVxuICBoaSA9IGhpID4+IDhcbiAgYnVmW29mZnNldCsrXSA9IGhpXG4gIGhpID0gaGkgPj4gOFxuICBidWZbb2Zmc2V0KytdID0gaGlcbiAgcmV0dXJuIG9mZnNldFxufVxuXG5mdW5jdGlvbiB3cnRCaWdVSW50NjRCRSAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBtaW4sIG1heCkge1xuICBjaGVja0ludEJJKHZhbHVlLCBtaW4sIG1heCwgYnVmLCBvZmZzZXQsIDcpXG5cbiAgbGV0IGxvID0gTnVtYmVyKHZhbHVlICYgQmlnSW50KDB4ZmZmZmZmZmYpKVxuICBidWZbb2Zmc2V0ICsgN10gPSBsb1xuICBsbyA9IGxvID4+IDhcbiAgYnVmW29mZnNldCArIDZdID0gbG9cbiAgbG8gPSBsbyA+PiA4XG4gIGJ1ZltvZmZzZXQgKyA1XSA9IGxvXG4gIGxvID0gbG8gPj4gOFxuICBidWZbb2Zmc2V0ICsgNF0gPSBsb1xuICBsZXQgaGkgPSBOdW1iZXIodmFsdWUgPj4gQmlnSW50KDMyKSAmIEJpZ0ludCgweGZmZmZmZmZmKSlcbiAgYnVmW29mZnNldCArIDNdID0gaGlcbiAgaGkgPSBoaSA+PiA4XG4gIGJ1ZltvZmZzZXQgKyAyXSA9IGhpXG4gIGhpID0gaGkgPj4gOFxuICBidWZbb2Zmc2V0ICsgMV0gPSBoaVxuICBoaSA9IGhpID4+IDhcbiAgYnVmW29mZnNldF0gPSBoaVxuICByZXR1cm4gb2Zmc2V0ICsgOFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlQmlnVUludDY0TEUgPSBkZWZpbmVCaWdJbnRNZXRob2QoZnVuY3Rpb24gd3JpdGVCaWdVSW50NjRMRSAodmFsdWUsIG9mZnNldCA9IDApIHtcbiAgcmV0dXJuIHdydEJpZ1VJbnQ2NExFKHRoaXMsIHZhbHVlLCBvZmZzZXQsIEJpZ0ludCgwKSwgQmlnSW50KCcweGZmZmZmZmZmZmZmZmZmZmYnKSlcbn0pXG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRCRSA9IGRlZmluZUJpZ0ludE1ldGhvZChmdW5jdGlvbiB3cml0ZUJpZ1VJbnQ2NEJFICh2YWx1ZSwgb2Zmc2V0ID0gMCkge1xuICByZXR1cm4gd3J0QmlnVUludDY0QkUodGhpcywgdmFsdWUsIG9mZnNldCwgQmlnSW50KDApLCBCaWdJbnQoJzB4ZmZmZmZmZmZmZmZmZmZmZicpKVxufSlcblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludExFID0gZnVuY3Rpb24gd3JpdGVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjb25zdCBsaW1pdCA9IE1hdGgucG93KDIsICg4ICogYnl0ZUxlbmd0aCkgLSAxKVxuXG4gICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpXG4gIH1cblxuICBsZXQgaSA9IDBcbiAgbGV0IG11bCA9IDFcbiAgbGV0IHN1YiA9IDBcbiAgdGhpc1tvZmZzZXRdID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpIC0gMV0gIT09IDApIHtcbiAgICAgIHN1YiA9IDFcbiAgICB9XG4gICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludEJFID0gZnVuY3Rpb24gd3JpdGVJbnRCRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjb25zdCBsaW1pdCA9IE1hdGgucG93KDIsICg4ICogYnl0ZUxlbmd0aCkgLSAxKVxuXG4gICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpXG4gIH1cblxuICBsZXQgaSA9IGJ5dGVMZW5ndGggLSAxXG4gIGxldCBtdWwgPSAxXG4gIGxldCBzdWIgPSAwXG4gIHRoaXNbb2Zmc2V0ICsgaV0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKC0taSA+PSAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpICsgMV0gIT09IDApIHtcbiAgICAgIHN1YiA9IDFcbiAgICB9XG4gICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDggPSBmdW5jdGlvbiB3cml0ZUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweDdmLCAtMHg4MClcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmICsgdmFsdWUgKyAxXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAxXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkxFID0gZnVuY3Rpb24gd3JpdGVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHg3ZmZmLCAtMHg4MDAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4N2ZmZiwgLTB4ODAwMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZUludDMyTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgPj4+IDI0KVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MzJCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4N2ZmZmZmZmYsIC0weDgwMDAwMDAwKVxuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmZmZmZmZmYgKyB2YWx1ZSArIDFcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiAyNClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlQmlnSW50NjRMRSA9IGRlZmluZUJpZ0ludE1ldGhvZChmdW5jdGlvbiB3cml0ZUJpZ0ludDY0TEUgKHZhbHVlLCBvZmZzZXQgPSAwKSB7XG4gIHJldHVybiB3cnRCaWdVSW50NjRMRSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAtQmlnSW50KCcweDgwMDAwMDAwMDAwMDAwMDAnKSwgQmlnSW50KCcweDdmZmZmZmZmZmZmZmZmZmYnKSlcbn0pXG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVCaWdJbnQ2NEJFID0gZGVmaW5lQmlnSW50TWV0aG9kKGZ1bmN0aW9uIHdyaXRlQmlnSW50NjRCRSAodmFsdWUsIG9mZnNldCA9IDApIHtcbiAgcmV0dXJuIHdydEJpZ1VJbnQ2NEJFKHRoaXMsIHZhbHVlLCBvZmZzZXQsIC1CaWdJbnQoJzB4ODAwMDAwMDAwMDAwMDAwMCcpLCBCaWdJbnQoJzB4N2ZmZmZmZmZmZmZmZmZmZicpKVxufSlcblxuZnVuY3Rpb24gY2hlY2tJRUVFNzU0IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxuICBpZiAob2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRmxvYXQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrSUVFRTc1NChidWYsIHZhbHVlLCBvZmZzZXQsIDQsIDMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgsIC0zLjQwMjgyMzQ2NjM4NTI4ODZlKzM4KVxuICB9XG4gIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDIzLCA0KVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRMRSA9IGZ1bmN0aW9uIHdyaXRlRmxvYXRMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRmxvYXQodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdEJFID0gZnVuY3Rpb24gd3JpdGVGbG9hdEJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRG91YmxlIChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjaGVja0lFRUU3NTQoYnVmLCB2YWx1ZSwgb2Zmc2V0LCA4LCAxLjc5NzY5MzEzNDg2MjMxNTdFKzMwOCwgLTEuNzk3NjkzMTM0ODYyMzE1N0UrMzA4KVxuICB9XG4gIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDUyLCA4KVxuICByZXR1cm4gb2Zmc2V0ICsgOFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlTEUgPSBmdW5jdGlvbiB3cml0ZURvdWJsZUxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVEb3VibGUodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVCRSA9IGZ1bmN0aW9uIHdyaXRlRG91YmxlQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZURvdWJsZSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpXG59XG5cbi8vIGNvcHkodGFyZ2V0QnVmZmVyLCB0YXJnZXRTdGFydD0wLCBzb3VyY2VTdGFydD0wLCBzb3VyY2VFbmQ9YnVmZmVyLmxlbmd0aClcbkJ1ZmZlci5wcm90b3R5cGUuY29weSA9IGZ1bmN0aW9uIGNvcHkgKHRhcmdldCwgdGFyZ2V0U3RhcnQsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgc2hvdWxkIGJlIGEgQnVmZmVyJylcbiAgaWYgKCFzdGFydCkgc3RhcnQgPSAwXG4gIGlmICghZW5kICYmIGVuZCAhPT0gMCkgZW5kID0gdGhpcy5sZW5ndGhcbiAgaWYgKHRhcmdldFN0YXJ0ID49IHRhcmdldC5sZW5ndGgpIHRhcmdldFN0YXJ0ID0gdGFyZ2V0Lmxlbmd0aFxuICBpZiAoIXRhcmdldFN0YXJ0KSB0YXJnZXRTdGFydCA9IDBcbiAgaWYgKGVuZCA+IDAgJiYgZW5kIDwgc3RhcnQpIGVuZCA9IHN0YXJ0XG5cbiAgLy8gQ29weSAwIGJ5dGVzOyB3ZSdyZSBkb25lXG4gIGlmIChlbmQgPT09IHN0YXJ0KSByZXR1cm4gMFxuICBpZiAodGFyZ2V0Lmxlbmd0aCA9PT0gMCB8fCB0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBGYXRhbCBlcnJvciBjb25kaXRpb25zXG4gIGlmICh0YXJnZXRTdGFydCA8IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcigndGFyZ2V0U3RhcnQgb3V0IG9mIGJvdW5kcycpXG4gIH1cbiAgaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSB0aGlzLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG4gIGlmIChlbmQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignc291cmNlRW5kIG91dCBvZiBib3VuZHMnKVxuXG4gIC8vIEFyZSB3ZSBvb2I/XG4gIGlmIChlbmQgPiB0aGlzLmxlbmd0aCkgZW5kID0gdGhpcy5sZW5ndGhcbiAgaWYgKHRhcmdldC5sZW5ndGggLSB0YXJnZXRTdGFydCA8IGVuZCAtIHN0YXJ0KSB7XG4gICAgZW5kID0gdGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0ICsgc3RhcnRcbiAgfVxuXG4gIGNvbnN0IGxlbiA9IGVuZCAtIHN0YXJ0XG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCAmJiB0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIFVzZSBidWlsdC1pbiB3aGVuIGF2YWlsYWJsZSwgbWlzc2luZyBmcm9tIElFMTFcbiAgICB0aGlzLmNvcHlXaXRoaW4odGFyZ2V0U3RhcnQsIHN0YXJ0LCBlbmQpXG4gIH0gZWxzZSB7XG4gICAgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwoXG4gICAgICB0YXJnZXQsXG4gICAgICB0aGlzLnN1YmFycmF5KHN0YXJ0LCBlbmQpLFxuICAgICAgdGFyZ2V0U3RhcnRcbiAgICApXG4gIH1cblxuICByZXR1cm4gbGVuXG59XG5cbi8vIFVzYWdlOlxuLy8gICAgYnVmZmVyLmZpbGwobnVtYmVyWywgb2Zmc2V0WywgZW5kXV0pXG4vLyAgICBidWZmZXIuZmlsbChidWZmZXJbLCBvZmZzZXRbLCBlbmRdXSlcbi8vICAgIGJ1ZmZlci5maWxsKHN0cmluZ1ssIG9mZnNldFssIGVuZF1dWywgZW5jb2RpbmddKVxuQnVmZmVyLnByb3RvdHlwZS5maWxsID0gZnVuY3Rpb24gZmlsbCAodmFsLCBzdGFydCwgZW5kLCBlbmNvZGluZykge1xuICAvLyBIYW5kbGUgc3RyaW5nIGNhc2VzOlxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodHlwZW9mIHN0YXJ0ID09PSAnc3RyaW5nJykge1xuICAgICAgZW5jb2RpbmcgPSBzdGFydFxuICAgICAgc3RhcnQgPSAwXG4gICAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGVuZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gZW5kXG4gICAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICAgIH1cbiAgICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgZW5jb2RpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nJylcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycgJiYgIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgIH1cbiAgICBpZiAodmFsLmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3QgY29kZSA9IHZhbC5jaGFyQ29kZUF0KDApXG4gICAgICBpZiAoKGVuY29kaW5nID09PSAndXRmOCcgJiYgY29kZSA8IDEyOCkgfHxcbiAgICAgICAgICBlbmNvZGluZyA9PT0gJ2xhdGluMScpIHtcbiAgICAgICAgLy8gRmFzdCBwYXRoOiBJZiBgdmFsYCBmaXRzIGludG8gYSBzaW5nbGUgYnl0ZSwgdXNlIHRoYXQgbnVtZXJpYyB2YWx1ZS5cbiAgICAgICAgdmFsID0gY29kZVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIHZhbCA9IHZhbCAmIDI1NVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdib29sZWFuJykge1xuICAgIHZhbCA9IE51bWJlcih2YWwpXG4gIH1cblxuICAvLyBJbnZhbGlkIHJhbmdlcyBhcmUgbm90IHNldCB0byBhIGRlZmF1bHQsIHNvIGNhbiByYW5nZSBjaGVjayBlYXJseS5cbiAgaWYgKHN0YXJ0IDwgMCB8fCB0aGlzLmxlbmd0aCA8IHN0YXJ0IHx8IHRoaXMubGVuZ3RoIDwgZW5kKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ091dCBvZiByYW5nZSBpbmRleCcpXG4gIH1cblxuICBpZiAoZW5kIDw9IHN0YXJ0KSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHN0YXJ0ID0gc3RhcnQgPj4+IDBcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyB0aGlzLmxlbmd0aCA6IGVuZCA+Pj4gMFxuXG4gIGlmICghdmFsKSB2YWwgPSAwXG5cbiAgbGV0IGlcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgICAgdGhpc1tpXSA9IHZhbFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjb25zdCBieXRlcyA9IEJ1ZmZlci5pc0J1ZmZlcih2YWwpXG4gICAgICA/IHZhbFxuICAgICAgOiBCdWZmZXIuZnJvbSh2YWwsIGVuY29kaW5nKVxuICAgIGNvbnN0IGxlbiA9IGJ5dGVzLmxlbmd0aFxuICAgIGlmIChsZW4gPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSB2YWx1ZSBcIicgKyB2YWwgK1xuICAgICAgICAnXCIgaXMgaW52YWxpZCBmb3IgYXJndW1lbnQgXCJ2YWx1ZVwiJylcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IGVuZCAtIHN0YXJ0OyArK2kpIHtcbiAgICAgIHRoaXNbaSArIHN0YXJ0XSA9IGJ5dGVzW2kgJSBsZW5dXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXNcbn1cblxuLy8gQ1VTVE9NIEVSUk9SU1xuLy8gPT09PT09PT09PT09PVxuXG4vLyBTaW1wbGlmaWVkIHZlcnNpb25zIGZyb20gTm9kZSwgY2hhbmdlZCBmb3IgQnVmZmVyLW9ubHkgdXNhZ2VcbmNvbnN0IGVycm9ycyA9IHt9XG5mdW5jdGlvbiBFIChzeW0sIGdldE1lc3NhZ2UsIEJhc2UpIHtcbiAgZXJyb3JzW3N5bV0gPSBjbGFzcyBOb2RlRXJyb3IgZXh0ZW5kcyBCYXNlIHtcbiAgICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgICBzdXBlcigpXG5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnbWVzc2FnZScsIHtcbiAgICAgICAgdmFsdWU6IGdldE1lc3NhZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfSlcblxuICAgICAgLy8gQWRkIHRoZSBlcnJvciBjb2RlIHRvIHRoZSBuYW1lIHRvIGluY2x1ZGUgaXQgaW4gdGhlIHN0YWNrIHRyYWNlLlxuICAgICAgdGhpcy5uYW1lID0gYCR7dGhpcy5uYW1lfSBbJHtzeW19XWBcbiAgICAgIC8vIEFjY2VzcyB0aGUgc3RhY2sgdG8gZ2VuZXJhdGUgdGhlIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBlcnJvciBjb2RlXG4gICAgICAvLyBmcm9tIHRoZSBuYW1lLlxuICAgICAgdGhpcy5zdGFjayAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuICAgICAgLy8gUmVzZXQgdGhlIG5hbWUgdG8gdGhlIGFjdHVhbCBuYW1lLlxuICAgICAgZGVsZXRlIHRoaXMubmFtZVxuICAgIH1cblxuICAgIGdldCBjb2RlICgpIHtcbiAgICAgIHJldHVybiBzeW1cbiAgICB9XG5cbiAgICBzZXQgY29kZSAodmFsdWUpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnY29kZScsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgdG9TdHJpbmcgKCkge1xuICAgICAgcmV0dXJuIGAke3RoaXMubmFtZX0gWyR7c3ltfV06ICR7dGhpcy5tZXNzYWdlfWBcbiAgICB9XG4gIH1cbn1cblxuRSgnRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTJyxcbiAgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICBpZiAobmFtZSkge1xuICAgICAgcmV0dXJuIGAke25hbWV9IGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kc2BcbiAgICB9XG5cbiAgICByZXR1cm4gJ0F0dGVtcHQgdG8gYWNjZXNzIG1lbW9yeSBvdXRzaWRlIGJ1ZmZlciBib3VuZHMnXG4gIH0sIFJhbmdlRXJyb3IpXG5FKCdFUlJfSU5WQUxJRF9BUkdfVFlQRScsXG4gIGZ1bmN0aW9uIChuYW1lLCBhY3R1YWwpIHtcbiAgICByZXR1cm4gYFRoZSBcIiR7bmFtZX1cIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyLiBSZWNlaXZlZCB0eXBlICR7dHlwZW9mIGFjdHVhbH1gXG4gIH0sIFR5cGVFcnJvcilcbkUoJ0VSUl9PVVRfT0ZfUkFOR0UnLFxuICBmdW5jdGlvbiAoc3RyLCByYW5nZSwgaW5wdXQpIHtcbiAgICBsZXQgbXNnID0gYFRoZSB2YWx1ZSBvZiBcIiR7c3RyfVwiIGlzIG91dCBvZiByYW5nZS5gXG4gICAgbGV0IHJlY2VpdmVkID0gaW5wdXRcbiAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcihpbnB1dCkgJiYgTWF0aC5hYnMoaW5wdXQpID4gMiAqKiAzMikge1xuICAgICAgcmVjZWl2ZWQgPSBhZGROdW1lcmljYWxTZXBhcmF0b3IoU3RyaW5nKGlucHV0KSlcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgIHJlY2VpdmVkID0gU3RyaW5nKGlucHV0KVxuICAgICAgaWYgKGlucHV0ID4gQmlnSW50KDIpICoqIEJpZ0ludCgzMikgfHwgaW5wdXQgPCAtKEJpZ0ludCgyKSAqKiBCaWdJbnQoMzIpKSkge1xuICAgICAgICByZWNlaXZlZCA9IGFkZE51bWVyaWNhbFNlcGFyYXRvcihyZWNlaXZlZClcbiAgICAgIH1cbiAgICAgIHJlY2VpdmVkICs9ICduJ1xuICAgIH1cbiAgICBtc2cgKz0gYCBJdCBtdXN0IGJlICR7cmFuZ2V9LiBSZWNlaXZlZCAke3JlY2VpdmVkfWBcbiAgICByZXR1cm4gbXNnXG4gIH0sIFJhbmdlRXJyb3IpXG5cbmZ1bmN0aW9uIGFkZE51bWVyaWNhbFNlcGFyYXRvciAodmFsKSB7XG4gIGxldCByZXMgPSAnJ1xuICBsZXQgaSA9IHZhbC5sZW5ndGhcbiAgY29uc3Qgc3RhcnQgPSB2YWxbMF0gPT09ICctJyA/IDEgOiAwXG4gIGZvciAoOyBpID49IHN0YXJ0ICsgNDsgaSAtPSAzKSB7XG4gICAgcmVzID0gYF8ke3ZhbC5zbGljZShpIC0gMywgaSl9JHtyZXN9YFxuICB9XG4gIHJldHVybiBgJHt2YWwuc2xpY2UoMCwgaSl9JHtyZXN9YFxufVxuXG4vLyBDSEVDSyBGVU5DVElPTlNcbi8vID09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBjaGVja0JvdW5kcyAoYnVmLCBvZmZzZXQsIGJ5dGVMZW5ndGgpIHtcbiAgdmFsaWRhdGVOdW1iZXIob2Zmc2V0LCAnb2Zmc2V0JylcbiAgaWYgKGJ1ZltvZmZzZXRdID09PSB1bmRlZmluZWQgfHwgYnVmW29mZnNldCArIGJ5dGVMZW5ndGhdID09PSB1bmRlZmluZWQpIHtcbiAgICBib3VuZHNFcnJvcihvZmZzZXQsIGJ1Zi5sZW5ndGggLSAoYnl0ZUxlbmd0aCArIDEpKVxuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrSW50QkkgKHZhbHVlLCBtaW4sIG1heCwgYnVmLCBvZmZzZXQsIGJ5dGVMZW5ndGgpIHtcbiAgaWYgKHZhbHVlID4gbWF4IHx8IHZhbHVlIDwgbWluKSB7XG4gICAgY29uc3QgbiA9IHR5cGVvZiBtaW4gPT09ICdiaWdpbnQnID8gJ24nIDogJydcbiAgICBsZXQgcmFuZ2VcbiAgICBpZiAoYnl0ZUxlbmd0aCA+IDMpIHtcbiAgICAgIGlmIChtaW4gPT09IDAgfHwgbWluID09PSBCaWdJbnQoMCkpIHtcbiAgICAgICAgcmFuZ2UgPSBgPj0gMCR7bn0gYW5kIDwgMiR7bn0gKiogJHsoYnl0ZUxlbmd0aCArIDEpICogOH0ke259YFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmFuZ2UgPSBgPj0gLSgyJHtufSAqKiAkeyhieXRlTGVuZ3RoICsgMSkgKiA4IC0gMX0ke259KSBhbmQgPCAyICoqIGAgK1xuICAgICAgICAgICAgICAgIGAkeyhieXRlTGVuZ3RoICsgMSkgKiA4IC0gMX0ke259YFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByYW5nZSA9IGA+PSAke21pbn0ke259IGFuZCA8PSAke21heH0ke259YFxuICAgIH1cbiAgICB0aHJvdyBuZXcgZXJyb3JzLkVSUl9PVVRfT0ZfUkFOR0UoJ3ZhbHVlJywgcmFuZ2UsIHZhbHVlKVxuICB9XG4gIGNoZWNrQm91bmRzKGJ1Ziwgb2Zmc2V0LCBieXRlTGVuZ3RoKVxufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZU51bWJlciAodmFsdWUsIG5hbWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLkVSUl9JTlZBTElEX0FSR19UWVBFKG5hbWUsICdudW1iZXInLCB2YWx1ZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBib3VuZHNFcnJvciAodmFsdWUsIGxlbmd0aCwgdHlwZSkge1xuICBpZiAoTWF0aC5mbG9vcih2YWx1ZSkgIT09IHZhbHVlKSB7XG4gICAgdmFsaWRhdGVOdW1iZXIodmFsdWUsIHR5cGUpXG4gICAgdGhyb3cgbmV3IGVycm9ycy5FUlJfT1VUX09GX1JBTkdFKHR5cGUgfHwgJ29mZnNldCcsICdhbiBpbnRlZ2VyJywgdmFsdWUpXG4gIH1cblxuICBpZiAobGVuZ3RoIDwgMCkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTKClcbiAgfVxuXG4gIHRocm93IG5ldyBlcnJvcnMuRVJSX09VVF9PRl9SQU5HRSh0eXBlIHx8ICdvZmZzZXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYD49ICR7dHlwZSA/IDEgOiAwfSBhbmQgPD0gJHtsZW5ndGh9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlKVxufVxuXG4vLyBIRUxQRVIgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09XG5cbmNvbnN0IElOVkFMSURfQkFTRTY0X1JFID0gL1teKy8wLTlBLVphLXotX10vZ1xuXG5mdW5jdGlvbiBiYXNlNjRjbGVhbiAoc3RyKSB7XG4gIC8vIE5vZGUgdGFrZXMgZXF1YWwgc2lnbnMgYXMgZW5kIG9mIHRoZSBCYXNlNjQgZW5jb2RpbmdcbiAgc3RyID0gc3RyLnNwbGl0KCc9JylbMF1cbiAgLy8gTm9kZSBzdHJpcHMgb3V0IGludmFsaWQgY2hhcmFjdGVycyBsaWtlIFxcbiBhbmQgXFx0IGZyb20gdGhlIHN0cmluZywgYmFzZTY0LWpzIGRvZXMgbm90XG4gIHN0ciA9IHN0ci50cmltKCkucmVwbGFjZShJTlZBTElEX0JBU0U2NF9SRSwgJycpXG4gIC8vIE5vZGUgY29udmVydHMgc3RyaW5ncyB3aXRoIGxlbmd0aCA8IDIgdG8gJydcbiAgaWYgKHN0ci5sZW5ndGggPCAyKSByZXR1cm4gJydcbiAgLy8gTm9kZSBhbGxvd3MgZm9yIG5vbi1wYWRkZWQgYmFzZTY0IHN0cmluZ3MgKG1pc3NpbmcgdHJhaWxpbmcgPT09KSwgYmFzZTY0LWpzIGRvZXMgbm90XG4gIHdoaWxlIChzdHIubGVuZ3RoICUgNCAhPT0gMCkge1xuICAgIHN0ciA9IHN0ciArICc9J1xuICB9XG4gIHJldHVybiBzdHJcbn1cblxuZnVuY3Rpb24gdXRmOFRvQnl0ZXMgKHN0cmluZywgdW5pdHMpIHtcbiAgdW5pdHMgPSB1bml0cyB8fCBJbmZpbml0eVxuICBsZXQgY29kZVBvaW50XG4gIGNvbnN0IGxlbmd0aCA9IHN0cmluZy5sZW5ndGhcbiAgbGV0IGxlYWRTdXJyb2dhdGUgPSBudWxsXG4gIGNvbnN0IGJ5dGVzID0gW11cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgY29kZVBvaW50ID0gc3RyaW5nLmNoYXJDb2RlQXQoaSlcblxuICAgIC8vIGlzIHN1cnJvZ2F0ZSBjb21wb25lbnRcbiAgICBpZiAoY29kZVBvaW50ID4gMHhEN0ZGICYmIGNvZGVQb2ludCA8IDB4RTAwMCkge1xuICAgICAgLy8gbGFzdCBjaGFyIHdhcyBhIGxlYWRcbiAgICAgIGlmICghbGVhZFN1cnJvZ2F0ZSkge1xuICAgICAgICAvLyBubyBsZWFkIHlldFxuICAgICAgICBpZiAoY29kZVBvaW50ID4gMHhEQkZGKSB7XG4gICAgICAgICAgLy8gdW5leHBlY3RlZCB0cmFpbFxuICAgICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSBpZiAoaSArIDEgPT09IGxlbmd0aCkge1xuICAgICAgICAgIC8vIHVucGFpcmVkIGxlYWRcbiAgICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdmFsaWQgbGVhZFxuICAgICAgICBsZWFkU3Vycm9nYXRlID0gY29kZVBvaW50XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gMiBsZWFkcyBpbiBhIHJvd1xuICAgICAgaWYgKGNvZGVQb2ludCA8IDB4REMwMCkge1xuICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IGNvZGVQb2ludFxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyB2YWxpZCBzdXJyb2dhdGUgcGFpclxuICAgICAgY29kZVBvaW50ID0gKGxlYWRTdXJyb2dhdGUgLSAweEQ4MDAgPDwgMTAgfCBjb2RlUG9pbnQgLSAweERDMDApICsgMHgxMDAwMFxuICAgIH0gZWxzZSBpZiAobGVhZFN1cnJvZ2F0ZSkge1xuICAgICAgLy8gdmFsaWQgYm1wIGNoYXIsIGJ1dCBsYXN0IGNoYXIgd2FzIGEgbGVhZFxuICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgfVxuXG4gICAgbGVhZFN1cnJvZ2F0ZSA9IG51bGxcblxuICAgIC8vIGVuY29kZSB1dGY4XG4gICAgaWYgKGNvZGVQb2ludCA8IDB4ODApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMSkgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChjb2RlUG9pbnQpXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDgwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2IHwgMHhDMCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTAwMDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMykgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4QyB8IDB4RTAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTEwMDAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDQpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDEyIHwgMHhGMCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4QyAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2ICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb2RlIHBvaW50JylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnl0ZXNcbn1cblxuZnVuY3Rpb24gYXNjaWlUb0J5dGVzIChzdHIpIHtcbiAgY29uc3QgYnl0ZUFycmF5ID0gW11cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICAvLyBOb2RlJ3MgY29kZSBzZWVtcyB0byBiZSBkb2luZyB0aGlzIGFuZCBub3QgJiAweDdGLi5cbiAgICBieXRlQXJyYXkucHVzaChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpXG4gIH1cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiB1dGYxNmxlVG9CeXRlcyAoc3RyLCB1bml0cykge1xuICBsZXQgYywgaGksIGxvXG4gIGNvbnN0IGJ5dGVBcnJheSA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrXG5cbiAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSlcbiAgICBoaSA9IGMgPj4gOFxuICAgIGxvID0gYyAlIDI1NlxuICAgIGJ5dGVBcnJheS5wdXNoKGxvKVxuICAgIGJ5dGVBcnJheS5wdXNoKGhpKVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiBiYXNlNjRUb0J5dGVzIChzdHIpIHtcbiAgcmV0dXJuIGJhc2U2NC50b0J5dGVBcnJheShiYXNlNjRjbGVhbihzdHIpKVxufVxuXG5mdW5jdGlvbiBibGl0QnVmZmVyIChzcmMsIGRzdCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgbGV0IGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgaWYgKChpICsgb2Zmc2V0ID49IGRzdC5sZW5ndGgpIHx8IChpID49IHNyYy5sZW5ndGgpKSBicmVha1xuICAgIGRzdFtpICsgb2Zmc2V0XSA9IHNyY1tpXVxuICB9XG4gIHJldHVybiBpXG59XG5cbi8vIEFycmF5QnVmZmVyIG9yIFVpbnQ4QXJyYXkgb2JqZWN0cyBmcm9tIG90aGVyIGNvbnRleHRzIChpLmUuIGlmcmFtZXMpIGRvIG5vdCBwYXNzXG4vLyB0aGUgYGluc3RhbmNlb2ZgIGNoZWNrIGJ1dCB0aGV5IHNob3VsZCBiZSB0cmVhdGVkIGFzIG9mIHRoYXQgdHlwZS5cbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvaXNzdWVzLzE2NlxuZnVuY3Rpb24gaXNJbnN0YW5jZSAob2JqLCB0eXBlKSB7XG4gIHJldHVybiBvYmogaW5zdGFuY2VvZiB0eXBlIHx8XG4gICAgKG9iaiAhPSBudWxsICYmIG9iai5jb25zdHJ1Y3RvciAhPSBudWxsICYmIG9iai5jb25zdHJ1Y3Rvci5uYW1lICE9IG51bGwgJiZcbiAgICAgIG9iai5jb25zdHJ1Y3Rvci5uYW1lID09PSB0eXBlLm5hbWUpXG59XG5mdW5jdGlvbiBudW1iZXJJc05hTiAob2JqKSB7XG4gIC8vIEZvciBJRTExIHN1cHBvcnRcbiAgcmV0dXJuIG9iaiAhPT0gb2JqIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2VsZi1jb21wYXJlXG59XG5cbi8vIENyZWF0ZSBsb29rdXAgdGFibGUgZm9yIGB0b1N0cmluZygnaGV4JylgXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL2lzc3Vlcy8yMTlcbmNvbnN0IGhleFNsaWNlTG9va3VwVGFibGUgPSAoZnVuY3Rpb24gKCkge1xuICBjb25zdCBhbHBoYWJldCA9ICcwMTIzNDU2Nzg5YWJjZGVmJ1xuICBjb25zdCB0YWJsZSA9IG5ldyBBcnJheSgyNTYpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgIGNvbnN0IGkxNiA9IGkgKiAxNlxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgdGFibGVbaTE2ICsgal0gPSBhbHBoYWJldFtpXSArIGFscGhhYmV0W2pdXG4gICAgfVxuICB9XG4gIHJldHVybiB0YWJsZVxufSkoKVxuXG4vLyBSZXR1cm4gbm90IGZ1bmN0aW9uIHdpdGggRXJyb3IgaWYgQmlnSW50IG5vdCBzdXBwb3J0ZWRcbmZ1bmN0aW9uIGRlZmluZUJpZ0ludE1ldGhvZCAoZm4pIHtcbiAgcmV0dXJuIHR5cGVvZiBCaWdJbnQgPT09ICd1bmRlZmluZWQnID8gQnVmZmVyQmlnSW50Tm90RGVmaW5lZCA6IGZuXG59XG5cbmZ1bmN0aW9uIEJ1ZmZlckJpZ0ludE5vdERlZmluZWQgKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0JpZ0ludCBub3Qgc3VwcG9ydGVkJylcbn1cbiIsInZhciBnbG9iYWwgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDogdGhpcztcbnZhciBfX3NlbGZfXyA9IChmdW5jdGlvbiAoKSB7XG5mdW5jdGlvbiBGKCkge1xudGhpcy5mZXRjaCA9IGZhbHNlO1xudGhpcy5ET01FeGNlcHRpb24gPSBnbG9iYWwuRE9NRXhjZXB0aW9uXG59XG5GLnByb3RvdHlwZSA9IGdsb2JhbDtcbnJldHVybiBuZXcgRigpO1xufSkoKTtcbihmdW5jdGlvbihzZWxmKSB7XG5cbnZhciBpcnJlbGV2YW50ID0gKGZ1bmN0aW9uIChleHBvcnRzKSB7XG5cbiAgdmFyIHN1cHBvcnQgPSB7XG4gICAgc2VhcmNoUGFyYW1zOiAnVVJMU2VhcmNoUGFyYW1zJyBpbiBzZWxmLFxuICAgIGl0ZXJhYmxlOiAnU3ltYm9sJyBpbiBzZWxmICYmICdpdGVyYXRvcicgaW4gU3ltYm9sLFxuICAgIGJsb2I6XG4gICAgICAnRmlsZVJlYWRlcicgaW4gc2VsZiAmJlxuICAgICAgJ0Jsb2InIGluIHNlbGYgJiZcbiAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBuZXcgQmxvYigpO1xuICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSkoKSxcbiAgICBmb3JtRGF0YTogJ0Zvcm1EYXRhJyBpbiBzZWxmLFxuICAgIGFycmF5QnVmZmVyOiAnQXJyYXlCdWZmZXInIGluIHNlbGZcbiAgfTtcblxuICBmdW5jdGlvbiBpc0RhdGFWaWV3KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgRGF0YVZpZXcucHJvdG90eXBlLmlzUHJvdG90eXBlT2Yob2JqKVxuICB9XG5cbiAgaWYgKHN1cHBvcnQuYXJyYXlCdWZmZXIpIHtcbiAgICB2YXIgdmlld0NsYXNzZXMgPSBbXG4gICAgICAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICAgICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICAgICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgICAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgICAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgICAgJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgICAgJ1tvYmplY3QgVWludDMyQXJyYXldJyxcbiAgICAgICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgICAgJ1tvYmplY3QgRmxvYXQ2NEFycmF5XSdcbiAgICBdO1xuXG4gICAgdmFyIGlzQXJyYXlCdWZmZXJWaWV3ID1cbiAgICAgIEFycmF5QnVmZmVyLmlzVmlldyB8fFxuICAgICAgZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIHJldHVybiBvYmogJiYgdmlld0NsYXNzZXMuaW5kZXhPZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSkgPiAtMVxuICAgICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vcm1hbGl6ZU5hbWUobmFtZSkge1xuICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWUgPSBTdHJpbmcobmFtZSk7XG4gICAgfVxuICAgIGlmICgvW15hLXowLTlcXC0jJCUmJyorLl5fYHx+XS9pLnRlc3QobmFtZSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgY2hhcmFjdGVyIGluIGhlYWRlciBmaWVsZCBuYW1lJylcbiAgICB9XG4gICAgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKVxuICB9XG5cbiAgZnVuY3Rpb24gbm9ybWFsaXplVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIC8vIEJ1aWxkIGEgZGVzdHJ1Y3RpdmUgaXRlcmF0b3IgZm9yIHRoZSB2YWx1ZSBsaXN0XG4gIGZ1bmN0aW9uIGl0ZXJhdG9yRm9yKGl0ZW1zKSB7XG4gICAgdmFyIGl0ZXJhdG9yID0ge1xuICAgICAgbmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGl0ZW1zLnNoaWZ0KCk7XG4gICAgICAgIHJldHVybiB7ZG9uZTogdmFsdWUgPT09IHVuZGVmaW5lZCwgdmFsdWU6IHZhbHVlfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoc3VwcG9ydC5pdGVyYWJsZSkge1xuICAgICAgaXRlcmF0b3JbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZXJhdG9yXG4gIH1cblxuICBmdW5jdGlvbiBIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICB0aGlzLm1hcCA9IHt9O1xuXG4gICAgaWYgKGhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzKSB7XG4gICAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgICAgdGhpcy5hcHBlbmQobmFtZSwgdmFsdWUpO1xuICAgICAgfSwgdGhpcyk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGhlYWRlcnMpKSB7XG4gICAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24oaGVhZGVyKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKGhlYWRlclswXSwgaGVhZGVyWzFdKTtcbiAgICAgIH0sIHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaGVhZGVycykge1xuICAgICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoaGVhZGVycykuZm9yRWFjaChmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKG5hbWUsIGhlYWRlcnNbbmFtZV0pO1xuICAgICAgfSwgdGhpcyk7XG4gICAgfVxuICB9XG5cbiAgSGVhZGVycy5wcm90b3R5cGUuYXBwZW5kID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gbm9ybWFsaXplTmFtZShuYW1lKTtcbiAgICB2YWx1ZSA9IG5vcm1hbGl6ZVZhbHVlKHZhbHVlKTtcbiAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLm1hcFtuYW1lXTtcbiAgICB0aGlzLm1hcFtuYW1lXSA9IG9sZFZhbHVlID8gb2xkVmFsdWUgKyAnLCAnICsgdmFsdWUgOiB2YWx1ZTtcbiAgfTtcblxuICBIZWFkZXJzLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMubWFwW25vcm1hbGl6ZU5hbWUobmFtZSldO1xuICB9O1xuXG4gIEhlYWRlcnMucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBuYW1lID0gbm9ybWFsaXplTmFtZShuYW1lKTtcbiAgICByZXR1cm4gdGhpcy5oYXMobmFtZSkgPyB0aGlzLm1hcFtuYW1lXSA6IG51bGxcbiAgfTtcblxuICBIZWFkZXJzLnByb3RvdHlwZS5oYXMgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwLmhhc093blByb3BlcnR5KG5vcm1hbGl6ZU5hbWUobmFtZSkpXG4gIH07XG5cbiAgSGVhZGVycy5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLm1hcFtub3JtYWxpemVOYW1lKG5hbWUpXSA9IG5vcm1hbGl6ZVZhbHVlKHZhbHVlKTtcbiAgfTtcblxuICBIZWFkZXJzLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24oY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMubWFwKSB7XG4gICAgICBpZiAodGhpcy5tYXAuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzQXJnLCB0aGlzLm1hcFtuYW1lXSwgbmFtZSwgdGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIEhlYWRlcnMucHJvdG90eXBlLmtleXMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaXRlbXMgPSBbXTtcbiAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgIGl0ZW1zLnB1c2gobmFtZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxuICB9O1xuXG4gIEhlYWRlcnMucHJvdG90eXBlLnZhbHVlcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpdGVtcyA9IFtdO1xuICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaXRlbXMucHVzaCh2YWx1ZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxuICB9O1xuXG4gIEhlYWRlcnMucHJvdG90eXBlLmVudHJpZXMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaXRlbXMgPSBbXTtcbiAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgIGl0ZW1zLnB1c2goW25hbWUsIHZhbHVlXSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxuICB9O1xuXG4gIGlmIChzdXBwb3J0Lml0ZXJhYmxlKSB7XG4gICAgSGVhZGVycy5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IEhlYWRlcnMucHJvdG90eXBlLmVudHJpZXM7XG4gIH1cblxuICBmdW5jdGlvbiBjb25zdW1lZChib2R5KSB7XG4gICAgaWYgKGJvZHkuYm9keVVzZWQpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgVHlwZUVycm9yKCdBbHJlYWR5IHJlYWQnKSlcbiAgICB9XG4gICAgYm9keS5ib2R5VXNlZCA9IHRydWU7XG4gIH1cblxuICBmdW5jdGlvbiBmaWxlUmVhZGVyUmVhZHkocmVhZGVyKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXNvbHZlKHJlYWRlci5yZXN1bHQpO1xuICAgICAgfTtcbiAgICAgIHJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlamVjdChyZWFkZXIuZXJyb3IpO1xuICAgICAgfTtcbiAgICB9KVxuICB9XG5cbiAgZnVuY3Rpb24gcmVhZEJsb2JBc0FycmF5QnVmZmVyKGJsb2IpIHtcbiAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICB2YXIgcHJvbWlzZSA9IGZpbGVSZWFkZXJSZWFkeShyZWFkZXIpO1xuICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihibG9iKTtcbiAgICByZXR1cm4gcHJvbWlzZVxuICB9XG5cbiAgZnVuY3Rpb24gcmVhZEJsb2JBc1RleHQoYmxvYikge1xuICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIHZhciBwcm9taXNlID0gZmlsZVJlYWRlclJlYWR5KHJlYWRlcik7XG4gICAgcmVhZGVyLnJlYWRBc1RleHQoYmxvYik7XG4gICAgcmV0dXJuIHByb21pc2VcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlYWRBcnJheUJ1ZmZlckFzVGV4dChidWYpIHtcbiAgICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1Zik7XG4gICAgdmFyIGNoYXJzID0gbmV3IEFycmF5KHZpZXcubGVuZ3RoKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmlldy5sZW5ndGg7IGkrKykge1xuICAgICAgY2hhcnNbaV0gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHZpZXdbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gY2hhcnMuam9pbignJylcbiAgfVxuXG4gIGZ1bmN0aW9uIGJ1ZmZlckNsb25lKGJ1Zikge1xuICAgIGlmIChidWYuc2xpY2UpIHtcbiAgICAgIHJldHVybiBidWYuc2xpY2UoMClcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShidWYuYnl0ZUxlbmd0aCk7XG4gICAgICB2aWV3LnNldChuZXcgVWludDhBcnJheShidWYpKTtcbiAgICAgIHJldHVybiB2aWV3LmJ1ZmZlclxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIEJvZHkoKSB7XG4gICAgdGhpcy5ib2R5VXNlZCA9IGZhbHNlO1xuXG4gICAgdGhpcy5faW5pdEJvZHkgPSBmdW5jdGlvbihib2R5KSB7XG4gICAgICB0aGlzLl9ib2R5SW5pdCA9IGJvZHk7XG4gICAgICBpZiAoIWJvZHkpIHtcbiAgICAgICAgdGhpcy5fYm9keVRleHQgPSAnJztcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuX2JvZHlUZXh0ID0gYm9keTtcbiAgICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5ibG9iICYmIEJsb2IucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcbiAgICAgICAgdGhpcy5fYm9keUJsb2IgPSBib2R5O1xuICAgICAgfSBlbHNlIGlmIChzdXBwb3J0LmZvcm1EYXRhICYmIEZvcm1EYXRhLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpKSB7XG4gICAgICAgIHRoaXMuX2JvZHlGb3JtRGF0YSA9IGJvZHk7XG4gICAgICB9IGVsc2UgaWYgKHN1cHBvcnQuc2VhcmNoUGFyYW1zICYmIFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSkge1xuICAgICAgICB0aGlzLl9ib2R5VGV4dCA9IGJvZHkudG9TdHJpbmcoKTtcbiAgICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5hcnJheUJ1ZmZlciAmJiBzdXBwb3J0LmJsb2IgJiYgaXNEYXRhVmlldyhib2R5KSkge1xuICAgICAgICB0aGlzLl9ib2R5QXJyYXlCdWZmZXIgPSBidWZmZXJDbG9uZShib2R5LmJ1ZmZlcik7XG4gICAgICAgIC8vIElFIDEwLTExIGNhbid0IGhhbmRsZSBhIERhdGFWaWV3IGJvZHkuXG4gICAgICAgIHRoaXMuX2JvZHlJbml0ID0gbmV3IEJsb2IoW3RoaXMuX2JvZHlBcnJheUJ1ZmZlcl0pO1xuICAgICAgfSBlbHNlIGlmIChzdXBwb3J0LmFycmF5QnVmZmVyICYmIChBcnJheUJ1ZmZlci5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSB8fCBpc0FycmF5QnVmZmVyVmlldyhib2R5KSkpIHtcbiAgICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9ib2R5VGV4dCA9IGJvZHkgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYm9keSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJykpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHRoaXMuaGVhZGVycy5zZXQoJ2NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLl9ib2R5QmxvYiAmJiB0aGlzLl9ib2R5QmxvYi50eXBlKSB7XG4gICAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgdGhpcy5fYm9keUJsb2IudHlwZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5zZWFyY2hQYXJhbXMgJiYgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpKSB7XG4gICAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKHN1cHBvcnQuYmxvYikge1xuICAgICAgdGhpcy5ibG9iID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciByZWplY3RlZCA9IGNvbnN1bWVkKHRoaXMpO1xuICAgICAgICBpZiAocmVqZWN0ZWQpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0ZWRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLl9ib2R5QmxvYikge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keUJsb2IpXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUFycmF5QnVmZmVyKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgQmxvYihbdGhpcy5fYm9keUFycmF5QnVmZmVyXSkpXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUZvcm1EYXRhKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIGJsb2InKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEJsb2IoW3RoaXMuX2JvZHlUZXh0XSkpXG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHRoaXMuYXJyYXlCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcikge1xuICAgICAgICAgIHJldHVybiBjb25zdW1lZCh0aGlzKSB8fCBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keUFycmF5QnVmZmVyKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLmJsb2IoKS50aGVuKHJlYWRCbG9iQXNBcnJheUJ1ZmZlcilcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICB0aGlzLnRleHQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZWplY3RlZCA9IGNvbnN1bWVkKHRoaXMpO1xuICAgICAgaWYgKHJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiByZWplY3RlZFxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fYm9keUJsb2IpIHtcbiAgICAgICAgcmV0dXJuIHJlYWRCbG9iQXNUZXh0KHRoaXMuX2JvZHlCbG9iKVxuICAgICAgfSBlbHNlIGlmICh0aGlzLl9ib2R5QXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZWFkQXJyYXlCdWZmZXJBc1RleHQodGhpcy5fYm9keUFycmF5QnVmZmVyKSlcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUZvcm1EYXRhKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY291bGQgbm90IHJlYWQgRm9ybURhdGEgYm9keSBhcyB0ZXh0JylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keVRleHQpXG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmIChzdXBwb3J0LmZvcm1EYXRhKSB7XG4gICAgICB0aGlzLmZvcm1EYXRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHQoKS50aGVuKGRlY29kZSlcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdGhpcy5qc29uID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy50ZXh0KCkudGhlbihKU09OLnBhcnNlKVxuICAgIH07XG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgLy8gSFRUUCBtZXRob2RzIHdob3NlIGNhcGl0YWxpemF0aW9uIHNob3VsZCBiZSBub3JtYWxpemVkXG4gIHZhciBtZXRob2RzID0gWydERUxFVEUnLCAnR0VUJywgJ0hFQUQnLCAnT1BUSU9OUycsICdQT1NUJywgJ1BVVCddO1xuXG4gIGZ1bmN0aW9uIG5vcm1hbGl6ZU1ldGhvZChtZXRob2QpIHtcbiAgICB2YXIgdXBjYXNlZCA9IG1ldGhvZC50b1VwcGVyQ2FzZSgpO1xuICAgIHJldHVybiBtZXRob2RzLmluZGV4T2YodXBjYXNlZCkgPiAtMSA/IHVwY2FzZWQgOiBtZXRob2RcbiAgfVxuXG4gIGZ1bmN0aW9uIFJlcXVlc3QoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgYm9keSA9IG9wdGlvbnMuYm9keTtcblxuICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlcXVlc3QpIHtcbiAgICAgIGlmIChpbnB1dC5ib2R5VXNlZCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBbHJlYWR5IHJlYWQnKVxuICAgICAgfVxuICAgICAgdGhpcy51cmwgPSBpbnB1dC51cmw7XG4gICAgICB0aGlzLmNyZWRlbnRpYWxzID0gaW5wdXQuY3JlZGVudGlhbHM7XG4gICAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykge1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVycyhpbnB1dC5oZWFkZXJzKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubWV0aG9kID0gaW5wdXQubWV0aG9kO1xuICAgICAgdGhpcy5tb2RlID0gaW5wdXQubW9kZTtcbiAgICAgIHRoaXMuc2lnbmFsID0gaW5wdXQuc2lnbmFsO1xuICAgICAgaWYgKCFib2R5ICYmIGlucHV0Ll9ib2R5SW5pdCAhPSBudWxsKSB7XG4gICAgICAgIGJvZHkgPSBpbnB1dC5fYm9keUluaXQ7XG4gICAgICAgIGlucHV0LmJvZHlVc2VkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy51cmwgPSBTdHJpbmcoaW5wdXQpO1xuICAgIH1cblxuICAgIHRoaXMuY3JlZGVudGlhbHMgPSBvcHRpb25zLmNyZWRlbnRpYWxzIHx8IHRoaXMuY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJztcbiAgICBpZiAob3B0aW9ucy5oZWFkZXJzIHx8ICF0aGlzLmhlYWRlcnMpIHtcbiAgICAgIHRoaXMuaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyk7XG4gICAgfVxuICAgIHRoaXMubWV0aG9kID0gbm9ybWFsaXplTWV0aG9kKG9wdGlvbnMubWV0aG9kIHx8IHRoaXMubWV0aG9kIHx8ICdHRVQnKTtcbiAgICB0aGlzLm1vZGUgPSBvcHRpb25zLm1vZGUgfHwgdGhpcy5tb2RlIHx8IG51bGw7XG4gICAgdGhpcy5zaWduYWwgPSBvcHRpb25zLnNpZ25hbCB8fCB0aGlzLnNpZ25hbDtcbiAgICB0aGlzLnJlZmVycmVyID0gbnVsbDtcblxuICAgIGlmICgodGhpcy5tZXRob2QgPT09ICdHRVQnIHx8IHRoaXMubWV0aG9kID09PSAnSEVBRCcpICYmIGJvZHkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JvZHkgbm90IGFsbG93ZWQgZm9yIEdFVCBvciBIRUFEIHJlcXVlc3RzJylcbiAgICB9XG4gICAgdGhpcy5faW5pdEJvZHkoYm9keSk7XG4gIH1cblxuICBSZXF1ZXN0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBuZXcgUmVxdWVzdCh0aGlzLCB7Ym9keTogdGhpcy5fYm9keUluaXR9KVxuICB9O1xuXG4gIGZ1bmN0aW9uIGRlY29kZShib2R5KSB7XG4gICAgdmFyIGZvcm0gPSBuZXcgRm9ybURhdGEoKTtcbiAgICBib2R5XG4gICAgICAudHJpbSgpXG4gICAgICAuc3BsaXQoJyYnKVxuICAgICAgLmZvckVhY2goZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzKSB7XG4gICAgICAgICAgdmFyIHNwbGl0ID0gYnl0ZXMuc3BsaXQoJz0nKTtcbiAgICAgICAgICB2YXIgbmFtZSA9IHNwbGl0LnNoaWZ0KCkucmVwbGFjZSgvXFwrL2csICcgJyk7XG4gICAgICAgICAgdmFyIHZhbHVlID0gc3BsaXQuam9pbignPScpLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuICAgICAgICAgIGZvcm0uYXBwZW5kKGRlY29kZVVSSUNvbXBvbmVudChuYW1lKSwgZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIHJldHVybiBmb3JtXG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUhlYWRlcnMocmF3SGVhZGVycykge1xuICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICAvLyBSZXBsYWNlIGluc3RhbmNlcyBvZiBcXHJcXG4gYW5kIFxcbiBmb2xsb3dlZCBieSBhdCBsZWFzdCBvbmUgc3BhY2Ugb3IgaG9yaXpvbnRhbCB0YWIgd2l0aCBhIHNwYWNlXG4gICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcyMzAjc2VjdGlvbi0zLjJcbiAgICB2YXIgcHJlUHJvY2Vzc2VkSGVhZGVycyA9IHJhd0hlYWRlcnMucmVwbGFjZSgvXFxyP1xcbltcXHQgXSsvZywgJyAnKTtcbiAgICBwcmVQcm9jZXNzZWRIZWFkZXJzLnNwbGl0KC9cXHI/XFxuLykuZm9yRWFjaChmdW5jdGlvbihsaW5lKSB7XG4gICAgICB2YXIgcGFydHMgPSBsaW5lLnNwbGl0KCc6Jyk7XG4gICAgICB2YXIga2V5ID0gcGFydHMuc2hpZnQoKS50cmltKCk7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHBhcnRzLmpvaW4oJzonKS50cmltKCk7XG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJzXG4gIH1cblxuICBCb2R5LmNhbGwoUmVxdWVzdC5wcm90b3R5cGUpO1xuXG4gIGZ1bmN0aW9uIFJlc3BvbnNlKGJvZHlJbml0LCBvcHRpb25zKSB7XG4gICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgdGhpcy50eXBlID0gJ2RlZmF1bHQnO1xuICAgIHRoaXMuc3RhdHVzID0gb3B0aW9ucy5zdGF0dXMgPT09IHVuZGVmaW5lZCA/IDIwMCA6IG9wdGlvbnMuc3RhdHVzO1xuICAgIHRoaXMub2sgPSB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDA7XG4gICAgdGhpcy5zdGF0dXNUZXh0ID0gJ3N0YXR1c1RleHQnIGluIG9wdGlvbnMgPyBvcHRpb25zLnN0YXR1c1RleHQgOiAnT0snO1xuICAgIHRoaXMuaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyk7XG4gICAgdGhpcy51cmwgPSBvcHRpb25zLnVybCB8fCAnJztcbiAgICB0aGlzLl9pbml0Qm9keShib2R5SW5pdCk7XG4gIH1cblxuICBCb2R5LmNhbGwoUmVzcG9uc2UucHJvdG90eXBlKTtcblxuICBSZXNwb25zZS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKHRoaXMuX2JvZHlJbml0LCB7XG4gICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxuICAgICAgc3RhdHVzVGV4dDogdGhpcy5zdGF0dXNUZXh0LFxuICAgICAgaGVhZGVyczogbmV3IEhlYWRlcnModGhpcy5oZWFkZXJzKSxcbiAgICAgIHVybDogdGhpcy51cmxcbiAgICB9KVxuICB9O1xuXG4gIFJlc3BvbnNlLmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKG51bGwsIHtzdGF0dXM6IDAsIHN0YXR1c1RleHQ6ICcnfSk7XG4gICAgcmVzcG9uc2UudHlwZSA9ICdlcnJvcic7XG4gICAgcmV0dXJuIHJlc3BvbnNlXG4gIH07XG5cbiAgdmFyIHJlZGlyZWN0U3RhdHVzZXMgPSBbMzAxLCAzMDIsIDMwMywgMzA3LCAzMDhdO1xuXG4gIFJlc3BvbnNlLnJlZGlyZWN0ID0gZnVuY3Rpb24odXJsLCBzdGF0dXMpIHtcbiAgICBpZiAocmVkaXJlY3RTdGF0dXNlcy5pbmRleE9mKHN0YXR1cykgPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShudWxsLCB7c3RhdHVzOiBzdGF0dXMsIGhlYWRlcnM6IHtsb2NhdGlvbjogdXJsfX0pXG4gIH07XG5cbiAgZXhwb3J0cy5ET01FeGNlcHRpb24gPSBzZWxmLkRPTUV4Y2VwdGlvbjtcbiAgdHJ5IHtcbiAgICBuZXcgZXhwb3J0cy5ET01FeGNlcHRpb24oKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXhwb3J0cy5ET01FeGNlcHRpb24gPSBmdW5jdGlvbihtZXNzYWdlLCBuYW1lKSB7XG4gICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgIHZhciBlcnJvciA9IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgdGhpcy5zdGFjayA9IGVycm9yLnN0YWNrO1xuICAgIH07XG4gICAgZXhwb3J0cy5ET01FeGNlcHRpb24ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpO1xuICAgIGV4cG9ydHMuRE9NRXhjZXB0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGV4cG9ydHMuRE9NRXhjZXB0aW9uO1xuICB9XG5cbiAgZnVuY3Rpb24gZmV0Y2goaW5wdXQsIGluaXQpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KGlucHV0LCBpbml0KTtcblxuICAgICAgaWYgKHJlcXVlc3Quc2lnbmFsICYmIHJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgZXhwb3J0cy5ET01FeGNlcHRpb24oJ0Fib3J0ZWQnLCAnQWJvcnRFcnJvcicpKVxuICAgICAgfVxuXG4gICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgIGZ1bmN0aW9uIGFib3J0WGhyKCkge1xuICAgICAgICB4aHIuYWJvcnQoKTtcbiAgICAgIH1cblxuICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgICBzdGF0dXM6IHhoci5zdGF0dXMsXG4gICAgICAgICAgc3RhdHVzVGV4dDogeGhyLnN0YXR1c1RleHQsXG4gICAgICAgICAgaGVhZGVyczogcGFyc2VIZWFkZXJzKHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSB8fCAnJylcbiAgICAgICAgfTtcbiAgICAgICAgb3B0aW9ucy51cmwgPSAncmVzcG9uc2VVUkwnIGluIHhociA/IHhoci5yZXNwb25zZVVSTCA6IG9wdGlvbnMuaGVhZGVycy5nZXQoJ1gtUmVxdWVzdC1VUkwnKTtcbiAgICAgICAgdmFyIGJvZHkgPSAncmVzcG9uc2UnIGluIHhociA/IHhoci5yZXNwb25zZSA6IHhoci5yZXNwb25zZVRleHQ7XG4gICAgICAgIHJlc29sdmUobmV3IFJlc3BvbnNlKGJvZHksIG9wdGlvbnMpKTtcbiAgICAgIH07XG5cbiAgICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlamVjdChuZXcgVHlwZUVycm9yKCdOZXR3b3JrIHJlcXVlc3QgZmFpbGVkJykpO1xuICAgICAgfTtcblxuICAgICAgeGhyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QobmV3IFR5cGVFcnJvcignTmV0d29yayByZXF1ZXN0IGZhaWxlZCcpKTtcbiAgICAgIH07XG5cbiAgICAgIHhoci5vbmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlamVjdChuZXcgZXhwb3J0cy5ET01FeGNlcHRpb24oJ0Fib3J0ZWQnLCAnQWJvcnRFcnJvcicpKTtcbiAgICAgIH07XG5cbiAgICAgIHhoci5vcGVuKHJlcXVlc3QubWV0aG9kLCByZXF1ZXN0LnVybCwgdHJ1ZSk7XG5cbiAgICAgIGlmIChyZXF1ZXN0LmNyZWRlbnRpYWxzID09PSAnaW5jbHVkZScpIHtcbiAgICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHJlcXVlc3QuY3JlZGVudGlhbHMgPT09ICdvbWl0Jykge1xuICAgICAgICB4aHIud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICgncmVzcG9uc2VUeXBlJyBpbiB4aHIgJiYgc3VwcG9ydC5ibG9iKSB7XG4gICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYmxvYic7XG4gICAgICB9XG5cbiAgICAgIHJlcXVlc3QuaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBuYW1lKSB7XG4gICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIHZhbHVlKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVxdWVzdC5zaWduYWwpIHtcbiAgICAgICAgcmVxdWVzdC5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydFhocik7XG5cbiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIERPTkUgKHN1Y2Nlc3Mgb3IgZmFpbHVyZSlcbiAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQpIHtcbiAgICAgICAgICAgIHJlcXVlc3Quc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRYaHIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgeGhyLnNlbmQodHlwZW9mIHJlcXVlc3QuX2JvZHlJbml0ID09PSAndW5kZWZpbmVkJyA/IG51bGwgOiByZXF1ZXN0Ll9ib2R5SW5pdCk7XG4gICAgfSlcbiAgfVxuXG4gIGZldGNoLnBvbHlmaWxsID0gdHJ1ZTtcblxuICBpZiAoIXNlbGYuZmV0Y2gpIHtcbiAgICBzZWxmLmZldGNoID0gZmV0Y2g7XG4gICAgc2VsZi5IZWFkZXJzID0gSGVhZGVycztcbiAgICBzZWxmLlJlcXVlc3QgPSBSZXF1ZXN0O1xuICAgIHNlbGYuUmVzcG9uc2UgPSBSZXNwb25zZTtcbiAgfVxuXG4gIGV4cG9ydHMuSGVhZGVycyA9IEhlYWRlcnM7XG4gIGV4cG9ydHMuUmVxdWVzdCA9IFJlcXVlc3Q7XG4gIGV4cG9ydHMuUmVzcG9uc2UgPSBSZXNwb25zZTtcbiAgZXhwb3J0cy5mZXRjaCA9IGZldGNoO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbiAgcmV0dXJuIGV4cG9ydHM7XG5cbn0pKHt9KTtcbn0pKF9fc2VsZl9fKTtcbl9fc2VsZl9fLmZldGNoLnBvbnlmaWxsID0gdHJ1ZTtcbi8vIFJlbW92ZSBcInBvbHlmaWxsXCIgcHJvcGVydHkgYWRkZWQgYnkgd2hhdHdnLWZldGNoXG5kZWxldGUgX19zZWxmX18uZmV0Y2gucG9seWZpbGw7XG4vLyBDaG9vc2UgYmV0d2VlbiBuYXRpdmUgaW1wbGVtZW50YXRpb24gKGdsb2JhbCkgb3IgY3VzdG9tIGltcGxlbWVudGF0aW9uIChfX3NlbGZfXylcbi8vIHZhciBjdHggPSBnbG9iYWwuZmV0Y2ggPyBnbG9iYWwgOiBfX3NlbGZfXztcbnZhciBjdHggPSBfX3NlbGZfXzsgLy8gdGhpcyBsaW5lIGRpc2FibGUgc2VydmljZSB3b3JrZXIgc3VwcG9ydCB0ZW1wb3JhcmlseVxuZXhwb3J0cyA9IGN0eC5mZXRjaCAvLyBUbyBlbmFibGU6IGltcG9ydCBmZXRjaCBmcm9tICdjcm9zcy1mZXRjaCdcbmV4cG9ydHMuZGVmYXVsdCA9IGN0eC5mZXRjaCAvLyBGb3IgVHlwZVNjcmlwdCBjb25zdW1lcnMgd2l0aG91dCBlc01vZHVsZUludGVyb3AuXG5leHBvcnRzLmZldGNoID0gY3R4LmZldGNoIC8vIFRvIGVuYWJsZTogaW1wb3J0IHtmZXRjaH0gZnJvbSAnY3Jvc3MtZmV0Y2gnXG5leHBvcnRzLkhlYWRlcnMgPSBjdHguSGVhZGVyc1xuZXhwb3J0cy5SZXF1ZXN0ID0gY3R4LlJlcXVlc3RcbmV4cG9ydHMuUmVzcG9uc2UgPSBjdHguUmVzcG9uc2Vcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1xuIiwiLyohIGllZWU3NTQuIEJTRC0zLUNsYXVzZSBMaWNlbnNlLiBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmcvb3BlbnNvdXJjZT4gKi9cbmV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAcGFyYW0gdHlwZU1hcCBbT2JqZWN0XSBNYXAgb2YgTUlNRSB0eXBlIC0+IEFycmF5W2V4dGVuc2lvbnNdXG4gKiBAcGFyYW0gLi4uXG4gKi9cbmZ1bmN0aW9uIE1pbWUoKSB7XG4gIHRoaXMuX3R5cGVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdGhpcy5fZXh0ZW5zaW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB0aGlzLmRlZmluZShhcmd1bWVudHNbaV0pO1xuICB9XG5cbiAgdGhpcy5kZWZpbmUgPSB0aGlzLmRlZmluZS5iaW5kKHRoaXMpO1xuICB0aGlzLmdldFR5cGUgPSB0aGlzLmdldFR5cGUuYmluZCh0aGlzKTtcbiAgdGhpcy5nZXRFeHRlbnNpb24gPSB0aGlzLmdldEV4dGVuc2lvbi5iaW5kKHRoaXMpO1xufVxuXG4vKipcbiAqIERlZmluZSBtaW1ldHlwZSAtPiBleHRlbnNpb24gbWFwcGluZ3MuICBFYWNoIGtleSBpcyBhIG1pbWUtdHlwZSB0aGF0IG1hcHNcbiAqIHRvIGFuIGFycmF5IG9mIGV4dGVuc2lvbnMgYXNzb2NpYXRlZCB3aXRoIHRoZSB0eXBlLiAgVGhlIGZpcnN0IGV4dGVuc2lvbiBpc1xuICogdXNlZCBhcyB0aGUgZGVmYXVsdCBleHRlbnNpb24gZm9yIHRoZSB0eXBlLlxuICpcbiAqIGUuZy4gbWltZS5kZWZpbmUoeydhdWRpby9vZ2cnLCBbJ29nYScsICdvZ2cnLCAnc3B4J119KTtcbiAqXG4gKiBJZiBhIHR5cGUgZGVjbGFyZXMgYW4gZXh0ZW5zaW9uIHRoYXQgaGFzIGFscmVhZHkgYmVlbiBkZWZpbmVkLCBhbiBlcnJvciB3aWxsXG4gKiBiZSB0aHJvd24uICBUbyBzdXBwcmVzcyB0aGlzIGVycm9yIGFuZCBmb3JjZSB0aGUgZXh0ZW5zaW9uIHRvIGJlIGFzc29jaWF0ZWRcbiAqIHdpdGggdGhlIG5ldyB0eXBlLCBwYXNzIGBmb3JjZWA9dHJ1ZS4gIEFsdGVybmF0aXZlbHksIHlvdSBtYXkgcHJlZml4IHRoZVxuICogZXh0ZW5zaW9uIHdpdGggXCIqXCIgdG8gbWFwIHRoZSB0eXBlIHRvIGV4dGVuc2lvbiwgd2l0aG91dCBtYXBwaW5nIHRoZVxuICogZXh0ZW5zaW9uIHRvIHRoZSB0eXBlLlxuICpcbiAqIGUuZy4gbWltZS5kZWZpbmUoeydhdWRpby93YXYnLCBbJ3dhdiddfSwgeydhdWRpby94LXdhdicsIFsnKndhdiddfSk7XG4gKlxuICpcbiAqIEBwYXJhbSBtYXAgKE9iamVjdCkgdHlwZSBkZWZpbml0aW9uc1xuICogQHBhcmFtIGZvcmNlIChCb29sZWFuKSBpZiB0cnVlLCBmb3JjZSBvdmVycmlkaW5nIG9mIGV4aXN0aW5nIGRlZmluaXRpb25zXG4gKi9cbk1pbWUucHJvdG90eXBlLmRlZmluZSA9IGZ1bmN0aW9uKHR5cGVNYXAsIGZvcmNlKSB7XG4gIGZvciAobGV0IHR5cGUgaW4gdHlwZU1hcCkge1xuICAgIGxldCBleHRlbnNpb25zID0gdHlwZU1hcFt0eXBlXS5tYXAoZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIHQudG9Mb3dlckNhc2UoKTtcbiAgICB9KTtcbiAgICB0eXBlID0gdHlwZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBleHRlbnNpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBleHQgPSBleHRlbnNpb25zW2ldO1xuXG4gICAgICAvLyAnKicgcHJlZml4ID0gbm90IHRoZSBwcmVmZXJyZWQgdHlwZSBmb3IgdGhpcyBleHRlbnNpb24uICBTbyBmaXh1cCB0aGVcbiAgICAgIC8vIGV4dGVuc2lvbiwgYW5kIHNraXAgaXQuXG4gICAgICBpZiAoZXh0WzBdID09PSAnKicpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICghZm9yY2UgJiYgKGV4dCBpbiB0aGlzLl90eXBlcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdBdHRlbXB0IHRvIGNoYW5nZSBtYXBwaW5nIGZvciBcIicgKyBleHQgK1xuICAgICAgICAgICdcIiBleHRlbnNpb24gZnJvbSBcIicgKyB0aGlzLl90eXBlc1tleHRdICsgJ1wiIHRvIFwiJyArIHR5cGUgK1xuICAgICAgICAgICdcIi4gUGFzcyBgZm9yY2U9dHJ1ZWAgdG8gYWxsb3cgdGhpcywgb3RoZXJ3aXNlIHJlbW92ZSBcIicgKyBleHQgK1xuICAgICAgICAgICdcIiBmcm9tIHRoZSBsaXN0IG9mIGV4dGVuc2lvbnMgZm9yIFwiJyArIHR5cGUgKyAnXCIuJ1xuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl90eXBlc1tleHRdID0gdHlwZTtcbiAgICB9XG5cbiAgICAvLyBVc2UgZmlyc3QgZXh0ZW5zaW9uIGFzIGRlZmF1bHRcbiAgICBpZiAoZm9yY2UgfHwgIXRoaXMuX2V4dGVuc2lvbnNbdHlwZV0pIHtcbiAgICAgIGNvbnN0IGV4dCA9IGV4dGVuc2lvbnNbMF07XG4gICAgICB0aGlzLl9leHRlbnNpb25zW3R5cGVdID0gKGV4dFswXSAhPT0gJyonKSA/IGV4dCA6IGV4dC5zdWJzdHIoMSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIExvb2t1cCBhIG1pbWUgdHlwZSBiYXNlZCBvbiBleHRlbnNpb25cbiAqL1xuTWltZS5wcm90b3R5cGUuZ2V0VHlwZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgcGF0aCA9IFN0cmluZyhwYXRoKTtcbiAgbGV0IGxhc3QgPSBwYXRoLnJlcGxhY2UoL14uKlsvXFxcXF0vLCAnJykudG9Mb3dlckNhc2UoKTtcbiAgbGV0IGV4dCA9IGxhc3QucmVwbGFjZSgvXi4qXFwuLywgJycpLnRvTG93ZXJDYXNlKCk7XG5cbiAgbGV0IGhhc1BhdGggPSBsYXN0Lmxlbmd0aCA8IHBhdGgubGVuZ3RoO1xuICBsZXQgaGFzRG90ID0gZXh0Lmxlbmd0aCA8IGxhc3QubGVuZ3RoIC0gMTtcblxuICByZXR1cm4gKGhhc0RvdCB8fCAhaGFzUGF0aCkgJiYgdGhpcy5fdHlwZXNbZXh0XSB8fCBudWxsO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gZmlsZSBleHRlbnNpb24gYXNzb2NpYXRlZCB3aXRoIGEgbWltZSB0eXBlXG4gKi9cbk1pbWUucHJvdG90eXBlLmdldEV4dGVuc2lvbiA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdHlwZSA9IC9eXFxzKihbXjtcXHNdKikvLnRlc3QodHlwZSkgJiYgUmVnRXhwLiQxO1xuICByZXR1cm4gdHlwZSAmJiB0aGlzLl9leHRlbnNpb25zW3R5cGUudG9Mb3dlckNhc2UoKV0gfHwgbnVsbDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWltZTtcbiIsIid1c2Ugc3RyaWN0JztcblxubGV0IE1pbWUgPSByZXF1aXJlKCcuL01pbWUnKTtcbm1vZHVsZS5leHBvcnRzID0gbmV3IE1pbWUocmVxdWlyZSgnLi90eXBlcy9zdGFuZGFyZCcpLCByZXF1aXJlKCcuL3R5cGVzL290aGVyJykpO1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJhcHBsaWNhdGlvbi9wcnMuY3d3XCI6W1wiY3d3XCJdLFwiYXBwbGljYXRpb24vdm5kLjEwMDBtaW5kcy5kZWNpc2lvbi1tb2RlbCt4bWxcIjpbXCIxa21cIl0sXCJhcHBsaWNhdGlvbi92bmQuM2dwcC5waWMtYnctbGFyZ2VcIjpbXCJwbGJcIl0sXCJhcHBsaWNhdGlvbi92bmQuM2dwcC5waWMtYnctc21hbGxcIjpbXCJwc2JcIl0sXCJhcHBsaWNhdGlvbi92bmQuM2dwcC5waWMtYnctdmFyXCI6W1wicHZiXCJdLFwiYXBwbGljYXRpb24vdm5kLjNncHAyLnRjYXBcIjpbXCJ0Y2FwXCJdLFwiYXBwbGljYXRpb24vdm5kLjNtLnBvc3QtaXQtbm90ZXNcIjpbXCJwd25cIl0sXCJhcHBsaWNhdGlvbi92bmQuYWNjcGFjLnNpbXBseS5hc29cIjpbXCJhc29cIl0sXCJhcHBsaWNhdGlvbi92bmQuYWNjcGFjLnNpbXBseS5pbXBcIjpbXCJpbXBcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWN1Y29ib2xcIjpbXCJhY3VcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWN1Y29ycFwiOltcImF0Y1wiLFwiYWN1dGNcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWRvYmUuYWlyLWFwcGxpY2F0aW9uLWluc3RhbGxlci1wYWNrYWdlK3ppcFwiOltcImFpclwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5mb3Jtc2NlbnRyYWwuZmNkdFwiOltcImZjZHRcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWRvYmUuZnhwXCI6W1wiZnhwXCIsXCJmeHBsXCJdLFwiYXBwbGljYXRpb24vdm5kLmFkb2JlLnhkcCt4bWxcIjpbXCJ4ZHBcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWRvYmUueGZkZlwiOltcInhmZGZcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWhlYWQuc3BhY2VcIjpbXCJhaGVhZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5haXJ6aXAuZmlsZXNlY3VyZS5hemZcIjpbXCJhemZcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWlyemlwLmZpbGVzZWN1cmUuYXpzXCI6W1wiYXpzXCJdLFwiYXBwbGljYXRpb24vdm5kLmFtYXpvbi5lYm9va1wiOltcImF6d1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5hbWVyaWNhbmR5bmFtaWNzLmFjY1wiOltcImFjY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5hbWlnYS5hbWlcIjpbXCJhbWlcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW5kcm9pZC5wYWNrYWdlLWFyY2hpdmVcIjpbXCJhcGtcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW5zZXItd2ViLWNlcnRpZmljYXRlLWlzc3VlLWluaXRpYXRpb25cIjpbXCJjaWlcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW5zZXItd2ViLWZ1bmRzLXRyYW5zZmVyLWluaXRpYXRpb25cIjpbXCJmdGlcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW50aXguZ2FtZS1jb21wb25lbnRcIjpbXCJhdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQuYXBwbGUuaW5zdGFsbGVyK3htbFwiOltcIm1wa2dcIl0sXCJhcHBsaWNhdGlvbi92bmQuYXBwbGUua2V5bm90ZVwiOltcImtleVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsXCI6W1wibTN1OFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5udW1iZXJzXCI6W1wibnVtYmVyc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5wYWdlc1wiOltcInBhZ2VzXCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLnBrcGFzc1wiOltcInBrcGFzc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5hcmlzdGFuZXR3b3Jrcy5zd2lcIjpbXCJzd2lcIl0sXCJhcHBsaWNhdGlvbi92bmQuYXN0cmFlYS1zb2Z0d2FyZS5pb3RhXCI6W1wiaW90YVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hdWRpb2dyYXBoXCI6W1wiYWVwXCJdLFwiYXBwbGljYXRpb24vdm5kLmJhbHNhbWlxLmJtbWwreG1sXCI6W1wiYm1tbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ibHVlaWNlLm11bHRpcGFzc1wiOltcIm1wbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ibWlcIjpbXCJibWlcIl0sXCJhcHBsaWNhdGlvbi92bmQuYnVzaW5lc3NvYmplY3RzXCI6W1wicmVwXCJdLFwiYXBwbGljYXRpb24vdm5kLmNoZW1kcmF3K3htbFwiOltcImNkeG1sXCJdLFwiYXBwbGljYXRpb24vdm5kLmNoaXBudXRzLmthcmFva2UtbW1kXCI6W1wibW1kXCJdLFwiYXBwbGljYXRpb24vdm5kLmNpbmRlcmVsbGFcIjpbXCJjZHlcIl0sXCJhcHBsaWNhdGlvbi92bmQuY2l0YXRpb25zdHlsZXMuc3R5bGUreG1sXCI6W1wiY3NsXCJdLFwiYXBwbGljYXRpb24vdm5kLmNsYXltb3JlXCI6W1wiY2xhXCJdLFwiYXBwbGljYXRpb24vdm5kLmNsb2FudG8ucnA5XCI6W1wicnA5XCJdLFwiYXBwbGljYXRpb24vdm5kLmNsb25rLmM0Z3JvdXBcIjpbXCJjNGdcIixcImM0ZFwiLFwiYzRmXCIsXCJjNHBcIixcImM0dVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jbHVldHJ1c3QuY2FydG9tb2JpbGUtY29uZmlnXCI6W1wiYzExYW1jXCJdLFwiYXBwbGljYXRpb24vdm5kLmNsdWV0cnVzdC5jYXJ0b21vYmlsZS1jb25maWctcGtnXCI6W1wiYzExYW16XCJdLFwiYXBwbGljYXRpb24vdm5kLmNvbW1vbnNwYWNlXCI6W1wiY3NwXCJdLFwiYXBwbGljYXRpb24vdm5kLmNvbnRhY3QuY21zZ1wiOltcImNkYmNtc2dcIl0sXCJhcHBsaWNhdGlvbi92bmQuY29zbW9jYWxsZXJcIjpbXCJjbWNcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpY2suY2xpY2tlclwiOltcImNsa3hcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpY2suY2xpY2tlci5rZXlib2FyZFwiOltcImNsa2tcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpY2suY2xpY2tlci5wYWxldHRlXCI6W1wiY2xrcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jcmljay5jbGlja2VyLnRlbXBsYXRlXCI6W1wiY2xrdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jcmljay5jbGlja2VyLndvcmRiYW5rXCI6W1wiY2xrd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5jcml0aWNhbHRvb2xzLndicyt4bWxcIjpbXCJ3YnNcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3RjLXBvc21sXCI6W1wicG1sXCJdLFwiYXBwbGljYXRpb24vdm5kLmN1cHMtcHBkXCI6W1wicHBkXCJdLFwiYXBwbGljYXRpb24vdm5kLmN1cmwuY2FyXCI6W1wiY2FyXCJdLFwiYXBwbGljYXRpb24vdm5kLmN1cmwucGN1cmxcIjpbXCJwY3VybFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kYXJ0XCI6W1wiZGFydFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kYXRhLXZpc2lvbi5yZHpcIjpbXCJyZHpcIl0sXCJhcHBsaWNhdGlvbi92bmQuZGJmXCI6W1wiZGJmXCJdLFwiYXBwbGljYXRpb24vdm5kLmRlY2UuZGF0YVwiOltcInV2ZlwiLFwidXZ2ZlwiLFwidXZkXCIsXCJ1dnZkXCJdLFwiYXBwbGljYXRpb24vdm5kLmRlY2UudHRtbCt4bWxcIjpbXCJ1dnRcIixcInV2dnRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZGVjZS51bnNwZWNpZmllZFwiOltcInV2eFwiLFwidXZ2eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kZWNlLnppcFwiOltcInV2elwiLFwidXZ2elwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kZW5vdm8uZmNzZWxheW91dC1saW5rXCI6W1wiZmVfbGF1bmNoXCJdLFwiYXBwbGljYXRpb24vdm5kLmRuYVwiOltcImRuYVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kb2xieS5tbHBcIjpbXCJtbHBcIl0sXCJhcHBsaWNhdGlvbi92bmQuZHBncmFwaFwiOltcImRwZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5kcmVhbWZhY3RvcnlcIjpbXCJkZmFjXCJdLFwiYXBwbGljYXRpb24vdm5kLmRzLWtleXBvaW50XCI6W1wia3B4eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kdmIuYWl0XCI6W1wiYWl0XCJdLFwiYXBwbGljYXRpb24vdm5kLmR2Yi5zZXJ2aWNlXCI6W1wic3ZjXCJdLFwiYXBwbGljYXRpb24vdm5kLmR5bmFnZW9cIjpbXCJnZW9cIl0sXCJhcHBsaWNhdGlvbi92bmQuZWNvd2luLmNoYXJ0XCI6W1wibWFnXCJdLFwiYXBwbGljYXRpb24vdm5kLmVubGl2ZW5cIjpbXCJubWxcIl0sXCJhcHBsaWNhdGlvbi92bmQuZXBzb24uZXNmXCI6W1wiZXNmXCJdLFwiYXBwbGljYXRpb24vdm5kLmVwc29uLm1zZlwiOltcIm1zZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5lcHNvbi5xdWlja2FuaW1lXCI6W1wicWFtXCJdLFwiYXBwbGljYXRpb24vdm5kLmVwc29uLnNhbHRcIjpbXCJzbHRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZXBzb24uc3NmXCI6W1wic3NmXCJdLFwiYXBwbGljYXRpb24vdm5kLmVzemlnbm8zK3htbFwiOltcImVzM1wiLFwiZXQzXCJdLFwiYXBwbGljYXRpb24vdm5kLmV6cGl4LWFsYnVtXCI6W1wiZXoyXCJdLFwiYXBwbGljYXRpb24vdm5kLmV6cGl4LXBhY2thZ2VcIjpbXCJlejNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZmRmXCI6W1wiZmRmXCJdLFwiYXBwbGljYXRpb24vdm5kLmZkc24ubXNlZWRcIjpbXCJtc2VlZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mZHNuLnNlZWRcIjpbXCJzZWVkXCIsXCJkYXRhbGVzc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mbG9ncmFwaGl0XCI6W1wiZ3BoXCJdLFwiYXBwbGljYXRpb24vdm5kLmZsdXh0aW1lLmNsaXBcIjpbXCJmdGNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJhbWVtYWtlclwiOltcImZtXCIsXCJmcmFtZVwiLFwibWFrZXJcIixcImJvb2tcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJvZ2Fucy5mbmNcIjpbXCJmbmNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJvZ2Fucy5sdGZcIjpbXCJsdGZcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnNjLndlYmxhdW5jaFwiOltcImZzY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppdHN1Lm9hc3lzXCI6W1wib2FzXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXMyXCI6W1wib2EyXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXMzXCI6W1wib2EzXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXNncFwiOltcImZnNVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppdHN1Lm9hc3lzcHJzXCI6W1wiYmgyXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml4ZXJveC5kZGRcIjpbXCJkZGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnVqaXhlcm94LmRvY3V3b3Jrc1wiOltcInhkd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppeGVyb3guZG9jdXdvcmtzLmJpbmRlclwiOltcInhiZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdXp6eXNoZWV0XCI6W1wiZnpzXCJdLFwiYXBwbGljYXRpb24vdm5kLmdlbm9tYXRpeC50dXhlZG9cIjpbXCJ0eGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ2VvZ2VicmEuZmlsZVwiOltcImdnYlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nZW9nZWJyYS50b29sXCI6W1wiZ2d0XCJdLFwiYXBwbGljYXRpb24vdm5kLmdlb21ldHJ5LWV4cGxvcmVyXCI6W1wiZ2V4XCIsXCJncmVcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ2VvbmV4dFwiOltcImd4dFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nZW9wbGFuXCI6W1wiZzJ3XCJdLFwiYXBwbGljYXRpb24vdm5kLmdlb3NwYWNlXCI6W1wiZzN3XCJdLFwiYXBwbGljYXRpb24vdm5kLmdteFwiOltcImdteFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudFwiOltcImdkb2NcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMucHJlc2VudGF0aW9uXCI6W1wiZ3NsaWRlc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5zcHJlYWRzaGVldFwiOltcImdzaGVldFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtZWFydGgua21sK3htbFwiOltcImttbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtZWFydGgua216XCI6W1wia216XCJdLFwiYXBwbGljYXRpb24vdm5kLmdyYWZlcVwiOltcImdxZlwiLFwiZ3FzXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1hY2NvdW50XCI6W1wiZ2FjXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1oZWxwXCI6W1wiZ2hmXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1pZGVudGl0eS1tZXNzYWdlXCI6W1wiZ2ltXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1pbmplY3RvclwiOltcImdydlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ncm9vdmUtdG9vbC1tZXNzYWdlXCI6W1wiZ3RtXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS10b29sLXRlbXBsYXRlXCI6W1widHBsXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS12Y2FyZFwiOltcInZjZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5oYWwreG1sXCI6W1wiaGFsXCJdLFwiYXBwbGljYXRpb24vdm5kLmhhbmRoZWxkLWVudGVydGFpbm1lbnQreG1sXCI6W1wiem1tXCJdLFwiYXBwbGljYXRpb24vdm5kLmhiY2lcIjpbXCJoYmNpXCJdLFwiYXBwbGljYXRpb24vdm5kLmhoZS5sZXNzb24tcGxheWVyXCI6W1wibGVzXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwZ2xcIjpbXCJocGdsXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwaWRcIjpbXCJocGlkXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwc1wiOltcImhwc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5ocC1qbHl0XCI6W1wiamx0XCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLXBjbFwiOltcInBjbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ocC1wY2x4bFwiOltcInBjbHhsXCJdLFwiYXBwbGljYXRpb24vdm5kLmh5ZHJvc3RhdGl4LnNvZi1kYXRhXCI6W1wic2ZkLWhkc3R4XCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5taW5pcGF5XCI6W1wibXB5XCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5tb2RjYXBcIjpbXCJhZnBcIixcImxpc3RhZnBcIixcImxpc3QzODIwXCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5yaWdodHMtbWFuYWdlbWVudFwiOltcImlybVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pYm0uc2VjdXJlLWNvbnRhaW5lclwiOltcInNjXCJdLFwiYXBwbGljYXRpb24vdm5kLmljY3Byb2ZpbGVcIjpbXCJpY2NcIixcImljbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pZ2xvYWRlclwiOltcImlnbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pbW1lcnZpc2lvbi1pdnBcIjpbXCJpdnBcIl0sXCJhcHBsaWNhdGlvbi92bmQuaW1tZXJ2aXNpb24taXZ1XCI6W1wiaXZ1XCJdLFwiYXBwbGljYXRpb24vdm5kLmluc29ycy5pZ21cIjpbXCJpZ21cIl0sXCJhcHBsaWNhdGlvbi92bmQuaW50ZXJjb24uZm9ybW5ldFwiOltcInhwd1wiLFwieHB4XCJdLFwiYXBwbGljYXRpb24vdm5kLmludGVyZ2VvXCI6W1wiaTJnXCJdLFwiYXBwbGljYXRpb24vdm5kLmludHUucWJvXCI6W1wicWJvXCJdLFwiYXBwbGljYXRpb24vdm5kLmludHUucWZ4XCI6W1wicWZ4XCJdLFwiYXBwbGljYXRpb24vdm5kLmlwdW5wbHVnZ2VkLnJjcHJvZmlsZVwiOltcInJjcHJvZmlsZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pcmVwb3NpdG9yeS5wYWNrYWdlK3htbFwiOltcImlycFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pcy14cHJcIjpbXCJ4cHJcIl0sXCJhcHBsaWNhdGlvbi92bmQuaXNhYy5mY3NcIjpbXCJmY3NcIl0sXCJhcHBsaWNhdGlvbi92bmQuamFtXCI6W1wiamFtXCJdLFwiYXBwbGljYXRpb24vdm5kLmpjcC5qYXZhbWUubWlkbGV0LXJtc1wiOltcInJtc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5qaXNwXCI6W1wiamlzcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5qb29zdC5qb2RhLWFyY2hpdmVcIjpbXCJqb2RhXCJdLFwiYXBwbGljYXRpb24vdm5kLmthaG9vdHpcIjpbXCJrdHpcIixcImt0clwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua2FyYm9uXCI6W1wia2FyYm9uXCJdLFwiYXBwbGljYXRpb24vdm5kLmtkZS5rY2hhcnRcIjpbXCJjaHJ0XCJdLFwiYXBwbGljYXRpb24vdm5kLmtkZS5rZm9ybXVsYVwiOltcImtmb1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua2l2aW9cIjpbXCJmbHdcIl0sXCJhcHBsaWNhdGlvbi92bmQua2RlLmtvbnRvdXJcIjpbXCJrb25cIl0sXCJhcHBsaWNhdGlvbi92bmQua2RlLmtwcmVzZW50ZXJcIjpbXCJrcHJcIixcImtwdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua3NwcmVhZFwiOltcImtzcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua3dvcmRcIjpbXCJrd2RcIixcImt3dFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZW5hbWVhYXBwXCI6W1wiaHRrZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5raWRzcGlyYXRpb25cIjpbXCJraWFcIl0sXCJhcHBsaWNhdGlvbi92bmQua2luYXJcIjpbXCJrbmVcIixcImtucFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rb2FuXCI6W1wic2twXCIsXCJza2RcIixcInNrdFwiLFwic2ttXCJdLFwiYXBwbGljYXRpb24vdm5kLmtvZGFrLWRlc2NyaXB0b3JcIjpbXCJzc2VcIl0sXCJhcHBsaWNhdGlvbi92bmQubGFzLmxhcyt4bWxcIjpbXCJsYXN4bWxcIl0sXCJhcHBsaWNhdGlvbi92bmQubGxhbWFncmFwaGljcy5saWZlLWJhbGFuY2UuZGVza3RvcFwiOltcImxiZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5sbGFtYWdyYXBoaWNzLmxpZmUtYmFsYW5jZS5leGNoYW5nZSt4bWxcIjpbXCJsYmVcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtMS0yLTNcIjpbXCIxMjNcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtYXBwcm9hY2hcIjpbXCJhcHJcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtZnJlZWxhbmNlXCI6W1wicHJlXCJdLFwiYXBwbGljYXRpb24vdm5kLmxvdHVzLW5vdGVzXCI6W1wibnNmXCJdLFwiYXBwbGljYXRpb24vdm5kLmxvdHVzLW9yZ2FuaXplclwiOltcIm9yZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5sb3R1cy1zY3JlZW5jYW1cIjpbXCJzY21cIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtd29yZHByb1wiOltcImx3cFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tYWNwb3J0cy5wb3J0cGtnXCI6W1wicG9ydHBrZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tYXBib3gtdmVjdG9yLXRpbGVcIjpbXCJtdnRcIl0sXCJhcHBsaWNhdGlvbi92bmQubWNkXCI6W1wibWNkXCJdLFwiYXBwbGljYXRpb24vdm5kLm1lZGNhbGNkYXRhXCI6W1wibWMxXCJdLFwiYXBwbGljYXRpb24vdm5kLm1lZGlhc3RhdGlvbi5jZGtleVwiOltcImNka2V5XCJdLFwiYXBwbGljYXRpb24vdm5kLm1mZXJcIjpbXCJtd2ZcIl0sXCJhcHBsaWNhdGlvbi92bmQubWZtcFwiOltcIm1mbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5taWNyb2dyYWZ4LmZsb1wiOltcImZsb1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5taWNyb2dyYWZ4LmlneFwiOltcImlneFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5taWZcIjpbXCJtaWZcIl0sXCJhcHBsaWNhdGlvbi92bmQubW9iaXVzLmRhZlwiOltcImRhZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb2JpdXMuZGlzXCI6W1wiZGlzXCJdLFwiYXBwbGljYXRpb24vdm5kLm1vYml1cy5tYmtcIjpbXCJtYmtcIl0sXCJhcHBsaWNhdGlvbi92bmQubW9iaXVzLm1xeVwiOltcIm1xeVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb2JpdXMubXNsXCI6W1wibXNsXCJdLFwiYXBwbGljYXRpb24vdm5kLm1vYml1cy5wbGNcIjpbXCJwbGNcIl0sXCJhcHBsaWNhdGlvbi92bmQubW9iaXVzLnR4ZlwiOltcInR4ZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb3BodW4uYXBwbGljYXRpb25cIjpbXCJtcG5cIl0sXCJhcHBsaWNhdGlvbi92bmQubW9waHVuLmNlcnRpZmljYXRlXCI6W1wibXBjXCJdLFwiYXBwbGljYXRpb24vdm5kLm1vemlsbGEueHVsK3htbFwiOltcInh1bFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1hcnRnYWxyeVwiOltcImNpbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1jYWItY29tcHJlc3NlZFwiOltcImNhYlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbFwiOltcInhsc1wiLFwieGxtXCIsXCJ4bGFcIixcInhsY1wiLFwieGx0XCIsXCJ4bHdcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwuYWRkaW4ubWFjcm9lbmFibGVkLjEyXCI6W1wieGxhbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5zaGVldC5iaW5hcnkubWFjcm9lbmFibGVkLjEyXCI6W1wieGxzYlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5zaGVldC5tYWNyb2VuYWJsZWQuMTJcIjpbXCJ4bHNtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLnRlbXBsYXRlLm1hY3JvZW5hYmxlZC4xMlwiOltcInhsdG1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtZm9udG9iamVjdFwiOltcImVvdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1odG1saGVscFwiOltcImNobVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1pbXNcIjpbXCJpbXNcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtbHJtXCI6W1wibHJtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLW9mZmljZXRoZW1lXCI6W1widGhteFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1vdXRsb29rXCI6W1wibXNnXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXBraS5zZWNjYXRcIjpbXCJjYXRcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcGtpLnN0bFwiOltcIipzdGxcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludFwiOltcInBwdFwiLFwicHBzXCIsXCJwb3RcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5hZGRpbi5tYWNyb2VuYWJsZWQuMTJcIjpbXCJwcGFtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnQucHJlc2VudGF0aW9uLm1hY3JvZW5hYmxlZC4xMlwiOltcInBwdG1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5zbGlkZS5tYWNyb2VuYWJsZWQuMTJcIjpbXCJzbGRtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnQuc2xpZGVzaG93Lm1hY3JvZW5hYmxlZC4xMlwiOltcInBwc21cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC50ZW1wbGF0ZS5tYWNyb2VuYWJsZWQuMTJcIjpbXCJwb3RtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXByb2plY3RcIjpbXCJtcHBcIixcIm1wdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy13b3JkLmRvY3VtZW50Lm1hY3JvZW5hYmxlZC4xMlwiOltcImRvY21cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtd29yZC50ZW1wbGF0ZS5tYWNyb2VuYWJsZWQuMTJcIjpbXCJkb3RtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXdvcmtzXCI6W1wid3BzXCIsXCJ3a3NcIixcIndjbVwiLFwid2RiXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXdwbFwiOltcIndwbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy14cHNkb2N1bWVudFwiOltcInhwc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tc2VxXCI6W1wibXNlcVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tdXNpY2lhblwiOltcIm11c1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tdXZlZS5zdHlsZVwiOltcIm1zdHlcIl0sXCJhcHBsaWNhdGlvbi92bmQubXluZmNcIjpbXCJ0YWdsZXRcIl0sXCJhcHBsaWNhdGlvbi92bmQubmV1cm9sYW5ndWFnZS5ubHVcIjpbXCJubHVcIl0sXCJhcHBsaWNhdGlvbi92bmQubml0ZlwiOltcIm50ZlwiLFwibml0ZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub2JsZW5ldC1kaXJlY3RvcnlcIjpbXCJubmRcIl0sXCJhcHBsaWNhdGlvbi92bmQubm9ibGVuZXQtc2VhbGVyXCI6W1wibm5zXCJdLFwiYXBwbGljYXRpb24vdm5kLm5vYmxlbmV0LXdlYlwiOltcIm5ud1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub2tpYS5uLWdhZ2UuYWMreG1sXCI6W1wiKmFjXCJdLFwiYXBwbGljYXRpb24vdm5kLm5va2lhLm4tZ2FnZS5kYXRhXCI6W1wibmdkYXRcIl0sXCJhcHBsaWNhdGlvbi92bmQubm9raWEubi1nYWdlLnN5bWJpYW4uaW5zdGFsbFwiOltcIm4tZ2FnZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub2tpYS5yYWRpby1wcmVzZXRcIjpbXCJycHN0XCJdLFwiYXBwbGljYXRpb24vdm5kLm5va2lhLnJhZGlvLXByZXNldHNcIjpbXCJycHNzXCJdLFwiYXBwbGljYXRpb24vdm5kLm5vdmFkaWdtLmVkbVwiOltcImVkbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub3ZhZGlnbS5lZHhcIjpbXCJlZHhcIl0sXCJhcHBsaWNhdGlvbi92bmQubm92YWRpZ20uZXh0XCI6W1wiZXh0XCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5jaGFydFwiOltcIm9kY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuY2hhcnQtdGVtcGxhdGVcIjpbXCJvdGNcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmRhdGFiYXNlXCI6W1wib2RiXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5mb3JtdWxhXCI6W1wib2RmXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5mb3JtdWxhLXRlbXBsYXRlXCI6W1wib2RmdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuZ3JhcGhpY3NcIjpbXCJvZGdcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmdyYXBoaWNzLXRlbXBsYXRlXCI6W1wib3RnXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5pbWFnZVwiOltcIm9kaVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuaW1hZ2UtdGVtcGxhdGVcIjpbXCJvdGlcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnByZXNlbnRhdGlvblwiOltcIm9kcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQucHJlc2VudGF0aW9uLXRlbXBsYXRlXCI6W1wib3RwXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5zcHJlYWRzaGVldFwiOltcIm9kc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuc3ByZWFkc2hlZXQtdGVtcGxhdGVcIjpbXCJvdHNcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHRcIjpbXCJvZHRcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHQtbWFzdGVyXCI6W1wib2RtXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC50ZXh0LXRlbXBsYXRlXCI6W1wib3R0XCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC50ZXh0LXdlYlwiOltcIm90aFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vbHBjLXN1Z2FyXCI6W1wieG9cIl0sXCJhcHBsaWNhdGlvbi92bmQub21hLmRkMit4bWxcIjpbXCJkZDJcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbmJsb3guZ2FtZSt4bWxcIjpbXCJvYmd4XCJdLFwiYXBwbGljYXRpb24vdm5kLm9wZW5vZmZpY2VvcmcuZXh0ZW5zaW9uXCI6W1wib3h0XCJdLFwiYXBwbGljYXRpb24vdm5kLm9wZW5zdHJlZXRtYXAuZGF0YSt4bWxcIjpbXCJvc21cIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uXCI6W1wicHB0eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5wcmVzZW50YXRpb25tbC5zbGlkZVwiOltcInNsZHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwuc2xpZGVzaG93XCI6W1wicHBzeFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5wcmVzZW50YXRpb25tbC50ZW1wbGF0ZVwiOltcInBvdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5zaGVldFwiOltcInhsc3hcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC50ZW1wbGF0ZVwiOltcInhsdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC5kb2N1bWVudFwiOltcImRvY3hcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC50ZW1wbGF0ZVwiOltcImRvdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3NnZW8ubWFwZ3VpZGUucGFja2FnZVwiOltcIm1ncFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vc2dpLmRwXCI6W1wiZHBcIl0sXCJhcHBsaWNhdGlvbi92bmQub3NnaS5zdWJzeXN0ZW1cIjpbXCJlc2FcIl0sXCJhcHBsaWNhdGlvbi92bmQucGFsbVwiOltcInBkYlwiLFwicHFhXCIsXCJvcHJjXCJdLFwiYXBwbGljYXRpb24vdm5kLnBhd2FhZmlsZVwiOltcInBhd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5wZy5mb3JtYXRcIjpbXCJzdHJcIl0sXCJhcHBsaWNhdGlvbi92bmQucGcub3Nhc2xpXCI6W1wiZWk2XCJdLFwiYXBwbGljYXRpb24vdm5kLnBpY3NlbFwiOltcImVmaWZcIl0sXCJhcHBsaWNhdGlvbi92bmQucG1pLndpZGdldFwiOltcIndnXCJdLFwiYXBwbGljYXRpb24vdm5kLnBvY2tldGxlYXJuXCI6W1wicGxmXCJdLFwiYXBwbGljYXRpb24vdm5kLnBvd2VyYnVpbGRlcjZcIjpbXCJwYmRcIl0sXCJhcHBsaWNhdGlvbi92bmQucHJldmlld3N5c3RlbXMuYm94XCI6W1wiYm94XCJdLFwiYXBwbGljYXRpb24vdm5kLnByb3RldXMubWFnYXppbmVcIjpbXCJtZ3pcIl0sXCJhcHBsaWNhdGlvbi92bmQucHVibGlzaGFyZS1kZWx0YS10cmVlXCI6W1wicXBzXCJdLFwiYXBwbGljYXRpb24vdm5kLnB2aS5wdGlkMVwiOltcInB0aWRcIl0sXCJhcHBsaWNhdGlvbi92bmQucXVhcmsucXVhcmt4cHJlc3NcIjpbXCJxeGRcIixcInF4dFwiLFwicXdkXCIsXCJxd3RcIixcInF4bFwiLFwicXhiXCJdLFwiYXBwbGljYXRpb24vdm5kLnJhclwiOltcInJhclwiXSxcImFwcGxpY2F0aW9uL3ZuZC5yZWFsdm5jLmJlZFwiOltcImJlZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5yZWNvcmRhcmUubXVzaWN4bWxcIjpbXCJteGxcIl0sXCJhcHBsaWNhdGlvbi92bmQucmVjb3JkYXJlLm11c2ljeG1sK3htbFwiOltcIm11c2ljeG1sXCJdLFwiYXBwbGljYXRpb24vdm5kLnJpZy5jcnlwdG9ub3RlXCI6W1wiY3J5cHRvbm90ZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5yaW0uY29kXCI6W1wiY29kXCJdLFwiYXBwbGljYXRpb24vdm5kLnJuLXJlYWxtZWRpYVwiOltcInJtXCJdLFwiYXBwbGljYXRpb24vdm5kLnJuLXJlYWxtZWRpYS12YnJcIjpbXCJybXZiXCJdLFwiYXBwbGljYXRpb24vdm5kLnJvdXRlNjYubGluazY2K3htbFwiOltcImxpbms2NlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zYWlsaW5ndHJhY2tlci50cmFja1wiOltcInN0XCJdLFwiYXBwbGljYXRpb24vdm5kLnNlZW1haWxcIjpbXCJzZWVcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2VtYVwiOltcInNlbWFcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2VtZFwiOltcInNlbWRcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2VtZlwiOltcInNlbWZcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2hhbmEuaW5mb3JtZWQuZm9ybWRhdGFcIjpbXCJpZm1cIl0sXCJhcHBsaWNhdGlvbi92bmQuc2hhbmEuaW5mb3JtZWQuZm9ybXRlbXBsYXRlXCI6W1wiaXRwXCJdLFwiYXBwbGljYXRpb24vdm5kLnNoYW5hLmluZm9ybWVkLmludGVyY2hhbmdlXCI6W1wiaWlmXCJdLFwiYXBwbGljYXRpb24vdm5kLnNoYW5hLmluZm9ybWVkLnBhY2thZ2VcIjpbXCJpcGtcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2ltdGVjaC1taW5kbWFwcGVyXCI6W1widHdkXCIsXCJ0d2RzXCJdLFwiYXBwbGljYXRpb24vdm5kLnNtYWZcIjpbXCJtbWZcIl0sXCJhcHBsaWNhdGlvbi92bmQuc21hcnQudGVhY2hlclwiOltcInRlYWNoZXJcIl0sXCJhcHBsaWNhdGlvbi92bmQuc29mdHdhcmU2MDIuZmlsbGVyLmZvcm0reG1sXCI6W1wiZm9cIl0sXCJhcHBsaWNhdGlvbi92bmQuc29sZW50LnNka20reG1sXCI6W1wic2RrbVwiLFwic2RrZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zcG90ZmlyZS5keHBcIjpbXCJkeHBcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3BvdGZpcmUuc2ZzXCI6W1wic2ZzXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi5jYWxjXCI6W1wic2RjXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi5kcmF3XCI6W1wic2RhXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi5pbXByZXNzXCI6W1wic2RkXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi5tYXRoXCI6W1wic21mXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi53cml0ZXJcIjpbXCJzZHdcIixcInZvclwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdGFyZGl2aXNpb24ud3JpdGVyLWdsb2JhbFwiOltcInNnbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdGVwbWFuaWEucGFja2FnZVwiOltcInNtemlwXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0ZXBtYW5pYS5zdGVwY2hhcnRcIjpbXCJzbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ud2FkbCt4bWxcIjpbXCJ3YWRsXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwuY2FsY1wiOltcInN4Y1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLmNhbGMudGVtcGxhdGVcIjpbXCJzdGNcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC5kcmF3XCI6W1wic3hkXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwuZHJhdy50ZW1wbGF0ZVwiOltcInN0ZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLmltcHJlc3NcIjpbXCJzeGlcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC5pbXByZXNzLnRlbXBsYXRlXCI6W1wic3RpXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwubWF0aFwiOltcInN4bVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLndyaXRlclwiOltcInN4d1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLndyaXRlci5nbG9iYWxcIjpbXCJzeGdcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC53cml0ZXIudGVtcGxhdGVcIjpbXCJzdHdcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VzLWNhbGVuZGFyXCI6W1wic3VzXCIsXCJzdXNwXCJdLFwiYXBwbGljYXRpb24vdm5kLnN2ZFwiOltcInN2ZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zeW1iaWFuLmluc3RhbGxcIjpbXCJzaXNcIixcInNpc3hcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3luY21sK3htbFwiOltcInhzbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zeW5jbWwuZG0rd2J4bWxcIjpbXCJiZG1cIl0sXCJhcHBsaWNhdGlvbi92bmQuc3luY21sLmRtK3htbFwiOltcInhkbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zeW5jbWwuZG1kZGYreG1sXCI6W1wiZGRmXCJdLFwiYXBwbGljYXRpb24vdm5kLnRhby5pbnRlbnQtbW9kdWxlLWFyY2hpdmVcIjpbXCJ0YW9cIl0sXCJhcHBsaWNhdGlvbi92bmQudGNwZHVtcC5wY2FwXCI6W1wicGNhcFwiLFwiY2FwXCIsXCJkbXBcIl0sXCJhcHBsaWNhdGlvbi92bmQudG1vYmlsZS1saXZldHZcIjpbXCJ0bW9cIl0sXCJhcHBsaWNhdGlvbi92bmQudHJpZC50cHRcIjpbXCJ0cHRcIl0sXCJhcHBsaWNhdGlvbi92bmQudHJpc2NhcGUubXhzXCI6W1wibXhzXCJdLFwiYXBwbGljYXRpb24vdm5kLnRydWVhcHBcIjpbXCJ0cmFcIl0sXCJhcHBsaWNhdGlvbi92bmQudWZkbFwiOltcInVmZFwiLFwidWZkbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC51aXEudGhlbWVcIjpbXCJ1dHpcIl0sXCJhcHBsaWNhdGlvbi92bmQudW1hamluXCI6W1widW1qXCJdLFwiYXBwbGljYXRpb24vdm5kLnVuaXR5XCI6W1widW5pdHl3ZWJcIl0sXCJhcHBsaWNhdGlvbi92bmQudW9tbCt4bWxcIjpbXCJ1b21sXCJdLFwiYXBwbGljYXRpb24vdm5kLnZjeFwiOltcInZjeFwiXSxcImFwcGxpY2F0aW9uL3ZuZC52aXNpb1wiOltcInZzZFwiLFwidnN0XCIsXCJ2c3NcIixcInZzd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC52aXNpb25hcnlcIjpbXCJ2aXNcIl0sXCJhcHBsaWNhdGlvbi92bmQudnNmXCI6W1widnNmXCJdLFwiYXBwbGljYXRpb24vdm5kLndhcC53YnhtbFwiOltcIndieG1sXCJdLFwiYXBwbGljYXRpb24vdm5kLndhcC53bWxjXCI6W1wid21sY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC53YXAud21sc2NyaXB0Y1wiOltcIndtbHNjXCJdLFwiYXBwbGljYXRpb24vdm5kLndlYnR1cmJvXCI6W1wid3RiXCJdLFwiYXBwbGljYXRpb24vdm5kLndvbGZyYW0ucGxheWVyXCI6W1wibmJwXCJdLFwiYXBwbGljYXRpb24vdm5kLndvcmRwZXJmZWN0XCI6W1wid3BkXCJdLFwiYXBwbGljYXRpb24vdm5kLndxZFwiOltcIndxZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC53dC5zdGZcIjpbXCJzdGZcIl0sXCJhcHBsaWNhdGlvbi92bmQueGFyYVwiOltcInhhclwiXSxcImFwcGxpY2F0aW9uL3ZuZC54ZmRsXCI6W1wieGZkbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC55YW1haGEuaHYtZGljXCI6W1wiaHZkXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5odi1zY3JpcHRcIjpbXCJodnNcIl0sXCJhcHBsaWNhdGlvbi92bmQueWFtYWhhLmh2LXZvaWNlXCI6W1wiaHZwXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5vcGVuc2NvcmVmb3JtYXRcIjpbXCJvc2ZcIl0sXCJhcHBsaWNhdGlvbi92bmQueWFtYWhhLm9wZW5zY29yZWZvcm1hdC5vc2ZwdmcreG1sXCI6W1wib3NmcHZnXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5zbWFmLWF1ZGlvXCI6W1wic2FmXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5zbWFmLXBocmFzZVwiOltcInNwZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC55ZWxsb3dyaXZlci1jdXN0b20tbWVudVwiOltcImNtcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC56dWxcIjpbXCJ6aXJcIixcInppcnpcIl0sXCJhcHBsaWNhdGlvbi92bmQuenphenouZGVjayt4bWxcIjpbXCJ6YXpcIl0sXCJhcHBsaWNhdGlvbi94LTd6LWNvbXByZXNzZWRcIjpbXCI3elwiXSxcImFwcGxpY2F0aW9uL3gtYWJpd29yZFwiOltcImFid1wiXSxcImFwcGxpY2F0aW9uL3gtYWNlLWNvbXByZXNzZWRcIjpbXCJhY2VcIl0sXCJhcHBsaWNhdGlvbi94LWFwcGxlLWRpc2tpbWFnZVwiOltcIipkbWdcIl0sXCJhcHBsaWNhdGlvbi94LWFyalwiOltcImFyalwiXSxcImFwcGxpY2F0aW9uL3gtYXV0aG9yd2FyZS1iaW5cIjpbXCJhYWJcIixcIngzMlwiLFwidTMyXCIsXCJ2b3hcIl0sXCJhcHBsaWNhdGlvbi94LWF1dGhvcndhcmUtbWFwXCI6W1wiYWFtXCJdLFwiYXBwbGljYXRpb24veC1hdXRob3J3YXJlLXNlZ1wiOltcImFhc1wiXSxcImFwcGxpY2F0aW9uL3gtYmNwaW9cIjpbXCJiY3Bpb1wiXSxcImFwcGxpY2F0aW9uL3gtYmRvY1wiOltcIipiZG9jXCJdLFwiYXBwbGljYXRpb24veC1iaXR0b3JyZW50XCI6W1widG9ycmVudFwiXSxcImFwcGxpY2F0aW9uL3gtYmxvcmJcIjpbXCJibGJcIixcImJsb3JiXCJdLFwiYXBwbGljYXRpb24veC1iemlwXCI6W1wiYnpcIl0sXCJhcHBsaWNhdGlvbi94LWJ6aXAyXCI6W1wiYnoyXCIsXCJib3pcIl0sXCJhcHBsaWNhdGlvbi94LWNiclwiOltcImNiclwiLFwiY2JhXCIsXCJjYnRcIixcImNielwiLFwiY2I3XCJdLFwiYXBwbGljYXRpb24veC1jZGxpbmtcIjpbXCJ2Y2RcIl0sXCJhcHBsaWNhdGlvbi94LWNmcy1jb21wcmVzc2VkXCI6W1wiY2ZzXCJdLFwiYXBwbGljYXRpb24veC1jaGF0XCI6W1wiY2hhdFwiXSxcImFwcGxpY2F0aW9uL3gtY2hlc3MtcGduXCI6W1wicGduXCJdLFwiYXBwbGljYXRpb24veC1jaHJvbWUtZXh0ZW5zaW9uXCI6W1wiY3J4XCJdLFwiYXBwbGljYXRpb24veC1jb2NvYVwiOltcImNjb1wiXSxcImFwcGxpY2F0aW9uL3gtY29uZmVyZW5jZVwiOltcIm5zY1wiXSxcImFwcGxpY2F0aW9uL3gtY3Bpb1wiOltcImNwaW9cIl0sXCJhcHBsaWNhdGlvbi94LWNzaFwiOltcImNzaFwiXSxcImFwcGxpY2F0aW9uL3gtZGViaWFuLXBhY2thZ2VcIjpbXCIqZGViXCIsXCJ1ZGViXCJdLFwiYXBwbGljYXRpb24veC1kZ2MtY29tcHJlc3NlZFwiOltcImRnY1wiXSxcImFwcGxpY2F0aW9uL3gtZGlyZWN0b3JcIjpbXCJkaXJcIixcImRjclwiLFwiZHhyXCIsXCJjc3RcIixcImNjdFwiLFwiY3h0XCIsXCJ3M2RcIixcImZnZFwiLFwic3dhXCJdLFwiYXBwbGljYXRpb24veC1kb29tXCI6W1wid2FkXCJdLFwiYXBwbGljYXRpb24veC1kdGJuY3greG1sXCI6W1wibmN4XCJdLFwiYXBwbGljYXRpb24veC1kdGJvb2sreG1sXCI6W1wiZHRiXCJdLFwiYXBwbGljYXRpb24veC1kdGJyZXNvdXJjZSt4bWxcIjpbXCJyZXNcIl0sXCJhcHBsaWNhdGlvbi94LWR2aVwiOltcImR2aVwiXSxcImFwcGxpY2F0aW9uL3gtZW52b3lcIjpbXCJldnlcIl0sXCJhcHBsaWNhdGlvbi94LWV2YVwiOltcImV2YVwiXSxcImFwcGxpY2F0aW9uL3gtZm9udC1iZGZcIjpbXCJiZGZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtZ2hvc3RzY3JpcHRcIjpbXCJnc2ZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtbGludXgtcHNmXCI6W1wicHNmXCJdLFwiYXBwbGljYXRpb24veC1mb250LXBjZlwiOltcInBjZlwiXSxcImFwcGxpY2F0aW9uL3gtZm9udC1zbmZcIjpbXCJzbmZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtdHlwZTFcIjpbXCJwZmFcIixcInBmYlwiLFwicGZtXCIsXCJhZm1cIl0sXCJhcHBsaWNhdGlvbi94LWZyZWVhcmNcIjpbXCJhcmNcIl0sXCJhcHBsaWNhdGlvbi94LWZ1dHVyZXNwbGFzaFwiOltcInNwbFwiXSxcImFwcGxpY2F0aW9uL3gtZ2NhLWNvbXByZXNzZWRcIjpbXCJnY2FcIl0sXCJhcHBsaWNhdGlvbi94LWdsdWx4XCI6W1widWx4XCJdLFwiYXBwbGljYXRpb24veC1nbnVtZXJpY1wiOltcImdudW1lcmljXCJdLFwiYXBwbGljYXRpb24veC1ncmFtcHMteG1sXCI6W1wiZ3JhbXBzXCJdLFwiYXBwbGljYXRpb24veC1ndGFyXCI6W1wiZ3RhclwiXSxcImFwcGxpY2F0aW9uL3gtaGRmXCI6W1wiaGRmXCJdLFwiYXBwbGljYXRpb24veC1odHRwZC1waHBcIjpbXCJwaHBcIl0sXCJhcHBsaWNhdGlvbi94LWluc3RhbGwtaW5zdHJ1Y3Rpb25zXCI6W1wiaW5zdGFsbFwiXSxcImFwcGxpY2F0aW9uL3gtaXNvOTY2MC1pbWFnZVwiOltcIippc29cIl0sXCJhcHBsaWNhdGlvbi94LWl3b3JrLWtleW5vdGUtc2Zma2V5XCI6W1wiKmtleVwiXSxcImFwcGxpY2F0aW9uL3gtaXdvcmstbnVtYmVycy1zZmZudW1iZXJzXCI6W1wiKm51bWJlcnNcIl0sXCJhcHBsaWNhdGlvbi94LWl3b3JrLXBhZ2VzLXNmZnBhZ2VzXCI6W1wiKnBhZ2VzXCJdLFwiYXBwbGljYXRpb24veC1qYXZhLWFyY2hpdmUtZGlmZlwiOltcImphcmRpZmZcIl0sXCJhcHBsaWNhdGlvbi94LWphdmEtam5scC1maWxlXCI6W1wiam5scFwiXSxcImFwcGxpY2F0aW9uL3gta2VlcGFzczJcIjpbXCJrZGJ4XCJdLFwiYXBwbGljYXRpb24veC1sYXRleFwiOltcImxhdGV4XCJdLFwiYXBwbGljYXRpb24veC1sdWEtYnl0ZWNvZGVcIjpbXCJsdWFjXCJdLFwiYXBwbGljYXRpb24veC1semgtY29tcHJlc3NlZFwiOltcImx6aFwiLFwibGhhXCJdLFwiYXBwbGljYXRpb24veC1tYWtlc2VsZlwiOltcInJ1blwiXSxcImFwcGxpY2F0aW9uL3gtbWllXCI6W1wibWllXCJdLFwiYXBwbGljYXRpb24veC1tb2JpcG9ja2V0LWVib29rXCI6W1wicHJjXCIsXCJtb2JpXCJdLFwiYXBwbGljYXRpb24veC1tcy1hcHBsaWNhdGlvblwiOltcImFwcGxpY2F0aW9uXCJdLFwiYXBwbGljYXRpb24veC1tcy1zaG9ydGN1dFwiOltcImxua1wiXSxcImFwcGxpY2F0aW9uL3gtbXMtd21kXCI6W1wid21kXCJdLFwiYXBwbGljYXRpb24veC1tcy13bXpcIjpbXCJ3bXpcIl0sXCJhcHBsaWNhdGlvbi94LW1zLXhiYXBcIjpbXCJ4YmFwXCJdLFwiYXBwbGljYXRpb24veC1tc2FjY2Vzc1wiOltcIm1kYlwiXSxcImFwcGxpY2F0aW9uL3gtbXNiaW5kZXJcIjpbXCJvYmRcIl0sXCJhcHBsaWNhdGlvbi94LW1zY2FyZGZpbGVcIjpbXCJjcmRcIl0sXCJhcHBsaWNhdGlvbi94LW1zY2xpcFwiOltcImNscFwiXSxcImFwcGxpY2F0aW9uL3gtbXNkb3MtcHJvZ3JhbVwiOltcIipleGVcIl0sXCJhcHBsaWNhdGlvbi94LW1zZG93bmxvYWRcIjpbXCIqZXhlXCIsXCIqZGxsXCIsXCJjb21cIixcImJhdFwiLFwiKm1zaVwiXSxcImFwcGxpY2F0aW9uL3gtbXNtZWRpYXZpZXdcIjpbXCJtdmJcIixcIm0xM1wiLFwibTE0XCJdLFwiYXBwbGljYXRpb24veC1tc21ldGFmaWxlXCI6W1wiKndtZlwiLFwiKndtelwiLFwiKmVtZlwiLFwiZW16XCJdLFwiYXBwbGljYXRpb24veC1tc21vbmV5XCI6W1wibW55XCJdLFwiYXBwbGljYXRpb24veC1tc3B1Ymxpc2hlclwiOltcInB1YlwiXSxcImFwcGxpY2F0aW9uL3gtbXNzY2hlZHVsZVwiOltcInNjZFwiXSxcImFwcGxpY2F0aW9uL3gtbXN0ZXJtaW5hbFwiOltcInRybVwiXSxcImFwcGxpY2F0aW9uL3gtbXN3cml0ZVwiOltcIndyaVwiXSxcImFwcGxpY2F0aW9uL3gtbmV0Y2RmXCI6W1wibmNcIixcImNkZlwiXSxcImFwcGxpY2F0aW9uL3gtbnMtcHJveHktYXV0b2NvbmZpZ1wiOltcInBhY1wiXSxcImFwcGxpY2F0aW9uL3gtbnpiXCI6W1wibnpiXCJdLFwiYXBwbGljYXRpb24veC1wZXJsXCI6W1wicGxcIixcInBtXCJdLFwiYXBwbGljYXRpb24veC1waWxvdFwiOltcIipwcmNcIixcIipwZGJcIl0sXCJhcHBsaWNhdGlvbi94LXBrY3MxMlwiOltcInAxMlwiLFwicGZ4XCJdLFwiYXBwbGljYXRpb24veC1wa2NzNy1jZXJ0aWZpY2F0ZXNcIjpbXCJwN2JcIixcInNwY1wiXSxcImFwcGxpY2F0aW9uL3gtcGtjczctY2VydHJlcXJlc3BcIjpbXCJwN3JcIl0sXCJhcHBsaWNhdGlvbi94LXJhci1jb21wcmVzc2VkXCI6W1wiKnJhclwiXSxcImFwcGxpY2F0aW9uL3gtcmVkaGF0LXBhY2thZ2UtbWFuYWdlclwiOltcInJwbVwiXSxcImFwcGxpY2F0aW9uL3gtcmVzZWFyY2gtaW5mby1zeXN0ZW1zXCI6W1wicmlzXCJdLFwiYXBwbGljYXRpb24veC1zZWFcIjpbXCJzZWFcIl0sXCJhcHBsaWNhdGlvbi94LXNoXCI6W1wic2hcIl0sXCJhcHBsaWNhdGlvbi94LXNoYXJcIjpbXCJzaGFyXCJdLFwiYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2hcIjpbXCJzd2ZcIl0sXCJhcHBsaWNhdGlvbi94LXNpbHZlcmxpZ2h0LWFwcFwiOltcInhhcFwiXSxcImFwcGxpY2F0aW9uL3gtc3FsXCI6W1wic3FsXCJdLFwiYXBwbGljYXRpb24veC1zdHVmZml0XCI6W1wic2l0XCJdLFwiYXBwbGljYXRpb24veC1zdHVmZml0eFwiOltcInNpdHhcIl0sXCJhcHBsaWNhdGlvbi94LXN1YnJpcFwiOltcInNydFwiXSxcImFwcGxpY2F0aW9uL3gtc3Y0Y3Bpb1wiOltcInN2NGNwaW9cIl0sXCJhcHBsaWNhdGlvbi94LXN2NGNyY1wiOltcInN2NGNyY1wiXSxcImFwcGxpY2F0aW9uL3gtdDN2bS1pbWFnZVwiOltcInQzXCJdLFwiYXBwbGljYXRpb24veC10YWRzXCI6W1wiZ2FtXCJdLFwiYXBwbGljYXRpb24veC10YXJcIjpbXCJ0YXJcIl0sXCJhcHBsaWNhdGlvbi94LXRjbFwiOltcInRjbFwiLFwidGtcIl0sXCJhcHBsaWNhdGlvbi94LXRleFwiOltcInRleFwiXSxcImFwcGxpY2F0aW9uL3gtdGV4LXRmbVwiOltcInRmbVwiXSxcImFwcGxpY2F0aW9uL3gtdGV4aW5mb1wiOltcInRleGluZm9cIixcInRleGlcIl0sXCJhcHBsaWNhdGlvbi94LXRnaWZcIjpbXCIqb2JqXCJdLFwiYXBwbGljYXRpb24veC11c3RhclwiOltcInVzdGFyXCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LWhkZFwiOltcImhkZFwiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC1vdmFcIjpbXCJvdmFcIl0sXCJhcHBsaWNhdGlvbi94LXZpcnR1YWxib3gtb3ZmXCI6W1wib3ZmXCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LXZib3hcIjpbXCJ2Ym94XCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LXZib3gtZXh0cGFja1wiOltcInZib3gtZXh0cGFja1wiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC12ZGlcIjpbXCJ2ZGlcIl0sXCJhcHBsaWNhdGlvbi94LXZpcnR1YWxib3gtdmhkXCI6W1widmhkXCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LXZtZGtcIjpbXCJ2bWRrXCJdLFwiYXBwbGljYXRpb24veC13YWlzLXNvdXJjZVwiOltcInNyY1wiXSxcImFwcGxpY2F0aW9uL3gtd2ViLWFwcC1tYW5pZmVzdCtqc29uXCI6W1wid2ViYXBwXCJdLFwiYXBwbGljYXRpb24veC14NTA5LWNhLWNlcnRcIjpbXCJkZXJcIixcImNydFwiLFwicGVtXCJdLFwiYXBwbGljYXRpb24veC14ZmlnXCI6W1wiZmlnXCJdLFwiYXBwbGljYXRpb24veC14bGlmZit4bWxcIjpbXCIqeGxmXCJdLFwiYXBwbGljYXRpb24veC14cGluc3RhbGxcIjpbXCJ4cGlcIl0sXCJhcHBsaWNhdGlvbi94LXh6XCI6W1wieHpcIl0sXCJhcHBsaWNhdGlvbi94LXptYWNoaW5lXCI6W1wiejFcIixcInoyXCIsXCJ6M1wiLFwiejRcIixcIno1XCIsXCJ6NlwiLFwiejdcIixcIno4XCJdLFwiYXVkaW8vdm5kLmRlY2UuYXVkaW9cIjpbXCJ1dmFcIixcInV2dmFcIl0sXCJhdWRpby92bmQuZGlnaXRhbC13aW5kc1wiOltcImVvbFwiXSxcImF1ZGlvL3ZuZC5kcmFcIjpbXCJkcmFcIl0sXCJhdWRpby92bmQuZHRzXCI6W1wiZHRzXCJdLFwiYXVkaW8vdm5kLmR0cy5oZFwiOltcImR0c2hkXCJdLFwiYXVkaW8vdm5kLmx1Y2VudC52b2ljZVwiOltcImx2cFwiXSxcImF1ZGlvL3ZuZC5tcy1wbGF5cmVhZHkubWVkaWEucHlhXCI6W1wicHlhXCJdLFwiYXVkaW8vdm5kLm51ZXJhLmVjZWxwNDgwMFwiOltcImVjZWxwNDgwMFwiXSxcImF1ZGlvL3ZuZC5udWVyYS5lY2VscDc0NzBcIjpbXCJlY2VscDc0NzBcIl0sXCJhdWRpby92bmQubnVlcmEuZWNlbHA5NjAwXCI6W1wiZWNlbHA5NjAwXCJdLFwiYXVkaW8vdm5kLnJpcFwiOltcInJpcFwiXSxcImF1ZGlvL3gtYWFjXCI6W1wiYWFjXCJdLFwiYXVkaW8veC1haWZmXCI6W1wiYWlmXCIsXCJhaWZmXCIsXCJhaWZjXCJdLFwiYXVkaW8veC1jYWZcIjpbXCJjYWZcIl0sXCJhdWRpby94LWZsYWNcIjpbXCJmbGFjXCJdLFwiYXVkaW8veC1tNGFcIjpbXCIqbTRhXCJdLFwiYXVkaW8veC1tYXRyb3NrYVwiOltcIm1rYVwiXSxcImF1ZGlvL3gtbXBlZ3VybFwiOltcIm0zdVwiXSxcImF1ZGlvL3gtbXMtd2F4XCI6W1wid2F4XCJdLFwiYXVkaW8veC1tcy13bWFcIjpbXCJ3bWFcIl0sXCJhdWRpby94LXBuLXJlYWxhdWRpb1wiOltcInJhbVwiLFwicmFcIl0sXCJhdWRpby94LXBuLXJlYWxhdWRpby1wbHVnaW5cIjpbXCJybXBcIl0sXCJhdWRpby94LXJlYWxhdWRpb1wiOltcIipyYVwiXSxcImF1ZGlvL3gtd2F2XCI6W1wiKndhdlwiXSxcImNoZW1pY2FsL3gtY2R4XCI6W1wiY2R4XCJdLFwiY2hlbWljYWwveC1jaWZcIjpbXCJjaWZcIl0sXCJjaGVtaWNhbC94LWNtZGZcIjpbXCJjbWRmXCJdLFwiY2hlbWljYWwveC1jbWxcIjpbXCJjbWxcIl0sXCJjaGVtaWNhbC94LWNzbWxcIjpbXCJjc21sXCJdLFwiY2hlbWljYWwveC14eXpcIjpbXCJ4eXpcIl0sXCJpbWFnZS9wcnMuYnRpZlwiOltcImJ0aWZcIl0sXCJpbWFnZS9wcnMucHRpXCI6W1wicHRpXCJdLFwiaW1hZ2Uvdm5kLmFkb2JlLnBob3Rvc2hvcFwiOltcInBzZFwiXSxcImltYWdlL3ZuZC5haXJ6aXAuYWNjZWxlcmF0b3IuYXp2XCI6W1wiYXp2XCJdLFwiaW1hZ2Uvdm5kLmRlY2UuZ3JhcGhpY1wiOltcInV2aVwiLFwidXZ2aVwiLFwidXZnXCIsXCJ1dnZnXCJdLFwiaW1hZ2Uvdm5kLmRqdnVcIjpbXCJkanZ1XCIsXCJkanZcIl0sXCJpbWFnZS92bmQuZHZiLnN1YnRpdGxlXCI6W1wiKnN1YlwiXSxcImltYWdlL3ZuZC5kd2dcIjpbXCJkd2dcIl0sXCJpbWFnZS92bmQuZHhmXCI6W1wiZHhmXCJdLFwiaW1hZ2Uvdm5kLmZhc3RiaWRzaGVldFwiOltcImZic1wiXSxcImltYWdlL3ZuZC5mcHhcIjpbXCJmcHhcIl0sXCJpbWFnZS92bmQuZnN0XCI6W1wiZnN0XCJdLFwiaW1hZ2Uvdm5kLmZ1aml4ZXJveC5lZG1pY3MtbW1yXCI6W1wibW1yXCJdLFwiaW1hZ2Uvdm5kLmZ1aml4ZXJveC5lZG1pY3MtcmxjXCI6W1wicmxjXCJdLFwiaW1hZ2Uvdm5kLm1pY3Jvc29mdC5pY29uXCI6W1wiaWNvXCJdLFwiaW1hZ2Uvdm5kLm1zLWRkc1wiOltcImRkc1wiXSxcImltYWdlL3ZuZC5tcy1tb2RpXCI6W1wibWRpXCJdLFwiaW1hZ2Uvdm5kLm1zLXBob3RvXCI6W1wid2RwXCJdLFwiaW1hZ2Uvdm5kLm5ldC1mcHhcIjpbXCJucHhcIl0sXCJpbWFnZS92bmQucGNvLmIxNlwiOltcImIxNlwiXSxcImltYWdlL3ZuZC50ZW5jZW50LnRhcFwiOltcInRhcFwiXSxcImltYWdlL3ZuZC52YWx2ZS5zb3VyY2UudGV4dHVyZVwiOltcInZ0ZlwiXSxcImltYWdlL3ZuZC53YXAud2JtcFwiOltcIndibXBcIl0sXCJpbWFnZS92bmQueGlmZlwiOltcInhpZlwiXSxcImltYWdlL3ZuZC56YnJ1c2gucGN4XCI6W1wicGN4XCJdLFwiaW1hZ2UveC0zZHNcIjpbXCIzZHNcIl0sXCJpbWFnZS94LWNtdS1yYXN0ZXJcIjpbXCJyYXNcIl0sXCJpbWFnZS94LWNteFwiOltcImNteFwiXSxcImltYWdlL3gtZnJlZWhhbmRcIjpbXCJmaFwiLFwiZmhjXCIsXCJmaDRcIixcImZoNVwiLFwiZmg3XCJdLFwiaW1hZ2UveC1pY29uXCI6W1wiKmljb1wiXSxcImltYWdlL3gtam5nXCI6W1wiam5nXCJdLFwiaW1hZ2UveC1tcnNpZC1pbWFnZVwiOltcInNpZFwiXSxcImltYWdlL3gtbXMtYm1wXCI6W1wiKmJtcFwiXSxcImltYWdlL3gtcGN4XCI6W1wiKnBjeFwiXSxcImltYWdlL3gtcGljdFwiOltcInBpY1wiLFwicGN0XCJdLFwiaW1hZ2UveC1wb3J0YWJsZS1hbnltYXBcIjpbXCJwbm1cIl0sXCJpbWFnZS94LXBvcnRhYmxlLWJpdG1hcFwiOltcInBibVwiXSxcImltYWdlL3gtcG9ydGFibGUtZ3JheW1hcFwiOltcInBnbVwiXSxcImltYWdlL3gtcG9ydGFibGUtcGl4bWFwXCI6W1wicHBtXCJdLFwiaW1hZ2UveC1yZ2JcIjpbXCJyZ2JcIl0sXCJpbWFnZS94LXRnYVwiOltcInRnYVwiXSxcImltYWdlL3gteGJpdG1hcFwiOltcInhibVwiXSxcImltYWdlL3gteHBpeG1hcFwiOltcInhwbVwiXSxcImltYWdlL3gteHdpbmRvd2R1bXBcIjpbXCJ4d2RcIl0sXCJtZXNzYWdlL3ZuZC53ZmEud3NjXCI6W1wid3NjXCJdLFwibW9kZWwvdm5kLmNvbGxhZGEreG1sXCI6W1wiZGFlXCJdLFwibW9kZWwvdm5kLmR3ZlwiOltcImR3ZlwiXSxcIm1vZGVsL3ZuZC5nZGxcIjpbXCJnZGxcIl0sXCJtb2RlbC92bmQuZ3R3XCI6W1wiZ3R3XCJdLFwibW9kZWwvdm5kLm10c1wiOltcIm10c1wiXSxcIm1vZGVsL3ZuZC5vcGVuZ2V4XCI6W1wib2dleFwiXSxcIm1vZGVsL3ZuZC5wYXJhc29saWQudHJhbnNtaXQuYmluYXJ5XCI6W1wieF9iXCJdLFwibW9kZWwvdm5kLnBhcmFzb2xpZC50cmFuc21pdC50ZXh0XCI6W1wieF90XCJdLFwibW9kZWwvdm5kLnNhcC52ZHNcIjpbXCJ2ZHNcIl0sXCJtb2RlbC92bmQudXNkeit6aXBcIjpbXCJ1c2R6XCJdLFwibW9kZWwvdm5kLnZhbHZlLnNvdXJjZS5jb21waWxlZC1tYXBcIjpbXCJic3BcIl0sXCJtb2RlbC92bmQudnR1XCI6W1widnR1XCJdLFwidGV4dC9wcnMubGluZXMudGFnXCI6W1wiZHNjXCJdLFwidGV4dC92bmQuY3VybFwiOltcImN1cmxcIl0sXCJ0ZXh0L3ZuZC5jdXJsLmRjdXJsXCI6W1wiZGN1cmxcIl0sXCJ0ZXh0L3ZuZC5jdXJsLm1jdXJsXCI6W1wibWN1cmxcIl0sXCJ0ZXh0L3ZuZC5jdXJsLnNjdXJsXCI6W1wic2N1cmxcIl0sXCJ0ZXh0L3ZuZC5kdmIuc3VidGl0bGVcIjpbXCJzdWJcIl0sXCJ0ZXh0L3ZuZC5mbHlcIjpbXCJmbHlcIl0sXCJ0ZXh0L3ZuZC5mbWkuZmxleHN0b3JcIjpbXCJmbHhcIl0sXCJ0ZXh0L3ZuZC5ncmFwaHZpelwiOltcImd2XCJdLFwidGV4dC92bmQuaW4zZC4zZG1sXCI6W1wiM2RtbFwiXSxcInRleHQvdm5kLmluM2Quc3BvdFwiOltcInNwb3RcIl0sXCJ0ZXh0L3ZuZC5zdW4uajJtZS5hcHAtZGVzY3JpcHRvclwiOltcImphZFwiXSxcInRleHQvdm5kLndhcC53bWxcIjpbXCJ3bWxcIl0sXCJ0ZXh0L3ZuZC53YXAud21sc2NyaXB0XCI6W1wid21sc1wiXSxcInRleHQveC1hc21cIjpbXCJzXCIsXCJhc21cIl0sXCJ0ZXh0L3gtY1wiOltcImNcIixcImNjXCIsXCJjeHhcIixcImNwcFwiLFwiaFwiLFwiaGhcIixcImRpY1wiXSxcInRleHQveC1jb21wb25lbnRcIjpbXCJodGNcIl0sXCJ0ZXh0L3gtZm9ydHJhblwiOltcImZcIixcImZvclwiLFwiZjc3XCIsXCJmOTBcIl0sXCJ0ZXh0L3gtaGFuZGxlYmFycy10ZW1wbGF0ZVwiOltcImhic1wiXSxcInRleHQveC1qYXZhLXNvdXJjZVwiOltcImphdmFcIl0sXCJ0ZXh0L3gtbHVhXCI6W1wibHVhXCJdLFwidGV4dC94LW1hcmtkb3duXCI6W1wibWtkXCJdLFwidGV4dC94LW5mb1wiOltcIm5mb1wiXSxcInRleHQveC1vcG1sXCI6W1wib3BtbFwiXSxcInRleHQveC1vcmdcIjpbXCIqb3JnXCJdLFwidGV4dC94LXBhc2NhbFwiOltcInBcIixcInBhc1wiXSxcInRleHQveC1wcm9jZXNzaW5nXCI6W1wicGRlXCJdLFwidGV4dC94LXNhc3NcIjpbXCJzYXNzXCJdLFwidGV4dC94LXNjc3NcIjpbXCJzY3NzXCJdLFwidGV4dC94LXNldGV4dFwiOltcImV0eFwiXSxcInRleHQveC1zZnZcIjpbXCJzZnZcIl0sXCJ0ZXh0L3gtc3VzZS15bXBcIjpbXCJ5bXBcIl0sXCJ0ZXh0L3gtdXVlbmNvZGVcIjpbXCJ1dVwiXSxcInRleHQveC12Y2FsZW5kYXJcIjpbXCJ2Y3NcIl0sXCJ0ZXh0L3gtdmNhcmRcIjpbXCJ2Y2ZcIl0sXCJ2aWRlby92bmQuZGVjZS5oZFwiOltcInV2aFwiLFwidXZ2aFwiXSxcInZpZGVvL3ZuZC5kZWNlLm1vYmlsZVwiOltcInV2bVwiLFwidXZ2bVwiXSxcInZpZGVvL3ZuZC5kZWNlLnBkXCI6W1widXZwXCIsXCJ1dnZwXCJdLFwidmlkZW8vdm5kLmRlY2Uuc2RcIjpbXCJ1dnNcIixcInV2dnNcIl0sXCJ2aWRlby92bmQuZGVjZS52aWRlb1wiOltcInV2dlwiLFwidXZ2dlwiXSxcInZpZGVvL3ZuZC5kdmIuZmlsZVwiOltcImR2YlwiXSxcInZpZGVvL3ZuZC5mdnRcIjpbXCJmdnRcIl0sXCJ2aWRlby92bmQubXBlZ3VybFwiOltcIm14dVwiLFwibTR1XCJdLFwidmlkZW8vdm5kLm1zLXBsYXlyZWFkeS5tZWRpYS5weXZcIjpbXCJweXZcIl0sXCJ2aWRlby92bmQudXZ2dS5tcDRcIjpbXCJ1dnVcIixcInV2dnVcIl0sXCJ2aWRlby92bmQudml2b1wiOltcInZpdlwiXSxcInZpZGVvL3gtZjR2XCI6W1wiZjR2XCJdLFwidmlkZW8veC1mbGlcIjpbXCJmbGlcIl0sXCJ2aWRlby94LWZsdlwiOltcImZsdlwiXSxcInZpZGVvL3gtbTR2XCI6W1wibTR2XCJdLFwidmlkZW8veC1tYXRyb3NrYVwiOltcIm1rdlwiLFwibWszZFwiLFwibWtzXCJdLFwidmlkZW8veC1tbmdcIjpbXCJtbmdcIl0sXCJ2aWRlby94LW1zLWFzZlwiOltcImFzZlwiLFwiYXN4XCJdLFwidmlkZW8veC1tcy12b2JcIjpbXCJ2b2JcIl0sXCJ2aWRlby94LW1zLXdtXCI6W1wid21cIl0sXCJ2aWRlby94LW1zLXdtdlwiOltcIndtdlwiXSxcInZpZGVvL3gtbXMtd214XCI6W1wid214XCJdLFwidmlkZW8veC1tcy13dnhcIjpbXCJ3dnhcIl0sXCJ2aWRlby94LW1zdmlkZW9cIjpbXCJhdmlcIl0sXCJ2aWRlby94LXNnaS1tb3ZpZVwiOltcIm1vdmllXCJdLFwidmlkZW8veC1zbXZcIjpbXCJzbXZcIl0sXCJ4LWNvbmZlcmVuY2UveC1jb29sdGFsa1wiOltcImljZVwiXX07IiwibW9kdWxlLmV4cG9ydHMgPSB7XCJhcHBsaWNhdGlvbi9hbmRyZXctaW5zZXRcIjpbXCJlelwiXSxcImFwcGxpY2F0aW9uL2FwcGxpeHdhcmVcIjpbXCJhd1wiXSxcImFwcGxpY2F0aW9uL2F0b20reG1sXCI6W1wiYXRvbVwiXSxcImFwcGxpY2F0aW9uL2F0b21jYXQreG1sXCI6W1wiYXRvbWNhdFwiXSxcImFwcGxpY2F0aW9uL2F0b21kZWxldGVkK3htbFwiOltcImF0b21kZWxldGVkXCJdLFwiYXBwbGljYXRpb24vYXRvbXN2Yyt4bWxcIjpbXCJhdG9tc3ZjXCJdLFwiYXBwbGljYXRpb24vYXRzYy1kd2QreG1sXCI6W1wiZHdkXCJdLFwiYXBwbGljYXRpb24vYXRzYy1oZWxkK3htbFwiOltcImhlbGRcIl0sXCJhcHBsaWNhdGlvbi9hdHNjLXJzYXQreG1sXCI6W1wicnNhdFwiXSxcImFwcGxpY2F0aW9uL2Jkb2NcIjpbXCJiZG9jXCJdLFwiYXBwbGljYXRpb24vY2FsZW5kYXIreG1sXCI6W1wieGNzXCJdLFwiYXBwbGljYXRpb24vY2N4bWwreG1sXCI6W1wiY2N4bWxcIl0sXCJhcHBsaWNhdGlvbi9jZGZ4K3htbFwiOltcImNkZnhcIl0sXCJhcHBsaWNhdGlvbi9jZG1pLWNhcGFiaWxpdHlcIjpbXCJjZG1pYVwiXSxcImFwcGxpY2F0aW9uL2NkbWktY29udGFpbmVyXCI6W1wiY2RtaWNcIl0sXCJhcHBsaWNhdGlvbi9jZG1pLWRvbWFpblwiOltcImNkbWlkXCJdLFwiYXBwbGljYXRpb24vY2RtaS1vYmplY3RcIjpbXCJjZG1pb1wiXSxcImFwcGxpY2F0aW9uL2NkbWktcXVldWVcIjpbXCJjZG1pcVwiXSxcImFwcGxpY2F0aW9uL2N1LXNlZW1lXCI6W1wiY3VcIl0sXCJhcHBsaWNhdGlvbi9kYXNoK3htbFwiOltcIm1wZFwiXSxcImFwcGxpY2F0aW9uL2Rhdm1vdW50K3htbFwiOltcImRhdm1vdW50XCJdLFwiYXBwbGljYXRpb24vZG9jYm9vayt4bWxcIjpbXCJkYmtcIl0sXCJhcHBsaWNhdGlvbi9kc3NjK2RlclwiOltcImRzc2NcIl0sXCJhcHBsaWNhdGlvbi9kc3NjK3htbFwiOltcInhkc3NjXCJdLFwiYXBwbGljYXRpb24vZWNtYXNjcmlwdFwiOltcImVzXCIsXCJlY21hXCJdLFwiYXBwbGljYXRpb24vZW1tYSt4bWxcIjpbXCJlbW1hXCJdLFwiYXBwbGljYXRpb24vZW1vdGlvbm1sK3htbFwiOltcImVtb3Rpb25tbFwiXSxcImFwcGxpY2F0aW9uL2VwdWIremlwXCI6W1wiZXB1YlwiXSxcImFwcGxpY2F0aW9uL2V4aVwiOltcImV4aVwiXSxcImFwcGxpY2F0aW9uL2V4cHJlc3NcIjpbXCJleHBcIl0sXCJhcHBsaWNhdGlvbi9mZHQreG1sXCI6W1wiZmR0XCJdLFwiYXBwbGljYXRpb24vZm9udC10ZHBmclwiOltcInBmclwiXSxcImFwcGxpY2F0aW9uL2dlbytqc29uXCI6W1wiZ2VvanNvblwiXSxcImFwcGxpY2F0aW9uL2dtbCt4bWxcIjpbXCJnbWxcIl0sXCJhcHBsaWNhdGlvbi9ncHgreG1sXCI6W1wiZ3B4XCJdLFwiYXBwbGljYXRpb24vZ3hmXCI6W1wiZ3hmXCJdLFwiYXBwbGljYXRpb24vZ3ppcFwiOltcImd6XCJdLFwiYXBwbGljYXRpb24vaGpzb25cIjpbXCJoanNvblwiXSxcImFwcGxpY2F0aW9uL2h5cGVyc3R1ZGlvXCI6W1wic3RrXCJdLFwiYXBwbGljYXRpb24vaW5rbWwreG1sXCI6W1wiaW5rXCIsXCJpbmttbFwiXSxcImFwcGxpY2F0aW9uL2lwZml4XCI6W1wiaXBmaXhcIl0sXCJhcHBsaWNhdGlvbi9pdHMreG1sXCI6W1wiaXRzXCJdLFwiYXBwbGljYXRpb24vamF2YS1hcmNoaXZlXCI6W1wiamFyXCIsXCJ3YXJcIixcImVhclwiXSxcImFwcGxpY2F0aW9uL2phdmEtc2VyaWFsaXplZC1vYmplY3RcIjpbXCJzZXJcIl0sXCJhcHBsaWNhdGlvbi9qYXZhLXZtXCI6W1wiY2xhc3NcIl0sXCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCI6W1wianNcIixcIm1qc1wiXSxcImFwcGxpY2F0aW9uL2pzb25cIjpbXCJqc29uXCIsXCJtYXBcIl0sXCJhcHBsaWNhdGlvbi9qc29uNVwiOltcImpzb241XCJdLFwiYXBwbGljYXRpb24vanNvbm1sK2pzb25cIjpbXCJqc29ubWxcIl0sXCJhcHBsaWNhdGlvbi9sZCtqc29uXCI6W1wianNvbmxkXCJdLFwiYXBwbGljYXRpb24vbGdyK3htbFwiOltcImxnclwiXSxcImFwcGxpY2F0aW9uL2xvc3QreG1sXCI6W1wibG9zdHhtbFwiXSxcImFwcGxpY2F0aW9uL21hYy1iaW5oZXg0MFwiOltcImhxeFwiXSxcImFwcGxpY2F0aW9uL21hYy1jb21wYWN0cHJvXCI6W1wiY3B0XCJdLFwiYXBwbGljYXRpb24vbWFkcyt4bWxcIjpbXCJtYWRzXCJdLFwiYXBwbGljYXRpb24vbWFuaWZlc3QranNvblwiOltcIndlYm1hbmlmZXN0XCJdLFwiYXBwbGljYXRpb24vbWFyY1wiOltcIm1yY1wiXSxcImFwcGxpY2F0aW9uL21hcmN4bWwreG1sXCI6W1wibXJjeFwiXSxcImFwcGxpY2F0aW9uL21hdGhlbWF0aWNhXCI6W1wibWFcIixcIm5iXCIsXCJtYlwiXSxcImFwcGxpY2F0aW9uL21hdGhtbCt4bWxcIjpbXCJtYXRobWxcIl0sXCJhcHBsaWNhdGlvbi9tYm94XCI6W1wibWJveFwiXSxcImFwcGxpY2F0aW9uL21lZGlhc2VydmVyY29udHJvbCt4bWxcIjpbXCJtc2NtbFwiXSxcImFwcGxpY2F0aW9uL21ldGFsaW5rK3htbFwiOltcIm1ldGFsaW5rXCJdLFwiYXBwbGljYXRpb24vbWV0YWxpbms0K3htbFwiOltcIm1ldGE0XCJdLFwiYXBwbGljYXRpb24vbWV0cyt4bWxcIjpbXCJtZXRzXCJdLFwiYXBwbGljYXRpb24vbW10LWFlaSt4bWxcIjpbXCJtYWVpXCJdLFwiYXBwbGljYXRpb24vbW10LXVzZCt4bWxcIjpbXCJtdXNkXCJdLFwiYXBwbGljYXRpb24vbW9kcyt4bWxcIjpbXCJtb2RzXCJdLFwiYXBwbGljYXRpb24vbXAyMVwiOltcIm0yMVwiLFwibXAyMVwiXSxcImFwcGxpY2F0aW9uL21wNFwiOltcIm1wNHNcIixcIm00cFwiXSxcImFwcGxpY2F0aW9uL21zd29yZFwiOltcImRvY1wiLFwiZG90XCJdLFwiYXBwbGljYXRpb24vbXhmXCI6W1wibXhmXCJdLFwiYXBwbGljYXRpb24vbi1xdWFkc1wiOltcIm5xXCJdLFwiYXBwbGljYXRpb24vbi10cmlwbGVzXCI6W1wibnRcIl0sXCJhcHBsaWNhdGlvbi9ub2RlXCI6W1wiY2pzXCJdLFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI6W1wiYmluXCIsXCJkbXNcIixcImxyZlwiLFwibWFyXCIsXCJzb1wiLFwiZGlzdFwiLFwiZGlzdHpcIixcInBrZ1wiLFwiYnBrXCIsXCJkdW1wXCIsXCJlbGNcIixcImRlcGxveVwiLFwiZXhlXCIsXCJkbGxcIixcImRlYlwiLFwiZG1nXCIsXCJpc29cIixcImltZ1wiLFwibXNpXCIsXCJtc3BcIixcIm1zbVwiLFwiYnVmZmVyXCJdLFwiYXBwbGljYXRpb24vb2RhXCI6W1wib2RhXCJdLFwiYXBwbGljYXRpb24vb2VicHMtcGFja2FnZSt4bWxcIjpbXCJvcGZcIl0sXCJhcHBsaWNhdGlvbi9vZ2dcIjpbXCJvZ3hcIl0sXCJhcHBsaWNhdGlvbi9vbWRvYyt4bWxcIjpbXCJvbWRvY1wiXSxcImFwcGxpY2F0aW9uL29uZW5vdGVcIjpbXCJvbmV0b2NcIixcIm9uZXRvYzJcIixcIm9uZXRtcFwiLFwib25lcGtnXCJdLFwiYXBwbGljYXRpb24vb3hwc1wiOltcIm94cHNcIl0sXCJhcHBsaWNhdGlvbi9wMnAtb3ZlcmxheSt4bWxcIjpbXCJyZWxvXCJdLFwiYXBwbGljYXRpb24vcGF0Y2gtb3BzLWVycm9yK3htbFwiOltcInhlclwiXSxcImFwcGxpY2F0aW9uL3BkZlwiOltcInBkZlwiXSxcImFwcGxpY2F0aW9uL3BncC1lbmNyeXB0ZWRcIjpbXCJwZ3BcIl0sXCJhcHBsaWNhdGlvbi9wZ3Atc2lnbmF0dXJlXCI6W1wiYXNjXCIsXCJzaWdcIl0sXCJhcHBsaWNhdGlvbi9waWNzLXJ1bGVzXCI6W1wicHJmXCJdLFwiYXBwbGljYXRpb24vcGtjczEwXCI6W1wicDEwXCJdLFwiYXBwbGljYXRpb24vcGtjczctbWltZVwiOltcInA3bVwiLFwicDdjXCJdLFwiYXBwbGljYXRpb24vcGtjczctc2lnbmF0dXJlXCI6W1wicDdzXCJdLFwiYXBwbGljYXRpb24vcGtjczhcIjpbXCJwOFwiXSxcImFwcGxpY2F0aW9uL3BraXgtYXR0ci1jZXJ0XCI6W1wiYWNcIl0sXCJhcHBsaWNhdGlvbi9wa2l4LWNlcnRcIjpbXCJjZXJcIl0sXCJhcHBsaWNhdGlvbi9wa2l4LWNybFwiOltcImNybFwiXSxcImFwcGxpY2F0aW9uL3BraXgtcGtpcGF0aFwiOltcInBraXBhdGhcIl0sXCJhcHBsaWNhdGlvbi9wa2l4Y21wXCI6W1wicGtpXCJdLFwiYXBwbGljYXRpb24vcGxzK3htbFwiOltcInBsc1wiXSxcImFwcGxpY2F0aW9uL3Bvc3RzY3JpcHRcIjpbXCJhaVwiLFwiZXBzXCIsXCJwc1wiXSxcImFwcGxpY2F0aW9uL3Byb3ZlbmFuY2UreG1sXCI6W1wicHJvdnhcIl0sXCJhcHBsaWNhdGlvbi9wc2tjK3htbFwiOltcInBza2N4bWxcIl0sXCJhcHBsaWNhdGlvbi9yYW1sK3lhbWxcIjpbXCJyYW1sXCJdLFwiYXBwbGljYXRpb24vcmRmK3htbFwiOltcInJkZlwiLFwib3dsXCJdLFwiYXBwbGljYXRpb24vcmVnaW5mbyt4bWxcIjpbXCJyaWZcIl0sXCJhcHBsaWNhdGlvbi9yZWxheC1uZy1jb21wYWN0LXN5bnRheFwiOltcInJuY1wiXSxcImFwcGxpY2F0aW9uL3Jlc291cmNlLWxpc3RzK3htbFwiOltcInJsXCJdLFwiYXBwbGljYXRpb24vcmVzb3VyY2UtbGlzdHMtZGlmZit4bWxcIjpbXCJybGRcIl0sXCJhcHBsaWNhdGlvbi9ybHMtc2VydmljZXMreG1sXCI6W1wicnNcIl0sXCJhcHBsaWNhdGlvbi9yb3V0ZS1hcGQreG1sXCI6W1wicmFwZFwiXSxcImFwcGxpY2F0aW9uL3JvdXRlLXMtdHNpZCt4bWxcIjpbXCJzbHNcIl0sXCJhcHBsaWNhdGlvbi9yb3V0ZS11c2QreG1sXCI6W1wicnVzZFwiXSxcImFwcGxpY2F0aW9uL3Jwa2ktZ2hvc3RidXN0ZXJzXCI6W1wiZ2JyXCJdLFwiYXBwbGljYXRpb24vcnBraS1tYW5pZmVzdFwiOltcIm1mdFwiXSxcImFwcGxpY2F0aW9uL3Jwa2ktcm9hXCI6W1wicm9hXCJdLFwiYXBwbGljYXRpb24vcnNkK3htbFwiOltcInJzZFwiXSxcImFwcGxpY2F0aW9uL3Jzcyt4bWxcIjpbXCJyc3NcIl0sXCJhcHBsaWNhdGlvbi9ydGZcIjpbXCJydGZcIl0sXCJhcHBsaWNhdGlvbi9zYm1sK3htbFwiOltcInNibWxcIl0sXCJhcHBsaWNhdGlvbi9zY3ZwLWN2LXJlcXVlc3RcIjpbXCJzY3FcIl0sXCJhcHBsaWNhdGlvbi9zY3ZwLWN2LXJlc3BvbnNlXCI6W1wic2NzXCJdLFwiYXBwbGljYXRpb24vc2N2cC12cC1yZXF1ZXN0XCI6W1wic3BxXCJdLFwiYXBwbGljYXRpb24vc2N2cC12cC1yZXNwb25zZVwiOltcInNwcFwiXSxcImFwcGxpY2F0aW9uL3NkcFwiOltcInNkcFwiXSxcImFwcGxpY2F0aW9uL3Nlbm1sK3htbFwiOltcInNlbm1seFwiXSxcImFwcGxpY2F0aW9uL3NlbnNtbCt4bWxcIjpbXCJzZW5zbWx4XCJdLFwiYXBwbGljYXRpb24vc2V0LXBheW1lbnQtaW5pdGlhdGlvblwiOltcInNldHBheVwiXSxcImFwcGxpY2F0aW9uL3NldC1yZWdpc3RyYXRpb24taW5pdGlhdGlvblwiOltcInNldHJlZ1wiXSxcImFwcGxpY2F0aW9uL3NoZit4bWxcIjpbXCJzaGZcIl0sXCJhcHBsaWNhdGlvbi9zaWV2ZVwiOltcInNpdlwiLFwic2lldmVcIl0sXCJhcHBsaWNhdGlvbi9zbWlsK3htbFwiOltcInNtaVwiLFwic21pbFwiXSxcImFwcGxpY2F0aW9uL3NwYXJxbC1xdWVyeVwiOltcInJxXCJdLFwiYXBwbGljYXRpb24vc3BhcnFsLXJlc3VsdHMreG1sXCI6W1wic3J4XCJdLFwiYXBwbGljYXRpb24vc3Jnc1wiOltcImdyYW1cIl0sXCJhcHBsaWNhdGlvbi9zcmdzK3htbFwiOltcImdyeG1sXCJdLFwiYXBwbGljYXRpb24vc3J1K3htbFwiOltcInNydVwiXSxcImFwcGxpY2F0aW9uL3NzZGwreG1sXCI6W1wic3NkbFwiXSxcImFwcGxpY2F0aW9uL3NzbWwreG1sXCI6W1wic3NtbFwiXSxcImFwcGxpY2F0aW9uL3N3aWQreG1sXCI6W1wic3dpZHRhZ1wiXSxcImFwcGxpY2F0aW9uL3RlaSt4bWxcIjpbXCJ0ZWlcIixcInRlaWNvcnB1c1wiXSxcImFwcGxpY2F0aW9uL3RocmF1ZCt4bWxcIjpbXCJ0ZmlcIl0sXCJhcHBsaWNhdGlvbi90aW1lc3RhbXBlZC1kYXRhXCI6W1widHNkXCJdLFwiYXBwbGljYXRpb24vdG9tbFwiOltcInRvbWxcIl0sXCJhcHBsaWNhdGlvbi90cmlnXCI6W1widHJpZ1wiXSxcImFwcGxpY2F0aW9uL3R0bWwreG1sXCI6W1widHRtbFwiXSxcImFwcGxpY2F0aW9uL3VianNvblwiOltcInVialwiXSxcImFwcGxpY2F0aW9uL3VyYy1yZXNzaGVldCt4bWxcIjpbXCJyc2hlZXRcIl0sXCJhcHBsaWNhdGlvbi91cmMtdGFyZ2V0ZGVzYyt4bWxcIjpbXCJ0ZFwiXSxcImFwcGxpY2F0aW9uL3ZvaWNleG1sK3htbFwiOltcInZ4bWxcIl0sXCJhcHBsaWNhdGlvbi93YXNtXCI6W1wid2FzbVwiXSxcImFwcGxpY2F0aW9uL3dpZGdldFwiOltcIndndFwiXSxcImFwcGxpY2F0aW9uL3dpbmhscFwiOltcImhscFwiXSxcImFwcGxpY2F0aW9uL3dzZGwreG1sXCI6W1wid3NkbFwiXSxcImFwcGxpY2F0aW9uL3dzcG9saWN5K3htbFwiOltcIndzcG9saWN5XCJdLFwiYXBwbGljYXRpb24veGFtbCt4bWxcIjpbXCJ4YW1sXCJdLFwiYXBwbGljYXRpb24veGNhcC1hdHQreG1sXCI6W1wieGF2XCJdLFwiYXBwbGljYXRpb24veGNhcC1jYXBzK3htbFwiOltcInhjYVwiXSxcImFwcGxpY2F0aW9uL3hjYXAtZGlmZit4bWxcIjpbXCJ4ZGZcIl0sXCJhcHBsaWNhdGlvbi94Y2FwLWVsK3htbFwiOltcInhlbFwiXSxcImFwcGxpY2F0aW9uL3hjYXAtbnMreG1sXCI6W1wieG5zXCJdLFwiYXBwbGljYXRpb24veGVuYyt4bWxcIjpbXCJ4ZW5jXCJdLFwiYXBwbGljYXRpb24veGh0bWwreG1sXCI6W1wieGh0bWxcIixcInhodFwiXSxcImFwcGxpY2F0aW9uL3hsaWZmK3htbFwiOltcInhsZlwiXSxcImFwcGxpY2F0aW9uL3htbFwiOltcInhtbFwiLFwieHNsXCIsXCJ4c2RcIixcInJuZ1wiXSxcImFwcGxpY2F0aW9uL3htbC1kdGRcIjpbXCJkdGRcIl0sXCJhcHBsaWNhdGlvbi94b3AreG1sXCI6W1wieG9wXCJdLFwiYXBwbGljYXRpb24veHByb2MreG1sXCI6W1wieHBsXCJdLFwiYXBwbGljYXRpb24veHNsdCt4bWxcIjpbXCIqeHNsXCIsXCJ4c2x0XCJdLFwiYXBwbGljYXRpb24veHNwZit4bWxcIjpbXCJ4c3BmXCJdLFwiYXBwbGljYXRpb24veHYreG1sXCI6W1wibXhtbFwiLFwieGh2bWxcIixcInh2bWxcIixcInh2bVwiXSxcImFwcGxpY2F0aW9uL3lhbmdcIjpbXCJ5YW5nXCJdLFwiYXBwbGljYXRpb24veWluK3htbFwiOltcInlpblwiXSxcImFwcGxpY2F0aW9uL3ppcFwiOltcInppcFwiXSxcImF1ZGlvLzNncHBcIjpbXCIqM2dwcFwiXSxcImF1ZGlvL2FkcGNtXCI6W1wiYWRwXCJdLFwiYXVkaW8vYW1yXCI6W1wiYW1yXCJdLFwiYXVkaW8vYmFzaWNcIjpbXCJhdVwiLFwic25kXCJdLFwiYXVkaW8vbWlkaVwiOltcIm1pZFwiLFwibWlkaVwiLFwia2FyXCIsXCJybWlcIl0sXCJhdWRpby9tb2JpbGUteG1mXCI6W1wibXhtZlwiXSxcImF1ZGlvL21wM1wiOltcIiptcDNcIl0sXCJhdWRpby9tcDRcIjpbXCJtNGFcIixcIm1wNGFcIl0sXCJhdWRpby9tcGVnXCI6W1wibXBnYVwiLFwibXAyXCIsXCJtcDJhXCIsXCJtcDNcIixcIm0yYVwiLFwibTNhXCJdLFwiYXVkaW8vb2dnXCI6W1wib2dhXCIsXCJvZ2dcIixcInNweFwiLFwib3B1c1wiXSxcImF1ZGlvL3MzbVwiOltcInMzbVwiXSxcImF1ZGlvL3NpbGtcIjpbXCJzaWxcIl0sXCJhdWRpby93YXZcIjpbXCJ3YXZcIl0sXCJhdWRpby93YXZlXCI6W1wiKndhdlwiXSxcImF1ZGlvL3dlYm1cIjpbXCJ3ZWJhXCJdLFwiYXVkaW8veG1cIjpbXCJ4bVwiXSxcImZvbnQvY29sbGVjdGlvblwiOltcInR0Y1wiXSxcImZvbnQvb3RmXCI6W1wib3RmXCJdLFwiZm9udC90dGZcIjpbXCJ0dGZcIl0sXCJmb250L3dvZmZcIjpbXCJ3b2ZmXCJdLFwiZm9udC93b2ZmMlwiOltcIndvZmYyXCJdLFwiaW1hZ2UvYWNlc1wiOltcImV4clwiXSxcImltYWdlL2FwbmdcIjpbXCJhcG5nXCJdLFwiaW1hZ2UvYXZpZlwiOltcImF2aWZcIl0sXCJpbWFnZS9ibXBcIjpbXCJibXBcIl0sXCJpbWFnZS9jZ21cIjpbXCJjZ21cIl0sXCJpbWFnZS9kaWNvbS1ybGVcIjpbXCJkcmxlXCJdLFwiaW1hZ2UvZW1mXCI6W1wiZW1mXCJdLFwiaW1hZ2UvZml0c1wiOltcImZpdHNcIl0sXCJpbWFnZS9nM2ZheFwiOltcImczXCJdLFwiaW1hZ2UvZ2lmXCI6W1wiZ2lmXCJdLFwiaW1hZ2UvaGVpY1wiOltcImhlaWNcIl0sXCJpbWFnZS9oZWljLXNlcXVlbmNlXCI6W1wiaGVpY3NcIl0sXCJpbWFnZS9oZWlmXCI6W1wiaGVpZlwiXSxcImltYWdlL2hlaWYtc2VxdWVuY2VcIjpbXCJoZWlmc1wiXSxcImltYWdlL2hlajJrXCI6W1wiaGVqMlwiXSxcImltYWdlL2hzajJcIjpbXCJoc2oyXCJdLFwiaW1hZ2UvaWVmXCI6W1wiaWVmXCJdLFwiaW1hZ2UvamxzXCI6W1wiamxzXCJdLFwiaW1hZ2UvanAyXCI6W1wianAyXCIsXCJqcGcyXCJdLFwiaW1hZ2UvanBlZ1wiOltcImpwZWdcIixcImpwZ1wiLFwianBlXCJdLFwiaW1hZ2UvanBoXCI6W1wianBoXCJdLFwiaW1hZ2UvanBoY1wiOltcImpoY1wiXSxcImltYWdlL2pwbVwiOltcImpwbVwiXSxcImltYWdlL2pweFwiOltcImpweFwiLFwianBmXCJdLFwiaW1hZ2UvanhyXCI6W1wianhyXCJdLFwiaW1hZ2UvanhyYVwiOltcImp4cmFcIl0sXCJpbWFnZS9qeHJzXCI6W1wianhyc1wiXSxcImltYWdlL2p4c1wiOltcImp4c1wiXSxcImltYWdlL2p4c2NcIjpbXCJqeHNjXCJdLFwiaW1hZ2UvanhzaVwiOltcImp4c2lcIl0sXCJpbWFnZS9qeHNzXCI6W1wianhzc1wiXSxcImltYWdlL2t0eFwiOltcImt0eFwiXSxcImltYWdlL2t0eDJcIjpbXCJrdHgyXCJdLFwiaW1hZ2UvcG5nXCI6W1wicG5nXCJdLFwiaW1hZ2Uvc2dpXCI6W1wic2dpXCJdLFwiaW1hZ2Uvc3ZnK3htbFwiOltcInN2Z1wiLFwic3ZnelwiXSxcImltYWdlL3QzOFwiOltcInQzOFwiXSxcImltYWdlL3RpZmZcIjpbXCJ0aWZcIixcInRpZmZcIl0sXCJpbWFnZS90aWZmLWZ4XCI6W1widGZ4XCJdLFwiaW1hZ2Uvd2VicFwiOltcIndlYnBcIl0sXCJpbWFnZS93bWZcIjpbXCJ3bWZcIl0sXCJtZXNzYWdlL2Rpc3Bvc2l0aW9uLW5vdGlmaWNhdGlvblwiOltcImRpc3Bvc2l0aW9uLW5vdGlmaWNhdGlvblwiXSxcIm1lc3NhZ2UvZ2xvYmFsXCI6W1widThtc2dcIl0sXCJtZXNzYWdlL2dsb2JhbC1kZWxpdmVyeS1zdGF0dXNcIjpbXCJ1OGRzblwiXSxcIm1lc3NhZ2UvZ2xvYmFsLWRpc3Bvc2l0aW9uLW5vdGlmaWNhdGlvblwiOltcInU4bWRuXCJdLFwibWVzc2FnZS9nbG9iYWwtaGVhZGVyc1wiOltcInU4aGRyXCJdLFwibWVzc2FnZS9yZmM4MjJcIjpbXCJlbWxcIixcIm1pbWVcIl0sXCJtb2RlbC8zbWZcIjpbXCIzbWZcIl0sXCJtb2RlbC9nbHRmK2pzb25cIjpbXCJnbHRmXCJdLFwibW9kZWwvZ2x0Zi1iaW5hcnlcIjpbXCJnbGJcIl0sXCJtb2RlbC9pZ2VzXCI6W1wiaWdzXCIsXCJpZ2VzXCJdLFwibW9kZWwvbWVzaFwiOltcIm1zaFwiLFwibWVzaFwiLFwic2lsb1wiXSxcIm1vZGVsL210bFwiOltcIm10bFwiXSxcIm1vZGVsL29ialwiOltcIm9ialwiXSxcIm1vZGVsL3N0ZXAreG1sXCI6W1wic3RweFwiXSxcIm1vZGVsL3N0ZXAremlwXCI6W1wic3RwelwiXSxcIm1vZGVsL3N0ZXAteG1sK3ppcFwiOltcInN0cHh6XCJdLFwibW9kZWwvc3RsXCI6W1wic3RsXCJdLFwibW9kZWwvdnJtbFwiOltcIndybFwiLFwidnJtbFwiXSxcIm1vZGVsL3gzZCtiaW5hcnlcIjpbXCIqeDNkYlwiLFwieDNkYnpcIl0sXCJtb2RlbC94M2QrZmFzdGluZm9zZXRcIjpbXCJ4M2RiXCJdLFwibW9kZWwveDNkK3ZybWxcIjpbXCIqeDNkdlwiLFwieDNkdnpcIl0sXCJtb2RlbC94M2QreG1sXCI6W1wieDNkXCIsXCJ4M2R6XCJdLFwibW9kZWwveDNkLXZybWxcIjpbXCJ4M2R2XCJdLFwidGV4dC9jYWNoZS1tYW5pZmVzdFwiOltcImFwcGNhY2hlXCIsXCJtYW5pZmVzdFwiXSxcInRleHQvY2FsZW5kYXJcIjpbXCJpY3NcIixcImlmYlwiXSxcInRleHQvY29mZmVlc2NyaXB0XCI6W1wiY29mZmVlXCIsXCJsaXRjb2ZmZWVcIl0sXCJ0ZXh0L2Nzc1wiOltcImNzc1wiXSxcInRleHQvY3N2XCI6W1wiY3N2XCJdLFwidGV4dC9odG1sXCI6W1wiaHRtbFwiLFwiaHRtXCIsXCJzaHRtbFwiXSxcInRleHQvamFkZVwiOltcImphZGVcIl0sXCJ0ZXh0L2pzeFwiOltcImpzeFwiXSxcInRleHQvbGVzc1wiOltcImxlc3NcIl0sXCJ0ZXh0L21hcmtkb3duXCI6W1wibWFya2Rvd25cIixcIm1kXCJdLFwidGV4dC9tYXRobWxcIjpbXCJtbWxcIl0sXCJ0ZXh0L21keFwiOltcIm1keFwiXSxcInRleHQvbjNcIjpbXCJuM1wiXSxcInRleHQvcGxhaW5cIjpbXCJ0eHRcIixcInRleHRcIixcImNvbmZcIixcImRlZlwiLFwibGlzdFwiLFwibG9nXCIsXCJpblwiLFwiaW5pXCJdLFwidGV4dC9yaWNodGV4dFwiOltcInJ0eFwiXSxcInRleHQvcnRmXCI6W1wiKnJ0ZlwiXSxcInRleHQvc2dtbFwiOltcInNnbWxcIixcInNnbVwiXSxcInRleHQvc2hleFwiOltcInNoZXhcIl0sXCJ0ZXh0L3NsaW1cIjpbXCJzbGltXCIsXCJzbG1cIl0sXCJ0ZXh0L3NwZHhcIjpbXCJzcGR4XCJdLFwidGV4dC9zdHlsdXNcIjpbXCJzdHlsdXNcIixcInN0eWxcIl0sXCJ0ZXh0L3RhYi1zZXBhcmF0ZWQtdmFsdWVzXCI6W1widHN2XCJdLFwidGV4dC90cm9mZlwiOltcInRcIixcInRyXCIsXCJyb2ZmXCIsXCJtYW5cIixcIm1lXCIsXCJtc1wiXSxcInRleHQvdHVydGxlXCI6W1widHRsXCJdLFwidGV4dC91cmktbGlzdFwiOltcInVyaVwiLFwidXJpc1wiLFwidXJsc1wiXSxcInRleHQvdmNhcmRcIjpbXCJ2Y2FyZFwiXSxcInRleHQvdnR0XCI6W1widnR0XCJdLFwidGV4dC94bWxcIjpbXCIqeG1sXCJdLFwidGV4dC95YW1sXCI6W1wieWFtbFwiLFwieW1sXCJdLFwidmlkZW8vM2dwcFwiOltcIjNncFwiLFwiM2dwcFwiXSxcInZpZGVvLzNncHAyXCI6W1wiM2cyXCJdLFwidmlkZW8vaDI2MVwiOltcImgyNjFcIl0sXCJ2aWRlby9oMjYzXCI6W1wiaDI2M1wiXSxcInZpZGVvL2gyNjRcIjpbXCJoMjY0XCJdLFwidmlkZW8vaXNvLnNlZ21lbnRcIjpbXCJtNHNcIl0sXCJ2aWRlby9qcGVnXCI6W1wianBndlwiXSxcInZpZGVvL2pwbVwiOltcIipqcG1cIixcImpwZ21cIl0sXCJ2aWRlby9tajJcIjpbXCJtajJcIixcIm1qcDJcIl0sXCJ2aWRlby9tcDJ0XCI6W1widHNcIl0sXCJ2aWRlby9tcDRcIjpbXCJtcDRcIixcIm1wNHZcIixcIm1wZzRcIl0sXCJ2aWRlby9tcGVnXCI6W1wibXBlZ1wiLFwibXBnXCIsXCJtcGVcIixcIm0xdlwiLFwibTJ2XCJdLFwidmlkZW8vb2dnXCI6W1wib2d2XCJdLFwidmlkZW8vcXVpY2t0aW1lXCI6W1wicXRcIixcIm1vdlwiXSxcInZpZGVvL3dlYm1cIjpbXCJ3ZWJtXCJdfTsiLCIvKiEgRm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gcGxlYXNlIHNlZSBhbGdvc2RrLm1pbi5qcy5MSUNFTlNFLnR4dCAqL1xuIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hbGdvc2RrPXQoKTplLmFsZ29zZGs9dCgpfShzZWxmLChmdW5jdGlvbigpe3JldHVybigoKT0+e3ZhciBfX3dlYnBhY2tfbW9kdWxlc19fPXs1NDA2OmZ1bmN0aW9uKGUpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiByKG4pe2lmKHRbbl0pcmV0dXJuIHRbbl0uZXhwb3J0czt2YXIgbz10W25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyxyKSxvLmw9ITAsby5leHBvcnRzfXJldHVybiByLm09ZSxyLmM9dCxyLmQ9ZnVuY3Rpb24oZSx0LG4pe3IubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpufSl9LHIucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxyLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPXIoZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtpZihyLnIobiksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBvIGluIGUpci5kKG4sbyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLG8pKTtyZXR1cm4gbn0sci5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiByLmQodCxcImFcIix0KSx0fSxyLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHIucD1cIlwiLHIoci5zPTApfShbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3Iucih0KSxyLmQodCxcImVuY29kZVwiLChmdW5jdGlvbigpe3JldHVybiBVfSkpLHIuZCh0LFwiZGVjb2RlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEh9KSksci5kKHQsXCJkZWNvZGVBc3luY1wiLChmdW5jdGlvbigpe3JldHVybiBXfSkpLHIuZCh0LFwiZGVjb2RlQXJyYXlTdHJlYW1cIiwoZnVuY3Rpb24oKXtyZXR1cm4gWH0pKSxyLmQodCxcImRlY29kZVN0cmVhbVwiLChmdW5jdGlvbigpe3JldHVybiBZfSkpLHIuZCh0LFwiRGVjb2RlclwiLChmdW5jdGlvbigpe3JldHVybiBqfSkpLHIuZCh0LFwiRW5jb2RlclwiLChmdW5jdGlvbigpe3JldHVybiBffSkpLHIuZCh0LFwiRXh0ZW5zaW9uQ29kZWNcIiwoZnVuY3Rpb24oKXtyZXR1cm4geH0pKSxyLmQodCxcIkV4dERhdGFcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZn0pKSxyLmQodCxcIkVYVF9USU1FU1RBTVBcIiwoZnVuY3Rpb24oKXtyZXR1cm4geX0pKSxyLmQodCxcImVuY29kZURhdGVUb1RpbWVTcGVjXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KSksci5kKHQsXCJlbmNvZGVUaW1lU3BlY1RvVGltZXN0YW1wXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG19KSksci5kKHQsXCJkZWNvZGVUaW1lc3RhbXBUb1RpbWVTcGVjXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHd9KSksci5kKHQsXCJlbmNvZGVUaW1lc3RhbXBFeHRlbnNpb25cIiwoZnVuY3Rpb24oKXtyZXR1cm4gQX0pKSxyLmQodCxcImRlY29kZVRpbWVzdGFtcEV4dGVuc2lvblwiLChmdW5jdGlvbigpe3JldHVybiB2fSkpO3ZhciBuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl07aWYoIXIpcmV0dXJuIGU7dmFyIG4sbyxzPXIuY2FsbChlKSxpPVtdO3RyeXtmb3IoOyh2b2lkIDA9PT10fHx0LS0gPjApJiYhKG49cy5uZXh0KCkpLmRvbmU7KWkucHVzaChuLnZhbHVlKX1jYXRjaChlKXtvPXtlcnJvcjplfX1maW5hbGx5e3RyeXtuJiYhbi5kb25lJiYocj1zLnJldHVybikmJnIuY2FsbChzKX1maW5hbGx5e2lmKG8pdGhyb3cgby5lcnJvcn19cmV0dXJuIGl9LG89ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0KyspZT1lLmNvbmNhdChuKGFyZ3VtZW50c1t0XSkpO3JldHVybiBlfSxzPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgVGV4dEVuY29kZXImJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBUZXh0RGVjb2RlcjtmdW5jdGlvbiBpKGUpe2Zvcih2YXIgdD1lLmxlbmd0aCxyPTAsbj0wO248dDspe3ZhciBvPWUuY2hhckNvZGVBdChuKyspO2lmKDAhPSg0Mjk0OTY3MTY4Jm8pKWlmKDA9PSg0Mjk0OTY1MjQ4Jm8pKXIrPTI7ZWxzZXtpZihvPj01NTI5NiYmbzw9NTYzMTkmJm48dCl7dmFyIHM9ZS5jaGFyQ29kZUF0KG4pOzU2MzIwPT0oNjQ1MTImcykmJigrK24sbz0oKDEwMjMmbyk8PDEwKSsoMTAyMyZzKSs2NTUzNil9cis9MD09KDQyOTQ5MDE3NjAmbyk/Mzo0fWVsc2UgcisrfXJldHVybiByfXZhciBhPXM/bmV3IFRleHRFbmNvZGVyOnZvaWQgMCxjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzPzIwMDowLHU9KG51bGw9PWE/dm9pZCAwOmEuZW5jb2RlSW50byk/ZnVuY3Rpb24oZSx0LHIpe2EuZW5jb2RlSW50byhlLHQuc3ViYXJyYXkocikpfTpmdW5jdGlvbihlLHQscil7dC5zZXQoYS5lbmNvZGUoZSkscil9O2Z1bmN0aW9uIGwoZSx0LHIpe2Zvcih2YXIgbj10LHM9bityLGk9W10sYT1cIlwiO248czspe3ZhciBjPWVbbisrXTtpZigwPT0oMTI4JmMpKWkucHVzaChjKTtlbHNlIGlmKDE5Mj09KDIyNCZjKSl7dmFyIHU9NjMmZVtuKytdO2kucHVzaCgoMzEmYyk8PDZ8dSl9ZWxzZSBpZigyMjQ9PSgyNDAmYykpe3U9NjMmZVtuKytdO3ZhciBsPTYzJmVbbisrXTtpLnB1c2goKDMxJmMpPDwxMnx1PDw2fGwpfWVsc2UgaWYoMjQwPT0oMjQ4JmMpKXt2YXIgaD0oNyZjKTw8MTh8KHU9NjMmZVtuKytdKTw8MTJ8KGw9NjMmZVtuKytdKTw8Nnw2MyZlW24rK107aD42NTUzNSYmKGgtPTY1NTM2LGkucHVzaChoPj4+MTAmMTAyM3w1NTI5NiksaD01NjMyMHwxMDIzJmgpLGkucHVzaChoKX1lbHNlIGkucHVzaChjKTtpLmxlbmd0aD49NDA5NiYmKGErPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLG8oaSkpLGkubGVuZ3RoPTApfXJldHVybiBpLmxlbmd0aD4wJiYoYSs9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsbyhpKSkpLGF9dmFyIGg9cz9uZXcgVGV4dERlY29kZXI6bnVsbCxwPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzPzIwMDowLGY9ZnVuY3Rpb24oZSx0KXt0aGlzLnR5cGU9ZSx0aGlzLmRhdGE9dH07ZnVuY3Rpb24gZChlLHQscil7dmFyIG49TWF0aC5mbG9vcihyLzQyOTQ5NjcyOTYpLG89cjtlLnNldFVpbnQzMih0LG4pLGUuc2V0VWludDMyKHQrNCxvKX1mdW5jdGlvbiBnKGUsdCl7dmFyIHI9ZS5nZXRJbnQzMih0KSxuPWUuZ2V0VWludDMyKHQrNCksbz1yPE1hdGguZmxvb3IoTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIvNDI5NDk2NzI5Nil8fHI9PT1NYXRoLmZsb29yKE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLzQyOTQ5NjcyOTYpJiYwPT09bixzPXI+TWF0aC5mbG9vcihOdW1iZXIuTUFYX1NBRkVfSU5URUdFUi80Mjk0OTY3Mjk2KTtyZXR1cm4gb3x8cz9CaWdJbnQocikqQmlnSW50KDQyOTQ5NjcyOTYpK0JpZ0ludChuKTo0Mjk0OTY3Mjk2KnIrbn12YXIgeT0tMTtmdW5jdGlvbiBtKGUpe3ZhciB0LHI9ZS5zZWMsbj1lLm5zZWM7aWYocj49MCYmbj49MCYmcjw9MTcxNzk4NjkxODMpe2lmKDA9PT1uJiZyPD00Mjk0OTY3Mjk1KXt2YXIgbz1uZXcgVWludDhBcnJheSg0KTtyZXR1cm4odD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxyKSxvfXZhciBzPXIvNDI5NDk2NzI5NixpPTQyOTQ5NjcyOTUmcjtyZXR1cm4gbz1uZXcgVWludDhBcnJheSg4KSwodD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxuPDwyfDMmcyksdC5zZXRVaW50MzIoNCxpKSxvfXJldHVybiBvPW5ldyBVaW50OEFycmF5KDEyKSwodD1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50MzIoMCxuKSxkKHQsNCxyKSxvfWZ1bmN0aW9uIGIoZSl7dmFyIHQ9ZS5nZXRUaW1lKCkscj1NYXRoLmZsb29yKHQvMWUzKSxuPTFlNioodC0xZTMqciksbz1NYXRoLmZsb29yKG4vMWU5KTtyZXR1cm57c2VjOnIrbyxuc2VjOm4tMWU5Km99fWZ1bmN0aW9uIEEoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEYXRlP20oYihlKSk6bnVsbH1mdW5jdGlvbiB3KGUpe3ZhciB0PW5ldyBEYXRhVmlldyhlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQsZS5ieXRlTGVuZ3RoKTtzd2l0Y2goZS5ieXRlTGVuZ3RoKXtjYXNlIDQ6cmV0dXJue3NlYzp0LmdldFVpbnQzMigwKSxuc2VjOjB9O2Nhc2UgODp2YXIgcj10LmdldFVpbnQzMigwKTtyZXR1cm57c2VjOjQyOTQ5NjcyOTYqKDMmcikrdC5nZXRVaW50MzIoNCksbnNlYzpyPj4+Mn07Y2FzZSAxMjpyZXR1cm57c2VjOmcodCw0KSxuc2VjOnQuZ2V0VWludDMyKDApfTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBkYXRhIHNpemUgZm9yIHRpbWVzdGFtcDogXCIrZS5sZW5ndGgpfX1mdW5jdGlvbiB2KGUpe3ZhciB0PXcoZSk7cmV0dXJuIG5ldyBEYXRlKDFlMyp0LnNlYyt0Lm5zZWMvMWU2KX12YXIgUz17dHlwZTp5LGVuY29kZTpBLGRlY29kZTp2fSx4PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuYnVpbHRJbkVuY29kZXJzPVtdLHRoaXMuYnVpbHRJbkRlY29kZXJzPVtdLHRoaXMuZW5jb2RlcnM9W10sdGhpcy5kZWNvZGVycz1bXSx0aGlzLnJlZ2lzdGVyKFMpfXJldHVybiBlLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihlKXt2YXIgdD1lLnR5cGUscj1lLmVuY29kZSxuPWUuZGVjb2RlO2lmKHQ+PTApdGhpcy5lbmNvZGVyc1t0XT1yLHRoaXMuZGVjb2RlcnNbdF09bjtlbHNle3ZhciBvPTErdDt0aGlzLmJ1aWx0SW5FbmNvZGVyc1tvXT1yLHRoaXMuYnVpbHRJbkRlY29kZXJzW29dPW59fSxlLnByb3RvdHlwZS50cnlUb0VuY29kZT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj0wO3I8dGhpcy5idWlsdEluRW5jb2RlcnMubGVuZ3RoO3IrKylpZihudWxsIT0obj10aGlzLmJ1aWx0SW5FbmNvZGVyc1tyXSkmJm51bGwhPShvPW4oZSx0KSkpcmV0dXJuIG5ldyBmKC0xLXIsbyk7Zm9yKHI9MDtyPHRoaXMuZW5jb2RlcnMubGVuZ3RoO3IrKyl7dmFyIG4sbztpZihudWxsIT0obj10aGlzLmVuY29kZXJzW3JdKSYmbnVsbCE9KG89bihlLHQpKSlyZXR1cm4gbmV3IGYocixvKX1yZXR1cm4gZSBpbnN0YW5jZW9mIGY/ZTpudWxsfSxlLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXQ8MD90aGlzLmJ1aWx0SW5EZWNvZGVyc1stMS10XTp0aGlzLmRlY29kZXJzW3RdO3JldHVybiBuP24oZSx0LHIpOm5ldyBmKHQsZSl9LGUuZGVmYXVsdENvZGVjPW5ldyBlLGV9KCk7ZnVuY3Rpb24gRShlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/ZTpBcnJheUJ1ZmZlci5pc1ZpZXcoZSk/bmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIsZS5ieXRlT2Zmc2V0LGUuYnl0ZUxlbmd0aCk6ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBVaW50OEFycmF5KGUpOlVpbnQ4QXJyYXkuZnJvbShlKX12YXIgVD1mdW5jdGlvbihlKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcixyPXQmJmVbdF0sbj0wO2lmKHIpcmV0dXJuIHIuY2FsbChlKTtpZihlJiZcIm51bWJlclwiPT10eXBlb2YgZS5sZW5ndGgpcmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSYmbj49ZS5sZW5ndGgmJihlPXZvaWQgMCkse3ZhbHVlOmUmJmVbbisrXSxkb25lOiFlfX19O3Rocm93IG5ldyBUeXBlRXJyb3IodD9cIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCI6XCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpfSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscixuLG8scyxpLGEpe3ZvaWQgMD09PWUmJihlPXguZGVmYXVsdENvZGVjKSx2b2lkIDA9PT10JiYodD12b2lkIDApLHZvaWQgMD09PXImJihyPTEwMCksdm9pZCAwPT09biYmKG49MjA0OCksdm9pZCAwPT09byYmKG89ITEpLHZvaWQgMD09PXMmJihzPSExKSx2b2lkIDA9PT1pJiYoaT0hMSksdm9pZCAwPT09YSYmKGE9ITEpLHRoaXMuZXh0ZW5zaW9uQ29kZWM9ZSx0aGlzLmNvbnRleHQ9dCx0aGlzLm1heERlcHRoPXIsdGhpcy5pbml0aWFsQnVmZmVyU2l6ZT1uLHRoaXMuc29ydEtleXM9byx0aGlzLmZvcmNlRmxvYXQzMj1zLHRoaXMuaWdub3JlVW5kZWZpbmVkPWksdGhpcy5mb3JjZUludGVnZXJUb0Zsb2F0PWEsdGhpcy5wb3M9MCx0aGlzLnZpZXc9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcih0aGlzLmluaXRpYWxCdWZmZXJTaXplKSksdGhpcy5ieXRlcz1uZXcgVWludDhBcnJheSh0aGlzLnZpZXcuYnVmZmVyKX1yZXR1cm4gZS5wcm90b3R5cGUuZ2V0VWludDhBcnJheT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJ5dGVzLnN1YmFycmF5KDAsdGhpcy5wb3MpfSxlLnByb3RvdHlwZS5yZWluaXRpYWxpemVTdGF0ZT1mdW5jdGlvbigpe3RoaXMucG9zPTB9LGUucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZWluaXRpYWxpemVTdGF0ZSgpLHRoaXMuZG9FbmNvZGUoZSwxKSx0aGlzLmdldFVpbnQ4QXJyYXkoKX0sZS5wcm90b3R5cGUuZG9FbmNvZGU9ZnVuY3Rpb24oZSx0KXtpZih0PnRoaXMubWF4RGVwdGgpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGRlZXAgb2JqZWN0cyBpbiBkZXB0aCBcIit0KTtudWxsPT1lP3RoaXMuZW5jb2RlTmlsKCk6XCJib29sZWFuXCI9PXR5cGVvZiBlP3RoaXMuZW5jb2RlQm9vbGVhbihlKTpcIm51bWJlclwiPT10eXBlb2YgZT90aGlzLmVuY29kZU51bWJlcihlKTpcInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLmVuY29kZVN0cmluZyhlKTpcImJpZ2ludFwiPT10eXBlb2YgZT90aGlzLmVuY29kZWJpZ2ludChlKTp0aGlzLmVuY29kZU9iamVjdChlLHQpfSxlLnByb3RvdHlwZS5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnBvcytlO3RoaXMudmlldy5ieXRlTGVuZ3RoPHQmJnRoaXMucmVzaXplQnVmZmVyKDIqdCl9LGUucHJvdG90eXBlLnJlc2l6ZUJ1ZmZlcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXlCdWZmZXIoZSkscj1uZXcgVWludDhBcnJheSh0KSxuPW5ldyBEYXRhVmlldyh0KTtyLnNldCh0aGlzLmJ5dGVzKSx0aGlzLnZpZXc9bix0aGlzLmJ5dGVzPXJ9LGUucHJvdG90eXBlLmVuY29kZU5pbD1mdW5jdGlvbigpe3RoaXMud3JpdGVVOCgxOTIpfSxlLnByb3RvdHlwZS5lbmNvZGVCb29sZWFuPWZ1bmN0aW9uKGUpeyExPT09ZT90aGlzLndyaXRlVTgoMTk0KTp0aGlzLndyaXRlVTgoMTk1KX0sZS5wcm90b3R5cGUuZW5jb2RlTnVtYmVyPWZ1bmN0aW9uKGUpe051bWJlci5pc1NhZmVJbnRlZ2VyKGUpJiYhdGhpcy5mb3JjZUludGVnZXJUb0Zsb2F0P2U+PTA/ZTwxMjg/dGhpcy53cml0ZVU4KGUpOmU8MjU2Pyh0aGlzLndyaXRlVTgoMjA0KSx0aGlzLndyaXRlVTgoZSkpOmU8NjU1MzY/KHRoaXMud3JpdGVVOCgyMDUpLHRoaXMud3JpdGVVMTYoZSkpOmU8NDI5NDk2NzI5Nj8odGhpcy53cml0ZVU4KDIwNiksdGhpcy53cml0ZVUzMihlKSk6KHRoaXMud3JpdGVVOCgyMDcpLHRoaXMud3JpdGVVNjQoZSkpOmU+PS0zMj90aGlzLndyaXRlVTgoMjI0fGUrMzIpOmU+PS0xMjg/KHRoaXMud3JpdGVVOCgyMDgpLHRoaXMud3JpdGVJOChlKSk6ZT49LTMyNzY4Pyh0aGlzLndyaXRlVTgoMjA5KSx0aGlzLndyaXRlSTE2KGUpKTplPj0tMjE0NzQ4MzY0OD8odGhpcy53cml0ZVU4KDIxMCksdGhpcy53cml0ZUkzMihlKSk6KHRoaXMud3JpdGVVOCgyMTEpLHRoaXMud3JpdGVJNjQoZSkpOnRoaXMuZm9yY2VGbG9hdDMyPyh0aGlzLndyaXRlVTgoMjAyKSx0aGlzLndyaXRlRjMyKGUpKToodGhpcy53cml0ZVU4KDIwMyksdGhpcy53cml0ZUY2NChlKSl9LGUucHJvdG90eXBlLmVuY29kZWJpZ2ludD1mdW5jdGlvbihlKXtlPj1CaWdJbnQoMCk/ZTxCaWdJbnQoMTI4KT90aGlzLndyaXRlVTgoTnVtYmVyKGUpKTplPEJpZ0ludCgyNTYpPyh0aGlzLndyaXRlVTgoMjA0KSx0aGlzLndyaXRlVTgoTnVtYmVyKGUpKSk6ZTxCaWdJbnQoNjU1MzYpPyh0aGlzLndyaXRlVTgoMjA1KSx0aGlzLndyaXRlVTE2KE51bWJlcihlKSkpOmU8QmlnSW50KDQyOTQ5NjcyOTYpPyh0aGlzLndyaXRlVTgoMjA2KSx0aGlzLndyaXRlVTMyKE51bWJlcihlKSkpOih0aGlzLndyaXRlVTgoMjA3KSx0aGlzLndyaXRlQmlnNjQoZSkpOmU+PUJpZ0ludCgtMzIpP3RoaXMud3JpdGVVOCgyMjR8TnVtYmVyKGUpKzMyKTplPj1CaWdJbnQoLTEyOCk/KHRoaXMud3JpdGVVOCgyMDgpLHRoaXMud3JpdGVJOChOdW1iZXIoZSkpKTplPj1CaWdJbnQoLTMyNzY4KT8odGhpcy53cml0ZVU4KDIwOSksdGhpcy53cml0ZUkxNihOdW1iZXIoZSkpKTplPj1CaWdJbnQoLTIxNDc0ODM2NDgpPyh0aGlzLndyaXRlVTgoMjEwKSx0aGlzLndyaXRlSTMyKE51bWJlcihlKSkpOih0aGlzLndyaXRlVTgoMjExKSx0aGlzLndyaXRlQmlnNjQoZSkpfSxlLnByb3RvdHlwZS53cml0ZVN0cmluZ0hlYWRlcj1mdW5jdGlvbihlKXtpZihlPDMyKXRoaXMud3JpdGVVOCgxNjArZSk7ZWxzZSBpZihlPDI1Nil0aGlzLndyaXRlVTgoMjE3KSx0aGlzLndyaXRlVTgoZSk7ZWxzZSBpZihlPDY1NTM2KXRoaXMud3JpdGVVOCgyMTgpLHRoaXMud3JpdGVVMTYoZSk7ZWxzZXtpZighKGU8NDI5NDk2NzI5NikpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGxvbmcgc3RyaW5nOiBcIitlK1wiIGJ5dGVzIGluIFVURi04XCIpO3RoaXMud3JpdGVVOCgyMTkpLHRoaXMud3JpdGVVMzIoZSl9fSxlLnByb3RvdHlwZS5lbmNvZGVTdHJpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGg7aWYocyYmdD5jKXt2YXIgcj1pKGUpO3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNStyKSx0aGlzLndyaXRlU3RyaW5nSGVhZGVyKHIpLHUoZSx0aGlzLmJ5dGVzLHRoaXMucG9zKSx0aGlzLnBvcys9cn1lbHNlIHI9aShlKSx0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDUrciksdGhpcy53cml0ZVN0cmluZ0hlYWRlcihyKSxmdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPWUubGVuZ3RoLG89cixzPTA7czxuOyl7dmFyIGk9ZS5jaGFyQ29kZUF0KHMrKyk7aWYoMCE9KDQyOTQ5NjcxNjgmaSkpe2lmKDA9PSg0Mjk0OTY1MjQ4JmkpKXRbbysrXT1pPj42JjMxfDE5MjtlbHNle2lmKGk+PTU1Mjk2JiZpPD01NjMxOSYmczxuKXt2YXIgYT1lLmNoYXJDb2RlQXQocyk7NTYzMjA9PSg2NDUxMiZhKSYmKCsrcyxpPSgoMTAyMyZpKTw8MTApKygxMDIzJmEpKzY1NTM2KX0wPT0oNDI5NDkwMTc2MCZpKT8odFtvKytdPWk+PjEyJjE1fDIyNCx0W28rK109aT4+NiY2M3wxMjgpOih0W28rK109aT4+MTgmN3wyNDAsdFtvKytdPWk+PjEyJjYzfDEyOCx0W28rK109aT4+NiY2M3wxMjgpfXRbbysrXT02MyZpfDEyOH1lbHNlIHRbbysrXT1pfX0oZSx0aGlzLmJ5dGVzLHRoaXMucG9zKSx0aGlzLnBvcys9cn0sZS5wcm90b3R5cGUuZW5jb2RlT2JqZWN0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5leHRlbnNpb25Db2RlYy50cnlUb0VuY29kZShlLHRoaXMuY29udGV4dCk7aWYobnVsbCE9cil0aGlzLmVuY29kZUV4dGVuc2lvbihyKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpdGhpcy5lbmNvZGVBcnJheShlLHQpO2Vsc2UgaWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXRoaXMuZW5jb2RlQmluYXJ5KGUpO2Vsc2V7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIG9iamVjdDogXCIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShlKSk7dGhpcy5lbmNvZGVNYXAoZSx0KX19LGUucHJvdG90eXBlLmVuY29kZUJpbmFyeT1mdW5jdGlvbihlKXt2YXIgdD1lLmJ5dGVMZW5ndGg7aWYodDwyNTYpdGhpcy53cml0ZVU4KDE5NiksdGhpcy53cml0ZVU4KHQpO2Vsc2UgaWYodDw2NTUzNil0aGlzLndyaXRlVTgoMTk3KSx0aGlzLndyaXRlVTE2KHQpO2Vsc2V7aWYoISh0PDQyOTQ5NjcyOTYpKXRocm93IG5ldyBFcnJvcihcIlRvbyBsYXJnZSBiaW5hcnk6IFwiK3QpO3RoaXMud3JpdGVVOCgxOTgpLHRoaXMud3JpdGVVMzIodCl9dmFyIHI9RShlKTt0aGlzLndyaXRlVThhKHIpfSxlLnByb3RvdHlwZS5lbmNvZGVBcnJheT1mdW5jdGlvbihlLHQpe3ZhciByLG4sbz1lLmxlbmd0aDtpZihvPDE2KXRoaXMud3JpdGVVOCgxNDQrbyk7ZWxzZSBpZihvPDY1NTM2KXRoaXMud3JpdGVVOCgyMjApLHRoaXMud3JpdGVVMTYobyk7ZWxzZXtpZighKG88NDI5NDk2NzI5NikpdGhyb3cgbmV3IEVycm9yKFwiVG9vIGxhcmdlIGFycmF5OiBcIitvKTt0aGlzLndyaXRlVTgoMjIxKSx0aGlzLndyaXRlVTMyKG8pfXRyeXtmb3IodmFyIHM9VChlKSxpPXMubmV4dCgpOyFpLmRvbmU7aT1zLm5leHQoKSl7dmFyIGE9aS52YWx1ZTt0aGlzLmRvRW5jb2RlKGEsdCsxKX19Y2F0Y2goZSl7cj17ZXJyb3I6ZX19ZmluYWxseXt0cnl7aSYmIWkuZG9uZSYmKG49cy5yZXR1cm4pJiZuLmNhbGwocyl9ZmluYWxseXtpZihyKXRocm93IHIuZXJyb3J9fX0sZS5wcm90b3R5cGUuY291bnRXaXRob3V0VW5kZWZpbmVkPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvPTA7dHJ5e2Zvcih2YXIgcz1UKHQpLGk9cy5uZXh0KCk7IWkuZG9uZTtpPXMubmV4dCgpKXZvaWQgMCE9PWVbaS52YWx1ZV0mJm8rK31jYXRjaChlKXtyPXtlcnJvcjplfX1maW5hbGx5e3RyeXtpJiYhaS5kb25lJiYobj1zLnJldHVybikmJm4uY2FsbChzKX1maW5hbGx5e2lmKHIpdGhyb3cgci5lcnJvcn19cmV0dXJuIG99LGUucHJvdG90eXBlLmVuY29kZU1hcD1mdW5jdGlvbihlLHQpe3ZhciByLG4sbz1PYmplY3Qua2V5cyhlKTt0aGlzLnNvcnRLZXlzJiZvLnNvcnQoKTt2YXIgcz10aGlzLmlnbm9yZVVuZGVmaW5lZD90aGlzLmNvdW50V2l0aG91dFVuZGVmaW5lZChlLG8pOm8ubGVuZ3RoO2lmKHM8MTYpdGhpcy53cml0ZVU4KDEyOCtzKTtlbHNlIGlmKHM8NjU1MzYpdGhpcy53cml0ZVU4KDIyMiksdGhpcy53cml0ZVUxNihzKTtlbHNle2lmKCEoczw0Mjk0OTY3Mjk2KSl0aHJvdyBuZXcgRXJyb3IoXCJUb28gbGFyZ2UgbWFwIG9iamVjdDogXCIrcyk7dGhpcy53cml0ZVU4KDIyMyksdGhpcy53cml0ZVUzMihzKX10cnl7Zm9yKHZhciBpPVQobyksYT1pLm5leHQoKTshYS5kb25lO2E9aS5uZXh0KCkpe3ZhciBjPWEudmFsdWUsdT1lW2NdO3RoaXMuaWdub3JlVW5kZWZpbmVkJiZ2b2lkIDA9PT11fHwodGhpcy5lbmNvZGVTdHJpbmcoYyksdGhpcy5kb0VuY29kZSh1LHQrMSkpfX1jYXRjaChlKXtyPXtlcnJvcjplfX1maW5hbGx5e3RyeXthJiYhYS5kb25lJiYobj1pLnJldHVybikmJm4uY2FsbChpKX1maW5hbGx5e2lmKHIpdGhyb3cgci5lcnJvcn19fSxlLnByb3RvdHlwZS5lbmNvZGVFeHRlbnNpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5kYXRhLmxlbmd0aDtpZigxPT09dCl0aGlzLndyaXRlVTgoMjEyKTtlbHNlIGlmKDI9PT10KXRoaXMud3JpdGVVOCgyMTMpO2Vsc2UgaWYoND09PXQpdGhpcy53cml0ZVU4KDIxNCk7ZWxzZSBpZig4PT09dCl0aGlzLndyaXRlVTgoMjE1KTtlbHNlIGlmKDE2PT09dCl0aGlzLndyaXRlVTgoMjE2KTtlbHNlIGlmKHQ8MjU2KXRoaXMud3JpdGVVOCgxOTkpLHRoaXMud3JpdGVVOCh0KTtlbHNlIGlmKHQ8NjU1MzYpdGhpcy53cml0ZVU4KDIwMCksdGhpcy53cml0ZVUxNih0KTtlbHNle2lmKCEodDw0Mjk0OTY3Mjk2KSl0aHJvdyBuZXcgRXJyb3IoXCJUb28gbGFyZ2UgZXh0ZW5zaW9uIG9iamVjdDogXCIrdCk7dGhpcy53cml0ZVU4KDIwMSksdGhpcy53cml0ZVUzMih0KX10aGlzLndyaXRlSTgoZS50eXBlKSx0aGlzLndyaXRlVThhKGUuZGF0YSl9LGUucHJvdG90eXBlLndyaXRlVTg9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSgxKSx0aGlzLnZpZXcuc2V0VWludDgodGhpcy5wb3MsZSksdGhpcy5wb3MrK30sZS5wcm90b3R5cGUud3JpdGVVOGE9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGg7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSh0KSx0aGlzLmJ5dGVzLnNldChlLHRoaXMucG9zKSx0aGlzLnBvcys9dH0sZS5wcm90b3R5cGUud3JpdGVJOD1mdW5jdGlvbihlKXt0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDEpLHRoaXMudmlldy5zZXRJbnQ4KHRoaXMucG9zLGUpLHRoaXMucG9zKyt9LGUucHJvdG90eXBlLndyaXRlVTE2PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoMiksdGhpcy52aWV3LnNldFVpbnQxNih0aGlzLnBvcyxlKSx0aGlzLnBvcys9Mn0sZS5wcm90b3R5cGUud3JpdGVJMTY9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSgyKSx0aGlzLnZpZXcuc2V0SW50MTYodGhpcy5wb3MsZSksdGhpcy5wb3MrPTJ9LGUucHJvdG90eXBlLndyaXRlVTMyPWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNCksdGhpcy52aWV3LnNldFVpbnQzMih0aGlzLnBvcyxlKSx0aGlzLnBvcys9NH0sZS5wcm90b3R5cGUud3JpdGVJMzI9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSg0KSx0aGlzLnZpZXcuc2V0SW50MzIodGhpcy5wb3MsZSksdGhpcy5wb3MrPTR9LGUucHJvdG90eXBlLndyaXRlRjMyPWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoNCksdGhpcy52aWV3LnNldEZsb2F0MzIodGhpcy5wb3MsZSksdGhpcy5wb3MrPTR9LGUucHJvdG90eXBlLndyaXRlRjY0PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoOCksdGhpcy52aWV3LnNldEZsb2F0NjQodGhpcy5wb3MsZSksdGhpcy5wb3MrPTh9LGUucHJvdG90eXBlLndyaXRlVTY0PWZ1bmN0aW9uKGUpe3RoaXMuZW5zdXJlQnVmZmVyU2l6ZVRvV3JpdGUoOCksZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIvNDI5NDk2NzI5NixvPXI7ZS5zZXRVaW50MzIodCxuKSxlLnNldFVpbnQzMih0KzQsbyl9KHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZS5wcm90b3R5cGUud3JpdGVJNjQ9ZnVuY3Rpb24oZSl7dGhpcy5lbnN1cmVCdWZmZXJTaXplVG9Xcml0ZSg4KSxkKHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZS5wcm90b3R5cGUud3JpdGVCaWc2ND1mdW5jdGlvbihlKXt0aGlzLmVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlKDgpLGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1OdW1iZXIoci9CaWdJbnQoNDI5NDk2NzI5NikpLG89TnVtYmVyKHIlQmlnSW50KDQyOTQ5NjcyOTYpKTtuPDAmJjAhPT1vJiYobi09MSksZS5zZXRVaW50MzIodCxuKSxlLnNldFVpbnQzMih0KzQsbyl9KHRoaXMudmlldyx0aGlzLnBvcyxlKSx0aGlzLnBvcys9OH0sZX0oKSxCPXt9O2Z1bmN0aW9uIFUoZSx0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9QiksbmV3IF8odC5leHRlbnNpb25Db2RlYyx0LmNvbnRleHQsdC5tYXhEZXB0aCx0LmluaXRpYWxCdWZmZXJTaXplLHQuc29ydEtleXMsdC5mb3JjZUZsb2F0MzIsdC5pZ25vcmVVbmRlZmluZWQsdC5mb3JjZUludGVnZXJUb0Zsb2F0KS5lbmNvZGUoZSl9ZnVuY3Rpb24gayhlKXtyZXR1cm4oZTwwP1wiLVwiOlwiXCIpK1wiMHhcIitNYXRoLmFicyhlKS50b1N0cmluZygxNikucGFkU3RhcnQoMixcIjBcIil9dmFyIEk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dm9pZCAwPT09ZSYmKGU9MTYpLHZvaWQgMD09PXQmJih0PTE2KSx0aGlzLm1heEtleUxlbmd0aD1lLHRoaXMubWF4TGVuZ3RoUGVyS2V5PXQsdGhpcy5oaXQ9MCx0aGlzLm1pc3M9MCx0aGlzLmNhY2hlcz1bXTtmb3IodmFyIHI9MDtyPHRoaXMubWF4S2V5TGVuZ3RoO3IrKyl0aGlzLmNhY2hlcy5wdXNoKFtdKX1yZXR1cm4gZS5wcm90b3R5cGUuY2FuQmVDYWNoZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MCYmZTw9dGhpcy5tYXhLZXlMZW5ndGh9LGUucHJvdG90eXBlLmdldD1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5jYWNoZXNbci0xXSxvPW4ubGVuZ3RoO2U6Zm9yKHZhciBzPTA7czxvO3MrKyl7Zm9yKHZhciBpPW5bc10sYT1pLmJ5dGVzLGM9MDtjPHI7YysrKWlmKGFbY10hPT1lW3QrY10pY29udGludWUgZTtyZXR1cm4gaS52YWx1ZX1yZXR1cm4gbnVsbH0sZS5wcm90b3R5cGUuc3RvcmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmNhY2hlc1tlLmxlbmd0aC0xXSxuPXtieXRlczplLHZhbHVlOnR9O3IubGVuZ3RoPj10aGlzLm1heExlbmd0aFBlcktleT9yW01hdGgucmFuZG9tKCkqci5sZW5ndGh8MF09bjpyLnB1c2gobil9LGUucHJvdG90eXBlLmRlY29kZT1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5nZXQoZSx0LHIpO2lmKG51bGwhPW4pcmV0dXJuIHRoaXMuaGl0Kyssbjt0aGlzLm1pc3MrKzt2YXIgbz1sKGUsdCxyKSxzPVVpbnQ4QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSx0LHQrcik7cmV0dXJuIHRoaXMuc3RvcmUocyxvKSxvfSxlfSgpLEM9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJm9bMF0pdGhyb3cgb1sxXTtyZXR1cm4gb1sxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBzPXtuZXh0OmEoMCksdGhyb3c6YSgxKSxyZXR1cm46YSgyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoc1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxzO2Z1bmN0aW9uIGEocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihzKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7aTspdHJ5e2lmKHI9MSxuJiYobz0yJnNbMF0/bi5yZXR1cm46c1swXT9uLnRocm93fHwoKG89bi5yZXR1cm4pJiZvLmNhbGwobiksMCk6bi5uZXh0KSYmIShvPW8uY2FsbChuLHNbMV0pKS5kb25lKXJldHVybiBvO3N3aXRjaChuPTAsbyYmKHM9WzImc1swXSxvLnZhbHVlXSksc1swXSl7Y2FzZSAwOmNhc2UgMTpvPXM7YnJlYWs7Y2FzZSA0OnJldHVybiBpLmxhYmVsKysse3ZhbHVlOnNbMV0sZG9uZTohMX07Y2FzZSA1OmkubGFiZWwrKyxuPXNbMV0scz1bMF07Y29udGludWU7Y2FzZSA3OnM9aS5vcHMucG9wKCksaS50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgobz0obz1pLnRyeXMpLmxlbmd0aD4wJiZvW28ubGVuZ3RoLTFdKXx8NiE9PXNbMF0mJjIhPT1zWzBdKSl7aT0wO2NvbnRpbnVlfWlmKDM9PT1zWzBdJiYoIW98fHNbMV0+b1swXSYmc1sxXTxvWzNdKSl7aS5sYWJlbD1zWzFdO2JyZWFrfWlmKDY9PT1zWzBdJiZpLmxhYmVsPG9bMV0pe2kubGFiZWw9b1sxXSxvPXM7YnJlYWt9aWYobyYmaS5sYWJlbDxvWzJdKXtpLmxhYmVsPW9bMl0saS5vcHMucHVzaChzKTticmVha31vWzJdJiZpLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWV9cz10LmNhbGwoZSxpKX1jYXRjaChlKXtzPVs2LGVdLG49MH1maW5hbGx5e3I9bz0wfWlmKDUmc1swXSl0aHJvdyBzWzFdO3JldHVybnt2YWx1ZTpzWzBdP3NbMV06dm9pZCAwLGRvbmU6ITB9fShbcyxhXSl9fX0sUj1mdW5jdGlvbihlKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTt2YXIgdCxyPWVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO3JldHVybiByP3IuY2FsbChlKTooZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBfX3ZhbHVlcz9fX3ZhbHVlcyhlKTplW1N5bWJvbC5pdGVyYXRvcl0oKSx0PXt9LG4oXCJuZXh0XCIpLG4oXCJ0aHJvd1wiKSxuKFwicmV0dXJuXCIpLHRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHQpO2Z1bmN0aW9uIG4ocil7dFtyXT1lW3JdJiZmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKG4sbyl7IWZ1bmN0aW9uKGUsdCxyLG4pe1Byb21pc2UucmVzb2x2ZShuKS50aGVuKChmdW5jdGlvbih0KXtlKHt2YWx1ZTp0LGRvbmU6cn0pfSksdCl9KG4sbywodD1lW3JdKHQpKS5kb25lLHQudmFsdWUpfSkpfX19LE89ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBPPyh0aGlzLnY9ZSx0aGlzKTpuZXcgTyhlKX0sRD1mdW5jdGlvbihlLHQscil7aWYoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7dmFyIG4sbz1yLmFwcGx5KGUsdHx8W10pLHM9W107cmV0dXJuIG49e30saShcIm5leHRcIiksaShcInRocm93XCIpLGkoXCJyZXR1cm5cIiksbltTeW1ib2wuYXN5bmNJdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sbjtmdW5jdGlvbiBpKGUpe29bZV0mJihuW2VdPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24ocixuKXtzLnB1c2goW2UsdCxyLG5dKT4xfHxhKGUsdCl9KSl9KX1mdW5jdGlvbiBhKGUsdCl7dHJ5eyhyPW9bZV0odCkpLnZhbHVlIGluc3RhbmNlb2YgTz9Qcm9taXNlLnJlc29sdmUoci52YWx1ZS52KS50aGVuKGMsdSk6bChzWzBdWzJdLHIpfWNhdGNoKGUpe2woc1swXVszXSxlKX12YXIgcn1mdW5jdGlvbiBjKGUpe2EoXCJuZXh0XCIsZSl9ZnVuY3Rpb24gdShlKXthKFwidGhyb3dcIixlKX1mdW5jdGlvbiBsKGUsdCl7ZSh0KSxzLnNoaWZ0KCkscy5sZW5ndGgmJmEoc1swXVswXSxzWzBdWzFdKX19LE49bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigwKSksUD1uZXcgVWludDhBcnJheShOLmJ1ZmZlciksTD1mdW5jdGlvbigpe3RyeXtOLmdldEludDgoMCl9Y2F0Y2goZSl7cmV0dXJuIGUuY29uc3RydWN0b3J9dGhyb3cgbmV3IEVycm9yKFwibmV2ZXIgcmVhY2hlZFwiKX0oKSxGPW5ldyBMKFwiSW5zdWZmaWNpZW50IGRhdGFcIiksej1uZXcgSSxqPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscixuLG8scyxpLGEpe3ZvaWQgMD09PWUmJihlPXguZGVmYXVsdENvZGVjKSx2b2lkIDA9PT10JiYodD12b2lkIDApLHZvaWQgMD09PXImJihyPTQyOTQ5NjcyOTUpLHZvaWQgMD09PW4mJihuPTQyOTQ5NjcyOTUpLHZvaWQgMD09PW8mJihvPTQyOTQ5NjcyOTUpLHZvaWQgMD09PXMmJihzPTQyOTQ5NjcyOTUpLHZvaWQgMD09PWkmJihpPTQyOTQ5NjcyOTUpLHZvaWQgMD09PWEmJihhPXopLHRoaXMuZXh0ZW5zaW9uQ29kZWM9ZSx0aGlzLmNvbnRleHQ9dCx0aGlzLm1heFN0ckxlbmd0aD1yLHRoaXMubWF4QmluTGVuZ3RoPW4sdGhpcy5tYXhBcnJheUxlbmd0aD1vLHRoaXMubWF4TWFwTGVuZ3RoPXMsdGhpcy5tYXhFeHRMZW5ndGg9aSx0aGlzLmtleURlY29kZXI9YSx0aGlzLnRvdGFsUG9zPTAsdGhpcy5wb3M9MCx0aGlzLnZpZXc9Tix0aGlzLmJ5dGVzPVAsdGhpcy5oZWFkQnl0ZT0tMSx0aGlzLnN0YWNrPVtdfXJldHVybiBlLnByb3RvdHlwZS5yZWluaXRpYWxpemVTdGF0ZT1mdW5jdGlvbigpe3RoaXMudG90YWxQb3M9MCx0aGlzLmhlYWRCeXRlPS0xfSxlLnByb3RvdHlwZS5zZXRCdWZmZXI9ZnVuY3Rpb24oZSl7dGhpcy5ieXRlcz1FKGUpLHRoaXMudmlldz1mdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIG5ldyBEYXRhVmlldyhlKTt2YXIgdD1FKGUpO3JldHVybiBuZXcgRGF0YVZpZXcodC5idWZmZXIsdC5ieXRlT2Zmc2V0LHQuYnl0ZUxlbmd0aCl9KHRoaXMuYnl0ZXMpLHRoaXMucG9zPTB9LGUucHJvdG90eXBlLmFwcGVuZEJ1ZmZlcj1mdW5jdGlvbihlKXtpZigtMSE9PXRoaXMuaGVhZEJ5dGV8fHRoaXMuaGFzUmVtYWluaW5nKCkpe3ZhciB0PXRoaXMuYnl0ZXMuc3ViYXJyYXkodGhpcy5wb3MpLHI9RShlKSxuPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoK3IubGVuZ3RoKTtuLnNldCh0KSxuLnNldChyLHQubGVuZ3RoKSx0aGlzLnNldEJ1ZmZlcihuKX1lbHNlIHRoaXMuc2V0QnVmZmVyKGUpfSxlLnByb3RvdHlwZS5oYXNSZW1haW5pbmc9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTEpLHRoaXMudmlldy5ieXRlTGVuZ3RoLXRoaXMucG9zPj1lfSxlLnByb3RvdHlwZS5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnZpZXcscj10aGlzLnBvcztyZXR1cm4gbmV3IFJhbmdlRXJyb3IoXCJFeHRyYSBcIisodC5ieXRlTGVuZ3RoLXIpK1wiIG9mIFwiK3QuYnl0ZUxlbmd0aCtcIiBieXRlKHMpIGZvdW5kIGF0IGJ1ZmZlcltcIitlK1wiXVwiKX0sZS5wcm90b3R5cGUuZGVjb2RlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJlaW5pdGlhbGl6ZVN0YXRlKCksdGhpcy5zZXRCdWZmZXIoZSksdGhpcy5kb0RlY29kZVNpbmdsZVN5bmMoKX0sZS5wcm90b3R5cGUuZG9EZWNvZGVTaW5nbGVTeW5jPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5kb0RlY29kZVN5bmMoKTtpZih0aGlzLmhhc1JlbWFpbmluZygpKXRocm93IHRoaXMuY3JlYXRlTm9FeHRyYUJ5dGVzRXJyb3IodGhpcy5wb3MpO3JldHVybiBlfSxlLnByb3RvdHlwZS5kZWNvZGVBc3luYz1mdW5jdGlvbihlKXt2YXIgdCxyLG4sbztyZXR1cm4gZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIG5ldyhyfHwocj1Qcm9taXNlKSkoKGZ1bmN0aW9uKG8scyl7ZnVuY3Rpb24gaShlKXt0cnl7YyhuLm5leHQoZSkpfWNhdGNoKGUpe3MoZSl9fWZ1bmN0aW9uIGEoZSl7dHJ5e2Mobi50aHJvdyhlKSl9Y2F0Y2goZSl7cyhlKX19ZnVuY3Rpb24gYyhlKXt2YXIgdDtlLmRvbmU/byhlLnZhbHVlKToodD1lLnZhbHVlLHQgaW5zdGFuY2VvZiByP3Q6bmV3IHIoKGZ1bmN0aW9uKGUpe2UodCl9KSkpLnRoZW4oaSxhKX1jKChuPW4uYXBwbHkoZSx0fHxbXSkpLm5leHQoKSl9KSl9KHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcyxpLGEsYyx1LGwsaCxwO3JldHVybiBDKHRoaXMsKGZ1bmN0aW9uKGYpe3N3aXRjaChmLmxhYmVsKXtjYXNlIDA6cz0hMSxmLmxhYmVsPTE7Y2FzZSAxOmYudHJ5cy5wdXNoKFsxLDYsNywxMl0pLHQ9UihlKSxmLmxhYmVsPTI7Y2FzZSAyOnJldHVybls0LHQubmV4dCgpXTtjYXNlIDM6aWYoKHI9Zi5zZW50KCkpLmRvbmUpcmV0dXJuWzMsNV07aWYoYT1yLnZhbHVlLHMpdGhyb3cgdGhpcy5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcih0aGlzLnRvdGFsUG9zKTt0aGlzLmFwcGVuZEJ1ZmZlcihhKTt0cnl7aT10aGlzLmRvRGVjb2RlU3luYygpLHM9ITB9Y2F0Y2goZSl7aWYoIShlIGluc3RhbmNlb2YgTCkpdGhyb3cgZX10aGlzLnRvdGFsUG9zKz10aGlzLnBvcyxmLmxhYmVsPTQ7Y2FzZSA0OnJldHVyblszLDJdO2Nhc2UgNTpyZXR1cm5bMywxMl07Y2FzZSA2OnJldHVybiBjPWYuc2VudCgpLG49e2Vycm9yOmN9LFszLDEyXTtjYXNlIDc6cmV0dXJuIGYudHJ5cy5wdXNoKFs3LCwxMCwxMV0pLHImJiFyLmRvbmUmJihvPXQucmV0dXJuKT9bNCxvLmNhbGwodCldOlszLDldO2Nhc2UgODpmLnNlbnQoKSxmLmxhYmVsPTk7Y2FzZSA5OnJldHVyblszLDExXTtjYXNlIDEwOmlmKG4pdGhyb3cgbi5lcnJvcjtyZXR1cm5bN107Y2FzZSAxMTpyZXR1cm5bN107Y2FzZSAxMjppZihzKXtpZih0aGlzLmhhc1JlbWFpbmluZygpKXRocm93IHRoaXMuY3JlYXRlTm9FeHRyYUJ5dGVzRXJyb3IodGhpcy50b3RhbFBvcyk7cmV0dXJuWzIsaV19dGhyb3cgbD0odT10aGlzKS5oZWFkQnl0ZSxoPXUucG9zLHA9dS50b3RhbFBvcyxuZXcgUmFuZ2VFcnJvcihcIkluc3VmZmljaWVudCBkYXRhIGluIHBhcmNpbmcgXCIrayhsKStcIiBhdCBcIitwK1wiIChcIitoK1wiIGluIHRoZSBjdXJyZW50IGJ1ZmZlcilcIil9fSkpfSkpfSxlLnByb3RvdHlwZS5kZWNvZGVBcnJheVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5kZWNvZGVNdWx0aUFzeW5jKGUsITApfSxlLnByb3RvdHlwZS5kZWNvZGVTdHJlYW09ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZGVjb2RlTXVsdGlBc3luYyhlLCExKX0sZS5wcm90b3R5cGUuZGVjb2RlTXVsdGlBc3luYz1mdW5jdGlvbihlLHQpe3JldHVybiBEKHRoaXMsYXJndW1lbnRzLChmdW5jdGlvbigpe3ZhciByLG4sbyxzLGksYSxjLHUsbDtyZXR1cm4gQyh0aGlzLChmdW5jdGlvbihoKXtzd2l0Y2goaC5sYWJlbCl7Y2FzZSAwOnI9dCxuPS0xLGgubGFiZWw9MTtjYXNlIDE6aC50cnlzLnB1c2goWzEsMTMsMTQsMTldKSxvPVIoZSksaC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCxPKG8ubmV4dCgpKV07Y2FzZSAzOmlmKChzPWguc2VudCgpKS5kb25lKXJldHVyblszLDEyXTtpZihpPXMudmFsdWUsdCYmMD09PW4pdGhyb3cgdGhpcy5jcmVhdGVOb0V4dHJhQnl0ZXNFcnJvcih0aGlzLnRvdGFsUG9zKTt0aGlzLmFwcGVuZEJ1ZmZlcihpKSxyJiYobj10aGlzLnJlYWRBcnJheVNpemUoKSxyPSExLHRoaXMuY29tcGxldGUoKSksaC5sYWJlbD00O2Nhc2UgNDpoLnRyeXMucHVzaChbNCw5LCwxMF0pLGgubGFiZWw9NTtjYXNlIDU6cmV0dXJuWzQsTyh0aGlzLmRvRGVjb2RlU3luYygpKV07Y2FzZSA2OnJldHVybls0LGguc2VudCgpXTtjYXNlIDc6cmV0dXJuIGguc2VudCgpLDA9PS0tbj9bMyw4XTpbMyw1XTtjYXNlIDg6cmV0dXJuWzMsMTBdO2Nhc2UgOTppZighKChhPWguc2VudCgpKWluc3RhbmNlb2YgTCkpdGhyb3cgYTtyZXR1cm5bMywxMF07Y2FzZSAxMDp0aGlzLnRvdGFsUG9zKz10aGlzLnBvcyxoLmxhYmVsPTExO2Nhc2UgMTE6cmV0dXJuWzMsMl07Y2FzZSAxMjpyZXR1cm5bMywxOV07Y2FzZSAxMzpyZXR1cm4gYz1oLnNlbnQoKSx1PXtlcnJvcjpjfSxbMywxOV07Y2FzZSAxNDpyZXR1cm4gaC50cnlzLnB1c2goWzE0LCwxNywxOF0pLHMmJiFzLmRvbmUmJihsPW8ucmV0dXJuKT9bNCxPKGwuY2FsbChvKSldOlszLDE2XTtjYXNlIDE1Omguc2VudCgpLGgubGFiZWw9MTY7Y2FzZSAxNjpyZXR1cm5bMywxOF07Y2FzZSAxNzppZih1KXRocm93IHUuZXJyb3I7cmV0dXJuWzddO2Nhc2UgMTg6cmV0dXJuWzddO2Nhc2UgMTk6cmV0dXJuWzJdfX0pKX0pKX0sZS5wcm90b3R5cGUuZG9EZWNvZGVTeW5jPWZ1bmN0aW9uKCl7ZTpmb3IoOzspe3ZhciBlPXRoaXMucmVhZEhlYWRCeXRlKCksdD12b2lkIDA7aWYoZT49MjI0KXQ9ZS0yNTY7ZWxzZSBpZihlPDE5MilpZihlPDEyOCl0PWU7ZWxzZSBpZihlPDE0NCl7aWYoMCE9KG49ZS0xMjgpKXt0aGlzLnB1c2hNYXBTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PXt9fWVsc2UgaWYoZTwxNjApe2lmKDAhPShuPWUtMTQ0KSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2V7dmFyIHI9ZS0xNjA7dD10aGlzLmRlY29kZVV0ZjhTdHJpbmcociwwKX1lbHNlIGlmKDE5Mj09PWUpdD1udWxsO2Vsc2UgaWYoMTk0PT09ZSl0PSExO2Vsc2UgaWYoMTk1PT09ZSl0PSEwO2Vsc2UgaWYoMjAyPT09ZSl0PXRoaXMucmVhZEYzMigpO2Vsc2UgaWYoMjAzPT09ZSl0PXRoaXMucmVhZEY2NCgpO2Vsc2UgaWYoMjA0PT09ZSl0PXRoaXMucmVhZFU4KCk7ZWxzZSBpZigyMDU9PT1lKXQ9dGhpcy5yZWFkVTE2KCk7ZWxzZSBpZigyMDY9PT1lKXQ9dGhpcy5yZWFkVTMyKCk7ZWxzZSBpZigyMDc9PT1lKXQ9dGhpcy5yZWFkVTY0KCk7ZWxzZSBpZigyMDg9PT1lKXQ9dGhpcy5yZWFkSTgoKTtlbHNlIGlmKDIwOT09PWUpdD10aGlzLnJlYWRJMTYoKTtlbHNlIGlmKDIxMD09PWUpdD10aGlzLnJlYWRJMzIoKTtlbHNlIGlmKDIxMT09PWUpdD10aGlzLnJlYWRJNjQoKTtlbHNlIGlmKDIxNz09PWUpcj10aGlzLmxvb2tVOCgpLHQ9dGhpcy5kZWNvZGVVdGY4U3RyaW5nKHIsMSk7ZWxzZSBpZigyMTg9PT1lKXI9dGhpcy5sb29rVTE2KCksdD10aGlzLmRlY29kZVV0ZjhTdHJpbmcociwyKTtlbHNlIGlmKDIxOT09PWUpcj10aGlzLmxvb2tVMzIoKSx0PXRoaXMuZGVjb2RlVXRmOFN0cmluZyhyLDQpO2Vsc2UgaWYoMjIwPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUxNigpKSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2UgaWYoMjIxPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUzMigpKSl7dGhpcy5wdXNoQXJyYXlTdGF0ZShuKSx0aGlzLmNvbXBsZXRlKCk7Y29udGludWUgZX10PVtdfWVsc2UgaWYoMjIyPT09ZSl7aWYoMCE9PShuPXRoaXMucmVhZFUxNigpKSl7dGhpcy5wdXNoTWFwU3RhdGUobiksdGhpcy5jb21wbGV0ZSgpO2NvbnRpbnVlIGV9dD17fX1lbHNlIGlmKDIyMz09PWUpe2lmKDAhPT0obj10aGlzLnJlYWRVMzIoKSkpe3RoaXMucHVzaE1hcFN0YXRlKG4pLHRoaXMuY29tcGxldGUoKTtjb250aW51ZSBlfXQ9e319ZWxzZSBpZigxOTY9PT1lKXt2YXIgbj10aGlzLmxvb2tVOCgpO3Q9dGhpcy5kZWNvZGVCaW5hcnkobiwxKX1lbHNlIGlmKDE5Nz09PWUpbj10aGlzLmxvb2tVMTYoKSx0PXRoaXMuZGVjb2RlQmluYXJ5KG4sMik7ZWxzZSBpZigxOTg9PT1lKW49dGhpcy5sb29rVTMyKCksdD10aGlzLmRlY29kZUJpbmFyeShuLDQpO2Vsc2UgaWYoMjEyPT09ZSl0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKDEsMCk7ZWxzZSBpZigyMTM9PT1lKXQ9dGhpcy5kZWNvZGVFeHRlbnNpb24oMiwwKTtlbHNlIGlmKDIxND09PWUpdD10aGlzLmRlY29kZUV4dGVuc2lvbig0LDApO2Vsc2UgaWYoMjE1PT09ZSl0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKDgsMCk7ZWxzZSBpZigyMTY9PT1lKXQ9dGhpcy5kZWNvZGVFeHRlbnNpb24oMTYsMCk7ZWxzZSBpZigxOTk9PT1lKW49dGhpcy5sb29rVTgoKSx0PXRoaXMuZGVjb2RlRXh0ZW5zaW9uKG4sMSk7ZWxzZSBpZigyMDA9PT1lKW49dGhpcy5sb29rVTE2KCksdD10aGlzLmRlY29kZUV4dGVuc2lvbihuLDIpO2Vsc2V7aWYoMjAxIT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgdHlwZSBieXRlOiBcIitrKGUpKTtuPXRoaXMubG9va1UzMigpLHQ9dGhpcy5kZWNvZGVFeHRlbnNpb24obiw0KX10aGlzLmNvbXBsZXRlKCk7Zm9yKHZhciBvPXRoaXMuc3RhY2s7by5sZW5ndGg+MDspe3ZhciBzPW9bby5sZW5ndGgtMV07aWYoMD09PXMudHlwZSl7aWYocy5hcnJheVtzLnBvc2l0aW9uXT10LHMucG9zaXRpb24rKyxzLnBvc2l0aW9uIT09cy5zaXplKWNvbnRpbnVlIGU7by5wb3AoKSx0PXMuYXJyYXl9ZWxzZXtpZigxPT09cy50eXBlKXtpZih2b2lkIDAsXCJzdHJpbmdcIiE9KGk9dHlwZW9mIHQpJiZcIm51bWJlclwiIT09aSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgdHlwZSBvZiBrZXkgbXVzdCBiZSBzdHJpbmcgb3IgbnVtYmVyIGJ1dCBcIit0eXBlb2YgdCk7cy5rZXk9dCxzLnR5cGU9Mjtjb250aW51ZSBlfWlmKHMubWFwW3Mua2V5XT10LHMucmVhZENvdW50Kysscy5yZWFkQ291bnQhPT1zLnNpemUpe3Mua2V5PW51bGwscy50eXBlPTE7Y29udGludWUgZX1vLnBvcCgpLHQ9cy5tYXB9fXJldHVybiB0fXZhciBpfSxlLnByb3RvdHlwZS5yZWFkSGVhZEJ5dGU9ZnVuY3Rpb24oKXtyZXR1cm4tMT09PXRoaXMuaGVhZEJ5dGUmJih0aGlzLmhlYWRCeXRlPXRoaXMucmVhZFU4KCkpLHRoaXMuaGVhZEJ5dGV9LGUucHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7dGhpcy5oZWFkQnl0ZT0tMX0sZS5wcm90b3R5cGUucmVhZEFycmF5U2l6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucmVhZEhlYWRCeXRlKCk7c3dpdGNoKGUpe2Nhc2UgMjIwOnJldHVybiB0aGlzLnJlYWRVMTYoKTtjYXNlIDIyMTpyZXR1cm4gdGhpcy5yZWFkVTMyKCk7ZGVmYXVsdDppZihlPDE2MClyZXR1cm4gZS0xNDQ7dGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIGFycmF5IHR5cGUgYnl0ZTogXCIrayhlKSl9fSxlLnByb3RvdHlwZS5wdXNoTWFwU3RhdGU9ZnVuY3Rpb24oZSl7aWYoZT50aGlzLm1heE1hcExlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJNYXggbGVuZ3RoIGV4Y2VlZGVkOiBtYXAgbGVuZ3RoIChcIitlK1wiKSA+IG1heE1hcExlbmd0aExlbmd0aCAoXCIrdGhpcy5tYXhNYXBMZW5ndGgrXCIpXCIpO3RoaXMuc3RhY2sucHVzaCh7dHlwZToxLHNpemU6ZSxrZXk6bnVsbCxyZWFkQ291bnQ6MCxtYXA6e319KX0sZS5wcm90b3R5cGUucHVzaEFycmF5U3RhdGU9ZnVuY3Rpb24oZSl7aWYoZT50aGlzLm1heEFycmF5TGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1heCBsZW5ndGggZXhjZWVkZWQ6IGFycmF5IGxlbmd0aCAoXCIrZStcIikgPiBtYXhBcnJheUxlbmd0aCAoXCIrdGhpcy5tYXhBcnJheUxlbmd0aCtcIilcIik7dGhpcy5zdGFjay5wdXNoKHt0eXBlOjAsc2l6ZTplLGFycmF5Om5ldyBBcnJheShlKSxwb3NpdGlvbjowfSl9LGUucHJvdG90eXBlLmRlY29kZVV0ZjhTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihlPnRoaXMubWF4U3RyTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1heCBsZW5ndGggZXhjZWVkZWQ6IFVURi04IGJ5dGUgbGVuZ3RoIChcIitlK1wiKSA+IG1heFN0ckxlbmd0aCAoXCIrdGhpcy5tYXhTdHJMZW5ndGgrXCIpXCIpO2lmKHRoaXMuYnl0ZXMuYnl0ZUxlbmd0aDx0aGlzLnBvcyt0K2UpdGhyb3cgRjt2YXIgbixvPXRoaXMucG9zK3Q7cmV0dXJuIG49dGhpcy5zdGF0ZUlzTWFwS2V5KCkmJihudWxsPT09KHI9dGhpcy5rZXlEZWNvZGVyKXx8dm9pZCAwPT09cj92b2lkIDA6ci5jYW5CZUNhY2hlZChlKSk/dGhpcy5rZXlEZWNvZGVyLmRlY29kZSh0aGlzLmJ5dGVzLG8sZSk6cyYmZT5wP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lLnN1YmFycmF5KHQsdCtyKTtyZXR1cm4gaC5kZWNvZGUobil9KHRoaXMuYnl0ZXMsbyxlKTpsKHRoaXMuYnl0ZXMsbyxlKSx0aGlzLnBvcys9dCtlLG59LGUucHJvdG90eXBlLnN0YXRlSXNNYXBLZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFjay5sZW5ndGg+MCYmMT09PXRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGgtMV0udHlwZX0sZS5wcm90b3R5cGUuZGVjb2RlQmluYXJ5PWZ1bmN0aW9uKGUsdCl7aWYoZT50aGlzLm1heEJpbkxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJNYXggbGVuZ3RoIGV4Y2VlZGVkOiBiaW4gbGVuZ3RoIChcIitlK1wiKSA+IG1heEJpbkxlbmd0aCAoXCIrdGhpcy5tYXhCaW5MZW5ndGgrXCIpXCIpO2lmKCF0aGlzLmhhc1JlbWFpbmluZyhlK3QpKXRocm93IEY7dmFyIHI9dGhpcy5wb3MrdCxuPXRoaXMuYnl0ZXMuc3ViYXJyYXkocixyK2UpO3JldHVybiB0aGlzLnBvcys9dCtlLG59LGUucHJvdG90eXBlLmRlY29kZUV4dGVuc2lvbj1mdW5jdGlvbihlLHQpe2lmKGU+dGhpcy5tYXhFeHRMZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTWF4IGxlbmd0aCBleGNlZWRlZDogZXh0IGxlbmd0aCAoXCIrZStcIikgPiBtYXhFeHRMZW5ndGggKFwiK3RoaXMubWF4RXh0TGVuZ3RoK1wiKVwiKTt2YXIgcj10aGlzLnZpZXcuZ2V0SW50OCh0aGlzLnBvcyt0KSxuPXRoaXMuZGVjb2RlQmluYXJ5KGUsdCsxKTtyZXR1cm4gdGhpcy5leHRlbnNpb25Db2RlYy5kZWNvZGUobixyLHRoaXMuY29udGV4dCl9LGUucHJvdG90eXBlLmxvb2tVOD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZpZXcuZ2V0VWludDgodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5sb29rVTE2PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmlldy5nZXRVaW50MTYodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5sb29rVTMyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmlldy5nZXRVaW50MzIodGhpcy5wb3MpfSxlLnByb3RvdHlwZS5yZWFkVTg9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0VWludDgodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcysrLGV9LGUucHJvdG90eXBlLnJlYWRJOD1mdW5jdGlvbigpe3ZhciBlPXRoaXMudmlldy5nZXRJbnQ4KHRoaXMucG9zKTtyZXR1cm4gdGhpcy5wb3MrKyxlfSxlLnByb3RvdHlwZS5yZWFkVTE2PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldFVpbnQxNih0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz0yLGV9LGUucHJvdG90eXBlLnJlYWRJMTY9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0SW50MTYodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9MixlfSxlLnByb3RvdHlwZS5yZWFkVTMyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldFVpbnQzMih0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz00LGV9LGUucHJvdG90eXBlLnJlYWRJMzI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnZpZXcuZ2V0SW50MzIodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9NCxlfSxlLnByb3RvdHlwZS5yZWFkVTY0PWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4sbz0oZT10aGlzLnZpZXcsdD10aGlzLnBvcyxyPWUuZ2V0VWludDMyKHQpLG49ZS5nZXRVaW50MzIodCs0KSxyPk1hdGguZmxvb3IoTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIvNDI5NDk2NzI5Nik/QmlnSW50KHIpKkJpZ0ludCg0Mjk0OTY3Mjk2KStCaWdJbnQobik6NDI5NDk2NzI5NipyK24pO3JldHVybiB0aGlzLnBvcys9OCxvfSxlLnByb3RvdHlwZS5yZWFkSTY0PWZ1bmN0aW9uKCl7dmFyIGU9Zyh0aGlzLnZpZXcsdGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9OCxlfSxlLnByb3RvdHlwZS5yZWFkRjMyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldEZsb2F0MzIodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9NCxlfSxlLnByb3RvdHlwZS5yZWFkRjY0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3LmdldEZsb2F0NjQodGhpcy5wb3MpO3JldHVybiB0aGlzLnBvcys9OCxlfSxlfSgpLE09e307ZnVuY3Rpb24gSChlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1NKSxuZXcgaih0LmV4dGVuc2lvbkNvZGVjLHQuY29udGV4dCx0Lm1heFN0ckxlbmd0aCx0Lm1heEJpbkxlbmd0aCx0Lm1heEFycmF5TGVuZ3RoLHQubWF4TWFwTGVuZ3RoLHQubWF4RXh0TGVuZ3RoKS5kZWNvZGUoZSl9dmFyIEc9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJm9bMF0pdGhyb3cgb1sxXTtyZXR1cm4gb1sxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBzPXtuZXh0OmEoMCksdGhyb3c6YSgxKSxyZXR1cm46YSgyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoc1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxzO2Z1bmN0aW9uIGEocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihzKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7aTspdHJ5e2lmKHI9MSxuJiYobz0yJnNbMF0/bi5yZXR1cm46c1swXT9uLnRocm93fHwoKG89bi5yZXR1cm4pJiZvLmNhbGwobiksMCk6bi5uZXh0KSYmIShvPW8uY2FsbChuLHNbMV0pKS5kb25lKXJldHVybiBvO3N3aXRjaChuPTAsbyYmKHM9WzImc1swXSxvLnZhbHVlXSksc1swXSl7Y2FzZSAwOmNhc2UgMTpvPXM7YnJlYWs7Y2FzZSA0OnJldHVybiBpLmxhYmVsKysse3ZhbHVlOnNbMV0sZG9uZTohMX07Y2FzZSA1OmkubGFiZWwrKyxuPXNbMV0scz1bMF07Y29udGludWU7Y2FzZSA3OnM9aS5vcHMucG9wKCksaS50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgobz0obz1pLnRyeXMpLmxlbmd0aD4wJiZvW28ubGVuZ3RoLTFdKXx8NiE9PXNbMF0mJjIhPT1zWzBdKSl7aT0wO2NvbnRpbnVlfWlmKDM9PT1zWzBdJiYoIW98fHNbMV0+b1swXSYmc1sxXTxvWzNdKSl7aS5sYWJlbD1zWzFdO2JyZWFrfWlmKDY9PT1zWzBdJiZpLmxhYmVsPG9bMV0pe2kubGFiZWw9b1sxXSxvPXM7YnJlYWt9aWYobyYmaS5sYWJlbDxvWzJdKXtpLmxhYmVsPW9bMl0saS5vcHMucHVzaChzKTticmVha31vWzJdJiZpLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWV9cz10LmNhbGwoZSxpKX1jYXRjaChlKXtzPVs2LGVdLG49MH1maW5hbGx5e3I9bz0wfWlmKDUmc1swXSl0aHJvdyBzWzFdO3JldHVybnt2YWx1ZTpzWzBdP3NbMV06dm9pZCAwLGRvbmU6ITB9fShbcyxhXSl9fX0sSz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIEs/KHRoaXMudj1lLHRoaXMpOm5ldyBLKGUpfSxxPWZ1bmN0aW9uKGUsdCxyKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTt2YXIgbixvPXIuYXBwbHkoZSx0fHxbXSkscz1bXTtyZXR1cm4gbj17fSxpKFwibmV4dFwiKSxpKFwidGhyb3dcIiksaShcInJldHVyblwiKSxuW1N5bWJvbC5hc3luY0l0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxuO2Z1bmN0aW9uIGkoZSl7b1tlXSYmKG5bZV09ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbihyLG4pe3MucHVzaChbZSx0LHIsbl0pPjF8fGEoZSx0KX0pKX0pfWZ1bmN0aW9uIGEoZSx0KXt0cnl7KHI9b1tlXSh0KSkudmFsdWUgaW5zdGFuY2VvZiBLP1Byb21pc2UucmVzb2x2ZShyLnZhbHVlLnYpLnRoZW4oYyx1KTpsKHNbMF1bMl0scil9Y2F0Y2goZSl7bChzWzBdWzNdLGUpfXZhciByfWZ1bmN0aW9uIGMoZSl7YShcIm5leHRcIixlKX1mdW5jdGlvbiB1KGUpe2EoXCJ0aHJvd1wiLGUpfWZ1bmN0aW9uIGwoZSx0KXtlKHQpLHMuc2hpZnQoKSxzLmxlbmd0aCYmYShzWzBdWzBdLHNbMF1bMV0pfX07ZnVuY3Rpb24gJChlKXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIkFzc2VydGlvbiBGYWlsdXJlOiB2YWx1ZSBtdXN0IG5vdCBiZSBudWxsIG5vciB1bmRlZmluZWRcIil9ZnVuY3Rpb24gVihlKXtyZXR1cm4gbnVsbCE9ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0/ZTpmdW5jdGlvbihlKXtyZXR1cm4gcSh0aGlzLGFyZ3VtZW50cywoZnVuY3Rpb24oKXt2YXIgdCxyLG4sbztyZXR1cm4gRyh0aGlzLChmdW5jdGlvbihzKXtzd2l0Y2gocy5sYWJlbCl7Y2FzZSAwOnQ9ZS5nZXRSZWFkZXIoKSxzLmxhYmVsPTE7Y2FzZSAxOnMudHJ5cy5wdXNoKFsxLCw5LDEwXSkscy5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCxLKHQucmVhZCgpKV07Y2FzZSAzOnJldHVybiByPXMuc2VudCgpLG49ci5kb25lLG89ci52YWx1ZSxuP1s0LEsodm9pZCAwKV06WzMsNV07Y2FzZSA0OnJldHVyblsyLHMuc2VudCgpXTtjYXNlIDU6cmV0dXJuICQobyksWzQsSyhvKV07Y2FzZSA2OnJldHVybls0LHMuc2VudCgpXTtjYXNlIDc6cmV0dXJuIHMuc2VudCgpLFszLDJdO2Nhc2UgODpyZXR1cm5bMywxMF07Y2FzZSA5OnJldHVybiB0LnJlbGVhc2VMb2NrKCksWzddO2Nhc2UgMTA6cmV0dXJuWzJdfX0pKX0pKX0oZSl9ZnVuY3Rpb24gVyhlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1NKSxmdW5jdGlvbihlLHQscixuKXtyZXR1cm4gbmV3KHJ8fChyPVByb21pc2UpKSgoZnVuY3Rpb24obyxzKXtmdW5jdGlvbiBpKGUpe3RyeXtjKG4ubmV4dChlKSl9Y2F0Y2goZSl7cyhlKX19ZnVuY3Rpb24gYShlKXt0cnl7YyhuLnRocm93KGUpKX1jYXRjaChlKXtzKGUpfX1mdW5jdGlvbiBjKGUpe3ZhciB0O2UuZG9uZT9vKGUudmFsdWUpOih0PWUudmFsdWUsdCBpbnN0YW5jZW9mIHI/dDpuZXcgcigoZnVuY3Rpb24oZSl7ZSh0KX0pKSkudGhlbihpLGEpfWMoKG49bi5hcHBseShlLHR8fFtdKSkubmV4dCgpKX0pKX0odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByO3JldHVybiBmdW5jdGlvbihlLHQpe3ZhciByLG4sbyxzLGk9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmb1swXSl0aHJvdyBvWzFdO3JldHVybiBvWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHM9e25leHQ6YSgwKSx0aHJvdzphKDEpLHJldHVybjphKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihzW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHM7ZnVuY3Rpb24gYShzKXtyZXR1cm4gZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKHMpe2lmKHIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtpOyl0cnl7aWYocj0xLG4mJihvPTImc1swXT9uLnJldHVybjpzWzBdP24udGhyb3d8fCgobz1uLnJldHVybikmJm8uY2FsbChuKSwwKTpuLm5leHQpJiYhKG89by5jYWxsKG4sc1sxXSkpLmRvbmUpcmV0dXJuIG87c3dpdGNoKG49MCxvJiYocz1bMiZzWzBdLG8udmFsdWVdKSxzWzBdKXtjYXNlIDA6Y2FzZSAxOm89czticmVhaztjYXNlIDQ6cmV0dXJuIGkubGFiZWwrKyx7dmFsdWU6c1sxXSxkb25lOiExfTtjYXNlIDU6aS5sYWJlbCsrLG49c1sxXSxzPVswXTtjb250aW51ZTtjYXNlIDc6cz1pLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKChvPShvPWkudHJ5cykubGVuZ3RoPjAmJm9bby5sZW5ndGgtMV0pfHw2IT09c1swXSYmMiE9PXNbMF0pKXtpPTA7Y29udGludWV9aWYoMz09PXNbMF0mJighb3x8c1sxXT5vWzBdJiZzWzFdPG9bM10pKXtpLmxhYmVsPXNbMV07YnJlYWt9aWYoNj09PXNbMF0mJmkubGFiZWw8b1sxXSl7aS5sYWJlbD1vWzFdLG89czticmVha31pZihvJiZpLmxhYmVsPG9bMl0pe2kubGFiZWw9b1syXSxpLm9wcy5wdXNoKHMpO2JyZWFrfW9bMl0mJmkub3BzLnBvcCgpLGkudHJ5cy5wb3AoKTtjb250aW51ZX1zPXQuY2FsbChlLGkpfWNhdGNoKGUpe3M9WzYsZV0sbj0wfWZpbmFsbHl7cj1vPTB9aWYoNSZzWzBdKXRocm93IHNbMV07cmV0dXJue3ZhbHVlOnNbMF0/c1sxXTp2b2lkIDAsZG9uZTohMH19KFtzLGFdKX19fSh0aGlzLChmdW5jdGlvbihuKXtyZXR1cm4gcj1WKGUpLFsyLG5ldyBqKHQuZXh0ZW5zaW9uQ29kZWMsdC5jb250ZXh0LHQubWF4U3RyTGVuZ3RoLHQubWF4QmluTGVuZ3RoLHQubWF4QXJyYXlMZW5ndGgsdC5tYXhNYXBMZW5ndGgsdC5tYXhFeHRMZW5ndGgpLmRlY29kZUFzeW5jKHIpXX0pKX0pKX1mdW5jdGlvbiBYKGUsdCl7dm9pZCAwPT09dCYmKHQ9TSk7dmFyIHI9VihlKTtyZXR1cm4gbmV3IGoodC5leHRlbnNpb25Db2RlYyx0LmNvbnRleHQsdC5tYXhTdHJMZW5ndGgsdC5tYXhCaW5MZW5ndGgsdC5tYXhBcnJheUxlbmd0aCx0Lm1heE1hcExlbmd0aCx0Lm1heEV4dExlbmd0aCkuZGVjb2RlQXJyYXlTdHJlYW0ocil9ZnVuY3Rpb24gWShlLHQpe3ZvaWQgMD09PXQmJih0PU0pO3ZhciByPVYoZSk7cmV0dXJuIG5ldyBqKHQuZXh0ZW5zaW9uQ29kZWMsdC5jb250ZXh0LHQubWF4U3RyTGVuZ3RoLHQubWF4QmluTGVuZ3RoLHQubWF4QXJyYXlMZW5ndGgsdC5tYXhNYXBMZW5ndGgsdC5tYXhFeHRMZW5ndGgpLmRlY29kZVN0cmVhbShyKX19XSl9LDUxNTU6KGUsdCk9PntcInVzZSBzdHJpY3RcIjt0LmJ5dGVMZW5ndGg9ZnVuY3Rpb24oZSl7dmFyIHQ9YyhlKSxyPXRbMF0sbj10WzFdO3JldHVybiAzKihyK24pLzQtbn0sdC50b0J5dGVBcnJheT1mdW5jdGlvbihlKXt2YXIgdCxyLHM9YyhlKSxpPXNbMF0sYT1zWzFdLHU9bmV3IG8oZnVuY3Rpb24oZSx0LHIpe3JldHVybiAzKih0K3IpLzQtcn0oMCxpLGEpKSxsPTAsaD1hPjA/aS00Omk7Zm9yKHI9MDtyPGg7cis9NCl0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MTh8bltlLmNoYXJDb2RlQXQocisxKV08PDEyfG5bZS5jaGFyQ29kZUF0KHIrMildPDw2fG5bZS5jaGFyQ29kZUF0KHIrMyldLHVbbCsrXT10Pj4xNiYyNTUsdVtsKytdPXQ+PjgmMjU1LHVbbCsrXT0yNTUmdDtyZXR1cm4gMj09PWEmJih0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MnxuW2UuY2hhckNvZGVBdChyKzEpXT4+NCx1W2wrK109MjU1JnQpLDE9PT1hJiYodD1uW2UuY2hhckNvZGVBdChyKV08PDEwfG5bZS5jaGFyQ29kZUF0KHIrMSldPDw0fG5bZS5jaGFyQ29kZUF0KHIrMildPj4yLHVbbCsrXT10Pj44JjI1NSx1W2wrK109MjU1JnQpLHV9LHQuZnJvbUJ5dGVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj1lLmxlbmd0aCxvPW4lMyxzPVtdLGk9MTYzODMsYT0wLGM9bi1vO2E8YzthKz1pKXMucHVzaCh1KGUsYSxhK2k+Yz9jOmEraSkpO3JldHVybiAxPT09bz8odD1lW24tMV0scy5wdXNoKHJbdD4+Ml0rclt0PDw0JjYzXStcIj09XCIpKToyPT09byYmKHQ9KGVbbi0yXTw8OCkrZVtuLTFdLHMucHVzaChyW3Q+PjEwXStyW3Q+PjQmNjNdK3JbdDw8MiY2M10rXCI9XCIpKSxzLmpvaW4oXCJcIil9O2Zvcih2YXIgcj1bXSxuPVtdLG89XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXk/VWludDhBcnJheTpBcnJheSxzPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiLGk9MCxhPXMubGVuZ3RoO2k8YTsrK2kpcltpXT1zW2ldLG5bcy5jaGFyQ29kZUF0KGkpXT1pO2Z1bmN0aW9uIGMoZSl7dmFyIHQ9ZS5sZW5ndGg7aWYodCU0PjApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKTt2YXIgcj1lLmluZGV4T2YoXCI9XCIpO3JldHVybi0xPT09ciYmKHI9dCksW3Iscj09PXQ/MDo0LXIlNF19ZnVuY3Rpb24gdShlLHQsbil7Zm9yKHZhciBvLHMsaT1bXSxhPXQ7YTxuO2ErPTMpbz0oZVthXTw8MTYmMTY3MTE2ODApKyhlW2ErMV08PDgmNjUyODApKygyNTUmZVthKzJdKSxpLnB1c2goclsocz1vKT4+MTgmNjNdK3Jbcz4+MTImNjNdK3Jbcz4+NiY2M10rcls2MyZzXSk7cmV0dXJuIGkuam9pbihcIlwiKX1uW1wiLVwiLmNoYXJDb2RlQXQoMCldPTYyLG5bXCJfXCIuY2hhckNvZGVBdCgwKV09NjN9LDUxMTc6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuOyFmdW5jdGlvbihvKXtcInVzZSBzdHJpY3RcIjt2YXIgcyxpPS9eLT8oPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/JC9pLGE9TWF0aC5jZWlsLGM9TWF0aC5mbG9vcix1PVwiW0JpZ051bWJlciBFcnJvcl0gXCIsbD11K1wiTnVtYmVyIHByaW1pdGl2ZSBoYXMgbW9yZSB0aGFuIDE1IHNpZ25pZmljYW50IGRpZ2l0czogXCIsaD0xZTE0LHA9MTQsZj05MDA3MTk5MjU0NzQwOTkxLGQ9WzEsMTAsMTAwLDFlMywxZTQsMWU1LDFlNiwxZTcsMWU4LDFlOSwxZTEwLDFlMTEsMWUxMiwxZTEzXSxnPTFlNyx5PTFlOTtmdW5jdGlvbiBtKGUpe3ZhciB0PTB8ZTtyZXR1cm4gZT4wfHxlPT09dD90OnQtMX1mdW5jdGlvbiBiKGUpe2Zvcih2YXIgdCxyLG49MSxvPWUubGVuZ3RoLHM9ZVswXStcIlwiO248bzspe2Zvcih0PWVbbisrXStcIlwiLHI9cC10Lmxlbmd0aDtyLS07dD1cIjBcIit0KTtzKz10fWZvcihvPXMubGVuZ3RoOzQ4PT09cy5jaGFyQ29kZUF0KC0tbyk7KTtyZXR1cm4gcy5zbGljZSgwLG8rMXx8MSl9ZnVuY3Rpb24gQShlLHQpe3ZhciByLG4sbz1lLmMscz10LmMsaT1lLnMsYT10LnMsYz1lLmUsdT10LmU7aWYoIWl8fCFhKXJldHVybiBudWxsO2lmKHI9byYmIW9bMF0sbj1zJiYhc1swXSxyfHxuKXJldHVybiByP24/MDotYTppO2lmKGkhPWEpcmV0dXJuIGk7aWYocj1pPDAsbj1jPT11LCFvfHwhcylyZXR1cm4gbj8wOiFvXnI/MTotMTtpZighbilyZXR1cm4gYz51XnI/MTotMTtmb3IoYT0oYz1vLmxlbmd0aCk8KHU9cy5sZW5ndGgpP2M6dSxpPTA7aTxhO2krKylpZihvW2ldIT1zW2ldKXJldHVybiBvW2ldPnNbaV1ecj8xOi0xO3JldHVybiBjPT11PzA6Yz51XnI/MTotMX1mdW5jdGlvbiB3KGUsdCxyLG4pe2lmKGU8dHx8ZT5yfHxlIT09YyhlKSl0aHJvdyBFcnJvcih1KyhufHxcIkFyZ3VtZW50XCIpKyhcIm51bWJlclwiPT10eXBlb2YgZT9lPHR8fGU+cj9cIiBvdXQgb2YgcmFuZ2U6IFwiOlwiIG5vdCBhbiBpbnRlZ2VyOiBcIjpcIiBub3QgYSBwcmltaXRpdmUgbnVtYmVyOiBcIikrU3RyaW5nKGUpKX1mdW5jdGlvbiB2KGUpe3ZhciB0PWUuYy5sZW5ndGgtMTtyZXR1cm4gbShlLmUvcCk9PXQmJmUuY1t0XSUyIT0wfWZ1bmN0aW9uIFMoZSx0KXtyZXR1cm4oZS5sZW5ndGg+MT9lLmNoYXJBdCgwKStcIi5cIitlLnNsaWNlKDEpOmUpKyh0PDA/XCJlXCI6XCJlK1wiKSt0fWZ1bmN0aW9uIHgoZSx0LHIpe3ZhciBuLG87aWYodDwwKXtmb3Iobz1yK1wiLlwiOysrdDtvKz1yKTtlPW8rZX1lbHNlIGlmKCsrdD4obj1lLmxlbmd0aCkpe2ZvcihvPXIsdC09bjstLXQ7bys9cik7ZSs9b31lbHNlIHQ8biYmKGU9ZS5zbGljZSgwLHQpK1wiLlwiK2Uuc2xpY2UodCkpO3JldHVybiBlfShzPWZ1bmN0aW9uIGUodCl7dmFyIHIsbixvLHMsRSxULF8sQixVLGssST1HLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Ryx0b1N0cmluZzpudWxsLHZhbHVlT2Y6bnVsbH0sQz1uZXcgRygxKSxSPTIwLE89NCxEPS03LE49MjEsUD0tMWU3LEw9MWU3LEY9ITEsej0xLGo9MCxNPXtwcmVmaXg6XCJcIixncm91cFNpemU6MyxzZWNvbmRhcnlHcm91cFNpemU6MCxncm91cFNlcGFyYXRvcjpcIixcIixkZWNpbWFsU2VwYXJhdG9yOlwiLlwiLGZyYWN0aW9uR3JvdXBTaXplOjAsZnJhY3Rpb25Hcm91cFNlcGFyYXRvcjpcIsKgXCIsc3VmZml4OlwiXCJ9LEg9XCIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpcIjtmdW5jdGlvbiBHKGUsdCl7dmFyIHIscyxhLHUsaCxkLGcseSxtPXRoaXM7aWYoIShtIGluc3RhbmNlb2YgRykpcmV0dXJuIG5ldyBHKGUsdCk7aWYobnVsbD09dCl7aWYoZSYmITA9PT1lLl9pc0JpZ051bWJlcilyZXR1cm4gbS5zPWUucyx2b2lkKCFlLmN8fGUuZT5MP20uYz1tLmU9bnVsbDplLmU8UD9tLmM9W20uZT0wXToobS5lPWUuZSxtLmM9ZS5jLnNsaWNlKCkpKTtpZigoZD1cIm51bWJlclwiPT10eXBlb2YgZSkmJjAqZT09MCl7aWYobS5zPTEvZTwwPyhlPS1lLC0xKToxLGU9PT1+fmUpe2Zvcih1PTAsaD1lO2g+PTEwO2gvPTEwLHUrKyk7cmV0dXJuIHZvaWQodT5MP20uYz1tLmU9bnVsbDoobS5lPXUsbS5jPVtlXSkpfXk9U3RyaW5nKGUpfWVsc2V7aWYoIWkudGVzdCh5PVN0cmluZyhlKSkpcmV0dXJuIG8obSx5LGQpO20ucz00NT09eS5jaGFyQ29kZUF0KDApPyh5PXkuc2xpY2UoMSksLTEpOjF9KHU9eS5pbmRleE9mKFwiLlwiKSk+LTEmJih5PXkucmVwbGFjZShcIi5cIixcIlwiKSksKGg9eS5zZWFyY2goL2UvaSkpPjA/KHU8MCYmKHU9aCksdSs9K3kuc2xpY2UoaCsxKSx5PXkuc3Vic3RyaW5nKDAsaCkpOnU8MCYmKHU9eS5sZW5ndGgpfWVsc2V7aWYodyh0LDIsSC5sZW5ndGgsXCJCYXNlXCIpLDEwPT10KXJldHVybiBWKG09bmV3IEcoZSksUittLmUrMSxPKTtpZih5PVN0cmluZyhlKSxkPVwibnVtYmVyXCI9PXR5cGVvZiBlKXtpZigwKmUhPTApcmV0dXJuIG8obSx5LGQsdCk7aWYobS5zPTEvZTwwPyh5PXkuc2xpY2UoMSksLTEpOjEsRy5ERUJVRyYmeS5yZXBsYWNlKC9eMFxcLjAqfFxcLi8sXCJcIikubGVuZ3RoPjE1KXRocm93IEVycm9yKGwrZSl9ZWxzZSBtLnM9NDU9PT15LmNoYXJDb2RlQXQoMCk/KHk9eS5zbGljZSgxKSwtMSk6MTtmb3Iocj1ILnNsaWNlKDAsdCksdT1oPTAsZz15Lmxlbmd0aDtoPGc7aCsrKWlmKHIuaW5kZXhPZihzPXkuY2hhckF0KGgpKTwwKXtpZihcIi5cIj09cyl7aWYoaD51KXt1PWc7Y29udGludWV9fWVsc2UgaWYoIWEmJih5PT15LnRvVXBwZXJDYXNlKCkmJih5PXkudG9Mb3dlckNhc2UoKSl8fHk9PXkudG9Mb3dlckNhc2UoKSYmKHk9eS50b1VwcGVyQ2FzZSgpKSkpe2E9ITAsaD0tMSx1PTA7Y29udGludWV9cmV0dXJuIG8obSxTdHJpbmcoZSksZCx0KX1kPSExLCh1PSh5PW4oeSx0LDEwLG0ucykpLmluZGV4T2YoXCIuXCIpKT4tMT95PXkucmVwbGFjZShcIi5cIixcIlwiKTp1PXkubGVuZ3RofWZvcihoPTA7NDg9PT15LmNoYXJDb2RlQXQoaCk7aCsrKTtmb3IoZz15Lmxlbmd0aDs0OD09PXkuY2hhckNvZGVBdCgtLWcpOyk7aWYoeT15LnNsaWNlKGgsKytnKSl7aWYoZy09aCxkJiZHLkRFQlVHJiZnPjE1JiYoZT5mfHxlIT09YyhlKSkpdGhyb3cgRXJyb3IobCttLnMqZSk7aWYoKHU9dS1oLTEpPkwpbS5jPW0uZT1udWxsO2Vsc2UgaWYodTxQKW0uYz1bbS5lPTBdO2Vsc2V7aWYobS5lPXUsbS5jPVtdLGg9KHUrMSklcCx1PDAmJihoKz1wKSxoPGcpe2ZvcihoJiZtLmMucHVzaCgreS5zbGljZSgwLGgpKSxnLT1wO2g8ZzspbS5jLnB1c2goK3kuc2xpY2UoaCxoKz1wKSk7aD1wLSh5PXkuc2xpY2UoaCkpLmxlbmd0aH1lbHNlIGgtPWc7Zm9yKDtoLS07eSs9XCIwXCIpO20uYy5wdXNoKCt5KX19ZWxzZSBtLmM9W20uZT0wXX1mdW5jdGlvbiBLKGUsdCxyLG4pe3ZhciBvLHMsaSxhLGM7aWYobnVsbD09cj9yPU86dyhyLDAsOCksIWUuYylyZXR1cm4gZS50b1N0cmluZygpO2lmKG89ZS5jWzBdLGk9ZS5lLG51bGw9PXQpYz1iKGUuYyksYz0xPT1ufHwyPT1uJiYoaTw9RHx8aT49Tik/UyhjLGkpOngoYyxpLFwiMFwiKTtlbHNlIGlmKHM9KGU9VihuZXcgRyhlKSx0LHIpKS5lLGE9KGM9YihlLmMpKS5sZW5ndGgsMT09bnx8Mj09biYmKHQ8PXN8fHM8PUQpKXtmb3IoO2E8dDtjKz1cIjBcIixhKyspO2M9UyhjLHMpfWVsc2UgaWYodC09aSxjPXgoYyxzLFwiMFwiKSxzKzE+YSl7aWYoLS10PjApZm9yKGMrPVwiLlwiO3QtLTtjKz1cIjBcIik7fWVsc2UgaWYoKHQrPXMtYSk+MClmb3IocysxPT1hJiYoYys9XCIuXCIpO3QtLTtjKz1cIjBcIik7cmV0dXJuIGUuczwwJiZvP1wiLVwiK2M6Y31mdW5jdGlvbiBxKGUsdCl7Zm9yKHZhciByLG49MSxvPW5ldyBHKGVbMF0pO248ZS5sZW5ndGg7bisrKXtpZighKHI9bmV3IEcoZVtuXSkpLnMpe289cjticmVha310LmNhbGwobyxyKSYmKG89cil9cmV0dXJuIG99ZnVuY3Rpb24gJChlLHQscil7Zm9yKHZhciBuPTEsbz10Lmxlbmd0aDshdFstLW9dO3QucG9wKCkpO2ZvcihvPXRbMF07bz49MTA7by89MTAsbisrKTtyZXR1cm4ocj1uK3IqcC0xKT5MP2UuYz1lLmU9bnVsbDpyPFA/ZS5jPVtlLmU9MF06KGUuZT1yLGUuYz10KSxlfWZ1bmN0aW9uIFYoZSx0LHIsbil7dmFyIG8scyxpLHUsbCxmLGcseT1lLmMsbT1kO2lmKHkpe2U6e2ZvcihvPTEsdT15WzBdO3U+PTEwO3UvPTEwLG8rKyk7aWYoKHM9dC1vKTwwKXMrPXAsaT10LGc9KGw9eVtmPTBdKS9tW28taS0xXSUxMHwwO2Vsc2UgaWYoKGY9YSgocysxKS9wKSk+PXkubGVuZ3RoKXtpZighbilicmVhayBlO2Zvcig7eS5sZW5ndGg8PWY7eS5wdXNoKDApKTtsPWc9MCxvPTEsaT0ocyU9cCktcCsxfWVsc2V7Zm9yKGw9dT15W2ZdLG89MTt1Pj0xMDt1Lz0xMCxvKyspO2c9KGk9KHMlPXApLXArbyk8MD8wOmwvbVtvLWktMV0lMTB8MH1pZihuPW58fHQ8MHx8bnVsbCE9eVtmKzFdfHwoaTwwP2w6bCVtW28taS0xXSksbj1yPDQ/KGd8fG4pJiYoMD09cnx8cj09KGUuczwwPzM6MikpOmc+NXx8NT09ZyYmKDQ9PXJ8fG58fDY9PXImJihzPjA/aT4wP2wvbVtvLWldOjA6eVtmLTFdKSUxMCYxfHxyPT0oZS5zPDA/ODo3KSksdDwxfHwheVswXSlyZXR1cm4geS5sZW5ndGg9MCxuPyh0LT1lLmUrMSx5WzBdPW1bKHAtdCVwKSVwXSxlLmU9LXR8fDApOnlbMF09ZS5lPTAsZTtpZigwPT1zPyh5Lmxlbmd0aD1mLHU9MSxmLS0pOih5Lmxlbmd0aD1mKzEsdT1tW3Atc10seVtmXT1pPjA/YyhsL21bby1pXSVtW2ldKSp1OjApLG4pZm9yKDs7KXtpZigwPT1mKXtmb3Iocz0xLGk9eVswXTtpPj0xMDtpLz0xMCxzKyspO2ZvcihpPXlbMF0rPXUsdT0xO2k+PTEwO2kvPTEwLHUrKyk7cyE9dSYmKGUuZSsrLHlbMF09PWgmJih5WzBdPTEpKTticmVha31pZih5W2ZdKz11LHlbZl0hPWgpYnJlYWs7eVtmLS1dPTAsdT0xfWZvcihzPXkubGVuZ3RoOzA9PT15Wy0tc107eS5wb3AoKSk7fWUuZT5MP2UuYz1lLmU9bnVsbDplLmU8UCYmKGUuYz1bZS5lPTBdKX1yZXR1cm4gZX1mdW5jdGlvbiBXKGUpe3ZhciB0LHI9ZS5lO3JldHVybiBudWxsPT09cj9lLnRvU3RyaW5nKCk6KHQ9YihlLmMpLHQ9cjw9RHx8cj49Tj9TKHQscik6eCh0LHIsXCIwXCIpLGUuczwwP1wiLVwiK3Q6dCl9cmV0dXJuIEcuY2xvbmU9ZSxHLlJPVU5EX1VQPTAsRy5ST1VORF9ET1dOPTEsRy5ST1VORF9DRUlMPTIsRy5ST1VORF9GTE9PUj0zLEcuUk9VTkRfSEFMRl9VUD00LEcuUk9VTkRfSEFMRl9ET1dOPTUsRy5ST1VORF9IQUxGX0VWRU49NixHLlJPVU5EX0hBTEZfQ0VJTD03LEcuUk9VTkRfSEFMRl9GTE9PUj04LEcuRVVDTElEPTksRy5jb25maWc9Ry5zZXQ9ZnVuY3Rpb24oZSl7dmFyIHQscjtpZihudWxsIT1lKXtpZihcIm9iamVjdFwiIT10eXBlb2YgZSl0aHJvdyBFcnJvcih1K1wiT2JqZWN0IGV4cGVjdGVkOiBcIitlKTtpZihlLmhhc093blByb3BlcnR5KHQ9XCJERUNJTUFMX1BMQUNFU1wiKSYmKHcocj1lW3RdLDAseSx0KSxSPXIpLGUuaGFzT3duUHJvcGVydHkodD1cIlJPVU5ESU5HX01PREVcIikmJih3KHI9ZVt0XSwwLDgsdCksTz1yKSxlLmhhc093blByb3BlcnR5KHQ9XCJFWFBPTkVOVElBTF9BVFwiKSYmKChyPWVbdF0pJiZyLnBvcD8odyhyWzBdLC15LDAsdCksdyhyWzFdLDAseSx0KSxEPXJbMF0sTj1yWzFdKToodyhyLC15LHksdCksRD0tKE49cjwwPy1yOnIpKSksZS5oYXNPd25Qcm9wZXJ0eSh0PVwiUkFOR0VcIikpaWYoKHI9ZVt0XSkmJnIucG9wKXcoclswXSwteSwtMSx0KSx3KHJbMV0sMSx5LHQpLFA9clswXSxMPXJbMV07ZWxzZXtpZih3KHIsLXkseSx0KSwhcil0aHJvdyBFcnJvcih1K3QrXCIgY2Fubm90IGJlIHplcm86IFwiK3IpO1A9LShMPXI8MD8tcjpyKX1pZihlLmhhc093blByb3BlcnR5KHQ9XCJDUllQVE9cIikpe2lmKChyPWVbdF0pIT09ISFyKXRocm93IEVycm9yKHUrdCtcIiBub3QgdHJ1ZSBvciBmYWxzZTogXCIrcik7aWYocil7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGNyeXB0b3x8IWNyeXB0b3x8IWNyeXB0by5nZXRSYW5kb21WYWx1ZXMmJiFjcnlwdG8ucmFuZG9tQnl0ZXMpdGhyb3cgRj0hcixFcnJvcih1K1wiY3J5cHRvIHVuYXZhaWxhYmxlXCIpO0Y9cn1lbHNlIEY9cn1pZihlLmhhc093blByb3BlcnR5KHQ9XCJNT0RVTE9fTU9ERVwiKSYmKHcocj1lW3RdLDAsOSx0KSx6PXIpLGUuaGFzT3duUHJvcGVydHkodD1cIlBPV19QUkVDSVNJT05cIikmJih3KHI9ZVt0XSwwLHksdCksaj1yKSxlLmhhc093blByb3BlcnR5KHQ9XCJGT1JNQVRcIikpe2lmKFwib2JqZWN0XCIhPXR5cGVvZihyPWVbdF0pKXRocm93IEVycm9yKHUrdCtcIiBub3QgYW4gb2JqZWN0OiBcIityKTtNPXJ9aWYoZS5oYXNPd25Qcm9wZXJ0eSh0PVwiQUxQSEFCRVRcIikpe2lmKFwic3RyaW5nXCIhPXR5cGVvZihyPWVbdF0pfHwvXi4/JHxbK1xcLS5cXHNdfCguKS4qXFwxLy50ZXN0KHIpKXRocm93IEVycm9yKHUrdCtcIiBpbnZhbGlkOiBcIityKTtIPXJ9fXJldHVybntERUNJTUFMX1BMQUNFUzpSLFJPVU5ESU5HX01PREU6TyxFWFBPTkVOVElBTF9BVDpbRCxOXSxSQU5HRTpbUCxMXSxDUllQVE86RixNT0RVTE9fTU9ERTp6LFBPV19QUkVDSVNJT046aixGT1JNQVQ6TSxBTFBIQUJFVDpIfX0sRy5pc0JpZ051bWJlcj1mdW5jdGlvbihlKXtpZighZXx8ITAhPT1lLl9pc0JpZ051bWJlcilyZXR1cm4hMTtpZighRy5ERUJVRylyZXR1cm4hMDt2YXIgdCxyLG49ZS5jLG89ZS5lLHM9ZS5zO2U6aWYoXCJbb2JqZWN0IEFycmF5XVwiPT17fS50b1N0cmluZy5jYWxsKG4pKXtpZigoMT09PXN8fC0xPT09cykmJm8+PS15JiZvPD15JiZvPT09YyhvKSl7aWYoMD09PW5bMF0pe2lmKDA9PT1vJiYxPT09bi5sZW5ndGgpcmV0dXJuITA7YnJlYWsgZX1pZigodD0obysxKSVwKTwxJiYodCs9cCksU3RyaW5nKG5bMF0pLmxlbmd0aD09dCl7Zm9yKHQ9MDt0PG4ubGVuZ3RoO3QrKylpZigocj1uW3RdKTwwfHxyPj1ofHxyIT09YyhyKSlicmVhayBlO2lmKDAhPT1yKXJldHVybiEwfX19ZWxzZSBpZihudWxsPT09biYmbnVsbD09PW8mJihudWxsPT09c3x8MT09PXN8fC0xPT09cykpcmV0dXJuITA7dGhyb3cgRXJyb3IodStcIkludmFsaWQgQmlnTnVtYmVyOiBcIitlKX0sRy5tYXhpbXVtPUcubWF4PWZ1bmN0aW9uKCl7cmV0dXJuIHEoYXJndW1lbnRzLEkubHQpfSxHLm1pbmltdW09Ry5taW49ZnVuY3Rpb24oKXtyZXR1cm4gcShhcmd1bWVudHMsSS5ndCl9LEcucmFuZG9tPShzPTkwMDcxOTkyNTQ3NDA5OTIsRT1NYXRoLnJhbmRvbSgpKnMmMjA5NzE1MT9mdW5jdGlvbigpe3JldHVybiBjKE1hdGgucmFuZG9tKCkqcyl9OmZ1bmN0aW9uKCl7cmV0dXJuIDgzODg2MDgqKDEwNzM3NDE4MjQqTWF0aC5yYW5kb20oKXwwKSsoODM4ODYwOCpNYXRoLnJhbmRvbSgpfDApfSxmdW5jdGlvbihlKXt2YXIgdCxyLG4sbyxzLGk9MCxsPVtdLGg9bmV3IEcoQyk7aWYobnVsbD09ZT9lPVI6dyhlLDAseSksbz1hKGUvcCksRilpZihjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKXtmb3IodD1jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50MzJBcnJheShvKj0yKSk7aTxvOykocz0xMzEwNzIqdFtpXSsodFtpKzFdPj4+MTEpKT49OWUxNT8ocj1jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50MzJBcnJheSgyKSksdFtpXT1yWzBdLHRbaSsxXT1yWzFdKToobC5wdXNoKHMlMWUxNCksaSs9Mik7aT1vLzJ9ZWxzZXtpZighY3J5cHRvLnJhbmRvbUJ5dGVzKXRocm93IEY9ITEsRXJyb3IodStcImNyeXB0byB1bmF2YWlsYWJsZVwiKTtmb3IodD1jcnlwdG8ucmFuZG9tQnl0ZXMobyo9Nyk7aTxvOykocz0yODE0NzQ5NzY3MTA2NTYqKDMxJnRbaV0pKzEwOTk1MTE2Mjc3NzYqdFtpKzFdKzQyOTQ5NjcyOTYqdFtpKzJdKzE2Nzc3MjE2KnRbaSszXSsodFtpKzRdPDwxNikrKHRbaSs1XTw8OCkrdFtpKzZdKT49OWUxNT9jcnlwdG8ucmFuZG9tQnl0ZXMoNykuY29weSh0LGkpOihsLnB1c2gocyUxZTE0KSxpKz03KTtpPW8vN31pZighRilmb3IoO2k8bzspKHM9RSgpKTw5ZTE1JiYobFtpKytdPXMlMWUxNCk7Zm9yKG89bFstLWldLGUlPXAsbyYmZSYmKHM9ZFtwLWVdLGxbaV09YyhvL3MpKnMpOzA9PT1sW2ldO2wucG9wKCksaS0tKTtpZihpPDApbD1bbj0wXTtlbHNle2ZvcihuPS0xOzA9PT1sWzBdO2wuc3BsaWNlKDAsMSksbi09cCk7Zm9yKGk9MSxzPWxbMF07cz49MTA7cy89MTAsaSsrKTtpPHAmJihuLT1wLWkpfXJldHVybiBoLmU9bixoLmM9bCxofSksRy5zdW09ZnVuY3Rpb24oKXtmb3IodmFyIGU9MSx0PWFyZ3VtZW50cyxyPW5ldyBHKHRbMF0pO2U8dC5sZW5ndGg7KXI9ci5wbHVzKHRbZSsrXSk7cmV0dXJuIHJ9LG49ZnVuY3Rpb24oKXt2YXIgZT1cIjAxMjM0NTY3ODlcIjtmdW5jdGlvbiB0KGUsdCxyLG4pe2Zvcih2YXIgbyxzLGk9WzBdLGE9MCxjPWUubGVuZ3RoO2E8Yzspe2ZvcihzPWkubGVuZ3RoO3MtLTtpW3NdKj10KTtmb3IoaVswXSs9bi5pbmRleE9mKGUuY2hhckF0KGErKykpLG89MDtvPGkubGVuZ3RoO28rKylpW29dPnItMSYmKG51bGw9PWlbbysxXSYmKGlbbysxXT0wKSxpW28rMV0rPWlbb10vcnwwLGlbb10lPXIpfXJldHVybiBpLnJldmVyc2UoKX1yZXR1cm4gZnVuY3Rpb24obixvLHMsaSxhKXt2YXIgYyx1LGwsaCxwLGYsZCxnLHk9bi5pbmRleE9mKFwiLlwiKSxtPVIsQT1PO2Zvcih5Pj0wJiYoaD1qLGo9MCxuPW4ucmVwbGFjZShcIi5cIixcIlwiKSxmPShnPW5ldyBHKG8pKS5wb3cobi5sZW5ndGgteSksaj1oLGcuYz10KHgoYihmLmMpLGYuZSxcIjBcIiksMTAscyxlKSxnLmU9Zy5jLmxlbmd0aCksbD1oPShkPXQobixvLHMsYT8oYz1ILGUpOihjPWUsSCkpKS5sZW5ndGg7MD09ZFstLWhdO2QucG9wKCkpO2lmKCFkWzBdKXJldHVybiBjLmNoYXJBdCgwKTtpZih5PDA/LS1sOihmLmM9ZCxmLmU9bCxmLnM9aSxkPShmPXIoZixnLG0sQSxzKSkuYyxwPWYucixsPWYuZSkseT1kW3U9bCttKzFdLGg9cy8yLHA9cHx8dTwwfHxudWxsIT1kW3UrMV0scD1BPDQ/KG51bGwhPXl8fHApJiYoMD09QXx8QT09KGYuczwwPzM6MikpOnk+aHx8eT09aCYmKDQ9PUF8fHB8fDY9PUEmJjEmZFt1LTFdfHxBPT0oZi5zPDA/ODo3KSksdTwxfHwhZFswXSluPXA/eChjLmNoYXJBdCgxKSwtbSxjLmNoYXJBdCgwKSk6Yy5jaGFyQXQoMCk7ZWxzZXtpZihkLmxlbmd0aD11LHApZm9yKC0tczsrK2RbLS11XT5zOylkW3VdPTAsdXx8KCsrbCxkPVsxXS5jb25jYXQoZCkpO2ZvcihoPWQubGVuZ3RoOyFkWy0taF07KTtmb3IoeT0wLG49XCJcIjt5PD1oO24rPWMuY2hhckF0KGRbeSsrXSkpO249eChuLGwsYy5jaGFyQXQoMCkpfXJldHVybiBufX0oKSxyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQscil7dmFyIG4sbyxzLGksYT0wLGM9ZS5sZW5ndGgsdT10JWcsbD10L2d8MDtmb3IoZT1lLnNsaWNlKCk7Yy0tOylhPSgobz11KihzPWVbY10lZykrKG49bCpzKyhpPWVbY10vZ3wwKSp1KSVnKmcrYSkvcnwwKSsobi9nfDApK2wqaSxlW2NdPW8lcjtyZXR1cm4gYSYmKGU9W2FdLmNvbmNhdChlKSksZX1mdW5jdGlvbiB0KGUsdCxyLG4pe3ZhciBvLHM7aWYociE9bilzPXI+bj8xOi0xO2Vsc2UgZm9yKG89cz0wO288cjtvKyspaWYoZVtvXSE9dFtvXSl7cz1lW29dPnRbb10/MTotMTticmVha31yZXR1cm4gc31mdW5jdGlvbiByKGUsdCxyLG4pe2Zvcih2YXIgbz0wO3ItLTspZVtyXS09byxvPWVbcl08dFtyXT8xOjAsZVtyXT1vKm4rZVtyXS10W3JdO2Zvcig7IWVbMF0mJmUubGVuZ3RoPjE7ZS5zcGxpY2UoMCwxKSk7fXJldHVybiBmdW5jdGlvbihuLG8scyxpLGEpe3ZhciB1LGwsZixkLGcseSxiLEEsdyx2LFMseCxFLFQsXyxCLFUsaz1uLnM9PW8ucz8xOi0xLEk9bi5jLEM9by5jO2lmKCEoSSYmSVswXSYmQyYmQ1swXSkpcmV0dXJuIG5ldyBHKG4ucyYmby5zJiYoST8hQ3x8SVswXSE9Q1swXTpDKT9JJiYwPT1JWzBdfHwhQz8wKms6ay8wOk5hTik7Zm9yKHc9KEE9bmV3IEcoaykpLmM9W10saz1zKyhsPW4uZS1vLmUpKzEsYXx8KGE9aCxsPW0obi5lL3ApLW0oby5lL3ApLGs9ay9wfDApLGY9MDtDW2ZdPT0oSVtmXXx8MCk7ZisrKTtpZihDW2ZdPihJW2ZdfHwwKSYmbC0tLGs8MCl3LnB1c2goMSksZD0hMDtlbHNle2ZvcihUPUkubGVuZ3RoLEI9Qy5sZW5ndGgsZj0wLGsrPTIsKGc9YyhhLyhDWzBdKzEpKSk+MSYmKEM9ZShDLGcsYSksST1lKEksZyxhKSxCPUMubGVuZ3RoLFQ9SS5sZW5ndGgpLEU9QixTPSh2PUkuc2xpY2UoMCxCKSkubGVuZ3RoO1M8Qjt2W1MrK109MCk7VT1DLnNsaWNlKCksVT1bMF0uY29uY2F0KFUpLF89Q1swXSxDWzFdPj1hLzImJl8rKztkb3tpZihnPTAsKHU9dChDLHYsQixTKSk8MCl7aWYoeD12WzBdLEIhPVMmJih4PXgqYSsodlsxXXx8MCkpLChnPWMoeC9fKSk+MSlmb3IoZz49YSYmKGc9YS0xKSxiPSh5PWUoQyxnLGEpKS5sZW5ndGgsUz12Lmxlbmd0aDsxPT10KHksdixiLFMpOylnLS0scih5LEI8Yj9VOkMsYixhKSxiPXkubGVuZ3RoLHU9MTtlbHNlIDA9PWcmJih1PWc9MSksYj0oeT1DLnNsaWNlKCkpLmxlbmd0aDtpZihiPFMmJih5PVswXS5jb25jYXQoeSkpLHIodix5LFMsYSksUz12Lmxlbmd0aCwtMT09dSlmb3IoO3QoQyx2LEIsUyk8MTspZysrLHIodixCPFM/VTpDLFMsYSksUz12Lmxlbmd0aH1lbHNlIDA9PT11JiYoZysrLHY9WzBdKTt3W2YrK109Zyx2WzBdP3ZbUysrXT1JW0VdfHwwOih2PVtJW0VdXSxTPTEpfXdoaWxlKChFKys8VHx8bnVsbCE9dlswXSkmJmstLSk7ZD1udWxsIT12WzBdLHdbMF18fHcuc3BsaWNlKDAsMSl9aWYoYT09aCl7Zm9yKGY9MSxrPXdbMF07az49MTA7ay89MTAsZisrKTtWKEEscysoQS5lPWYrbCpwLTEpKzEsaSxkKX1lbHNlIEEuZT1sLEEucj0rZDtyZXR1cm4gQX19KCksVD0vXigtPykwKFt4Ym9dKSg/PVxcd1tcXHcuXSokKS9pLF89L14oW14uXSspXFwuJC8sQj0vXlxcLihbXi5dKykkLyxVPS9eLT8oSW5maW5pdHl8TmFOKSQvLGs9L15cXHMqXFwrKD89W1xcdy5dKXxeXFxzK3xcXHMrJC9nLG89ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG8scz1yP3Q6dC5yZXBsYWNlKGssXCJcIik7aWYoVS50ZXN0KHMpKWUucz1pc05hTihzKT9udWxsOnM8MD8tMToxO2Vsc2V7aWYoIXImJihzPXMucmVwbGFjZShULChmdW5jdGlvbihlLHQscil7cmV0dXJuIG89XCJ4XCI9PShyPXIudG9Mb3dlckNhc2UoKSk/MTY6XCJiXCI9PXI/Mjo4LG4mJm4hPW8/ZTp0fSkpLG4mJihvPW4scz1zLnJlcGxhY2UoXyxcIiQxXCIpLnJlcGxhY2UoQixcIjAuJDFcIikpLHQhPXMpKXJldHVybiBuZXcgRyhzLG8pO2lmKEcuREVCVUcpdGhyb3cgRXJyb3IodStcIk5vdCBhXCIrKG4/XCIgYmFzZSBcIituOlwiXCIpK1wiIG51bWJlcjogXCIrdCk7ZS5zPW51bGx9ZS5jPWUuZT1udWxsfSxJLmFic29sdXRlVmFsdWU9SS5hYnM9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRyh0aGlzKTtyZXR1cm4gZS5zPDAmJihlLnM9MSksZX0sSS5jb21wYXJlZFRvPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEEodGhpcyxuZXcgRyhlLHQpKX0sSS5kZWNpbWFsUGxhY2VzPUkuZHA9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scz10aGlzO2lmKG51bGwhPWUpcmV0dXJuIHcoZSwwLHkpLG51bGw9PXQ/dD1POncodCwwLDgpLFYobmV3IEcocyksZStzLmUrMSx0KTtpZighKHI9cy5jKSlyZXR1cm4gbnVsbDtpZihuPSgobz1yLmxlbmd0aC0xKS1tKHRoaXMuZS9wKSkqcCxvPXJbb10pZm9yKDtvJTEwPT0wO28vPTEwLG4tLSk7cmV0dXJuIG48MCYmKG49MCksbn0sSS5kaXZpZGVkQnk9SS5kaXY9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gcih0aGlzLG5ldyBHKGUsdCksUixPKX0sSS5kaXZpZGVkVG9JbnRlZ2VyQnk9SS5pZGl2PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIodGhpcyxuZXcgRyhlLHQpLDAsMSl9LEkuZXhwb25lbnRpYXRlZEJ5PUkucG93PWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaSxsLGgsZixkPXRoaXM7aWYoKGU9bmV3IEcoZSkpLmMmJiFlLmlzSW50ZWdlcigpKXRocm93IEVycm9yKHUrXCJFeHBvbmVudCBub3QgYW4gaW50ZWdlcjogXCIrVyhlKSk7aWYobnVsbCE9dCYmKHQ9bmV3IEcodCkpLGk9ZS5lPjE0LCFkLmN8fCFkLmNbMF18fDE9PWQuY1swXSYmIWQuZSYmMT09ZC5jLmxlbmd0aHx8IWUuY3x8IWUuY1swXSlyZXR1cm4gZj1uZXcgRyhNYXRoLnBvdygrVyhkKSxpPzItdihlKTorVyhlKSkpLHQ/Zi5tb2QodCk6ZjtpZihsPWUuczwwLHQpe2lmKHQuYz8hdC5jWzBdOiF0LnMpcmV0dXJuIG5ldyBHKE5hTik7KG49IWwmJmQuaXNJbnRlZ2VyKCkmJnQuaXNJbnRlZ2VyKCkpJiYoZD1kLm1vZCh0KSl9ZWxzZXtpZihlLmU+OSYmKGQuZT4wfHxkLmU8LTF8fCgwPT1kLmU/ZC5jWzBdPjF8fGkmJmQuY1sxXT49MjRlNzpkLmNbMF08OGUxM3x8aSYmZC5jWzBdPD05OTk5OTc1ZTcpKSlyZXR1cm4gcz1kLnM8MCYmdihlKT8tMDowLGQuZT4tMSYmKHM9MS9zKSxuZXcgRyhsPzEvczpzKTtqJiYocz1hKGovcCsyKSl9Zm9yKGk/KHI9bmV3IEcoLjUpLGwmJihlLnM9MSksaD12KGUpKTpoPShvPU1hdGguYWJzKCtXKGUpKSklMixmPW5ldyBHKEMpOzspe2lmKGgpe2lmKCEoZj1mLnRpbWVzKGQpKS5jKWJyZWFrO3M/Zi5jLmxlbmd0aD5zJiYoZi5jLmxlbmd0aD1zKTpuJiYoZj1mLm1vZCh0KSl9aWYobyl7aWYoMD09PShvPWMoby8yKSkpYnJlYWs7aD1vJTJ9ZWxzZSBpZihWKGU9ZS50aW1lcyhyKSxlLmUrMSwxKSxlLmU+MTQpaD12KGUpO2Vsc2V7aWYoMD09KG89K1coZSkpKWJyZWFrO2g9byUyfWQ9ZC50aW1lcyhkKSxzP2QuYyYmZC5jLmxlbmd0aD5zJiYoZC5jLmxlbmd0aD1zKTpuJiYoZD1kLm1vZCh0KSl9cmV0dXJuIG4/ZjoobCYmKGY9Qy5kaXYoZikpLHQ/Zi5tb2QodCk6cz9WKGYsaixPLHZvaWQgMCk6Zil9LEkuaW50ZWdlclZhbHVlPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBHKHRoaXMpO3JldHVybiBudWxsPT1lP2U9Tzp3KGUsMCw4KSxWKHQsdC5lKzEsZSl9LEkuaXNFcXVhbFRvPUkuZXE9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMD09PUEodGhpcyxuZXcgRyhlLHQpKX0sSS5pc0Zpbml0ZT1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5jfSxJLmlzR3JlYXRlclRoYW49SS5ndD1mdW5jdGlvbihlLHQpe3JldHVybiBBKHRoaXMsbmV3IEcoZSx0KSk+MH0sSS5pc0dyZWF0ZXJUaGFuT3JFcXVhbFRvPUkuZ3RlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIDE9PT0odD1BKHRoaXMsbmV3IEcoZSx0KSkpfHwwPT09dH0sSS5pc0ludGVnZXI9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuYyYmbSh0aGlzLmUvcCk+dGhpcy5jLmxlbmd0aC0yfSxJLmlzTGVzc1RoYW49SS5sdD1mdW5jdGlvbihlLHQpe3JldHVybiBBKHRoaXMsbmV3IEcoZSx0KSk8MH0sSS5pc0xlc3NUaGFuT3JFcXVhbFRvPUkubHRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuLTE9PT0odD1BKHRoaXMsbmV3IEcoZSx0KSkpfHwwPT09dH0sSS5pc05hTj1mdW5jdGlvbigpe3JldHVybiF0aGlzLnN9LEkuaXNOZWdhdGl2ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnM8MH0sSS5pc1Bvc2l0aXZlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucz4wfSxJLmlzWmVybz1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5jJiYwPT10aGlzLmNbMF19LEkubWludXM9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scyxpPXRoaXMsYT1pLnM7aWYodD0oZT1uZXcgRyhlLHQpKS5zLCFhfHwhdClyZXR1cm4gbmV3IEcoTmFOKTtpZihhIT10KXJldHVybiBlLnM9LXQsaS5wbHVzKGUpO3ZhciBjPWkuZS9wLHU9ZS5lL3AsbD1pLmMsZj1lLmM7aWYoIWN8fCF1KXtpZighbHx8IWYpcmV0dXJuIGw/KGUucz0tdCxlKTpuZXcgRyhmP2k6TmFOKTtpZighbFswXXx8IWZbMF0pcmV0dXJuIGZbMF0/KGUucz0tdCxlKTpuZXcgRyhsWzBdP2k6Mz09Tz8tMDowKX1pZihjPW0oYyksdT1tKHUpLGw9bC5zbGljZSgpLGE9Yy11KXtmb3IoKHM9YTwwKT8oYT0tYSxvPWwpOih1PWMsbz1mKSxvLnJldmVyc2UoKSx0PWE7dC0tO28ucHVzaCgwKSk7by5yZXZlcnNlKCl9ZWxzZSBmb3Iobj0ocz0oYT1sLmxlbmd0aCk8KHQ9Zi5sZW5ndGgpKT9hOnQsYT10PTA7dDxuO3QrKylpZihsW3RdIT1mW3RdKXtzPWxbdF08Zlt0XTticmVha31pZihzJiYobz1sLGw9ZixmPW8sZS5zPS1lLnMpLCh0PShuPWYubGVuZ3RoKS0ocj1sLmxlbmd0aCkpPjApZm9yKDt0LS07bFtyKytdPTApO2Zvcih0PWgtMTtuPmE7KXtpZihsWy0tbl08ZltuXSl7Zm9yKHI9bjtyJiYhbFstLXJdO2xbcl09dCk7LS1sW3JdLGxbbl0rPWh9bFtuXS09ZltuXX1mb3IoOzA9PWxbMF07bC5zcGxpY2UoMCwxKSwtLXUpO3JldHVybiBsWzBdPyQoZSxsLHUpOihlLnM9Mz09Tz8tMToxLGUuYz1bZS5lPTBdLGUpfSxJLm1vZHVsbz1JLm1vZD1mdW5jdGlvbihlLHQpe3ZhciBuLG8scz10aGlzO3JldHVybiBlPW5ldyBHKGUsdCksIXMuY3x8IWUuc3x8ZS5jJiYhZS5jWzBdP25ldyBHKE5hTik6IWUuY3x8cy5jJiYhcy5jWzBdP25ldyBHKHMpOig5PT16PyhvPWUucyxlLnM9MSxuPXIocyxlLDAsMyksZS5zPW8sbi5zKj1vKTpuPXIocyxlLDAseiksKGU9cy5taW51cyhuLnRpbWVzKGUpKSkuY1swXXx8MSE9enx8KGUucz1zLnMpLGUpfSxJLm11bHRpcGxpZWRCeT1JLnRpbWVzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaSxhLGMsdSxsLGYsZCx5LGIsQSx3LHY9dGhpcyxTPXYuYyx4PShlPW5ldyBHKGUsdCkpLmM7aWYoIShTJiZ4JiZTWzBdJiZ4WzBdKSlyZXR1cm4hdi5zfHwhZS5zfHxTJiYhU1swXSYmIXh8fHgmJiF4WzBdJiYhUz9lLmM9ZS5lPWUucz1udWxsOihlLnMqPXYucyxTJiZ4PyhlLmM9WzBdLGUuZT0wKTplLmM9ZS5lPW51bGwpLGU7Zm9yKG49bSh2LmUvcCkrbShlLmUvcCksZS5zKj12LnMsKGM9Uy5sZW5ndGgpPChmPXgubGVuZ3RoKSYmKGI9UyxTPXgseD1iLG89YyxjPWYsZj1vKSxvPWMrZixiPVtdO28tLTtiLnB1c2goMCkpO2ZvcihBPWgsdz1nLG89ZjstLW8+PTA7KXtmb3Iocj0wLGQ9eFtvXSV3LHk9eFtvXS93fDAscz1vKyhpPWMpO3M+bzspcj0oKHU9ZCoodT1TWy0taV0ldykrKGE9eSp1KyhsPVNbaV0vd3wwKSpkKSV3KncrYltzXStyKS9BfDApKyhhL3d8MCkreSpsLGJbcy0tXT11JUE7YltzXT1yfXJldHVybiByPysrbjpiLnNwbGljZSgwLDEpLCQoZSxiLG4pfSxJLm5lZ2F0ZWQ9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRyh0aGlzKTtyZXR1cm4gZS5zPS1lLnN8fG51bGwsZX0sSS5wbHVzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj10aGlzLG89bi5zO2lmKHQ9KGU9bmV3IEcoZSx0KSkucywhb3x8IXQpcmV0dXJuIG5ldyBHKE5hTik7aWYobyE9dClyZXR1cm4gZS5zPS10LG4ubWludXMoZSk7dmFyIHM9bi5lL3AsaT1lLmUvcCxhPW4uYyxjPWUuYztpZighc3x8IWkpe2lmKCFhfHwhYylyZXR1cm4gbmV3IEcoby8wKTtpZighYVswXXx8IWNbMF0pcmV0dXJuIGNbMF0/ZTpuZXcgRyhhWzBdP246MCpvKX1pZihzPW0ocyksaT1tKGkpLGE9YS5zbGljZSgpLG89cy1pKXtmb3Iobz4wPyhpPXMscj1jKToobz0tbyxyPWEpLHIucmV2ZXJzZSgpO28tLTtyLnB1c2goMCkpO3IucmV2ZXJzZSgpfWZvcigobz1hLmxlbmd0aCktKHQ9Yy5sZW5ndGgpPDAmJihyPWMsYz1hLGE9cix0PW8pLG89MDt0OylvPShhWy0tdF09YVt0XStjW3RdK28pL2h8MCxhW3RdPWg9PT1hW3RdPzA6YVt0XSVoO3JldHVybiBvJiYoYT1bb10uY29uY2F0KGEpLCsraSksJChlLGEsaSl9LEkucHJlY2lzaW9uPUkuc2Q9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLG8scz10aGlzO2lmKG51bGwhPWUmJmUhPT0hIWUpcmV0dXJuIHcoZSwxLHkpLG51bGw9PXQ/dD1POncodCwwLDgpLFYobmV3IEcocyksZSx0KTtpZighKHI9cy5jKSlyZXR1cm4gbnVsbDtpZihuPShvPXIubGVuZ3RoLTEpKnArMSxvPXJbb10pe2Zvcig7byUxMD09MDtvLz0xMCxuLS0pO2ZvcihvPXJbMF07bz49MTA7by89MTAsbisrKTt9cmV0dXJuIGUmJnMuZSsxPm4mJihuPXMuZSsxKSxufSxJLnNoaWZ0ZWRCeT1mdW5jdGlvbihlKXtyZXR1cm4gdyhlLC05MDA3MTk5MjU0NzQwOTkxLGYpLHRoaXMudGltZXMoXCIxZVwiK2UpfSxJLnNxdWFyZVJvb3Q9SS5zcXJ0PWZ1bmN0aW9uKCl7dmFyIGUsdCxuLG8scyxpPXRoaXMsYT1pLmMsYz1pLnMsdT1pLmUsbD1SKzQsaD1uZXcgRyhcIjAuNVwiKTtpZigxIT09Y3x8IWF8fCFhWzBdKXJldHVybiBuZXcgRyghY3x8YzwwJiYoIWF8fGFbMF0pP05hTjphP2k6MS8wKTtpZigwPT0oYz1NYXRoLnNxcnQoK1coaSkpKXx8Yz09MS8wPygoKHQ9YihhKSkubGVuZ3RoK3UpJTI9PTAmJih0Kz1cIjBcIiksYz1NYXRoLnNxcnQoK3QpLHU9bSgodSsxKS8yKS0odTwwfHx1JTIpLG49bmV3IEcodD1jPT0xLzA/XCI1ZVwiK3U6KHQ9Yy50b0V4cG9uZW50aWFsKCkpLnNsaWNlKDAsdC5pbmRleE9mKFwiZVwiKSsxKSt1KSk6bj1uZXcgRyhjK1wiXCIpLG4uY1swXSlmb3IoKGM9KHU9bi5lKStsKTwzJiYoYz0wKTs7KWlmKHM9bixuPWgudGltZXMocy5wbHVzKHIoaSxzLGwsMSkpKSxiKHMuYykuc2xpY2UoMCxjKT09PSh0PWIobi5jKSkuc2xpY2UoMCxjKSl7aWYobi5lPHUmJi0tYyxcIjk5OTlcIiE9KHQ9dC5zbGljZShjLTMsYysxKSkmJihvfHxcIjQ5OTlcIiE9dCkpeyt0JiYoK3Quc2xpY2UoMSl8fFwiNVwiIT10LmNoYXJBdCgwKSl8fChWKG4sbi5lK1IrMiwxKSxlPSFuLnRpbWVzKG4pLmVxKGkpKTticmVha31pZighbyYmKFYocyxzLmUrUisyLDApLHMudGltZXMocykuZXEoaSkpKXtuPXM7YnJlYWt9bCs9NCxjKz00LG89MX1yZXR1cm4gVihuLG4uZStSKzEsTyxlKX0sSS50b0V4cG9uZW50aWFsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG51bGwhPWUmJih3KGUsMCx5KSxlKyspLEsodGhpcyxlLHQsMSl9LEkudG9GaXhlZD1mdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT1lJiYodyhlLDAseSksZT1lK3RoaXMuZSsxKSxLKHRoaXMsZSx0KX0sSS50b0Zvcm1hdD1mdW5jdGlvbihlLHQscil7dmFyIG4sbz10aGlzO2lmKG51bGw9PXIpbnVsbCE9ZSYmdCYmXCJvYmplY3RcIj09dHlwZW9mIHQ/KHI9dCx0PW51bGwpOmUmJlwib2JqZWN0XCI9PXR5cGVvZiBlPyhyPWUsZT10PW51bGwpOnI9TTtlbHNlIGlmKFwib2JqZWN0XCIhPXR5cGVvZiByKXRocm93IEVycm9yKHUrXCJBcmd1bWVudCBub3QgYW4gb2JqZWN0OiBcIityKTtpZihuPW8udG9GaXhlZChlLHQpLG8uYyl7dmFyIHMsaT1uLnNwbGl0KFwiLlwiKSxhPStyLmdyb3VwU2l6ZSxjPStyLnNlY29uZGFyeUdyb3VwU2l6ZSxsPXIuZ3JvdXBTZXBhcmF0b3J8fFwiXCIsaD1pWzBdLHA9aVsxXSxmPW8uczwwLGQ9Zj9oLnNsaWNlKDEpOmgsZz1kLmxlbmd0aDtpZihjJiYocz1hLGE9YyxjPXMsZy09cyksYT4wJiZnPjApe2ZvcihzPWclYXx8YSxoPWQuc3Vic3RyKDAscyk7czxnO3MrPWEpaCs9bCtkLnN1YnN0cihzLGEpO2M+MCYmKGgrPWwrZC5zbGljZShzKSksZiYmKGg9XCItXCIraCl9bj1wP2grKHIuZGVjaW1hbFNlcGFyYXRvcnx8XCJcIikrKChjPStyLmZyYWN0aW9uR3JvdXBTaXplKT9wLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFxke1wiK2MrXCJ9XFxcXEJcIixcImdcIiksXCIkJlwiKyhyLmZyYWN0aW9uR3JvdXBTZXBhcmF0b3J8fFwiXCIpKTpwKTpofXJldHVybihyLnByZWZpeHx8XCJcIikrbisoci5zdWZmaXh8fFwiXCIpfSxJLnRvRnJhY3Rpb249ZnVuY3Rpb24oZSl7dmFyIHQsbixvLHMsaSxhLGMsbCxoLGYsZyx5LG09dGhpcyxBPW0uYztpZihudWxsIT1lJiYoIShjPW5ldyBHKGUpKS5pc0ludGVnZXIoKSYmKGMuY3x8MSE9PWMucyl8fGMubHQoQykpKXRocm93IEVycm9yKHUrXCJBcmd1bWVudCBcIisoYy5pc0ludGVnZXIoKT9cIm91dCBvZiByYW5nZTogXCI6XCJub3QgYW4gaW50ZWdlcjogXCIpK1coYykpO2lmKCFBKXJldHVybiBuZXcgRyhtKTtmb3IodD1uZXcgRyhDKSxoPW49bmV3IEcoQyksbz1sPW5ldyBHKEMpLHk9YihBKSxpPXQuZT15Lmxlbmd0aC1tLmUtMSx0LmNbMF09ZFsoYT1pJXApPDA/cCthOmFdLGU9IWV8fGMuY29tcGFyZWRUbyh0KT4wP2k+MD90Omg6YyxhPUwsTD0xLzAsYz1uZXcgRyh5KSxsLmNbMF09MDtmPXIoYyx0LDAsMSksMSE9KHM9bi5wbHVzKGYudGltZXMobykpKS5jb21wYXJlZFRvKGUpOyluPW8sbz1zLGg9bC5wbHVzKGYudGltZXMocz1oKSksbD1zLHQ9Yy5taW51cyhmLnRpbWVzKHM9dCkpLGM9cztyZXR1cm4gcz1yKGUubWludXMobiksbywwLDEpLGw9bC5wbHVzKHMudGltZXMoaCkpLG49bi5wbHVzKHMudGltZXMobykpLGwucz1oLnM9bS5zLGc9cihoLG8saSo9MixPKS5taW51cyhtKS5hYnMoKS5jb21wYXJlZFRvKHIobCxuLGksTykubWludXMobSkuYWJzKCkpPDE/W2gsb106W2wsbl0sTD1hLGd9LEkudG9OdW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4rVyh0aGlzKX0sSS50b1ByZWNpc2lvbj1mdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT1lJiZ3KGUsMSx5KSxLKHRoaXMsZSx0LDIpfSxJLnRvU3RyaW5nPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcyxvPXIucyxzPXIuZTtyZXR1cm4gbnVsbD09PXM/bz8odD1cIkluZmluaXR5XCIsbzwwJiYodD1cIi1cIit0KSk6dD1cIk5hTlwiOihudWxsPT1lP3Q9czw9RHx8cz49Tj9TKGIoci5jKSxzKTp4KGIoci5jKSxzLFwiMFwiKToxMD09PWU/dD14KGIoKHI9VihuZXcgRyhyKSxSK3MrMSxPKSkuYyksci5lLFwiMFwiKToodyhlLDIsSC5sZW5ndGgsXCJCYXNlXCIpLHQ9bih4KGIoci5jKSxzLFwiMFwiKSwxMCxlLG8sITApKSxvPDAmJnIuY1swXSYmKHQ9XCItXCIrdCkpLHR9LEkudmFsdWVPZj1JLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybiBXKHRoaXMpfSxJLl9pc0JpZ051bWJlcj0hMCxudWxsIT10JiZHLnNldCh0KSxHfSgpKS5kZWZhdWx0PXMuQmlnTnVtYmVyPXMsdm9pZCAwPT09KG49ZnVuY3Rpb24oKXtyZXR1cm4gc30uY2FsbCh0LHIsdCxlKSl8fChlLmV4cG9ydHM9bil9KCl9LDI0ODY6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO2NvbnN0IG49cig1MTU1KSxvPXIoNDUyNSkscz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbC5mb3I/U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpOm51bGw7dC5CdWZmZXI9Yyx0LlNsb3dCdWZmZXI9ZnVuY3Rpb24oZSl7cmV0dXJuK2UhPWUmJihlPTApLGMuYWxsb2MoK2UpfSx0LklOU1BFQ1RfTUFYX0JZVEVTPTUwO2NvbnN0IGk9MjE0NzQ4MzY0NztmdW5jdGlvbiBhKGUpe2lmKGU+aSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIFwiJytlKydcIiBpcyBpbnZhbGlkIGZvciBvcHRpb24gXCJzaXplXCInKTtjb25zdCB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxjLnByb3RvdHlwZSksdH1mdW5jdGlvbiBjKGUsdCxyKXtpZihcIm51bWJlclwiPT10eXBlb2YgZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtyZXR1cm4gaChlKX1yZXR1cm4gdShlLHQscil9ZnVuY3Rpb24gdShlLHQscil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwiXCIhPT10fHwodD1cInV0ZjhcIiksIWMuaXNFbmNvZGluZyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrdCk7Y29uc3Qgcj0wfGcoZSx0KTtsZXQgbj1hKHIpO2NvbnN0IG89bi53cml0ZShlLHQpO3JldHVybiBvIT09ciYmKG49bi5zbGljZSgwLG8pKSxufShlLHQpO2lmKEFycmF5QnVmZmVyLmlzVmlldyhlKSlyZXR1cm4gZnVuY3Rpb24oZSl7aWYoWChlLFVpbnQ4QXJyYXkpKXtjb25zdCB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBmKHQuYnVmZmVyLHQuYnl0ZU9mZnNldCx0LmJ5dGVMZW5ndGgpfXJldHVybiBwKGUpfShlKTtpZihudWxsPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSk7aWYoWChlLEFycmF5QnVmZmVyKXx8ZSYmWChlLmJ1ZmZlcixBcnJheUJ1ZmZlcikpcmV0dXJuIGYoZSx0LHIpO2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciYmKFgoZSxTaGFyZWRBcnJheUJ1ZmZlcil8fGUmJlgoZS5idWZmZXIsU2hhcmVkQXJyYXlCdWZmZXIpKSlyZXR1cm4gZihlLHQscik7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtjb25zdCBuPWUudmFsdWVPZiYmZS52YWx1ZU9mKCk7aWYobnVsbCE9biYmbiE9PWUpcmV0dXJuIGMuZnJvbShuLHQscik7Y29uc3Qgbz1mdW5jdGlvbihlKXtpZihjLmlzQnVmZmVyKGUpKXtjb25zdCB0PTB8ZChlLmxlbmd0aCkscj1hKHQpO3JldHVybiAwPT09ci5sZW5ndGh8fGUuY29weShyLDAsMCx0KSxyfXJldHVybiB2b2lkIDAhPT1lLmxlbmd0aD9cIm51bWJlclwiIT10eXBlb2YgZS5sZW5ndGh8fFkoZS5sZW5ndGgpP2EoMCk6cChlKTpcIkJ1ZmZlclwiPT09ZS50eXBlJiZBcnJheS5pc0FycmF5KGUuZGF0YSk/cChlLmRhdGEpOnZvaWQgMH0oZSk7aWYobylyZXR1cm4gbztpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wudG9QcmltaXRpdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGVbU3ltYm9sLnRvUHJpbWl0aXZlXSlyZXR1cm4gYy5mcm9tKGVbU3ltYm9sLnRvUHJpbWl0aXZlXShcInN0cmluZ1wiKSx0LHIpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9ZnVuY3Rpb24gbChlKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyk7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfWZ1bmN0aW9uIGgoZSl7cmV0dXJuIGwoZSksYShlPDA/MDowfGQoZSkpfWZ1bmN0aW9uIHAoZSl7Y29uc3QgdD1lLmxlbmd0aDwwPzA6MHxkKGUubGVuZ3RoKSxyPWEodCk7Zm9yKGxldCBuPTA7bjx0O24rPTEpcltuXT0yNTUmZVtuXTtyZXR1cm4gcn1mdW5jdGlvbiBmKGUsdCxyKXtpZih0PDB8fGUuYnl0ZUxlbmd0aDx0KXRocm93IG5ldyBSYW5nZUVycm9yKCdcIm9mZnNldFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpO2lmKGUuYnl0ZUxlbmd0aDx0KyhyfHwwKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKTtsZXQgbjtyZXR1cm4gbj12b2lkIDA9PT10JiZ2b2lkIDA9PT1yP25ldyBVaW50OEFycmF5KGUpOnZvaWQgMD09PXI/bmV3IFVpbnQ4QXJyYXkoZSx0KTpuZXcgVWludDhBcnJheShlLHQsciksT2JqZWN0LnNldFByb3RvdHlwZU9mKG4sYy5wcm90b3R5cGUpLG59ZnVuY3Rpb24gZChlKXtpZihlPj1pKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBzaXplOiAweFwiK2kudG9TdHJpbmcoMTYpK1wiIGJ5dGVzXCIpO3JldHVybiAwfGV9ZnVuY3Rpb24gZyhlLHQpe2lmKGMuaXNCdWZmZXIoZSkpcmV0dXJuIGUubGVuZ3RoO2lmKEFycmF5QnVmZmVyLmlzVmlldyhlKXx8WChlLEFycmF5QnVmZmVyKSlyZXR1cm4gZS5ieXRlTGVuZ3RoO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIG9yIEFycmF5QnVmZmVyLiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIGUpO2NvbnN0IHI9ZS5sZW5ndGgsbj1hcmd1bWVudHMubGVuZ3RoPjImJiEwPT09YXJndW1lbnRzWzJdO2lmKCFuJiYwPT09cilyZXR1cm4gMDtsZXQgbz0hMTtmb3IoOzspc3dpdGNoKHQpe2Nhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIHI7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuICQoZSkubGVuZ3RoO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiAyKnI7Y2FzZVwiaGV4XCI6cmV0dXJuIHI+Pj4xO2Nhc2VcImJhc2U2NFwiOnJldHVybiBWKGUpLmxlbmd0aDtkZWZhdWx0OmlmKG8pcmV0dXJuIG4/LTE6JChlKS5sZW5ndGg7dD0oXCJcIit0KS50b0xvd2VyQ2FzZSgpLG89ITB9fWZ1bmN0aW9uIHkoZSx0LHIpe2xldCBuPSExO2lmKCh2b2lkIDA9PT10fHx0PDApJiYodD0wKSx0PnRoaXMubGVuZ3RoKXJldHVyblwiXCI7aWYoKHZvaWQgMD09PXJ8fHI+dGhpcy5sZW5ndGgpJiYocj10aGlzLmxlbmd0aCkscjw9MClyZXR1cm5cIlwiO2lmKChyPj4+PTApPD0odD4+Pj0wKSlyZXR1cm5cIlwiO2ZvcihlfHwoZT1cInV0ZjhcIik7Oylzd2l0Y2goZSl7Y2FzZVwiaGV4XCI6cmV0dXJuIEkodGhpcyx0LHIpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBfKHRoaXMsdCxyKTtjYXNlXCJhc2NpaVwiOnJldHVybiBVKHRoaXMsdCxyKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gayh0aGlzLHQscik7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIFQodGhpcyx0LHIpO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiBDKHRoaXMsdCxyKTtkZWZhdWx0OmlmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2UpO2U9KGUrXCJcIikudG9Mb3dlckNhc2UoKSxuPSEwfX1mdW5jdGlvbiBtKGUsdCxyKXtjb25zdCBuPWVbdF07ZVt0XT1lW3JdLGVbcl09bn1mdW5jdGlvbiBiKGUsdCxyLG4sbyl7aWYoMD09PWUubGVuZ3RoKXJldHVybi0xO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByPyhuPXIscj0wKTpyPjIxNDc0ODM2NDc/cj0yMTQ3NDgzNjQ3OnI8LTIxNDc0ODM2NDgmJihyPS0yMTQ3NDgzNjQ4KSxZKHI9K3IpJiYocj1vPzA6ZS5sZW5ndGgtMSkscjwwJiYocj1lLmxlbmd0aCtyKSxyPj1lLmxlbmd0aCl7aWYobylyZXR1cm4tMTtyPWUubGVuZ3RoLTF9ZWxzZSBpZihyPDApe2lmKCFvKXJldHVybi0xO3I9MH1pZihcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9Yy5mcm9tKHQsbikpLGMuaXNCdWZmZXIodCkpcmV0dXJuIDA9PT10Lmxlbmd0aD8tMTpBKGUsdCxyLG4sbyk7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIHQmPTI1NSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mP28/VWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUsdCxyKTpVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGUsdCxyKTpBKGUsW3RdLHIsbixvKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIEEoZSx0LHIsbixvKXtsZXQgcyxpPTEsYT1lLmxlbmd0aCxjPXQubGVuZ3RoO2lmKHZvaWQgMCE9PW4mJihcInVjczJcIj09PShuPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpKXx8XCJ1Y3MtMlwiPT09bnx8XCJ1dGYxNmxlXCI9PT1ufHxcInV0Zi0xNmxlXCI9PT1uKSl7aWYoZS5sZW5ndGg8Mnx8dC5sZW5ndGg8MilyZXR1cm4tMTtpPTIsYS89MixjLz0yLHIvPTJ9ZnVuY3Rpb24gdShlLHQpe3JldHVybiAxPT09aT9lW3RdOmUucmVhZFVJbnQxNkJFKHQqaSl9aWYobyl7bGV0IG49LTE7Zm9yKHM9cjtzPGE7cysrKWlmKHUoZSxzKT09PXUodCwtMT09PW4/MDpzLW4pKXtpZigtMT09PW4mJihuPXMpLHMtbisxPT09YylyZXR1cm4gbippfWVsc2UtMSE9PW4mJihzLT1zLW4pLG49LTF9ZWxzZSBmb3IocitjPmEmJihyPWEtYykscz1yO3M+PTA7cy0tKXtsZXQgcj0hMDtmb3IobGV0IG49MDtuPGM7bisrKWlmKHUoZSxzK24pIT09dSh0LG4pKXtyPSExO2JyZWFrfWlmKHIpcmV0dXJuIHN9cmV0dXJuLTF9ZnVuY3Rpb24gdyhlLHQscixuKXtyPU51bWJlcihyKXx8MDtjb25zdCBvPWUubGVuZ3RoLXI7bj8obj1OdW1iZXIobikpPm8mJihuPW8pOm49bztjb25zdCBzPXQubGVuZ3RoO2xldCBpO2ZvcihuPnMvMiYmKG49cy8yKSxpPTA7aTxuOysraSl7Y29uc3Qgbj1wYXJzZUludCh0LnN1YnN0cigyKmksMiksMTYpO2lmKFkobikpcmV0dXJuIGk7ZVtyK2ldPW59cmV0dXJuIGl9ZnVuY3Rpb24gdihlLHQscixuKXtyZXR1cm4gVygkKHQsZS5sZW5ndGgtciksZSxyLG4pfWZ1bmN0aW9uIFMoZSx0LHIsbil7cmV0dXJuIFcoZnVuY3Rpb24oZSl7Y29uc3QgdD1bXTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoOysrcil0LnB1c2goMjU1JmUuY2hhckNvZGVBdChyKSk7cmV0dXJuIHR9KHQpLGUscixuKX1mdW5jdGlvbiB4KGUsdCxyLG4pe3JldHVybiBXKFYodCksZSxyLG4pfWZ1bmN0aW9uIEUoZSx0LHIsbil7cmV0dXJuIFcoZnVuY3Rpb24oZSx0KXtsZXQgcixuLG87Y29uc3Qgcz1bXTtmb3IobGV0IGk9MDtpPGUubGVuZ3RoJiYhKCh0LT0yKTwwKTsrK2kpcj1lLmNoYXJDb2RlQXQoaSksbj1yPj44LG89ciUyNTYscy5wdXNoKG8pLHMucHVzaChuKTtyZXR1cm4gc30odCxlLmxlbmd0aC1yKSxlLHIsbil9ZnVuY3Rpb24gVChlLHQscil7cmV0dXJuIDA9PT10JiZyPT09ZS5sZW5ndGg/bi5mcm9tQnl0ZUFycmF5KGUpOm4uZnJvbUJ5dGVBcnJheShlLnNsaWNlKHQscikpfWZ1bmN0aW9uIF8oZSx0LHIpe3I9TWF0aC5taW4oZS5sZW5ndGgscik7Y29uc3Qgbj1bXTtsZXQgbz10O2Zvcig7bzxyOyl7Y29uc3QgdD1lW29dO2xldCBzPW51bGwsaT10PjIzOT80OnQ+MjIzPzM6dD4xOTE/MjoxO2lmKG8raTw9cil7bGV0IHIsbixhLGM7c3dpdGNoKGkpe2Nhc2UgMTp0PDEyOCYmKHM9dCk7YnJlYWs7Y2FzZSAyOnI9ZVtvKzFdLDEyOD09KDE5MiZyKSYmKGM9KDMxJnQpPDw2fDYzJnIsYz4xMjcmJihzPWMpKTticmVhaztjYXNlIDM6cj1lW28rMV0sbj1lW28rMl0sMTI4PT0oMTkyJnIpJiYxMjg9PSgxOTImbikmJihjPSgxNSZ0KTw8MTJ8KDYzJnIpPDw2fDYzJm4sYz4yMDQ3JiYoYzw1NTI5Nnx8Yz41NzM0MykmJihzPWMpKTticmVhaztjYXNlIDQ6cj1lW28rMV0sbj1lW28rMl0sYT1lW28rM10sMTI4PT0oMTkyJnIpJiYxMjg9PSgxOTImbikmJjEyOD09KDE5MiZhKSYmKGM9KDE1JnQpPDwxOHwoNjMmcik8PDEyfCg2MyZuKTw8Nnw2MyZhLGM+NjU1MzUmJmM8MTExNDExMiYmKHM9YykpfX1udWxsPT09cz8ocz02NTUzMyxpPTEpOnM+NjU1MzUmJihzLT02NTUzNixuLnB1c2gocz4+PjEwJjEwMjN8NTUyOTYpLHM9NTYzMjB8MTAyMyZzKSxuLnB1c2gocyksbys9aX1yZXR1cm4gZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmxlbmd0aDtpZih0PD1CKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxlKTtsZXQgcj1cIlwiLG49MDtmb3IoO248dDspcis9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsZS5zbGljZShuLG4rPUIpKTtyZXR1cm4gcn0obil9dC5rTWF4TGVuZ3RoPWksYy5UWVBFRF9BUlJBWV9TVVBQT1JUPWZ1bmN0aW9uKCl7dHJ5e2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoMSksdD17Zm9vOmZ1bmN0aW9uKCl7cmV0dXJuIDQyfX07cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZih0LFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KSw0Mj09PWUuZm9vKCl9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGMuVFlQRURfQVJSQVlfU1VQUE9SVHx8XCJ1bmRlZmluZWRcIj09dHlwZW9mIGNvbnNvbGV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGNvbnNvbGUuZXJyb3J8fGNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgbGFja3MgdHlwZWQgYXJyYXkgKFVpbnQ4QXJyYXkpIHN1cHBvcnQgd2hpY2ggaXMgcmVxdWlyZWQgYnkgYGJ1ZmZlcmAgdjUueC4gVXNlIGBidWZmZXJgIHY0LnggaWYgeW91IHJlcXVpcmUgb2xkIGJyb3dzZXIgc3VwcG9ydC5cIiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGMucHJvdG90eXBlLFwicGFyZW50XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYoYy5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdGhpcy5idWZmZXJ9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGMucHJvdG90eXBlLFwib2Zmc2V0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYoYy5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdGhpcy5ieXRlT2Zmc2V0fX0pLGMucG9vbFNpemU9ODE5MixjLmZyb209ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB1KGUsdCxyKX0sT2JqZWN0LnNldFByb3RvdHlwZU9mKGMucHJvdG90eXBlLFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoYyxVaW50OEFycmF5KSxjLmFsbG9jPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe3JldHVybiBsKGUpLGU8PTA/YShlKTp2b2lkIDAhPT10P1wic3RyaW5nXCI9PXR5cGVvZiByP2EoZSkuZmlsbCh0LHIpOmEoZSkuZmlsbCh0KTphKGUpfShlLHQscil9LGMuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGgoZSl9LGMuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKGUpe3JldHVybiBoKGUpfSxjLmlzQnVmZmVyPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT1lJiYhMD09PWUuX2lzQnVmZmVyJiZlIT09Yy5wcm90b3R5cGV9LGMuY29tcGFyZT1mdW5jdGlvbihlLHQpe2lmKFgoZSxVaW50OEFycmF5KSYmKGU9Yy5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksWCh0LFVpbnQ4QXJyYXkpJiYodD1jLmZyb20odCx0Lm9mZnNldCx0LmJ5dGVMZW5ndGgpKSwhYy5pc0J1ZmZlcihlKXx8IWMuaXNCdWZmZXIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwiYnVmMVwiLCBcImJ1ZjJcIiBhcmd1bWVudHMgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheScpO2lmKGU9PT10KXJldHVybiAwO2xldCByPWUubGVuZ3RoLG49dC5sZW5ndGg7Zm9yKGxldCBvPTAscz1NYXRoLm1pbihyLG4pO288czsrK28paWYoZVtvXSE9PXRbb10pe3I9ZVtvXSxuPXRbb107YnJlYWt9cmV0dXJuIHI8bj8tMTpuPHI/MTowfSxjLmlzRW5jb2Rpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxjLmNvbmNhdD1mdW5jdGlvbihlLHQpe2lmKCFBcnJheS5pc0FycmF5KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gYy5hbGxvYygwKTtsZXQgcjtpZih2b2lkIDA9PT10KWZvcih0PTAscj0wO3I8ZS5sZW5ndGg7KytyKXQrPWVbcl0ubGVuZ3RoO2NvbnN0IG49Yy5hbGxvY1Vuc2FmZSh0KTtsZXQgbz0wO2ZvcihyPTA7cjxlLmxlbmd0aDsrK3Ipe2xldCB0PWVbcl07aWYoWCh0LFVpbnQ4QXJyYXkpKW8rdC5sZW5ndGg+bi5sZW5ndGg/KGMuaXNCdWZmZXIodCl8fCh0PWMuZnJvbSh0KSksdC5jb3B5KG4sbykpOlVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKG4sdCxvKTtlbHNle2lmKCFjLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO3QuY29weShuLG8pfW8rPXQubGVuZ3RofXJldHVybiBufSxjLmJ5dGVMZW5ndGg9ZyxjLnByb3RvdHlwZS5faXNCdWZmZXI9ITAsYy5wcm90b3R5cGUuc3dhcDE2PWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLmxlbmd0aDtpZihlJTIhPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0c1wiKTtmb3IobGV0IHQ9MDt0PGU7dCs9MiltKHRoaXMsdCx0KzEpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5zd2FwMzI9ZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMubGVuZ3RoO2lmKGUlNCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpO2ZvcihsZXQgdD0wO3Q8ZTt0Kz00KW0odGhpcyx0LHQrMyksbSh0aGlzLHQrMSx0KzIpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMubGVuZ3RoO2lmKGUlOCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzXCIpO2ZvcihsZXQgdD0wO3Q8ZTt0Kz04KW0odGhpcyx0LHQrNyksbSh0aGlzLHQrMSx0KzYpLG0odGhpcyx0KzIsdCs1KSxtKHRoaXMsdCszLHQrNCk7cmV0dXJuIHRoaXN9LGMucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLmxlbmd0aDtyZXR1cm4gMD09PWU/XCJcIjowPT09YXJndW1lbnRzLmxlbmd0aD9fKHRoaXMsMCxlKTp5LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYy5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmc9Yy5wcm90b3R5cGUudG9TdHJpbmcsYy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe2lmKCFjLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO3JldHVybiB0aGlzPT09ZXx8MD09PWMuY29tcGFyZSh0aGlzLGUpfSxjLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7bGV0IGU9XCJcIjtjb25zdCByPXQuSU5TUEVDVF9NQVhfQllURVM7cmV0dXJuIGU9dGhpcy50b1N0cmluZyhcImhleFwiLDAscikucmVwbGFjZSgvKC57Mn0pL2csXCIkMSBcIikudHJpbSgpLHRoaXMubGVuZ3RoPnImJihlKz1cIiAuLi4gXCIpLFwiPEJ1ZmZlciBcIitlK1wiPlwifSxzJiYoYy5wcm90b3R5cGVbc109Yy5wcm90b3R5cGUuaW5zcGVjdCksYy5wcm90b3R5cGUuY29tcGFyZT1mdW5jdGlvbihlLHQscixuLG8pe2lmKFgoZSxVaW50OEFycmF5KSYmKGU9Yy5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksIWMuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidGFyZ2V0XCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheS4gUmVjZWl2ZWQgdHlwZSAnK3R5cGVvZiBlKTtpZih2b2lkIDA9PT10JiYodD0wKSx2b2lkIDA9PT1yJiYocj1lP2UubGVuZ3RoOjApLHZvaWQgMD09PW4mJihuPTApLHZvaWQgMD09PW8mJihvPXRoaXMubGVuZ3RoKSx0PDB8fHI+ZS5sZW5ndGh8fG48MHx8bz50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm91dCBvZiByYW5nZSBpbmRleFwiKTtpZihuPj1vJiZ0Pj1yKXJldHVybiAwO2lmKG4+PW8pcmV0dXJuLTE7aWYodD49cilyZXR1cm4gMTtpZih0aGlzPT09ZSlyZXR1cm4gMDtsZXQgcz0obz4+Pj0wKS0obj4+Pj0wKSxpPShyPj4+PTApLSh0Pj4+PTApO2NvbnN0IGE9TWF0aC5taW4ocyxpKSx1PXRoaXMuc2xpY2UobixvKSxsPWUuc2xpY2UodCxyKTtmb3IobGV0IGU9MDtlPGE7KytlKWlmKHVbZV0hPT1sW2VdKXtzPXVbZV0saT1sW2VdO2JyZWFrfXJldHVybiBzPGk/LTE6aTxzPzE6MH0sYy5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybi0xIT09dGhpcy5pbmRleE9mKGUsdCxyKX0sYy5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGIodGhpcyxlLHQsciwhMCl9LGMucHJvdG90eXBlLmxhc3RJbmRleE9mPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gYih0aGlzLGUsdCxyLCExKX0sYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbil7aWYodm9pZCAwPT09dCluPVwidXRmOFwiLHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2UgaWYodm9pZCAwPT09ciYmXCJzdHJpbmdcIj09dHlwZW9mIHQpbj10LHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2V7aWYoIWlzRmluaXRlKHQpKXRocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkXCIpO3Q+Pj49MCxpc0Zpbml0ZShyKT8ocj4+Pj0wLHZvaWQgMD09PW4mJihuPVwidXRmOFwiKSk6KG49cixyPXZvaWQgMCl9Y29uc3Qgbz10aGlzLmxlbmd0aC10O2lmKCh2b2lkIDA9PT1yfHxyPm8pJiYocj1vKSxlLmxlbmd0aD4wJiYocjwwfHx0PDApfHx0PnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHNcIik7bnx8KG49XCJ1dGY4XCIpO2xldCBzPSExO2Zvcig7Oylzd2l0Y2gobil7Y2FzZVwiaGV4XCI6cmV0dXJuIHcodGhpcyxlLHQscik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHYodGhpcyxlLHQscik7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gUyh0aGlzLGUsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4geCh0aGlzLGUsdCxyKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gRSh0aGlzLGUsdCxyKTtkZWZhdWx0OmlmKHMpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO249KFwiXCIrbikudG9Mb3dlckNhc2UoKSxzPSEwfX0sYy5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O2NvbnN0IEI9NDA5NjtmdW5jdGlvbiBVKGUsdCxyKXtsZXQgbj1cIlwiO3I9TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKGxldCBvPXQ7bzxyOysrbyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDEyNyZlW29dKTtyZXR1cm4gbn1mdW5jdGlvbiBrKGUsdCxyKXtsZXQgbj1cIlwiO3I9TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKGxldCBvPXQ7bzxyOysrbyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGVbb10pO3JldHVybiBufWZ1bmN0aW9uIEkoZSx0LHIpe2NvbnN0IG49ZS5sZW5ndGg7KCF0fHx0PDApJiYodD0wKSwoIXJ8fHI8MHx8cj5uKSYmKHI9bik7bGV0IG89XCJcIjtmb3IobGV0IG49dDtuPHI7KytuKW8rPUpbZVtuXV07cmV0dXJuIG99ZnVuY3Rpb24gQyhlLHQscil7Y29uc3Qgbj1lLnNsaWNlKHQscik7bGV0IG89XCJcIjtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoLTE7ZSs9MilvKz1TdHJpbmcuZnJvbUNoYXJDb2RlKG5bZV0rMjU2Km5bZSsxXSk7cmV0dXJuIG99ZnVuY3Rpb24gUihlLHQscil7aWYoZSUxIT0wfHxlPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvZmZzZXQgaXMgbm90IHVpbnRcIik7aWYoZSt0PnIpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpfWZ1bmN0aW9uIE8oZSx0LHIsbixvLHMpe2lmKCFjLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmZmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpO2lmKHQ+b3x8dDxzKXRocm93IG5ldyBSYW5nZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgaXMgb3V0IG9mIGJvdW5kcycpO2lmKHIrbj5lLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBEKGUsdCxyLG4sbyl7SCh0LG4sbyxlLHIsNyk7bGV0IHM9TnVtYmVyKHQmQmlnSW50KDQyOTQ5NjcyOTUpKTtlW3IrK109cyxzPj49OCxlW3IrK109cyxzPj49OCxlW3IrK109cyxzPj49OCxlW3IrK109cztsZXQgaT1OdW1iZXIodD4+QmlnSW50KDMyKSZCaWdJbnQoNDI5NDk2NzI5NSkpO3JldHVybiBlW3IrK109aSxpPj49OCxlW3IrK109aSxpPj49OCxlW3IrK109aSxpPj49OCxlW3IrK109aSxyfWZ1bmN0aW9uIE4oZSx0LHIsbixvKXtIKHQsbixvLGUsciw3KTtsZXQgcz1OdW1iZXIodCZCaWdJbnQoNDI5NDk2NzI5NSkpO2Vbcis3XT1zLHM+Pj04LGVbcis2XT1zLHM+Pj04LGVbcis1XT1zLHM+Pj04LGVbcis0XT1zO2xldCBpPU51bWJlcih0Pj5CaWdJbnQoMzIpJkJpZ0ludCg0Mjk0OTY3Mjk1KSk7cmV0dXJuIGVbciszXT1pLGk+Pj04LGVbcisyXT1pLGk+Pj04LGVbcisxXT1pLGk+Pj04LGVbcl09aSxyKzh9ZnVuY3Rpb24gUChlLHQscixuLG8scyl7aWYocituPmUubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKHI8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBMKGUsdCxyLG4scyl7cmV0dXJuIHQ9K3Qscj4+Pj0wLHN8fFAoZSwwLHIsNCksby53cml0ZShlLHQscixuLDIzLDQpLHIrNH1mdW5jdGlvbiBGKGUsdCxyLG4scyl7cmV0dXJuIHQ9K3Qscj4+Pj0wLHN8fFAoZSwwLHIsOCksby53cml0ZShlLHQscixuLDUyLDgpLHIrOH1jLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbihlLHQpe2NvbnN0IHI9dGhpcy5sZW5ndGg7KGU9fn5lKTwwPyhlKz1yKTwwJiYoZT0wKTplPnImJihlPXIpLCh0PXZvaWQgMD09PXQ/cjp+fnQpPDA/KHQrPXIpPDAmJih0PTApOnQ+ciYmKHQ9ciksdDxlJiYodD1lKTtjb25zdCBuPXRoaXMuc3ViYXJyYXkoZSx0KTtyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKG4sYy5wcm90b3R5cGUpLG59LGMucHJvdG90eXBlLnJlYWRVaW50TEU9Yy5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbihlLHQscil7ZT4+Pj0wLHQ+Pj49MCxyfHxSKGUsdCx0aGlzLmxlbmd0aCk7bGV0IG49dGhpc1tlXSxvPTEscz0wO2Zvcig7KytzPHQmJihvKj0yNTYpOyluKz10aGlzW2Urc10qbztyZXR1cm4gbn0sYy5wcm90b3R5cGUucmVhZFVpbnRCRT1jLnByb3RvdHlwZS5yZWFkVUludEJFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fFIoZSx0LHRoaXMubGVuZ3RoKTtsZXQgbj10aGlzW2UrLS10XSxvPTE7Zm9yKDt0PjAmJihvKj0yNTYpOyluKz10aGlzW2UrLS10XSpvO3JldHVybiBufSxjLnByb3RvdHlwZS5yZWFkVWludDg9Yy5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsMSx0aGlzLmxlbmd0aCksdGhpc1tlXX0sYy5wcm90b3R5cGUucmVhZFVpbnQxNkxFPWMucHJvdG90eXBlLnJlYWRVSW50MTZMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8UihlLDIsdGhpcy5sZW5ndGgpLHRoaXNbZV18dGhpc1tlKzFdPDw4fSxjLnByb3RvdHlwZS5yZWFkVWludDE2QkU9Yy5wcm90b3R5cGUucmVhZFVJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXTw8OHx0aGlzW2UrMV19LGMucHJvdG90eXBlLnJlYWRVaW50MzJMRT1jLnByb3RvdHlwZS5yZWFkVUludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSwodGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNikrMTY3NzcyMTYqdGhpc1tlKzNdfSxjLnByb3RvdHlwZS5yZWFkVWludDMyQkU9Yy5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsNCx0aGlzLmxlbmd0aCksMTY3NzcyMTYqdGhpc1tlXSsodGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdKX0sYy5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NExFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10KzI1Nip0aGlzWysrZV0rNjU1MzYqdGhpc1srK2VdK3RoaXNbKytlXSoyKioyNCxvPXRoaXNbKytlXSsyNTYqdGhpc1srK2VdKzY1NTM2KnRoaXNbKytlXStyKjIqKjI0O3JldHVybiBCaWdJbnQobikrKEJpZ0ludChvKTw8QmlnSW50KDMyKSl9KSksYy5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NEJFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10KjIqKjI0KzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3RoaXNbKytlXSxvPXRoaXNbKytlXSoyKioyNCs2NTUzNip0aGlzWysrZV0rMjU2KnRoaXNbKytlXStyO3JldHVybihCaWdJbnQobik8PEJpZ0ludCgzMikpK0JpZ0ludChvKX0pKSxjLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8UihlLHQsdGhpcy5sZW5ndGgpO2xldCBuPXRoaXNbZV0sbz0xLHM9MDtmb3IoOysrczx0JiYobyo9MjU2KTspbis9dGhpc1tlK3NdKm87cmV0dXJuIG8qPTEyOCxuPj1vJiYobi09TWF0aC5wb3coMiw4KnQpKSxufSxjLnByb3RvdHlwZS5yZWFkSW50QkU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8UihlLHQsdGhpcy5sZW5ndGgpO2xldCBuPXQsbz0xLHM9dGhpc1tlKy0tbl07Zm9yKDtuPjAmJihvKj0yNTYpOylzKz10aGlzW2UrLS1uXSpvO3JldHVybiBvKj0xMjgscz49byYmKHMtPU1hdGgucG93KDIsOCp0KSksc30sYy5wcm90b3R5cGUucmVhZEludDg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSwxLHRoaXMubGVuZ3RoKSwxMjgmdGhpc1tlXT8tMSooMjU1LXRoaXNbZV0rMSk6dGhpc1tlXX0sYy5wcm90b3R5cGUucmVhZEludDE2TEU9ZnVuY3Rpb24oZSx0KXtlPj4+PTAsdHx8UihlLDIsdGhpcy5sZW5ndGgpO2NvbnN0IHI9dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIDMyNzY4JnI/NDI5NDkwMTc2MHxyOnJ9LGMucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7ZT4+Pj0wLHR8fFIoZSwyLHRoaXMubGVuZ3RoKTtjb25zdCByPXRoaXNbZSsxXXx0aGlzW2VdPDw4O3JldHVybiAzMjc2OCZyPzQyOTQ5MDE3NjB8cjpyfSxjLnByb3RvdHlwZS5yZWFkSW50MzJMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8UihlLDQsdGhpcy5sZW5ndGgpLHRoaXNbZV18dGhpc1tlKzFdPDw4fHRoaXNbZSsyXTw8MTZ8dGhpc1tlKzNdPDwyNH0sYy5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdPDwyNHx0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM119LGMucHJvdG90eXBlLnJlYWRCaWdJbnQ2NExFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj10aGlzW2UrNF0rMjU2KnRoaXNbZSs1XSs2NTUzNip0aGlzW2UrNl0rKHI8PDI0KTtyZXR1cm4oQmlnSW50KG4pPDxCaWdJbnQoMzIpKStCaWdJbnQodCsyNTYqdGhpc1srK2VdKzY1NTM2KnRoaXNbKytlXSt0aGlzWysrZV0qMioqMjQpfSkpLGMucHJvdG90eXBlLnJlYWRCaWdJbnQ2NEJFPVEoKGZ1bmN0aW9uKGUpe0coZT4+Pj0wLFwib2Zmc2V0XCIpO2NvbnN0IHQ9dGhpc1tlXSxyPXRoaXNbZSs3XTt2b2lkIDAhPT10JiZ2b2lkIDAhPT1yfHxLKGUsdGhpcy5sZW5ndGgtOCk7Y29uc3Qgbj0odDw8MjQpKzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3RoaXNbKytlXTtyZXR1cm4oQmlnSW50KG4pPDxCaWdJbnQoMzIpKStCaWdJbnQodGhpc1srK2VdKjIqKjI0KzY1NTM2KnRoaXNbKytlXSsyNTYqdGhpc1srK2VdK3IpfSkpLGMucHJvdG90eXBlLnJlYWRGbG9hdExFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxSKGUsNCx0aGlzLmxlbmd0aCksby5yZWFkKHRoaXMsZSwhMCwyMyw0KX0sYy5wcm90b3R5cGUucmVhZEZsb2F0QkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw0LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCExLDIzLDQpfSxjLnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw4LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCEwLDUyLDgpfSxjLnByb3RvdHlwZS5yZWFkRG91YmxlQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFIoZSw4LHRoaXMubGVuZ3RoKSxvLnJlYWQodGhpcyxlLCExLDUyLDgpfSxjLnByb3RvdHlwZS53cml0ZVVpbnRMRT1jLnByb3RvdHlwZS53cml0ZVVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtlPStlLHQ+Pj49MCxyPj4+PTAsbnx8Tyh0aGlzLGUsdCxyLE1hdGgucG93KDIsOCpyKS0xLDApO2xldCBvPTEscz0wO2Zvcih0aGlzW3RdPTI1NSZlOysrczxyJiYobyo9MjU2KTspdGhpc1t0K3NdPWUvbyYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVVaW50QkU9Yy5wcm90b3R5cGUud3JpdGVVSW50QkU9ZnVuY3Rpb24oZSx0LHIsbil7ZT0rZSx0Pj4+PTAscj4+Pj0wLG58fE8odGhpcyxlLHQscixNYXRoLnBvdygyLDgqciktMSwwKTtsZXQgbz1yLTEscz0xO2Zvcih0aGlzW3Qrb109MjU1JmU7LS1vPj0wJiYocyo9MjU2KTspdGhpc1t0K29dPWUvcyYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVVaW50OD1jLnByb3RvdHlwZS53cml0ZVVJbnQ4PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwxLDI1NSwwKSx0aGlzW3RdPTI1NSZlLHQrMX0sYy5wcm90b3R5cGUud3JpdGVVaW50MTZMRT1jLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYy5wcm90b3R5cGUud3JpdGVVaW50MTZCRT1jLnByb3RvdHlwZS53cml0ZVVJbnQxNkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09ZT4+PjgsdGhpc1t0KzFdPTI1NSZlLHQrMn0sYy5wcm90b3R5cGUud3JpdGVVaW50MzJMRT1jLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0KzNdPWU+Pj4yNCx0aGlzW3QrMl09ZT4+PjE2LHRoaXNbdCsxXT1lPj4+OCx0aGlzW3RdPTI1NSZlLHQrNH0sYy5wcm90b3R5cGUud3JpdGVVaW50MzJCRT1jLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0XT1lPj4+MjQsdGhpc1t0KzFdPWU+Pj4xNix0aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPTI1NSZlLHQrNH0sYy5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRMRT1RKChmdW5jdGlvbihlLHQ9MCl7cmV0dXJuIEQodGhpcyxlLHQsQmlnSW50KDApLEJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl9KSksYy5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRCRT1RKChmdW5jdGlvbihlLHQ9MCl7cmV0dXJuIE4odGhpcyxlLHQsQmlnSW50KDApLEJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl9KSksYy5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7Y29uc3Qgbj1NYXRoLnBvdygyLDgqci0xKTtPKHRoaXMsZSx0LHIsbi0xLC1uKX1sZXQgbz0wLHM9MSxpPTA7Zm9yKHRoaXNbdF09MjU1JmU7KytvPHImJihzKj0yNTYpOyllPDAmJjA9PT1pJiYwIT09dGhpc1t0K28tMV0mJihpPTEpLHRoaXNbdCtvXT0oZS9zPj4wKS1pJjI1NTtyZXR1cm4gdCtyfSxjLnByb3RvdHlwZS53cml0ZUludEJFPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKGU9K2UsdD4+Pj0wLCFuKXtjb25zdCBuPU1hdGgucG93KDIsOCpyLTEpO08odGhpcyxlLHQscixuLTEsLW4pfWxldCBvPXItMSxzPTEsaT0wO2Zvcih0aGlzW3Qrb109MjU1JmU7LS1vPj0wJiYocyo9MjU2KTspZTwwJiYwPT09aSYmMCE9PXRoaXNbdCtvKzFdJiYoaT0xKSx0aGlzW3Qrb109KGUvcz4+MCktaSYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVJbnQ4PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCwxLDEyNywtMTI4KSxlPDAmJihlPTI1NStlKzEpLHRoaXNbdF09MjU1JmUsdCsxfSxjLnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxPKHRoaXMsZSx0LDIsMzI3NjcsLTMyNzY4KSx0aGlzW3RdPTI1NSZlLHRoaXNbdCsxXT1lPj4+OCx0KzJ9LGMucHJvdG90eXBlLndyaXRlSW50MTZCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fE8odGhpcyxlLHQsMiwzMjc2NywtMzI3NjgpLHRoaXNbdF09ZT4+PjgsdGhpc1t0KzFdPTI1NSZlLHQrMn0sYy5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Tyh0aGlzLGUsdCw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzNdPWU+Pj4yNCx0KzR9LGMucHJvdG90eXBlLndyaXRlSW50MzJCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fE8odGhpcyxlLHQsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KSxlPDAmJihlPTQyOTQ5NjcyOTUrZSsxKSx0aGlzW3RdPWU+Pj4yNCx0aGlzW3QrMV09ZT4+PjE2LHRoaXNbdCsyXT1lPj4+OCx0aGlzW3QrM109MjU1JmUsdCs0fSxjLnByb3RvdHlwZS53cml0ZUJpZ0ludDY0TEU9USgoZnVuY3Rpb24oZSx0PTApe3JldHVybiBEKHRoaXMsZSx0LC1CaWdJbnQoXCIweDgwMDAwMDAwMDAwMDAwMDBcIiksQmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmXCIpKX0pKSxjLnByb3RvdHlwZS53cml0ZUJpZ0ludDY0QkU9USgoZnVuY3Rpb24oZSx0PTApe3JldHVybiBOKHRoaXMsZSx0LC1CaWdJbnQoXCIweDgwMDAwMDAwMDAwMDAwMDBcIiksQmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmXCIpKX0pKSxjLnByb3RvdHlwZS53cml0ZUZsb2F0TEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCEwLHIpfSxjLnByb3RvdHlwZS53cml0ZUZsb2F0QkU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCExLHIpfSxjLnByb3RvdHlwZS53cml0ZURvdWJsZUxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gRih0aGlzLGUsdCwhMCxyKX0sYy5wcm90b3R5cGUud3JpdGVEb3VibGVCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIEYodGhpcyxlLHQsITEscil9LGMucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIWMuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHNob3VsZCBiZSBhIEJ1ZmZlclwiKTtpZihyfHwocj0wKSxufHwwPT09bnx8KG49dGhpcy5sZW5ndGgpLHQ+PWUubGVuZ3RoJiYodD1lLmxlbmd0aCksdHx8KHQ9MCksbj4wJiZuPHImJihuPXIpLG49PT1yKXJldHVybiAwO2lmKDA9PT1lLmxlbmd0aHx8MD09PXRoaXMubGVuZ3RoKXJldHVybiAwO2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYocjwwfHxyPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKTtpZihuPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJzb3VyY2VFbmQgb3V0IG9mIGJvdW5kc1wiKTtuPnRoaXMubGVuZ3RoJiYobj10aGlzLmxlbmd0aCksZS5sZW5ndGgtdDxuLXImJihuPWUubGVuZ3RoLXQrcik7Y29uc3Qgbz1uLXI7cmV0dXJuIHRoaXM9PT1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluP3RoaXMuY29weVdpdGhpbih0LHIsbik6VWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwoZSx0aGlzLnN1YmFycmF5KHIsbiksdCksb30sYy5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbihlLHQscixuKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQ/KG49dCx0PTAscj10aGlzLmxlbmd0aCk6XCJzdHJpbmdcIj09dHlwZW9mIHImJihuPXIscj10aGlzLmxlbmd0aCksdm9pZCAwIT09biYmXCJzdHJpbmdcIiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcImVuY29kaW5nIG11c3QgYmUgYSBzdHJpbmdcIik7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4mJiFjLmlzRW5jb2RpbmcobikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO2lmKDE9PT1lLmxlbmd0aCl7Y29uc3QgdD1lLmNoYXJDb2RlQXQoMCk7KFwidXRmOFwiPT09biYmdDwxMjh8fFwibGF0aW4xXCI9PT1uKSYmKGU9dCl9fWVsc2VcIm51bWJlclwiPT10eXBlb2YgZT9lJj0yNTU6XCJib29sZWFuXCI9PXR5cGVvZiBlJiYoZT1OdW1iZXIoZSkpO2lmKHQ8MHx8dGhpcy5sZW5ndGg8dHx8dGhpcy5sZW5ndGg8cil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihyPD10KXJldHVybiB0aGlzO2xldCBvO2lmKHQ+Pj49MCxyPXZvaWQgMD09PXI/dGhpcy5sZW5ndGg6cj4+PjAsZXx8KGU9MCksXCJudW1iZXJcIj09dHlwZW9mIGUpZm9yKG89dDtvPHI7KytvKXRoaXNbb109ZTtlbHNle2NvbnN0IHM9Yy5pc0J1ZmZlcihlKT9lOmMuZnJvbShlLG4pLGk9cy5sZW5ndGg7aWYoMD09PWkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHZhbHVlIFwiJytlKydcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKTtmb3Iobz0wO288ci10Oysrbyl0aGlzW28rdF09c1tvJWldfXJldHVybiB0aGlzfTtjb25zdCB6PXt9O2Z1bmN0aW9uIGooZSx0LHIpe3pbZV09Y2xhc3MgZXh0ZW5kcyBye2NvbnN0cnVjdG9yKCl7c3VwZXIoKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm1lc3NhZ2VcIix7dmFsdWU6dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdGhpcy5uYW1lPWAke3RoaXMubmFtZX0gWyR7ZX1dYCx0aGlzLnN0YWNrLGRlbGV0ZSB0aGlzLm5hbWV9Z2V0IGNvZGUoKXtyZXR1cm4gZX1zZXQgY29kZShlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNvZGVcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6ZSx3cml0YWJsZTohMH0pfXRvU3RyaW5nKCl7cmV0dXJuYCR7dGhpcy5uYW1lfSBbJHtlfV06ICR7dGhpcy5tZXNzYWdlfWB9fX1mdW5jdGlvbiBNKGUpe2xldCB0PVwiXCIscj1lLmxlbmd0aDtjb25zdCBuPVwiLVwiPT09ZVswXT8xOjA7Zm9yKDtyPj1uKzQ7ci09Myl0PWBfJHtlLnNsaWNlKHItMyxyKX0ke3R9YDtyZXR1cm5gJHtlLnNsaWNlKDAscil9JHt0fWB9ZnVuY3Rpb24gSChlLHQscixuLG8scyl7aWYoZT5yfHxlPHQpe2NvbnN0IG49XCJiaWdpbnRcIj09dHlwZW9mIHQ/XCJuXCI6XCJcIjtsZXQgbzt0aHJvdyBvPXM+Mz8wPT09dHx8dD09PUJpZ0ludCgwKT9gPj0gMCR7bn0gYW5kIDwgMiR7bn0gKiogJHs4KihzKzEpfSR7bn1gOmA+PSAtKDIke259ICoqICR7OCoocysxKS0xfSR7bn0pIGFuZCA8IDIgKiogJHs4KihzKzEpLTF9JHtufWA6YD49ICR7dH0ke259IGFuZCA8PSAke3J9JHtufWAsbmV3IHouRVJSX09VVF9PRl9SQU5HRShcInZhbHVlXCIsbyxlKX0hZnVuY3Rpb24oZSx0LHIpe0codCxcIm9mZnNldFwiKSx2b2lkIDAhPT1lW3RdJiZ2b2lkIDAhPT1lW3Qrcl18fEsodCxlLmxlbmd0aC0ocisxKSl9KG4sbyxzKX1mdW5jdGlvbiBHKGUsdCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IHouRVJSX0lOVkFMSURfQVJHX1RZUEUodCxcIm51bWJlclwiLGUpfWZ1bmN0aW9uIEsoZSx0LHIpe2lmKE1hdGguZmxvb3IoZSkhPT1lKXRocm93IEcoZSxyKSxuZXcgei5FUlJfT1VUX09GX1JBTkdFKHJ8fFwib2Zmc2V0XCIsXCJhbiBpbnRlZ2VyXCIsZSk7aWYodDwwKXRocm93IG5ldyB6LkVSUl9CVUZGRVJfT1VUX09GX0JPVU5EUzt0aHJvdyBuZXcgei5FUlJfT1VUX09GX1JBTkdFKHJ8fFwib2Zmc2V0XCIsYD49ICR7cj8xOjB9IGFuZCA8PSAke3R9YCxlKX1qKFwiRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTXCIsKGZ1bmN0aW9uKGUpe3JldHVybiBlP2Ake2V9IGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kc2A6XCJBdHRlbXB0IHRvIGFjY2VzcyBtZW1vcnkgb3V0c2lkZSBidWZmZXIgYm91bmRzXCJ9KSxSYW5nZUVycm9yKSxqKFwiRVJSX0lOVkFMSURfQVJHX1RZUEVcIiwoZnVuY3Rpb24oZSx0KXtyZXR1cm5gVGhlIFwiJHtlfVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJHt0eXBlb2YgdH1gfSksVHlwZUVycm9yKSxqKFwiRVJSX09VVF9PRl9SQU5HRVwiLChmdW5jdGlvbihlLHQscil7bGV0IG49YFRoZSB2YWx1ZSBvZiBcIiR7ZX1cIiBpcyBvdXQgb2YgcmFuZ2UuYCxvPXI7cmV0dXJuIE51bWJlci5pc0ludGVnZXIocikmJk1hdGguYWJzKHIpPjIqKjMyP289TShTdHJpbmcocikpOlwiYmlnaW50XCI9PXR5cGVvZiByJiYobz1TdHJpbmcociksKHI+QmlnSW50KDIpKipCaWdJbnQoMzIpfHxyPC0oQmlnSW50KDIpKipCaWdJbnQoMzIpKSkmJihvPU0obykpLG8rPVwiblwiKSxuKz1gIEl0IG11c3QgYmUgJHt0fS4gUmVjZWl2ZWQgJHtvfWAsbn0pLFJhbmdlRXJyb3IpO2NvbnN0IHE9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiAkKGUsdCl7bGV0IHI7dD10fHwxLzA7Y29uc3Qgbj1lLmxlbmd0aDtsZXQgbz1udWxsO2NvbnN0IHM9W107Zm9yKGxldCBpPTA7aTxuOysraSl7aWYocj1lLmNoYXJDb2RlQXQoaSkscj41NTI5NSYmcjw1NzM0NCl7aWYoIW8pe2lmKHI+NTYzMTkpeyh0LT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1pZihpKzE9PT1uKXsodC09Myk+LTEmJnMucHVzaCgyMzksMTkxLDE4OSk7Y29udGludWV9bz1yO2NvbnRpbnVlfWlmKHI8NTYzMjApeyh0LT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsMTg5KSxvPXI7Y29udGludWV9cj02NTUzNisoby01NTI5Njw8MTB8ci01NjMyMCl9ZWxzZSBvJiYodC09Myk+LTEmJnMucHVzaCgyMzksMTkxLDE4OSk7aWYobz1udWxsLHI8MTI4KXtpZigodC09MSk8MClicmVhaztzLnB1c2gocil9ZWxzZSBpZihyPDIwNDgpe2lmKCh0LT0yKTwwKWJyZWFrO3MucHVzaChyPj42fDE5Miw2MyZyfDEyOCl9ZWxzZSBpZihyPDY1NTM2KXtpZigodC09Myk8MClicmVhaztzLnB1c2gocj4+MTJ8MjI0LHI+PjYmNjN8MTI4LDYzJnJ8MTI4KX1lbHNle2lmKCEocjwxMTE0MTEyKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvZGUgcG9pbnRcIik7aWYoKHQtPTQpPDApYnJlYWs7cy5wdXNoKHI+PjE4fDI0MCxyPj4xMiY2M3wxMjgscj4+NiY2M3wxMjgsNjMmcnwxMjgpfX1yZXR1cm4gc31mdW5jdGlvbiBWKGUpe3JldHVybiBuLnRvQnl0ZUFycmF5KGZ1bmN0aW9uKGUpe2lmKChlPShlPWUuc3BsaXQoXCI9XCIpWzBdKS50cmltKCkucmVwbGFjZShxLFwiXCIpKS5sZW5ndGg8MilyZXR1cm5cIlwiO2Zvcig7ZS5sZW5ndGglNCE9MDspZSs9XCI9XCI7cmV0dXJuIGV9KGUpKX1mdW5jdGlvbiBXKGUsdCxyLG4pe2xldCBvO2ZvcihvPTA7bzxuJiYhKG8rcj49dC5sZW5ndGh8fG8+PWUubGVuZ3RoKTsrK28pdFtvK3JdPWVbb107cmV0dXJuIG99ZnVuY3Rpb24gWChlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgdHx8bnVsbCE9ZSYmbnVsbCE9ZS5jb25zdHJ1Y3RvciYmbnVsbCE9ZS5jb25zdHJ1Y3Rvci5uYW1lJiZlLmNvbnN0cnVjdG9yLm5hbWU9PT10Lm5hbWV9ZnVuY3Rpb24gWShlKXtyZXR1cm4gZSE9ZX1jb25zdCBKPWZ1bmN0aW9uKCl7Y29uc3QgZT1cIjAxMjM0NTY3ODlhYmNkZWZcIix0PW5ldyBBcnJheSgyNTYpO2ZvcihsZXQgcj0wO3I8MTY7KytyKXtjb25zdCBuPTE2KnI7Zm9yKGxldCBvPTA7bzwxNjsrK28pdFtuK29dPWVbcl0rZVtvXX1yZXR1cm4gdH0oKTtmdW5jdGlvbiBRKGUpe3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBCaWdJbnQ/WjplfWZ1bmN0aW9uIFooKXt0aHJvdyBuZXcgRXJyb3IoXCJCaWdJbnQgbm90IHN1cHBvcnRlZFwiKX19LDc2MTU6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMTgwMSksbz1yKDI1NTApLHM9byhuKFwiU3RyaW5nLnByb3RvdHlwZS5pbmRleE9mXCIpKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uKGUsISF0KTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZzKGUsXCIucHJvdG90eXBlLlwiKT4tMT9vKHIpOnJ9fSwyNTUwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDE5MzApLG89cigxODAxKSxzPW8oXCIlRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5JVwiKSxpPW8oXCIlRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwlXCIpLGE9byhcIiVSZWZsZWN0LmFwcGx5JVwiLCEwKXx8bi5jYWxsKGkscyksYz1vKFwiJU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IlXCIsITApLHU9byhcIiVPYmplY3QuZGVmaW5lUHJvcGVydHklXCIsITApLGw9byhcIiVNYXRoLm1heCVcIik7aWYodSl0cnl7dSh7fSxcImFcIix7dmFsdWU6MX0pfWNhdGNoKGUpe3U9bnVsbH1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9YShuLGksYXJndW1lbnRzKTtpZihjJiZ1KXt2YXIgcj1jKHQsXCJsZW5ndGhcIik7ci5jb25maWd1cmFibGUmJnUodCxcImxlbmd0aFwiLHt2YWx1ZToxK2woMCxlLmxlbmd0aC0oYXJndW1lbnRzLmxlbmd0aC0xKSl9KX1yZXR1cm4gdH07dmFyIGg9ZnVuY3Rpb24oKXtyZXR1cm4gYShuLHMsYXJndW1lbnRzKX07dT91KGUuZXhwb3J0cyxcImFwcGx5XCIse3ZhbHVlOmh9KTplLmV4cG9ydHMuYXBwbHk9aH0sMTA2OTplPT57ZnVuY3Rpb24gdChlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHIgaW4gdC5wcm90b3R5cGUpZVtyXT10LnByb3RvdHlwZVtyXTtyZXR1cm4gZX0oZSl9ZS5leHBvcnRzPXQsdC5wcm90b3R5cGUub249dC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fSwodGhpcy5fY2FsbGJhY2tzW1wiJFwiK2VdPXRoaXMuX2NhbGxiYWNrc1tcIiRcIitlXXx8W10pLnB1c2godCksdGhpc30sdC5wcm90b3R5cGUub25jZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoKXt0aGlzLm9mZihlLHIpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiByLmZuPXQsdGhpcy5vbihlLHIpLHRoaXN9LHQucHJvdG90eXBlLm9mZj10LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj10LnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9dC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe2lmKHRoaXMuX2NhbGxiYWNrcz10aGlzLl9jYWxsYmFja3N8fHt9LDA9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuX2NhbGxiYWNrcz17fSx0aGlzO3ZhciByLG49dGhpcy5fY2FsbGJhY2tzW1wiJFwiK2VdO2lmKCFuKXJldHVybiB0aGlzO2lmKDE9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sdGhpcztmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylpZigocj1uW29dKT09PXR8fHIuZm49PT10KXtuLnNwbGljZShvLDEpO2JyZWFrfXJldHVybiAwPT09bi5sZW5ndGgmJmRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sdGhpc30sdC5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbihlKXt0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fTtmb3IodmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSkscj10aGlzLl9jYWxsYmFja3NbXCIkXCIrZV0sbj0xO248YXJndW1lbnRzLmxlbmd0aDtuKyspdFtuLTFdPWFyZ3VtZW50c1tuXTtpZihyKXtuPTA7Zm9yKHZhciBvPShyPXIuc2xpY2UoMCkpLmxlbmd0aDtuPG87KytuKXJbbl0uYXBwbHkodGhpcyx0KX1yZXR1cm4gdGhpc30sdC5wcm90b3R5cGUubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzfHx7fSx0aGlzLl9jYWxsYmFja3NbXCIkXCIrZV18fFtdfSx0LnByb3RvdHlwZS5oYXNMaXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuISF0aGlzLmxpc3RlbmVycyhlKS5sZW5ndGh9fSw1Nzk5OmU9PntlLmV4cG9ydHM9bixuLmRlZmF1bHQ9bixuLnN0YWJsZT1pLG4uc3RhYmxlU3RyaW5naWZ5PWk7dmFyIHQ9W10scj1bXTtmdW5jdGlvbiBuKGUsbixzKXt2YXIgaTtmb3IobyhlLFwiXCIsW10sdm9pZCAwKSxpPTA9PT1yLmxlbmd0aD9KU09OLnN0cmluZ2lmeShlLG4scyk6SlNPTi5zdHJpbmdpZnkoZSxjKG4pLHMpOzAhPT10Lmxlbmd0aDspe3ZhciBhPXQucG9wKCk7ND09PWEubGVuZ3RoP09iamVjdC5kZWZpbmVQcm9wZXJ0eShhWzBdLGFbMV0sYVszXSk6YVswXVthWzFdXT1hWzJdfXJldHVybiBpfWZ1bmN0aW9uIG8oZSxuLHMsaSl7dmFyIGE7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lKXtmb3IoYT0wO2E8cy5sZW5ndGg7YSsrKWlmKHNbYV09PT1lKXt2YXIgYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksbik7cmV0dXJuIHZvaWQodm9pZCAwIT09Yy5nZXQ/Yy5jb25maWd1cmFibGU/KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLG4se3ZhbHVlOlwiW0NpcmN1bGFyXVwifSksdC5wdXNoKFtpLG4sZSxjXSkpOnIucHVzaChbZSxuXSk6KGlbbl09XCJbQ2lyY3VsYXJdXCIsdC5wdXNoKFtpLG4sZV0pKSl9aWYocy5wdXNoKGUpLEFycmF5LmlzQXJyYXkoZSkpZm9yKGE9MDthPGUubGVuZ3RoO2ErKylvKGVbYV0sYSxzLGUpO2Vsc2V7dmFyIHU9T2JqZWN0LmtleXMoZSk7Zm9yKGE9MDthPHUubGVuZ3RoO2ErKyl7dmFyIGw9dVthXTtvKGVbbF0sbCxzLGUpfX1zLnBvcCgpfX1mdW5jdGlvbiBzKGUsdCl7cmV0dXJuIGU8dD8tMTplPnQ/MTowfWZ1bmN0aW9uIGkoZSxuLG8pe3ZhciBzLGk9YShlLFwiXCIsW10sdm9pZCAwKXx8ZTtmb3Iocz0wPT09ci5sZW5ndGg/SlNPTi5zdHJpbmdpZnkoaSxuLG8pOkpTT04uc3RyaW5naWZ5KGksYyhuKSxvKTswIT09dC5sZW5ndGg7KXt2YXIgdT10LnBvcCgpOzQ9PT11Lmxlbmd0aD9PYmplY3QuZGVmaW5lUHJvcGVydHkodVswXSx1WzFdLHVbM10pOnVbMF1bdVsxXV09dVsyXX1yZXR1cm4gc31mdW5jdGlvbiBhKGUsbixvLGkpe3ZhciBjO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT09ZSl7Zm9yKGM9MDtjPG8ubGVuZ3RoO2MrKylpZihvW2NdPT09ZSl7dmFyIHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLG4pO3JldHVybiB2b2lkKHZvaWQgMCE9PXUuZ2V0P3UuY29uZmlndXJhYmxlPyhPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxuLHt2YWx1ZTpcIltDaXJjdWxhcl1cIn0pLHQucHVzaChbaSxuLGUsdV0pKTpyLnB1c2goW2Usbl0pOihpW25dPVwiW0NpcmN1bGFyXVwiLHQucHVzaChbaSxuLGVdKSkpfWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUudG9KU09OKXJldHVybjtpZihvLnB1c2goZSksQXJyYXkuaXNBcnJheShlKSlmb3IoYz0wO2M8ZS5sZW5ndGg7YysrKWEoZVtjXSxjLG8sZSk7ZWxzZXt2YXIgbD17fSxoPU9iamVjdC5rZXlzKGUpLnNvcnQocyk7Zm9yKGM9MDtjPGgubGVuZ3RoO2MrKyl7dmFyIHA9aFtjXTthKGVbcF0scCxvLGUpLGxbcF09ZVtwXX1pZih2b2lkIDA9PT1pKXJldHVybiBsO3QucHVzaChbaSxuLGVdKSxpW25dPWx9by5wb3AoKX19ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZT12b2lkIDAhPT1lP2U6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0sZnVuY3Rpb24odCxuKXtpZihyLmxlbmd0aD4wKWZvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXt2YXIgcz1yW29dO2lmKHNbMV09PT10JiZzWzBdPT09bil7bj1cIltDaXJjdWxhcl1cIixyLnNwbGljZShvLDEpO2JyZWFrfX1yZXR1cm4gZS5jYWxsKHRoaXMsdCxuKX19fSw5OTMwOmU9PntcInVzZSBzdHJpY3RcIjt2YXIgdD1cIkZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgXCIscj1BcnJheS5wcm90b3R5cGUuc2xpY2Usbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLG89XCJbb2JqZWN0IEZ1bmN0aW9uXVwiO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgcz10aGlzO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN8fG4uY2FsbChzKSE9PW8pdGhyb3cgbmV3IFR5cGVFcnJvcih0K3MpO2Zvcih2YXIgaSxhPXIuY2FsbChhcmd1bWVudHMsMSksYz1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBpKXt2YXIgdD1zLmFwcGx5KHRoaXMsYS5jb25jYXQoci5jYWxsKGFyZ3VtZW50cykpKTtyZXR1cm4gT2JqZWN0KHQpPT09dD90OnRoaXN9cmV0dXJuIHMuYXBwbHkoZSxhLmNvbmNhdChyLmNhbGwoYXJndW1lbnRzKSkpfSx1PU1hdGgubWF4KDAscy5sZW5ndGgtYS5sZW5ndGgpLGw9W10saD0wO2g8dTtoKyspbC5wdXNoKFwiJFwiK2gpO2lmKGk9RnVuY3Rpb24oXCJiaW5kZXJcIixcInJldHVybiBmdW5jdGlvbiAoXCIrbC5qb2luKFwiLFwiKStcIil7IHJldHVybiBiaW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOyB9XCIpKGMpLHMucHJvdG90eXBlKXt2YXIgcD1mdW5jdGlvbigpe307cC5wcm90b3R5cGU9cy5wcm90b3R5cGUsaS5wcm90b3R5cGU9bmV3IHAscC5wcm90b3R5cGU9bnVsbH1yZXR1cm4gaX19LDE5MzA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoOTkzMCk7ZS5leHBvcnRzPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHxufSwxODAxOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbixvPVN5bnRheEVycm9yLHM9RnVuY3Rpb24saT1UeXBlRXJyb3IsYT1mdW5jdGlvbihlKXt0cnl7cmV0dXJuIHMoJ1widXNlIHN0cmljdFwiOyByZXR1cm4gKCcrZStcIikuY29uc3RydWN0b3I7XCIpKCl9Y2F0Y2goZSl7fX0sYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2lmKGMpdHJ5e2Moe30sXCJcIil9Y2F0Y2goZSl7Yz1udWxsfXZhciB1PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IGl9LGw9Yz9mdW5jdGlvbigpe3RyeXtyZXR1cm4gdX1jYXRjaChlKXt0cnl7cmV0dXJuIGMoYXJndW1lbnRzLFwiY2FsbGVlXCIpLmdldH1jYXRjaChlKXtyZXR1cm4gdX19fSgpOnUsaD1yKDk5MDUpKCkscD1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlLl9fcHJvdG9fX30sZj17fSxkPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50OEFycmF5P246cChVaW50OEFycmF5KSxnPXtcIiVBZ2dyZWdhdGVFcnJvciVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgQWdncmVnYXRlRXJyb3I/bjpBZ2dyZWdhdGVFcnJvcixcIiVBcnJheSVcIjpBcnJheSxcIiVBcnJheUJ1ZmZlciVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgQXJyYXlCdWZmZXI/bjpBcnJheUJ1ZmZlcixcIiVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJVwiOmg/cChbXVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlQXN5bmNGcm9tU3luY0l0ZXJhdG9yUHJvdG90eXBlJVwiOm4sXCIlQXN5bmNGdW5jdGlvbiVcIjpmLFwiJUFzeW5jR2VuZXJhdG9yJVwiOmYsXCIlQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiVcIjpmLFwiJUFzeW5jSXRlcmF0b3JQcm90b3R5cGUlXCI6ZixcIiVBdG9taWNzJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBBdG9taWNzP246QXRvbWljcyxcIiVCaWdJbnQlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEJpZ0ludD9uOkJpZ0ludCxcIiVCb29sZWFuJVwiOkJvb2xlYW4sXCIlRGF0YVZpZXclXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIERhdGFWaWV3P246RGF0YVZpZXcsXCIlRGF0ZSVcIjpEYXRlLFwiJWRlY29kZVVSSSVcIjpkZWNvZGVVUkksXCIlZGVjb2RlVVJJQ29tcG9uZW50JVwiOmRlY29kZVVSSUNvbXBvbmVudCxcIiVlbmNvZGVVUkklXCI6ZW5jb2RlVVJJLFwiJWVuY29kZVVSSUNvbXBvbmVudCVcIjplbmNvZGVVUklDb21wb25lbnQsXCIlRXJyb3IlXCI6RXJyb3IsXCIlZXZhbCVcIjpldmFsLFwiJUV2YWxFcnJvciVcIjpFdmFsRXJyb3IsXCIlRmxvYXQzMkFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBGbG9hdDMyQXJyYXk/bjpGbG9hdDMyQXJyYXksXCIlRmxvYXQ2NEFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBGbG9hdDY0QXJyYXk/bjpGbG9hdDY0QXJyYXksXCIlRmluYWxpemF0aW9uUmVnaXN0cnklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEZpbmFsaXphdGlvblJlZ2lzdHJ5P246RmluYWxpemF0aW9uUmVnaXN0cnksXCIlRnVuY3Rpb24lXCI6cyxcIiVHZW5lcmF0b3JGdW5jdGlvbiVcIjpmLFwiJUludDhBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50OEFycmF5P246SW50OEFycmF5LFwiJUludDE2QXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEludDE2QXJyYXk/bjpJbnQxNkFycmF5LFwiJUludDMyQXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEludDMyQXJyYXk/bjpJbnQzMkFycmF5LFwiJWlzRmluaXRlJVwiOmlzRmluaXRlLFwiJWlzTmFOJVwiOmlzTmFOLFwiJUl0ZXJhdG9yUHJvdG90eXBlJVwiOmg/cChwKFtdW1N5bWJvbC5pdGVyYXRvcl0oKSkpOm4sXCIlSlNPTiVcIjpcIm9iamVjdFwiPT10eXBlb2YgSlNPTj9KU09OOm4sXCIlTWFwJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBNYXA/bjpNYXAsXCIlTWFwSXRlcmF0b3JQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1hcCYmaD9wKChuZXcgTWFwKVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlTWF0aCVcIjpNYXRoLFwiJU51bWJlciVcIjpOdW1iZXIsXCIlT2JqZWN0JVwiOk9iamVjdCxcIiVwYXJzZUZsb2F0JVwiOnBhcnNlRmxvYXQsXCIlcGFyc2VJbnQlXCI6cGFyc2VJbnQsXCIlUHJvbWlzZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgUHJvbWlzZT9uOlByb21pc2UsXCIlUHJveHklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb3h5P246UHJveHksXCIlUmFuZ2VFcnJvciVcIjpSYW5nZUVycm9yLFwiJVJlZmVyZW5jZUVycm9yJVwiOlJlZmVyZW5jZUVycm9yLFwiJVJlZmxlY3QlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFJlZmxlY3Q/bjpSZWZsZWN0LFwiJVJlZ0V4cCVcIjpSZWdFeHAsXCIlU2V0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBTZXQ/bjpTZXQsXCIlU2V0SXRlcmF0b3JQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFNldCYmaD9wKChuZXcgU2V0KVtTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlU2hhcmVkQXJyYXlCdWZmZXIlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyP246U2hhcmVkQXJyYXlCdWZmZXIsXCIlU3RyaW5nJVwiOlN0cmluZyxcIiVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSVcIjpoP3AoXCJcIltTeW1ib2wuaXRlcmF0b3JdKCkpOm4sXCIlU3ltYm9sJVwiOmg/U3ltYm9sOm4sXCIlU3ludGF4RXJyb3IlXCI6byxcIiVUaHJvd1R5cGVFcnJvciVcIjpsLFwiJVR5cGVkQXJyYXklXCI6ZCxcIiVUeXBlRXJyb3IlXCI6aSxcIiVVaW50OEFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50OEFycmF5P246VWludDhBcnJheSxcIiVVaW50OENsYW1wZWRBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXk/bjpVaW50OENsYW1wZWRBcnJheSxcIiVVaW50MTZBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDE2QXJyYXk/bjpVaW50MTZBcnJheSxcIiVVaW50MzJBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDMyQXJyYXk/bjpVaW50MzJBcnJheSxcIiVVUklFcnJvciVcIjpVUklFcnJvcixcIiVXZWFrTWFwJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrTWFwP246V2Vha01hcCxcIiVXZWFrUmVmJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrUmVmP246V2Vha1JlZixcIiVXZWFrU2V0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrU2V0P246V2Vha1NldH0seT1mdW5jdGlvbiBlKHQpe3ZhciByO2lmKFwiJUFzeW5jRnVuY3Rpb24lXCI9PT10KXI9YShcImFzeW5jIGZ1bmN0aW9uICgpIHt9XCIpO2Vsc2UgaWYoXCIlR2VuZXJhdG9yRnVuY3Rpb24lXCI9PT10KXI9YShcImZ1bmN0aW9uKiAoKSB7fVwiKTtlbHNlIGlmKFwiJUFzeW5jR2VuZXJhdG9yRnVuY3Rpb24lXCI9PT10KXI9YShcImFzeW5jIGZ1bmN0aW9uKiAoKSB7fVwiKTtlbHNlIGlmKFwiJUFzeW5jR2VuZXJhdG9yJVwiPT09dCl7dmFyIG49ZShcIiVBc3luY0dlbmVyYXRvckZ1bmN0aW9uJVwiKTtuJiYocj1uLnByb3RvdHlwZSl9ZWxzZSBpZihcIiVBc3luY0l0ZXJhdG9yUHJvdG90eXBlJVwiPT09dCl7dmFyIG89ZShcIiVBc3luY0dlbmVyYXRvciVcIik7byYmKHI9cChvLnByb3RvdHlwZSkpfXJldHVybiBnW3RdPXIscn0sbT17XCIlQXJyYXlCdWZmZXJQcm90b3R5cGUlXCI6W1wiQXJyYXlCdWZmZXJcIixcInByb3RvdHlwZVwiXSxcIiVBcnJheVByb3RvdHlwZSVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJUFycmF5UHJvdG9fZW50cmllcyVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJlbnRyaWVzXCJdLFwiJUFycmF5UHJvdG9fZm9yRWFjaCVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJmb3JFYWNoXCJdLFwiJUFycmF5UHJvdG9fa2V5cyVcIjpbXCJBcnJheVwiLFwicHJvdG90eXBlXCIsXCJrZXlzXCJdLFwiJUFycmF5UHJvdG9fdmFsdWVzJVwiOltcIkFycmF5XCIsXCJwcm90b3R5cGVcIixcInZhbHVlc1wiXSxcIiVBc3luY0Z1bmN0aW9uUHJvdG90eXBlJVwiOltcIkFzeW5jRnVuY3Rpb25cIixcInByb3RvdHlwZVwiXSxcIiVBc3luY0dlbmVyYXRvciVcIjpbXCJBc3luY0dlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlQXN5bmNHZW5lcmF0b3JQcm90b3R5cGUlXCI6W1wiQXN5bmNHZW5lcmF0b3JGdW5jdGlvblwiLFwicHJvdG90eXBlXCIsXCJwcm90b3R5cGVcIl0sXCIlQm9vbGVhblByb3RvdHlwZSVcIjpbXCJCb29sZWFuXCIsXCJwcm90b3R5cGVcIl0sXCIlRGF0YVZpZXdQcm90b3R5cGUlXCI6W1wiRGF0YVZpZXdcIixcInByb3RvdHlwZVwiXSxcIiVEYXRlUHJvdG90eXBlJVwiOltcIkRhdGVcIixcInByb3RvdHlwZVwiXSxcIiVFcnJvclByb3RvdHlwZSVcIjpbXCJFcnJvclwiLFwicHJvdG90eXBlXCJdLFwiJUV2YWxFcnJvclByb3RvdHlwZSVcIjpbXCJFdmFsRXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVGbG9hdDMyQXJyYXlQcm90b3R5cGUlXCI6W1wiRmxvYXQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlRmxvYXQ2NEFycmF5UHJvdG90eXBlJVwiOltcIkZsb2F0NjRBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJUZ1bmN0aW9uUHJvdG90eXBlJVwiOltcIkZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlR2VuZXJhdG9yJVwiOltcIkdlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIl0sXCIlR2VuZXJhdG9yUHJvdG90eXBlJVwiOltcIkdlbmVyYXRvckZ1bmN0aW9uXCIsXCJwcm90b3R5cGVcIixcInByb3RvdHlwZVwiXSxcIiVJbnQ4QXJyYXlQcm90b3R5cGUlXCI6W1wiSW50OEFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSW50MTZBcnJheVByb3RvdHlwZSVcIjpbXCJJbnQxNkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSW50MzJBcnJheVByb3RvdHlwZSVcIjpbXCJJbnQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlSlNPTlBhcnNlJVwiOltcIkpTT05cIixcInBhcnNlXCJdLFwiJUpTT05TdHJpbmdpZnklXCI6W1wiSlNPTlwiLFwic3RyaW5naWZ5XCJdLFwiJU1hcFByb3RvdHlwZSVcIjpbXCJNYXBcIixcInByb3RvdHlwZVwiXSxcIiVOdW1iZXJQcm90b3R5cGUlXCI6W1wiTnVtYmVyXCIsXCJwcm90b3R5cGVcIl0sXCIlT2JqZWN0UHJvdG90eXBlJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCJdLFwiJU9ialByb3RvX3RvU3RyaW5nJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCIsXCJ0b1N0cmluZ1wiXSxcIiVPYmpQcm90b192YWx1ZU9mJVwiOltcIk9iamVjdFwiLFwicHJvdG90eXBlXCIsXCJ2YWx1ZU9mXCJdLFwiJVByb21pc2VQcm90b3R5cGUlXCI6W1wiUHJvbWlzZVwiLFwicHJvdG90eXBlXCJdLFwiJVByb21pc2VQcm90b190aGVuJVwiOltcIlByb21pc2VcIixcInByb3RvdHlwZVwiLFwidGhlblwiXSxcIiVQcm9taXNlX2FsbCVcIjpbXCJQcm9taXNlXCIsXCJhbGxcIl0sXCIlUHJvbWlzZV9yZWplY3QlXCI6W1wiUHJvbWlzZVwiLFwicmVqZWN0XCJdLFwiJVByb21pc2VfcmVzb2x2ZSVcIjpbXCJQcm9taXNlXCIsXCJyZXNvbHZlXCJdLFwiJVJhbmdlRXJyb3JQcm90b3R5cGUlXCI6W1wiUmFuZ2VFcnJvclwiLFwicHJvdG90eXBlXCJdLFwiJVJlZmVyZW5jZUVycm9yUHJvdG90eXBlJVwiOltcIlJlZmVyZW5jZUVycm9yXCIsXCJwcm90b3R5cGVcIl0sXCIlUmVnRXhwUHJvdG90eXBlJVwiOltcIlJlZ0V4cFwiLFwicHJvdG90eXBlXCJdLFwiJVNldFByb3RvdHlwZSVcIjpbXCJTZXRcIixcInByb3RvdHlwZVwiXSxcIiVTaGFyZWRBcnJheUJ1ZmZlclByb3RvdHlwZSVcIjpbXCJTaGFyZWRBcnJheUJ1ZmZlclwiLFwicHJvdG90eXBlXCJdLFwiJVN0cmluZ1Byb3RvdHlwZSVcIjpbXCJTdHJpbmdcIixcInByb3RvdHlwZVwiXSxcIiVTeW1ib2xQcm90b3R5cGUlXCI6W1wiU3ltYm9sXCIsXCJwcm90b3R5cGVcIl0sXCIlU3ludGF4RXJyb3JQcm90b3R5cGUlXCI6W1wiU3ludGF4RXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVUeXBlZEFycmF5UHJvdG90eXBlJVwiOltcIlR5cGVkQXJyYXlcIixcInByb3RvdHlwZVwiXSxcIiVUeXBlRXJyb3JQcm90b3R5cGUlXCI6W1wiVHlwZUVycm9yXCIsXCJwcm90b3R5cGVcIl0sXCIlVWludDhBcnJheVByb3RvdHlwZSVcIjpbXCJVaW50OEFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlVWludDhDbGFtcGVkQXJyYXlQcm90b3R5cGUlXCI6W1wiVWludDhDbGFtcGVkQXJyYXlcIixcInByb3RvdHlwZVwiXSxcIiVVaW50MTZBcnJheVByb3RvdHlwZSVcIjpbXCJVaW50MTZBcnJheVwiLFwicHJvdG90eXBlXCJdLFwiJVVpbnQzMkFycmF5UHJvdG90eXBlJVwiOltcIlVpbnQzMkFycmF5XCIsXCJwcm90b3R5cGVcIl0sXCIlVVJJRXJyb3JQcm90b3R5cGUlXCI6W1wiVVJJRXJyb3JcIixcInByb3RvdHlwZVwiXSxcIiVXZWFrTWFwUHJvdG90eXBlJVwiOltcIldlYWtNYXBcIixcInByb3RvdHlwZVwiXSxcIiVXZWFrU2V0UHJvdG90eXBlJVwiOltcIldlYWtTZXRcIixcInByb3RvdHlwZVwiXX0sYj1yKDE5MzApLEE9cig5Mjg0KSx3PWIuY2FsbChGdW5jdGlvbi5jYWxsLEFycmF5LnByb3RvdHlwZS5jb25jYXQpLHY9Yi5jYWxsKEZ1bmN0aW9uLmFwcGx5LEFycmF5LnByb3RvdHlwZS5zcGxpY2UpLFM9Yi5jYWxsKEZ1bmN0aW9uLmNhbGwsU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKSx4PWIuY2FsbChGdW5jdGlvbi5jYWxsLFN0cmluZy5wcm90b3R5cGUuc2xpY2UpLEU9L1teJS5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwlJCkpL2csVD0vXFxcXChcXFxcKT8vZyxfPWZ1bmN0aW9uKGUpe3ZhciB0PXgoZSwwLDEpLHI9eChlLC0xKTtpZihcIiVcIj09PXQmJlwiJVwiIT09cil0aHJvdyBuZXcgbyhcImludmFsaWQgaW50cmluc2ljIHN5bnRheCwgZXhwZWN0ZWQgY2xvc2luZyBgJWBcIik7aWYoXCIlXCI9PT1yJiZcIiVcIiE9PXQpdGhyb3cgbmV3IG8oXCJpbnZhbGlkIGludHJpbnNpYyBzeW50YXgsIGV4cGVjdGVkIG9wZW5pbmcgYCVgXCIpO3ZhciBuPVtdO3JldHVybiBTKGUsRSwoZnVuY3Rpb24oZSx0LHIsbyl7bltuLmxlbmd0aF09cj9TKG8sVCxcIiQxXCIpOnR8fGV9KSksbn0sQj1mdW5jdGlvbihlLHQpe3ZhciByLG49ZTtpZihBKG0sbikmJihuPVwiJVwiKyhyPW1bbl0pWzBdK1wiJVwiKSxBKGcsbikpe3ZhciBzPWdbbl07aWYocz09PWYmJihzPXkobikpLHZvaWQgMD09PXMmJiF0KXRocm93IG5ldyBpKFwiaW50cmluc2ljIFwiK2UrXCIgZXhpc3RzLCBidXQgaXMgbm90IGF2YWlsYWJsZS4gUGxlYXNlIGZpbGUgYW4gaXNzdWUhXCIpO3JldHVybnthbGlhczpyLG5hbWU6bix2YWx1ZTpzfX10aHJvdyBuZXcgbyhcImludHJpbnNpYyBcIitlK1wiIGRvZXMgbm90IGV4aXN0IVwiKX07ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGV8fDA9PT1lLmxlbmd0aCl0aHJvdyBuZXcgaShcImludHJpbnNpYyBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSYmXCJib29sZWFuXCIhPXR5cGVvZiB0KXRocm93IG5ldyBpKCdcImFsbG93TWlzc2luZ1wiIGFyZ3VtZW50IG11c3QgYmUgYSBib29sZWFuJyk7dmFyIHI9XyhlKSxuPXIubGVuZ3RoPjA/clswXTpcIlwiLHM9QihcIiVcIituK1wiJVwiLHQpLGE9cy5uYW1lLHU9cy52YWx1ZSxsPSExLGg9cy5hbGlhcztoJiYobj1oWzBdLHYocix3KFswLDFdLGgpKSk7Zm9yKHZhciBwPTEsZj0hMDtwPHIubGVuZ3RoO3ArPTEpe3ZhciBkPXJbcF0seT14KGQsMCwxKSxtPXgoZCwtMSk7aWYoKCdcIic9PT15fHxcIidcIj09PXl8fFwiYFwiPT09eXx8J1wiJz09PW18fFwiJ1wiPT09bXx8XCJgXCI9PT1tKSYmeSE9PW0pdGhyb3cgbmV3IG8oXCJwcm9wZXJ0eSBuYW1lcyB3aXRoIHF1b3RlcyBtdXN0IGhhdmUgbWF0Y2hpbmcgcXVvdGVzXCIpO2lmKFwiY29uc3RydWN0b3JcIiE9PWQmJmZ8fChsPSEwKSxBKGcsYT1cIiVcIisobis9XCIuXCIrZCkrXCIlXCIpKXU9Z1thXTtlbHNlIGlmKG51bGwhPXUpe2lmKCEoZCBpbiB1KSl7aWYoIXQpdGhyb3cgbmV3IGkoXCJiYXNlIGludHJpbnNpYyBmb3IgXCIrZStcIiBleGlzdHMsIGJ1dCB0aGUgcHJvcGVydHkgaXMgbm90IGF2YWlsYWJsZS5cIik7cmV0dXJufWlmKGMmJnArMT49ci5sZW5ndGgpe3ZhciBiPWModSxkKTt1PShmPSEhYikmJlwiZ2V0XCJpbiBiJiYhKFwib3JpZ2luYWxWYWx1ZVwiaW4gYi5nZXQpP2IuZ2V0OnVbZF19ZWxzZSBmPUEodSxkKSx1PXVbZF07ZiYmIWwmJihnW2FdPXUpfX1yZXR1cm4gdX19LDk5MDU6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbCxvPXIoNTY4Mik7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgbihcImZvb1wiKSYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbChcImJhclwiKSYmbygpfX0sNTY4MjplPT57XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgU3ltYm9sfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXJldHVybiExO2lmKFwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3IpcmV0dXJuITA7dmFyIGU9e30sdD1TeW1ib2woXCJ0ZXN0XCIpLHI9T2JqZWN0KHQpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiExO2lmKFwiW29iamVjdCBTeW1ib2xdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpcmV0dXJuITE7aWYoXCJbb2JqZWN0IFN5bWJvbF1cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSlyZXR1cm4hMTtmb3IodCBpbiBlW3RdPTQyLGUpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmtleXMmJjAhPT1PYmplY3Qua2V5cyhlKS5sZW5ndGgpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMmJjAhPT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKS5sZW5ndGgpcmV0dXJuITE7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtpZigxIT09bi5sZW5ndGh8fG5bMF0hPT10KXJldHVybiExO2lmKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSx0KSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKXt2YXIgbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCk7aWYoNDIhPT1vLnZhbHVlfHwhMCE9PW8uZW51bWVyYWJsZSlyZXR1cm4hMX1yZXR1cm4hMH19LDkyODQ6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMTkzMCk7ZS5leHBvcnRzPW4uY2FsbChGdW5jdGlvbi5jYWxsLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpfSw3MjY3OihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fTshdC5ISV9CQVNFMzJfTk9fTk9ERV9KUyYmXCJvYmplY3RcIj09dHlwZW9mIHByb2Nlc3MmJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZSYmKHQ9ci5nKTt2YXIgbz0hdC5ISV9CQVNFMzJfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMscz1yLmFtZE8saT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3XCIuc3BsaXQoXCJcIiksYT17QTowLEI6MSxDOjIsRDozLEU6NCxGOjUsRzo2LEg6NyxJOjgsSjo5LEs6MTAsTDoxMSxNOjEyLE46MTMsTzoxNCxQOjE1LFE6MTYsUjoxNyxTOjE4LFQ6MTksVToyMCxWOjIxLFc6MjIsWDoyMyxZOjI0LFo6MjUsMjoyNiwzOjI3LDQ6MjgsNToyOSw2OjMwLDc6MzF9LGM9WzAsMCwwLDAsMCwwLDAsMF0sdT1mdW5jdGlvbihlLHQpe3QubGVuZ3RoPjEwJiYodD1cIi4uLlwiK3Quc3Vic3RyKC0xMCkpO3ZhciByPW5ldyBFcnJvcihcIkRlY29kZWQgZGF0YSBpcyBub3QgdmFsaWQgVVRGLTguIE1heWJlIHRyeSBiYXNlMzIuZGVjb2RlLmFzQnl0ZXMoKT8gUGFydGlhbCBkYXRhIGFmdGVyIHJlYWRpbmcgXCIrZStcIiBieXRlczogXCIrdCtcIiA8LVwiKTt0aHJvdyByLnBvc2l0aW9uPWUscn0sbD1mdW5jdGlvbihlKXtpZihcIlwiPT09ZSlyZXR1cm5bXTtpZighL15bQS1aMi03PV0rJC8udGVzdChlKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJhc2UzMiBjaGFyYWN0ZXJzXCIpO2Zvcih2YXIgdCxyLG4sbyxzLGksYyx1LGw9W10saD0wLHA9KGU9ZS5yZXBsYWNlKC89L2csXCJcIikpLmxlbmd0aCxmPTAsZD1wPj4zPDwzO2Y8ZDspdD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLHM9YVtlLmNoYXJBdChmKyspXSxpPWFbZS5jaGFyQXQoZisrKV0sYz1hW2UuY2hhckF0KGYrKyldLHU9YVtlLmNoYXJBdChmKyspXSxsW2grK109MjU1Jih0PDwzfHI+Pj4yKSxsW2grK109MjU1JihyPDw2fG48PDF8bz4+PjQpLGxbaCsrXT0yNTUmKG88PDR8cz4+PjEpLGxbaCsrXT0yNTUmKHM8PDd8aTw8MnxjPj4+MyksbFtoKytdPTI1NSYoYzw8NXx1KTt2YXIgZz1wLWQ7cmV0dXJuIDI9PT1nPyh0PWFbZS5jaGFyQXQoZisrKV0scj1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpKTo0PT09Zz8odD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCkpOjU9PT1nPyh0PWFbZS5jaGFyQXQoZisrKV0scj1hW2UuY2hhckF0KGYrKyldLG49YVtlLmNoYXJBdChmKyspXSxvPWFbZS5jaGFyQXQoZisrKV0scz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCksbFtoKytdPTI1NSYobzw8NHxzPj4+MSkpOjc9PT1nJiYodD1hW2UuY2hhckF0KGYrKyldLHI9YVtlLmNoYXJBdChmKyspXSxuPWFbZS5jaGFyQXQoZisrKV0sbz1hW2UuY2hhckF0KGYrKyldLHM9YVtlLmNoYXJBdChmKyspXSxpPWFbZS5jaGFyQXQoZisrKV0sYz1hW2UuY2hhckF0KGYrKyldLGxbaCsrXT0yNTUmKHQ8PDN8cj4+PjIpLGxbaCsrXT0yNTUmKHI8PDZ8bjw8MXxvPj4+NCksbFtoKytdPTI1NSYobzw8NHxzPj4+MSksbFtoKytdPTI1NSYoczw8N3xpPDwyfGM+Pj4zKSksbH0saD1mdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQscixuPVwiXCIsbz1lLmxlbmd0aCxzPTAsaT0wO3M8bzspaWYoKHQ9ZVtzKytdKTw9MTI3KW4rPVN0cmluZy5mcm9tQ2hhckNvZGUodCk7ZWxzZXt0PjE5MSYmdDw9MjIzPyhyPTMxJnQsaT0xKTp0PD0yMzk/KHI9MTUmdCxpPTIpOnQ8PTI0Nz8ocj03JnQsaT0zKTp1KHMsbik7Zm9yKHZhciBhPTA7YTxpOysrYSkoKHQ9ZVtzKytdKTwxMjh8fHQ+MTkxKSYmdShzLG4pLHI8PD02LHIrPTYzJnQ7cj49NTUyOTYmJnI8PTU3MzQzJiZ1KHMsbikscj4xMTE0MTExJiZ1KHMsbikscjw9NjU1MzU/bis9U3RyaW5nLmZyb21DaGFyQ29kZShyKTooci09NjU1MzYsbis9U3RyaW5nLmZyb21DaGFyQ29kZSg1NTI5Nisocj4+MTApKSxuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU2MzIwKygxMDIzJnIpKSl9cmV0dXJuIG59KGwoZSkpO2lmKFwiXCI9PT1lKXJldHVyblwiXCI7aWYoIS9eW0EtWjItNz1dKyQvLnRlc3QoZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlMzIgY2hhcmFjdGVyc1wiKTt2YXIgcixuLG8scyxpLGMsaCxwLGY9XCJcIixkPWUuaW5kZXhPZihcIj1cIik7LTE9PT1kJiYoZD1lLmxlbmd0aCk7Zm9yKHZhciBnPTAseT1kPj4zPDwzO2c8eTspcj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGk9YVtlLmNoYXJBdChnKyspXSxjPWFbZS5jaGFyQXQoZysrKV0saD1hW2UuY2hhckF0KGcrKyldLHA9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihpPDw3fGM8PDJ8aD4+PjMpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoaDw8NXxwKSk7dmFyIG09ZC15O3JldHVybiAyPT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpKTo0PT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGYrPVN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihyPDwzfG4+Pj4yKSkrU3RyaW5nLmZyb21DaGFyQ29kZSgyNTUmKG48PDZ8bzw8MXxzPj4+NCkpKTo1PT09bT8ocj1hW2UuY2hhckF0KGcrKyldLG49YVtlLmNoYXJBdChnKyspXSxvPWFbZS5jaGFyQXQoZysrKV0scz1hW2UuY2hhckF0KGcrKyldLGk9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpKTo3PT09bSYmKHI9YVtlLmNoYXJBdChnKyspXSxuPWFbZS5jaGFyQXQoZysrKV0sbz1hW2UuY2hhckF0KGcrKyldLHM9YVtlLmNoYXJBdChnKyspXSxpPWFbZS5jaGFyQXQoZysrKV0sYz1hW2UuY2hhckF0KGcrKyldLGg9YVtlLmNoYXJBdChnKyspXSxmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYocjw8M3xuPj4+MikpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihuPDw2fG88PDF8cz4+PjQpKStTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSYoczw8NHxpPj4+MSkpK1N0cmluZy5mcm9tQ2hhckNvZGUoMjU1JihpPDw3fGM8PDJ8aD4+PjMpKSksZn0scD17ZW5jb2RlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJzdHJpbmdcIiE9dHlwZW9mIGU7cmV0dXJuIHImJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlciYmKGU9bmV3IFVpbnQ4QXJyYXkoZSkpLHI/ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixvLHMsYT1cIlwiLGM9ZS5sZW5ndGgsdT0wLGw9NSpwYXJzZUludChjLzUpO3U8bDspdD1lW3UrK10scj1lW3UrK10sbj1lW3UrK10sbz1lW3UrK10scz1lW3UrK10sYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVszMSYobzw8M3xzPj4+NSldK2lbMzEmc107dmFyIGg9Yy1sO3JldHVybiAxPT09aD8odD1lW3VdLGErPWlbdD4+PjNdK2lbdDw8MiYzMV0rXCI9PT09PT1cIik6Mj09PWg/KHQ9ZVt1KytdLHI9ZVt1XSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PWg/KHQ9ZVt1KytdLHI9ZVt1KytdLG49ZVt1XSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbbjw8MSYzMV0rXCI9PT1cIik6ND09PWgmJih0PWVbdSsrXSxyPWVbdSsrXSxuPWVbdSsrXSxvPWVbdV0sYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVtvPDwzJjMxXStcIj1cIiksYX0oZSk6dD9mdW5jdGlvbihlKXtmb3IodmFyIHQscixuLG8scyxhPVwiXCIsYz1lLmxlbmd0aCx1PTAsbD01KnBhcnNlSW50KGMvNSk7dTxsOyl0PWUuY2hhckNvZGVBdCh1KyspLHI9ZS5jaGFyQ29kZUF0KHUrKyksbj1lLmNoYXJDb2RlQXQodSsrKSxvPWUuY2hhckNvZGVBdCh1KyspLHM9ZS5jaGFyQ29kZUF0KHUrKyksYSs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpWzMxJihuPDwxfG8+Pj43KV0raVtvPj4+MiYzMV0raVszMSYobzw8M3xzPj4+NSldK2lbMzEmc107dmFyIGg9Yy1sO3JldHVybiAxPT09aD8odD1lLmNoYXJDb2RlQXQodSksYSs9aVt0Pj4+M10raVt0PDwyJjMxXStcIj09PT09PVwiKToyPT09aD8odD1lLmNoYXJDb2RlQXQodSsrKSxyPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PWg/KHQ9ZS5jaGFyQ29kZUF0KHUrKykscj1lLmNoYXJDb2RlQXQodSsrKSxuPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbbjw8MSYzMV0rXCI9PT1cIik6ND09PWgmJih0PWUuY2hhckNvZGVBdCh1KyspLHI9ZS5jaGFyQ29kZUF0KHUrKyksbj1lLmNoYXJDb2RlQXQodSsrKSxvPWUuY2hhckNvZGVBdCh1KSxhKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbMzEmKG48PDF8bz4+PjcpXStpW28+Pj4yJjMxXStpW288PDMmMzFdK1wiPVwiKSxhfShlKTpmdW5jdGlvbihlKXt2YXIgdCxyLG4sbyxzLGEsdSxsPSExLGg9XCJcIixwPTAsZj0wLGQ9ZS5sZW5ndGg7aWYoXCJcIj09PWUpcmV0dXJuIGg7ZG97Zm9yKGNbMF09Y1s1XSxjWzFdPWNbNl0sY1syXT1jWzddLHU9ZjtwPGQmJnU8NTsrK3ApKGE9ZS5jaGFyQ29kZUF0KHApKTwxMjg/Y1t1KytdPWE6YTwyMDQ4PyhjW3UrK109MTkyfGE+PjYsY1t1KytdPTEyOHw2MyZhKTphPDU1Mjk2fHxhPj01NzM0ND8oY1t1KytdPTIyNHxhPj4xMixjW3UrK109MTI4fGE+PjYmNjMsY1t1KytdPTEyOHw2MyZhKTooYT02NTUzNisoKDEwMjMmYSk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrcCkpLGNbdSsrXT0yNDB8YT4+MTgsY1t1KytdPTEyOHxhPj4xMiY2MyxjW3UrK109MTI4fGE+PjYmNjMsY1t1KytdPTEyOHw2MyZhKTtmPXUtNSxwPT09ZCYmKytwLHA+ZCYmdTw2JiYobD0hMCksdD1jWzBdLHU+ND8ocj1jWzFdLG49Y1syXSxvPWNbM10scz1jWzRdLGgrPWlbdD4+PjNdK2lbMzEmKHQ8PDJ8cj4+PjYpXStpW3I+Pj4xJjMxXStpWzMxJihyPDw0fG4+Pj40KV0raVszMSYobjw8MXxvPj4+NyldK2lbbz4+PjImMzFdK2lbMzEmKG88PDN8cz4+PjUpXStpWzMxJnNdKToxPT09dT9oKz1pW3Q+Pj4zXStpW3Q8PDImMzFdK1wiPT09PT09XCI6Mj09PXU/KHI9Y1sxXSxoKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVtyPDw0JjMxXStcIj09PT1cIik6Mz09PXU/KHI9Y1sxXSxuPWNbMl0saCs9aVt0Pj4+M10raVszMSYodDw8MnxyPj4+NildK2lbcj4+PjEmMzFdK2lbMzEmKHI8PDR8bj4+PjQpXStpW248PDEmMzFdK1wiPT09XCIpOihyPWNbMV0sbj1jWzJdLG89Y1szXSxoKz1pW3Q+Pj4zXStpWzMxJih0PDwyfHI+Pj42KV0raVtyPj4+MSYzMV0raVszMSYocjw8NHxuPj4+NCldK2lbMzEmKG48PDF8bz4+PjcpXStpW28+Pj4yJjMxXStpW288PDMmMzFdK1wiPVwiKX13aGlsZSghbCk7cmV0dXJuIGh9KGUpfSxkZWNvZGU6aH07aC5hc0J5dGVzPWwsbz9lLmV4cG9ydHM9cDoodC5iYXNlMzI9cCxzJiYodm9pZCAwPT09KG49ZnVuY3Rpb24oKXtyZXR1cm4gcH0uY2FsbChwLHIscCxlKSl8fChlLmV4cG9ydHM9bikpKX0oKX0sNDUyNTooZSx0KT0+e3QucmVhZD1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBzLGksYT04Km8tbi0xLGM9KDE8PGEpLTEsdT1jPj4xLGw9LTcsaD1yP28tMTowLHA9cj8tMToxLGY9ZVt0K2hdO2ZvcihoKz1wLHM9ZiYoMTw8LWwpLTEsZj4+PS1sLGwrPWE7bD4wO3M9MjU2KnMrZVt0K2hdLGgrPXAsbC09OCk7Zm9yKGk9cyYoMTw8LWwpLTEscz4+PS1sLGwrPW47bD4wO2k9MjU2KmkrZVt0K2hdLGgrPXAsbC09OCk7aWYoMD09PXMpcz0xLXU7ZWxzZXtpZihzPT09YylyZXR1cm4gaT9OYU46MS8wKihmPy0xOjEpO2krPU1hdGgucG93KDIsbikscy09dX1yZXR1cm4oZj8tMToxKSppKk1hdGgucG93KDIscy1uKX0sdC53cml0ZT1mdW5jdGlvbihlLHQscixuLG8scyl7dmFyIGksYSxjLHU9OCpzLW8tMSxsPSgxPDx1KS0xLGg9bD4+MSxwPTIzPT09bz9NYXRoLnBvdygyLC0yNCktTWF0aC5wb3coMiwtNzcpOjAsZj1uPzA6cy0xLGQ9bj8xOi0xLGc9dDwwfHwwPT09dCYmMS90PDA/MTowO2Zvcih0PU1hdGguYWJzKHQpLGlzTmFOKHQpfHx0PT09MS8wPyhhPWlzTmFOKHQpPzE6MCxpPWwpOihpPU1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjIpLHQqKGM9TWF0aC5wb3coMiwtaSkpPDEmJihpLS0sYyo9MiksKHQrPWkraD49MT9wL2M6cCpNYXRoLnBvdygyLDEtaCkpKmM+PTImJihpKyssYy89MiksaStoPj1sPyhhPTAsaT1sKTppK2g+PTE/KGE9KHQqYy0xKSpNYXRoLnBvdygyLG8pLGkrPWgpOihhPXQqTWF0aC5wb3coMixoLTEpKk1hdGgucG93KDIsbyksaT0wKSk7bz49ODtlW3IrZl09MjU1JmEsZis9ZCxhLz0yNTYsby09OCk7Zm9yKGk9aTw8b3xhLHUrPW87dT4wO2VbcitmXT0yNTUmaSxmKz1kLGkvPTI1Nix1LT04KTtlW3IrZi1kXXw9MTI4Kmd9fSwzNDc3Oihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKT0+e3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzsoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgRVJST1I9XCJpbnB1dCBpcyBpbnZhbGlkIHR5cGVcIixXSU5ET1c9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxyb290PVdJTkRPVz93aW5kb3c6e307cm9vdC5KU19TSEEyNTZfTk9fV0lORE9XJiYoV0lORE9XPSExKTt2YXIgV0VCX1dPUktFUj0hV0lORE9XJiZcIm9iamVjdFwiPT10eXBlb2Ygc2VsZixOT0RFX0pTPSFyb290LkpTX1NIQTI1Nl9OT19OT0RFX0pTJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2VzcyYmcHJvY2Vzcy52ZXJzaW9ucyYmcHJvY2Vzcy52ZXJzaW9ucy5ub2RlO05PREVfSlM/cm9vdD1fX3dlYnBhY2tfcmVxdWlyZV9fLmc6V0VCX1dPUktFUiYmKHJvb3Q9c2VsZik7dmFyIENPTU1PTl9KUz0hcm9vdC5KU19TSEEyNTZfTk9fQ09NTU9OX0pTJiZtb2R1bGUuZXhwb3J0cyxBTUQ9X193ZWJwYWNrX3JlcXVpcmVfXy5hbWRPLEFSUkFZX0JVRkZFUj0hcm9vdC5KU19TSEEyNTZfTk9fQVJSQVlfQlVGRkVSJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXIsSEVYX0NIQVJTPVwiMDEyMzQ1Njc4OWFiY2RlZlwiLnNwbGl0KFwiXCIpLEVYVFJBPVstMjE0NzQ4MzY0OCw4Mzg4NjA4LDMyNzY4LDEyOF0sU0hJRlQ9WzI0LDE2LDgsMF0sSz1bMTExNjM1MjQwOCwxODk5NDQ3NDQxLDMwNDkzMjM0NzEsMzkyMTAwOTU3Myw5NjE5ODcxNjMsMTUwODk3MDk5MywyNDUzNjM1NzQ4LDI4NzA3NjMyMjEsMzYyNDM4MTA4MCwzMTA1OTg0MDEsNjA3MjI1Mjc4LDE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LDYwNDgwNzYyOCw3NzAyNTU5ODMsMTI0OTE1MDEyMiwxNTU1MDgxNjkyLDE5OTYwNjQ5ODYsMjU1NDIyMDg4MiwyODIxODM0MzQ5LDI5NTI5OTY4MDgsMzIxMDMxMzY3MSwzMzM2NTcxODkxLDM1ODQ1Mjg3MTEsMTEzOTI2OTkzLDMzODI0MTg5NSw2NjYzMDcyMDUsNzczNTI5OTEyLDEyOTQ3NTczNzIsMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLDMzNDU3NjQ3NzEsMzUxNjA2NTgxNywzNjAwMzUyODA0LDQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XSxPVVRQVVRfVFlQRVM9W1wiaGV4XCIsXCJhcnJheVwiLFwiZGlnZXN0XCIsXCJhcnJheUJ1ZmZlclwiXSxibG9ja3M9W107IXJvb3QuSlNfU0hBMjU2X05PX05PREVfSlMmJkFycmF5LmlzQXJyYXl8fChBcnJheS5pc0FycmF5PWZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLCFBUlJBWV9CVUZGRVJ8fCFyb290LkpTX1NIQTI1Nl9OT19BUlJBWV9CVUZGRVJfSVNfVklFVyYmQXJyYXlCdWZmZXIuaXNWaWV3fHwoQXJyYXlCdWZmZXIuaXNWaWV3PWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmJ1ZmZlciYmZS5idWZmZXIuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcn0pO3ZhciBjcmVhdGVPdXRwdXRNZXRob2Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBTaGEyNTYodCwhMCkudXBkYXRlKHIpW2VdKCl9fSxjcmVhdGVNZXRob2Q9ZnVuY3Rpb24oZSl7dmFyIHQ9Y3JlYXRlT3V0cHV0TWV0aG9kKFwiaGV4XCIsZSk7Tk9ERV9KUyYmKHQ9bm9kZVdyYXAodCxlKSksdC5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFNoYTI1NihlKX0sdC51cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlKCkudXBkYXRlKGUpfTtmb3IodmFyIHI9MDtyPE9VVFBVVF9UWVBFUy5sZW5ndGg7KytyKXt2YXIgbj1PVVRQVVRfVFlQRVNbcl07dFtuXT1jcmVhdGVPdXRwdXRNZXRob2QobixlKX1yZXR1cm4gdH0sbm9kZVdyYXA9ZnVuY3Rpb24obWV0aG9kLGlzMjI0KXt2YXIgY3J5cHRvPWV2YWwoXCJyZXF1aXJlKCdjcnlwdG8nKVwiKSxCdWZmZXI9ZXZhbChcInJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlclwiKSxhbGdvcml0aG09aXMyMjQ/XCJzaGEyMjRcIjpcInNoYTI1NlwiLG5vZGVNZXRob2Q9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKGFsZ29yaXRobSkudXBkYXRlKGUsXCJ1dGY4XCIpLmRpZ2VzdChcImhleFwiKTtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7cmV0dXJuIGUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlciYmKGU9bmV3IFVpbnQ4QXJyYXkoZSkpLEFycmF5LmlzQXJyYXkoZSl8fEFycmF5QnVmZmVyLmlzVmlldyhlKXx8ZS5jb25zdHJ1Y3Rvcj09PUJ1ZmZlcj9jcnlwdG8uY3JlYXRlSGFzaChhbGdvcml0aG0pLnVwZGF0ZShuZXcgQnVmZmVyKGUpKS5kaWdlc3QoXCJoZXhcIik6bWV0aG9kKGUpfTtyZXR1cm4gbm9kZU1ldGhvZH0sY3JlYXRlSG1hY091dHB1dE1ldGhvZD1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBuZXcgSG1hY1NoYTI1NihyLHQsITApLnVwZGF0ZShuKVtlXSgpfX0sY3JlYXRlSG1hY01ldGhvZD1mdW5jdGlvbihlKXt2YXIgdD1jcmVhdGVIbWFjT3V0cHV0TWV0aG9kKFwiaGV4XCIsZSk7dC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBIbWFjU2hhMjU2KHQsZSl9LHQudXBkYXRlPWZ1bmN0aW9uKGUscil7cmV0dXJuIHQuY3JlYXRlKGUpLnVwZGF0ZShyKX07Zm9yKHZhciByPTA7cjxPVVRQVVRfVFlQRVMubGVuZ3RoOysrcil7dmFyIG49T1VUUFVUX1RZUEVTW3JdO3Rbbl09Y3JlYXRlSG1hY091dHB1dE1ldGhvZChuLGUpfXJldHVybiB0fTtmdW5jdGlvbiBTaGEyNTYoZSx0KXt0PyhibG9ja3NbMF09YmxvY2tzWzE2XT1ibG9ja3NbMV09YmxvY2tzWzJdPWJsb2Nrc1szXT1ibG9ja3NbNF09YmxvY2tzWzVdPWJsb2Nrc1s2XT1ibG9ja3NbN109YmxvY2tzWzhdPWJsb2Nrc1s5XT1ibG9ja3NbMTBdPWJsb2Nrc1sxMV09YmxvY2tzWzEyXT1ibG9ja3NbMTNdPWJsb2Nrc1sxNF09YmxvY2tzWzE1XT0wLHRoaXMuYmxvY2tzPWJsb2Nrcyk6dGhpcy5ibG9ja3M9WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMF0sZT8odGhpcy5oMD0zMjM4MzcxMDMyLHRoaXMuaDE9OTE0MTUwNjYzLHRoaXMuaDI9ODEyNzAyOTk5LHRoaXMuaDM9NDE0NDkxMjY5Nyx0aGlzLmg0PTQyOTA3NzU4NTcsdGhpcy5oNT0xNzUwNjAzMDI1LHRoaXMuaDY9MTY5NDA3NjgzOSx0aGlzLmg3PTMyMDQwNzU0MjgpOih0aGlzLmgwPTE3NzkwMzM3MDMsdGhpcy5oMT0zMTQ0MTM0Mjc3LHRoaXMuaDI9MTAxMzkwNDI0Mix0aGlzLmgzPTI3NzM0ODA3NjIsdGhpcy5oND0xMzU5ODkzMTE5LHRoaXMuaDU9MjYwMDgyMjkyNCx0aGlzLmg2PTUyODczNDYzNSx0aGlzLmg3PTE1NDE0NTkyMjUpLHRoaXMuYmxvY2s9dGhpcy5zdGFydD10aGlzLmJ5dGVzPXRoaXMuaEJ5dGVzPTAsdGhpcy5maW5hbGl6ZWQ9dGhpcy5oYXNoZWQ9ITEsdGhpcy5maXJzdD0hMCx0aGlzLmlzMjI0PWV9ZnVuY3Rpb24gSG1hY1NoYTI1NihlLHQscil7dmFyIG4sbz10eXBlb2YgZTtpZihcInN0cmluZ1wiPT09byl7dmFyIHMsaT1bXSxhPWUubGVuZ3RoLGM9MDtmb3Iobj0wO248YTsrK24pKHM9ZS5jaGFyQ29kZUF0KG4pKTwxMjg/aVtjKytdPXM6czwyMDQ4PyhpW2MrK109MTkyfHM+PjYsaVtjKytdPTEyOHw2MyZzKTpzPDU1Mjk2fHxzPj01NzM0ND8oaVtjKytdPTIyNHxzPj4xMixpW2MrK109MTI4fHM+PjYmNjMsaVtjKytdPTEyOHw2MyZzKToocz02NTUzNisoKDEwMjMmcyk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrbikpLGlbYysrXT0yNDB8cz4+MTgsaVtjKytdPTEyOHxzPj4xMiY2MyxpW2MrK109MTI4fHM+PjYmNjMsaVtjKytdPTEyOHw2MyZzKTtlPWl9ZWxzZXtpZihcIm9iamVjdFwiIT09byl0aHJvdyBuZXcgRXJyb3IoRVJST1IpO2lmKG51bGw9PT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7aWYoQVJSQVlfQlVGRkVSJiZlLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpZT1uZXcgVWludDhBcnJheShlKTtlbHNlIGlmKCEoQXJyYXkuaXNBcnJheShlKXx8QVJSQVlfQlVGRkVSJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihFUlJPUil9ZS5sZW5ndGg+NjQmJihlPW5ldyBTaGEyNTYodCwhMCkudXBkYXRlKGUpLmFycmF5KCkpO3ZhciB1PVtdLGw9W107Zm9yKG49MDtuPDY0Oysrbil7dmFyIGg9ZVtuXXx8MDt1W25dPTkyXmgsbFtuXT01NF5ofVNoYTI1Ni5jYWxsKHRoaXMsdCxyKSx0aGlzLnVwZGF0ZShsKSx0aGlzLm9LZXlQYWQ9dSx0aGlzLmlubmVyPSEwLHRoaXMuc2hhcmVkTWVtb3J5PXJ9U2hhMjU2LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuZmluYWxpemVkKXt2YXIgdCxyPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1yKXtpZihcIm9iamVjdFwiIT09cil0aHJvdyBuZXcgRXJyb3IoRVJST1IpO2lmKG51bGw9PT1lKXRocm93IG5ldyBFcnJvcihFUlJPUik7aWYoQVJSQVlfQlVGRkVSJiZlLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpZT1uZXcgVWludDhBcnJheShlKTtlbHNlIGlmKCEoQXJyYXkuaXNBcnJheShlKXx8QVJSQVlfQlVGRkVSJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihFUlJPUik7dD0hMH1mb3IodmFyIG4sbyxzPTAsaT1lLmxlbmd0aCxhPXRoaXMuYmxvY2tzO3M8aTspe2lmKHRoaXMuaGFzaGVkJiYodGhpcy5oYXNoZWQ9ITEsYVswXT10aGlzLmJsb2NrLGFbMTZdPWFbMV09YVsyXT1hWzNdPWFbNF09YVs1XT1hWzZdPWFbN109YVs4XT1hWzldPWFbMTBdPWFbMTFdPWFbMTJdPWFbMTNdPWFbMTRdPWFbMTVdPTApLHQpZm9yKG89dGhpcy5zdGFydDtzPGkmJm88NjQ7KytzKWFbbz4+Ml18PWVbc108PFNISUZUWzMmbysrXTtlbHNlIGZvcihvPXRoaXMuc3RhcnQ7czxpJiZvPDY0Oysrcykobj1lLmNoYXJDb2RlQXQocykpPDEyOD9hW28+PjJdfD1uPDxTSElGVFszJm8rK106bjwyMDQ4PyhhW28+PjJdfD0oMTkyfG4+PjYpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKTpuPDU1Mjk2fHxuPj01NzM0ND8oYVtvPj4yXXw9KDIyNHxuPj4xMik8PFNISUZUWzMmbysrXSxhW28+PjJdfD0oMTI4fG4+PjYmNjMpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKToobj02NTUzNisoKDEwMjMmbik8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsrcykpLGFbbz4+Ml18PSgyNDB8bj4+MTgpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHxuPj4xMiY2Myk8PFNISUZUWzMmbysrXSxhW28+PjJdfD0oMTI4fG4+PjYmNjMpPDxTSElGVFszJm8rK10sYVtvPj4yXXw9KDEyOHw2MyZuKTw8U0hJRlRbMyZvKytdKTt0aGlzLmxhc3RCeXRlSW5kZXg9byx0aGlzLmJ5dGVzKz1vLXRoaXMuc3RhcnQsbz49NjQ/KHRoaXMuYmxvY2s9YVsxNl0sdGhpcy5zdGFydD1vLTY0LHRoaXMuaGFzaCgpLHRoaXMuaGFzaGVkPSEwKTp0aGlzLnN0YXJ0PW99cmV0dXJuIHRoaXMuYnl0ZXM+NDI5NDk2NzI5NSYmKHRoaXMuaEJ5dGVzKz10aGlzLmJ5dGVzLzQyOTQ5NjcyOTY8PDAsdGhpcy5ieXRlcz10aGlzLmJ5dGVzJTQyOTQ5NjcyOTYpLHRoaXN9fSxTaGEyNTYucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYoIXRoaXMuZmluYWxpemVkKXt0aGlzLmZpbmFsaXplZD0hMDt2YXIgZT10aGlzLmJsb2Nrcyx0PXRoaXMubGFzdEJ5dGVJbmRleDtlWzE2XT10aGlzLmJsb2NrLGVbdD4+Ml18PUVYVFJBWzMmdF0sdGhpcy5ibG9jaz1lWzE2XSx0Pj01NiYmKHRoaXMuaGFzaGVkfHx0aGlzLmhhc2goKSxlWzBdPXRoaXMuYmxvY2ssZVsxNl09ZVsxXT1lWzJdPWVbM109ZVs0XT1lWzVdPWVbNl09ZVs3XT1lWzhdPWVbOV09ZVsxMF09ZVsxMV09ZVsxMl09ZVsxM109ZVsxNF09ZVsxNV09MCksZVsxNF09dGhpcy5oQnl0ZXM8PDN8dGhpcy5ieXRlcz4+PjI5LGVbMTVdPXRoaXMuYnl0ZXM8PDMsdGhpcy5oYXNoKCl9fSxTaGEyNTYucHJvdG90eXBlLmhhc2g9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbixvLHMsaSxhLGMsdT10aGlzLmgwLGw9dGhpcy5oMSxoPXRoaXMuaDIscD10aGlzLmgzLGY9dGhpcy5oNCxkPXRoaXMuaDUsZz10aGlzLmg2LHk9dGhpcy5oNyxtPXRoaXMuYmxvY2tzO2ZvcihlPTE2O2U8NjQ7KytlKXQ9KChvPW1bZS0xNV0pPj4+N3xvPDwyNSleKG8+Pj4xOHxvPDwxNClebz4+PjMscj0oKG89bVtlLTJdKT4+PjE3fG88PDE1KV4obz4+PjE5fG88PDEzKV5vPj4+MTAsbVtlXT1tW2UtMTZdK3QrbVtlLTddK3I8PDA7Zm9yKGM9bCZoLGU9MDtlPDY0O2UrPTQpdGhpcy5maXJzdD8odGhpcy5pczIyND8ocz0zMDAwMzIseT0obz1tWzBdLTE0MTMyNTc4MTkpLTE1MDA1NDU5OTw8MCxwPW8rMjQxNzcwNzc8PDApOihzPTcwNDc1MTEwOSx5PShvPW1bMF0tMjEwMjQ0MjQ4KS0xNTIxNDg2NTM0PDwwLHA9bysxNDM2OTQ1NjU8PDApLHRoaXMuZmlyc3Q9ITEpOih0PSh1Pj4+Mnx1PDwzMCleKHU+Pj4xM3x1PDwxOSleKHU+Pj4yMnx1PDwxMCksbj0ocz11JmwpXnUmaF5jLHk9cCsobz15KyhyPShmPj4+NnxmPDwyNileKGY+Pj4xMXxmPDwyMSleKGY+Pj4yNXxmPDw3KSkrKGYmZF5+ZiZnKStLW2VdK21bZV0pPDwwLHA9bysodCtuKTw8MCksdD0ocD4+PjJ8cDw8MzApXihwPj4+MTN8cDw8MTkpXihwPj4+MjJ8cDw8MTApLG49KGk9cCZ1KV5wJmxecyxnPWgrKG89Zysocj0oeT4+PjZ8eTw8MjYpXih5Pj4+MTF8eTw8MjEpXih5Pj4+MjV8eTw8NykpKyh5JmZefnkmZCkrS1tlKzFdK21bZSsxXSk8PDAsdD0oKGg9bysodCtuKTw8MCk+Pj4yfGg8PDMwKV4oaD4+PjEzfGg8PDE5KV4oaD4+PjIyfGg8PDEwKSxuPShhPWgmcCleaCZ1XmksZD1sKyhvPWQrKHI9KGc+Pj42fGc8PDI2KV4oZz4+PjExfGc8PDIxKV4oZz4+PjI1fGc8PDcpKSsoZyZ5Xn5nJmYpK0tbZSsyXSttW2UrMl0pPDwwLHQ9KChsPW8rKHQrbik8PDApPj4+MnxsPDwzMCleKGw+Pj4xM3xsPDwxOSleKGw+Pj4yMnxsPDwxMCksbj0oYz1sJmgpXmwmcF5hLGY9dSsobz1mKyhyPShkPj4+NnxkPDwyNileKGQ+Pj4xMXxkPDwyMSleKGQ+Pj4yNXxkPDw3KSkrKGQmZ15+ZCZ5KStLW2UrM10rbVtlKzNdKTw8MCx1PW8rKHQrbik8PDA7dGhpcy5oMD10aGlzLmgwK3U8PDAsdGhpcy5oMT10aGlzLmgxK2w8PDAsdGhpcy5oMj10aGlzLmgyK2g8PDAsdGhpcy5oMz10aGlzLmgzK3A8PDAsdGhpcy5oND10aGlzLmg0K2Y8PDAsdGhpcy5oNT10aGlzLmg1K2Q8PDAsdGhpcy5oNj10aGlzLmg2K2c8PDAsdGhpcy5oNz10aGlzLmg3K3k8PDB9LFNoYTI1Ni5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDAsdD10aGlzLmgxLHI9dGhpcy5oMixuPXRoaXMuaDMsbz10aGlzLmg0LHM9dGhpcy5oNSxpPXRoaXMuaDYsYT10aGlzLmg3LGM9SEVYX0NIQVJTW2U+PjI4JjE1XStIRVhfQ0hBUlNbZT4+MjQmMTVdK0hFWF9DSEFSU1tlPj4yMCYxNV0rSEVYX0NIQVJTW2U+PjE2JjE1XStIRVhfQ0hBUlNbZT4+MTImMTVdK0hFWF9DSEFSU1tlPj44JjE1XStIRVhfQ0hBUlNbZT4+NCYxNV0rSEVYX0NIQVJTWzE1JmVdK0hFWF9DSEFSU1t0Pj4yOCYxNV0rSEVYX0NIQVJTW3Q+PjI0JjE1XStIRVhfQ0hBUlNbdD4+MjAmMTVdK0hFWF9DSEFSU1t0Pj4xNiYxNV0rSEVYX0NIQVJTW3Q+PjEyJjE1XStIRVhfQ0hBUlNbdD4+OCYxNV0rSEVYX0NIQVJTW3Q+PjQmMTVdK0hFWF9DSEFSU1sxNSZ0XStIRVhfQ0hBUlNbcj4+MjgmMTVdK0hFWF9DSEFSU1tyPj4yNCYxNV0rSEVYX0NIQVJTW3I+PjIwJjE1XStIRVhfQ0hBUlNbcj4+MTYmMTVdK0hFWF9DSEFSU1tyPj4xMiYxNV0rSEVYX0NIQVJTW3I+PjgmMTVdK0hFWF9DSEFSU1tyPj40JjE1XStIRVhfQ0hBUlNbMTUmcl0rSEVYX0NIQVJTW24+PjI4JjE1XStIRVhfQ0hBUlNbbj4+MjQmMTVdK0hFWF9DSEFSU1tuPj4yMCYxNV0rSEVYX0NIQVJTW24+PjE2JjE1XStIRVhfQ0hBUlNbbj4+MTImMTVdK0hFWF9DSEFSU1tuPj44JjE1XStIRVhfQ0hBUlNbbj4+NCYxNV0rSEVYX0NIQVJTWzE1Jm5dK0hFWF9DSEFSU1tvPj4yOCYxNV0rSEVYX0NIQVJTW28+PjI0JjE1XStIRVhfQ0hBUlNbbz4+MjAmMTVdK0hFWF9DSEFSU1tvPj4xNiYxNV0rSEVYX0NIQVJTW28+PjEyJjE1XStIRVhfQ0hBUlNbbz4+OCYxNV0rSEVYX0NIQVJTW28+PjQmMTVdK0hFWF9DSEFSU1sxNSZvXStIRVhfQ0hBUlNbcz4+MjgmMTVdK0hFWF9DSEFSU1tzPj4yNCYxNV0rSEVYX0NIQVJTW3M+PjIwJjE1XStIRVhfQ0hBUlNbcz4+MTYmMTVdK0hFWF9DSEFSU1tzPj4xMiYxNV0rSEVYX0NIQVJTW3M+PjgmMTVdK0hFWF9DSEFSU1tzPj40JjE1XStIRVhfQ0hBUlNbMTUmc10rSEVYX0NIQVJTW2k+PjI4JjE1XStIRVhfQ0hBUlNbaT4+MjQmMTVdK0hFWF9DSEFSU1tpPj4yMCYxNV0rSEVYX0NIQVJTW2k+PjE2JjE1XStIRVhfQ0hBUlNbaT4+MTImMTVdK0hFWF9DSEFSU1tpPj44JjE1XStIRVhfQ0hBUlNbaT4+NCYxNV0rSEVYX0NIQVJTWzE1JmldO3JldHVybiB0aGlzLmlzMjI0fHwoYys9SEVYX0NIQVJTW2E+PjI4JjE1XStIRVhfQ0hBUlNbYT4+MjQmMTVdK0hFWF9DSEFSU1thPj4yMCYxNV0rSEVYX0NIQVJTW2E+PjE2JjE1XStIRVhfQ0hBUlNbYT4+MTImMTVdK0hFWF9DSEFSU1thPj44JjE1XStIRVhfQ0hBUlNbYT4+NCYxNV0rSEVYX0NIQVJTWzE1JmFdKSxjfSxTaGEyNTYucHJvdG90eXBlLnRvU3RyaW5nPVNoYTI1Ni5wcm90b3R5cGUuaGV4LFNoYTI1Ni5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDAsdD10aGlzLmgxLHI9dGhpcy5oMixuPXRoaXMuaDMsbz10aGlzLmg0LHM9dGhpcy5oNSxpPXRoaXMuaDYsYT10aGlzLmg3LGM9W2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmUsdD4+MjQmMjU1LHQ+PjE2JjI1NSx0Pj44JjI1NSwyNTUmdCxyPj4yNCYyNTUscj4+MTYmMjU1LHI+PjgmMjU1LDI1NSZyLG4+PjI0JjI1NSxuPj4xNiYyNTUsbj4+OCYyNTUsMjU1Jm4sbz4+MjQmMjU1LG8+PjE2JjI1NSxvPj44JjI1NSwyNTUmbyxzPj4yNCYyNTUscz4+MTYmMjU1LHM+PjgmMjU1LDI1NSZzLGk+PjI0JjI1NSxpPj4xNiYyNTUsaT4+OCYyNTUsMjU1JmldO3JldHVybiB0aGlzLmlzMjI0fHxjLnB1c2goYT4+MjQmMjU1LGE+PjE2JjI1NSxhPj44JjI1NSwyNTUmYSksY30sU2hhMjU2LnByb3RvdHlwZS5hcnJheT1TaGEyNTYucHJvdG90eXBlLmRpZ2VzdCxTaGEyNTYucHJvdG90eXBlLmFycmF5QnVmZmVyPWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPW5ldyBBcnJheUJ1ZmZlcih0aGlzLmlzMjI0PzI4OjMyKSx0PW5ldyBEYXRhVmlldyhlKTtyZXR1cm4gdC5zZXRVaW50MzIoMCx0aGlzLmgwKSx0LnNldFVpbnQzMig0LHRoaXMuaDEpLHQuc2V0VWludDMyKDgsdGhpcy5oMiksdC5zZXRVaW50MzIoMTIsdGhpcy5oMyksdC5zZXRVaW50MzIoMTYsdGhpcy5oNCksdC5zZXRVaW50MzIoMjAsdGhpcy5oNSksdC5zZXRVaW50MzIoMjQsdGhpcy5oNiksdGhpcy5pczIyNHx8dC5zZXRVaW50MzIoMjgsdGhpcy5oNyksZX0sSG1hY1NoYTI1Ni5wcm90b3R5cGU9bmV3IFNoYTI1NixIbWFjU2hhMjU2LnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKFNoYTI1Ni5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKSx0aGlzLmlubmVyKXt0aGlzLmlubmVyPSExO3ZhciBlPXRoaXMuYXJyYXkoKTtTaGEyNTYuY2FsbCh0aGlzLHRoaXMuaXMyMjQsdGhpcy5zaGFyZWRNZW1vcnkpLHRoaXMudXBkYXRlKHRoaXMub0tleVBhZCksdGhpcy51cGRhdGUoZSksU2hhMjU2LnByb3RvdHlwZS5maW5hbGl6ZS5jYWxsKHRoaXMpfX07dmFyIGV4cG9ydHM9Y3JlYXRlTWV0aG9kKCk7ZXhwb3J0cy5zaGEyNTY9ZXhwb3J0cyxleHBvcnRzLnNoYTIyND1jcmVhdGVNZXRob2QoITApLGV4cG9ydHMuc2hhMjU2LmhtYWM9Y3JlYXRlSG1hY01ldGhvZCgpLGV4cG9ydHMuc2hhMjI0LmhtYWM9Y3JlYXRlSG1hY01ldGhvZCghMCksQ09NTU9OX0pTP21vZHVsZS5leHBvcnRzPWV4cG9ydHM6KHJvb3Quc2hhMjU2PWV4cG9ydHMuc2hhMjU2LHJvb3Quc2hhMjI0PWV4cG9ydHMuc2hhMjI0LEFNRCYmKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHN9LmNhbGwoZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fLGV4cG9ydHMsbW9kdWxlKSx2b2lkIDA9PT1fX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfX3x8KG1vZHVsZS5leHBvcnRzPV9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSkpfSkoKX0sNTgzOihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgbz1cImlucHV0IGlzIGludmFsaWQgdHlwZVwiLHM9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxpPXM/d2luZG93Ont9O2kuSlNfU0hBM19OT19XSU5ET1cmJihzPSExKTt2YXIgYT0hcyYmXCJvYmplY3RcIj09dHlwZW9mIHNlbGY7IWkuSlNfU0hBM19OT19OT0RFX0pTJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2VzcyYmcHJvY2Vzcy52ZXJzaW9ucyYmcHJvY2Vzcy52ZXJzaW9ucy5ub2RlP2k9ci5nOmEmJihpPXNlbGYpO3ZhciBjPSFpLkpTX1NIQTNfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMsdT1yLmFtZE8sbD0haS5KU19TSEEzX05PX0FSUkFZX0JVRkZFUiYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyLGg9XCIwMTIzNDU2Nzg5YWJjZGVmXCIuc3BsaXQoXCJcIikscD1bNCwxMDI0LDI2MjE0NCw2NzEwODg2NF0sZj1bMCw4LDE2LDI0XSxkPVsxLDAsMzI4OTgsMCwzMjkwNiwyMTQ3NDgzNjQ4LDIxNDc1MTY0MTYsMjE0NzQ4MzY0OCwzMjkwNywwLDIxNDc0ODM2NDksMCwyMTQ3NTE2NTQ1LDIxNDc0ODM2NDgsMzI3NzcsMjE0NzQ4MzY0OCwxMzgsMCwxMzYsMCwyMTQ3NTE2NDI1LDAsMjE0NzQ4MzY1OCwwLDIxNDc1MTY1NTUsMCwxMzksMjE0NzQ4MzY0OCwzMjkwNSwyMTQ3NDgzNjQ4LDMyNzcxLDIxNDc0ODM2NDgsMzI3NzAsMjE0NzQ4MzY0OCwxMjgsMjE0NzQ4MzY0OCwzMjc3OCwwLDIxNDc0ODM2NTgsMjE0NzQ4MzY0OCwyMTQ3NTE2NTQ1LDIxNDc0ODM2NDgsMzI4OTYsMjE0NzQ4MzY0OCwyMTQ3NDgzNjQ5LDAsMjE0NzUxNjQyNCwyMTQ3NDgzNjQ4XSxnPVsyMjQsMjU2LDM4NCw1MTJdLHk9WzEyOCwyNTZdLG09W1wiaGV4XCIsXCJidWZmZXJcIixcImFycmF5QnVmZmVyXCIsXCJhcnJheVwiLFwiZGlnZXN0XCJdLGI9ezEyODoxNjgsMjU2OjEzNn07IWkuSlNfU0hBM19OT19OT0RFX0pTJiZBcnJheS5pc0FycmF5fHwoQXJyYXkuaXNBcnJheT1mdW5jdGlvbihlKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9KSwhbHx8IWkuSlNfU0hBM19OT19BUlJBWV9CVUZGRVJfSVNfVklFVyYmQXJyYXlCdWZmZXIuaXNWaWV3fHwoQXJyYXlCdWZmZXIuaXNWaWV3PWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmJ1ZmZlciYmZS5idWZmZXIuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcn0pO2Zvcih2YXIgQT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBuZXcgRChlLHQsZSkudXBkYXRlKG4pW3JdKCl9fSx3PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24obixvKXtyZXR1cm4gbmV3IEQoZSx0LG8pLnVwZGF0ZShuKVtyXSgpfX0sdj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGZ1bmN0aW9uKHQsbixvLHMpe3JldHVybiBfW1wiY3NoYWtlXCIrZV0udXBkYXRlKHQsbixvLHMpW3JdKCl9fSxTPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZnVuY3Rpb24odCxuLG8scyl7cmV0dXJuIF9bXCJrbWFjXCIrZV0udXBkYXRlKHQsbixvLHMpW3JdKCl9fSx4PWZ1bmN0aW9uKGUsdCxyLG4pe2Zvcih2YXIgbz0wO288bS5sZW5ndGg7KytvKXt2YXIgcz1tW29dO2Vbc109dChyLG4scyl9cmV0dXJuIGV9LEU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1BKGUsdCxcImhleFwiKTtyZXR1cm4gci5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoZSx0LGUpfSxyLnVwZGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gci5jcmVhdGUoKS51cGRhdGUoZSl9LHgocixBLGUsdCl9LFQ9W3tuYW1lOlwia2VjY2FrXCIscGFkZGluZzpbMSwyNTYsNjU1MzYsMTY3NzcyMTZdLGJpdHM6ZyxjcmVhdGVNZXRob2Q6RX0se25hbWU6XCJzaGEzXCIscGFkZGluZzpbNiwxNTM2LDM5MzIxNiwxMDA2NjMyOTZdLGJpdHM6ZyxjcmVhdGVNZXRob2Q6RX0se25hbWU6XCJzaGFrZVwiLHBhZGRpbmc6WzMxLDc5MzYsMjAzMTYxNiw1MjAwOTM2OTZdLGJpdHM6eSxjcmVhdGVNZXRob2Q6ZnVuY3Rpb24oZSx0KXt2YXIgcj13KGUsdCxcImhleFwiKTtyZXR1cm4gci5jcmVhdGU9ZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBEKGUsdCxyKX0sci51cGRhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jcmVhdGUodCkudXBkYXRlKGUpfSx4KHIsdyxlLHQpfX0se25hbWU6XCJjc2hha2VcIixwYWRkaW5nOnAsYml0czp5LGNyZWF0ZU1ldGhvZDpmdW5jdGlvbihlLHQpe3ZhciByPWJbZV0sbj12KGUsMCxcImhleFwiKTtyZXR1cm4gbi5jcmVhdGU9ZnVuY3Rpb24obixvLHMpe3JldHVybiBvfHxzP25ldyBEKGUsdCxuKS5ieXRlcGFkKFtvLHNdLHIpOl9bXCJzaGFrZVwiK2VdLmNyZWF0ZShuKX0sbi51cGRhdGU9ZnVuY3Rpb24oZSx0LHIsbyl7cmV0dXJuIG4uY3JlYXRlKHQscixvKS51cGRhdGUoZSl9LHgobix2LGUsdCl9fSx7bmFtZTpcImttYWNcIixwYWRkaW5nOnAsYml0czp5LGNyZWF0ZU1ldGhvZDpmdW5jdGlvbihlLHQpe3ZhciByPWJbZV0sbj1TKGUsMCxcImhleFwiKTtyZXR1cm4gbi5jcmVhdGU9ZnVuY3Rpb24obixvLHMpe3JldHVybiBuZXcgTihlLHQsbykuYnl0ZXBhZChbXCJLTUFDXCIsc10scikuYnl0ZXBhZChbbl0scil9LG4udXBkYXRlPWZ1bmN0aW9uKGUsdCxyLG8pe3JldHVybiBuLmNyZWF0ZShlLHIsbykudXBkYXRlKHQpfSx4KG4sUyxlLHQpfX1dLF89e30sQj1bXSxVPTA7VTxULmxlbmd0aDsrK1UpZm9yKHZhciBrPVRbVV0sST1rLmJpdHMsQz0wO0M8SS5sZW5ndGg7KytDKXt2YXIgUj1rLm5hbWUrXCJfXCIrSVtDXTtpZihCLnB1c2goUiksX1tSXT1rLmNyZWF0ZU1ldGhvZChJW0NdLGsucGFkZGluZyksXCJzaGEzXCIhPT1rLm5hbWUpe3ZhciBPPWsubmFtZStJW0NdO0IucHVzaChPKSxfW09dPV9bUl19fWZ1bmN0aW9uIEQoZSx0LHIpe3RoaXMuYmxvY2tzPVtdLHRoaXMucz1bXSx0aGlzLnBhZGRpbmc9dCx0aGlzLm91dHB1dEJpdHM9cix0aGlzLnJlc2V0PSEwLHRoaXMuZmluYWxpemVkPSExLHRoaXMuYmxvY2s9MCx0aGlzLnN0YXJ0PTAsdGhpcy5ibG9ja0NvdW50PTE2MDAtKGU8PDEpPj41LHRoaXMuYnl0ZUNvdW50PXRoaXMuYmxvY2tDb3VudDw8Mix0aGlzLm91dHB1dEJsb2Nrcz1yPj41LHRoaXMuZXh0cmFCeXRlcz0oMzEmcik+PjM7Zm9yKHZhciBuPTA7bjw1MDsrK24pdGhpcy5zW25dPTB9ZnVuY3Rpb24gTihlLHQscil7RC5jYWxsKHRoaXMsZSx0LHIpfUQucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJmaW5hbGl6ZSBhbHJlYWR5IGNhbGxlZFwiKTt2YXIgdCxyPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1yKXtpZihcIm9iamVjdFwiIT09cil0aHJvdyBuZXcgRXJyb3Iobyk7aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKG8pO2lmKGwmJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcillPW5ldyBVaW50OEFycmF5KGUpO2Vsc2UgaWYoIShBcnJheS5pc0FycmF5KGUpfHxsJiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcihvKTt0PSEwfWZvcih2YXIgbixzLGk9dGhpcy5ibG9ja3MsYT10aGlzLmJ5dGVDb3VudCxjPWUubGVuZ3RoLHU9dGhpcy5ibG9ja0NvdW50LGg9MCxwPXRoaXMucztoPGM7KXtpZih0aGlzLnJlc2V0KWZvcih0aGlzLnJlc2V0PSExLGlbMF09dGhpcy5ibG9jayxuPTE7bjx1KzE7KytuKWlbbl09MDtpZih0KWZvcihuPXRoaXMuc3RhcnQ7aDxjJiZuPGE7KytoKWlbbj4+Ml18PWVbaF08PGZbMyZuKytdO2Vsc2UgZm9yKG49dGhpcy5zdGFydDtoPGMmJm48YTsrK2gpKHM9ZS5jaGFyQ29kZUF0KGgpKTwxMjg/aVtuPj4yXXw9czw8ZlszJm4rK106czwyMDQ4PyhpW24+PjJdfD0oMTkyfHM+PjYpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fDYzJnMpPDxmWzMmbisrXSk6czw1NTI5Nnx8cz49NTczNDQ/KGlbbj4+Ml18PSgyMjR8cz4+MTIpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fHM+PjYmNjMpPDxmWzMmbisrXSxpW24+PjJdfD0oMTI4fDYzJnMpPDxmWzMmbisrXSk6KHM9NjU1MzYrKCgxMDIzJnMpPDwxMHwxMDIzJmUuY2hhckNvZGVBdCgrK2gpKSxpW24+PjJdfD0oMjQwfHM+PjE4KTw8ZlszJm4rK10saVtuPj4yXXw9KDEyOHxzPj4xMiY2Myk8PGZbMyZuKytdLGlbbj4+Ml18PSgxMjh8cz4+NiY2Myk8PGZbMyZuKytdLGlbbj4+Ml18PSgxMjh8NjMmcyk8PGZbMyZuKytdKTtpZih0aGlzLmxhc3RCeXRlSW5kZXg9bixuPj1hKXtmb3IodGhpcy5zdGFydD1uLWEsdGhpcy5ibG9jaz1pW3VdLG49MDtuPHU7KytuKXBbbl1ePWlbbl07UChwKSx0aGlzLnJlc2V0PSEwfWVsc2UgdGhpcy5zdGFydD1ufXJldHVybiB0aGlzfSxELnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oZSx0KXt2YXIgcj0yNTUmZSxuPTEsbz1bcl07Zm9yKHI9MjU1JihlPj49OCk7cj4wOylvLnVuc2hpZnQocikscj0yNTUmKGU+Pj04KSwrK247cmV0dXJuIHQ/by5wdXNoKG4pOm8udW5zaGlmdChuKSx0aGlzLnVwZGF0ZShvKSxvLmxlbmd0aH0sRC5wcm90b3R5cGUuZW5jb2RlU3RyaW5nPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dHlwZW9mIGU7aWYoXCJzdHJpbmdcIiE9PXIpe2lmKFwib2JqZWN0XCIhPT1yKXRocm93IG5ldyBFcnJvcihvKTtpZihudWxsPT09ZSl0aHJvdyBuZXcgRXJyb3Iobyk7aWYobCYmZS5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyKWU9bmV3IFVpbnQ4QXJyYXkoZSk7ZWxzZSBpZighKEFycmF5LmlzQXJyYXkoZSl8fGwmJkFycmF5QnVmZmVyLmlzVmlldyhlKSkpdGhyb3cgbmV3IEVycm9yKG8pO3Q9ITB9dmFyIG49MCxzPWUubGVuZ3RoO2lmKHQpbj1zO2Vsc2UgZm9yKHZhciBpPTA7aTxlLmxlbmd0aDsrK2kpe3ZhciBhPWUuY2hhckNvZGVBdChpKTthPDEyOD9uKz0xOmE8MjA0OD9uKz0yOmE8NTUyOTZ8fGE+PTU3MzQ0P24rPTM6KGE9NjU1MzYrKCgxMDIzJmEpPDwxMHwxMDIzJmUuY2hhckNvZGVBdCgrK2kpKSxuKz00KX1yZXR1cm4gbis9dGhpcy5lbmNvZGUoOCpuKSx0aGlzLnVwZGF0ZShlKSxufSxELnByb3RvdHlwZS5ieXRlcGFkPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXRoaXMuZW5jb2RlKHQpLG49MDtuPGUubGVuZ3RoOysrbilyKz10aGlzLmVuY29kZVN0cmluZyhlW25dKTt2YXIgbz10LXIldCxzPVtdO3JldHVybiBzLmxlbmd0aD1vLHRoaXMudXBkYXRlKHMpLHRoaXN9LEQucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYoIXRoaXMuZmluYWxpemVkKXt0aGlzLmZpbmFsaXplZD0hMDt2YXIgZT10aGlzLmJsb2Nrcyx0PXRoaXMubGFzdEJ5dGVJbmRleCxyPXRoaXMuYmxvY2tDb3VudCxuPXRoaXMucztpZihlW3Q+PjJdfD10aGlzLnBhZGRpbmdbMyZ0XSx0aGlzLmxhc3RCeXRlSW5kZXg9PT10aGlzLmJ5dGVDb3VudClmb3IoZVswXT1lW3JdLHQ9MTt0PHIrMTsrK3QpZVt0XT0wO2ZvcihlW3ItMV18PTIxNDc0ODM2NDgsdD0wO3Q8cjsrK3Qpblt0XV49ZVt0XTtQKG4pfX0sRC5wcm90b3R5cGUudG9TdHJpbmc9RC5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO2Zvcih2YXIgZSx0PXRoaXMuYmxvY2tDb3VudCxyPXRoaXMucyxuPXRoaXMub3V0cHV0QmxvY2tzLG89dGhpcy5leHRyYUJ5dGVzLHM9MCxpPTAsYT1cIlwiO2k8bjspe2ZvcihzPTA7czx0JiZpPG47KytzLCsraSllPXJbc10sYSs9aFtlPj40JjE1XStoWzE1JmVdK2hbZT4+MTImMTVdK2hbZT4+OCYxNV0raFtlPj4yMCYxNV0raFtlPj4xNiYxNV0raFtlPj4yOCYxNV0raFtlPj4yNCYxNV07aSV0PT0wJiYoUChyKSxzPTApfXJldHVybiBvJiYoZT1yW3NdLGErPWhbZT4+NCYxNV0raFsxNSZlXSxvPjEmJihhKz1oW2U+PjEyJjE1XStoW2U+PjgmMTVdKSxvPjImJihhKz1oW2U+PjIwJjE1XStoW2U+PjE2JjE1XSkpLGF9LEQucHJvdG90eXBlLmFycmF5QnVmZmVyPWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlLHQ9dGhpcy5ibG9ja0NvdW50LHI9dGhpcy5zLG49dGhpcy5vdXRwdXRCbG9ja3Msbz10aGlzLmV4dHJhQnl0ZXMscz0wLGk9MCxhPXRoaXMub3V0cHV0Qml0cz4+MztlPW8/bmV3IEFycmF5QnVmZmVyKG4rMTw8Mik6bmV3IEFycmF5QnVmZmVyKGEpO2Zvcih2YXIgYz1uZXcgVWludDMyQXJyYXkoZSk7aTxuOyl7Zm9yKHM9MDtzPHQmJmk8bjsrK3MsKytpKWNbaV09cltzXTtpJXQ9PTAmJlAocil9cmV0dXJuIG8mJihjW3NdPXJbc10sZT1lLnNsaWNlKDAsYSkpLGV9LEQucHJvdG90eXBlLmJ1ZmZlcj1ELnByb3RvdHlwZS5hcnJheUJ1ZmZlcixELnByb3RvdHlwZS5kaWdlc3Q9RC5wcm90b3R5cGUuYXJyYXk9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7Zm9yKHZhciBlLHQscj10aGlzLmJsb2NrQ291bnQsbj10aGlzLnMsbz10aGlzLm91dHB1dEJsb2NrcyxzPXRoaXMuZXh0cmFCeXRlcyxpPTAsYT0wLGM9W107YTxvOyl7Zm9yKGk9MDtpPHImJmE8bzsrK2ksKythKWU9YTw8Mix0PW5baV0sY1tlXT0yNTUmdCxjW2UrMV09dD4+OCYyNTUsY1tlKzJdPXQ+PjE2JjI1NSxjW2UrM109dD4+MjQmMjU1O2Elcj09MCYmUChuKX1yZXR1cm4gcyYmKGU9YTw8Mix0PW5baV0sY1tlXT0yNTUmdCxzPjEmJihjW2UrMV09dD4+OCYyNTUpLHM+MiYmKGNbZSsyXT10Pj4xNiYyNTUpKSxjfSxOLnByb3RvdHlwZT1uZXcgRCxOLnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVuY29kZSh0aGlzLm91dHB1dEJpdHMsITApLEQucHJvdG90eXBlLmZpbmFsaXplLmNhbGwodGhpcyl9O3ZhciBQPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixvLHMsaSxhLGMsdSxsLGgscCxmLGcseSxtLGIsQSx3LHYsUyx4LEUsVCxfLEIsVSxrLEksQyxSLE8sRCxOLFAsTCxGLHosaixNLEgsRyxLLHEsJCxWLFcsWCxZLEosUSxaLGVlLHRlLHJlLG5lLG9lLHNlLGllLGFlLGNlLHVlLGxlO2ZvcihuPTA7bjw0ODtuKz0yKW89ZVswXV5lWzEwXV5lWzIwXV5lWzMwXV5lWzQwXSxzPWVbMV1eZVsxMV1eZVsyMV1eZVszMV1eZVs0MV0saT1lWzJdXmVbMTJdXmVbMjJdXmVbMzJdXmVbNDJdLGE9ZVszXV5lWzEzXV5lWzIzXV5lWzMzXV5lWzQzXSxjPWVbNF1eZVsxNF1eZVsyNF1eZVszNF1eZVs0NF0sdT1lWzVdXmVbMTVdXmVbMjVdXmVbMzVdXmVbNDVdLGw9ZVs2XV5lWzE2XV5lWzI2XV5lWzM2XV5lWzQ2XSxoPWVbN11eZVsxN11eZVsyN11eZVszN11eZVs0N10sdD0ocD1lWzhdXmVbMThdXmVbMjhdXmVbMzhdXmVbNDhdKV4oaTw8MXxhPj4+MzEpLHI9KGY9ZVs5XV5lWzE5XV5lWzI5XV5lWzM5XV5lWzQ5XSleKGE8PDF8aT4+PjMxKSxlWzBdXj10LGVbMV1ePXIsZVsxMF1ePXQsZVsxMV1ePXIsZVsyMF1ePXQsZVsyMV1ePXIsZVszMF1ePXQsZVszMV1ePXIsZVs0MF1ePXQsZVs0MV1ePXIsdD1vXihjPDwxfHU+Pj4zMSkscj1zXih1PDwxfGM+Pj4zMSksZVsyXV49dCxlWzNdXj1yLGVbMTJdXj10LGVbMTNdXj1yLGVbMjJdXj10LGVbMjNdXj1yLGVbMzJdXj10LGVbMzNdXj1yLGVbNDJdXj10LGVbNDNdXj1yLHQ9aV4obDw8MXxoPj4+MzEpLHI9YV4oaDw8MXxsPj4+MzEpLGVbNF1ePXQsZVs1XV49cixlWzE0XV49dCxlWzE1XV49cixlWzI0XV49dCxlWzI1XV49cixlWzM0XV49dCxlWzM1XV49cixlWzQ0XV49dCxlWzQ1XV49cix0PWNeKHA8PDF8Zj4+PjMxKSxyPXVeKGY8PDF8cD4+PjMxKSxlWzZdXj10LGVbN11ePXIsZVsxNl1ePXQsZVsxN11ePXIsZVsyNl1ePXQsZVsyN11ePXIsZVszNl1ePXQsZVszN11ePXIsZVs0Nl1ePXQsZVs0N11ePXIsdD1sXihvPDwxfHM+Pj4zMSkscj1oXihzPDwxfG8+Pj4zMSksZVs4XV49dCxlWzldXj1yLGVbMThdXj10LGVbMTldXj1yLGVbMjhdXj10LGVbMjldXj1yLGVbMzhdXj10LGVbMzldXj1yLGVbNDhdXj10LGVbNDldXj1yLGc9ZVswXSx5PWVbMV0sVj1lWzExXTw8NHxlWzEwXT4+PjI4LFc9ZVsxMF08PDR8ZVsxMV0+Pj4yOCxrPWVbMjBdPDwzfGVbMjFdPj4+MjksST1lWzIxXTw8M3xlWzIwXT4+PjI5LGFlPWVbMzFdPDw5fGVbMzBdPj4+MjMsY2U9ZVszMF08PDl8ZVszMV0+Pj4yMyxHPWVbNDBdPDwxOHxlWzQxXT4+PjE0LEs9ZVs0MV08PDE4fGVbNDBdPj4+MTQsTj1lWzJdPDwxfGVbM10+Pj4zMSxQPWVbM108PDF8ZVsyXT4+PjMxLG09ZVsxM108PDEyfGVbMTJdPj4+MjAsYj1lWzEyXTw8MTJ8ZVsxM10+Pj4yMCxYPWVbMjJdPDwxMHxlWzIzXT4+PjIyLFk9ZVsyM108PDEwfGVbMjJdPj4+MjIsQz1lWzMzXTw8MTN8ZVszMl0+Pj4xOSxSPWVbMzJdPDwxM3xlWzMzXT4+PjE5LHVlPWVbNDJdPDwyfGVbNDNdPj4+MzAsbGU9ZVs0M108PDJ8ZVs0Ml0+Pj4zMCx0ZT1lWzVdPDwzMHxlWzRdPj4+MixyZT1lWzRdPDwzMHxlWzVdPj4+MixMPWVbMTRdPDw2fGVbMTVdPj4+MjYsRj1lWzE1XTw8NnxlWzE0XT4+PjI2LEE9ZVsyNV08PDExfGVbMjRdPj4+MjEsdz1lWzI0XTw8MTF8ZVsyNV0+Pj4yMSxKPWVbMzRdPDwxNXxlWzM1XT4+PjE3LFE9ZVszNV08PDE1fGVbMzRdPj4+MTcsTz1lWzQ1XTw8Mjl8ZVs0NF0+Pj4zLEQ9ZVs0NF08PDI5fGVbNDVdPj4+MyxUPWVbNl08PDI4fGVbN10+Pj40LF89ZVs3XTw8Mjh8ZVs2XT4+PjQsbmU9ZVsxN108PDIzfGVbMTZdPj4+OSxvZT1lWzE2XTw8MjN8ZVsxN10+Pj45LHo9ZVsyNl08PDI1fGVbMjddPj4+NyxqPWVbMjddPDwyNXxlWzI2XT4+Pjcsdj1lWzM2XTw8MjF8ZVszN10+Pj4xMSxTPWVbMzddPDwyMXxlWzM2XT4+PjExLFo9ZVs0N108PDI0fGVbNDZdPj4+OCxlZT1lWzQ2XTw8MjR8ZVs0N10+Pj44LHE9ZVs4XTw8Mjd8ZVs5XT4+PjUsJD1lWzldPDwyN3xlWzhdPj4+NSxCPWVbMThdPDwyMHxlWzE5XT4+PjEyLFU9ZVsxOV08PDIwfGVbMThdPj4+MTIsc2U9ZVsyOV08PDd8ZVsyOF0+Pj4yNSxpZT1lWzI4XTw8N3xlWzI5XT4+PjI1LE09ZVszOF08PDh8ZVszOV0+Pj4yNCxIPWVbMzldPDw4fGVbMzhdPj4+MjQseD1lWzQ4XTw8MTR8ZVs0OV0+Pj4xOCxFPWVbNDldPDwxNHxlWzQ4XT4+PjE4LGVbMF09Z15+bSZBLGVbMV09eV5+YiZ3LGVbMTBdPVRefkImayxlWzExXT1fXn5VJkksZVsyMF09Tl5+TCZ6LGVbMjFdPVBefkYmaixlWzMwXT1xXn5WJlgsZVszMV09JF5+VyZZLGVbNDBdPXRlXn5uZSZzZSxlWzQxXT1yZV5+b2UmaWUsZVsyXT1tXn5BJnYsZVszXT1iXn53JlMsZVsxMl09Ql5+ayZDLGVbMTNdPVVefkkmUixlWzIyXT1MXn56Jk0sZVsyM109Rl5+aiZILGVbMzJdPVZeflgmSixlWzMzXT1XXn5ZJlEsZVs0Ml09bmVefnNlJmFlLGVbNDNdPW9lXn5pZSZjZSxlWzRdPUFefnYmeCxlWzVdPXdeflMmRSxlWzE0XT1rXn5DJk8sZVsxNV09SV5+UiZELGVbMjRdPXpefk0mRyxlWzI1XT1qXn5IJkssZVszNF09WF5+SiZaLGVbMzVdPVleflEmZWUsZVs0NF09c2VefmFlJnVlLGVbNDVdPWllXn5jZSZsZSxlWzZdPXZefngmZyxlWzddPVNefkUmeSxlWzE2XT1DXn5PJlQsZVsxN109Ul5+RCZfLGVbMjZdPU1efkcmTixlWzI3XT1IXn5LJlAsZVszNl09Sl5+WiZxLGVbMzddPVFefmVlJiQsZVs0Nl09YWVefnVlJnRlLGVbNDddPWNlXn5sZSZyZSxlWzhdPXhefmcmbSxlWzldPUVefnkmYixlWzE4XT1PXn5UJkIsZVsxOV09RF5+XyZVLGVbMjhdPUdefk4mTCxlWzI5XT1LXn5QJkYsZVszOF09Wl5+cSZWLGVbMzldPWVlXn4kJlcsZVs0OF09dWVefnRlJm5lLGVbNDldPWxlXn5yZSZvZSxlWzBdXj1kW25dLGVbMV1ePWRbbisxXX07aWYoYyllLmV4cG9ydHM9XztlbHNle2ZvcihVPTA7VTxCLmxlbmd0aDsrK1UpaVtCW1VdXT1fW0JbVV1dO3UmJih2b2lkIDA9PT0obj1mdW5jdGlvbigpe3JldHVybiBffS5jYWxsKHQscix0LGUpKXx8KGUuZXhwb3J0cz1uKSl9fSgpfSw5NzU3OihlLHQscik9Pnt2YXIgbjshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1cImlucHV0IGlzIGludmFsaWQgdHlwZVwiLG89XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyxzPW8/d2luZG93Ont9O3MuSlNfU0hBNTEyX05PX1dJTkRPVyYmKG89ITEpO3ZhciBpPSFvJiZcIm9iamVjdFwiPT10eXBlb2Ygc2VsZjshcy5KU19TSEE1MTJfTk9fTk9ERV9KUyYmXCJvYmplY3RcIj09dHlwZW9mIHByb2Nlc3MmJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZT9zPXIuZzppJiYocz1zZWxmKTt2YXIgYT0hcy5KU19TSEE1MTJfTk9fQ09NTU9OX0pTJiZlLmV4cG9ydHMsYz1yLmFtZE8sdT0hcy5KU19TSEE1MTJfTk9fQVJSQVlfQlVGRkVSJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXIsbD1cIjAxMjM0NTY3ODlhYmNkZWZcIi5zcGxpdChcIlwiKSxoPVstMjE0NzQ4MzY0OCw4Mzg4NjA4LDMyNzY4LDEyOF0scD1bMjQsMTYsOCwwXSxmPVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV0sZD1bXCJoZXhcIixcImFycmF5XCIsXCJkaWdlc3RcIixcImFycmF5QnVmZmVyXCJdLGc9W107IXMuSlNfU0hBNTEyX05PX05PREVfSlMmJkFycmF5LmlzQXJyYXl8fChBcnJheS5pc0FycmF5PWZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLCF1fHwhcy5KU19TSEE1MTJfTk9fQVJSQVlfQlVGRkVSX0lTX1ZJRVcmJkFycmF5QnVmZmVyLmlzVmlld3x8KEFycmF5QnVmZmVyLmlzVmlldz1mdW5jdGlvbihlKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgZSYmZS5idWZmZXImJmUuYnVmZmVyLmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXJ9KTt2YXIgeT1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gbmV3IHcodCwhMCkudXBkYXRlKHIpW2VdKCl9fSxtPWZ1bmN0aW9uKGUpe3ZhciB0PXkoXCJoZXhcIixlKTt0LmNyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgdyhlKX0sdC51cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuY3JlYXRlKCkudXBkYXRlKGUpfTtmb3IodmFyIHI9MDtyPGQubGVuZ3RoOysrcil7dmFyIG49ZFtyXTt0W25dPXkobixlKX1yZXR1cm4gdH0sYj1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBuZXcgdihyLHQsITApLnVwZGF0ZShuKVtlXSgpfX0sQT1mdW5jdGlvbihlKXt2YXIgdD1iKFwiaGV4XCIsZSk7dC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB2KHQsZSl9LHQudXBkYXRlPWZ1bmN0aW9uKGUscil7cmV0dXJuIHQuY3JlYXRlKGUpLnVwZGF0ZShyKX07Zm9yKHZhciByPTA7cjxkLmxlbmd0aDsrK3Ipe3ZhciBuPWRbcl07dFtuXT1iKG4sZSl9cmV0dXJuIHR9O2Z1bmN0aW9uIHcoZSx0KXt0PyhnWzBdPWdbMV09Z1syXT1nWzNdPWdbNF09Z1s1XT1nWzZdPWdbN109Z1s4XT1nWzldPWdbMTBdPWdbMTFdPWdbMTJdPWdbMTNdPWdbMTRdPWdbMTVdPWdbMTZdPWdbMTddPWdbMThdPWdbMTldPWdbMjBdPWdbMjFdPWdbMjJdPWdbMjNdPWdbMjRdPWdbMjVdPWdbMjZdPWdbMjddPWdbMjhdPWdbMjldPWdbMzBdPWdbMzFdPWdbMzJdPTAsdGhpcy5ibG9ja3M9Zyk6dGhpcy5ibG9ja3M9WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDBdLDM4ND09ZT8odGhpcy5oMGg9MzQxODA3MDM2NSx0aGlzLmgwbD0zMjM4MzcxMDMyLHRoaXMuaDFoPTE2NTQyNzAyNTAsdGhpcy5oMWw9OTE0MTUwNjYzLHRoaXMuaDJoPTI0Mzg1MjkzNzAsdGhpcy5oMmw9ODEyNzAyOTk5LHRoaXMuaDNoPTM1NTQ2MjM2MCx0aGlzLmgzbD00MTQ0OTEyNjk3LHRoaXMuaDRoPTE3MzE0MDU0MTUsdGhpcy5oNGw9NDI5MDc3NTg1Nyx0aGlzLmg1aD0yMzk0MTgwMjMxLHRoaXMuaDVsPTE3NTA2MDMwMjUsdGhpcy5oNmg9MzY3NTAwODUyNSx0aGlzLmg2bD0xNjk0MDc2ODM5LHRoaXMuaDdoPTEyMDMwNjI4MTMsdGhpcy5oN2w9MzIwNDA3NTQyOCk6MjU2PT1lPyh0aGlzLmgwaD01NzM2NDUyMDQsdGhpcy5oMGw9NDIzMDczOTc1Nix0aGlzLmgxaD0yNjczMTcyMzg3LHRoaXMuaDFsPTMzNjA0NDk3MzAsdGhpcy5oMmg9NTk2ODgzNTYzLHRoaXMuaDJsPTE4Njc3NTU4NTcsdGhpcy5oM2g9MjUyMDI4MjkwNSx0aGlzLmgzbD0xNDk3NDI2NjIxLHRoaXMuaDRoPTI1MTkyMTk5MzgsdGhpcy5oNGw9MjgyNzk0MzkwNyx0aGlzLmg1aD0zMTkzODM5MTQxLHRoaXMuaDVsPTE0MDEzMDU0OTAsdGhpcy5oNmg9NzIxNTI1MjQ0LHRoaXMuaDZsPTc0Njk2MTA2Nix0aGlzLmg3aD0yNDY4ODU4NTIsdGhpcy5oN2w9MjE3NzE4Mjg4Mik6MjI0PT1lPyh0aGlzLmgwaD0yMzUyODIyMjE2LHRoaXMuaDBsPTQyNDk1NTI5OCx0aGlzLmgxaD0xOTQ0MTY0NzEwLHRoaXMuaDFsPTIzMTI5NTA5OTgsdGhpcy5oMmg9NTAyOTcwMjg2LHRoaXMuaDJsPTg1NTYxMjU0Nix0aGlzLmgzaD0xNzM4Mzk2OTQ4LHRoaXMuaDNsPTE0Nzk1MTYxMTEsdGhpcy5oNGg9MjU4ODEyNzc3LHRoaXMuaDRsPTIwNzc1MTEwODAsdGhpcy5oNWg9MjAxMTM5MzkwNyx0aGlzLmg1bD03OTk4OTA1OCx0aGlzLmg2aD0xMDY3Mjg3OTc2LHRoaXMuaDZsPTE3ODAyOTk0NjQsdGhpcy5oN2g9Mjg2NDUxMzczLHRoaXMuaDdsPTI0NDY3NTg1NjEpOih0aGlzLmgwaD0xNzc5MDMzNzAzLHRoaXMuaDBsPTQwODkyMzU3MjAsdGhpcy5oMWg9MzE0NDEzNDI3Nyx0aGlzLmgxbD0yMjI3ODczNTk1LHRoaXMuaDJoPTEwMTM5MDQyNDIsdGhpcy5oMmw9NDI3MTE3NTcyMyx0aGlzLmgzaD0yNzczNDgwNzYyLHRoaXMuaDNsPTE1OTU3NTAxMjksdGhpcy5oNGg9MTM1OTg5MzExOSx0aGlzLmg0bD0yOTE3NTY1MTM3LHRoaXMuaDVoPTI2MDA4MjI5MjQsdGhpcy5oNWw9NzI1NTExMTk5LHRoaXMuaDZoPTUyODczNDYzNSx0aGlzLmg2bD00MjE1Mzg5NTQ3LHRoaXMuaDdoPTE1NDE0NTkyMjUsdGhpcy5oN2w9MzI3MDMzMjA5KSx0aGlzLmJpdHM9ZSx0aGlzLmJsb2NrPXRoaXMuc3RhcnQ9dGhpcy5ieXRlcz10aGlzLmhCeXRlcz0wLHRoaXMuZmluYWxpemVkPXRoaXMuaGFzaGVkPSExfWZ1bmN0aW9uIHYoZSxyLG4pe3ZhciBvLHM9dHlwZW9mIGU7aWYoXCJzdHJpbmdcIiE9PXMpe2lmKFwib2JqZWN0XCIhPT1zKXRocm93IG5ldyBFcnJvcih0KTtpZihudWxsPT09ZSl0aHJvdyBuZXcgRXJyb3IodCk7aWYodSYmZS5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyKWU9bmV3IFVpbnQ4QXJyYXkoZSk7ZWxzZSBpZighKEFycmF5LmlzQXJyYXkoZSl8fHUmJkFycmF5QnVmZmVyLmlzVmlldyhlKSkpdGhyb3cgbmV3IEVycm9yKHQpO289ITB9dmFyIGk9ZS5sZW5ndGg7aWYoIW8pe2Zvcih2YXIgYSxjPVtdLGw9KGk9ZS5sZW5ndGgsMCksaD0wO2g8aTsrK2gpKGE9ZS5jaGFyQ29kZUF0KGgpKTwxMjg/Y1tsKytdPWE6YTwyMDQ4PyhjW2wrK109MTkyfGE+PjYsY1tsKytdPTEyOHw2MyZhKTphPDU1Mjk2fHxhPj01NzM0ND8oY1tsKytdPTIyNHxhPj4xMixjW2wrK109MTI4fGE+PjYmNjMsY1tsKytdPTEyOHw2MyZhKTooYT02NTUzNisoKDEwMjMmYSk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsraCkpLGNbbCsrXT0yNDB8YT4+MTgsY1tsKytdPTEyOHxhPj4xMiY2MyxjW2wrK109MTI4fGE+PjYmNjMsY1tsKytdPTEyOHw2MyZhKTtlPWN9ZS5sZW5ndGg+MTI4JiYoZT1uZXcgdyhyLCEwKS51cGRhdGUoZSkuYXJyYXkoKSk7dmFyIHA9W10sZj1bXTtmb3IoaD0wO2g8MTI4OysraCl7dmFyIGQ9ZVtoXXx8MDtwW2hdPTkyXmQsZltoXT01NF5kfXcuY2FsbCh0aGlzLHIsbiksdGhpcy51cGRhdGUoZiksdGhpcy5vS2V5UGFkPXAsdGhpcy5pbm5lcj0hMCx0aGlzLnNoYXJlZE1lbW9yeT1ufXcucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJmaW5hbGl6ZSBhbHJlYWR5IGNhbGxlZFwiKTt2YXIgcixuPXR5cGVvZiBlO2lmKFwic3RyaW5nXCIhPT1uKXtpZihcIm9iamVjdFwiIT09bil0aHJvdyBuZXcgRXJyb3IodCk7aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKHQpO2lmKHUmJmUuY29uc3RydWN0b3I9PT1BcnJheUJ1ZmZlcillPW5ldyBVaW50OEFycmF5KGUpO2Vsc2UgaWYoIShBcnJheS5pc0FycmF5KGUpfHx1JiZBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpKXRocm93IG5ldyBFcnJvcih0KTtyPSEwfWZvcih2YXIgbyxzLGk9MCxhPWUubGVuZ3RoLGM9dGhpcy5ibG9ja3M7aTxhOyl7aWYodGhpcy5oYXNoZWQmJih0aGlzLmhhc2hlZD0hMSxjWzBdPXRoaXMuYmxvY2ssY1sxXT1jWzJdPWNbM109Y1s0XT1jWzVdPWNbNl09Y1s3XT1jWzhdPWNbOV09Y1sxMF09Y1sxMV09Y1sxMl09Y1sxM109Y1sxNF09Y1sxNV09Y1sxNl09Y1sxN109Y1sxOF09Y1sxOV09Y1syMF09Y1syMV09Y1syMl09Y1syM109Y1syNF09Y1syNV09Y1syNl09Y1syN109Y1syOF09Y1syOV09Y1szMF09Y1szMV09Y1szMl09MCkscilmb3Iocz10aGlzLnN0YXJ0O2k8YSYmczwxMjg7KytpKWNbcz4+Ml18PWVbaV08PHBbMyZzKytdO2Vsc2UgZm9yKHM9dGhpcy5zdGFydDtpPGEmJnM8MTI4OysraSkobz1lLmNoYXJDb2RlQXQoaSkpPDEyOD9jW3M+PjJdfD1vPDxwWzMmcysrXTpvPDIwNDg/KGNbcz4+Ml18PSgxOTJ8bz4+Nik8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8NjMmbyk8PHBbMyZzKytdKTpvPDU1Mjk2fHxvPj01NzM0ND8oY1tzPj4yXXw9KDIyNHxvPj4xMik8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8bz4+NiY2Myk8PHBbMyZzKytdLGNbcz4+Ml18PSgxMjh8NjMmbyk8PHBbMyZzKytdKToobz02NTUzNisoKDEwMjMmbyk8PDEwfDEwMjMmZS5jaGFyQ29kZUF0KCsraSkpLGNbcz4+Ml18PSgyNDB8bz4+MTgpPDxwWzMmcysrXSxjW3M+PjJdfD0oMTI4fG8+PjEyJjYzKTw8cFszJnMrK10sY1tzPj4yXXw9KDEyOHxvPj42JjYzKTw8cFszJnMrK10sY1tzPj4yXXw9KDEyOHw2MyZvKTw8cFszJnMrK10pO3RoaXMubGFzdEJ5dGVJbmRleD1zLHRoaXMuYnl0ZXMrPXMtdGhpcy5zdGFydCxzPj0xMjg/KHRoaXMuYmxvY2s9Y1szMl0sdGhpcy5zdGFydD1zLTEyOCx0aGlzLmhhc2goKSx0aGlzLmhhc2hlZD0hMCk6dGhpcy5zdGFydD1zfXJldHVybiB0aGlzLmJ5dGVzPjQyOTQ5NjcyOTUmJih0aGlzLmhCeXRlcys9dGhpcy5ieXRlcy80Mjk0OTY3Mjk2PDwwLHRoaXMuYnl0ZXM9dGhpcy5ieXRlcyU0Mjk0OTY3Mjk2KSx0aGlzfSx3LnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKCF0aGlzLmZpbmFsaXplZCl7dGhpcy5maW5hbGl6ZWQ9ITA7dmFyIGU9dGhpcy5ibG9ja3MsdD10aGlzLmxhc3RCeXRlSW5kZXg7ZVszMl09dGhpcy5ibG9jayxlW3Q+PjJdfD1oWzMmdF0sdGhpcy5ibG9jaz1lWzMyXSx0Pj0xMTImJih0aGlzLmhhc2hlZHx8dGhpcy5oYXNoKCksZVswXT10aGlzLmJsb2NrLGVbMV09ZVsyXT1lWzNdPWVbNF09ZVs1XT1lWzZdPWVbN109ZVs4XT1lWzldPWVbMTBdPWVbMTFdPWVbMTJdPWVbMTNdPWVbMTRdPWVbMTVdPWVbMTZdPWVbMTddPWVbMThdPWVbMTldPWVbMjBdPWVbMjFdPWVbMjJdPWVbMjNdPWVbMjRdPWVbMjVdPWVbMjZdPWVbMjddPWVbMjhdPWVbMjldPWVbMzBdPWVbMzFdPWVbMzJdPTApLGVbMzBdPXRoaXMuaEJ5dGVzPDwzfHRoaXMuYnl0ZXM+Pj4yOSxlWzMxXT10aGlzLmJ5dGVzPDwzLHRoaXMuaGFzaCgpfX0sdy5wcm90b3R5cGUuaGFzaD1mdW5jdGlvbigpe3ZhciBlLHQscixuLG8scyxpLGEsYyx1LGwsaCxwLGQsZyx5LG0sYixBLHcsdixTLHgsRSxULF89dGhpcy5oMGgsQj10aGlzLmgwbCxVPXRoaXMuaDFoLGs9dGhpcy5oMWwsST10aGlzLmgyaCxDPXRoaXMuaDJsLFI9dGhpcy5oM2gsTz10aGlzLmgzbCxEPXRoaXMuaDRoLE49dGhpcy5oNGwsUD10aGlzLmg1aCxMPXRoaXMuaDVsLEY9dGhpcy5oNmgsej10aGlzLmg2bCxqPXRoaXMuaDdoLE09dGhpcy5oN2wsSD10aGlzLmJsb2Nrcztmb3IoZT0zMjtlPDE2MDtlKz0yKXQ9KCh3PUhbZS0zMF0pPj4+MXwodj1IW2UtMjldKTw8MzEpXih3Pj4+OHx2PDwyNCledz4+Pjcscj0odj4+PjF8dzw8MzEpXih2Pj4+OHx3PDwyNCleKHY+Pj43fHc8PDI1KSxuPSgodz1IW2UtNF0pPj4+MTl8KHY9SFtlLTNdKTw8MTMpXih2Pj4+Mjl8dzw8Myledz4+PjYsbz0odj4+PjE5fHc8PDEzKV4odz4+PjI5fHY8PDMpXih2Pj4+Nnx3PDwyNiksdz1IW2UtMzJdLHY9SFtlLTMxXSxjPSgoUz1IW2UtMTRdKT4+PjE2KSsodz4+PjE2KSsodD4+PjE2KSsobj4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmdCkrKDY1NTM1Jm4pKygoaT0oKHg9SFtlLTEzXSk+Pj4xNikrKHY+Pj4xNikrKHI+Pj4xNikrKG8+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikrKDY1NTM1JnIpKyg2NTUzNSZvKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSxIW2VdPWM8PDE2fDY1NTM1JmEsSFtlKzFdPWk8PDE2fDY1NTM1JnM7dmFyIEc9XyxLPUIscT1VLCQ9ayxWPUksVz1DLFg9UixZPU8sSj1ELFE9TixaPVAsZWU9TCx0ZT1GLHJlPXosbmU9aixvZT1NO2Zvcih5PXEmVixtPSQmVyxlPTA7ZTwxNjA7ZSs9OCl0PShHPj4+Mjh8Szw8NCleKEs+Pj4yfEc8PDMwKV4oSz4+Pjd8Rzw8MjUpLHI9KEs+Pj4yOHxHPDw0KV4oRz4+PjJ8Szw8MzApXihHPj4+N3xLPDwyNSksbj0oSj4+PjE0fFE8PDE4KV4oSj4+PjE4fFE8PDE0KV4oUT4+Pjl8Sjw8MjMpLG89KFE+Pj4xNHxKPDwxOCleKFE+Pj4xOHxKPDwxNCleKEo+Pj45fFE8PDIzKSxiPSh1PUcmcSleRyZWXnksQT0obD1LJiQpXksmV15tLEU9SiZaXn5KJnRlLFQ9USZlZV5+USZyZSx3PUhbZV0sdj1IW2UrMV0sdz0oYz0oKFM9ZltlXSk+Pj4xNikrKHc+Pj4xNikrKEU+Pj4xNikrKG4+Pj4xNikrKG5lPj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKyg2NTUzNSZFKSsoNjU1MzUmbikrKDY1NTM1Jm5lKSsoKGk9KCh4PWZbZSsxXSk+Pj4xNikrKHY+Pj4xNikrKFQ+Pj4xNikrKG8+Pj4xNikrKG9lPj4+MTYpKygocz0oNjU1MzUmeCkrKDY1NTM1JnYpKyg2NTUzNSZUKSsoNjU1MzUmbykrKDY1NTM1Jm9lKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEsdj1pPDwxNnw2NTUzNSZzLFM9KGM9KGI+Pj4xNikrKHQ+Pj4xNikrKChhPSg2NTUzNSZiKSsoNjU1MzUmdCkrKChpPShBPj4+MTYpKyhyPj4+MTYpKygocz0oNjU1MzUmQSkrKDY1NTM1JnIpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSx4PWk8PDE2fDY1NTM1JnMsbmU9KGM9KFg+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZYKSsoNjU1MzUmdykrKChpPShZPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmWSkrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxvZT1pPDwxNnw2NTUzNSZzLHQ9KChYPShjPShTPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKygoaT0oeD4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEpPj4+Mjh8KFk9aTw8MTZ8NjU1MzUmcyk8PDQpXihZPj4+MnxYPDwzMCleKFk+Pj43fFg8PDI1KSxyPShZPj4+Mjh8WDw8NCleKFg+Pj4yfFk8PDMwKV4oWD4+Pjd8WTw8MjUpLG49KG5lPj4+MTR8b2U8PDE4KV4obmU+Pj4xOHxvZTw8MTQpXihvZT4+Pjl8bmU8PDIzKSxvPShvZT4+PjE0fG5lPDwxOCleKG9lPj4+MTh8bmU8PDE0KV4obmU+Pj45fG9lPDwyMyksYj0oaD1YJkcpXlgmcV51LEE9KHA9WSZLKV5ZJiRebCxFPW5lJkpefm5lJlosVD1vZSZRXn5vZSZlZSx3PUhbZSsyXSx2PUhbZSszXSx3PShjPSgoUz1mW2UrMl0pPj4+MTYpKyh3Pj4+MTYpKyhFPj4+MTYpKyhuPj4+MTYpKyh0ZT4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmRSkrKDY1NTM1Jm4pKyg2NTUzNSZ0ZSkrKChpPSgoeD1mW2UrM10pPj4+MTYpKyh2Pj4+MTYpKyhUPj4+MTYpKyhvPj4+MTYpKyhyZT4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSsoNjU1MzUmVCkrKDY1NTM1Jm8pKyg2NTUzNSZyZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLHRlPShjPShWPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmVikrKDY1NTM1JncpKygoaT0oVz4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JlcpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEscmU9aTw8MTZ8NjU1MzUmcyx0PSgoVj0oYz0oUz4+PjE2KSsodz4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoKGk9KHg+Pj4xNikrKHY+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhKT4+PjI4fChXPWk8PDE2fDY1NTM1JnMpPDw0KV4oVz4+PjJ8Vjw8MzApXihXPj4+N3xWPDwyNSkscj0oVz4+PjI4fFY8PDQpXihWPj4+MnxXPDwzMCleKFY+Pj43fFc8PDI1KSxuPSh0ZT4+PjE0fHJlPDwxOCleKHRlPj4+MTh8cmU8PDE0KV4ocmU+Pj45fHRlPDwyMyksbz0ocmU+Pj4xNHx0ZTw8MTgpXihyZT4+PjE4fHRlPDwxNCleKHRlPj4+OXxyZTw8MjMpLGI9KGQ9ViZYKV5WJkdeaCxBPShnPVcmWSleVyZLXnAsRT10ZSZuZV5+dGUmSixUPXJlJm9lXn5yZSZRLHc9SFtlKzRdLHY9SFtlKzVdLHc9KGM9KChTPWZbZSs0XSk+Pj4xNikrKHc+Pj4xNikrKEU+Pj4xNikrKG4+Pj4xNikrKFo+Pj4xNikrKChhPSg2NTUzNSZTKSsoNjU1MzUmdykrKDY1NTM1JkUpKyg2NTUzNSZuKSsoNjU1MzUmWikrKChpPSgoeD1mW2UrNV0pPj4+MTYpKyh2Pj4+MTYpKyhUPj4+MTYpKyhvPj4+MTYpKyhlZT4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSsoNjU1MzUmVCkrKDY1NTM1Jm8pKyg2NTUzNSZlZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLFo9KGM9KHE+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZxKSsoNjU1MzUmdykrKChpPSgkPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmJCkrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxlZT1pPDwxNnw2NTUzNSZzLHQ9KChxPShjPShTPj4+MTYpKyh3Pj4+MTYpKygoYT0oNjU1MzUmUykrKDY1NTM1JncpKygoaT0oeD4+PjE2KSsodj4+PjE2KSsoKHM9KDY1NTM1JngpKyg2NTUzNSZ2KSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEpPj4+Mjh8KCQ9aTw8MTZ8NjU1MzUmcyk8PDQpXigkPj4+MnxxPDwzMCleKCQ+Pj43fHE8PDI1KSxyPSgkPj4+Mjh8cTw8NCleKHE+Pj4yfCQ8PDMwKV4ocT4+Pjd8JDw8MjUpLG49KFo+Pj4xNHxlZTw8MTgpXihaPj4+MTh8ZWU8PDE0KV4oZWU+Pj45fFo8PDIzKSxvPShlZT4+PjE0fFo8PDE4KV4oZWU+Pj4xOHxaPDwxNCleKFo+Pj45fGVlPDwyMyksYj0oeT1xJlYpXnEmWF5kLEE9KG09JCZXKV4kJlleZyxFPVomdGVeflombmUsVD1lZSZyZV5+ZWUmb2Usdz1IW2UrNl0sdj1IW2UrN10sdz0oYz0oKFM9ZltlKzZdKT4+PjE2KSsodz4+PjE2KSsoRT4+PjE2KSsobj4+PjE2KSsoSj4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoNjU1MzUmRSkrKDY1NTM1Jm4pKyg2NTUzNSZKKSsoKGk9KCh4PWZbZSs3XSk+Pj4xNikrKHY+Pj4xNikrKFQ+Pj4xNikrKG8+Pj4xNikrKFE+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikrKDY1NTM1JlQpKyg2NTUzNSZvKSsoNjU1MzUmUSkpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLHY9aTw8MTZ8NjU1MzUmcyxTPShjPShiPj4+MTYpKyh0Pj4+MTYpKygoYT0oNjU1MzUmYikrKDY1NTM1JnQpKygoaT0oQT4+PjE2KSsocj4+PjE2KSsoKHM9KDY1NTM1JkEpKyg2NTUzNSZyKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSk8PDE2fDY1NTM1JmEseD1pPDwxNnw2NTUzNSZzLEo9KGM9KEc+Pj4xNikrKHc+Pj4xNikrKChhPSg2NTUzNSZHKSsoNjU1MzUmdykrKChpPShLPj4+MTYpKyh2Pj4+MTYpKygocz0oNjU1MzUmSykrKDY1NTM1JnYpKT4+PjE2KSk+Pj4xNikpPj4+MTYpKTw8MTZ8NjU1MzUmYSxRPWk8PDE2fDY1NTM1JnMsRz0oYz0oUz4+PjE2KSsodz4+PjE2KSsoKGE9KDY1NTM1JlMpKyg2NTUzNSZ3KSsoKGk9KHg+Pj4xNikrKHY+Pj4xNikrKChzPSg2NTUzNSZ4KSsoNjU1MzUmdikpPj4+MTYpKT4+PjE2KSk+Pj4xNikpPDwxNnw2NTUzNSZhLEs9aTw8MTZ8NjU1MzUmcztjPShfPj4+MTYpKyhHPj4+MTYpKygoYT0oNjU1MzUmXykrKDY1NTM1JkcpKygoaT0oQj4+PjE2KSsoSz4+PjE2KSsoKHM9KDY1NTM1JkIpKyg2NTUzNSZLKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmgwaD1jPDwxNnw2NTUzNSZhLHRoaXMuaDBsPWk8PDE2fDY1NTM1JnMsYz0oVT4+PjE2KSsocT4+PjE2KSsoKGE9KDY1NTM1JlUpKyg2NTUzNSZxKSsoKGk9KGs+Pj4xNikrKCQ+Pj4xNikrKChzPSg2NTUzNSZrKSsoNjU1MzUmJCkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oMWg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmgxbD1pPDwxNnw2NTUzNSZzLGM9KEk+Pj4xNikrKFY+Pj4xNikrKChhPSg2NTUzNSZJKSsoNjU1MzUmVikrKChpPShDPj4+MTYpKyhXPj4+MTYpKygocz0oNjU1MzUmQykrKDY1NTM1JlcpKT4+PjE2KSk+Pj4xNikpPj4+MTYpLHRoaXMuaDJoPWM8PDE2fDY1NTM1JmEsdGhpcy5oMmw9aTw8MTZ8NjU1MzUmcyxjPShSPj4+MTYpKyhYPj4+MTYpKygoYT0oNjU1MzUmUikrKDY1NTM1JlgpKygoaT0oTz4+PjE2KSsoWT4+PjE2KSsoKHM9KDY1NTM1Jk8pKyg2NTUzNSZZKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmgzaD1jPDwxNnw2NTUzNSZhLHRoaXMuaDNsPWk8PDE2fDY1NTM1JnMsYz0oRD4+PjE2KSsoSj4+PjE2KSsoKGE9KDY1NTM1JkQpKyg2NTUzNSZKKSsoKGk9KE4+Pj4xNikrKFE+Pj4xNikrKChzPSg2NTUzNSZOKSsoNjU1MzUmUSkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oNGg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmg0bD1pPDwxNnw2NTUzNSZzLGM9KFA+Pj4xNikrKFo+Pj4xNikrKChhPSg2NTUzNSZQKSsoNjU1MzUmWikrKChpPShMPj4+MTYpKyhlZT4+PjE2KSsoKHM9KDY1NTM1JkwpKyg2NTUzNSZlZSkpPj4+MTYpKT4+PjE2KSk+Pj4xNiksdGhpcy5oNWg9Yzw8MTZ8NjU1MzUmYSx0aGlzLmg1bD1pPDwxNnw2NTUzNSZzLGM9KEY+Pj4xNikrKHRlPj4+MTYpKygoYT0oNjU1MzUmRikrKDY1NTM1JnRlKSsoKGk9KHo+Pj4xNikrKHJlPj4+MTYpKygocz0oNjU1MzUmeikrKDY1NTM1JnJlKSk+Pj4xNikpPj4+MTYpKT4+PjE2KSx0aGlzLmg2aD1jPDwxNnw2NTUzNSZhLHRoaXMuaDZsPWk8PDE2fDY1NTM1JnMsYz0oaj4+PjE2KSsobmU+Pj4xNikrKChhPSg2NTUzNSZqKSsoNjU1MzUmbmUpKygoaT0oTT4+PjE2KSsob2U+Pj4xNikrKChzPSg2NTUzNSZNKSsoNjU1MzUmb2UpKT4+PjE2KSk+Pj4xNikpPj4+MTYpLHRoaXMuaDdoPWM8PDE2fDY1NTM1JmEsdGhpcy5oN2w9aTw8MTZ8NjU1MzUmc30sdy5wcm90b3R5cGUuaGV4PWZ1bmN0aW9uKCl7dGhpcy5maW5hbGl6ZSgpO3ZhciBlPXRoaXMuaDBoLHQ9dGhpcy5oMGwscj10aGlzLmgxaCxuPXRoaXMuaDFsLG89dGhpcy5oMmgscz10aGlzLmgybCxpPXRoaXMuaDNoLGE9dGhpcy5oM2wsYz10aGlzLmg0aCx1PXRoaXMuaDRsLGg9dGhpcy5oNWgscD10aGlzLmg1bCxmPXRoaXMuaDZoLGQ9dGhpcy5oNmwsZz10aGlzLmg3aCx5PXRoaXMuaDdsLG09dGhpcy5iaXRzLGI9bFtlPj4yOCYxNV0rbFtlPj4yNCYxNV0rbFtlPj4yMCYxNV0rbFtlPj4xNiYxNV0rbFtlPj4xMiYxNV0rbFtlPj44JjE1XStsW2U+PjQmMTVdK2xbMTUmZV0rbFt0Pj4yOCYxNV0rbFt0Pj4yNCYxNV0rbFt0Pj4yMCYxNV0rbFt0Pj4xNiYxNV0rbFt0Pj4xMiYxNV0rbFt0Pj44JjE1XStsW3Q+PjQmMTVdK2xbMTUmdF0rbFtyPj4yOCYxNV0rbFtyPj4yNCYxNV0rbFtyPj4yMCYxNV0rbFtyPj4xNiYxNV0rbFtyPj4xMiYxNV0rbFtyPj44JjE1XStsW3I+PjQmMTVdK2xbMTUmcl0rbFtuPj4yOCYxNV0rbFtuPj4yNCYxNV0rbFtuPj4yMCYxNV0rbFtuPj4xNiYxNV0rbFtuPj4xMiYxNV0rbFtuPj44JjE1XStsW24+PjQmMTVdK2xbMTUmbl0rbFtvPj4yOCYxNV0rbFtvPj4yNCYxNV0rbFtvPj4yMCYxNV0rbFtvPj4xNiYxNV0rbFtvPj4xMiYxNV0rbFtvPj44JjE1XStsW28+PjQmMTVdK2xbMTUmb10rbFtzPj4yOCYxNV0rbFtzPj4yNCYxNV0rbFtzPj4yMCYxNV0rbFtzPj4xNiYxNV0rbFtzPj4xMiYxNV0rbFtzPj44JjE1XStsW3M+PjQmMTVdK2xbMTUmc10rbFtpPj4yOCYxNV0rbFtpPj4yNCYxNV0rbFtpPj4yMCYxNV0rbFtpPj4xNiYxNV0rbFtpPj4xMiYxNV0rbFtpPj44JjE1XStsW2k+PjQmMTVdK2xbMTUmaV07cmV0dXJuIG0+PTI1NiYmKGIrPWxbYT4+MjgmMTVdK2xbYT4+MjQmMTVdK2xbYT4+MjAmMTVdK2xbYT4+MTYmMTVdK2xbYT4+MTImMTVdK2xbYT4+OCYxNV0rbFthPj40JjE1XStsWzE1JmFdKSxtPj0zODQmJihiKz1sW2M+PjI4JjE1XStsW2M+PjI0JjE1XStsW2M+PjIwJjE1XStsW2M+PjE2JjE1XStsW2M+PjEyJjE1XStsW2M+PjgmMTVdK2xbYz4+NCYxNV0rbFsxNSZjXStsW3U+PjI4JjE1XStsW3U+PjI0JjE1XStsW3U+PjIwJjE1XStsW3U+PjE2JjE1XStsW3U+PjEyJjE1XStsW3U+PjgmMTVdK2xbdT4+NCYxNV0rbFsxNSZ1XStsW2g+PjI4JjE1XStsW2g+PjI0JjE1XStsW2g+PjIwJjE1XStsW2g+PjE2JjE1XStsW2g+PjEyJjE1XStsW2g+PjgmMTVdK2xbaD4+NCYxNV0rbFsxNSZoXStsW3A+PjI4JjE1XStsW3A+PjI0JjE1XStsW3A+PjIwJjE1XStsW3A+PjE2JjE1XStsW3A+PjEyJjE1XStsW3A+PjgmMTVdK2xbcD4+NCYxNV0rbFsxNSZwXSksNTEyPT1tJiYoYis9bFtmPj4yOCYxNV0rbFtmPj4yNCYxNV0rbFtmPj4yMCYxNV0rbFtmPj4xNiYxNV0rbFtmPj4xMiYxNV0rbFtmPj44JjE1XStsW2Y+PjQmMTVdK2xbMTUmZl0rbFtkPj4yOCYxNV0rbFtkPj4yNCYxNV0rbFtkPj4yMCYxNV0rbFtkPj4xNiYxNV0rbFtkPj4xMiYxNV0rbFtkPj44JjE1XStsW2Q+PjQmMTVdK2xbMTUmZF0rbFtnPj4yOCYxNV0rbFtnPj4yNCYxNV0rbFtnPj4yMCYxNV0rbFtnPj4xNiYxNV0rbFtnPj4xMiYxNV0rbFtnPj44JjE1XStsW2c+PjQmMTVdK2xbMTUmZ10rbFt5Pj4yOCYxNV0rbFt5Pj4yNCYxNV0rbFt5Pj4yMCYxNV0rbFt5Pj4xNiYxNV0rbFt5Pj4xMiYxNV0rbFt5Pj44JjE1XStsW3k+PjQmMTVdK2xbMTUmeV0pLGJ9LHcucHJvdG90eXBlLnRvU3RyaW5nPXcucHJvdG90eXBlLmhleCx3LnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7dmFyIGU9dGhpcy5oMGgsdD10aGlzLmgwbCxyPXRoaXMuaDFoLG49dGhpcy5oMWwsbz10aGlzLmgyaCxzPXRoaXMuaDJsLGk9dGhpcy5oM2gsYT10aGlzLmgzbCxjPXRoaXMuaDRoLHU9dGhpcy5oNGwsbD10aGlzLmg1aCxoPXRoaXMuaDVsLHA9dGhpcy5oNmgsZj10aGlzLmg2bCxkPXRoaXMuaDdoLGc9dGhpcy5oN2wseT10aGlzLmJpdHMsbT1bZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZSx0Pj4yNCYyNTUsdD4+MTYmMjU1LHQ+PjgmMjU1LDI1NSZ0LHI+PjI0JjI1NSxyPj4xNiYyNTUscj4+OCYyNTUsMjU1JnIsbj4+MjQmMjU1LG4+PjE2JjI1NSxuPj44JjI1NSwyNTUmbixvPj4yNCYyNTUsbz4+MTYmMjU1LG8+PjgmMjU1LDI1NSZvLHM+PjI0JjI1NSxzPj4xNiYyNTUscz4+OCYyNTUsMjU1JnMsaT4+MjQmMjU1LGk+PjE2JjI1NSxpPj44JjI1NSwyNTUmaV07cmV0dXJuIHk+PTI1NiYmbS5wdXNoKGE+PjI0JjI1NSxhPj4xNiYyNTUsYT4+OCYyNTUsMjU1JmEpLHk+PTM4NCYmbS5wdXNoKGM+PjI0JjI1NSxjPj4xNiYyNTUsYz4+OCYyNTUsMjU1JmMsdT4+MjQmMjU1LHU+PjE2JjI1NSx1Pj44JjI1NSwyNTUmdSxsPj4yNCYyNTUsbD4+MTYmMjU1LGw+PjgmMjU1LDI1NSZsLGg+PjI0JjI1NSxoPj4xNiYyNTUsaD4+OCYyNTUsMjU1JmgpLDUxMj09eSYmbS5wdXNoKHA+PjI0JjI1NSxwPj4xNiYyNTUscD4+OCYyNTUsMjU1JnAsZj4+MjQmMjU1LGY+PjE2JjI1NSxmPj44JjI1NSwyNTUmZixkPj4yNCYyNTUsZD4+MTYmMjU1LGQ+PjgmMjU1LDI1NSZkLGc+PjI0JjI1NSxnPj4xNiYyNTUsZz4+OCYyNTUsMjU1JmcpLG19LHcucHJvdG90eXBlLmFycmF5PXcucHJvdG90eXBlLmRpZ2VzdCx3LnByb3RvdHlwZS5hcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTt2YXIgZT10aGlzLmJpdHMsdD1uZXcgQXJyYXlCdWZmZXIoZS84KSxyPW5ldyBEYXRhVmlldyh0KTtyZXR1cm4gci5zZXRVaW50MzIoMCx0aGlzLmgwaCksci5zZXRVaW50MzIoNCx0aGlzLmgwbCksci5zZXRVaW50MzIoOCx0aGlzLmgxaCksci5zZXRVaW50MzIoMTIsdGhpcy5oMWwpLHIuc2V0VWludDMyKDE2LHRoaXMuaDJoKSxyLnNldFVpbnQzMigyMCx0aGlzLmgybCksci5zZXRVaW50MzIoMjQsdGhpcy5oM2gpLGU+PTI1NiYmci5zZXRVaW50MzIoMjgsdGhpcy5oM2wpLGU+PTM4NCYmKHIuc2V0VWludDMyKDMyLHRoaXMuaDRoKSxyLnNldFVpbnQzMigzNix0aGlzLmg0bCksci5zZXRVaW50MzIoNDAsdGhpcy5oNWgpLHIuc2V0VWludDMyKDQ0LHRoaXMuaDVsKSksNTEyPT1lJiYoci5zZXRVaW50MzIoNDgsdGhpcy5oNmgpLHIuc2V0VWludDMyKDUyLHRoaXMuaDZsKSxyLnNldFVpbnQzMig1Nix0aGlzLmg3aCksci5zZXRVaW50MzIoNjAsdGhpcy5oN2wpKSx0fSx3LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBlPW5ldyB3KHRoaXMuYml0cywhMSk7cmV0dXJuIHRoaXMuY29weVRvKGUpLGV9LHcucHJvdG90eXBlLmNvcHlUbz1mdW5jdGlvbihlKXt2YXIgdD0wLHI9W1wiaDBoXCIsXCJoMGxcIixcImgxaFwiLFwiaDFsXCIsXCJoMmhcIixcImgybFwiLFwiaDNoXCIsXCJoM2xcIixcImg0aFwiLFwiaDRsXCIsXCJoNWhcIixcImg1bFwiLFwiaDZoXCIsXCJoNmxcIixcImg3aFwiLFwiaDdsXCIsXCJzdGFydFwiLFwiYnl0ZXNcIixcImhCeXRlc1wiLFwiZmluYWxpemVkXCIsXCJoYXNoZWRcIixcImxhc3RCeXRlSW5kZXhcIl07Zm9yKHQ9MDt0PHIubGVuZ3RoOysrdCllW3JbdF1dPXRoaXNbclt0XV07Zm9yKHQ9MDt0PHRoaXMuYmxvY2tzLmxlbmd0aDsrK3QpZS5ibG9ja3NbdF09dGhpcy5ibG9ja3NbdF19LHYucHJvdG90eXBlPW5ldyB3LHYucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7aWYody5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKSx0aGlzLmlubmVyKXt0aGlzLmlubmVyPSExO3ZhciBlPXRoaXMuYXJyYXkoKTt3LmNhbGwodGhpcyx0aGlzLmJpdHMsdGhpcy5zaGFyZWRNZW1vcnkpLHRoaXMudXBkYXRlKHRoaXMub0tleVBhZCksdGhpcy51cGRhdGUoZSksdy5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKX19LHYucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHYoW10sdGhpcy5iaXRzLCExKTt0aGlzLmNvcHlUbyhlKSxlLmlubmVyPXRoaXMuaW5uZXI7Zm9yKHZhciB0PTA7dDx0aGlzLm9LZXlQYWQubGVuZ3RoOysrdCllLm9LZXlQYWRbdF09dGhpcy5vS2V5UGFkW3RdO3JldHVybiBlfTt2YXIgUz1tKDUxMik7Uy5zaGE1MTI9UyxTLnNoYTM4ND1tKDM4NCksUy5zaGE1MTJfMjU2PW0oMjU2KSxTLnNoYTUxMl8yMjQ9bSgyMjQpLFMuc2hhNTEyLmhtYWM9QSg1MTIpLFMuc2hhMzg0LmhtYWM9QSgzODQpLFMuc2hhNTEyXzI1Ni5obWFjPUEoMjU2KSxTLnNoYTUxMl8yMjQuaG1hYz1BKDIyNCksYT9lLmV4cG9ydHM9Uzoocy5zaGE1MTI9Uy5zaGE1MTIscy5zaGEzODQ9Uy5zaGEzODQscy5zaGE1MTJfMjU2PVMuc2hhNTEyXzI1NixzLnNoYTUxMl8yMjQ9Uy5zaGE1MTJfMjI0LGMmJih2b2lkIDA9PT0obj1mdW5jdGlvbigpe3JldHVybiBTfS5jYWxsKFMscixTLGUpKXx8KGUuZXhwb3J0cz1uKSkpfSgpfSw0MzYwOihlLHQscik9Pnt2YXIgbj1yKDU5Mikuc3RyaW5naWZ5LG89cig5Mzg1KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJue3BhcnNlOm8oZSksc3RyaW5naWZ5Om59fSxlLmV4cG9ydHMucGFyc2U9bygpLGUuZXhwb3J0cy5zdHJpbmdpZnk9bn0sOTM4NTooZSx0LHIpPT57dmFyIG49bnVsbDtjb25zdCBvPS8oPzpffFxcXFx1MDA1W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkoPzpwfFxcXFx1MDA3MCkoPzpyfFxcXFx1MDA3MikoPzpvfFxcXFx1MDA2W0ZmXSkoPzp0fFxcXFx1MDA3NCkoPzpvfFxcXFx1MDA2W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkoPzpffFxcXFx1MDA1W0ZmXSkvLHM9Lyg/OmN8XFxcXHUwMDYzKSg/Om98XFxcXHUwMDZbRmZdKSg/Om58XFxcXHUwMDZbRWVdKSg/OnN8XFxcXHUwMDczKSg/OnR8XFxcXHUwMDc0KSg/OnJ8XFxcXHUwMDcyKSg/OnV8XFxcXHUwMDc1KSg/OmN8XFxcXHUwMDYzKSg/OnR8XFxcXHUwMDc0KSg/Om98XFxcXHUwMDZbRmZdKSg/OnJ8XFxcXHUwMDcyKS87ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO3ZhciB0PXtzdHJpY3Q6ITEsc3RvcmVBc1N0cmluZzohMSxhbHdheXNQYXJzZUFzQmlnOiExLHVzZU5hdGl2ZUJpZ0ludDohMSxwcm90b0FjdGlvbjpcImVycm9yXCIsY29uc3RydWN0b3JBY3Rpb246XCJlcnJvclwifTtpZihudWxsIT1lKXtpZighMD09PWUuc3RyaWN0JiYodC5zdHJpY3Q9ITApLCEwPT09ZS5zdG9yZUFzU3RyaW5nJiYodC5zdG9yZUFzU3RyaW5nPSEwKSx0LmFsd2F5c1BhcnNlQXNCaWc9ITA9PT1lLmFsd2F5c1BhcnNlQXNCaWcmJmUuYWx3YXlzUGFyc2VBc0JpZyx0LnVzZU5hdGl2ZUJpZ0ludD0hMD09PWUudXNlTmF0aXZlQmlnSW50JiZlLnVzZU5hdGl2ZUJpZ0ludCx2b2lkIDAhPT1lLmNvbnN0cnVjdG9yQWN0aW9uKXtpZihcImVycm9yXCIhPT1lLmNvbnN0cnVjdG9yQWN0aW9uJiZcImlnbm9yZVwiIT09ZS5jb25zdHJ1Y3RvckFjdGlvbiYmXCJwcmVzZXJ2ZVwiIT09ZS5jb25zdHJ1Y3RvckFjdGlvbil0aHJvdyBuZXcgRXJyb3IoYEluY29ycmVjdCB2YWx1ZSBmb3IgY29uc3RydWN0b3JBY3Rpb24gb3B0aW9uLCBtdXN0IGJlIFwiZXJyb3JcIiwgXCJpZ25vcmVcIiBvciB1bmRlZmluZWQgYnV0IHBhc3NlZCAke2UuY29uc3RydWN0b3JBY3Rpb259YCk7dC5jb25zdHJ1Y3RvckFjdGlvbj1lLmNvbnN0cnVjdG9yQWN0aW9ufWlmKHZvaWQgMCE9PWUucHJvdG9BY3Rpb24pe2lmKFwiZXJyb3JcIiE9PWUucHJvdG9BY3Rpb24mJlwiaWdub3JlXCIhPT1lLnByb3RvQWN0aW9uJiZcInByZXNlcnZlXCIhPT1lLnByb3RvQWN0aW9uKXRocm93IG5ldyBFcnJvcihgSW5jb3JyZWN0IHZhbHVlIGZvciBwcm90b0FjdGlvbiBvcHRpb24sIG11c3QgYmUgXCJlcnJvclwiLCBcImlnbm9yZVwiIG9yIHVuZGVmaW5lZCBidXQgcGFzc2VkICR7ZS5wcm90b0FjdGlvbn1gKTt0LnByb3RvQWN0aW9uPWUucHJvdG9BY3Rpb259fXZhciBpLGEsYyx1LGw9eydcIic6J1wiJyxcIlxcXFxcIjpcIlxcXFxcIixcIi9cIjpcIi9cIixiOlwiXFxiXCIsZjpcIlxcZlwiLG46XCJcXG5cIixyOlwiXFxyXCIsdDpcIlxcdFwifSxoPWZ1bmN0aW9uKGUpe3Rocm93e25hbWU6XCJTeW50YXhFcnJvclwiLG1lc3NhZ2U6ZSxhdDppLHRleHQ6Y319LHA9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUhPT1hJiZoKFwiRXhwZWN0ZWQgJ1wiK2UrXCInIGluc3RlYWQgb2YgJ1wiK2ErXCInXCIpLGE9Yy5jaGFyQXQoaSksaSs9MSxhfSxmPWZ1bmN0aW9uKCl7dmFyIGUsbz1cIlwiO2ZvcihcIi1cIj09PWEmJihvPVwiLVwiLHAoXCItXCIpKTthPj1cIjBcIiYmYTw9XCI5XCI7KW8rPWEscCgpO2lmKFwiLlwiPT09YSlmb3Iobys9XCIuXCI7cCgpJiZhPj1cIjBcIiYmYTw9XCI5XCI7KW8rPWE7aWYoXCJlXCI9PT1hfHxcIkVcIj09PWEpZm9yKG8rPWEscCgpLFwiLVwiIT09YSYmXCIrXCIhPT1hfHwobys9YSxwKCkpO2E+PVwiMFwiJiZhPD1cIjlcIjspbys9YSxwKCk7aWYoZT0rbyxpc0Zpbml0ZShlKSlyZXR1cm4gbnVsbD09biYmKG49cig1MTE3KSksby5sZW5ndGg+MTU/dC5zdG9yZUFzU3RyaW5nP286dC51c2VOYXRpdmVCaWdJbnQ/QmlnSW50KG8pOm5ldyBuKG8pOnQuYWx3YXlzUGFyc2VBc0JpZz90LnVzZU5hdGl2ZUJpZ0ludD9CaWdJbnQoZSk6bmV3IG4oZSk6ZTtoKFwiQmFkIG51bWJlclwiKX0sZD1mdW5jdGlvbigpe3ZhciBlLHQscixuPVwiXCI7aWYoJ1wiJz09PWEpZm9yKHZhciBvPWk7cCgpOyl7aWYoJ1wiJz09PWEpcmV0dXJuIGktMT5vJiYobis9Yy5zdWJzdHJpbmcobyxpLTEpKSxwKCksbjtpZihcIlxcXFxcIj09PWEpe2lmKGktMT5vJiYobis9Yy5zdWJzdHJpbmcobyxpLTEpKSxwKCksXCJ1XCI9PT1hKXtmb3Iocj0wLHQ9MDt0PDQmJihlPXBhcnNlSW50KHAoKSwxNiksaXNGaW5pdGUoZSkpO3QrPTEpcj0xNipyK2U7bis9U3RyaW5nLmZyb21DaGFyQ29kZShyKX1lbHNle2lmKFwic3RyaW5nXCIhPXR5cGVvZiBsW2FdKWJyZWFrO24rPWxbYV19bz1pfX1oKFwiQmFkIHN0cmluZ1wiKX0sZz1mdW5jdGlvbigpe2Zvcig7YSYmYTw9XCIgXCI7KXAoKX07cmV0dXJuIHU9ZnVuY3Rpb24oKXtzd2l0Y2goZygpLGEpe2Nhc2VcIntcIjpyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZSxyPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoXCJ7XCI9PT1hKXtpZihwKFwie1wiKSxnKCksXCJ9XCI9PT1hKXJldHVybiBwKFwifVwiKSxyO2Zvcig7YTspe2lmKGU9ZCgpLGcoKSxwKFwiOlwiKSwhMD09PXQuc3RyaWN0JiZPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChyLGUpJiZoKCdEdXBsaWNhdGUga2V5IFwiJytlKydcIicpLCEwPT09by50ZXN0KGUpP1wiZXJyb3JcIj09PXQucHJvdG9BY3Rpb24/aChcIk9iamVjdCBjb250YWlucyBmb3JiaWRkZW4gcHJvdG90eXBlIHByb3BlcnR5XCIpOlwiaWdub3JlXCI9PT10LnByb3RvQWN0aW9uP3UoKTpyW2VdPXUoKTohMD09PXMudGVzdChlKT9cImVycm9yXCI9PT10LmNvbnN0cnVjdG9yQWN0aW9uP2goXCJPYmplY3QgY29udGFpbnMgZm9yYmlkZGVuIGNvbnN0cnVjdG9yIHByb3BlcnR5XCIpOlwiaWdub3JlXCI9PT10LmNvbnN0cnVjdG9yQWN0aW9uP3UoKTpyW2VdPXUoKTpyW2VdPXUoKSxnKCksXCJ9XCI9PT1hKXJldHVybiBwKFwifVwiKSxyO3AoXCIsXCIpLGcoKX19aChcIkJhZCBvYmplY3RcIil9KCk7Y2FzZVwiW1wiOnJldHVybiBmdW5jdGlvbigpe3ZhciBlPVtdO2lmKFwiW1wiPT09YSl7aWYocChcIltcIiksZygpLFwiXVwiPT09YSlyZXR1cm4gcChcIl1cIiksZTtmb3IoO2E7KXtpZihlLnB1c2godSgpKSxnKCksXCJdXCI9PT1hKXJldHVybiBwKFwiXVwiKSxlO3AoXCIsXCIpLGcoKX19aChcIkJhZCBhcnJheVwiKX0oKTtjYXNlJ1wiJzpyZXR1cm4gZCgpO2Nhc2VcIi1cIjpyZXR1cm4gZigpO2RlZmF1bHQ6cmV0dXJuIGE+PVwiMFwiJiZhPD1cIjlcIj9mKCk6ZnVuY3Rpb24oKXtzd2l0Y2goYSl7Y2FzZVwidFwiOnJldHVybiBwKFwidFwiKSxwKFwiclwiKSxwKFwidVwiKSxwKFwiZVwiKSwhMDtjYXNlXCJmXCI6cmV0dXJuIHAoXCJmXCIpLHAoXCJhXCIpLHAoXCJsXCIpLHAoXCJzXCIpLHAoXCJlXCIpLCExO2Nhc2VcIm5cIjpyZXR1cm4gcChcIm5cIikscChcInVcIikscChcImxcIikscChcImxcIiksbnVsbH1oKFwiVW5leHBlY3RlZCAnXCIrYStcIidcIil9KCl9fSxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBjPWUrXCJcIixpPTAsYT1cIiBcIixyPXUoKSxnKCksYSYmaChcIlN5bnRheCBlcnJvclwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2Z1bmN0aW9uIGUocixuKXt2YXIgbyxzPXJbbl07cmV0dXJuIHMmJlwib2JqZWN0XCI9PXR5cGVvZiBzJiZPYmplY3Qua2V5cyhzKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2b2lkIDAhPT0obz1lKHMsdCkpP3NbdF09bzpkZWxldGUgc1t0XX0pKSx0LmNhbGwocixuLHMpfSh7XCJcIjpyfSxcIlwiKTpyfX19LDU5MjooZSx0LHIpPT57dmFyIG49cig1MTE3KSxvPWUuZXhwb3J0czshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZSx0LHIscz0vW1xcXFxcXFwiXFx4MDAtXFx4MWZcXHg3Zi1cXHg5ZlxcdTAwYWRcXHUwNjAwLVxcdTA2MDRcXHUwNzBmXFx1MTdiNFxcdTE3YjVcXHUyMDBjLVxcdTIwMGZcXHUyMDI4LVxcdTIwMmZcXHUyMDYwLVxcdTIwNmZcXHVmZWZmXFx1ZmZmMC1cXHVmZmZmXS9nLGk9e1wiXFxiXCI6XCJcXFxcYlwiLFwiXFx0XCI6XCJcXFxcdFwiLFwiXFxuXCI6XCJcXFxcblwiLFwiXFxmXCI6XCJcXFxcZlwiLFwiXFxyXCI6XCJcXFxcclwiLCdcIic6J1xcXFxcIicsXCJcXFxcXCI6XCJcXFxcXFxcXFwifTtmdW5jdGlvbiBhKGUpe3JldHVybiBzLmxhc3RJbmRleD0wLHMudGVzdChlKT8nXCInK2UucmVwbGFjZShzLChmdW5jdGlvbihlKXt2YXIgdD1pW2VdO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P3Q6XCJcXFxcdVwiKyhcIjAwMDBcIitlLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCl9KSkrJ1wiJzonXCInK2UrJ1wiJ31mdW5jdGlvbiBjKG8scyl7dmFyIGksdSxsLGgscCxmPWUsZD1zW29dLGc9bnVsbCE9ZCYmKGQgaW5zdGFuY2VvZiBufHxuLmlzQmlnTnVtYmVyKGQpKTtzd2l0Y2goZCYmXCJvYmplY3RcIj09dHlwZW9mIGQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGQudG9KU09OJiYoZD1kLnRvSlNPTihvKSksXCJmdW5jdGlvblwiPT10eXBlb2YgciYmKGQ9ci5jYWxsKHMsbyxkKSksdHlwZW9mIGQpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBnP2Q6YShkKTtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZCk/U3RyaW5nKGQpOlwibnVsbFwiO2Nhc2VcImJvb2xlYW5cIjpjYXNlXCJudWxsXCI6Y2FzZVwiYmlnaW50XCI6cmV0dXJuIFN0cmluZyhkKTtjYXNlXCJvYmplY3RcIjppZighZClyZXR1cm5cIm51bGxcIjtpZihlKz10LHA9W10sXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShkKSl7Zm9yKGg9ZC5sZW5ndGgsaT0wO2k8aDtpKz0xKXBbaV09YyhpLGQpfHxcIm51bGxcIjtyZXR1cm4gbD0wPT09cC5sZW5ndGg/XCJbXVwiOmU/XCJbXFxuXCIrZStwLmpvaW4oXCIsXFxuXCIrZSkrXCJcXG5cIitmK1wiXVwiOlwiW1wiK3Auam9pbihcIixcIikrXCJdXCIsZT1mLGx9aWYociYmXCJvYmplY3RcIj09dHlwZW9mIHIpZm9yKGg9ci5sZW5ndGgsaT0wO2k8aDtpKz0xKVwic3RyaW5nXCI9PXR5cGVvZiByW2ldJiYobD1jKHU9cltpXSxkKSkmJnAucHVzaChhKHUpKyhlP1wiOiBcIjpcIjpcIikrbCk7ZWxzZSBPYmplY3Qua2V5cyhkKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgcj1jKHQsZCk7ciYmcC5wdXNoKGEodCkrKGU/XCI6IFwiOlwiOlwiKStyKX0pKTtyZXR1cm4gbD0wPT09cC5sZW5ndGg/XCJ7fVwiOmU/XCJ7XFxuXCIrZStwLmpvaW4oXCIsXFxuXCIrZSkrXCJcXG5cIitmK1wifVwiOlwie1wiK3Auam9pbihcIixcIikrXCJ9XCIsZT1mLGx9fVwiZnVuY3Rpb25cIiE9dHlwZW9mIG8uc3RyaW5naWZ5JiYoby5zdHJpbmdpZnk9ZnVuY3Rpb24obixvLHMpe3ZhciBpO2lmKGU9XCJcIix0PVwiXCIsXCJudW1iZXJcIj09dHlwZW9mIHMpZm9yKGk9MDtpPHM7aSs9MSl0Kz1cIiBcIjtlbHNlXCJzdHJpbmdcIj09dHlwZW9mIHMmJih0PXMpO2lmKHI9byxvJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiYoXCJvYmplY3RcIiE9dHlwZW9mIG98fFwibnVtYmVyXCIhPXR5cGVvZiBvLmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKFwiSlNPTi5zdHJpbmdpZnlcIik7cmV0dXJuIGMoXCJcIix7XCJcIjpufSl9KX0oKX0sMzEyNjooZSx0LHIpPT57dmFyIG49XCJmdW5jdGlvblwiPT10eXBlb2YgTWFwJiZNYXAucHJvdG90eXBlLG89T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciYmbj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1hcC5wcm90b3R5cGUsXCJzaXplXCIpOm51bGwscz1uJiZvJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmdldD9vLmdldDpudWxsLGk9biYmTWFwLnByb3RvdHlwZS5mb3JFYWNoLGE9XCJmdW5jdGlvblwiPT10eXBlb2YgU2V0JiZTZXQucHJvdG90eXBlLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciYmYT9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFNldC5wcm90b3R5cGUsXCJzaXplXCIpOm51bGwsdT1hJiZjJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBjLmdldD9jLmdldDpudWxsLGw9YSYmU2V0LnByb3RvdHlwZS5mb3JFYWNoLGg9XCJmdW5jdGlvblwiPT10eXBlb2YgV2Vha01hcCYmV2Vha01hcC5wcm90b3R5cGU/V2Vha01hcC5wcm90b3R5cGUuaGFzOm51bGwscD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBXZWFrU2V0JiZXZWFrU2V0LnByb3RvdHlwZT9XZWFrU2V0LnByb3RvdHlwZS5oYXM6bnVsbCxmPVwiZnVuY3Rpb25cIj09dHlwZW9mIFdlYWtSZWYmJldlYWtSZWYucHJvdG90eXBlP1dlYWtSZWYucHJvdG90eXBlLmRlcmVmOm51bGwsZD1Cb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLGc9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyx5PUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyxtPVN0cmluZy5wcm90b3R5cGUubWF0Y2gsYj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBCaWdJbnQ/QmlnSW50LnByb3RvdHlwZS52YWx1ZU9mOm51bGwsQT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLHc9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP1N5bWJvbC5wcm90b3R5cGUudG9TdHJpbmc6bnVsbCx2PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJvYmplY3RcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcixTPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUseD0oXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdD9SZWZsZWN0LmdldFByb3RvdHlwZU9mOk9iamVjdC5nZXRQcm90b3R5cGVPZil8fChbXS5fX3Byb3RvX189PT1BcnJheS5wcm90b3R5cGU/ZnVuY3Rpb24oZSl7cmV0dXJuIGUuX19wcm90b19ffTpudWxsKSxFPXIoNDY1NCkuY3VzdG9tLFQ9RSYmSShFKT9FOm51bGwsXz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnZvaWQgMCE9PVN5bWJvbC50b1N0cmluZ1RhZz9TeW1ib2wudG9TdHJpbmdUYWc6bnVsbDtmdW5jdGlvbiBCKGUsdCxyKXt2YXIgbj1cImRvdWJsZVwiPT09KHIucXVvdGVTdHlsZXx8dCk/J1wiJzpcIidcIjtyZXR1cm4gbitlK259ZnVuY3Rpb24gVShlKXtyZXR1cm4gU3RyaW5nKGUpLnJlcGxhY2UoL1wiL2csXCImcXVvdDtcIil9ZnVuY3Rpb24gayhlKXtyZXR1cm4hKFwiW29iamVjdCBBcnJheV1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfWZ1bmN0aW9uIEkoZSl7aWYodilyZXR1cm4gZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUgaW5zdGFuY2VvZiBTeW1ib2w7aWYoXCJzeW1ib2xcIj09dHlwZW9mIGUpcmV0dXJuITA7aWYoIWV8fFwib2JqZWN0XCIhPXR5cGVvZiBlfHwhdylyZXR1cm4hMTt0cnl7cmV0dXJuIHcuY2FsbChlKSwhMH1jYXRjaChlKXt9cmV0dXJuITF9ZS5leHBvcnRzPWZ1bmN0aW9uIGUodCxyLG4sbyl7dmFyIGE9cnx8e307aWYoUihhLFwicXVvdGVTdHlsZVwiKSYmXCJzaW5nbGVcIiE9PWEucXVvdGVTdHlsZSYmXCJkb3VibGVcIiE9PWEucXVvdGVTdHlsZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gXCJxdW90ZVN0eWxlXCIgbXVzdCBiZSBcInNpbmdsZVwiIG9yIFwiZG91YmxlXCInKTtpZihSKGEsXCJtYXhTdHJpbmdMZW5ndGhcIikmJihcIm51bWJlclwiPT10eXBlb2YgYS5tYXhTdHJpbmdMZW5ndGg/YS5tYXhTdHJpbmdMZW5ndGg8MCYmYS5tYXhTdHJpbmdMZW5ndGghPT0xLzA6bnVsbCE9PWEubWF4U3RyaW5nTGVuZ3RoKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gXCJtYXhTdHJpbmdMZW5ndGhcIiwgaWYgcHJvdmlkZWQsIG11c3QgYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLCBJbmZpbml0eSwgb3IgYG51bGxgJyk7dmFyIGM9IVIoYSxcImN1c3RvbUluc3BlY3RcIil8fGEuY3VzdG9tSW5zcGVjdDtpZihcImJvb2xlYW5cIiE9dHlwZW9mIGMpdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIFwiY3VzdG9tSW5zcGVjdFwiLCBpZiBwcm92aWRlZCwgbXVzdCBiZSBgdHJ1ZWAgb3IgYGZhbHNlYCcpO2lmKFIoYSxcImluZGVudFwiKSYmbnVsbCE9PWEuaW5kZW50JiZcIlxcdFwiIT09YS5pbmRlbnQmJiEocGFyc2VJbnQoYS5pbmRlbnQsMTApPT09YS5pbmRlbnQmJmEuaW5kZW50PjApKXRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgXCJpbmRlbnRcIiBtdXN0IGJlIFwiXFxcXHRcIiwgYW4gaW50ZWdlciA+IDAsIG9yIGBudWxsYCcpO2lmKHZvaWQgMD09PXQpcmV0dXJuXCJ1bmRlZmluZWRcIjtpZihudWxsPT09dClyZXR1cm5cIm51bGxcIjtpZihcImJvb2xlYW5cIj09dHlwZW9mIHQpcmV0dXJuIHQ/XCJ0cnVlXCI6XCJmYWxzZVwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBOKHQsYSk7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIDA9PT10PzEvMC90PjA/XCIwXCI6XCItMFwiOlN0cmluZyh0KTtpZihcImJpZ2ludFwiPT10eXBlb2YgdClyZXR1cm4gU3RyaW5nKHQpK1wiblwiO3ZhciBnPXZvaWQgMD09PWEuZGVwdGg/NTphLmRlcHRoO2lmKHZvaWQgMD09PW4mJihuPTApLG4+PWcmJmc+MCYmXCJvYmplY3RcIj09dHlwZW9mIHQpcmV0dXJuIGsodCk/XCJbQXJyYXldXCI6XCJbT2JqZWN0XVwiO3ZhciBBLFM9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihcIlxcdFwiPT09ZS5pbmRlbnQpcj1cIlxcdFwiO2Vsc2V7aWYoIShcIm51bWJlclwiPT10eXBlb2YgZS5pbmRlbnQmJmUuaW5kZW50PjApKXJldHVybiBudWxsO3I9QXJyYXkoZS5pbmRlbnQrMSkuam9pbihcIiBcIil9cmV0dXJue2Jhc2U6cixwcmV2OkFycmF5KHQrMSkuam9pbihyKX19KGEsbik7aWYodm9pZCAwPT09bylvPVtdO2Vsc2UgaWYoRChvLHQpPj0wKXJldHVyblwiW0NpcmN1bGFyXVwiO2Z1bmN0aW9uIEUodCxyLHMpe2lmKHImJihvPW8uc2xpY2UoKSkucHVzaChyKSxzKXt2YXIgaT17ZGVwdGg6YS5kZXB0aH07cmV0dXJuIFIoYSxcInF1b3RlU3R5bGVcIikmJihpLnF1b3RlU3R5bGU9YS5xdW90ZVN0eWxlKSxlKHQsaSxuKzEsbyl9cmV0dXJuIGUodCxhLG4rMSxvKX1pZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0KXt2YXIgQz1mdW5jdGlvbihlKXtpZihlLm5hbWUpcmV0dXJuIGUubmFtZTt2YXIgdD1tLmNhbGwoeS5jYWxsKGUpLC9eZnVuY3Rpb25cXHMqKFtcXHckXSspLyk7cmV0dXJuIHQ/dFsxXTpudWxsfSh0KSxQPU0odCxFKTtyZXR1cm5cIltGdW5jdGlvblwiKyhDP1wiOiBcIitDOlwiIChhbm9ueW1vdXMpXCIpK1wiXVwiKyhQLmxlbmd0aD4wP1wiIHsgXCIrUC5qb2luKFwiLCBcIikrXCIgfVwiOlwiXCIpfWlmKEkodCkpe3ZhciBIPXY/U3RyaW5nKHQpLnJlcGxhY2UoL14oU3ltYm9sXFwoLipcXCkpX1teKV0qJC8sXCIkMVwiKTp3LmNhbGwodCk7cmV0dXJuXCJvYmplY3RcIiE9dHlwZW9mIHR8fHY/SDpMKEgpfWlmKChBPXQpJiZcIm9iamVjdFwiPT10eXBlb2YgQSYmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBIVE1MRWxlbWVudCYmQSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50fHxcInN0cmluZ1wiPT10eXBlb2YgQS5ub2RlTmFtZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgQS5nZXRBdHRyaWJ1dGUpKXtmb3IodmFyIEc9XCI8XCIrU3RyaW5nKHQubm9kZU5hbWUpLnRvTG93ZXJDYXNlKCksSz10LmF0dHJpYnV0ZXN8fFtdLHE9MDtxPEsubGVuZ3RoO3ErKylHKz1cIiBcIitLW3FdLm5hbWUrXCI9XCIrQihVKEtbcV0udmFsdWUpLFwiZG91YmxlXCIsYSk7cmV0dXJuIEcrPVwiPlwiLHQuY2hpbGROb2RlcyYmdC5jaGlsZE5vZGVzLmxlbmd0aCYmKEcrPVwiLi4uXCIpLEcrXCI8L1wiK1N0cmluZyh0Lm5vZGVOYW1lKS50b0xvd2VyQ2FzZSgpK1wiPlwifWlmKGsodCkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm5cIltdXCI7dmFyICQ9TSh0LEUpO3JldHVybiBTJiYhZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0KyspaWYoRChlW3RdLFwiXFxuXCIpPj0wKXJldHVybiExO3JldHVybiEwfSgkKT9cIltcIitqKCQsUykrXCJdXCI6XCJbIFwiKyQuam9pbihcIiwgXCIpK1wiIF1cIn1pZihmdW5jdGlvbihlKXtyZXR1cm4hKFwiW29iamVjdCBFcnJvcl1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSl7dmFyIFY9TSh0LEUpO3JldHVybiAwPT09Vi5sZW5ndGg/XCJbXCIrU3RyaW5nKHQpK1wiXVwiOlwieyBbXCIrU3RyaW5nKHQpK1wiXSBcIitWLmpvaW4oXCIsIFwiKStcIiB9XCJ9aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJmMpe2lmKFQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbVF0pcmV0dXJuIHRbVF0oKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lmluc3BlY3QpcmV0dXJuIHQuaW5zcGVjdCgpfWlmKGZ1bmN0aW9uKGUpe2lmKCFzfHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e3MuY2FsbChlKTt0cnl7dS5jYWxsKGUpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgTWFwfWNhdGNoKGUpe31yZXR1cm4hMX0odCkpe3ZhciBXPVtdO3JldHVybiBpLmNhbGwodCwoZnVuY3Rpb24oZSxyKXtXLnB1c2goRShyLHQsITApK1wiID0+IFwiK0UoZSx0KSl9KSkseihcIk1hcFwiLHMuY2FsbCh0KSxXLFMpfWlmKGZ1bmN0aW9uKGUpe2lmKCF1fHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e3UuY2FsbChlKTt0cnl7cy5jYWxsKGUpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgU2V0fWNhdGNoKGUpe31yZXR1cm4hMX0odCkpe3ZhciBYPVtdO3JldHVybiBsLmNhbGwodCwoZnVuY3Rpb24oZSl7WC5wdXNoKEUoZSx0KSl9KSkseihcIlNldFwiLHUuY2FsbCh0KSxYLFMpfWlmKGZ1bmN0aW9uKGUpe2lmKCFofHwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUpcmV0dXJuITE7dHJ5e2guY2FsbChlLGgpO3RyeXtwLmNhbGwoZSxwKX1jYXRjaChlKXtyZXR1cm4hMH1yZXR1cm4gZSBpbnN0YW5jZW9mIFdlYWtNYXB9Y2F0Y2goZSl7fXJldHVybiExfSh0KSlyZXR1cm4gRihcIldlYWtNYXBcIik7aWYoZnVuY3Rpb24oZSl7aWYoIXB8fCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZSlyZXR1cm4hMTt0cnl7cC5jYWxsKGUscCk7dHJ5e2guY2FsbChlLGgpfWNhdGNoKGUpe3JldHVybiEwfXJldHVybiBlIGluc3RhbmNlb2YgV2Vha1NldH1jYXRjaChlKXt9cmV0dXJuITF9KHQpKXJldHVybiBGKFwiV2Vha1NldFwiKTtpZihmdW5jdGlvbihlKXtpZighZnx8IWV8fFwib2JqZWN0XCIhPXR5cGVvZiBlKXJldHVybiExO3RyeXtyZXR1cm4gZi5jYWxsKGUpLCEwfWNhdGNoKGUpe31yZXR1cm4hMX0odCkpcmV0dXJuIEYoXCJXZWFrUmVmXCIpO2lmKGZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IE51bWJlcl1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSlyZXR1cm4gTChFKE51bWJlcih0KSkpO2lmKGZ1bmN0aW9uKGUpe2lmKCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZXx8IWIpcmV0dXJuITE7dHJ5e3JldHVybiBiLmNhbGwoZSksITB9Y2F0Y2goZSl7fXJldHVybiExfSh0KSlyZXR1cm4gTChFKGIuY2FsbCh0KSkpO2lmKGZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IEJvb2xlYW5dXCIhPT1PKGUpfHxfJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXyBpbiBlKX0odCkpcmV0dXJuIEwoZC5jYWxsKHQpKTtpZihmdW5jdGlvbihlKXtyZXR1cm4hKFwiW29iamVjdCBTdHJpbmddXCIhPT1PKGUpfHxfJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXyBpbiBlKX0odCkpcmV0dXJuIEwoRShTdHJpbmcodCkpKTtpZighZnVuY3Rpb24oZSl7cmV0dXJuIShcIltvYmplY3QgRGF0ZV1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSYmIWZ1bmN0aW9uKGUpe3JldHVybiEoXCJbb2JqZWN0IFJlZ0V4cF1cIiE9PU8oZSl8fF8mJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZfIGluIGUpfSh0KSl7dmFyIFk9TSh0LEUpLEo9eD94KHQpPT09T2JqZWN0LnByb3RvdHlwZTp0IGluc3RhbmNlb2YgT2JqZWN0fHx0LmNvbnN0cnVjdG9yPT09T2JqZWN0LFE9dCBpbnN0YW5jZW9mIE9iamVjdD9cIlwiOlwibnVsbCBwcm90b3R5cGVcIixaPSFKJiZfJiZPYmplY3QodCk9PT10JiZfIGluIHQ/Tyh0KS5zbGljZSg4LC0xKTpRP1wiT2JqZWN0XCI6XCJcIixlZT0oSnx8XCJmdW5jdGlvblwiIT10eXBlb2YgdC5jb25zdHJ1Y3Rvcj9cIlwiOnQuY29uc3RydWN0b3IubmFtZT90LmNvbnN0cnVjdG9yLm5hbWUrXCIgXCI6XCJcIikrKFp8fFE/XCJbXCIrW10uY29uY2F0KFp8fFtdLFF8fFtdKS5qb2luKFwiOiBcIikrXCJdIFwiOlwiXCIpO3JldHVybiAwPT09WS5sZW5ndGg/ZWUrXCJ7fVwiOlM/ZWUrXCJ7XCIraihZLFMpK1wifVwiOmVlK1wieyBcIitZLmpvaW4oXCIsIFwiKStcIiB9XCJ9cmV0dXJuIFN0cmluZyh0KX07dmFyIEM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW4gdGhpc307ZnVuY3Rpb24gUihlLHQpe3JldHVybiBDLmNhbGwoZSx0KX1mdW5jdGlvbiBPKGUpe3JldHVybiBnLmNhbGwoZSl9ZnVuY3Rpb24gRChlLHQpe2lmKGUuaW5kZXhPZilyZXR1cm4gZS5pbmRleE9mKHQpO2Zvcih2YXIgcj0wLG49ZS5sZW5ndGg7cjxuO3IrKylpZihlW3JdPT09dClyZXR1cm4gcjtyZXR1cm4tMX1mdW5jdGlvbiBOKGUsdCl7aWYoZS5sZW5ndGg+dC5tYXhTdHJpbmdMZW5ndGgpe3ZhciByPWUubGVuZ3RoLXQubWF4U3RyaW5nTGVuZ3RoLG49XCIuLi4gXCIrcitcIiBtb3JlIGNoYXJhY3RlclwiKyhyPjE/XCJzXCI6XCJcIik7cmV0dXJuIE4oZS5zbGljZSgwLHQubWF4U3RyaW5nTGVuZ3RoKSx0KStufXJldHVybiBCKGUucmVwbGFjZSgvKFsnXFxcXF0pL2csXCJcXFxcJDFcIikucmVwbGFjZSgvW1xceDAwLVxceDFmXS9nLFApLFwic2luZ2xlXCIsdCl9ZnVuY3Rpb24gUChlKXt2YXIgdD1lLmNoYXJDb2RlQXQoMCkscj17ODpcImJcIiw5OlwidFwiLDEwOlwiblwiLDEyOlwiZlwiLDEzOlwiclwifVt0XTtyZXR1cm4gcj9cIlxcXFxcIityOlwiXFxcXHhcIisodDwxNj9cIjBcIjpcIlwiKSt0LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIEwoZSl7cmV0dXJuXCJPYmplY3QoXCIrZStcIilcIn1mdW5jdGlvbiBGKGUpe3JldHVybiBlK1wiIHsgPyB9XCJ9ZnVuY3Rpb24geihlLHQscixuKXtyZXR1cm4gZStcIiAoXCIrdCtcIikge1wiKyhuP2oocixuKTpyLmpvaW4oXCIsIFwiKSkrXCJ9XCJ9ZnVuY3Rpb24gaihlLHQpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5cIlwiO3ZhciByPVwiXFxuXCIrdC5wcmV2K3QuYmFzZTtyZXR1cm4gcitlLmpvaW4oXCIsXCIrcikrXCJcXG5cIit0LnByZXZ9ZnVuY3Rpb24gTShlLHQpe3ZhciByPWsoZSksbj1bXTtpZihyKXtuLmxlbmd0aD1lLmxlbmd0aDtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKyluW29dPVIoZSxvKT90KGVbb10sZSk6XCJcIn12YXIgcyxpPVwiZnVuY3Rpb25cIj09dHlwZW9mIEE/QShlKTpbXTtpZih2KXtzPXt9O2Zvcih2YXIgYT0wO2E8aS5sZW5ndGg7YSsrKXNbXCIkXCIraVthXV09aVthXX1mb3IodmFyIGMgaW4gZSlSKGUsYykmJihyJiZTdHJpbmcoTnVtYmVyKGMpKT09PWMmJmM8ZS5sZW5ndGh8fHYmJnNbXCIkXCIrY11pbnN0YW5jZW9mIFN5bWJvbHx8KC9bXlxcdyRdLy50ZXN0KGMpP24ucHVzaCh0KGMsZSkrXCI6IFwiK3QoZVtjXSxlKSk6bi5wdXNoKGMrXCI6IFwiK3QoZVtjXSxlKSkpKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBBKWZvcih2YXIgdT0wO3U8aS5sZW5ndGg7dSsrKVMuY2FsbChlLGlbdV0pJiZuLnB1c2goXCJbXCIrdChpW3VdKStcIl06IFwiK3QoZVtpW3VdXSxlKSk7cmV0dXJuIG59fSwzNjgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDE4MDEpLG89cig3NjE1KSxzPXIoMzEyNiksaT1uKFwiJVR5cGVFcnJvciVcIiksYT1uKFwiJVdlYWtNYXAlXCIsITApLGM9bihcIiVNYXAlXCIsITApLHU9byhcIldlYWtNYXAucHJvdG90eXBlLmdldFwiLCEwKSxsPW8oXCJXZWFrTWFwLnByb3RvdHlwZS5zZXRcIiwhMCksaD1vKFwiV2Vha01hcC5wcm90b3R5cGUuaGFzXCIsITApLHA9byhcIk1hcC5wcm90b3R5cGUuZ2V0XCIsITApLGY9byhcIk1hcC5wcm90b3R5cGUuc2V0XCIsITApLGQ9byhcIk1hcC5wcm90b3R5cGUuaGFzXCIsITApLGc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbj1lO251bGwhPT0ocj1uLm5leHQpO249cilpZihyLmtleT09PXQpcmV0dXJuIG4ubmV4dD1yLm5leHQsci5uZXh0PWUubmV4dCxlLm5leHQ9cixyfTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbj17YXNzZXJ0OmZ1bmN0aW9uKGUpe2lmKCFuLmhhcyhlKSl0aHJvdyBuZXcgaShcIlNpZGUgY2hhbm5lbCBkb2VzIG5vdCBjb250YWluIFwiK3MoZSkpfSxnZXQ6ZnVuY3Rpb24obil7aWYoYSYmbiYmKFwib2JqZWN0XCI9PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKSl7aWYoZSlyZXR1cm4gdShlLG4pfWVsc2UgaWYoYyl7aWYodClyZXR1cm4gcCh0LG4pfWVsc2UgaWYocilyZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgcj1nKGUsdCk7cmV0dXJuIHImJnIudmFsdWV9KHIsbil9LGhhczpmdW5jdGlvbihuKXtpZihhJiZuJiYoXCJvYmplY3RcIj09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pKXtpZihlKXJldHVybiBoKGUsbil9ZWxzZSBpZihjKXtpZih0KXJldHVybiBkKHQsbil9ZWxzZSBpZihyKXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiEhZyhlLHQpfShyLG4pO3JldHVybiExfSxzZXQ6ZnVuY3Rpb24obixvKXthJiZuJiYoXCJvYmplY3RcIj09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pPyhlfHwoZT1uZXcgYSksbChlLG4sbykpOmM/KHR8fCh0PW5ldyBjKSxmKHQsbixvKSk6KHJ8fChyPXtrZXk6e30sbmV4dDpudWxsfSksZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWcoZSx0KTtuP24udmFsdWU9cjplLm5leHQ9e2tleTp0LG5leHQ6ZS5uZXh0LHZhbHVlOnJ9fShyLG4sbykpfX07cmV0dXJuIG59fSwyODU4OmU9PntcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciByPTAsbj1uZXcgQXJyYXkodCk7cjx0O3IrKyluW3JdPWVbcl07cmV0dXJuIG59ZnVuY3Rpb24gcigpe3RoaXMuX2RlZmF1bHRzPVtdfVtcInVzZVwiLFwib25cIixcIm9uY2VcIixcInNldFwiLFwicXVlcnlcIixcInR5cGVcIixcImFjY2VwdFwiLFwiYXV0aFwiLFwid2l0aENyZWRlbnRpYWxzXCIsXCJzb3J0UXVlcnlcIixcInJldHJ5XCIsXCJva1wiLFwicmVkaXJlY3RzXCIsXCJ0aW1lb3V0XCIsXCJidWZmZXJcIixcInNlcmlhbGl6ZVwiLFwicGFyc2VcIixcImNhXCIsXCJrZXlcIixcInBmeFwiLFwiY2VydFwiLFwiZGlzYWJsZVRMU0NlcnRzXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe3IucHJvdG90eXBlW2VdPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1hcmd1bWVudHNbbl07cmV0dXJuIHRoaXMuX2RlZmF1bHRzLnB1c2goe2ZuOmUsYXJnczpyfSksdGhpc319KSksci5wcm90b3R5cGUuX3NldERlZmF1bHRzPWZ1bmN0aW9uKGUpe3RoaXMuX2RlZmF1bHRzLmZvckVhY2goKGZ1bmN0aW9uKHIpe3ZhciBuO2Vbci5mbl0uYXBwbHkoZSxmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiB0KGUpfShuPXIuYXJncyl8fGZ1bmN0aW9uKGUpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KG4pfHxmdW5jdGlvbihlLHIpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0KGUscik7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT90KGUscik6dm9pZCAwfX0obil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpfSkpfSxlLmV4cG9ydHM9cn0sNTM5MTooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4obj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9dmFyIG87XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz9vPXdpbmRvdzpcInVuZGVmaW5lZFwiPT10eXBlb2Ygc2VsZj8oY29uc29sZS53YXJuKFwiVXNpbmcgYnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBpbiBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKSxvPXZvaWQgMCk6bz1zZWxmO3ZhciBzPXIoMTA2OSksaT1yKDU3OTkpLGE9cigzMDY1KSxjPXIoNDI4NyksdT1yKDE5NjApLGw9cig5NjkpLGg9cigyODU4KTtmdW5jdGlvbiBwKCl7fWUuZXhwb3J0cz1mdW5jdGlvbihlLHIpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHI/bmV3IHQuUmVxdWVzdChcIkdFVFwiLGUpLmVuZChyKToxPT09YXJndW1lbnRzLmxlbmd0aD9uZXcgdC5SZXF1ZXN0KFwiR0VUXCIsZSk6bmV3IHQuUmVxdWVzdChlLHIpfTt2YXIgZj10PWUuZXhwb3J0czt0LlJlcXVlc3Q9dyxmLmdldFhIUj1mdW5jdGlvbigpe2lmKG8uWE1MSHR0cFJlcXVlc3QmJighby5sb2NhdGlvbnx8XCJmaWxlOlwiIT09by5sb2NhdGlvbi5wcm90b2NvbHx8IW8uQWN0aXZlWE9iamVjdCkpcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdDt0cnl7cmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTEhUVFBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUC42LjBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUC4zLjBcIil9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNc3htbDIuWE1MSFRUUFwiKX1jYXRjaChlKXt9dGhyb3cgbmV3IEVycm9yKFwiQnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBjb3VsZCBub3QgZmluZCBYSFJcIil9O3ZhciBkPVwiXCIudHJpbT9mdW5jdGlvbihlKXtyZXR1cm4gZS50cmltKCl9OmZ1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoLyheXFxzKnxcXHMqJCkvZyxcIlwiKX07ZnVuY3Rpb24gZyhlKXtpZighdShlKSlyZXR1cm4gZTt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmeSh0LHIsZVtyXSk7cmV0dXJuIHQuam9pbihcIiZcIil9ZnVuY3Rpb24geShlLHQscil7aWYodm9pZCAwIT09cilpZihudWxsIT09cilpZihBcnJheS5pc0FycmF5KHIpKXIuZm9yRWFjaCgoZnVuY3Rpb24ocil7eShlLHQscil9KSk7ZWxzZSBpZih1KHIpKWZvcih2YXIgbiBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLG4pJiZ5KGUsXCJcIi5jb25jYXQodCxcIltcIikuY29uY2F0KG4sXCJdXCIpLHJbbl0pO2Vsc2UgZS5wdXNoKGVuY29kZVVSSSh0KStcIj1cIitlbmNvZGVVUklDb21wb25lbnQocikpO2Vsc2UgZS5wdXNoKGVuY29kZVVSSSh0KSl9ZnVuY3Rpb24gbShlKXtmb3IodmFyIHQscixuPXt9LG89ZS5zcGxpdChcIiZcIikscz0wLGk9by5sZW5ndGg7czxpOysrcyktMT09PShyPSh0PW9bc10pLmluZGV4T2YoXCI9XCIpKT9uW2RlY29kZVVSSUNvbXBvbmVudCh0KV09XCJcIjpuW2RlY29kZVVSSUNvbXBvbmVudCh0LnNsaWNlKDAscikpXT1kZWNvZGVVUklDb21wb25lbnQodC5zbGljZShyKzEpKTtyZXR1cm4gbn1mdW5jdGlvbiBiKGUpe3JldHVybi9bLytdanNvbigkfFteLVxcd10pL2kudGVzdChlKX1mdW5jdGlvbiBBKGUpe3RoaXMucmVxPWUsdGhpcy54aHI9dGhpcy5yZXEueGhyLHRoaXMudGV4dD1cIkhFQURcIiE9PXRoaXMucmVxLm1ldGhvZCYmKFwiXCI9PT10aGlzLnhoci5yZXNwb25zZVR5cGV8fFwidGV4dFwiPT09dGhpcy54aHIucmVzcG9uc2VUeXBlKXx8dm9pZCAwPT09dGhpcy54aHIucmVzcG9uc2VUeXBlP3RoaXMueGhyLnJlc3BvbnNlVGV4dDpudWxsLHRoaXMuc3RhdHVzVGV4dD10aGlzLnJlcS54aHIuc3RhdHVzVGV4dDt2YXIgdD10aGlzLnhoci5zdGF0dXM7MTIyMz09PXQmJih0PTIwNCksdGhpcy5fc2V0U3RhdHVzUHJvcGVydGllcyh0KSx0aGlzLmhlYWRlcnM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixvLHM9ZS5zcGxpdCgvXFxyP1xcbi8pLGk9e30sYT0wLGM9cy5sZW5ndGg7YTxjOysrYSktMSE9PSh0PShyPXNbYV0pLmluZGV4T2YoXCI6XCIpKSYmKG49ci5zbGljZSgwLHQpLnRvTG93ZXJDYXNlKCksbz1kKHIuc2xpY2UodCsxKSksaVtuXT1vKTtyZXR1cm4gaX0odGhpcy54aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpLHRoaXMuaGVhZGVyPXRoaXMuaGVhZGVycyx0aGlzLmhlYWRlcltcImNvbnRlbnQtdHlwZVwiXT10aGlzLnhoci5nZXRSZXNwb25zZUhlYWRlcihcImNvbnRlbnQtdHlwZVwiKSx0aGlzLl9zZXRIZWFkZXJQcm9wZXJ0aWVzKHRoaXMuaGVhZGVyKSxudWxsPT09dGhpcy50ZXh0JiZlLl9yZXNwb25zZVR5cGU/dGhpcy5ib2R5PXRoaXMueGhyLnJlc3BvbnNlOnRoaXMuYm9keT1cIkhFQURcIj09PXRoaXMucmVxLm1ldGhvZD9udWxsOnRoaXMuX3BhcnNlQm9keSh0aGlzLnRleHQ/dGhpcy50ZXh0OnRoaXMueGhyLnJlc3BvbnNlKX1mdW5jdGlvbiB3KGUsdCl7dmFyIHI9dGhpczt0aGlzLl9xdWVyeT10aGlzLl9xdWVyeXx8W10sdGhpcy5tZXRob2Q9ZSx0aGlzLnVybD10LHRoaXMuaGVhZGVyPXt9LHRoaXMuX2hlYWRlcj17fSx0aGlzLm9uKFwiZW5kXCIsKGZ1bmN0aW9uKCl7dmFyIGUsdD1udWxsLG49bnVsbDt0cnl7bj1uZXcgQShyKX1jYXRjaChlKXtyZXR1cm4odD1uZXcgRXJyb3IoXCJQYXJzZXIgaXMgdW5hYmxlIHRvIHBhcnNlIHRoZSByZXNwb25zZVwiKSkucGFyc2U9ITAsdC5vcmlnaW5hbD1lLHIueGhyPyh0LnJhd1Jlc3BvbnNlPXZvaWQgMD09PXIueGhyLnJlc3BvbnNlVHlwZT9yLnhoci5yZXNwb25zZVRleHQ6ci54aHIucmVzcG9uc2UsdC5zdGF0dXM9ci54aHIuc3RhdHVzP3IueGhyLnN0YXR1czpudWxsLHQuc3RhdHVzQ29kZT10LnN0YXR1cyk6KHQucmF3UmVzcG9uc2U9bnVsbCx0LnN0YXR1cz1udWxsKSxyLmNhbGxiYWNrKHQpfXIuZW1pdChcInJlc3BvbnNlXCIsbik7dHJ5e3IuX2lzUmVzcG9uc2VPSyhuKXx8KGU9bmV3IEVycm9yKG4uc3RhdHVzVGV4dHx8bi50ZXh0fHxcIlVuc3VjY2Vzc2Z1bCBIVFRQIHJlc3BvbnNlXCIpKX1jYXRjaCh0KXtlPXR9ZT8oZS5vcmlnaW5hbD10LGUucmVzcG9uc2U9bixlLnN0YXR1cz1uLnN0YXR1cyxyLmNhbGxiYWNrKGUsbikpOnIuY2FsbGJhY2sobnVsbCxuKX0pKX1mdW5jdGlvbiB2KGUsdCxyKXt2YXIgbj1mKFwiREVMRVRFXCIsZSk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKHI9dCx0PW51bGwpLHQmJm4uc2VuZCh0KSxyJiZuLmVuZChyKSxufWYuc2VyaWFsaXplT2JqZWN0PWcsZi5wYXJzZVN0cmluZz1tLGYudHlwZXM9e2h0bWw6XCJ0ZXh0L2h0bWxcIixqc29uOlwiYXBwbGljYXRpb24vanNvblwiLHhtbDpcInRleHQveG1sXCIsdXJsZW5jb2RlZDpcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLGZvcm06XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcImZvcm0tZGF0YVwiOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJ9LGYuc2VyaWFsaXplPXtcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiOmEuc3RyaW5naWZ5LFwiYXBwbGljYXRpb24vanNvblwiOml9LGYucGFyc2U9e1wiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCI6bSxcImFwcGxpY2F0aW9uL2pzb25cIjpKU09OLnBhcnNlfSxsKEEucHJvdG90eXBlKSxBLnByb3RvdHlwZS5fcGFyc2VCb2R5PWZ1bmN0aW9uKGUpe3ZhciB0PWYucGFyc2VbdGhpcy50eXBlXTtyZXR1cm4gdGhpcy5yZXEuX3BhcnNlcj90aGlzLnJlcS5fcGFyc2VyKHRoaXMsZSk6KCF0JiZiKHRoaXMudHlwZSkmJih0PWYucGFyc2VbXCJhcHBsaWNhdGlvbi9qc29uXCJdKSx0JiZlJiYoZS5sZW5ndGg+MHx8ZSBpbnN0YW5jZW9mIE9iamVjdCk/dChlKTpudWxsKX0sQS5wcm90b3R5cGUudG9FcnJvcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMucmVxLHQ9ZS5tZXRob2Qscj1lLnVybCxuPVwiY2Fubm90IFwiLmNvbmNhdCh0LFwiIFwiKS5jb25jYXQocixcIiAoXCIpLmNvbmNhdCh0aGlzLnN0YXR1cyxcIilcIiksbz1uZXcgRXJyb3Iobik7cmV0dXJuIG8uc3RhdHVzPXRoaXMuc3RhdHVzLG8ubWV0aG9kPXQsby51cmw9cixvfSxmLlJlc3BvbnNlPUEscyh3LnByb3RvdHlwZSksYyh3LnByb3RvdHlwZSksdy5wcm90b3R5cGUudHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zZXQoXCJDb250ZW50LVR5cGVcIixmLnR5cGVzW2VdfHxlKSx0aGlzfSx3LnByb3RvdHlwZS5hY2NlcHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc2V0KFwiQWNjZXB0XCIsZi50eXBlc1tlXXx8ZSksdGhpc30sdy5wcm90b3R5cGUuYXV0aD1mdW5jdGlvbihlLHQscil7MT09PWFyZ3VtZW50cy5sZW5ndGgmJih0PVwiXCIpLFwib2JqZWN0XCI9PT1uKHQpJiZudWxsIT09dCYmKHI9dCx0PVwiXCIpLHJ8fChyPXt0eXBlOlwiZnVuY3Rpb25cIj09dHlwZW9mIGJ0b2E/XCJiYXNpY1wiOlwiYXV0b1wifSk7dmFyIG89ZnVuY3Rpb24oZSl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYnRvYSlyZXR1cm4gYnRvYShlKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgdXNlIGJhc2ljIGF1dGgsIGJ0b2EgaXMgbm90IGEgZnVuY3Rpb25cIil9O3JldHVybiB0aGlzLl9hdXRoKGUsdCxyLG8pfSx3LnByb3RvdHlwZS5xdWVyeT1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiIT10eXBlb2YgZSYmKGU9ZyhlKSksZSYmdGhpcy5fcXVlcnkucHVzaChlKSx0aGlzfSx3LnByb3RvdHlwZS5hdHRhY2g9ZnVuY3Rpb24oZSx0LHIpe2lmKHQpe2lmKHRoaXMuX2RhdGEpdGhyb3cgbmV3IEVycm9yKFwic3VwZXJhZ2VudCBjYW4ndCBtaXggLnNlbmQoKSBhbmQgLmF0dGFjaCgpXCIpO3RoaXMuX2dldEZvcm1EYXRhKCkuYXBwZW5kKGUsdCxyfHx0Lm5hbWUpfXJldHVybiB0aGlzfSx3LnByb3RvdHlwZS5fZ2V0Rm9ybURhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9ybURhdGF8fCh0aGlzLl9mb3JtRGF0YT1uZXcgby5Gb3JtRGF0YSksdGhpcy5fZm9ybURhdGF9LHcucHJvdG90eXBlLmNhbGxiYWNrPWZ1bmN0aW9uKGUsdCl7aWYodGhpcy5fc2hvdWxkUmV0cnkoZSx0KSlyZXR1cm4gdGhpcy5fcmV0cnkoKTt2YXIgcj10aGlzLl9jYWxsYmFjazt0aGlzLmNsZWFyVGltZW91dCgpLGUmJih0aGlzLl9tYXhSZXRyaWVzJiYoZS5yZXRyaWVzPXRoaXMuX3JldHJpZXMtMSksdGhpcy5lbWl0KFwiZXJyb3JcIixlKSkscihlLHQpfSx3LnByb3RvdHlwZS5jcm9zc0RvbWFpbkVycm9yPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IEVycm9yKFwiUmVxdWVzdCBoYXMgYmVlbiB0ZXJtaW5hdGVkXFxuUG9zc2libGUgY2F1c2VzOiB0aGUgbmV0d29yayBpcyBvZmZsaW5lLCBPcmlnaW4gaXMgbm90IGFsbG93ZWQgYnkgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCB0aGUgcGFnZSBpcyBiZWluZyB1bmxvYWRlZCwgZXRjLlwiKTtlLmNyb3NzRG9tYWluPSEwLGUuc3RhdHVzPXRoaXMuc3RhdHVzLGUubWV0aG9kPXRoaXMubWV0aG9kLGUudXJsPXRoaXMudXJsLHRoaXMuY2FsbGJhY2soZSl9LHcucHJvdG90eXBlLmFnZW50PWZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybihcIlRoaXMgaXMgbm90IHN1cHBvcnRlZCBpbiBicm93c2VyIHZlcnNpb24gb2Ygc3VwZXJhZ2VudFwiKSx0aGlzfSx3LnByb3RvdHlwZS5jYT13LnByb3RvdHlwZS5hZ2VudCx3LnByb3RvdHlwZS5idWZmZXI9dy5wcm90b3R5cGUuY2Esdy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJTdHJlYW1pbmcgaXMgbm90IHN1cHBvcnRlZCBpbiBicm93c2VyIHZlcnNpb24gb2Ygc3VwZXJhZ2VudFwiKX0sdy5wcm90b3R5cGUucGlwZT13LnByb3RvdHlwZS53cml0ZSx3LnByb3RvdHlwZS5faXNIb3N0PWZ1bmN0aW9uKGUpe3JldHVybiBlJiZcIm9iamVjdFwiPT09bihlKSYmIUFycmF5LmlzQXJyYXkoZSkmJlwiW29iamVjdCBPYmplY3RdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LHcucHJvdG90eXBlLmVuZD1mdW5jdGlvbihlKXt0aGlzLl9lbmRDYWxsZWQmJmNvbnNvbGUud2FybihcIldhcm5pbmc6IC5lbmQoKSB3YXMgY2FsbGVkIHR3aWNlLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gc3VwZXJhZ2VudFwiKSx0aGlzLl9lbmRDYWxsZWQ9ITAsdGhpcy5fY2FsbGJhY2s9ZXx8cCx0aGlzLl9maW5hbGl6ZVF1ZXJ5U3RyaW5nKCksdGhpcy5fZW5kKCl9LHcucHJvdG90eXBlLl9zZXRVcGxvYWRUaW1lb3V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLl91cGxvYWRUaW1lb3V0JiYhdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyJiYodGhpcy5fdXBsb2FkVGltZW91dFRpbWVyPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5fdGltZW91dEVycm9yKFwiVXBsb2FkIHRpbWVvdXQgb2YgXCIsZS5fdXBsb2FkVGltZW91dCxcIkVUSU1FRE9VVFwiKX0pLHRoaXMuX3VwbG9hZFRpbWVvdXQpKX0sdy5wcm90b3R5cGUuX2VuZD1mdW5jdGlvbigpe2lmKHRoaXMuX2Fib3J0ZWQpcmV0dXJuIHRoaXMuY2FsbGJhY2sobmV3IEVycm9yKFwiVGhlIHJlcXVlc3QgaGFzIGJlZW4gYWJvcnRlZCBldmVuIGJlZm9yZSAuZW5kKCkgd2FzIGNhbGxlZFwiKSk7dmFyIGU9dGhpczt0aGlzLnhocj1mLmdldFhIUigpO3ZhciB0PXRoaXMueGhyLHI9dGhpcy5fZm9ybURhdGF8fHRoaXMuX2RhdGE7dGhpcy5fc2V0VGltZW91dHMoKSx0Lm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3ZhciByPXQucmVhZHlTdGF0ZTtpZihyPj0yJiZlLl9yZXNwb25zZVRpbWVvdXRUaW1lciYmY2xlYXJUaW1lb3V0KGUuX3Jlc3BvbnNlVGltZW91dFRpbWVyKSw0PT09cil7dmFyIG47dHJ5e249dC5zdGF0dXN9Y2F0Y2goZSl7bj0wfWlmKCFuKXtpZihlLnRpbWVkb3V0fHxlLl9hYm9ydGVkKXJldHVybjtyZXR1cm4gZS5jcm9zc0RvbWFpbkVycm9yKCl9ZS5lbWl0KFwiZW5kXCIpfX07dmFyIG49ZnVuY3Rpb24odCxyKXtyLnRvdGFsPjAmJihyLnBlcmNlbnQ9ci5sb2FkZWQvci50b3RhbCoxMDAsMTAwPT09ci5wZXJjZW50JiZjbGVhclRpbWVvdXQoZS5fdXBsb2FkVGltZW91dFRpbWVyKSksci5kaXJlY3Rpb249dCxlLmVtaXQoXCJwcm9ncmVzc1wiLHIpfTtpZih0aGlzLmhhc0xpc3RlbmVycyhcInByb2dyZXNzXCIpKXRyeXt0LmFkZEV2ZW50TGlzdGVuZXIoXCJwcm9ncmVzc1wiLG4uYmluZChudWxsLFwiZG93bmxvYWRcIikpLHQudXBsb2FkJiZ0LnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixuLmJpbmQobnVsbCxcInVwbG9hZFwiKSl9Y2F0Y2goZSl7fXQudXBsb2FkJiZ0aGlzLl9zZXRVcGxvYWRUaW1lb3V0KCk7dHJ5e3RoaXMudXNlcm5hbWUmJnRoaXMucGFzc3dvcmQ/dC5vcGVuKHRoaXMubWV0aG9kLHRoaXMudXJsLCEwLHRoaXMudXNlcm5hbWUsdGhpcy5wYXNzd29yZCk6dC5vcGVuKHRoaXMubWV0aG9kLHRoaXMudXJsLCEwKX1jYXRjaChlKXtyZXR1cm4gdGhpcy5jYWxsYmFjayhlKX1pZih0aGlzLl93aXRoQ3JlZGVudGlhbHMmJih0LndpdGhDcmVkZW50aWFscz0hMCksIXRoaXMuX2Zvcm1EYXRhJiZcIkdFVFwiIT09dGhpcy5tZXRob2QmJlwiSEVBRFwiIT09dGhpcy5tZXRob2QmJlwic3RyaW5nXCIhPXR5cGVvZiByJiYhdGhpcy5faXNIb3N0KHIpKXt2YXIgbz10aGlzLl9oZWFkZXJbXCJjb250ZW50LXR5cGVcIl0scz10aGlzLl9zZXJpYWxpemVyfHxmLnNlcmlhbGl6ZVtvP28uc3BsaXQoXCI7XCIpWzBdOlwiXCJdOyFzJiZiKG8pJiYocz1mLnNlcmlhbGl6ZVtcImFwcGxpY2F0aW9uL2pzb25cIl0pLHMmJihyPXMocikpfWZvcih2YXIgaSBpbiB0aGlzLmhlYWRlciludWxsIT09dGhpcy5oZWFkZXJbaV0mJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmhlYWRlcixpKSYmdC5zZXRSZXF1ZXN0SGVhZGVyKGksdGhpcy5oZWFkZXJbaV0pO3RoaXMuX3Jlc3BvbnNlVHlwZSYmKHQucmVzcG9uc2VUeXBlPXRoaXMuX3Jlc3BvbnNlVHlwZSksdGhpcy5lbWl0KFwicmVxdWVzdFwiLHRoaXMpLHQuc2VuZCh2b2lkIDA9PT1yP251bGw6cil9LGYuYWdlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGh9LFtcIkdFVFwiLFwiUE9TVFwiLFwiT1BUSU9OU1wiLFwiUEFUQ0hcIixcIlBVVFwiLFwiREVMRVRFXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe2gucHJvdG90eXBlW2UudG9Mb3dlckNhc2UoKV09ZnVuY3Rpb24odCxyKXt2YXIgbj1uZXcgZi5SZXF1ZXN0KGUsdCk7cmV0dXJuIHRoaXMuX3NldERlZmF1bHRzKG4pLHImJm4uZW5kKHIpLG59fSkpLGgucHJvdG90eXBlLmRlbD1oLnByb3RvdHlwZS5kZWxldGUsZi5nZXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJHRVRcIixlKTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYocj10LHQ9bnVsbCksdCYmbi5xdWVyeSh0KSxyJiZuLmVuZChyKSxufSxmLmhlYWQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJIRUFEXCIsZSk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKHI9dCx0PW51bGwpLHQmJm4ucXVlcnkodCksciYmbi5lbmQociksbn0sZi5vcHRpb25zPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1mKFwiT1BUSU9OU1wiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5kZWw9dixmLmRlbGV0ZT12LGYucGF0Y2g9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJQQVRDSFwiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5wb3N0PWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1mKFwiUE9TVFwiLGUpO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihyPXQsdD1udWxsKSx0JiZuLnNlbmQodCksciYmbi5lbmQociksbn0sZi5wdXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWYoXCJQVVRcIixlKTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYocj10LHQ9bnVsbCksdCYmbi5zZW5kKHQpLHImJm4uZW5kKHIpLG59fSwxOTYwOmU9PntcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KGUpe3JldHVybih0PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPT1lJiZcIm9iamVjdFwiPT09dChlKX19LDQyODc6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuKG49XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfXZhciBvPXIoMTk2MCk7ZnVuY3Rpb24gcyhlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gcy5wcm90b3R5cGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMucHJvdG90eXBlLHQpJiYoZVt0XT1zLnByb3RvdHlwZVt0XSk7cmV0dXJuIGV9KGUpfWUuZXhwb3J0cz1zLHMucHJvdG90eXBlLmNsZWFyVGltZW91dD1mdW5jdGlvbigpe3JldHVybiBjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpLGNsZWFyVGltZW91dCh0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lciksY2xlYXJUaW1lb3V0KHRoaXMuX3VwbG9hZFRpbWVvdXRUaW1lciksZGVsZXRlIHRoaXMuX3RpbWVyLGRlbGV0ZSB0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lcixkZWxldGUgdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyLHRoaXN9LHMucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9wYXJzZXI9ZSx0aGlzfSxzLnByb3RvdHlwZS5yZXNwb25zZVR5cGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3Jlc3BvbnNlVHlwZT1lLHRoaXN9LHMucHJvdG90eXBlLnNlcmlhbGl6ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2VyaWFsaXplcj1lLHRoaXN9LHMucHJvdG90eXBlLnRpbWVvdXQ9ZnVuY3Rpb24oZSl7aWYoIWV8fFwib2JqZWN0XCIhPT1uKGUpKXJldHVybiB0aGlzLl90aW1lb3V0PWUsdGhpcy5fcmVzcG9uc2VUaW1lb3V0PTAsdGhpcy5fdXBsb2FkVGltZW91dD0wLHRoaXM7Zm9yKHZhciB0IGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCkpc3dpdGNoKHQpe2Nhc2VcImRlYWRsaW5lXCI6dGhpcy5fdGltZW91dD1lLmRlYWRsaW5lO2JyZWFrO2Nhc2VcInJlc3BvbnNlXCI6dGhpcy5fcmVzcG9uc2VUaW1lb3V0PWUucmVzcG9uc2U7YnJlYWs7Y2FzZVwidXBsb2FkXCI6dGhpcy5fdXBsb2FkVGltZW91dD1lLnVwbG9hZDticmVhaztkZWZhdWx0OmNvbnNvbGUud2FybihcIlVua25vd24gdGltZW91dCBvcHRpb25cIix0KX1yZXR1cm4gdGhpc30scy5wcm90b3R5cGUucmV0cnk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMCE9PWFyZ3VtZW50cy5sZW5ndGgmJiEwIT09ZXx8KGU9MSksZTw9MCYmKGU9MCksdGhpcy5fbWF4UmV0cmllcz1lLHRoaXMuX3JldHJpZXM9MCx0aGlzLl9yZXRyeUNhbGxiYWNrPXQsdGhpc307dmFyIGk9bmV3IFNldChbXCJFVElNRURPVVRcIixcIkVDT05OUkVTRVRcIixcIkVBRERSSU5VU0VcIixcIkVDT05OUkVGVVNFRFwiLFwiRVBJUEVcIixcIkVOT1RGT1VORFwiLFwiRU5FVFVOUkVBQ0hcIixcIkVBSV9BR0FJTlwiXSksYT1uZXcgU2V0KFs0MDgsNDEzLDQyOSw1MDAsNTAyLDUwMyw1MDQsNTIxLDUyMiw1MjRdKTtzLnByb3RvdHlwZS5fc2hvdWxkUmV0cnk9ZnVuY3Rpb24oZSx0KXtpZighdGhpcy5fbWF4UmV0cmllc3x8dGhpcy5fcmV0cmllcysrPj10aGlzLl9tYXhSZXRyaWVzKXJldHVybiExO2lmKHRoaXMuX3JldHJ5Q2FsbGJhY2spdHJ5e3ZhciByPXRoaXMuX3JldHJ5Q2FsbGJhY2soZSx0KTtpZighMD09PXIpcmV0dXJuITA7aWYoITE9PT1yKXJldHVybiExfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9aWYodCYmdC5zdGF0dXMmJmEuaGFzKHQuc3RhdHVzKSlyZXR1cm4hMDtpZihlKXtpZihlLmNvZGUmJmkuaGFzKGUuY29kZSkpcmV0dXJuITA7aWYoZS50aW1lb3V0JiZcIkVDT05OQUJPUlRFRFwiPT09ZS5jb2RlKXJldHVybiEwO2lmKGUuY3Jvc3NEb21haW4pcmV0dXJuITB9cmV0dXJuITF9LHMucHJvdG90eXBlLl9yZXRyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNsZWFyVGltZW91dCgpLHRoaXMucmVxJiYodGhpcy5yZXE9bnVsbCx0aGlzLnJlcT10aGlzLnJlcXVlc3QoKSksdGhpcy5fYWJvcnRlZD0hMSx0aGlzLnRpbWVkb3V0PSExLHRoaXMudGltZWRvdXRFcnJvcj1udWxsLHRoaXMuX2VuZCgpfSxzLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZighdGhpcy5fZnVsbGZpbGxlZFByb21pc2Upe3ZhciBuPXRoaXM7dGhpcy5fZW5kQ2FsbGVkJiZjb25zb2xlLndhcm4oXCJXYXJuaW5nOiBzdXBlcmFnZW50IHJlcXVlc3Qgd2FzIHNlbnQgdHdpY2UsIGJlY2F1c2UgYm90aCAuZW5kKCkgYW5kIC50aGVuKCkgd2VyZSBjYWxsZWQuIE5ldmVyIGNhbGwgLmVuZCgpIGlmIHlvdSB1c2UgcHJvbWlzZXNcIiksdGhpcy5fZnVsbGZpbGxlZFByb21pc2U9bmV3IFByb21pc2UoKGZ1bmN0aW9uKGUsdCl7bi5vbihcImFib3J0XCIsKGZ1bmN0aW9uKCl7aWYoIShyLl9tYXhSZXRyaWVzJiZyLl9tYXhSZXRyaWVzPnIuX3JldHJpZXMpKWlmKHIudGltZWRvdXQmJnIudGltZWRvdXRFcnJvcil0KHIudGltZWRvdXRFcnJvcik7ZWxzZXt2YXIgZT1uZXcgRXJyb3IoXCJBYm9ydGVkXCIpO2UuY29kZT1cIkFCT1JURURcIixlLnN0YXR1cz1yLnN0YXR1cyxlLm1ldGhvZD1yLm1ldGhvZCxlLnVybD1yLnVybCx0KGUpfX0pKSxuLmVuZCgoZnVuY3Rpb24ocixuKXtyP3Qocik6ZShuKX0pKX0pKX1yZXR1cm4gdGhpcy5fZnVsbGZpbGxlZFByb21pc2UudGhlbihlLHQpfSxzLnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxlKX0scy5wcm90b3R5cGUudXNlPWZ1bmN0aW9uKGUpe3JldHVybiBlKHRoaXMpLHRoaXN9LHMucHJvdG90eXBlLm9rPWZ1bmN0aW9uKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKFwiQ2FsbGJhY2sgcmVxdWlyZWRcIik7cmV0dXJuIHRoaXMuX29rQ2FsbGJhY2s9ZSx0aGlzfSxzLnByb3RvdHlwZS5faXNSZXNwb25zZU9LPWZ1bmN0aW9uKGUpe3JldHVybiEhZSYmKHRoaXMuX29rQ2FsbGJhY2s/dGhpcy5fb2tDYWxsYmFjayhlKTplLnN0YXR1cz49MjAwJiZlLnN0YXR1czwzMDApfSxzLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2hlYWRlcltlLnRvTG93ZXJDYXNlKCldfSxzLnByb3RvdHlwZS5nZXRIZWFkZXI9cy5wcm90b3R5cGUuZ2V0LHMucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQpe2lmKG8oZSkpe2Zvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiZ0aGlzLnNldChyLGVbcl0pO3JldHVybiB0aGlzfXJldHVybiB0aGlzLl9oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXT10LHRoaXMuaGVhZGVyW2VdPXQsdGhpc30scy5wcm90b3R5cGUudW5zZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGRlbGV0ZSB0aGlzLl9oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXSxkZWxldGUgdGhpcy5oZWFkZXJbZV0sdGhpc30scy5wcm90b3R5cGUuZmllbGQ9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIi5maWVsZChuYW1lLCB2YWwpIG5hbWUgY2FuIG5vdCBiZSBlbXB0eVwiKTtpZih0aGlzLl9kYXRhKXRocm93IG5ldyBFcnJvcihcIi5maWVsZCgpIGNhbid0IGJlIHVzZWQgaWYgLnNlbmQoKSBpcyB1c2VkLiBQbGVhc2UgdXNlIG9ubHkgLnNlbmQoKSBvciBvbmx5IC5maWVsZCgpICYgLmF0dGFjaCgpXCIpO2lmKG8oZSkpe2Zvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiZ0aGlzLmZpZWxkKHIsZVtyXSk7cmV0dXJuIHRoaXN9aWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKHZhciBuIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJnRoaXMuZmllbGQoZSx0W25dKTtyZXR1cm4gdGhpc31pZihudWxsPT10KXRocm93IG5ldyBFcnJvcihcIi5maWVsZChuYW1lLCB2YWwpIHZhbCBjYW4gbm90IGJlIGVtcHR5XCIpO3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdCYmKHQ9U3RyaW5nKHQpKSx0aGlzLl9nZXRGb3JtRGF0YSgpLmFwcGVuZChlLHQpLHRoaXN9LHMucHJvdG90eXBlLmFib3J0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Fib3J0ZWR8fCh0aGlzLl9hYm9ydGVkPSEwLHRoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpLHRoaXMucmVxJiZ0aGlzLnJlcS5hYm9ydCgpLHRoaXMuY2xlYXJUaW1lb3V0KCksdGhpcy5lbWl0KFwiYWJvcnRcIikpLHRoaXN9LHMucHJvdG90eXBlLl9hdXRoPWZ1bmN0aW9uKGUsdCxyLG4pe3N3aXRjaChyLnR5cGUpe2Nhc2VcImJhc2ljXCI6dGhpcy5zZXQoXCJBdXRob3JpemF0aW9uXCIsXCJCYXNpYyBcIi5jb25jYXQobihcIlwiLmNvbmNhdChlLFwiOlwiKS5jb25jYXQodCkpKSk7YnJlYWs7Y2FzZVwiYXV0b1wiOnRoaXMudXNlcm5hbWU9ZSx0aGlzLnBhc3N3b3JkPXQ7YnJlYWs7Y2FzZVwiYmVhcmVyXCI6dGhpcy5zZXQoXCJBdXRob3JpemF0aW9uXCIsXCJCZWFyZXIgXCIuY29uY2F0KGUpKX1yZXR1cm4gdGhpc30scy5wcm90b3R5cGUud2l0aENyZWRlbnRpYWxzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMCksdGhpcy5fd2l0aENyZWRlbnRpYWxzPWUsdGhpc30scy5wcm90b3R5cGUucmVkaXJlY3RzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9tYXhSZWRpcmVjdHM9ZSx0aGlzfSxzLnByb3RvdHlwZS5tYXhSZXNwb25zZVNpemU9ZnVuY3Rpb24oZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXJndW1lbnRcIik7cmV0dXJuIHRoaXMuX21heFJlc3BvbnNlU2l6ZT1lLHRoaXN9LHMucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybnttZXRob2Q6dGhpcy5tZXRob2QsdXJsOnRoaXMudXJsLGRhdGE6dGhpcy5fZGF0YSxoZWFkZXJzOnRoaXMuX2hlYWRlcn19LHMucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKSxyPXRoaXMuX2hlYWRlcltcImNvbnRlbnQtdHlwZVwiXTtpZih0aGlzLl9mb3JtRGF0YSl0aHJvdyBuZXcgRXJyb3IoXCIuc2VuZCgpIGNhbid0IGJlIHVzZWQgaWYgLmF0dGFjaCgpIG9yIC5maWVsZCgpIGlzIHVzZWQuIFBsZWFzZSB1c2Ugb25seSAuc2VuZCgpIG9yIG9ubHkgLmZpZWxkKCkgJiAuYXR0YWNoKClcIik7aWYodCYmIXRoaXMuX2RhdGEpQXJyYXkuaXNBcnJheShlKT90aGlzLl9kYXRhPVtdOnRoaXMuX2lzSG9zdChlKXx8KHRoaXMuX2RhdGE9e30pO2Vsc2UgaWYoZSYmdGhpcy5fZGF0YSYmdGhpcy5faXNIb3N0KHRoaXMuX2RhdGEpKXRocm93IG5ldyBFcnJvcihcIkNhbid0IG1lcmdlIHRoZXNlIHNlbmQgY2FsbHNcIik7aWYodCYmbyh0aGlzLl9kYXRhKSlmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRoaXMuX2RhdGFbbl09ZVtuXSk7ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBlPyhyfHx0aGlzLnR5cGUoXCJmb3JtXCIpLChyPXRoaXMuX2hlYWRlcltcImNvbnRlbnQtdHlwZVwiXSkmJihyPXIudG9Mb3dlckNhc2UoKS50cmltKCkpLHRoaXMuX2RhdGE9XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIj09PXI/dGhpcy5fZGF0YT9cIlwiLmNvbmNhdCh0aGlzLl9kYXRhLFwiJlwiKS5jb25jYXQoZSk6ZToodGhpcy5fZGF0YXx8XCJcIikrZSk6dGhpcy5fZGF0YT1lO3JldHVybiF0fHx0aGlzLl9pc0hvc3QoZSl8fHJ8fHRoaXMudHlwZShcImpzb25cIiksdGhpc30scy5wcm90b3R5cGUuc29ydFF1ZXJ5PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9zb3J0PXZvaWQgMD09PWV8fGUsdGhpc30scy5wcm90b3R5cGUuX2ZpbmFsaXplUXVlcnlTdHJpbmc9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9xdWVyeS5qb2luKFwiJlwiKTtpZihlJiYodGhpcy51cmwrPSh0aGlzLnVybC5pbmNsdWRlcyhcIj9cIik/XCImXCI6XCI/XCIpK2UpLHRoaXMuX3F1ZXJ5Lmxlbmd0aD0wLHRoaXMuX3NvcnQpe3ZhciB0PXRoaXMudXJsLmluZGV4T2YoXCI/XCIpO2lmKHQ+PTApe3ZhciByPXRoaXMudXJsLnNsaWNlKHQrMSkuc3BsaXQoXCImXCIpO1wiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX3NvcnQ/ci5zb3J0KHRoaXMuX3NvcnQpOnIuc29ydCgpLHRoaXMudXJsPXRoaXMudXJsLnNsaWNlKDAsdCkrXCI/XCIrci5qb2luKFwiJlwiKX19fSxzLnByb3RvdHlwZS5fYXBwZW5kUXVlcnlTdHJpbmc9ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oXCJVbnN1cHBvcnRlZFwiKX0scy5wcm90b3R5cGUuX3RpbWVvdXRFcnJvcj1mdW5jdGlvbihlLHQscil7aWYoIXRoaXMuX2Fib3J0ZWQpe3ZhciBuPW5ldyBFcnJvcihcIlwiLmNvbmNhdChlK3QsXCJtcyBleGNlZWRlZFwiKSk7bi50aW1lb3V0PXQsbi5jb2RlPVwiRUNPTk5BQk9SVEVEXCIsbi5lcnJubz1yLHRoaXMudGltZWRvdXQ9ITAsdGhpcy50aW1lZG91dEVycm9yPW4sdGhpcy5hYm9ydCgpLHRoaXMuY2FsbGJhY2sobil9fSxzLnByb3RvdHlwZS5fc2V0VGltZW91dHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX3RpbWVvdXQmJiF0aGlzLl90aW1lciYmKHRoaXMuX3RpbWVyPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5fdGltZW91dEVycm9yKFwiVGltZW91dCBvZiBcIixlLl90aW1lb3V0LFwiRVRJTUVcIil9KSx0aGlzLl90aW1lb3V0KSksdGhpcy5fcmVzcG9uc2VUaW1lb3V0JiYhdGhpcy5fcmVzcG9uc2VUaW1lb3V0VGltZXImJih0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lcj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuX3RpbWVvdXRFcnJvcihcIlJlc3BvbnNlIHRpbWVvdXQgb2YgXCIsZS5fcmVzcG9uc2VUaW1lb3V0LFwiRVRJTUVET1VUXCIpfSksdGhpcy5fcmVzcG9uc2VUaW1lb3V0KSl9fSw5Njk6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuPXIoMzA5NCk7ZnVuY3Rpb24gbyhlKXtpZihlKXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gby5wcm90b3R5cGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8ucHJvdG90eXBlLHQpJiYoZVt0XT1vLnByb3RvdHlwZVt0XSk7cmV0dXJuIGV9KGUpfWUuZXhwb3J0cz1vLG8ucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5oZWFkZXJbZS50b0xvd2VyQ2FzZSgpXX0sby5wcm90b3R5cGUuX3NldEhlYWRlclByb3BlcnRpZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVtcImNvbnRlbnQtdHlwZVwiXXx8XCJcIjt0aGlzLnR5cGU9bi50eXBlKHQpO3ZhciByPW4ucGFyYW1zKHQpO2Zvcih2YXIgbyBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLG8pJiYodGhpc1tvXT1yW29dKTt0aGlzLmxpbmtzPXt9O3RyeXtlLmxpbmsmJih0aGlzLmxpbmtzPW4ucGFyc2VMaW5rcyhlLmxpbmspKX1jYXRjaChlKXt9fSxvLnByb3RvdHlwZS5fc2V0U3RhdHVzUHJvcGVydGllcz1mdW5jdGlvbihlKXt2YXIgdD1lLzEwMHwwO3RoaXMuc3RhdHVzQ29kZT1lLHRoaXMuc3RhdHVzPXRoaXMuc3RhdHVzQ29kZSx0aGlzLnN0YXR1c1R5cGU9dCx0aGlzLmluZm89MT09PXQsdGhpcy5vaz0yPT09dCx0aGlzLnJlZGlyZWN0PTM9PT10LHRoaXMuY2xpZW50RXJyb3I9ND09PXQsdGhpcy5zZXJ2ZXJFcnJvcj01PT09dCx0aGlzLmVycm9yPSg0PT09dHx8NT09PXQpJiZ0aGlzLnRvRXJyb3IoKSx0aGlzLmNyZWF0ZWQ9MjAxPT09ZSx0aGlzLmFjY2VwdGVkPTIwMj09PWUsdGhpcy5ub0NvbnRlbnQ9MjA0PT09ZSx0aGlzLmJhZFJlcXVlc3Q9NDAwPT09ZSx0aGlzLnVuYXV0aG9yaXplZD00MDE9PT1lLHRoaXMubm90QWNjZXB0YWJsZT00MDY9PT1lLHRoaXMuZm9yYmlkZGVuPTQwMz09PWUsdGhpcy5ub3RGb3VuZD00MDQ9PT1lLHRoaXMudW5wcm9jZXNzYWJsZUVudGl0eT00MjI9PT1lfX0sMzA5NDooZSx0KT0+e1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSx0KXt2YXIgcjtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgU3ltYm9sfHxudWxsPT1lW1N5bWJvbC5pdGVyYXRvcl0pe2lmKEFycmF5LmlzQXJyYXkoZSl8fChyPWZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIG4oZSx0KTt2YXIgcj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PXImJmUuY29uc3RydWN0b3ImJihyPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PXJ8fFwiU2V0XCI9PT1yP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PXJ8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHIpP24oZSx0KTp2b2lkIDB9fShlKSl8fHQmJmUmJlwibnVtYmVyXCI9PXR5cGVvZiBlLmxlbmd0aCl7ciYmKGU9cik7dmFyIG89MCxzPWZ1bmN0aW9uKCl7fTtyZXR1cm57cyxuOmZ1bmN0aW9uKCl7cmV0dXJuIG8+PWUubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTplW28rK119fSxlOmZ1bmN0aW9uKGUpe3Rocm93IGV9LGY6c319dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfXZhciBpLGE9ITAsYz0hMTtyZXR1cm57czpmdW5jdGlvbigpe3I9ZVtTeW1ib2wuaXRlcmF0b3JdKCl9LG46ZnVuY3Rpb24oKXt2YXIgZT1yLm5leHQoKTtyZXR1cm4gYT1lLmRvbmUsZX0sZTpmdW5jdGlvbihlKXtjPSEwLGk9ZX0sZjpmdW5jdGlvbigpe3RyeXthfHxudWxsPT1yLnJldHVybnx8ci5yZXR1cm4oKX1maW5hbGx5e2lmKGMpdGhyb3cgaX19fX1mdW5jdGlvbiBuKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciByPTAsbj1uZXcgQXJyYXkodCk7cjx0O3IrKyluW3JdPWVbcl07cmV0dXJuIG59dC50eXBlPWZ1bmN0aW9uKGUpe3JldHVybiBlLnNwbGl0KC8gKjsgKi8pLnNoaWZ0KCl9LHQucGFyYW1zPWZ1bmN0aW9uKGUpe3ZhciB0LG49e30sbz1yKGUuc3BsaXQoLyAqOyAqLykpO3RyeXtmb3Ioby5zKCk7ISh0PW8ubigpKS5kb25lOyl7dmFyIHM9dC52YWx1ZS5zcGxpdCgvICo9ICovKSxpPXMuc2hpZnQoKSxhPXMuc2hpZnQoKTtpJiZhJiYobltpXT1hKX19Y2F0Y2goZSl7by5lKGUpfWZpbmFsbHl7by5mKCl9cmV0dXJuIG59LHQucGFyc2VMaW5rcz1mdW5jdGlvbihlKXt2YXIgdCxuPXt9LG89cihlLnNwbGl0KC8gKiwgKi8pKTt0cnl7Zm9yKG8ucygpOyEodD1vLm4oKSkuZG9uZTspe3ZhciBzPXQudmFsdWUuc3BsaXQoLyAqOyAqLyksaT1zWzBdLnNsaWNlKDEsLTEpO25bc1sxXS5zcGxpdCgvICo9ICovKVsxXS5zbGljZSgxLC0xKV09aX19Y2F0Y2goZSl7by5lKGUpfWZpbmFsbHl7by5mKCl9cmV0dXJuIG59LHQuY2xlYW5IZWFkZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZGVsZXRlIGVbXCJjb250ZW50LXR5cGVcIl0sZGVsZXRlIGVbXCJjb250ZW50LWxlbmd0aFwiXSxkZWxldGUgZVtcInRyYW5zZmVyLWVuY29kaW5nXCJdLGRlbGV0ZSBlLmhvc3QsdCYmKGRlbGV0ZSBlLmF1dGhvcml6YXRpb24sZGVsZXRlIGUuY29va2llKSxlfX0sNTMzNTplPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9U3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlLHI9LyUyMC9nLG49XCJSRkMzOTg2XCI7ZS5leHBvcnRzPXtkZWZhdWx0Om4sZm9ybWF0dGVyczp7UkZDMTczODpmdW5jdGlvbihlKXtyZXR1cm4gdC5jYWxsKGUscixcIitcIil9LFJGQzM5ODY6ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZyhlKX19LFJGQzE3Mzg6XCJSRkMxNzM4XCIsUkZDMzk4NjpufX0sMzA2NTooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig0MjQ2KSxvPXIoMTY4OCkscz1yKDUzMzUpO2UuZXhwb3J0cz17Zm9ybWF0czpzLHBhcnNlOm8sc3RyaW5naWZ5Om59fSwxNjg4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDQ1NjIpLG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxzPUFycmF5LmlzQXJyYXksaT17YWxsb3dEb3RzOiExLGFsbG93UHJvdG90eXBlczohMSxhbGxvd1NwYXJzZTohMSxhcnJheUxpbWl0OjIwLGNoYXJzZXQ6XCJ1dGYtOFwiLGNoYXJzZXRTZW50aW5lbDohMSxjb21tYTohMSxkZWNvZGVyOm4uZGVjb2RlLGRlbGltaXRlcjpcIiZcIixkZXB0aDo1LGlnbm9yZVF1ZXJ5UHJlZml4OiExLGludGVycHJldE51bWVyaWNFbnRpdGllczohMSxwYXJhbWV0ZXJMaW1pdDoxZTMscGFyc2VBcnJheXM6ITAscGxhaW5PYmplY3RzOiExLHN0cmljdE51bGxIYW5kbGluZzohMX0sYT1mdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC8mIyhcXGQrKTsvZywoZnVuY3Rpb24oZSx0KXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludCh0LDEwKSl9KSl9LGM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUmJnQuY29tbWEmJmUuaW5kZXhPZihcIixcIik+LTE/ZS5zcGxpdChcIixcIik6ZX0sdT1mdW5jdGlvbihlLHQscixuKXtpZihlKXt2YXIgcz1yLmFsbG93RG90cz9lLnJlcGxhY2UoL1xcLihbXi5bXSspL2csXCJbJDFdXCIpOmUsaT0vKFxcW1teW1xcXV0qXSkvZyxhPXIuZGVwdGg+MCYmLyhcXFtbXltcXF1dKl0pLy5leGVjKHMpLHU9YT9zLnNsaWNlKDAsYS5pbmRleCk6cyxsPVtdO2lmKHUpe2lmKCFyLnBsYWluT2JqZWN0cyYmby5jYWxsKE9iamVjdC5wcm90b3R5cGUsdSkmJiFyLmFsbG93UHJvdG90eXBlcylyZXR1cm47bC5wdXNoKHUpfWZvcih2YXIgaD0wO3IuZGVwdGg+MCYmbnVsbCE9PShhPWkuZXhlYyhzKSkmJmg8ci5kZXB0aDspe2lmKGgrPTEsIXIucGxhaW5PYmplY3RzJiZvLmNhbGwoT2JqZWN0LnByb3RvdHlwZSxhWzFdLnNsaWNlKDEsLTEpKSYmIXIuYWxsb3dQcm90b3R5cGVzKXJldHVybjtsLnB1c2goYVsxXSl9cmV0dXJuIGEmJmwucHVzaChcIltcIitzLnNsaWNlKGEuaW5kZXgpK1wiXVwiKSxmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG89bj90OmModCxyKSxzPWUubGVuZ3RoLTE7cz49MDstLXMpe3ZhciBpLGE9ZVtzXTtpZihcIltdXCI9PT1hJiZyLnBhcnNlQXJyYXlzKWk9W10uY29uY2F0KG8pO2Vsc2V7aT1yLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9O3ZhciB1PVwiW1wiPT09YS5jaGFyQXQoMCkmJlwiXVwiPT09YS5jaGFyQXQoYS5sZW5ndGgtMSk/YS5zbGljZSgxLC0xKTphLGw9cGFyc2VJbnQodSwxMCk7ci5wYXJzZUFycmF5c3x8XCJcIiE9PXU/IWlzTmFOKGwpJiZhIT09dSYmU3RyaW5nKGwpPT09dSYmbD49MCYmci5wYXJzZUFycmF5cyYmbDw9ci5hcnJheUxpbWl0PyhpPVtdKVtsXT1vOmlbdV09bzppPXswOm99fW89aX1yZXR1cm4gb30obCx0LHIsbil9fTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mdW5jdGlvbihlKXtpZighZSlyZXR1cm4gaTtpZihudWxsIT09ZS5kZWNvZGVyJiZ2b2lkIDAhPT1lLmRlY29kZXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuZGVjb2Rlcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVjb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi5cIik7aWYodm9pZCAwIT09ZS5jaGFyc2V0JiZcInV0Zi04XCIhPT1lLmNoYXJzZXQmJlwiaXNvLTg4NTktMVwiIT09ZS5jaGFyc2V0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgY2hhcnNldCBvcHRpb24gbXVzdCBiZSBlaXRoZXIgdXRmLTgsIGlzby04ODU5LTEsIG9yIHVuZGVmaW5lZFwiKTt2YXIgdD12b2lkIDA9PT1lLmNoYXJzZXQ/aS5jaGFyc2V0OmUuY2hhcnNldDtyZXR1cm57YWxsb3dEb3RzOnZvaWQgMD09PWUuYWxsb3dEb3RzP2kuYWxsb3dEb3RzOiEhZS5hbGxvd0RvdHMsYWxsb3dQcm90b3R5cGVzOlwiYm9vbGVhblwiPT10eXBlb2YgZS5hbGxvd1Byb3RvdHlwZXM/ZS5hbGxvd1Byb3RvdHlwZXM6aS5hbGxvd1Byb3RvdHlwZXMsYWxsb3dTcGFyc2U6XCJib29sZWFuXCI9PXR5cGVvZiBlLmFsbG93U3BhcnNlP2UuYWxsb3dTcGFyc2U6aS5hbGxvd1NwYXJzZSxhcnJheUxpbWl0OlwibnVtYmVyXCI9PXR5cGVvZiBlLmFycmF5TGltaXQ/ZS5hcnJheUxpbWl0OmkuYXJyYXlMaW1pdCxjaGFyc2V0OnQsY2hhcnNldFNlbnRpbmVsOlwiYm9vbGVhblwiPT10eXBlb2YgZS5jaGFyc2V0U2VudGluZWw/ZS5jaGFyc2V0U2VudGluZWw6aS5jaGFyc2V0U2VudGluZWwsY29tbWE6XCJib29sZWFuXCI9PXR5cGVvZiBlLmNvbW1hP2UuY29tbWE6aS5jb21tYSxkZWNvZGVyOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuZGVjb2Rlcj9lLmRlY29kZXI6aS5kZWNvZGVyLGRlbGltaXRlcjpcInN0cmluZ1wiPT10eXBlb2YgZS5kZWxpbWl0ZXJ8fG4uaXNSZWdFeHAoZS5kZWxpbWl0ZXIpP2UuZGVsaW1pdGVyOmkuZGVsaW1pdGVyLGRlcHRoOlwibnVtYmVyXCI9PXR5cGVvZiBlLmRlcHRofHwhMT09PWUuZGVwdGg/K2UuZGVwdGg6aS5kZXB0aCxpZ25vcmVRdWVyeVByZWZpeDohMD09PWUuaWdub3JlUXVlcnlQcmVmaXgsaW50ZXJwcmV0TnVtZXJpY0VudGl0aWVzOlwiYm9vbGVhblwiPT10eXBlb2YgZS5pbnRlcnByZXROdW1lcmljRW50aXRpZXM/ZS5pbnRlcnByZXROdW1lcmljRW50aXRpZXM6aS5pbnRlcnByZXROdW1lcmljRW50aXRpZXMscGFyYW1ldGVyTGltaXQ6XCJudW1iZXJcIj09dHlwZW9mIGUucGFyYW1ldGVyTGltaXQ/ZS5wYXJhbWV0ZXJMaW1pdDppLnBhcmFtZXRlckxpbWl0LHBhcnNlQXJyYXlzOiExIT09ZS5wYXJzZUFycmF5cyxwbGFpbk9iamVjdHM6XCJib29sZWFuXCI9PXR5cGVvZiBlLnBsYWluT2JqZWN0cz9lLnBsYWluT2JqZWN0czppLnBsYWluT2JqZWN0cyxzdHJpY3ROdWxsSGFuZGxpbmc6XCJib29sZWFuXCI9PXR5cGVvZiBlLnN0cmljdE51bGxIYW5kbGluZz9lLnN0cmljdE51bGxIYW5kbGluZzppLnN0cmljdE51bGxIYW5kbGluZ319KHQpO2lmKFwiXCI9PT1lfHxudWxsPT1lKXJldHVybiByLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9O2Zvcih2YXIgbD1cInN0cmluZ1wiPT10eXBlb2YgZT9mdW5jdGlvbihlLHQpe3ZhciByLHU9e30sbD10Lmlnbm9yZVF1ZXJ5UHJlZml4P2UucmVwbGFjZSgvXlxcPy8sXCJcIik6ZSxoPXQucGFyYW1ldGVyTGltaXQ9PT0xLzA/dm9pZCAwOnQucGFyYW1ldGVyTGltaXQscD1sLnNwbGl0KHQuZGVsaW1pdGVyLGgpLGY9LTEsZD10LmNoYXJzZXQ7aWYodC5jaGFyc2V0U2VudGluZWwpZm9yKHI9MDtyPHAubGVuZ3RoOysrcikwPT09cFtyXS5pbmRleE9mKFwidXRmOD1cIikmJihcInV0Zjg9JUUyJTlDJTkzXCI9PT1wW3JdP2Q9XCJ1dGYtOFwiOlwidXRmOD0lMjYlMjMxMDAwMyUzQlwiPT09cFtyXSYmKGQ9XCJpc28tODg1OS0xXCIpLGY9cixyPXAubGVuZ3RoKTtmb3Iocj0wO3I8cC5sZW5ndGg7KytyKWlmKHIhPT1mKXt2YXIgZyx5LG09cFtyXSxiPW0uaW5kZXhPZihcIl09XCIpLEE9LTE9PT1iP20uaW5kZXhPZihcIj1cIik6YisxOy0xPT09QT8oZz10LmRlY29kZXIobSxpLmRlY29kZXIsZCxcImtleVwiKSx5PXQuc3RyaWN0TnVsbEhhbmRsaW5nP251bGw6XCJcIik6KGc9dC5kZWNvZGVyKG0uc2xpY2UoMCxBKSxpLmRlY29kZXIsZCxcImtleVwiKSx5PW4ubWF5YmVNYXAoYyhtLnNsaWNlKEErMSksdCksKGZ1bmN0aW9uKGUpe3JldHVybiB0LmRlY29kZXIoZSxpLmRlY29kZXIsZCxcInZhbHVlXCIpfSkpKSx5JiZ0LmludGVycHJldE51bWVyaWNFbnRpdGllcyYmXCJpc28tODg1OS0xXCI9PT1kJiYoeT1hKHkpKSxtLmluZGV4T2YoXCJbXT1cIik+LTEmJih5PXMoeSk/W3ldOnkpLG8uY2FsbCh1LGcpP3VbZ109bi5jb21iaW5lKHVbZ10seSk6dVtnXT15fXJldHVybiB1fShlLHIpOmUsaD1yLnBsYWluT2JqZWN0cz9PYmplY3QuY3JlYXRlKG51bGwpOnt9LHA9T2JqZWN0LmtleXMobCksZj0wO2Y8cC5sZW5ndGg7KytmKXt2YXIgZD1wW2ZdLGc9dShkLGxbZF0scixcInN0cmluZ1wiPT10eXBlb2YgZSk7aD1uLm1lcmdlKGgsZyxyKX1yZXR1cm4hMD09PXIuYWxsb3dTcGFyc2U/aDpuLmNvbXBhY3QoaCl9fSw0MjQ2OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDM2ODApLG89cig0NTYyKSxzPXIoNTMzNSksaT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGE9e2JyYWNrZXRzOmZ1bmN0aW9uKGUpe3JldHVybiBlK1wiW11cIn0sY29tbWE6XCJjb21tYVwiLGluZGljZXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZStcIltcIit0K1wiXVwifSxyZXBlYXQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9fSxjPUFycmF5LmlzQXJyYXksdT1BcnJheS5wcm90b3R5cGUucHVzaCxsPWZ1bmN0aW9uKGUsdCl7dS5hcHBseShlLGModCk/dDpbdF0pfSxoPURhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nLHA9cy5kZWZhdWx0LGY9e2FkZFF1ZXJ5UHJlZml4OiExLGFsbG93RG90czohMSxjaGFyc2V0OlwidXRmLThcIixjaGFyc2V0U2VudGluZWw6ITEsZGVsaW1pdGVyOlwiJlwiLGVuY29kZTohMCxlbmNvZGVyOm8uZW5jb2RlLGVuY29kZVZhbHVlc09ubHk6ITEsZm9ybWF0OnAsZm9ybWF0dGVyOnMuZm9ybWF0dGVyc1twXSxpbmRpY2VzOiExLHNlcmlhbGl6ZURhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGguY2FsbChlKX0sc2tpcE51bGxzOiExLHN0cmljdE51bGxIYW5kbGluZzohMX0sZD1mdW5jdGlvbiBlKHQscixzLGksYSx1LGgscCxkLGcseSxtLGIsQSx3KXt2YXIgdixTPXQ7aWYody5oYXModCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJDeWNsaWMgb2JqZWN0IHZhbHVlXCIpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGg/Uz1oKHIsUyk6UyBpbnN0YW5jZW9mIERhdGU/Uz1nKFMpOlwiY29tbWFcIj09PXMmJmMoUykmJihTPW8ubWF5YmVNYXAoUywoZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEYXRlP2coZSk6ZX0pKSksbnVsbD09PVMpe2lmKGkpcmV0dXJuIHUmJiFiP3UocixmLmVuY29kZXIsQSxcImtleVwiLHkpOnI7Uz1cIlwifWlmKFwic3RyaW5nXCI9PXR5cGVvZih2PVMpfHxcIm51bWJlclwiPT10eXBlb2Ygdnx8XCJib29sZWFuXCI9PXR5cGVvZiB2fHxcInN5bWJvbFwiPT10eXBlb2Ygdnx8XCJiaWdpbnRcIj09dHlwZW9mIHZ8fG8uaXNCdWZmZXIoUykpcmV0dXJuIHU/W20oYj9yOnUocixmLmVuY29kZXIsQSxcImtleVwiLHkpKStcIj1cIittKHUoUyxmLmVuY29kZXIsQSxcInZhbHVlXCIseSkpXTpbbShyKStcIj1cIittKFN0cmluZyhTKSldO3ZhciB4LEU9W107aWYodm9pZCAwPT09UylyZXR1cm4gRTtpZihcImNvbW1hXCI9PT1zJiZjKFMpKXg9W3t2YWx1ZTpTLmxlbmd0aD4wP1Muam9pbihcIixcIil8fG51bGw6dm9pZCAwfV07ZWxzZSBpZihjKGgpKXg9aDtlbHNle3ZhciBUPU9iamVjdC5rZXlzKFMpO3g9cD9ULnNvcnQocCk6VH1mb3IodmFyIF89MDtfPHgubGVuZ3RoOysrXyl7dmFyIEI9eFtfXSxVPVwib2JqZWN0XCI9PXR5cGVvZiBCJiZ2b2lkIDAhPT1CLnZhbHVlP0IudmFsdWU6U1tCXTtpZighYXx8bnVsbCE9PVUpe3ZhciBrPWMoUyk/XCJmdW5jdGlvblwiPT10eXBlb2Ygcz9zKHIsQik6cjpyKyhkP1wiLlwiK0I6XCJbXCIrQitcIl1cIik7dy5zZXQodCwhMCk7dmFyIEk9bigpO2woRSxlKFUsayxzLGksYSx1LGgscCxkLGcseSxtLGIsQSxJKSl9fXJldHVybiBFfTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixvPWUsdT1mdW5jdGlvbihlKXtpZighZSlyZXR1cm4gZjtpZihudWxsIT09ZS5lbmNvZGVyJiZ2b2lkIDAhPT1lLmVuY29kZXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuZW5jb2Rlcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiRW5jb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi5cIik7dmFyIHQ9ZS5jaGFyc2V0fHxmLmNoYXJzZXQ7aWYodm9pZCAwIT09ZS5jaGFyc2V0JiZcInV0Zi04XCIhPT1lLmNoYXJzZXQmJlwiaXNvLTg4NTktMVwiIT09ZS5jaGFyc2V0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgY2hhcnNldCBvcHRpb24gbXVzdCBiZSBlaXRoZXIgdXRmLTgsIGlzby04ODU5LTEsIG9yIHVuZGVmaW5lZFwiKTt2YXIgcj1zLmRlZmF1bHQ7aWYodm9pZCAwIT09ZS5mb3JtYXQpe2lmKCFpLmNhbGwocy5mb3JtYXR0ZXJzLGUuZm9ybWF0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBmb3JtYXQgb3B0aW9uIHByb3ZpZGVkLlwiKTtyPWUuZm9ybWF0fXZhciBuPXMuZm9ybWF0dGVyc1tyXSxvPWYuZmlsdGVyO3JldHVybihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmZpbHRlcnx8YyhlLmZpbHRlcikpJiYobz1lLmZpbHRlcikse2FkZFF1ZXJ5UHJlZml4OlwiYm9vbGVhblwiPT10eXBlb2YgZS5hZGRRdWVyeVByZWZpeD9lLmFkZFF1ZXJ5UHJlZml4OmYuYWRkUXVlcnlQcmVmaXgsYWxsb3dEb3RzOnZvaWQgMD09PWUuYWxsb3dEb3RzP2YuYWxsb3dEb3RzOiEhZS5hbGxvd0RvdHMsY2hhcnNldDp0LGNoYXJzZXRTZW50aW5lbDpcImJvb2xlYW5cIj09dHlwZW9mIGUuY2hhcnNldFNlbnRpbmVsP2UuY2hhcnNldFNlbnRpbmVsOmYuY2hhcnNldFNlbnRpbmVsLGRlbGltaXRlcjp2b2lkIDA9PT1lLmRlbGltaXRlcj9mLmRlbGltaXRlcjplLmRlbGltaXRlcixlbmNvZGU6XCJib29sZWFuXCI9PXR5cGVvZiBlLmVuY29kZT9lLmVuY29kZTpmLmVuY29kZSxlbmNvZGVyOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuZW5jb2Rlcj9lLmVuY29kZXI6Zi5lbmNvZGVyLGVuY29kZVZhbHVlc09ubHk6XCJib29sZWFuXCI9PXR5cGVvZiBlLmVuY29kZVZhbHVlc09ubHk/ZS5lbmNvZGVWYWx1ZXNPbmx5OmYuZW5jb2RlVmFsdWVzT25seSxmaWx0ZXI6byxmb3JtYXQ6cixmb3JtYXR0ZXI6bixzZXJpYWxpemVEYXRlOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuc2VyaWFsaXplRGF0ZT9lLnNlcmlhbGl6ZURhdGU6Zi5zZXJpYWxpemVEYXRlLHNraXBOdWxsczpcImJvb2xlYW5cIj09dHlwZW9mIGUuc2tpcE51bGxzP2Uuc2tpcE51bGxzOmYuc2tpcE51bGxzLHNvcnQ6XCJmdW5jdGlvblwiPT10eXBlb2YgZS5zb3J0P2Uuc29ydDpudWxsLHN0cmljdE51bGxIYW5kbGluZzpcImJvb2xlYW5cIj09dHlwZW9mIGUuc3RyaWN0TnVsbEhhbmRsaW5nP2Uuc3RyaWN0TnVsbEhhbmRsaW5nOmYuc3RyaWN0TnVsbEhhbmRsaW5nfX0odCk7XCJmdW5jdGlvblwiPT10eXBlb2YgdS5maWx0ZXI/bz0oMCx1LmZpbHRlcikoXCJcIixvKTpjKHUuZmlsdGVyKSYmKHI9dS5maWx0ZXIpO3ZhciBoLHA9W107aWYoXCJvYmplY3RcIiE9dHlwZW9mIG98fG51bGw9PT1vKXJldHVyblwiXCI7aD10JiZ0LmFycmF5Rm9ybWF0IGluIGE/dC5hcnJheUZvcm1hdDp0JiZcImluZGljZXNcImluIHQ/dC5pbmRpY2VzP1wiaW5kaWNlc1wiOlwicmVwZWF0XCI6XCJpbmRpY2VzXCI7dmFyIGc9YVtoXTtyfHwocj1PYmplY3Qua2V5cyhvKSksdS5zb3J0JiZyLnNvcnQodS5zb3J0KTtmb3IodmFyIHk9bigpLG09MDttPHIubGVuZ3RoOysrbSl7dmFyIGI9clttXTt1LnNraXBOdWxscyYmbnVsbD09PW9bYl18fGwocCxkKG9bYl0sYixnLHUuc3RyaWN0TnVsbEhhbmRsaW5nLHUuc2tpcE51bGxzLHUuZW5jb2RlP3UuZW5jb2RlcjpudWxsLHUuZmlsdGVyLHUuc29ydCx1LmFsbG93RG90cyx1LnNlcmlhbGl6ZURhdGUsdS5mb3JtYXQsdS5mb3JtYXR0ZXIsdS5lbmNvZGVWYWx1ZXNPbmx5LHUuY2hhcnNldCx5KSl9dmFyIEE9cC5qb2luKHUuZGVsaW1pdGVyKSx3PSEwPT09dS5hZGRRdWVyeVByZWZpeD9cIj9cIjpcIlwiO3JldHVybiB1LmNoYXJzZXRTZW50aW5lbCYmKFwiaXNvLTg4NTktMVwiPT09dS5jaGFyc2V0P3crPVwidXRmOD0lMjYlMjMxMDAwMyUzQiZcIjp3Kz1cInV0Zjg9JUUyJTlDJTkzJlwiKSxBLmxlbmd0aD4wP3crQTpcIlwifX0sNDU2MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig1MzM1KSxvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscz1BcnJheS5pc0FycmF5LGk9ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8MjU2OysrdCllLnB1c2goXCIlXCIrKCh0PDE2P1wiMFwiOlwiXCIpK3QudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtyZXR1cm4gZX0oKSxhPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXQmJnQucGxhaW5PYmplY3RzP09iamVjdC5jcmVhdGUobnVsbCk6e30sbj0wO248ZS5sZW5ndGg7KytuKXZvaWQgMCE9PWVbbl0mJihyW25dPWVbbl0pO3JldHVybiByfTtlLmV4cG9ydHM9e2FycmF5VG9PYmplY3Q6YSxhc3NpZ246ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LmtleXModCkucmVkdWNlKChmdW5jdGlvbihlLHIpe3JldHVybiBlW3JdPXRbcl0sZX0pLGUpfSxjb21iaW5lOmZ1bmN0aW9uKGUsdCl7cmV0dXJuW10uY29uY2F0KGUsdCl9LGNvbXBhY3Q6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVt7b2JqOntvOmV9LHByb3A6XCJvXCJ9XSxyPVtdLG49MDtuPHQubGVuZ3RoOysrbilmb3IodmFyIG89dFtuXSxpPW8ub2JqW28ucHJvcF0sYT1PYmplY3Qua2V5cyhpKSxjPTA7YzxhLmxlbmd0aDsrK2Mpe3ZhciB1PWFbY10sbD1pW3VdO1wib2JqZWN0XCI9PXR5cGVvZiBsJiZudWxsIT09bCYmLTE9PT1yLmluZGV4T2YobCkmJih0LnB1c2goe29iajppLHByb3A6dX0pLHIucHVzaChsKSl9cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcig7ZS5sZW5ndGg+MTspe3ZhciB0PWUucG9wKCkscj10Lm9ialt0LnByb3BdO2lmKHMocikpe2Zvcih2YXIgbj1bXSxvPTA7bzxyLmxlbmd0aDsrK28pdm9pZCAwIT09cltvXSYmbi5wdXNoKHJbb10pO3Qub2JqW3QucHJvcF09bn19fSh0KSxlfSxkZWNvZGU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUucmVwbGFjZSgvXFwrL2csXCIgXCIpO2lmKFwiaXNvLTg4NTktMVwiPT09cilyZXR1cm4gbi5yZXBsYWNlKC8lWzAtOWEtZl17Mn0vZ2ksdW5lc2NhcGUpO3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KG4pfWNhdGNoKGUpe3JldHVybiBufX0sZW5jb2RlOmZ1bmN0aW9uKGUsdCxyLG8scyl7aWYoMD09PWUubGVuZ3RoKXJldHVybiBlO3ZhciBhPWU7aWYoXCJzeW1ib2xcIj09dHlwZW9mIGU/YT1TeW1ib2wucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk6XCJzdHJpbmdcIiE9dHlwZW9mIGUmJihhPVN0cmluZyhlKSksXCJpc28tODg1OS0xXCI9PT1yKXJldHVybiBlc2NhcGUoYSkucmVwbGFjZSgvJXVbMC05YS1mXXs0fS9naSwoZnVuY3Rpb24oZSl7cmV0dXJuXCIlMjYlMjNcIitwYXJzZUludChlLnNsaWNlKDIpLDE2KStcIiUzQlwifSkpO2Zvcih2YXIgYz1cIlwiLHU9MDt1PGEubGVuZ3RoOysrdSl7dmFyIGw9YS5jaGFyQ29kZUF0KHUpOzQ1PT09bHx8NDY9PT1sfHw5NT09PWx8fDEyNj09PWx8fGw+PTQ4JiZsPD01N3x8bD49NjUmJmw8PTkwfHxsPj05NyYmbDw9MTIyfHxzPT09bi5SRkMxNzM4JiYoNDA9PT1sfHw0MT09PWwpP2MrPWEuY2hhckF0KHUpOmw8MTI4P2MrPWlbbF06bDwyMDQ4P2MrPWlbMTkyfGw+PjZdK2lbMTI4fDYzJmxdOmw8NTUyOTZ8fGw+PTU3MzQ0P2MrPWlbMjI0fGw+PjEyXStpWzEyOHxsPj42JjYzXStpWzEyOHw2MyZsXToodSs9MSxsPTY1NTM2KygoMTAyMyZsKTw8MTB8MTAyMyZhLmNoYXJDb2RlQXQodSkpLGMrPWlbMjQwfGw+PjE4XStpWzEyOHxsPj4xMiY2M10raVsxMjh8bD4+NiY2M10raVsxMjh8NjMmbF0pfXJldHVybiBjfSxpc0J1ZmZlcjpmdW5jdGlvbihlKXtyZXR1cm4hKCFlfHxcIm9iamVjdFwiIT10eXBlb2YgZXx8IShlLmNvbnN0cnVjdG9yJiZlLmNvbnN0cnVjdG9yLmlzQnVmZmVyJiZlLmNvbnN0cnVjdG9yLmlzQnVmZmVyKGUpKSl9LGlzUmVnRXhwOmZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBSZWdFeHBdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LG1heWJlTWFwOmZ1bmN0aW9uKGUsdCl7aWYocyhlKSl7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rPTEpci5wdXNoKHQoZVtuXSkpO3JldHVybiByfXJldHVybiB0KGUpfSxtZXJnZTpmdW5jdGlvbiBlKHQscixuKXtpZighcilyZXR1cm4gdDtpZihcIm9iamVjdFwiIT10eXBlb2Ygcil7aWYocyh0KSl0LnB1c2gocik7ZWxzZXtpZighdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQpcmV0dXJuW3Qscl07KG4mJihuLnBsYWluT2JqZWN0c3x8bi5hbGxvd1Byb3RvdHlwZXMpfHwhby5jYWxsKE9iamVjdC5wcm90b3R5cGUscikpJiYodFtyXT0hMCl9cmV0dXJuIHR9aWYoIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0KXJldHVyblt0XS5jb25jYXQocik7dmFyIGk9dDtyZXR1cm4gcyh0KSYmIXMocikmJihpPWEodCxuKSkscyh0KSYmcyhyKT8oci5mb3JFYWNoKChmdW5jdGlvbihyLHMpe2lmKG8uY2FsbCh0LHMpKXt2YXIgaT10W3NdO2kmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiZyJiZcIm9iamVjdFwiPT10eXBlb2Ygcj90W3NdPWUoaSxyLG4pOnQucHVzaChyKX1lbHNlIHRbc109cn0pKSx0KTpPYmplY3Qua2V5cyhyKS5yZWR1Y2UoKGZ1bmN0aW9uKHQscyl7dmFyIGk9cltzXTtyZXR1cm4gby5jYWxsKHQscyk/dFtzXT1lKHRbc10saSxuKTp0W3NdPWksdH0pLGkpfX19LDc3NjU6ZnVuY3Rpb24oZSx0KXshZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9ZnVuY3Rpb24oZSl7dmFyIHQscj1uZXcgRmxvYXQ2NEFycmF5KDE2KTtpZihlKWZvcih0PTA7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfSxyPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwibm8gUFJOR1wiKX0sbj1uZXcgVWludDhBcnJheSgxNiksbz1uZXcgVWludDhBcnJheSgzMik7b1swXT05O3ZhciBzPXQoKSxpPXQoWzFdKSxhPXQoWzU2MTI5LDFdKSxjPXQoWzMwODgzLDQ5NTMsMTk5MTQsMzAxODcsNTU0NjcsMTY3MDUsMjYzNywxMTIsNTk1NDQsMzA1ODUsMTY1MDUsMzYwMzksNjUxMzksMTExMTksMjc4ODYsMjA5OTVdKSx1PXQoWzYxNzg1LDk5MDYsMzk4MjgsNjAzNzQsNDUzOTgsMzM0MTEsNTI3NCwyMjQsNTM1NTIsNjExNzEsMzMwMTAsNjU0Miw2NDc0MywyMjIzOSw1NTc3Miw5MjIyXSksbD10KFs1NDU1NCwzNjY0NSwxMTYxNiw1MTU0Miw0MjkzMCwzODE4MSw1MTA0MCwyNjkyNCw1NjQxMiw2NDk4Miw1NzkwNSw0OTMxNiwyMTUwMiw1MjU5MCwxNDAzNSw4NTUzXSksaD10KFsyNjIwMCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNF0pLHA9dChbNDExMzYsMTg5NTgsNjk1MSw1MDQxNCw1ODQ4OCw0NDMzNSw2MTUwLDEyMDk5LDU1MjA3LDE1ODY3LDE1MywxMTA4NSw1NzA5OSwyMDQxNyw5MzQ0LDExMTM5XSk7ZnVuY3Rpb24gZihlLHQscixuKXtlW3RdPXI+PjI0JjI1NSxlW3QrMV09cj4+MTYmMjU1LGVbdCsyXT1yPj44JjI1NSxlW3QrM109MjU1JnIsZVt0KzRdPW4+PjI0JjI1NSxlW3QrNV09bj4+MTYmMjU1LGVbdCs2XT1uPj44JjI1NSxlW3QrN109MjU1Jm59ZnVuY3Rpb24gZChlLHQscixuLG8pe3ZhciBzLGk9MDtmb3Iocz0wO3M8bztzKyspaXw9ZVt0K3NdXnJbbitzXTtyZXR1cm4oMSZpLTE+Pj44KS0xfWZ1bmN0aW9uIGcoZSx0LHIsbil7cmV0dXJuIGQoZSx0LHIsbiwxNil9ZnVuY3Rpb24geShlLHQscixuKXtyZXR1cm4gZChlLHQscixuLDMyKX1mdW5jdGlvbiBtKGUsdCxyLG4peyFmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIG8scz0yNTUmblswXXwoMjU1Jm5bMV0pPDw4fCgyNTUmblsyXSk8PDE2fCgyNTUmblszXSk8PDI0LGk9MjU1JnJbMF18KDI1NSZyWzFdKTw8OHwoMjU1JnJbMl0pPDwxNnwoMjU1JnJbM10pPDwyNCxhPTI1NSZyWzRdfCgyNTUmcls1XSk8PDh8KDI1NSZyWzZdKTw8MTZ8KDI1NSZyWzddKTw8MjQsYz0yNTUmcls4XXwoMjU1JnJbOV0pPDw4fCgyNTUmclsxMF0pPDwxNnwoMjU1JnJbMTFdKTw8MjQsdT0yNTUmclsxMl18KDI1NSZyWzEzXSk8PDh8KDI1NSZyWzE0XSk8PDE2fCgyNTUmclsxNV0pPDwyNCxsPTI1NSZuWzRdfCgyNTUmbls1XSk8PDh8KDI1NSZuWzZdKTw8MTZ8KDI1NSZuWzddKTw8MjQsaD0yNTUmdFswXXwoMjU1JnRbMV0pPDw4fCgyNTUmdFsyXSk8PDE2fCgyNTUmdFszXSk8PDI0LHA9MjU1JnRbNF18KDI1NSZ0WzVdKTw8OHwoMjU1JnRbNl0pPDwxNnwoMjU1JnRbN10pPDwyNCxmPTI1NSZ0WzhdfCgyNTUmdFs5XSk8PDh8KDI1NSZ0WzEwXSk8PDE2fCgyNTUmdFsxMV0pPDwyNCxkPTI1NSZ0WzEyXXwoMjU1JnRbMTNdKTw8OHwoMjU1JnRbMTRdKTw8MTZ8KDI1NSZ0WzE1XSk8PDI0LGc9MjU1Jm5bOF18KDI1NSZuWzldKTw8OHwoMjU1Jm5bMTBdKTw8MTZ8KDI1NSZuWzExXSk8PDI0LHk9MjU1JnJbMTZdfCgyNTUmclsxN10pPDw4fCgyNTUmclsxOF0pPDwxNnwoMjU1JnJbMTldKTw8MjQsbT0yNTUmclsyMF18KDI1NSZyWzIxXSk8PDh8KDI1NSZyWzIyXSk8PDE2fCgyNTUmclsyM10pPDwyNCxiPTI1NSZyWzI0XXwoMjU1JnJbMjVdKTw8OHwoMjU1JnJbMjZdKTw8MTZ8KDI1NSZyWzI3XSk8PDI0LEE9MjU1JnJbMjhdfCgyNTUmclsyOV0pPDw4fCgyNTUmclszMF0pPDwxNnwoMjU1JnJbMzFdKTw8MjQsdz0yNTUmblsxMl18KDI1NSZuWzEzXSk8PDh8KDI1NSZuWzE0XSk8PDE2fCgyNTUmblsxNV0pPDwyNCx2PXMsUz1pLHg9YSxFPWMsVD11LF89bCxCPWgsVT1wLGs9ZixJPWQsQz1nLFI9eSxPPW0sRD1iLE49QSxQPXcsTD0wO0w8MjA7TCs9Mil2Xj0obz0oT149KG89KGtePShvPShUXj0obz12K098MCk8PDd8bz4+PjI1KSt2fDApPDw5fG8+Pj4yMykrVHwwKTw8MTN8bz4+PjE5KStrfDApPDwxOHxvPj4+MTQsX149KG89KFNePShvPShEXj0obz0oSV49KG89XytTfDApPDw3fG8+Pj4yNSkrX3wwKTw8OXxvPj4+MjMpK0l8MCk8PDEzfG8+Pj4xOSkrRHwwKTw8MTh8bz4+PjE0LENePShvPShCXj0obz0oeF49KG89KE5ePShvPUMrQnwwKTw8N3xvPj4+MjUpK0N8MCk8PDl8bz4+PjIzKStOfDApPDwxM3xvPj4+MTkpK3h8MCk8PDE4fG8+Pj4xNCxQXj0obz0oUl49KG89KFVePShvPShFXj0obz1QK1J8MCk8PDd8bz4+PjI1KStQfDApPDw5fG8+Pj4yMykrRXwwKTw8MTN8bz4+PjE5KStVfDApPDwxOHxvPj4+MTQsdl49KG89KEVePShvPSh4Xj0obz0oU149KG89ditFfDApPDw3fG8+Pj4yNSkrdnwwKTw8OXxvPj4+MjMpK1N8MCk8PDEzfG8+Pj4xOSkreHwwKTw8MTh8bz4+PjE0LF9ePShvPShUXj0obz0oVV49KG89KEJePShvPV8rVHwwKTw8N3xvPj4+MjUpK198MCk8PDl8bz4+PjIzKStCfDApPDwxM3xvPj4+MTkpK1V8MCk8PDE4fG8+Pj4xNCxDXj0obz0oSV49KG89KGtePShvPShSXj0obz1DK0l8MCk8PDd8bz4+PjI1KStDfDApPDw5fG8+Pj4yMykrUnwwKTw8MTN8bz4+PjE5KStrfDApPDwxOHxvPj4+MTQsUF49KG89KE5ePShvPShEXj0obz0oT149KG89UCtOfDApPDw3fG8+Pj4yNSkrUHwwKTw8OXxvPj4+MjMpK098MCk8PDEzfG8+Pj4xOSkrRHwwKTw8MTh8bz4+PjE0O3Y9ditzfDAsUz1TK2l8MCx4PXgrYXwwLEU9RStjfDAsVD1UK3V8MCxfPV8rbHwwLEI9QitofDAsVT1VK3B8MCxrPWsrZnwwLEk9SStkfDAsQz1DK2d8MCxSPVIreXwwLE89TyttfDAsRD1EK2J8MCxOPU4rQXwwLFA9UCt3fDAsZVswXT12Pj4+MCYyNTUsZVsxXT12Pj4+OCYyNTUsZVsyXT12Pj4+MTYmMjU1LGVbM109dj4+PjI0JjI1NSxlWzRdPVM+Pj4wJjI1NSxlWzVdPVM+Pj44JjI1NSxlWzZdPVM+Pj4xNiYyNTUsZVs3XT1TPj4+MjQmMjU1LGVbOF09eD4+PjAmMjU1LGVbOV09eD4+PjgmMjU1LGVbMTBdPXg+Pj4xNiYyNTUsZVsxMV09eD4+PjI0JjI1NSxlWzEyXT1FPj4+MCYyNTUsZVsxM109RT4+PjgmMjU1LGVbMTRdPUU+Pj4xNiYyNTUsZVsxNV09RT4+PjI0JjI1NSxlWzE2XT1UPj4+MCYyNTUsZVsxN109VD4+PjgmMjU1LGVbMThdPVQ+Pj4xNiYyNTUsZVsxOV09VD4+PjI0JjI1NSxlWzIwXT1fPj4+MCYyNTUsZVsyMV09Xz4+PjgmMjU1LGVbMjJdPV8+Pj4xNiYyNTUsZVsyM109Xz4+PjI0JjI1NSxlWzI0XT1CPj4+MCYyNTUsZVsyNV09Qj4+PjgmMjU1LGVbMjZdPUI+Pj4xNiYyNTUsZVsyN109Qj4+PjI0JjI1NSxlWzI4XT1VPj4+MCYyNTUsZVsyOV09VT4+PjgmMjU1LGVbMzBdPVU+Pj4xNiYyNTUsZVszMV09VT4+PjI0JjI1NSxlWzMyXT1rPj4+MCYyNTUsZVszM109az4+PjgmMjU1LGVbMzRdPWs+Pj4xNiYyNTUsZVszNV09az4+PjI0JjI1NSxlWzM2XT1JPj4+MCYyNTUsZVszN109ST4+PjgmMjU1LGVbMzhdPUk+Pj4xNiYyNTUsZVszOV09ST4+PjI0JjI1NSxlWzQwXT1DPj4+MCYyNTUsZVs0MV09Qz4+PjgmMjU1LGVbNDJdPUM+Pj4xNiYyNTUsZVs0M109Qz4+PjI0JjI1NSxlWzQ0XT1SPj4+MCYyNTUsZVs0NV09Uj4+PjgmMjU1LGVbNDZdPVI+Pj4xNiYyNTUsZVs0N109Uj4+PjI0JjI1NSxlWzQ4XT1PPj4+MCYyNTUsZVs0OV09Tz4+PjgmMjU1LGVbNTBdPU8+Pj4xNiYyNTUsZVs1MV09Tz4+PjI0JjI1NSxlWzUyXT1EPj4+MCYyNTUsZVs1M109RD4+PjgmMjU1LGVbNTRdPUQ+Pj4xNiYyNTUsZVs1NV09RD4+PjI0JjI1NSxlWzU2XT1OPj4+MCYyNTUsZVs1N109Tj4+PjgmMjU1LGVbNThdPU4+Pj4xNiYyNTUsZVs1OV09Tj4+PjI0JjI1NSxlWzYwXT1QPj4+MCYyNTUsZVs2MV09UD4+PjgmMjU1LGVbNjJdPVA+Pj4xNiYyNTUsZVs2M109UD4+PjI0JjI1NX0oZSx0LHIsbil9ZnVuY3Rpb24gYihlLHQscixuKXshZnVuY3Rpb24oZSx0LHIsbil7Zm9yKHZhciBvLHM9MjU1Jm5bMF18KDI1NSZuWzFdKTw8OHwoMjU1Jm5bMl0pPDwxNnwoMjU1Jm5bM10pPDwyNCxpPTI1NSZyWzBdfCgyNTUmclsxXSk8PDh8KDI1NSZyWzJdKTw8MTZ8KDI1NSZyWzNdKTw8MjQsYT0yNTUmcls0XXwoMjU1JnJbNV0pPDw4fCgyNTUmcls2XSk8PDE2fCgyNTUmcls3XSk8PDI0LGM9MjU1JnJbOF18KDI1NSZyWzldKTw8OHwoMjU1JnJbMTBdKTw8MTZ8KDI1NSZyWzExXSk8PDI0LHU9MjU1JnJbMTJdfCgyNTUmclsxM10pPDw4fCgyNTUmclsxNF0pPDwxNnwoMjU1JnJbMTVdKTw8MjQsbD0yNTUmbls0XXwoMjU1Jm5bNV0pPDw4fCgyNTUmbls2XSk8PDE2fCgyNTUmbls3XSk8PDI0LGg9MjU1JnRbMF18KDI1NSZ0WzFdKTw8OHwoMjU1JnRbMl0pPDwxNnwoMjU1JnRbM10pPDwyNCxwPTI1NSZ0WzRdfCgyNTUmdFs1XSk8PDh8KDI1NSZ0WzZdKTw8MTZ8KDI1NSZ0WzddKTw8MjQsZj0yNTUmdFs4XXwoMjU1JnRbOV0pPDw4fCgyNTUmdFsxMF0pPDwxNnwoMjU1JnRbMTFdKTw8MjQsZD0yNTUmdFsxMl18KDI1NSZ0WzEzXSk8PDh8KDI1NSZ0WzE0XSk8PDE2fCgyNTUmdFsxNV0pPDwyNCxnPTI1NSZuWzhdfCgyNTUmbls5XSk8PDh8KDI1NSZuWzEwXSk8PDE2fCgyNTUmblsxMV0pPDwyNCx5PTI1NSZyWzE2XXwoMjU1JnJbMTddKTw8OHwoMjU1JnJbMThdKTw8MTZ8KDI1NSZyWzE5XSk8PDI0LG09MjU1JnJbMjBdfCgyNTUmclsyMV0pPDw4fCgyNTUmclsyMl0pPDwxNnwoMjU1JnJbMjNdKTw8MjQsYj0yNTUmclsyNF18KDI1NSZyWzI1XSk8PDh8KDI1NSZyWzI2XSk8PDE2fCgyNTUmclsyN10pPDwyNCxBPTI1NSZyWzI4XXwoMjU1JnJbMjldKTw8OHwoMjU1JnJbMzBdKTw8MTZ8KDI1NSZyWzMxXSk8PDI0LHc9MjU1Jm5bMTJdfCgyNTUmblsxM10pPDw4fCgyNTUmblsxNF0pPDwxNnwoMjU1Jm5bMTVdKTw8MjQsdj0wO3Y8MjA7dis9MilzXj0obz0obV49KG89KGZePShvPSh1Xj0obz1zK218MCk8PDd8bz4+PjI1KStzfDApPDw5fG8+Pj4yMykrdXwwKTw8MTN8bz4+PjE5KStmfDApPDwxOHxvPj4+MTQsbF49KG89KGlePShvPShiXj0obz0oZF49KG89bCtpfDApPDw3fG8+Pj4yNSkrbHwwKTw8OXxvPj4+MjMpK2R8MCk8PDEzfG8+Pj4xOSkrYnwwKTw8MTh8bz4+PjE0LGdePShvPShoXj0obz0oYV49KG89KEFePShvPWcraHwwKTw8N3xvPj4+MjUpK2d8MCk8PDl8bz4+PjIzKStBfDApPDwxM3xvPj4+MTkpK2F8MCk8PDE4fG8+Pj4xNCx3Xj0obz0oeV49KG89KHBePShvPShjXj0obz13K3l8MCk8PDd8bz4+PjI1KSt3fDApPDw5fG8+Pj4yMykrY3wwKTw8MTN8bz4+PjE5KStwfDApPDwxOHxvPj4+MTQsc149KG89KGNePShvPShhXj0obz0oaV49KG89cytjfDApPDw3fG8+Pj4yNSkrc3wwKTw8OXxvPj4+MjMpK2l8MCk8PDEzfG8+Pj4xOSkrYXwwKTw8MTh8bz4+PjE0LGxePShvPSh1Xj0obz0ocF49KG89KGhePShvPWwrdXwwKTw8N3xvPj4+MjUpK2x8MCk8PDl8bz4+PjIzKStofDApPDwxM3xvPj4+MTkpK3B8MCk8PDE4fG8+Pj4xNCxnXj0obz0oZF49KG89KGZePShvPSh5Xj0obz1nK2R8MCk8PDd8bz4+PjI1KStnfDApPDw5fG8+Pj4yMykreXwwKTw8MTN8bz4+PjE5KStmfDApPDwxOHxvPj4+MTQsd149KG89KEFePShvPShiXj0obz0obV49KG89dytBfDApPDw3fG8+Pj4yNSkrd3wwKTw8OXxvPj4+MjMpK218MCk8PDEzfG8+Pj4xOSkrYnwwKTw8MTh8bz4+PjE0O2VbMF09cz4+PjAmMjU1LGVbMV09cz4+PjgmMjU1LGVbMl09cz4+PjE2JjI1NSxlWzNdPXM+Pj4yNCYyNTUsZVs0XT1sPj4+MCYyNTUsZVs1XT1sPj4+OCYyNTUsZVs2XT1sPj4+MTYmMjU1LGVbN109bD4+PjI0JjI1NSxlWzhdPWc+Pj4wJjI1NSxlWzldPWc+Pj44JjI1NSxlWzEwXT1nPj4+MTYmMjU1LGVbMTFdPWc+Pj4yNCYyNTUsZVsxMl09dz4+PjAmMjU1LGVbMTNdPXc+Pj44JjI1NSxlWzE0XT13Pj4+MTYmMjU1LGVbMTVdPXc+Pj4yNCYyNTUsZVsxNl09aD4+PjAmMjU1LGVbMTddPWg+Pj44JjI1NSxlWzE4XT1oPj4+MTYmMjU1LGVbMTldPWg+Pj4yNCYyNTUsZVsyMF09cD4+PjAmMjU1LGVbMjFdPXA+Pj44JjI1NSxlWzIyXT1wPj4+MTYmMjU1LGVbMjNdPXA+Pj4yNCYyNTUsZVsyNF09Zj4+PjAmMjU1LGVbMjVdPWY+Pj44JjI1NSxlWzI2XT1mPj4+MTYmMjU1LGVbMjddPWY+Pj4yNCYyNTUsZVsyOF09ZD4+PjAmMjU1LGVbMjldPWQ+Pj44JjI1NSxlWzMwXT1kPj4+MTYmMjU1LGVbMzFdPWQ+Pj4yNCYyNTV9KGUsdCxyLG4pfXZhciBBPW5ldyBVaW50OEFycmF5KFsxMDEsMTIwLDExMiw5NywxMTAsMTAwLDMyLDUxLDUwLDQ1LDk4LDEyMSwxMTYsMTAxLDMyLDEwN10pO2Z1bmN0aW9uIHcoZSx0LHIsbixvLHMsaSl7dmFyIGEsYyx1PW5ldyBVaW50OEFycmF5KDE2KSxsPW5ldyBVaW50OEFycmF5KDY0KTtmb3IoYz0wO2M8MTY7YysrKXVbY109MDtmb3IoYz0wO2M8ODtjKyspdVtjXT1zW2NdO2Zvcig7bz49NjQ7KXtmb3IobShsLHUsaSxBKSxjPTA7Yzw2NDtjKyspZVt0K2NdPXJbbitjXV5sW2NdO2ZvcihhPTEsYz04O2M8MTY7YysrKWE9YSsoMjU1JnVbY10pfDAsdVtjXT0yNTUmYSxhPj4+PTg7by09NjQsdCs9NjQsbis9NjR9aWYobz4wKWZvcihtKGwsdSxpLEEpLGM9MDtjPG87YysrKWVbdCtjXT1yW24rY11ebFtjXTtyZXR1cm4gMH1mdW5jdGlvbiB2KGUsdCxyLG4sbyl7dmFyIHMsaSxhPW5ldyBVaW50OEFycmF5KDE2KSxjPW5ldyBVaW50OEFycmF5KDY0KTtmb3IoaT0wO2k8MTY7aSsrKWFbaV09MDtmb3IoaT0wO2k8ODtpKyspYVtpXT1uW2ldO2Zvcig7cj49NjQ7KXtmb3IobShjLGEsbyxBKSxpPTA7aTw2NDtpKyspZVt0K2ldPWNbaV07Zm9yKHM9MSxpPTg7aTwxNjtpKyspcz1zKygyNTUmYVtpXSl8MCxhW2ldPTI1NSZzLHM+Pj49ODtyLT02NCx0Kz02NH1pZihyPjApZm9yKG0oYyxhLG8sQSksaT0wO2k8cjtpKyspZVt0K2ldPWNbaV07cmV0dXJuIDB9ZnVuY3Rpb24gUyhlLHQscixuLG8pe3ZhciBzPW5ldyBVaW50OEFycmF5KDMyKTtiKHMsbixvLEEpO2Zvcih2YXIgaT1uZXcgVWludDhBcnJheSg4KSxhPTA7YTw4O2ErKylpW2FdPW5bYSsxNl07cmV0dXJuIHYoZSx0LHIsaSxzKX1mdW5jdGlvbiB4KGUsdCxyLG4sbyxzLGkpe3ZhciBhPW5ldyBVaW50OEFycmF5KDMyKTtiKGEscyxpLEEpO2Zvcih2YXIgYz1uZXcgVWludDhBcnJheSg4KSx1PTA7dTw4O3UrKyljW3VdPXNbdSsxNl07cmV0dXJuIHcoZSx0LHIsbixvLGMsYSl9dmFyIEU9ZnVuY3Rpb24oZSl7dmFyIHQscixuLG8scyxpLGEsYzt0aGlzLmJ1ZmZlcj1uZXcgVWludDhBcnJheSgxNiksdGhpcy5yPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5oPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5wYWQ9bmV3IFVpbnQxNkFycmF5KDgpLHRoaXMubGVmdG92ZXI9MCx0aGlzLmZpbj0wLHQ9MjU1JmVbMF18KDI1NSZlWzFdKTw8OCx0aGlzLnJbMF09ODE5MSZ0LHI9MjU1JmVbMl18KDI1NSZlWzNdKTw8OCx0aGlzLnJbMV09ODE5MSYodD4+PjEzfHI8PDMpLG49MjU1JmVbNF18KDI1NSZlWzVdKTw8OCx0aGlzLnJbMl09NzkzOSYocj4+PjEwfG48PDYpLG89MjU1JmVbNl18KDI1NSZlWzddKTw8OCx0aGlzLnJbM109ODE5MSYobj4+Pjd8bzw8OSkscz0yNTUmZVs4XXwoMjU1JmVbOV0pPDw4LHRoaXMucls0XT0yNTUmKG8+Pj40fHM8PDEyKSx0aGlzLnJbNV09cz4+PjEmODE5MCxpPTI1NSZlWzEwXXwoMjU1JmVbMTFdKTw8OCx0aGlzLnJbNl09ODE5MSYocz4+PjE0fGk8PDIpLGE9MjU1JmVbMTJdfCgyNTUmZVsxM10pPDw4LHRoaXMucls3XT04MDY1JihpPj4+MTF8YTw8NSksYz0yNTUmZVsxNF18KDI1NSZlWzE1XSk8PDgsdGhpcy5yWzhdPTgxOTEmKGE+Pj44fGM8PDgpLHRoaXMucls5XT1jPj4+NSYxMjcsdGhpcy5wYWRbMF09MjU1JmVbMTZdfCgyNTUmZVsxN10pPDw4LHRoaXMucGFkWzFdPTI1NSZlWzE4XXwoMjU1JmVbMTldKTw8OCx0aGlzLnBhZFsyXT0yNTUmZVsyMF18KDI1NSZlWzIxXSk8PDgsdGhpcy5wYWRbM109MjU1JmVbMjJdfCgyNTUmZVsyM10pPDw4LHRoaXMucGFkWzRdPTI1NSZlWzI0XXwoMjU1JmVbMjVdKTw8OCx0aGlzLnBhZFs1XT0yNTUmZVsyNl18KDI1NSZlWzI3XSk8PDgsdGhpcy5wYWRbNl09MjU1JmVbMjhdfCgyNTUmZVsyOV0pPDw4LHRoaXMucGFkWzddPTI1NSZlWzMwXXwoMjU1JmVbMzFdKTw8OH07ZnVuY3Rpb24gVChlLHQscixuLG8scyl7dmFyIGk9bmV3IEUocyk7cmV0dXJuIGkudXBkYXRlKHIsbixvKSxpLmZpbmlzaChlLHQpLDB9ZnVuY3Rpb24gXyhlLHQscixuLG8scyl7dmFyIGk9bmV3IFVpbnQ4QXJyYXkoMTYpO3JldHVybiBUKGksMCxyLG4sbyxzKSxnKGUsdCxpLDApfWZ1bmN0aW9uIEIoZSx0LHIsbixvKXt2YXIgcztpZihyPDMyKXJldHVybi0xO2Zvcih4KGUsMCx0LDAscixuLG8pLFQoZSwxNixlLDMyLHItMzIsZSkscz0wO3M8MTY7cysrKWVbc109MDtyZXR1cm4gMH1mdW5jdGlvbiBVKGUsdCxyLG4sbyl7dmFyIHMsaT1uZXcgVWludDhBcnJheSgzMik7aWYocjwzMilyZXR1cm4tMTtpZihTKGksMCwzMixuLG8pLDAhPT1fKHQsMTYsdCwzMixyLTMyLGkpKXJldHVybi0xO2Zvcih4KGUsMCx0LDAscixuLG8pLHM9MDtzPDMyO3MrKyllW3NdPTA7cmV0dXJuIDB9ZnVuY3Rpb24gayhlLHQpe3ZhciByO2ZvcihyPTA7cjwxNjtyKyspZVtyXT0wfHRbcl19ZnVuY3Rpb24gSShlKXt2YXIgdCxyLG49MTtmb3IodD0wO3Q8MTY7dCsrKXI9ZVt0XStuKzY1NTM1LG49TWF0aC5mbG9vcihyLzY1NTM2KSxlW3RdPXItNjU1MzYqbjtlWzBdKz1uLTErMzcqKG4tMSl9ZnVuY3Rpb24gQyhlLHQscil7Zm9yKHZhciBuLG89fihyLTEpLHM9MDtzPDE2O3MrKyluPW8mKGVbc11edFtzXSksZVtzXV49bix0W3NdXj1ufWZ1bmN0aW9uIFIoZSxyKXt2YXIgbixvLHMsaT10KCksYT10KCk7Zm9yKG49MDtuPDE2O24rKylhW25dPXJbbl07Zm9yKEkoYSksSShhKSxJKGEpLG89MDtvPDI7bysrKXtmb3IoaVswXT1hWzBdLTY1NTE3LG49MTtuPDE1O24rKylpW25dPWFbbl0tNjU1MzUtKGlbbi0xXT4+MTYmMSksaVtuLTFdJj02NTUzNTtpWzE1XT1hWzE1XS0zMjc2Ny0oaVsxNF0+PjE2JjEpLHM9aVsxNV0+PjE2JjEsaVsxNF0mPTY1NTM1LEMoYSxpLDEtcyl9Zm9yKG49MDtuPDE2O24rKyllWzIqbl09MjU1JmFbbl0sZVsyKm4rMV09YVtuXT4+OH1mdW5jdGlvbiBPKGUsdCl7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoMzIpLG49bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBSKHIsZSksUihuLHQpLHkociwwLG4sMCl9ZnVuY3Rpb24gRChlKXt2YXIgdD1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIFIodCxlKSwxJnRbMF19ZnVuY3Rpb24gTihlLHQpe3ZhciByO2ZvcihyPTA7cjwxNjtyKyspZVtyXT10WzIqcl0rKHRbMipyKzFdPDw4KTtlWzE1XSY9MzI3Njd9ZnVuY3Rpb24gUChlLHQscil7Zm9yKHZhciBuPTA7bjwxNjtuKyspZVtuXT10W25dK3Jbbl19ZnVuY3Rpb24gTChlLHQscil7Zm9yKHZhciBuPTA7bjwxNjtuKyspZVtuXT10W25dLXJbbl19ZnVuY3Rpb24gRihlLHQscil7dmFyIG4sbyxzPTAsaT0wLGE9MCxjPTAsdT0wLGw9MCxoPTAscD0wLGY9MCxkPTAsZz0wLHk9MCxtPTAsYj0wLEE9MCx3PTAsdj0wLFM9MCx4PTAsRT0wLFQ9MCxfPTAsQj0wLFU9MCxrPTAsST0wLEM9MCxSPTAsTz0wLEQ9MCxOPTAsUD1yWzBdLEw9clsxXSxGPXJbMl0sej1yWzNdLGo9cls0XSxNPXJbNV0sSD1yWzZdLEc9cls3XSxLPXJbOF0scT1yWzldLCQ9clsxMF0sVj1yWzExXSxXPXJbMTJdLFg9clsxM10sWT1yWzE0XSxKPXJbMTVdO3MrPShuPXRbMF0pKlAsaSs9bipMLGErPW4qRixjKz1uKnosdSs9bipqLGwrPW4qTSxoKz1uKkgscCs9bipHLGYrPW4qSyxkKz1uKnEsZys9biokLHkrPW4qVixtKz1uKlcsYis9bipYLEErPW4qWSx3Kz1uKkosaSs9KG49dFsxXSkqUCxhKz1uKkwsYys9bipGLHUrPW4qeixsKz1uKmosaCs9bipNLHArPW4qSCxmKz1uKkcsZCs9bipLLGcrPW4qcSx5Kz1uKiQsbSs9bipWLGIrPW4qVyxBKz1uKlgsdys9bipZLHYrPW4qSixhKz0obj10WzJdKSpQLGMrPW4qTCx1Kz1uKkYsbCs9bip6LGgrPW4qaixwKz1uKk0sZis9bipILGQrPW4qRyxnKz1uKksseSs9bipxLG0rPW4qJCxiKz1uKlYsQSs9bipXLHcrPW4qWCx2Kz1uKlksUys9bipKLGMrPShuPXRbM10pKlAsdSs9bipMLGwrPW4qRixoKz1uKnoscCs9bipqLGYrPW4qTSxkKz1uKkgsZys9bipHLHkrPW4qSyxtKz1uKnEsYis9biokLEErPW4qVix3Kz1uKlcsdis9bipYLFMrPW4qWSx4Kz1uKkosdSs9KG49dFs0XSkqUCxsKz1uKkwsaCs9bipGLHArPW4qeixmKz1uKmosZCs9bipNLGcrPW4qSCx5Kz1uKkcsbSs9bipLLGIrPW4qcSxBKz1uKiQsdys9bipWLHYrPW4qVyxTKz1uKlgseCs9bipZLEUrPW4qSixsKz0obj10WzVdKSpQLGgrPW4qTCxwKz1uKkYsZis9bip6LGQrPW4qaixnKz1uKk0seSs9bipILG0rPW4qRyxiKz1uKkssQSs9bipxLHcrPW4qJCx2Kz1uKlYsUys9bipXLHgrPW4qWCxFKz1uKlksVCs9bipKLGgrPShuPXRbNl0pKlAscCs9bipMLGYrPW4qRixkKz1uKnosZys9bipqLHkrPW4qTSxtKz1uKkgsYis9bipHLEErPW4qSyx3Kz1uKnEsdis9biokLFMrPW4qVix4Kz1uKlcsRSs9bipYLFQrPW4qWSxfKz1uKkoscCs9KG49dFs3XSkqUCxmKz1uKkwsZCs9bipGLGcrPW4qeix5Kz1uKmosbSs9bipNLGIrPW4qSCxBKz1uKkcsdys9bipLLHYrPW4qcSxTKz1uKiQseCs9bipWLEUrPW4qVyxUKz1uKlgsXys9bipZLEIrPW4qSixmKz0obj10WzhdKSpQLGQrPW4qTCxnKz1uKkYseSs9bip6LG0rPW4qaixiKz1uKk0sQSs9bipILHcrPW4qRyx2Kz1uKkssUys9bipxLHgrPW4qJCxFKz1uKlYsVCs9bipXLF8rPW4qWCxCKz1uKlksVSs9bipKLGQrPShuPXRbOV0pKlAsZys9bipMLHkrPW4qRixtKz1uKnosYis9bipqLEErPW4qTSx3Kz1uKkgsdis9bipHLFMrPW4qSyx4Kz1uKnEsRSs9biokLFQrPW4qVixfKz1uKlcsQis9bipYLFUrPW4qWSxrKz1uKkosZys9KG49dFsxMF0pKlAseSs9bipMLG0rPW4qRixiKz1uKnosQSs9bipqLHcrPW4qTSx2Kz1uKkgsUys9bipHLHgrPW4qSyxFKz1uKnEsVCs9biokLF8rPW4qVixCKz1uKlcsVSs9bipYLGsrPW4qWSxJKz1uKkoseSs9KG49dFsxMV0pKlAsbSs9bipMLGIrPW4qRixBKz1uKnosdys9bipqLHYrPW4qTSxTKz1uKkgseCs9bipHLEUrPW4qSyxUKz1uKnEsXys9biokLEIrPW4qVixVKz1uKlcsays9bipYLEkrPW4qWSxDKz1uKkosbSs9KG49dFsxMl0pKlAsYis9bipMLEErPW4qRix3Kz1uKnosdis9bipqLFMrPW4qTSx4Kz1uKkgsRSs9bipHLFQrPW4qSyxfKz1uKnEsQis9biokLFUrPW4qVixrKz1uKlcsSSs9bipYLEMrPW4qWSxSKz1uKkosYis9KG49dFsxM10pKlAsQSs9bipMLHcrPW4qRix2Kz1uKnosUys9bipqLHgrPW4qTSxFKz1uKkgsVCs9bipHLF8rPW4qSyxCKz1uKnEsVSs9biokLGsrPW4qVixJKz1uKlcsQys9bipYLFIrPW4qWSxPKz1uKkosQSs9KG49dFsxNF0pKlAsdys9bipMLHYrPW4qRixTKz1uKnoseCs9bipqLEUrPW4qTSxUKz1uKkgsXys9bipHLEIrPW4qSyxVKz1uKnEsays9biokLEkrPW4qVixDKz1uKlcsUis9bipYLE8rPW4qWSxEKz1uKkosdys9KG49dFsxNV0pKlAsaSs9MzgqKFMrPW4qRiksYSs9MzgqKHgrPW4qeiksYys9MzgqKEUrPW4qaiksdSs9MzgqKFQrPW4qTSksbCs9MzgqKF8rPW4qSCksaCs9MzgqKEIrPW4qRykscCs9MzgqKFUrPW4qSyksZis9MzgqKGsrPW4qcSksZCs9MzgqKEkrPW4qJCksZys9MzgqKEMrPW4qVikseSs9MzgqKFIrPW4qVyksbSs9MzgqKE8rPW4qWCksYis9MzgqKEQrPW4qWSksQSs9MzgqKE4rPW4qSikscz0obj0ocys9MzgqKHYrPW4qTCkpKyhvPTEpKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxpPShuPWkrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksYT0obj1hK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGM9KG49YytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSx1PShuPXUrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksbD0obj1sK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGg9KG49aCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxwPShuPXArbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksZj0obj1mK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGQ9KG49ZCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxnPShuPWcrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSkseT0obj15K28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLG09KG49bStvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxiPShuPWIrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksQT0obj1BK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLHc9KG49dytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxzPShuPShzKz1vLTErMzcqKG8tMSkpKyhvPTEpKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxpPShuPWkrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksYT0obj1hK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGM9KG49YytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSx1PShuPXUrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksbD0obj1sK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGg9KG49aCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxwPShuPXArbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksZj0obj1mK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLGQ9KG49ZCtvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxnPShuPWcrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSkseT0obj15K28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLG09KG49bStvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxiPShuPWIrbys2NTUzNSktNjU1MzYqKG89TWF0aC5mbG9vcihuLzY1NTM2KSksQT0obj1BK28rNjU1MzUpLTY1NTM2KihvPU1hdGguZmxvb3Iobi82NTUzNikpLHc9KG49dytvKzY1NTM1KS02NTUzNioobz1NYXRoLmZsb29yKG4vNjU1MzYpKSxzKz1vLTErMzcqKG8tMSksZVswXT1zLGVbMV09aSxlWzJdPWEsZVszXT1jLGVbNF09dSxlWzVdPWwsZVs2XT1oLGVbN109cCxlWzhdPWYsZVs5XT1kLGVbMTBdPWcsZVsxMV09eSxlWzEyXT1tLGVbMTNdPWIsZVsxNF09QSxlWzE1XT13fWZ1bmN0aW9uIHooZSx0KXtGKGUsdCx0KX1mdW5jdGlvbiBqKGUscil7dmFyIG4sbz10KCk7Zm9yKG49MDtuPDE2O24rKylvW25dPXJbbl07Zm9yKG49MjUzO24+PTA7bi0tKXoobyxvKSwyIT09biYmNCE9PW4mJkYobyxvLHIpO2ZvcihuPTA7bjwxNjtuKyspZVtuXT1vW25dfWZ1bmN0aW9uIE0oZSxyKXt2YXIgbixvPXQoKTtmb3Iobj0wO248MTY7bisrKW9bbl09cltuXTtmb3Iobj0yNTA7bj49MDtuLS0peihvLG8pLDEhPT1uJiZGKG8sbyxyKTtmb3Iobj0wO248MTY7bisrKWVbbl09b1tuXX1mdW5jdGlvbiBIKGUscixuKXt2YXIgbyxzLGk9bmV3IFVpbnQ4QXJyYXkoMzIpLGM9bmV3IEZsb2F0NjRBcnJheSg4MCksdT10KCksbD10KCksaD10KCkscD10KCksZj10KCksZD10KCk7Zm9yKHM9MDtzPDMxO3MrKylpW3NdPXJbc107Zm9yKGlbMzFdPTEyNyZyWzMxXXw2NCxpWzBdJj0yNDgsTihjLG4pLHM9MDtzPDE2O3MrKylsW3NdPWNbc10scFtzXT11W3NdPWhbc109MDtmb3IodVswXT1wWzBdPTEscz0yNTQ7cz49MDstLXMpQyh1LGwsbz1pW3M+Pj4zXT4+Pig3JnMpJjEpLEMoaCxwLG8pLFAoZix1LGgpLEwodSx1LGgpLFAoaCxsLHApLEwobCxsLHApLHoocCxmKSx6KGQsdSksRih1LGgsdSksRihoLGwsZiksUChmLHUsaCksTCh1LHUsaCkseihsLHUpLEwoaCxwLGQpLEYodSxoLGEpLFAodSx1LHApLEYoaCxoLHUpLEYodSxwLGQpLEYocCxsLGMpLHoobCxmKSxDKHUsbCxvKSxDKGgscCxvKTtmb3Iocz0wO3M8MTY7cysrKWNbcysxNl09dVtzXSxjW3MrMzJdPWhbc10sY1tzKzQ4XT1sW3NdLGNbcys2NF09cFtzXTt2YXIgZz1jLnN1YmFycmF5KDMyKSx5PWMuc3ViYXJyYXkoMTYpO3JldHVybiBqKGcsZyksRih5LHksZyksUihlLHkpLDB9ZnVuY3Rpb24gRyhlLHQpe3JldHVybiBIKGUsdCxvKX1mdW5jdGlvbiBLKGUsdCl7cmV0dXJuIHIodCwzMiksRyhlLHQpfWZ1bmN0aW9uIHEoZSx0LHIpe3ZhciBvPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gSChvLHIsdCksYihlLG4sbyxBKX1FLnByb3RvdHlwZS5ibG9ja3M9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbixvLHMsaSxhLGMsdSxsLGgscCxmLGQsZyx5LG0sYixBLHcsdixTPXRoaXMuZmluPzA6MjA0OCx4PXRoaXMuaFswXSxFPXRoaXMuaFsxXSxUPXRoaXMuaFsyXSxfPXRoaXMuaFszXSxCPXRoaXMuaFs0XSxVPXRoaXMuaFs1XSxrPXRoaXMuaFs2XSxJPXRoaXMuaFs3XSxDPXRoaXMuaFs4XSxSPXRoaXMuaFs5XSxPPXRoaXMuclswXSxEPXRoaXMuclsxXSxOPXRoaXMuclsyXSxQPXRoaXMuclszXSxMPXRoaXMucls0XSxGPXRoaXMucls1XSx6PXRoaXMucls2XSxqPXRoaXMucls3XSxNPXRoaXMucls4XSxIPXRoaXMucls5XTtyPj0xNjspcD1oPTAscCs9KHgrPTgxOTEmKG49MjU1JmVbdCswXXwoMjU1JmVbdCsxXSk8PDgpKSpPLHArPShFKz04MTkxJihuPj4+MTN8KG89MjU1JmVbdCsyXXwoMjU1JmVbdCszXSk8PDgpPDwzKSkqKDUqSCkscCs9KFQrPTgxOTEmKG8+Pj4xMHwocz0yNTUmZVt0KzRdfCgyNTUmZVt0KzVdKTw8OCk8PDYpKSooNSpNKSxwKz0oXys9ODE5MSYocz4+Pjd8KGk9MjU1JmVbdCs2XXwoMjU1JmVbdCs3XSk8PDgpPDw5KSkqKDUqaiksaD0ocCs9KEIrPTgxOTEmKGk+Pj40fChhPTI1NSZlW3QrOF18KDI1NSZlW3QrOV0pPDw4KTw8MTIpKSooNSp6KSk+Pj4xMyxwJj04MTkxLHArPShVKz1hPj4+MSY4MTkxKSooNSpGKSxwKz0oays9ODE5MSYoYT4+PjE0fChjPTI1NSZlW3QrMTBdfCgyNTUmZVt0KzExXSk8PDgpPDwyKSkqKDUqTCkscCs9KEkrPTgxOTEmKGM+Pj4xMXwodT0yNTUmZVt0KzEyXXwoMjU1JmVbdCsxM10pPDw4KTw8NSkpKig1KlApLHArPShDKz04MTkxJih1Pj4+OHwobD0yNTUmZVt0KzE0XXwoMjU1JmVbdCsxNV0pPDw4KTw8OCkpKig1Kk4pLGY9aCs9KHArPShSKz1sPj4+NXxTKSooNSpEKSk+Pj4xMyxmKz14KkQsZis9RSpPLGYrPVQqKDUqSCksZis9XyooNSpNKSxoPShmKz1CKig1KmopKT4+PjEzLGYmPTgxOTEsZis9VSooNSp6KSxmKz1rKig1KkYpLGYrPUkqKDUqTCksZis9QyooNSpQKSxoKz0oZis9UiooNSpOKSk+Pj4xMyxmJj04MTkxLGQ9aCxkKz14Kk4sZCs9RSpELGQrPVQqTyxkKz1fKig1KkgpLGg9KGQrPUIqKDUqTSkpPj4+MTMsZCY9ODE5MSxkKz1VKig1KmopLGQrPWsqKDUqeiksZCs9SSooNSpGKSxkKz1DKig1KkwpLGc9aCs9KGQrPVIqKDUqUCkpPj4+MTMsZys9eCpQLGcrPUUqTixnKz1UKkQsZys9XypPLGg9KGcrPUIqKDUqSCkpPj4+MTMsZyY9ODE5MSxnKz1VKig1Kk0pLGcrPWsqKDUqaiksZys9SSooNSp6KSxnKz1DKig1KkYpLHk9aCs9KGcrPVIqKDUqTCkpPj4+MTMseSs9eCpMLHkrPUUqUCx5Kz1UKk4seSs9XypELGg9KHkrPUIqTyk+Pj4xMyx5Jj04MTkxLHkrPVUqKDUqSCkseSs9ayooNSpNKSx5Kz1JKig1KmopLHkrPUMqKDUqeiksbT1oKz0oeSs9UiooNSpGKSk+Pj4xMyxtKz14KkYsbSs9RSpMLG0rPVQqUCxtKz1fKk4saD0obSs9QipEKT4+PjEzLG0mPTgxOTEsbSs9VSpPLG0rPWsqKDUqSCksbSs9SSooNSpNKSxtKz1DKig1KmopLGI9aCs9KG0rPVIqKDUqeikpPj4+MTMsYis9eCp6LGIrPUUqRixiKz1UKkwsYis9XypQLGg9KGIrPUIqTik+Pj4xMyxiJj04MTkxLGIrPVUqRCxiKz1rKk8sYis9SSooNSpIKSxiKz1DKig1Kk0pLEE9aCs9KGIrPVIqKDUqaikpPj4+MTMsQSs9eCpqLEErPUUqeixBKz1UKkYsQSs9XypMLGg9KEErPUIqUCk+Pj4xMyxBJj04MTkxLEErPVUqTixBKz1rKkQsQSs9SSpPLEErPUMqKDUqSCksdz1oKz0oQSs9UiooNSpNKSk+Pj4xMyx3Kz14Kk0sdys9RSpqLHcrPVQqeix3Kz1fKkYsaD0odys9QipMKT4+PjEzLHcmPTgxOTEsdys9VSpQLHcrPWsqTix3Kz1JKkQsdys9QypPLHY9aCs9KHcrPVIqKDUqSCkpPj4+MTMsdis9eCpILHYrPUUqTSx2Kz1UKmosdis9Xyp6LGg9KHYrPUIqRik+Pj4xMyx2Jj04MTkxLHYrPVUqTCx2Kz1rKlAsdis9SSpOLHYrPUMqRCx4PXA9ODE5MSYoaD0oaD0oKGgrPSh2Kz1SKk8pPj4+MTMpPDwyKStofDApKyhwJj04MTkxKXwwKSxFPWYrPWg+Pj49MTMsVD1kJj04MTkxLF89ZyY9ODE5MSxCPXkmPTgxOTEsVT1tJj04MTkxLGs9YiY9ODE5MSxJPUEmPTgxOTEsQz13Jj04MTkxLFI9diY9ODE5MSx0Kz0xNixyLT0xNjt0aGlzLmhbMF09eCx0aGlzLmhbMV09RSx0aGlzLmhbMl09VCx0aGlzLmhbM109Xyx0aGlzLmhbNF09Qix0aGlzLmhbNV09VSx0aGlzLmhbNl09ayx0aGlzLmhbN109SSx0aGlzLmhbOF09Qyx0aGlzLmhbOV09Un0sRS5wcm90b3R5cGUuZmluaXNoPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixvLHMsaT1uZXcgVWludDE2QXJyYXkoMTApO2lmKHRoaXMubGVmdG92ZXIpe2ZvcihzPXRoaXMubGVmdG92ZXIsdGhpcy5idWZmZXJbcysrXT0xO3M8MTY7cysrKXRoaXMuYnVmZmVyW3NdPTA7dGhpcy5maW49MSx0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KX1mb3Iocj10aGlzLmhbMV0+Pj4xMyx0aGlzLmhbMV0mPTgxOTEscz0yO3M8MTA7cysrKXRoaXMuaFtzXSs9cixyPXRoaXMuaFtzXT4+PjEzLHRoaXMuaFtzXSY9ODE5MTtmb3IodGhpcy5oWzBdKz01KnIscj10aGlzLmhbMF0+Pj4xMyx0aGlzLmhbMF0mPTgxOTEsdGhpcy5oWzFdKz1yLHI9dGhpcy5oWzFdPj4+MTMsdGhpcy5oWzFdJj04MTkxLHRoaXMuaFsyXSs9cixpWzBdPXRoaXMuaFswXSs1LHI9aVswXT4+PjEzLGlbMF0mPTgxOTEscz0xO3M8MTA7cysrKWlbc109dGhpcy5oW3NdK3Iscj1pW3NdPj4+MTMsaVtzXSY9ODE5MTtmb3IoaVs5XS09ODE5MixuPSgxXnIpLTEscz0wO3M8MTA7cysrKWlbc10mPW47Zm9yKG49fm4scz0wO3M8MTA7cysrKXRoaXMuaFtzXT10aGlzLmhbc10mbnxpW3NdO2Zvcih0aGlzLmhbMF09NjU1MzUmKHRoaXMuaFswXXx0aGlzLmhbMV08PDEzKSx0aGlzLmhbMV09NjU1MzUmKHRoaXMuaFsxXT4+PjN8dGhpcy5oWzJdPDwxMCksdGhpcy5oWzJdPTY1NTM1Jih0aGlzLmhbMl0+Pj42fHRoaXMuaFszXTw8NyksdGhpcy5oWzNdPTY1NTM1Jih0aGlzLmhbM10+Pj45fHRoaXMuaFs0XTw8NCksdGhpcy5oWzRdPTY1NTM1Jih0aGlzLmhbNF0+Pj4xMnx0aGlzLmhbNV08PDF8dGhpcy5oWzZdPDwxNCksdGhpcy5oWzVdPTY1NTM1Jih0aGlzLmhbNl0+Pj4yfHRoaXMuaFs3XTw8MTEpLHRoaXMuaFs2XT02NTUzNSYodGhpcy5oWzddPj4+NXx0aGlzLmhbOF08PDgpLHRoaXMuaFs3XT02NTUzNSYodGhpcy5oWzhdPj4+OHx0aGlzLmhbOV08PDUpLG89dGhpcy5oWzBdK3RoaXMucGFkWzBdLHRoaXMuaFswXT02NTUzNSZvLHM9MTtzPDg7cysrKW89KHRoaXMuaFtzXSt0aGlzLnBhZFtzXXwwKSsobz4+PjE2KXwwLHRoaXMuaFtzXT02NTUzNSZvO2VbdCswXT10aGlzLmhbMF0+Pj4wJjI1NSxlW3QrMV09dGhpcy5oWzBdPj4+OCYyNTUsZVt0KzJdPXRoaXMuaFsxXT4+PjAmMjU1LGVbdCszXT10aGlzLmhbMV0+Pj44JjI1NSxlW3QrNF09dGhpcy5oWzJdPj4+MCYyNTUsZVt0KzVdPXRoaXMuaFsyXT4+PjgmMjU1LGVbdCs2XT10aGlzLmhbM10+Pj4wJjI1NSxlW3QrN109dGhpcy5oWzNdPj4+OCYyNTUsZVt0KzhdPXRoaXMuaFs0XT4+PjAmMjU1LGVbdCs5XT10aGlzLmhbNF0+Pj44JjI1NSxlW3QrMTBdPXRoaXMuaFs1XT4+PjAmMjU1LGVbdCsxMV09dGhpcy5oWzVdPj4+OCYyNTUsZVt0KzEyXT10aGlzLmhbNl0+Pj4wJjI1NSxlW3QrMTNdPXRoaXMuaFs2XT4+PjgmMjU1LGVbdCsxNF09dGhpcy5oWzddPj4+MCYyNTUsZVt0KzE1XT10aGlzLmhbN10+Pj44JjI1NX0sRS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvO2lmKHRoaXMubGVmdG92ZXIpe2Zvcigobz0xNi10aGlzLmxlZnRvdmVyKT5yJiYobz1yKSxuPTA7bjxvO24rKyl0aGlzLmJ1ZmZlclt0aGlzLmxlZnRvdmVyK25dPWVbdCtuXTtpZihyLT1vLHQrPW8sdGhpcy5sZWZ0b3Zlcis9byx0aGlzLmxlZnRvdmVyPDE2KXJldHVybjt0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KSx0aGlzLmxlZnRvdmVyPTB9aWYocj49MTYmJihvPXItciUxNix0aGlzLmJsb2NrcyhlLHQsbyksdCs9byxyLT1vKSxyKXtmb3Iobj0wO248cjtuKyspdGhpcy5idWZmZXJbdGhpcy5sZWZ0b3ZlcituXT1lW3Qrbl07dGhpcy5sZWZ0b3Zlcis9cn19O3ZhciAkPUIsVj1VLFc9WzExMTYzNTI0MDgsMzYwOTc2NzQ1OCwxODk5NDQ3NDQxLDYwMjg5MTcyNSwzMDQ5MzIzNDcxLDM5NjQ0ODQzOTksMzkyMTAwOTU3MywyMTczMjk1NTQ4LDk2MTk4NzE2Myw0MDgxNjI4NDcyLDE1MDg5NzA5OTMsMzA1MzgzNDI2NSwyNDUzNjM1NzQ4LDI5Mzc2NzE1NzksMjg3MDc2MzIyMSwzNjY0NjA5NTYwLDM2MjQzODEwODAsMjczNDg4MzM5NCwzMTA1OTg0MDEsMTE2NDk5NjU0Miw2MDcyMjUyNzgsMTMyMzYxMDc2NCwxNDI2ODgxOTg3LDM1OTAzMDQ5OTQsMTkyNTA3ODM4OCw0MDY4MTgyMzgzLDIxNjIwNzgyMDYsOTkxMzM2MTEzLDI2MTQ4ODgxMDMsNjMzODAzMzE3LDMyNDgyMjI1ODAsMzQ3OTc3NDg2OCwzODM1MzkwNDAxLDI2NjY2MTM0NTgsNDAyMjIyNDc3NCw5NDQ3MTExMzksMjY0MzQ3MDc4LDIzNDEyNjI3NzMsNjA0ODA3NjI4LDIwMDc4MDA5MzMsNzcwMjU1OTgzLDE0OTU5OTA5MDEsMTI0OTE1MDEyMiwxODU2NDMxMjM1LDE1NTUwODE2OTIsMzE3NTIxODEzMiwxOTk2MDY0OTg2LDIxOTg5NTA4MzcsMjU1NDIyMDg4MiwzOTk5NzE5MzM5LDI4MjE4MzQzNDksNzY2Nzg0MDE2LDI5NTI5OTY4MDgsMjU2NjU5NDg3OSwzMjEwMzEzNjcxLDMyMDMzMzc5NTYsMzMzNjU3MTg5MSwxMDM0NDU3MDI2LDM1ODQ1Mjg3MTEsMjQ2Njk0ODkwMSwxMTM5MjY5OTMsMzc1ODMyNjM4MywzMzgyNDE4OTUsMTY4NzE3OTM2LDY2NjMwNzIwNSwxMTg4MTc5OTY0LDc3MzUyOTkxMiwxNTQ2MDQ1NzM0LDEyOTQ3NTczNzIsMTUyMjgwNTQ4NSwxMzk2MTgyMjkxLDI2NDM4MzM4MjMsMTY5NTE4MzcwMCwyMzQzNTI3MzkwLDE5ODY2NjEwNTEsMTAxNDQ3NzQ4MCwyMTc3MDI2MzUwLDEyMDY3NTkxNDIsMjQ1Njk1NjAzNywzNDQwNzc2MjcsMjczMDQ4NTkyMSwxMjkwODYzNDYwLDI4MjAzMDI0MTEsMzE1ODQ1NDI3MywzMjU5NzMwODAwLDM1MDU5NTI2NTcsMzM0NTc2NDc3MSwxMDYyMTcwMDgsMzUxNjA2NTgxNywzNjA2MDA4MzQ0LDM2MDAzNTI4MDQsMTQzMjcyNTc3Niw0MDk0NTcxOTA5LDE0NjcwMzE1OTQsMjc1NDIzMzQ0LDg1MTE2OTcyMCw0MzAyMjc3MzQsMzEwMDgyMzc1Miw1MDY5NDg2MTYsMTM2MzI1ODE5NSw2NTkwNjA1NTYsMzc1MDY4NTU5Myw4ODM5OTc4NzcsMzc4NTA1MDI4MCw5NTgxMzk1NzEsMzMxODMwNzQyNywxMzIyODIyMjE4LDM4MTI3MjM0MDMsMTUzNzAwMjA2MywyMDAzMDM0OTk1LDE3NDc4NzM3NzksMzYwMjAzNjg5OSwxOTU1NTYyMjIyLDE1NzU5OTAwMTIsMjAyNDEwNDgxNSwxMTI1NTkyOTI4LDIyMjc3MzA0NTIsMjcxNjkwNDMwNiwyMzYxODUyNDI0LDQ0Mjc3NjA0NCwyNDI4NDM2NDc0LDU5MzY5ODM0NCwyNzU2NzM0MTg3LDM3MzMxMTAyNDksMzIwNDAzMTQ3OSwyOTk5MzUxNTczLDMzMjkzMjUyOTgsMzgxNTkyMDQyNywzMzkxNTY5NjE0LDM5MjgzODM5MDAsMzUxNTI2NzI3MSw1NjYyODA3MTEsMzk0MDE4NzYwNiwzNDU0MDY5NTM0LDQxMTg2MzAyNzEsNDAwMDIzOTk5MiwxMTY0MTg0NzQsMTkxNDEzODU1NCwxNzQyOTI0MjEsMjczMTA1NTI3MCwyODkzODAzNTYsMzIwMzk5MzAwNiw0NjAzOTMyNjksMzIwNjIwMzE1LDY4NTQ3MTczMyw1ODc0OTY4MzYsODUyMTQyOTcxLDEwODY3OTI4NTEsMTAxNzAzNjI5OCwzNjU1NDMxMDAsMTEyNjAwMDU4MCwyNjE4Mjk3Njc2LDEyODgwMzM0NzAsMzQwOTg1NTE1OCwxNTAxNTA1OTQ4LDQyMzQ1MDk4NjYsMTYwNzE2NzkxNSw5ODcxNjc0NjgsMTgxNjQwMjMxNiwxMjQ2MTg5NTkxXTtmdW5jdGlvbiBYKGUsdCxyLG4pe2Zvcih2YXIgbyxzLGksYSxjLHUsbCxoLHAsZixkLGcseSxtLGIsQSx3LHYsUyx4LEUsVCxfLEIsVSxrLEk9bmV3IEludDMyQXJyYXkoMTYpLEM9bmV3IEludDMyQXJyYXkoMTYpLFI9ZVswXSxPPWVbMV0sRD1lWzJdLE49ZVszXSxQPWVbNF0sTD1lWzVdLEY9ZVs2XSx6PWVbN10saj10WzBdLE09dFsxXSxIPXRbMl0sRz10WzNdLEs9dFs0XSxxPXRbNV0sJD10WzZdLFY9dFs3XSxYPTA7bj49MTI4Oyl7Zm9yKFM9MDtTPDE2O1MrKyl4PTgqUytYLElbU109clt4KzBdPDwyNHxyW3grMV08PDE2fHJbeCsyXTw8OHxyW3grM10sQ1tTXT1yW3grNF08PDI0fHJbeCs1XTw8MTZ8clt4KzZdPDw4fHJbeCs3XTtmb3IoUz0wO1M8ODA7UysrKWlmKG89UixzPU8saT1ELGE9TixjPVAsdT1MLGw9RixwPWosZj1NLGQ9SCxnPUcseT1LLG09cSxiPSQsXz02NTUzNSYoVD1WKSxCPVQ+Pj4xNixVPTY1NTM1JihFPXopLGs9RT4+PjE2LF8rPTY1NTM1JihUPShLPj4+MTR8UDw8MTgpXihLPj4+MTh8UDw8MTQpXihQPj4+OXxLPDwyMykpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT0oUD4+PjE0fEs8PDE4KV4oUD4+PjE4fEs8PDE0KV4oSz4+Pjl8UDw8MjMpKSxrKz1FPj4+MTYsXys9NjU1MzUmKFQ9SyZxXn5LJiQpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT1QJkxeflAmRiksays9RT4+PjE2LF8rPTY1NTM1JihUPVdbMipTKzFdKSxCKz1UPj4+MTYsVSs9NjU1MzUmKEU9V1syKlNdKSxrKz1FPj4+MTYsRT1JW1MlMTZdLEIrPShUPUNbUyUxNl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsVSs9KEIrPShfKz02NTUzNSZUKT4+PjE2KT4+PjE2LF89NjU1MzUmKFQ9dj02NTUzNSZffEI8PDE2KSxCPVQ+Pj4xNixVPTY1NTM1JihFPXc9NjU1MzUmVXwoays9VT4+PjE2KTw8MTYpLGs9RT4+PjE2LF8rPTY1NTM1JihUPShqPj4+Mjh8Ujw8NCleKFI+Pj4yfGo8PDMwKV4oUj4+Pjd8ajw8MjUpKSxCKz1UPj4+MTYsVSs9NjU1MzUmKEU9KFI+Pj4yOHxqPDw0KV4oaj4+PjJ8Ujw8MzApXihqPj4+N3xSPDwyNSkpLGsrPUU+Pj4xNixCKz0oVD1qJk1eaiZIXk0mSCk+Pj4xNixVKz02NTUzNSYoRT1SJk9eUiZEXk8mRCksays9RT4+PjE2LGg9NjU1MzUmKFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNil8KGsrPVU+Pj4xNik8PDE2LEE9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPWcpLEI9VD4+PjE2LFU9NjU1MzUmKEU9YSksaz1FPj4+MTYsQis9KFQ9dik+Pj4xNixVKz02NTUzNSYoRT13KSxrKz1FPj4+MTYsTz1vLEQ9cyxOPWksUD1hPTY1NTM1JihVKz0oQis9KF8rPTY1NTM1JlQpPj4+MTYpPj4+MTYpfChrKz1VPj4+MTYpPDwxNixMPWMsRj11LHo9bCxSPWgsTT1wLEg9ZixHPWQsSz1nPTY1NTM1Jl98Qjw8MTYscT15LCQ9bSxWPWIsaj1BLFMlMTY9PTE1KWZvcih4PTA7eDwxNjt4KyspRT1JW3hdLF89NjU1MzUmKFQ9Q1t4XSksQj1UPj4+MTYsVT02NTUzNSZFLGs9RT4+PjE2LEU9SVsoeCs5KSUxNl0sXys9NjU1MzUmKFQ9Q1soeCs5KSUxNl0pLEIrPVQ+Pj4xNixVKz02NTUzNSZFLGsrPUU+Pj4xNix3PUlbKHgrMSklMTZdLF8rPTY1NTM1JihUPSgodj1DWyh4KzEpJTE2XSk+Pj4xfHc8PDMxKV4odj4+Pjh8dzw8MjQpXih2Pj4+N3x3PDwyNSkpLEIrPVQ+Pj4xNixVKz02NTUzNSYoRT0odz4+PjF8djw8MzEpXih3Pj4+OHx2PDwyNCledz4+PjcpLGsrPUU+Pj4xNix3PUlbKHgrMTQpJTE2XSxCKz0oVD0oKHY9Q1soeCsxNCklMTZdKT4+PjE5fHc8PDEzKV4odz4+PjI5fHY8PDMpXih2Pj4+Nnx3PDwyNikpPj4+MTYsVSs9NjU1MzUmKEU9KHc+Pj4xOXx2PDwxMyleKHY+Pj4yOXx3PDwzKV53Pj4+Niksays9RT4+PjE2LGsrPShVKz0oQis9KF8rPTY1NTM1JlQpPj4+MTYpPj4+MTYpPj4+MTYsSVt4XT02NTUzNSZVfGs8PDE2LENbeF09NjU1MzUmX3xCPDwxNjtfPTY1NTM1JihUPWopLEI9VD4+PjE2LFU9NjU1MzUmKEU9Uiksaz1FPj4+MTYsRT1lWzBdLEIrPShUPXRbMF0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzBdPVI9NjU1MzUmVXxrPDwxNix0WzBdPWo9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPU0pLEI9VD4+PjE2LFU9NjU1MzUmKEU9Tyksaz1FPj4+MTYsRT1lWzFdLEIrPShUPXRbMV0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzFdPU89NjU1MzUmVXxrPDwxNix0WzFdPU09NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUgpLEI9VD4+PjE2LFU9NjU1MzUmKEU9RCksaz1FPj4+MTYsRT1lWzJdLEIrPShUPXRbMl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzJdPUQ9NjU1MzUmVXxrPDwxNix0WzJdPUg9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUcpLEI9VD4+PjE2LFU9NjU1MzUmKEU9Tiksaz1FPj4+MTYsRT1lWzNdLEIrPShUPXRbM10pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzNdPU49NjU1MzUmVXxrPDwxNix0WzNdPUc9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPUspLEI9VD4+PjE2LFU9NjU1MzUmKEU9UCksaz1FPj4+MTYsRT1lWzRdLEIrPShUPXRbNF0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzRdPVA9NjU1MzUmVXxrPDwxNix0WzRdPUs9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPXEpLEI9VD4+PjE2LFU9NjU1MzUmKEU9TCksaz1FPj4+MTYsRT1lWzVdLEIrPShUPXRbNV0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzVdPUw9NjU1MzUmVXxrPDwxNix0WzVdPXE9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPSQpLEI9VD4+PjE2LFU9NjU1MzUmKEU9Riksaz1FPj4+MTYsRT1lWzZdLEIrPShUPXRbNl0pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzZdPUY9NjU1MzUmVXxrPDwxNix0WzZdPSQ9NjU1MzUmX3xCPDwxNixfPTY1NTM1JihUPVYpLEI9VD4+PjE2LFU9NjU1MzUmKEU9eiksaz1FPj4+MTYsRT1lWzddLEIrPShUPXRbN10pPj4+MTYsVSs9NjU1MzUmRSxrKz1FPj4+MTYsays9KFUrPShCKz0oXys9NjU1MzUmVCk+Pj4xNik+Pj4xNik+Pj4xNixlWzddPXo9NjU1MzUmVXxrPDwxNix0WzddPVY9NjU1MzUmX3xCPDwxNixYKz0xMjgsbi09MTI4fXJldHVybiBufWZ1bmN0aW9uIFkoZSx0LHIpe3ZhciBuLG89bmV3IEludDMyQXJyYXkoOCkscz1uZXcgSW50MzJBcnJheSg4KSxpPW5ldyBVaW50OEFycmF5KDI1NiksYT1yO2ZvcihvWzBdPTE3NzkwMzM3MDMsb1sxXT0zMTQ0MTM0Mjc3LG9bMl09MTAxMzkwNDI0MixvWzNdPTI3NzM0ODA3NjIsb1s0XT0xMzU5ODkzMTE5LG9bNV09MjYwMDgyMjkyNCxvWzZdPTUyODczNDYzNSxvWzddPTE1NDE0NTkyMjUsc1swXT00MDg5MjM1NzIwLHNbMV09MjIyNzg3MzU5NSxzWzJdPTQyNzExNzU3MjMsc1szXT0xNTk1NzUwMTI5LHNbNF09MjkxNzU2NTEzNyxzWzVdPTcyNTUxMTE5OSxzWzZdPTQyMTUzODk1NDcsc1s3XT0zMjcwMzMyMDksWChvLHMsdCxyKSxyJT0xMjgsbj0wO248cjtuKyspaVtuXT10W2EtcituXTtmb3IoaVtyXT0xMjgsaVsocj0yNTYtMTI4KihyPDExMj8xOjApKS05XT0wLGYoaSxyLTgsYS81MzY4NzA5MTJ8MCxhPDwzKSxYKG8scyxpLHIpLG49MDtuPDg7bisrKWYoZSw4Km4sb1tuXSxzW25dKTtyZXR1cm4gMH1mdW5jdGlvbiBKKGUscil7dmFyIG49dCgpLG89dCgpLHM9dCgpLGk9dCgpLGE9dCgpLGM9dCgpLGw9dCgpLGg9dCgpLHA9dCgpO0wobixlWzFdLGVbMF0pLEwocCxyWzFdLHJbMF0pLEYobixuLHApLFAobyxlWzBdLGVbMV0pLFAocCxyWzBdLHJbMV0pLEYobyxvLHApLEYocyxlWzNdLHJbM10pLEYocyxzLHUpLEYoaSxlWzJdLHJbMl0pLFAoaSxpLGkpLEwoYSxvLG4pLEwoYyxpLHMpLFAobCxpLHMpLFAoaCxvLG4pLEYoZVswXSxhLGMpLEYoZVsxXSxoLGwpLEYoZVsyXSxsLGMpLEYoZVszXSxhLGgpfWZ1bmN0aW9uIFEoZSx0LHIpe3ZhciBuO2ZvcihuPTA7bjw0O24rKylDKGVbbl0sdFtuXSxyKX1mdW5jdGlvbiBaKGUscil7dmFyIG49dCgpLG89dCgpLHM9dCgpO2oocyxyWzJdKSxGKG4sclswXSxzKSxGKG8sclsxXSxzKSxSKGUsbyksZVszMV1ePUQobik8PDd9ZnVuY3Rpb24gZWUoZSx0LHIpe3ZhciBuLG87Zm9yKGsoZVswXSxzKSxrKGVbMV0saSksayhlWzJdLGkpLGsoZVszXSxzKSxvPTI1NTtvPj0wOy0tbylRKGUsdCxuPXJbby84fDBdPj4oNyZvKSYxKSxKKHQsZSksSihlLGUpLFEoZSx0LG4pfWZ1bmN0aW9uIHRlKGUscil7dmFyIG49W3QoKSx0KCksdCgpLHQoKV07ayhuWzBdLGwpLGsoblsxXSxoKSxrKG5bMl0saSksRihuWzNdLGwsaCksZWUoZSxuLHIpfWZ1bmN0aW9uIHJlKGUsbixvKXt2YXIgcyxpPW5ldyBVaW50OEFycmF5KDY0KSxhPVt0KCksdCgpLHQoKSx0KCldO2ZvcihvfHxyKG4sMzIpLFkoaSxuLDMyKSxpWzBdJj0yNDgsaVszMV0mPTEyNyxpWzMxXXw9NjQsdGUoYSxpKSxaKGUsYSkscz0wO3M8MzI7cysrKW5bcyszMl09ZVtzXTtyZXR1cm4gMH12YXIgbmU9bmV3IEZsb2F0NjRBcnJheShbMjM3LDIxMSwyNDUsOTIsMjYsOTksMTgsODgsMjE0LDE1NiwyNDcsMTYyLDIyMiwyNDksMjIyLDIwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDE2XSk7ZnVuY3Rpb24gb2UoZSx0KXt2YXIgcixuLG8scztmb3Iobj02MztuPj0zMjstLW4pe2ZvcihyPTAsbz1uLTMyLHM9bi0xMjtvPHM7KytvKXRbb10rPXItMTYqdFtuXSpuZVtvLShuLTMyKV0scj1NYXRoLmZsb29yKCh0W29dKzEyOCkvMjU2KSx0W29dLT0yNTYqcjt0W29dKz1yLHRbbl09MH1mb3Iocj0wLG89MDtvPDMyO28rKyl0W29dKz1yLSh0WzMxXT4+NCkqbmVbb10scj10W29dPj44LHRbb10mPTI1NTtmb3Iobz0wO288MzI7bysrKXRbb10tPXIqbmVbb107Zm9yKG49MDtuPDMyO24rKyl0W24rMV0rPXRbbl0+PjgsZVtuXT0yNTUmdFtuXX1mdW5jdGlvbiBzZShlKXt2YXIgdCxyPW5ldyBGbG9hdDY0QXJyYXkoNjQpO2Zvcih0PTA7dDw2NDt0Kyspclt0XT1lW3RdO2Zvcih0PTA7dDw2NDt0KyspZVt0XT0wO29lKGUscil9ZnVuY3Rpb24gaWUoZSxyLG4sbyl7dmFyIHMsaSxhPW5ldyBVaW50OEFycmF5KDY0KSxjPW5ldyBVaW50OEFycmF5KDY0KSx1PW5ldyBVaW50OEFycmF5KDY0KSxsPW5ldyBGbG9hdDY0QXJyYXkoNjQpLGg9W3QoKSx0KCksdCgpLHQoKV07WShhLG8sMzIpLGFbMF0mPTI0OCxhWzMxXSY9MTI3LGFbMzFdfD02NDt2YXIgcD1uKzY0O2ZvcihzPTA7czxuO3MrKyllWzY0K3NdPXJbc107Zm9yKHM9MDtzPDMyO3MrKyllWzMyK3NdPWFbMzIrc107Zm9yKFkodSxlLnN1YmFycmF5KDMyKSxuKzMyKSxzZSh1KSx0ZShoLHUpLFooZSxoKSxzPTMyO3M8NjQ7cysrKWVbc109b1tzXTtmb3IoWShjLGUsbis2NCksc2UoYykscz0wO3M8NjQ7cysrKWxbc109MDtmb3Iocz0wO3M8MzI7cysrKWxbc109dVtzXTtmb3Iocz0wO3M8MzI7cysrKWZvcihpPTA7aTwzMjtpKyspbFtzK2ldKz1jW3NdKmFbaV07cmV0dXJuIG9lKGUuc3ViYXJyYXkoMzIpLGwpLHB9ZnVuY3Rpb24gYWUoZSxyLG4sbyl7dmFyIGEsdT1uZXcgVWludDhBcnJheSgzMiksbD1uZXcgVWludDhBcnJheSg2NCksaD1bdCgpLHQoKSx0KCksdCgpXSxmPVt0KCksdCgpLHQoKSx0KCldO2lmKG48NjQpcmV0dXJuLTE7aWYoZnVuY3Rpb24oZSxyKXt2YXIgbj10KCksbz10KCksYT10KCksdT10KCksbD10KCksaD10KCksZj10KCk7cmV0dXJuIGsoZVsyXSxpKSxOKGVbMV0scikseihhLGVbMV0pLEYodSxhLGMpLEwoYSxhLGVbMl0pLFAodSxlWzJdLHUpLHoobCx1KSx6KGgsbCksRihmLGgsbCksRihuLGYsYSksRihuLG4sdSksTShuLG4pLEYobixuLGEpLEYobixuLHUpLEYobixuLHUpLEYoZVswXSxuLHUpLHoobyxlWzBdKSxGKG8sbyx1KSxPKG8sYSkmJkYoZVswXSxlWzBdLHApLHoobyxlWzBdKSxGKG8sbyx1KSxPKG8sYSk/LTE6KEQoZVswXSk9PT1yWzMxXT4+NyYmTChlWzBdLHMsZVswXSksRihlWzNdLGVbMF0sZVsxXSksMCl9KGYsbykpcmV0dXJuLTE7Zm9yKGE9MDthPG47YSsrKWVbYV09clthXTtmb3IoYT0wO2E8MzI7YSsrKWVbYSszMl09b1thXTtpZihZKGwsZSxuKSxzZShsKSxlZShoLGYsbCksdGUoZixyLnN1YmFycmF5KDMyKSksSihoLGYpLFoodSxoKSxuLT02NCx5KHIsMCx1LDApKXtmb3IoYT0wO2E8bjthKyspZVthXT0wO3JldHVybi0xfWZvcihhPTA7YTxuO2ErKyllW2FdPXJbYSs2NF07cmV0dXJuIG59dmFyIGNlPTY0LHVlPTMyLGxlPTY0O2Z1bmN0aW9uIGhlKGUsdCl7aWYoMzIhPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQga2V5IHNpemVcIik7aWYoMjQhPT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgbm9uY2Ugc2l6ZVwiKX1mdW5jdGlvbiBwZSgpe2Zvcih2YXIgZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspaWYoIShhcmd1bWVudHNbZV1pbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJ1bmV4cGVjdGVkIHR5cGUsIHVzZSBVaW50OEFycmF5XCIpfWZ1bmN0aW9uIGZlKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKWVbdF09MH1lLmxvd2xldmVsPXtjcnlwdG9fY29yZV9oc2Fsc2EyMDpiLGNyeXB0b19zdHJlYW1feG9yOngsY3J5cHRvX3N0cmVhbTpTLGNyeXB0b19zdHJlYW1fc2Fsc2EyMF94b3I6dyxjcnlwdG9fc3RyZWFtX3NhbHNhMjA6dixjcnlwdG9fb25ldGltZWF1dGg6VCxjcnlwdG9fb25ldGltZWF1dGhfdmVyaWZ5Ol8sY3J5cHRvX3ZlcmlmeV8xNjpnLGNyeXB0b192ZXJpZnlfMzI6eSxjcnlwdG9fc2VjcmV0Ym94OkIsY3J5cHRvX3NlY3JldGJveF9vcGVuOlUsY3J5cHRvX3NjYWxhcm11bHQ6SCxjcnlwdG9fc2NhbGFybXVsdF9iYXNlOkcsY3J5cHRvX2JveF9iZWZvcmVubTpxLGNyeXB0b19ib3hfYWZ0ZXJubTokLGNyeXB0b19ib3g6ZnVuY3Rpb24oZSx0LHIsbixvLHMpe3ZhciBpPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShpLG8scyksJChlLHQscixuLGkpfSxjcnlwdG9fYm94X29wZW46ZnVuY3Rpb24oZSx0LHIsbixvLHMpe3ZhciBpPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShpLG8scyksVihlLHQscixuLGkpfSxjcnlwdG9fYm94X2tleXBhaXI6SyxjcnlwdG9faGFzaDpZLGNyeXB0b19zaWduOmllLGNyeXB0b19zaWduX2tleXBhaXI6cmUsY3J5cHRvX3NpZ25fb3BlbjphZSxjcnlwdG9fc2VjcmV0Ym94X0tFWUJZVEVTOjMyLGNyeXB0b19zZWNyZXRib3hfTk9OQ0VCWVRFUzoyNCxjcnlwdG9fc2VjcmV0Ym94X1pFUk9CWVRFUzozMixjcnlwdG9fc2VjcmV0Ym94X0JPWFpFUk9CWVRFUzoxNixjcnlwdG9fc2NhbGFybXVsdF9CWVRFUzozMixjcnlwdG9fc2NhbGFybXVsdF9TQ0FMQVJCWVRFUzozMixjcnlwdG9fYm94X1BVQkxJQ0tFWUJZVEVTOjMyLGNyeXB0b19ib3hfU0VDUkVUS0VZQllURVM6MzIsY3J5cHRvX2JveF9CRUZPUkVOTUJZVEVTOjMyLGNyeXB0b19ib3hfTk9OQ0VCWVRFUzoyNCxjcnlwdG9fYm94X1pFUk9CWVRFUzozMixjcnlwdG9fYm94X0JPWFpFUk9CWVRFUzoxNixjcnlwdG9fc2lnbl9CWVRFUzpjZSxjcnlwdG9fc2lnbl9QVUJMSUNLRVlCWVRFUzp1ZSxjcnlwdG9fc2lnbl9TRUNSRVRLRVlCWVRFUzpsZSxjcnlwdG9fc2lnbl9TRUVEQllURVM6MzIsY3J5cHRvX2hhc2hfQllURVM6NjQsZ2Y6dCxEOmMsTDpuZSxwYWNrMjU1MTk6Uix1bnBhY2syNTUxOTpOLE06RixBOlAsUzp6LFo6TCxwb3cyNTIzOk0sYWRkOkosc2V0MjU1MTk6ayxtb2RMOm9lLHNjYWxhcm11bHQ6ZWUsc2NhbGFyYmFzZTp0ZX0sZS5yYW5kb21CeXRlcz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgVWludDhBcnJheShlKTtyZXR1cm4gcih0LGUpLHR9LGUuc2VjcmV0Ym94PWZ1bmN0aW9uKGUsdCxyKXtwZShlLHQsciksaGUocix0KTtmb3IodmFyIG49bmV3IFVpbnQ4QXJyYXkoMzIrZS5sZW5ndGgpLG89bmV3IFVpbnQ4QXJyYXkobi5sZW5ndGgpLHM9MDtzPGUubGVuZ3RoO3MrKyluW3MrMzJdPWVbc107cmV0dXJuIEIobyxuLG4ubGVuZ3RoLHQsciksby5zdWJhcnJheSgxNil9LGUuc2VjcmV0Ym94Lm9wZW49ZnVuY3Rpb24oZSx0LHIpe3BlKGUsdCxyKSxoZShyLHQpO2Zvcih2YXIgbj1uZXcgVWludDhBcnJheSgxNitlLmxlbmd0aCksbz1uZXcgVWludDhBcnJheShuLmxlbmd0aCkscz0wO3M8ZS5sZW5ndGg7cysrKW5bcysxNl09ZVtzXTtyZXR1cm4gbi5sZW5ndGg8MzJ8fDAhPT1VKG8sbixuLmxlbmd0aCx0LHIpP251bGw6by5zdWJhcnJheSgzMil9LGUuc2VjcmV0Ym94LmtleUxlbmd0aD0zMixlLnNlY3JldGJveC5ub25jZUxlbmd0aD0yNCxlLnNlY3JldGJveC5vdmVyaGVhZExlbmd0aD0xNixlLnNjYWxhck11bHQ9ZnVuY3Rpb24oZSx0KXtpZihwZShlLHQpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIG4gc2l6ZVwiKTtpZigzMiE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBwIHNpemVcIik7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBIKHIsZSx0KSxyfSxlLnNjYWxhck11bHQuYmFzZT1mdW5jdGlvbihlKXtpZihwZShlKSwzMiE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBuIHNpemVcIik7dmFyIHQ9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBHKHQsZSksdH0sZS5zY2FsYXJNdWx0LnNjYWxhckxlbmd0aD0zMixlLnNjYWxhck11bHQuZ3JvdXBFbGVtZW50TGVuZ3RoPTMyLGUuYm94PWZ1bmN0aW9uKHQscixuLG8pe3ZhciBzPWUuYm94LmJlZm9yZShuLG8pO3JldHVybiBlLnNlY3JldGJveCh0LHIscyl9LGUuYm94LmJlZm9yZT1mdW5jdGlvbihlLHQpe3BlKGUsdCksZnVuY3Rpb24oZSx0KXtpZigzMiE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBwdWJsaWMga2V5IHNpemVcIik7aWYoMzIhPT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgc2VjcmV0IGtleSBzaXplXCIpfShlLHQpO3ZhciByPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcShyLGUsdCkscn0sZS5ib3guYWZ0ZXI9ZS5zZWNyZXRib3gsZS5ib3gub3Blbj1mdW5jdGlvbih0LHIsbixvKXt2YXIgcz1lLmJveC5iZWZvcmUobixvKTtyZXR1cm4gZS5zZWNyZXRib3gub3Blbih0LHIscyl9LGUuYm94Lm9wZW4uYWZ0ZXI9ZS5zZWNyZXRib3gub3BlbixlLmJveC5rZXlQYWlyPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IFVpbnQ4QXJyYXkoMzIpLHQ9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBLKGUsdCkse3B1YmxpY0tleTplLHNlY3JldEtleTp0fX0sZS5ib3gua2V5UGFpci5mcm9tU2VjcmV0S2V5PWZ1bmN0aW9uKGUpe2lmKHBlKGUpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlY3JldCBrZXkgc2l6ZVwiKTt2YXIgdD1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIEcodCxlKSx7cHVibGljS2V5OnQsc2VjcmV0S2V5Om5ldyBVaW50OEFycmF5KGUpfX0sZS5ib3gucHVibGljS2V5TGVuZ3RoPTMyLGUuYm94LnNlY3JldEtleUxlbmd0aD0zMixlLmJveC5zaGFyZWRLZXlMZW5ndGg9MzIsZS5ib3gubm9uY2VMZW5ndGg9MjQsZS5ib3gub3ZlcmhlYWRMZW5ndGg9ZS5zZWNyZXRib3gub3ZlcmhlYWRMZW5ndGgsZS5zaWduPWZ1bmN0aW9uKGUsdCl7aWYocGUoZSx0KSx0Lmxlbmd0aCE9PWxlKXRocm93IG5ldyBFcnJvcihcImJhZCBzZWNyZXQga2V5IHNpemVcIik7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoY2UrZS5sZW5ndGgpO3JldHVybiBpZShyLGUsZS5sZW5ndGgsdCkscn0sZS5zaWduLm9wZW49ZnVuY3Rpb24oZSx0KXtpZihwZShlLHQpLHQubGVuZ3RoIT09dWUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHB1YmxpYyBrZXkgc2l6ZVwiKTt2YXIgcj1uZXcgVWludDhBcnJheShlLmxlbmd0aCksbj1hZShyLGUsZS5sZW5ndGgsdCk7aWYobjwwKXJldHVybiBudWxsO2Zvcih2YXIgbz1uZXcgVWludDhBcnJheShuKSxzPTA7czxvLmxlbmd0aDtzKyspb1tzXT1yW3NdO3JldHVybiBvfSxlLnNpZ24uZGV0YWNoZWQ9ZnVuY3Rpb24odCxyKXtmb3IodmFyIG49ZS5zaWduKHQsciksbz1uZXcgVWludDhBcnJheShjZSkscz0wO3M8by5sZW5ndGg7cysrKW9bc109bltzXTtyZXR1cm4gb30sZS5zaWduLmRldGFjaGVkLnZlcmlmeT1mdW5jdGlvbihlLHQscil7aWYocGUoZSx0LHIpLHQubGVuZ3RoIT09Y2UpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNpZ25hdHVyZSBzaXplXCIpO2lmKHIubGVuZ3RoIT09dWUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHB1YmxpYyBrZXkgc2l6ZVwiKTt2YXIgbixvPW5ldyBVaW50OEFycmF5KGNlK2UubGVuZ3RoKSxzPW5ldyBVaW50OEFycmF5KGNlK2UubGVuZ3RoKTtmb3Iobj0wO248Y2U7bisrKW9bbl09dFtuXTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKW9bbitjZV09ZVtuXTtyZXR1cm4gYWUocyxvLG8ubGVuZ3RoLHIpPj0wfSxlLnNpZ24ua2V5UGFpcj1mdW5jdGlvbigpe3ZhciBlPW5ldyBVaW50OEFycmF5KHVlKSx0PW5ldyBVaW50OEFycmF5KGxlKTtyZXR1cm4gcmUoZSx0KSx7cHVibGljS2V5OmUsc2VjcmV0S2V5OnR9fSxlLnNpZ24ua2V5UGFpci5mcm9tU2VjcmV0S2V5PWZ1bmN0aW9uKGUpe2lmKHBlKGUpLGUubGVuZ3RoIT09bGUpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlY3JldCBrZXkgc2l6ZVwiKTtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkodWUpLHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdPWVbMzIrcl07cmV0dXJue3B1YmxpY0tleTp0LHNlY3JldEtleTpuZXcgVWludDhBcnJheShlKX19LGUuc2lnbi5rZXlQYWlyLmZyb21TZWVkPWZ1bmN0aW9uKGUpe2lmKHBlKGUpLDMyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlZWQgc2l6ZVwiKTtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkodWUpLHI9bmV3IFVpbnQ4QXJyYXkobGUpLG49MDtuPDMyO24rKylyW25dPWVbbl07cmV0dXJuIHJlKHQsciwhMCkse3B1YmxpY0tleTp0LHNlY3JldEtleTpyfX0sZS5zaWduLnB1YmxpY0tleUxlbmd0aD11ZSxlLnNpZ24uc2VjcmV0S2V5TGVuZ3RoPWxlLGUuc2lnbi5zZWVkTGVuZ3RoPTMyLGUuc2lnbi5zaWduYXR1cmVMZW5ndGg9Y2UsZS5oYXNoPWZ1bmN0aW9uKGUpe3BlKGUpO3ZhciB0PW5ldyBVaW50OEFycmF5KDY0KTtyZXR1cm4gWSh0LGUsZS5sZW5ndGgpLHR9LGUuaGFzaC5oYXNoTGVuZ3RoPTY0LGUudmVyaWZ5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHBlKGUsdCksMCE9PWUubGVuZ3RoJiYwIT09dC5sZW5ndGgmJmUubGVuZ3RoPT09dC5sZW5ndGgmJjA9PT1kKGUsMCx0LDAsZS5sZW5ndGgpfSxlLnNldFBSTkc9ZnVuY3Rpb24oZSl7cj1lfSxmdW5jdGlvbigpe3ZhciB0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGYuY3J5cHRvfHxzZWxmLm1zQ3J5cHRvOm51bGw7dCYmdC5nZXRSYW5kb21WYWx1ZXM/ZS5zZXRQUk5HKChmdW5jdGlvbihlLHIpe3ZhciBuLG89bmV3IFVpbnQ4QXJyYXkocik7Zm9yKG49MDtuPHI7bis9NjU1MzYpdC5nZXRSYW5kb21WYWx1ZXMoby5zdWJhcnJheShuLG4rTWF0aC5taW4oci1uLDY1NTM2KSkpO2ZvcihuPTA7bjxyO24rKyllW25dPW9bbl07ZmUobyl9KSk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHJlcXVpcmUmJih0PXJlcXVpcmUoXCJjcnlwdG9cIikpJiZ0LnJhbmRvbUJ5dGVzJiZlLnNldFBSTkcoKGZ1bmN0aW9uKGUscil7dmFyIG4sbz10LnJhbmRvbUJ5dGVzKHIpO2ZvcihuPTA7bjxyO24rKyllW25dPW9bbl07ZmUobyl9KSl9KCl9KHZvaWQgMCE9PWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM6c2VsZi5uYWNsPXNlbGYubmFjbHx8e30pfSw1OTIyOihlLHQscik9Pnt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtjb25zdHtkZWZhdWx0Om99PXIoMTExMykse3NldFNlbmRUcmFuc2FjdGlvbkhlYWRlcnM6c309cig1MTgwKTtlLmV4cG9ydHM9e0FsZ29kOmZ1bmN0aW9uKGU9XCJcIix0PVwiaHR0cDovL3IyLmFsZ29yYW5kLm5ldHdvcmtcIixyPTQxODAsaT17fSl7bGV0IGE9ZTtcInN0cmluZ1wiPT10eXBlb2YgYSYmKGE9e1wiWC1BbGdvLUFQSS1Ub2tlblwiOmF9KTtjb25zdCBjPW5ldyBvKGEsdCxyLGkpO2Z1bmN0aW9uIHUoZSl7cmV0dXJuIHZvaWQgMCE9PWUubm90ZWI2NCYmbnVsbCE9PWUubm90ZWI2NCYmKGUubm90ZT1uLmZyb20oZS5ub3RlYjY0LFwiYmFzZTY0XCIpKSxlfXRoaXMuc3RhdHVzPWFzeW5jKGU9e30pPT4oYXdhaXQgYy5nZXQoXCIvdjEvc3RhdHVzXCIse30sZSkpLmJvZHksdGhpcy5oZWFsdGhDaGVjaz1hc3luYyhlPXt9KT0+e2NvbnN0IHQ9YXdhaXQgYy5nZXQoXCIvaGVhbHRoXCIse30sZSk7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKGBIZWFsdGggcmVzcG9uc2U6ICR7dC5zdGF0dXN9YCk7cmV0dXJue319LHRoaXMuc3RhdHVzQWZ0ZXJCbG9jaz1hc3luYyhlLHQ9e30pPT57aWYoIU51bWJlci5pc0ludGVnZXIoZSkpdGhyb3cgRXJyb3IoXCJyb3VuZE51bWJlciBzaG91bGQgYmUgYW4gaW50ZWdlclwiKTtyZXR1cm4oYXdhaXQgYy5nZXQoYC92MS9zdGF0dXMvd2FpdC1mb3ItYmxvY2stYWZ0ZXIvJHtlfWAse30sdCkpLmJvZHl9LHRoaXMucGVuZGluZ1RyYW5zYWN0aW9ucz1hc3luYyhlLHQ9e30pPT57aWYoIU51bWJlci5pc0ludGVnZXIoZSkpdGhyb3cgRXJyb3IoXCJtYXhUeG5zIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHI9YXdhaXQgYy5nZXQoXCIvdjEvdHJhbnNhY3Rpb25zL3BlbmRpbmdcIix7bWF4OmV9LHQpO2lmKDIwMD09PXIuc3RhdHVzQ29kZSYmdm9pZCAwIT09ci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zKWZvcihsZXQgZT0wO2U8ci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zLmxlbmd0aDtlKyspci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zW2VdPXUoci5ib2R5LnRydW5jYXRlZFR4bnMudHJhbnNhY3Rpb25zW2VdKTtyZXR1cm4gci5ib2R5fSx0aGlzLnZlcnNpb25zPWFzeW5jKGU9e30pPT4oYXdhaXQgYy5nZXQoXCIvdmVyc2lvbnNcIix7fSxlKSkuYm9keSx0aGlzLmxlZGdlclN1cHBseT1hc3luYyhlPXt9KT0+KGF3YWl0IGMuZ2V0KFwiL3YxL2xlZGdlci9zdXBwbHlcIix7fSxlKSkuYm9keSx0aGlzLnRyYW5zYWN0aW9uQnlBZGRyZXNzPWFzeW5jKGUsdD1udWxsLHI9bnVsbCxuPW51bGwsbz17fSk9PntpZihudWxsIT09dCYmIU51bWJlci5pc0ludGVnZXIodCkpdGhyb3cgRXJyb3IoXCJmaXJzdCByb3VuZCBzaG91bGQgYmUgYW4gaW50ZWdlclwiKTtpZihudWxsIT09ciYmIU51bWJlci5pc0ludGVnZXIocikpdGhyb3cgRXJyb3IoXCJsYXN0IHJvdW5kIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHM9YXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX0vdHJhbnNhY3Rpb25zYCx7Zmlyc3RSb3VuZDp0LGxhc3RSb3VuZDpyLG1heDpufSxvKTtpZigyMDA9PT1zLnN0YXR1c0NvZGUmJnZvaWQgMCE9PXMuYm9keS50cmFuc2FjdGlvbnMpZm9yKGxldCBlPTA7ZTxzLmJvZHkudHJhbnNhY3Rpb25zLmxlbmd0aDtlKyspcy5ib2R5LnRyYW5zYWN0aW9uc1tlXT11KHMuYm9keS50cmFuc2FjdGlvbnNbZV0pO3JldHVybiBzLmJvZHl9LHRoaXMudHJhbnNhY3Rpb25CeUFkZHJlc3NBbmREYXRlPWFzeW5jKGUsdCxyLG49bnVsbCxvPXt9KT0+e2NvbnN0IHM9YXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX0vdHJhbnNhY3Rpb25zYCx7ZnJvbURhdGU6dCx0b0RhdGU6cixtYXg6bn0sbyk7aWYoMjAwPT09cy5zdGF0dXNDb2RlJiZ2b2lkIDAhPT1zLmJvZHkudHJhbnNhY3Rpb25zKWZvcihsZXQgZT0wO2U8cy5ib2R5LnRyYW5zYWN0aW9ucy5sZW5ndGg7ZSsrKXMuYm9keS50cmFuc2FjdGlvbnNbZV09dShzLmJvZHkudHJhbnNhY3Rpb25zW2VdKTtyZXR1cm4gcy5ib2R5fSx0aGlzLnRyYW5zYWN0aW9uQnlJZD1hc3luYyhlLHQ9e30pPT57Y29uc3Qgcj1hd2FpdCBjLmdldChgL3YxL3RyYW5zYWN0aW9uLyR7ZX1gLHt9LHQpO3JldHVybiAyMDA9PT1yLnN0YXR1c0NvZGUmJihyLmJvZHk9dShyLmJvZHkpKSxyLmJvZHl9LHRoaXMudHJhbnNhY3Rpb25JbmZvcm1hdGlvbj1hc3luYyhlLHQscj17fSk9Pntjb25zdCBuPWF3YWl0IGMuZ2V0KGAvdjEvYWNjb3VudC8ke2V9L3RyYW5zYWN0aW9uLyR7dH1gLHt9LHIpO3JldHVybiAyMDA9PT1uLnN0YXR1c0NvZGUmJihuLmJvZHk9dShuLmJvZHkpKSxuLmJvZHl9LHRoaXMucGVuZGluZ1RyYW5zYWN0aW9uSW5mb3JtYXRpb249YXN5bmMoZSx0PXt9KT0+e2NvbnN0IHI9YXdhaXQgYy5nZXQoYC92MS90cmFuc2FjdGlvbnMvcGVuZGluZy8ke2V9YCx7fSx0KTtyZXR1cm4gMjAwPT09ci5zdGF0dXNDb2RlJiYoci5ib2R5PXUoci5ib2R5KSksci5ib2R5fSx0aGlzLmFjY291bnRJbmZvcm1hdGlvbj1hc3luYyhlLHQ9e30pPT4oYXdhaXQgYy5nZXQoYC92MS9hY2NvdW50LyR7ZX1gLHt9LHQpKS5ib2R5LHRoaXMuYXNzZXRJbmZvcm1hdGlvbj1hc3luYyhlLHQ9e30pPT4oYXdhaXQgYy5nZXQoYC92MS9hc3NldC8ke2V9YCx7fSx0KSkuYm9keSx0aGlzLnN1Z2dlc3RlZEZlZT1hc3luYyhlPXt9KT0+KGF3YWl0IGMuZ2V0KFwiL3YxL3RyYW5zYWN0aW9ucy9mZWVcIix7fSxlKSkuYm9keSx0aGlzLnNlbmRSYXdUcmFuc2FjdGlvbj1hc3luYyhlLHQ9e30pPT57Y29uc3Qgcj1zKHQpO3JldHVybihhd2FpdCBjLnBvc3QoXCIvdjEvdHJhbnNhY3Rpb25zXCIsbi5mcm9tKGUpLHIpKS5ib2R5fSx0aGlzLnNlbmRSYXdUcmFuc2FjdGlvbnM9YXN5bmMoZSx0PXt9KT0+e2NvbnN0IHI9cyh0KSxvPUFycmF5LnByb3RvdHlwZS5jb25jYXQoLi4uZS5tYXAoKGU9PkFycmF5LmZyb20oZSkpKSk7cmV0dXJuKGF3YWl0IGMucG9zdChcIi92MS90cmFuc2FjdGlvbnNcIixuLmZyb20obykscikpLmJvZHl9LHRoaXMuZ2V0VHJhbnNhY3Rpb25QYXJhbXM9YXN5bmMoZT17fSk9Pihhd2FpdCBjLmdldChcIi92MS90cmFuc2FjdGlvbnMvcGFyYW1zXCIse30sZSkpLmJvZHksdGhpcy5zdWdnZXN0UGFyYW1zPWFzeW5jKGU9e30pPT57Y29uc3QgdD1hd2FpdCB0aGlzLmdldFRyYW5zYWN0aW9uUGFyYW1zKGUpO3JldHVybntmbGF0RmVlOiExLGZlZTp0LmZlZSxmaXJzdFJvdW5kOnQubGFzdFJvdW5kLGxhc3RSb3VuZDp0Lmxhc3RSb3VuZCsxZTMsZ2VuZXNpc0lEOnQuZ2VuZXNpc0lELGdlbmVzaXNIYXNoOnQuZ2VuZXNpc2hhc2hiNjR9fSx0aGlzLmJsb2NrPWFzeW5jKGUsdD17fSk9PntpZighTnVtYmVyLmlzSW50ZWdlcihlKSl0aHJvdyBFcnJvcihcInJvdW5kTnVtYmVyIHNob3VsZCBiZSBhbiBpbnRlZ2VyXCIpO2NvbnN0IHI9YXdhaXQgYy5nZXQoYC92MS9ibG9jay8ke2V9YCx7fSx0KTtpZigyMDA9PT1yLnN0YXR1c0NvZGUmJnZvaWQgMCE9PXIuYm9keS50eG5zLnRyYW5zYWN0aW9ucylmb3IobGV0IGU9MDtlPHIuYm9keS50eG5zLnRyYW5zYWN0aW9ucy5sZW5ndGg7ZSsrKXIuYm9keS50eG5zLnRyYW5zYWN0aW9uc1tlXT11KHIuYm9keS50eG5zLnRyYW5zYWN0aW9uc1tlXSk7cmV0dXJuIHIuYm9keX19fX0sMTgzNDooZSx0LHIpPT57dmFyIG49cigyNDg2KS5CdWZmZXI7Y29uc3Qgbz1yKDcxMTYpLHM9cigzMDMzKSxpPXIoMTA2MyksYT1yKDU1ODMpLGM9cig4ODAwKSx1PXIoOTQwNCksbD1yKDI1MTQpLGg9cig5NDE3KTtlLmV4cG9ydHM9e0R5bmFtaWNGZWU6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIscyxpLGEpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcih0KXx8dDwwKXRocm93IEVycm9yKFwiYW1vdW50IG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIpfHxyPDApdGhyb3cgRXJyb3IoXCJmaXJzdFZhbGlkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHMpfHxzPDApdGhyb3cgRXJyb3IoXCJsYXN0VmFsaWQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDA9PT1pJiYoaT1vLkFMR09SQU5EX1pFUk9fQUREUkVTU19TVFJJTkcpLHZvaWQgMD09PWEpe2NvbnN0IGU9dS5yYW5kb21CeXRlcygzMik7YT1uLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIil9Y29uc3QgaD1uLmZyb20oXCJBU0FGQWdFSEJnVW1BeUQrdktDN0ZFcGFUcWUwT0tSb0dzZ09iS0VGdkxZSC9GWlRKY2xXbGZhaUV5RG1tcFllYnkxZmVzaG1CNUpsVXI2WUkxN1RNMlBLaUpHTHVjazRxUlcyK1NCL2c3RmxmL0g4VTdrdHdZRklvZFpkL0MxTEg2UFdkeWhLM2RJQUVtMlFhVElFSWhJekFCQWpFaEF6QUFjeEFCSVFNd0FJTVFFU0VERVdJeElRTVJBakVoQXhCeWdTRURFSktSSVFNUWdrRWhBeEFpVVNFREVFSVFRU0VERUdLaElRXCIsXCJiYXNlNjRcIikscD1bdCxyLHMsZSxpLGFdLGY9W2wudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuSU5ULGwudmFsVHlwZXMuQUREUkVTUyxsLnZhbFR5cGVzLkFERFJFU1MsbC52YWxUeXBlcy5CQVNFNjRdLGQ9bC5pbmplY3QoaCxbNSw2LDcsMTEsNDQsNzZdLHAsZik7dGhpcy5wcm9ncmFtQnl0ZXM9ZDtjb25zdCBnPW5ldyBjLkxvZ2ljU2lnKGQsdm9pZCAwKTt0aGlzLmFkZHJlc3M9Zy5hZGRyZXNzKCl9Z2V0UHJvZ3JhbSgpe3JldHVybiB0aGlzLnByb2dyYW1CeXRlc31nZXRBZGRyZXNzKCl7cmV0dXJuIHRoaXMuYWRkcmVzc319LGdldER5bmFtaWNGZWVUcmFuc2FjdGlvbnM6ZnVuY3Rpb24oZSx0LHIsbil7aWYoIXQudmVyaWZ5KG8uZGVjb2RlQWRkcmVzcyhlLmZyb20pLnB1YmxpY0tleSkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWduYXR1cmVcIik7ZS5mZWU9bixlLmZlZTxoLkFMR09SQU5EX01JTl9UWF9GRUUmJihlLmZlZT1oLkFMR09SQU5EX01JTl9UWF9GRUUpO2NvbnN0IGE9dS5rZXlQYWlyRnJvbVNlY3JldEtleShyKSxjPW8uZW5jb2RlQWRkcmVzcyhhLnB1YmxpY0tleSkse2xlYXNlOmx9PWU7ZGVsZXRlIGUubGVhc2U7Y29uc3QgcD1uZXcgaC5UcmFuc2FjdGlvbihlKTtwLmFkZExlYXNlKGwsbik7Y29uc3QgZj17ZnJvbTpjLHRvOmUuZnJvbSxmZWU6bixhbW91bnQ6cC5mZWUsZmlyc3RSb3VuZDplLmZpcnN0Um91bmQsbGFzdFJvdW5kOmUubGFzdFJvdW5kLGdlbmVzaXNIYXNoOmUuZ2VuZXNpc0hhc2gsdHlwZTpcInBheVwifSxkPW5ldyBoLlRyYW5zYWN0aW9uKGYpO2QuYWRkTGVhc2UobCxuKTtjb25zdCBnPWkuYXNzaWduR3JvdXBJRChbZCxwXSx2b2lkIDApLHk9Z1swXSxtPWdbMV0sYj17bHNpZzp0LmdldF9vYmpfZm9yX2VuY29kaW5nKCksdHhuOm0uZ2V0X29ial9mb3JfZW5jb2RpbmcoKX0sQT15LnNpZ25UeG4ociksdz1zLmVuY29kZShiKSx2PW5ldyBVaW50OEFycmF5KEEubGVuZ3RoK3cubGVuZ3RoKTtyZXR1cm4gdi5zZXQoQSksdi5zZXQodyxBLmxlbmd0aCksdn0sc2lnbkR5bmFtaWNGZWU6ZnVuY3Rpb24oZSx0LHIpe2NvbnN0IG49YS5yZWFkUHJvZ3JhbShlLHZvaWQgMCkscz1uWzBdLGk9blsxXSxsPXUua2V5UGFpckZyb21TZWNyZXRLZXkodCksaD17ZnJvbTpvLmVuY29kZUFkZHJlc3MobC5wdWJsaWNLZXkpLHRvOm8uZW5jb2RlQWRkcmVzcyhpWzBdKSxmZWU6MCxhbW91bnQ6c1syXSxjbG9zZVJlbWFpbmRlclRvOm8uZW5jb2RlQWRkcmVzcyhpWzFdKSxmaXJzdFJvdW5kOnNbM10sbGFzdFJvdW5kOnNbNF0sZ2VuZXNpc0hhc2g6cix0eXBlOlwicGF5XCIsbGVhc2U6bmV3IFVpbnQ4QXJyYXkoaVsyXSl9LHA9bmV3IGMuTG9naWNTaWcoZSx2b2lkIDApO3JldHVybiBwLnNpZ24odCkse3R4bjpoLGxzaWc6cH19fX0sMTc4NjooZSx0LHIpPT57dmFyIG49cigyNDg2KS5CdWZmZXI7Y29uc3Qgbz1yKDM0NzcpLHtrZWNjYWsyNTY6c309cig1ODMpLGk9cig1NTgzKSxhPXIoODgwMCksYz1yKDI1MTQpLHU9cig5NDE3KTtlLmV4cG9ydHM9e0hUTEM6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGkpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihzKXx8czwwKXRocm93IEVycm9yKFwiZXhwaXJ5Um91bmQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoaSl8fGk8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2xldCB1PVwiXCI7aWYoXCJzaGEyNTZcIj09PXIpdT1cIkFTQUVDQUVBQ1NZRElPYWFsaDV2TFY5NnlHWUhrbVZTdnBnalh0TXpZOHFJa1l1NXlUaXBGYmI1SUgrRHNXVi84ZnhUdVMzQmdVaWgxbDM4TFVzZm85WjNLRXJkMGdBU2JaQnBJUDY4b0xzVVNscE9wN1E0cEdnYXlBNXNvUVc4dGdmOFZsTWx5VmFWOXFJVE1RRWlEakVRSXhJUU1RY3lBeElRTVFna0VoQXhDU2dTTFFFcEVoQXhDU29TTVFJbERSQVJFQT09XCI7ZWxzZXtpZihcImtlY2NhazI1NlwiIT09cil0aHJvdyBFcnJvcihcImhhc2ggZnVuY3Rpb24gdW5yZWNvZ25pemVkXCIpO3U9XCJBU0FFQ0FFQUNTWURJT2FhbGg1dkxWOTZ5R1lIa21WU3ZwZ2pYdE16WThxSWtZdTV5VGlwRmJiNUlIK0RzV1YvOGZ4VHVTM0JnVWloMWwzOExVc2ZvOVozS0VyZDBnQVNiWkJwSVA2OG9Mc1VTbHBPcDdRNHBHZ2F5QTVzb1FXOHRnZjhWbE1seVZhVjlxSVRNUUVpRGpFUUl4SVFNUWN5QXhJUU1RZ2tFaEF4Q1NnU0xRSXBFaEF4Q1NvU01RSWxEUkFSRUE9PVwifWlmKDMyIT09bi5mcm9tKG8sXCJiYXNlNjRcIikubGVuZ3RoKXRocm93IEVycm9yKFwiaGFzaCBpbWFnZSBtdXN0IGJlIDMyIGJ5dGVzXCIpO2NvbnN0IGw9bi5mcm9tKHUsXCJiYXNlNjRcIiksaD1baSxzLHQsbyxlXSxwPVtjLnZhbFR5cGVzLklOVCxjLnZhbFR5cGVzLklOVCxjLnZhbFR5cGVzLkFERFJFU1MsYy52YWxUeXBlcy5CQVNFNjQsYy52YWxUeXBlcy5BRERSRVNTXSxmPWMuaW5qZWN0KGwsWzMsNiwxMCw0Miw3Nl0saCxwKTt0aGlzLnByb2dyYW1CeXRlcz1mO2NvbnN0IGQ9bmV3IGEuTG9naWNTaWcoZix2b2lkIDApO3RoaXMuYWRkcmVzcz1kLmFkZHJlc3MoKX1nZXRQcm9ncmFtKCl7cmV0dXJuIHRoaXMucHJvZ3JhbUJ5dGVzfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sc2lnblRyYW5zYWN0aW9uV2l0aEhUTENVbmxvY2s6ZnVuY3Rpb24oZSx0LHIpe2NvbnN0IGM9bi5mcm9tKHIsXCJiYXNlNjRcIiksbD1pLnJlYWRQcm9ncmFtKGUsdm9pZCAwKSxoPWxbMF0scD1sWzFdWzFdLGY9ZVtlLmxlbmd0aC0xNV07aWYoMT09PWYpe2NvbnN0IGU9by5jcmVhdGUoKTtpZihlLnVwZGF0ZShjKSwhbi5mcm9tKGUuaGV4KCksXCJoZXhcIikuZXF1YWxzKHApKXRocm93IG5ldyBFcnJvcihcInNoYTI1NiBoYXNoIG9mIHByZWltYWdlIGRpZCBub3QgbWF0Y2ggc3RvcmVkIGNvbnRyYWN0IGhhc2hcIil9ZWxzZXtpZigyIT09Zil0aHJvdyBuZXcgRXJyb3IoXCJoYXNoIGZ1bmN0aW9uIGluIGNvbnRyYWN0IHVucmVjb2duaXplZFwiKTt7Y29uc3QgZT1zLmNyZWF0ZSgpO2lmKGUudXBkYXRlKGMpLCFuLmZyb20oZS5oZXgoKSxcImhleFwiKS5lcXVhbHMocCkpdGhyb3cgbmV3IEVycm9yKFwia2VjY2FrMjU2IGhhc2ggb2YgcHJlaW1hZ2UgZGlkIG5vdCBtYXRjaCBzdG9yZWQgY29udHJhY3QgaGFzaFwiKX19Y29uc3QgZD1bY10sZz1uZXcgYS5Mb2dpY1NpZyhlLGQpO2RlbGV0ZSB0LnRvO2NvbnN0IHk9aFswXSxtPW5ldyB1LlRyYW5zYWN0aW9uKHQpO2lmKG0uZmVlPnkpdGhyb3cgbmV3IEVycm9yKGBmaW5hbCBmZWUgb2YgcGF5bWVudCB0cmFuc2FjdGlvbiR7bS5mZWUudG9TdHJpbmcoKX1ncmVhdGVyIHRoYW4gdHJhbnNhY3Rpb24gbWF4IGZlZSR7eS50b1N0cmluZygpfWApO3JldHVybiBhLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uKHQsZyl9fX0sODg4NjooZSx0LHIpPT57Y29uc3Qgbj1yKDE4MzQpLG89cigxNzg2KSxzPXIoNDc0OCksaT1yKDM3NTgpLGE9cigyMjAwKTtlLmV4cG9ydHM9e0R5bmFtaWNGZWU6bi5EeW5hbWljRmVlLGdldER5bmFtaWNGZWVUcmFuc2FjdGlvbnM6bi5nZXREeW5hbWljRmVlVHJhbnNhY3Rpb25zLHNpZ25EeW5hbWljRmVlOm4uc2lnbkR5bmFtaWNGZWUsSFRMQzpvLkhUTEMsc2lnblRyYW5zYWN0aW9uV2l0aEhUTENVbmxvY2s6by5zaWduVHJhbnNhY3Rpb25XaXRoSFRMQ1VubG9jayxMaW1pdE9yZGVyOnMuTGltaXRPcmRlcixnZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb246cy5nZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb24sU3BsaXQ6aS5TcGxpdCxnZXRTcGxpdEZ1bmRzVHJhbnNhY3Rpb246aS5nZXRTcGxpdEZ1bmRzVHJhbnNhY3Rpb24sUGVyaW9kaWNQYXltZW50OmEuUGVyaW9kaWNQYXltZW50LGdldFBlcmlvZGljUGF5bWVudFdpdGhkcmF3YWxUcmFuc2FjdGlvbjphLmdldFBlcmlvZGljUGF5bWVudFdpdGhkcmF3YWxUcmFuc2FjdGlvbn19LDQ3NDg6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig1NTgzKSxjPXIoODgwMCksdT1yKDk0MDQpLGw9cigyNTE0KSxoPXIoNDEzKTtlLmV4cG9ydHM9e0xpbWl0T3JkZXI6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGksYSl7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHQpfHx0PDApdGhyb3cgRXJyb3IoXCJhc3NldGlkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIpfHxyPDApdGhyb3cgRXJyb3IoXCJyYXRuIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG8pfHxvPDApdGhyb3cgRXJyb3IoXCJyYXRkIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHMpfHxzPDApdGhyb3cgRXJyb3IoXCJleHBpcnlSb3VuZCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihpKXx8aTwwKXRocm93IEVycm9yKFwibWluVHJhZGUgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoYSl8fGE8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2NvbnN0IHU9bi5mcm9tKFwiQVNBS0FBRUZBZ1lFQndnSkNpWUJJUDY4b0xzVVNscE9wN1E0cEdnYXlBNXNvUVc4dGdmOFZsTWx5VmFWOXFJVE1SWWlFakVRSXhJUU1RRWtEaEF5QkNNU1FBQlZNZ1FsRWpFSUlRUU5FREVKTWdNU0VETUJFQ0VGRWhBekFSRWhCaElRTXdFVUtCSVFNd0VUTWdNU0VETUJFaUVISFRVQ05RRXhDQ0VJSFRVRU5RTTBBVFFERFVBQUpEUUJOQU1TTkFJMEJBOFFRQUFXQURFSktCSXhBaUVKRFJBeEJ6SURFaEF4Q0NJU0VCQT1cIixcImJhc2U2NFwiKSxoPVthLGksdCxvLHIscyxlXSxwPVtsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLklOVCxsLnZhbFR5cGVzLkFERFJFU1NdLGY9bC5pbmplY3QodSxbNSw3LDksMTAsMTEsMTIsMTZdLGgscCk7dGhpcy5wcm9ncmFtQnl0ZXM9Zjtjb25zdCBkPW5ldyBjLkxvZ2ljU2lnKGYsdm9pZCAwKTt0aGlzLmFkZHJlc3M9ZC5hZGRyZXNzKCksdGhpcy5vd25lcj1lLHRoaXMuYXNzZXRpZD10fWdldFByb2dyYW0oKXtyZXR1cm4gdGhpcy5wcm9ncmFtQnl0ZXN9Z2V0QWRkcmVzcygpe3JldHVybiB0aGlzLmFkZHJlc3N9fSxnZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb246ZnVuY3Rpb24oZSx0LHIsbixsLHAsZixkKXtjb25zdCBnPXUua2V5UGFpckZyb21TZWNyZXRLZXkobikseT1vLmVuY29kZUFkZHJlc3MoZy5wdWJsaWNLZXkpLG09YS5yZWFkUHJvZ3JhbShlLHZvaWQgMCksYj1tWzBdLEE9bVsxXTtsZXQgdztjb25zdCB2PWJbNl0sUz1vLmVuY29kZUFkZHJlc3MoQVswXSkseD1jLm1ha2VMb2dpY1NpZyhlLHZvaWQgMCksRT14LmFkZHJlc3MoKSxUPVtzLm1ha2VQYXltZW50VHhuKEUseSxsLHIsdyxwLGYsdm9pZCAwLGQsdm9pZCAwKSxzLm1ha2VBc3NldFRyYW5zZmVyVHhuKHksUyx3LHZvaWQgMCxsLHQscCxmLHZvaWQgMCxkLHZvaWQgMCx2KV0sXz1pLmFzc2lnbkdyb3VwSUQoVCksQj1iWzddLFU9Yls4XTtpZih0KkI8cipVKXRocm93IG5ldyBFcnJvcihgYmFkIHBheW1lbnQgcmF0aW8sICR7dC50b1N0cmluZygpfSoke0IudG9TdHJpbmcoKX0gIT49ICR7ci50b1N0cmluZygpfSoke1UudG9TdHJpbmcoKX1gKTtjb25zdCBrPWJbNF07aWYocjxrKXRocm93IG5ldyBFcnJvcihgcGF5bWVudCBhbW91bnQgJHtyLnRvU3RyaW5nKCl9IGxlc3MgdGhhbiBtaW5pbXVtIHRyYWRlICR7ay50b1N0cmluZygpfWApO2NvbnN0IEk9YlsyXTtpZihfWzBdLmZlZT5JKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIHBheW1lbnQgdHJhbnNhY3Rpb24gJHtfWzBdLmZlZS50b1N0cmluZygpfSBncmVhdGVyIHRoYW4gdHJhbnNhY3Rpb24gbWF4IGZlZSAke0kudG9TdHJpbmcoKX1gKTtpZihfWzFdLmZlZT5JKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIGFzc2V0IHRyYW5zYWN0aW9uICR7X1sxXS5mZWUudG9TdHJpbmcoKX0gZ3JlYXRlciB0aGFuIHRyYW5zYWN0aW9uIG1heCBmZWUgJHtJLnRvU3RyaW5nKCl9YCk7Y29uc3QgQz1jLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0KF9bMF0seCksUj1fWzFdLnNpZ25UeG4obik7cmV0dXJuIGguY29uY2F0QXJyYXlzKEMuYmxvYixSKX19fSwyMjAwOihlLHQscik9Pnt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtjb25zdCBvPXIoNzExNikscz1yKDE5ODgpLGk9cig1NTgzKSxhPXIoODgwMCksYz1yKDk0MDQpLHU9cigyNTE0KTtlLmV4cG9ydHM9e1BlcmlvZGljUGF5bWVudDpjbGFzc3tjb25zdHJ1Y3RvcihlLHQscixvLHMsaSx1KXtpZih0aGlzLnJlY2VpdmVyPWUsIU51bWJlci5pc1NhZmVJbnRlZ2VyKHQpfHx0PDApdGhyb3cgRXJyb3IoXCJhbW91bnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih0aGlzLmFtb3VudD10LCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyKXx8cjwwKXRocm93IEVycm9yKFwid2l0aGRyYXdhbFdpbmRvdyBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHRoaXMud2l0aGRyYXdhbFdpbmRvdz1yLCFOdW1iZXIuaXNTYWZlSW50ZWdlcihvKXx8bzwwKXRocm93IEVycm9yKFwicGVyaW9kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5wZXJpb2Q9bywhTnVtYmVyLmlzU2FmZUludGVnZXIocyl8fHM8MCl0aHJvdyBFcnJvcihcImV4cGlyeVJvdW5kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5leHBpcnlSb3VuZD1zLCFOdW1iZXIuaXNTYWZlSW50ZWdlcihpKXx8aTwwKXRocm93IEVycm9yKFwibWF4RmVlIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYodGhpcy5tYXhGZWU9aSx2b2lkIDA9PT11KXtjb25zdCBlPWMucmFuZG9tQnl0ZXMoMzIpO3RoaXMubGVhc2U9bi5mcm9tKGUpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfWVsc2UgdGhpcy5sZWFzZT11O3RoaXMucHJvZ3JhbUJ5dGVzPXRoaXMuZ2V0UHJvZ3JhbSgpO2NvbnN0IGw9bmV3IGEuTG9naWNTaWcodGhpcy5wcm9ncmFtQnl0ZXMsdm9pZCAwKTt0aGlzLmFkZHJlc3M9bC5hZGRyZXNzKCl9Z2V0UHJvZ3JhbSgpe2NvbnN0IGU9bi5mcm9tKFwiQVNBSEFRWUZBQVFEQnlZQ0lBRUNBd1FGQmdjSUFRSURCQVVHQndnQkFnTUVCUVlIQ0FFQ0F3UUZCZ2NJSUpLdmtZVGtFendKZjJhcnpKT3hFUnNTb2dHOW5RektQa3BJb2M0VHpQVEZNUkFpRWpFQkl3NFFNUUlrR0NVU0VERUVJUVF4QWdnU0VERUdLQklRTVFreUF4SXhCeWtTRURFSUlRVVNFREVKS1JJeEJ6SURFaEF4QWlFR0RSQXhDQ1VTRUJFUVwiLFwiYmFzZTY0XCIpLHQ9W3RoaXMubWF4RmVlLHRoaXMucGVyaW9kLHRoaXMud2l0aGRyYXdhbFdpbmRvdyx0aGlzLmFtb3VudCx0aGlzLmV4cGlyeVJvdW5kLHRoaXMubGVhc2UsdGhpcy5yZWNlaXZlcl0scj1bdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5CQVNFNjQsdS52YWxUeXBlcy5BRERSRVNTXTtyZXR1cm4gdS5pbmplY3QoZSxbNCw1LDcsOCw5LDEyLDQ2XSx0LHIpfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sZ2V0UGVyaW9kaWNQYXltZW50V2l0aGRyYXdhbFRyYW5zYWN0aW9uOmZ1bmN0aW9uKGUsdCxyLG4pe2NvbnN0IGM9aS5yZWFkUHJvZ3JhbShlLHZvaWQgMCksdT1jWzBdLGw9Y1sxXSxoPXVbMl0scD11WzRdLGY9dVs1XTtpZihyJWghPTApdGhyb3cgbmV3IEVycm9yKGBmaXJzdFZhbGlkIHJvdW5kICR7ci50b1N0cmluZygpfSB3YXMgbm90IGEgbXVsdGlwbGUgb2YgY29udHJhY3QgcGVyaW9kICR7aC50b1N0cmluZygpfWApO2NvbnN0IGQ9bFsxXSxnPW8uZW5jb2RlQWRkcmVzcyhkKSx5PWxbMF0sbT1uZXcgVWludDhBcnJheSh5KSxiPXIrcCxBPWc7bGV0IHcsdjtjb25zdCBTPWEubWFrZUxvZ2ljU2lnKGUsdm9pZCAwKSx4PVMuYWRkcmVzcygpLEU9e2Zyb206eCx0bzpBLGZlZTp0LGFtb3VudDpmLGNsb3NlUmVtYWluZGVyVG86dyxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOmIsbm90ZTp2LGdlbmVzaXNIYXNoOm4sZ2VuZXNpc0lEOlwiXCIsdHlwZTpcInBheVwiLGxlYXNlOm19LFQ9cy5tYWtlUGF5bWVudFR4bih4LEEsdCxmLHcscixiLHYsbixcIlwiKTtpZihULmZlZT51WzFdKXRocm93IG5ldyBFcnJvcihgZmluYWwgZmVlIG9mIHBheW1lbnQgdHJhbnNhY3Rpb24ke1QuZmVlLnRvU3RyaW5nKCl9Z3JlYXRlciB0aGFuIHRyYW5zYWN0aW9uIG1heCBmZWUke3VbMV0udG9TdHJpbmcoKX1gKTtyZXR1cm4gYS5zaWduTG9naWNTaWdUcmFuc2FjdGlvbihFLFMpfX19LDM3NTg6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig4ODAwKSxjPXIoNTU4MyksdT1yKDI1MTQpLGw9cig0MTMpO2UuZXhwb3J0cz17U3BsaXQ6Y2xhc3N7Y29uc3RydWN0b3IoZSx0LHIsbyxzLGksYyxsKXtpZighTnVtYmVyLmlzU2FmZUludGVnZXIocyl8fHM8MCl0aHJvdyBFcnJvcihcInJhdDIgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIobyl8fG88MCl0aHJvdyBFcnJvcihcInJhdDEgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoaSl8fGk8MCl0aHJvdyBFcnJvcihcImV4cGlyeVJvdW5kIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKGMpfHxjPDApdGhyb3cgRXJyb3IoXCJtaW5QYXkgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIobCl8fGw8MCl0aHJvdyBFcnJvcihcIm1heEZlZSBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2NvbnN0IGg9bi5mcm9tKFwiQVNBSUFRVUNBQVlIQ0FrbUF5Q3p0d1FuMCtEeWNOK3Zzayt2Sldjc296L2I3TkRTNmkzM0hPa3ZUcGYrWWlDM3FVcElnSEdXRTgvMUxQaDlTR0NhbFNON0lhSVRlZVdTWGJmc1M1d3NYeUM0a0JRMzhaOHpjd1dWQXltNFM4dnBGQi9jMFhDNlI0bW5QaTlFQkFEc1BERVFJaEl4QVNNTUVESUVKQkpBQUJreENTZ1NNUWN5QXhJUU1RZ2xFaEF4QWlFRURSQWlRQUF1TXdBQU13RUFFakVKTWdNU0VETUFCeWtTRURNQkJ5b1NFRE1BQ0NFRkN6TUJDQ0VHQ3hJUU13QUlJUWNQRUJBPVwiLFwiYmFzZTY0XCIpLHA9W2wsaSxzLG8sYyxlLHQscl0sZj1bdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5JTlQsdS52YWxUeXBlcy5BRERSRVNTLHUudmFsVHlwZXMuQUREUkVTUyx1LnZhbFR5cGVzLkFERFJFU1NdLGQ9dS5pbmplY3QoaCxbNCw3LDgsOSwxMCwxNCw0Nyw4MF0scCxmKTt0aGlzLnByb2dyYW1CeXRlcz1kO2NvbnN0IGc9YS5tYWtlTG9naWNTaWcoZCx2b2lkIDApO3RoaXMuYWRkcmVzcz1nLmFkZHJlc3MoKX1nZXRQcm9ncmFtKCl7cmV0dXJuIHRoaXMucHJvZ3JhbUJ5dGVzfWdldEFkZHJlc3MoKXtyZXR1cm4gdGhpcy5hZGRyZXNzfX0sZ2V0U3BsaXRGdW5kc1RyYW5zYWN0aW9uOmZ1bmN0aW9uKGUsdCxyLG4sdSxoKXtjb25zdCBwPWMucmVhZFByb2dyYW0oZSx2b2lkIDApLGY9cFswXSxkPXBbMV07bGV0IGc9Zls2XSx5PWZbNV0sbT0wO2NvbnN0IGI9KGUsdCk9PntpZihcIm51bWJlclwiIT10eXBlb2YgZXx8XCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwiZ2NkIG9wZXJhdGVzIG9ubHkgb24gcG9zaXRpdmUgaW50ZWdlcnNcIik7cmV0dXJuIHQ/Yih0LGUldCk6ZX0sQT1iKGcseSk7Zz1NYXRoLmZsb29yKGcvQSkseT1NYXRoLmZsb29yKHkvQSk7Y29uc3Qgdz15L2c7bT1NYXRoLnJvdW5kKHQvKDErdykpO2NvbnN0IHY9dC1tO2lmKHkqbSE9Zyp2KXRocm93IEVycm9yKFwiY291bGQgbm90IHNwbGl0IGZ1bmRzIGluIGEgd2F5IHRoYXQgc2F0aXNmaWVkIHRoZSBjb250cmFjdCByYXRpb1wiKTtjb25zdCBTPWEubWFrZUxvZ2ljU2lnKGUsdm9pZCAwKS5hZGRyZXNzKCkseD1vLmVuY29kZUFkZHJlc3MoZFsxXSksRT1vLmVuY29kZUFkZHJlc3MoZFsyXSksVD1bcy5tYWtlUGF5bWVudFR4bihTLHgsdSxtLHZvaWQgMCxyLG4sdm9pZCAwLGgpLHMubWFrZVBheW1lbnRUeG4oUyxFLHUsdix2b2lkIDAscixuLHZvaWQgMCxoKV0sXz1pLmFzc2lnbkdyb3VwSUQoVCkubWFwKChlPT5hLnNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0KGUsYSkuYmxvYikpO3JldHVybiBsLmNvbmNhdEFycmF5cyhfWzBdLF9bMV0pfX19LDI1MTQ6KGUsdCxyKT0+e3ZhciBuPXIoMjQ4NikuQnVmZmVyO2NvbnN0IG89cig3MTE2KTtmdW5jdGlvbiBzKGUsdCl7bGV0IHI9MDtmb3IoO3Q+MTI4OyllLnB1c2goMjU1JnR8MTI4KSx0Pj49NyxyKz0xO3JldHVybiBlLnB1c2goMjU1JnQpLHIrMX1jb25zdCBpPXtJTlQ6MSxBRERSRVNTOjIsQkFTRTY0OjN9O2UuZXhwb3J0cz17aW5qZWN0OmZ1bmN0aW9uKGUsdCxyLGEpe2lmKHQubGVuZ3RoIT09ci5sZW5ndGh8fHQubGVuZ3RoIT09YS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTGVuZ3RocyBkbyBub3QgbWF0Y2hcIik7bGV0IGM9ZTtmdW5jdGlvbiB1KGUsdCxyLG8pe2NvbnN0IHM9ZS5zbGljZSgwLHIpLGk9ZS5zbGljZShyK28sZS5sZW5ndGgpLGE9W3Msbi5mcm9tKHQpLGldO3JldHVybiBuLmNvbmNhdChhKX1mb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7bGV0IGw9MCxoPXJbZV07c3dpdGNoKGFbZV0pe2Nhc2UgaS5JTlQ6Y29uc3Qgcj1bXTtsPXMocixoKSxjPXUoYyxyLHRbZV0sMSk7YnJlYWs7Y2FzZSBpLkFERFJFU1M6aD1vLmRlY29kZUFkZHJlc3MoaCksYz11KGMsaC5wdWJsaWNLZXksdFtlXSwzMik7YnJlYWs7Y2FzZSBpLkJBU0U2NDpjb25zdCBhPVtdO2g9bi5mcm9tKGgsXCJiYXNlNjRcIikscyhhLGgubGVuZ3RoKSxoPW4uY29uY2F0KFtuLmZyb20oYSksaF0pLGM9dShjLGgsdFtlXSwzMyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJ1bnJlY29nbml6ZWQgdmFsdWUgdHlwZVwiKX1pZigwIT09bClmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdKz1sLTF9cmV0dXJuIGN9LHZhbFR5cGVzOml9fSw3Njc3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7SlE6KCk9Pm0sXzQ6KCk9PlMsWDM6KCk9PnYsUjA6KCk9PmIsakQ6KCk9PkEsWWg6KCk9PkQsYkw6KCk9Pk4sTHM6KCk9PlIsVVY6KCk9PkIsQXg6KCk9PncsQTk6KCk9Pl8sdzE6KCk9PngsTks6KCk9PmQsUlk6KCk9PnksUHU6KCk9PmcsVms6KCk9PmMsbmg6KCk9Pmgsa0c6KCk9PmEscUg6KCk9PmwsSkg6KCk9PnUsdko6KCk9PkksbzU6KCk9PkMsQUU6KCk9PmssSTU6KCk9Pk99KTt2YXIgbj1yKDcxMTYpLG89cig4OTIyKSxzPXIoNDEzKSxpPXIoMjQ4NikuQnVmZmVyO2NvbnN0IGE9NjU1MzUsYz0zMix1PTEsbD0xLGg9MixwPS9eKFthLXpcXGRbXFxdKCksXSspXFxbKFsxLTldW1xcZF0qKV0kLyxmPS9edWZpeGVkKFsxLTldW1xcZF0qKXgoWzEtOV1bXFxkXSopJC87Y2xhc3MgZHtzdGF0aWMgZnJvbShlKXtpZihlLmVuZHNXaXRoKFwiW11cIikpe2NvbnN0IHQ9ZC5mcm9tKGUuc2xpY2UoMCxlLmxlbmd0aC0yKSk7cmV0dXJuIG5ldyBTKHQpfWlmKGUuZW5kc1dpdGgoXCJdXCIpKXtjb25zdCB0PWUubWF0Y2gocCk7aWYoMyE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihgbWFsZm9ybWVkIHN0YXRpYyBhcnJheSBzdHJpbmc6ICR7ZX1gKTtjb25zdCByPXRbMl0sbj1wYXJzZUludChyLDEwKTtpZihuPmEpdGhyb3cgbmV3IEVycm9yKGBhcnJheSBsZW5ndGggZXhjZWVkcyBsaW1pdCAke2F9YCk7Y29uc3Qgbz1kLmZyb20odFsxXSk7cmV0dXJuIG5ldyB2KG8sbil9aWYoZS5zdGFydHNXaXRoKFwidWludFwiKSl7Y29uc3QgdD1lPT5bLi4uZV0uZXZlcnkoKGU9PlwiMDEyMzQ1Njc4OVwiLmluY2x1ZGVzKGUpKSkscj1lLnNsaWNlKDQsZS5sZW5ndGgpO2lmKCF0KHIpKXRocm93IG5ldyBFcnJvcihgbWFsZm9ybWVkIHVpbnQgc3RyaW5nOiAke3J9YCk7Y29uc3Qgbj1wYXJzZUludChyLDEwKTtpZihuPmEpdGhyb3cgbmV3IEVycm9yKGBtYWxmb3JtZWQgdWludCBzdHJpbmc6ICR7bn1gKTtyZXR1cm4gbmV3IGcobil9aWYoXCJieXRlXCI9PT1lKXJldHVybiBuZXcgQTtpZihlLnN0YXJ0c1dpdGgoXCJ1Zml4ZWRcIikpe2NvbnN0IHQ9ZS5tYXRjaChmKTtpZigzIT09dC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBtYWxmb3JtZWQgdWZpeGVkIHR5cGU6ICR7ZX1gKTtjb25zdCByPXBhcnNlSW50KHRbMV0sMTApLG49cGFyc2VJbnQodFsyXSwxMCk7cmV0dXJuIG5ldyB5KHIsbil9aWYoXCJib29sXCI9PT1lKXJldHVybiBuZXcgYjtpZihcImFkZHJlc3NcIj09PWUpcmV0dXJuIG5ldyBtO2lmKFwic3RyaW5nXCI9PT1lKXJldHVybiBuZXcgdztpZihlLmxlbmd0aD49MiYmXCIoXCI9PT1lWzBdJiZcIilcIj09PWVbZS5sZW5ndGgtMV0pe2NvbnN0IHQ9eC5wYXJzZVR1cGxlQ29udGVudChlLnNsaWNlKDEsZS5sZW5ndGgtMSkpLHI9W107Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspe2NvbnN0IG49ZC5mcm9tKHRbZV0pO3IucHVzaChuKX1yZXR1cm4gbmV3IHgocil9dGhyb3cgbmV3IEVycm9yKGBjYW5ub3QgY29udmVydCBhIHN0cmluZyAke2V9IHRvIGFuIEFCSSB0eXBlYCl9fWNsYXNzIGcgZXh0ZW5kcyBke2NvbnN0cnVjdG9yKGUpe2lmKHN1cGVyKCksZSU4IT0wfHxlPDh8fGU+NTEyKXRocm93IG5ldyBFcnJvcihgdW5zdXBwb3J0ZWQgdWludCB0eXBlIGJpdFNpemU6ICR7ZX1gKTt0aGlzLmJpdFNpemU9ZX10b1N0cmluZygpe3JldHVybmB1aW50JHt0aGlzLmJpdFNpemV9YH1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBnJiZ0aGlzLmJpdFNpemU9PT1lLmJpdFNpemV9aXNEeW5hbWljKCl7cmV0dXJuITF9Ynl0ZUxlbigpe3JldHVybiB0aGlzLmJpdFNpemUvOH1lbmNvZGUoZSl7aWYoXCJiaWdpbnRcIiE9dHlwZW9mIGUmJlwibnVtYmVyXCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyB1aW50JHt0aGlzLmJpdFNpemV9OiAke2V9YCk7aWYoZT49QmlnSW50KDIqKnRoaXMuYml0U2l6ZSl8fGU8QmlnSW50KDApKXRocm93IG5ldyBFcnJvcihgJHtlfSBpcyBub3QgYSBub24tbmVnYXRpdmUgaW50IG9yIHRvbyBiaWcgdG8gZml0IGluIHNpemUgdWludCR7dGhpcy5iaXRTaXplfWApO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlJiYhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKGAke2V9IHNob3VsZCBiZSBjb252ZXJ0ZWQgaW50byBhIEJpZ0ludCBiZWZvcmUgaXQgaXMgZW5jb2RlZGApO3JldHVybigwLG8uaikoZSx0aGlzLmJpdFNpemUvOCl9ZGVjb2RlKGUpe2lmKGUubGVuZ3RoIT09dGhpcy5iaXRTaXplLzgpdGhyb3cgbmV3IEVycm9yKGBieXRlIHN0cmluZyBtdXN0IGNvcnJlc3BvbmQgdG8gYSB1aW50JHt0aGlzLmJpdFNpemV9YCk7cmV0dXJuKDAsby52KShlKX19Y2xhc3MgeSBleHRlbmRzIGR7Y29uc3RydWN0b3IoZSx0KXtpZihzdXBlcigpLGUlOCE9MHx8ZTw4fHxlPjUxMil0aHJvdyBuZXcgRXJyb3IoYHVuc3VwcG9ydGVkIHVmaXhlZCB0eXBlIGJpdFNpemU6ICR7ZX1gKTtpZih0PjE2MHx8dDwxKXRocm93IG5ldyBFcnJvcihgdW5zdXBwb3J0ZWQgdWZpeGVkIHR5cGUgcHJlY2lzaW9uOiAke3R9YCk7dGhpcy5iaXRTaXplPWUsdGhpcy5wcmVjaXNpb249dH10b1N0cmluZygpe3JldHVybmB1Zml4ZWQke3RoaXMuYml0U2l6ZX14JHt0aGlzLnByZWNpc2lvbn1gfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHkmJnRoaXMuYml0U2l6ZT09PWUuYml0U2l6ZSYmdGhpcy5wcmVjaXNpb249PT1lLnByZWNpc2lvbn1pc0R5bmFtaWMoKXtyZXR1cm4hMX1ieXRlTGVuKCl7cmV0dXJuIHRoaXMuYml0U2l6ZS84fWVuY29kZShlKXtpZihcImJpZ2ludFwiIT10eXBlb2YgZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2lmKGU+PUJpZ0ludCgyKip0aGlzLmJpdFNpemUpfHxlPEJpZ0ludCgwKSl0aHJvdyBuZXcgRXJyb3IoYCR7ZX0gaXMgbm90IGEgbm9uLW5lZ2F0aXZlIGludCBvciB0b28gYmlnIHRvIGZpdCBpbiBzaXplICR7dGhpcy50b1N0cmluZygpfWApO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlJiYhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKGAke2V9IHNob3VsZCBiZSBjb252ZXJ0ZWQgaW50byBhIEJpZ0ludCBiZWZvcmUgaXQgaXMgZW5jb2RlZGApO3JldHVybigwLG8uaikoZSx0aGlzLmJpdFNpemUvOCl9ZGVjb2RlKGUpe2lmKGUubGVuZ3RoIT09dGhpcy5iaXRTaXplLzgpdGhyb3cgbmV3IEVycm9yKGBieXRlIHN0cmluZyBtdXN0IGNvcnJlc3BvbmQgdG8gYSAke3RoaXMudG9TdHJpbmcoKX1gKTtyZXR1cm4oMCxvLnYpKGUpfX1jbGFzcyBtIGV4dGVuZHMgZHt0b1N0cmluZygpe3JldHVyblwiYWRkcmVzc1wifWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIG19aXNEeW5hbWljKCl7cmV0dXJuITF9Ynl0ZUxlbigpe3JldHVybiBjfWVuY29kZShlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSYmIShlIGluc3RhbmNlb2YgVWludDhBcnJheSkpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybigwLG4uZGVjb2RlQWRkcmVzcykoZSkucHVibGljS2V5O2lmKDMyIT09ZS5ieXRlTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJ5dGUgc3RyaW5nIG11c3QgYmUgMzIgYnl0ZXMgbG9uZyBmb3IgYW4gYWRkcmVzc1wiKTtyZXR1cm4gZX1kZWNvZGUoZSl7aWYoMzIhPT1lLmJ5dGVMZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZSBzdHJpbmcgbXVzdCBiZSAzMiBieXRlcyBsb25nIGZvciBhbiBhZGRyZXNzXCIpO3JldHVybigwLG4uZW5jb2RlQWRkcmVzcykoZSl9fWNsYXNzIGIgZXh0ZW5kcyBke3RvU3RyaW5nKCl7cmV0dXJuXCJib29sXCJ9ZXF1YWxzKGUpe3JldHVybiBlIGluc3RhbmNlb2YgYn1pc0R5bmFtaWMoKXtyZXR1cm4hMX1ieXRlTGVuKCl7cmV0dXJuIGx9ZW5jb2RlKGUpe2lmKFwiYm9vbGVhblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBlbmNvZGUgdmFsdWUgYXMgYm9vbDogJHtlfWApO3JldHVybiBlP25ldyBVaW50OEFycmF5KFsxMjhdKTpuZXcgVWludDhBcnJheShbMF0pfWRlY29kZShlKXtpZigxIT09ZS5ieXRlTGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJvb2wgc3RyaW5nIG11c3QgYmUgMSBieXRlIGxvbmdcIik7Y29uc3QgdD1lWzBdO2lmKDEyOD09PXQpcmV0dXJuITA7aWYoMD09PXQpcmV0dXJuITE7dGhyb3cgbmV3IEVycm9yKFwiYm9vbGVhbiBjb3VsZCBub3QgYmUgZGVjb2RlZCBmcm9tIHRoZSBieXRlIHN0cmluZ1wiKX19Y2xhc3MgQSBleHRlbmRzIGR7dG9TdHJpbmcoKXtyZXR1cm5cImJ5dGVcIn1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBfWlzRHluYW1pYygpe3JldHVybiExfWJ5dGVMZW4oKXtyZXR1cm4gdX1lbmNvZGUoZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIGUmJlwiYmlnaW50XCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyBieXRlOiAke2V9YCk7aWYoXCJiaWdpbnRcIj09dHlwZW9mIGUmJihlPU51bWJlcihlKSksZTwwfHxlPjI1NSl0aHJvdyBuZXcgRXJyb3IoYCR7ZX0gY2Fubm90IGJlIGVuY29kZWQgaW50byBhIGJ5dGVgKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW2VdKX1kZWNvZGUoZSl7aWYoMSE9PWUuYnl0ZUxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJieXRlIHN0cmluZyBtdXN0IGJlIDEgYnl0ZSBsb25nXCIpO3JldHVybiBlWzBdfX1jbGFzcyB3IGV4dGVuZHMgZHt0b1N0cmluZygpe3JldHVyblwic3RyaW5nXCJ9ZXF1YWxzKGUpe3JldHVybiBlIGluc3RhbmNlb2Ygd31pc0R5bmFtaWMoKXtyZXR1cm4hMH1ieXRlTGVuKCl7dGhyb3cgbmV3IEVycm9yKGAke3RoaXMudG9TdHJpbmcoKX0gaXMgYSBkeW5hbWljIHR5cGVgKX1lbmNvZGUoZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUmJiEoZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyBzdHJpbmc6ICR7ZX1gKTtjb25zdCB0PWkuZnJvbShlKSxyPSgwLG8uaikoZS5sZW5ndGgsaCksbj1uZXcgVWludDhBcnJheShlLmxlbmd0aCtoKTtyZXR1cm4gbi5zZXQociksbi5zZXQodCxoKSxufWRlY29kZShlKXtpZihlLmxlbmd0aDxoKXRocm93IG5ldyBFcnJvcihgYnl0ZSBzdHJpbmcgaXMgdG9vIHNob3J0IHRvIGJlIGRlY29kZWQuIEFjdHVhbCBsZW5ndGggaXMgJHtlLmxlbmd0aH0sIGJ1dCBleHBlY3RlZCBhdCBsZWFzdCAke2h9YCk7Y29uc3QgdD1pLmZyb20oZSkucmVhZFVJbnRCRSgwLGgpLHI9ZS5zbGljZShoLGUubGVuZ3RoKTtpZih0IT09ci5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBzdHJpbmcgbGVuZ3RoIGJ5dGVzIGRvIG5vdCBtYXRjaCB0aGUgYWN0dWFsIGxlbmd0aCBvZiBzdHJpbmcuIEV4cGVjdGVkICR7dH0sIGdvdCAke3IubGVuZ3RofWApO3JldHVybiBpLmZyb20ocikudG9TdHJpbmcoXCJ1dGYtOFwiKX19Y2xhc3MgdiBleHRlbmRzIGR7Y29uc3RydWN0b3IoZSx0KXtpZihzdXBlcigpLHQ8MSl0aHJvdyBuZXcgRXJyb3IoYHN0YXRpYyBhcnJheSBtdXN0IGhhdmUgYSBsZW5ndGggZ3JlYXRlciB0aGFuIDA6ICR7dH1gKTt0aGlzLmNoaWxkVHlwZT1lLHRoaXMuc3RhdGljTGVuZ3RoPXR9dG9TdHJpbmcoKXtyZXR1cm5gJHt0aGlzLmNoaWxkVHlwZS50b1N0cmluZygpfVske3RoaXMuc3RhdGljTGVuZ3RofV1gfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHYmJnRoaXMuc3RhdGljTGVuZ3RoPT09ZS5zdGF0aWNMZW5ndGgmJnRoaXMuY2hpbGRUeXBlLmVxdWFscyhlLmNoaWxkVHlwZSl9aXNEeW5hbWljKCl7cmV0dXJuIHRoaXMuY2hpbGRUeXBlLmlzRHluYW1pYygpfWJ5dGVMZW4oKXtyZXR1cm4gdGhpcy5jaGlsZFR5cGUuY29uc3RydWN0b3I9PT1iP01hdGguY2VpbCh0aGlzLnN0YXRpY0xlbmd0aC84KTp0aGlzLnN0YXRpY0xlbmd0aCp0aGlzLmNoaWxkVHlwZS5ieXRlTGVuKCl9ZW5jb2RlKGUpe2lmKCEoQXJyYXkuaXNBcnJheShlKXx8ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGVuY29kZSB2YWx1ZSBhcyAke3RoaXMudG9TdHJpbmcoKX06ICR7ZX1gKTtpZihlLmxlbmd0aCE9PXRoaXMuc3RhdGljTGVuZ3RoKXRocm93IG5ldyBFcnJvcihgVmFsdWUgYXJyYXkgZG9lcyBub3QgbWF0Y2ggc3RhdGljIGFycmF5IGxlbmd0aC4gRXhwZWN0ZWQgJHt0aGlzLnN0YXRpY0xlbmd0aH0sIGdvdCAke2UubGVuZ3RofWApO3JldHVybiB0aGlzLnRvQUJJVHVwbGVUeXBlKCkuZW5jb2RlKGUpfWRlY29kZShlKXtyZXR1cm4gdGhpcy50b0FCSVR1cGxlVHlwZSgpLmRlY29kZShlKX10b0FCSVR1cGxlVHlwZSgpe3JldHVybiBuZXcgeChBcnJheSh0aGlzLnN0YXRpY0xlbmd0aCkuZmlsbCh0aGlzLmNoaWxkVHlwZSkpfX1jbGFzcyBTIGV4dGVuZHMgZHtjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMuY2hpbGRUeXBlPWV9dG9TdHJpbmcoKXtyZXR1cm5gJHt0aGlzLmNoaWxkVHlwZS50b1N0cmluZygpfVtdYH1lcXVhbHMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBTJiZ0aGlzLmNoaWxkVHlwZS5lcXVhbHMoZS5jaGlsZFR5cGUpfWlzRHluYW1pYygpe3JldHVybiEwfWJ5dGVMZW4oKXt0aHJvdyBuZXcgRXJyb3IoYCR7dGhpcy50b1N0cmluZygpfSBpcyBhIGR5bmFtaWMgdHlwZWApfWVuY29kZShlKXtpZighKEFycmF5LmlzQXJyYXkoZSl8fGUgaW5zdGFuY2VvZiBVaW50OEFycmF5KSl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBlbmNvZGUgdmFsdWUgYXMgJHt0aGlzLnRvU3RyaW5nKCl9OiAke2V9YCk7Y29uc3QgdD10aGlzLnRvQUJJVHVwbGVUeXBlKGUubGVuZ3RoKSxyPXQuZW5jb2RlKGUpLG49KDAsby5qKSh0LmNoaWxkVHlwZXMubGVuZ3RoLGgpO3JldHVybigwLHMuY29uY2F0QXJyYXlzKShuLHIpfWRlY29kZShlKXtjb25zdCB0PWkuZnJvbShlKS5yZWFkVUludEJFKDAsaCk7cmV0dXJuIHRoaXMudG9BQklUdXBsZVR5cGUodCkuZGVjb2RlKGUuc2xpY2UoaCxlLmxlbmd0aCkpfXRvQUJJVHVwbGVUeXBlKGUpe3JldHVybiBuZXcgeChBcnJheShlKS5maWxsKHRoaXMuY2hpbGRUeXBlKSl9fWNsYXNzIHggZXh0ZW5kcyBke2NvbnN0cnVjdG9yKGUpe2lmKHN1cGVyKCksZS5sZW5ndGg+PWEpdGhyb3cgbmV3IEVycm9yKFwidHVwbGUgdHlwZSBjaGlsZCB0eXBlIG51bWJlciBsYXJnZXIgdGhhbiBtYXhpbXVtIHVpbnQxNiBlcnJvclwiKTt0aGlzLmNoaWxkVHlwZXM9ZX10b1N0cmluZygpe2NvbnN0IGU9W107Zm9yKGxldCB0PTA7dDx0aGlzLmNoaWxkVHlwZXMubGVuZ3RoO3QrKyllW3RdPXRoaXMuY2hpbGRUeXBlc1t0XS50b1N0cmluZygpO3JldHVybmAoJHtlLmpvaW4oXCIsXCIpfSlgfWVxdWFscyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHgmJnRoaXMuY2hpbGRUeXBlcy5sZW5ndGg9PT1lLmNoaWxkVHlwZXMubGVuZ3RoJiZ0aGlzLmNoaWxkVHlwZXMuZXZlcnkoKCh0LHIpPT50LmVxdWFscyhlLmNoaWxkVHlwZXNbcl0pKSl9aXNEeW5hbWljKCl7cmV0dXJuIHRoaXMuY2hpbGRUeXBlcy5zb21lKChlPT5lLmlzRHluYW1pYygpKSl9Ynl0ZUxlbigpe2xldCBlPTA7Zm9yKGxldCB0PTA7dDx0aGlzLmNoaWxkVHlwZXMubGVuZ3RoO3QrKylpZih0aGlzLmNoaWxkVHlwZXNbdF0uY29uc3RydWN0b3I9PT1iKXtjb25zdCByPVQodGhpcy5jaGlsZFR5cGVzLHQsMSksbj1yKzE7dCs9cixlKz1NYXRoLnRydW5jKChuKzcpLzgpfWVsc2UgZSs9dGhpcy5jaGlsZFR5cGVzW3RdLmJ5dGVMZW4oKTtyZXR1cm4gZX1lbmNvZGUoZSl7aWYoIShBcnJheS5pc0FycmF5KGUpfHxlIGluc3RhbmNlb2YgVWludDhBcnJheSkpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZW5jb2RlIHZhbHVlIGFzICR7dGhpcy50b1N0cmluZygpfTogJHtlfWApO2NvbnN0IHQ9QXJyYXkuZnJvbShlKTtpZihlLmxlbmd0aD5hKXRocm93IG5ldyBFcnJvcihcImxlbmd0aCBvZiB0dXBsZSBhcnJheSBzaG91bGQgbm90IGV4Y2VlZCBhIHVpbnQxNlwiKTtjb25zdCByPXRoaXMuY2hpbGRUeXBlcyxuPVtdLGk9W10sYz1uZXcgTWFwO2xldCB1PTA7Zm9yKDt1PHIubGVuZ3RoOyl7Y29uc3QgZT1yW3VdO2lmKGUuaXNEeW5hbWljKCkpYy5zZXQobi5sZW5ndGgsITApLG4ucHVzaChuZXcgVWludDhBcnJheShbMCwwXSkpLGkucHVzaChlLmVuY29kZSh0W3VdKSk7ZWxzZXtpZihlLmNvbnN0cnVjdG9yPT09Yil7Y29uc3QgZT1UKHIsdSwtMSk7bGV0IHM9VChyLHUsMSk7aWYoZSU4IT0wKXRocm93IG5ldyBFcnJvcihcImV4cGVjdGVkIGJlZm9yZSBpbmRleCBzaG91bGQgaGF2ZSBudW1iZXIgb2YgYm9vbCBtb2QgOCBlcXVhbCAwXCIpO3M9TWF0aC5taW4oNyxzKTtjb25zdCBpPUUodC5zbGljZSh1LHUrcysxKSk7bi5wdXNoKCgwLG8uaikoaSwxKSksdSs9c31lbHNle2NvbnN0IHI9ZS5lbmNvZGUodFt1XSk7bi5wdXNoKHIpfWMuc2V0KHUsITEpLGkucHVzaChuZXcgVWludDhBcnJheSl9dSs9MX1sZXQgbD0wO2Zvcihjb25zdCBlIG9mIG4pbCs9ZS5sZW5ndGg7bGV0IHA9MDtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoO2UrKyl7aWYoYy5nZXQoZSkpe2NvbnN0IHQ9bCtwO2lmKHQ+YSl0aHJvdyBuZXcgRXJyb3IoYGJ5dGUgbGVuZ3RoIG9mICR7dH0gc2hvdWxkIG5vdCBleGNlZWQgYSB1aW50MTZgKTtuW2VdPSgwLG8uaikodCxoKX1wKz1pW2VdLmxlbmd0aH1yZXR1cm4oMCxzLmNvbmNhdEFycmF5cykoLi4ubiwuLi5pKX1kZWNvZGUoZSl7Y29uc3QgdD10aGlzLmNoaWxkVHlwZXMscj1bXSxuPVtdO2xldCBvPTAscz0wO2NvbnN0IGE9aS5mcm9tKGUpO2Zvcig7bzx0Lmxlbmd0aDspe2NvbnN0IGk9dFtvXTtpZihpLmlzRHluYW1pYygpKXtpZihlLnNsaWNlKHMsZS5sZW5ndGgpLmxlbmd0aDxoKXRocm93IG5ldyBFcnJvcihcImR5bmFtaWMgdHlwZSBpbiB0dXBsZSBpcyB0b28gc2hvcnQgdG8gYmUgZGVjb2RlZFwiKTtjb25zdCB0PWEucmVhZFVJbnRCRShzLGgpO2lmKHIubGVuZ3RoPjAmJihyW3IubGVuZ3RoLTFdLnJpZ2h0PXQsdDxyW3IubGVuZ3RoLTFdLmxlZnQpKXRocm93IG5ldyBFcnJvcihcImR5bmFtaWMgaW5kZXggc2VnbWVudCBtaXNjYWxjdWxhdGlvbjogbGVmdCBpcyBncmVhdGVyIHRoYW4gcmlnaHQgaW5kZXhcIik7Y29uc3Qgbz17bGVmdDp0LHJpZ2h0Oi0xfTtyLnB1c2gobyksbi5wdXNoKG51bGwpLHMrPWh9ZWxzZSBpZihpLmNvbnN0cnVjdG9yPT09Yil7Y29uc3QgdD1UKHRoaXMuY2hpbGRUeXBlcyxvLC0xKTtsZXQgcj1UKHRoaXMuY2hpbGRUeXBlcyxvLDEpO2lmKHQlOCE9MCl0aHJvdyBuZXcgRXJyb3IoXCJleHBlY3RlZCBiZWZvcmUgYm9vbCBudW1iZXIgbW9kIDggPT09IDBcIik7cj1NYXRoLm1pbig3LHIpO2ZvcihsZXQgdD0wO3Q8PXI7dCsrKXtjb25zdCByPTEyOD4+dDsoZVtzXSZyKT4wP24ucHVzaChuZXcgVWludDhBcnJheShbMTI4XSkpOm4ucHVzaChuZXcgVWludDhBcnJheShbMF0pKX1vKz1yLHMrPTF9ZWxzZXtjb25zdCB0PWkuYnl0ZUxlbigpO24ucHVzaChlLnNsaWNlKHMscyt0KSkscys9dH1pZihvIT09dC5sZW5ndGgtMSYmcz49ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiaW5wdXQgYnl0ZSBub3QgZW5vdWdoIHRvIGRlY29kZVwiKTtvKz0xfWlmKHIubGVuZ3RoPjAmJihyW3IubGVuZ3RoLTFdLnJpZ2h0PWUubGVuZ3RoLHM9ZS5sZW5ndGgpLHM8ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiaW5wdXQgYnl0ZSBub3QgZnVsbHkgY29uc3VtZWRcIik7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspe2NvbnN0IHQ9cltlXTtpZih0LmxlZnQ+dC5yaWdodCl0aHJvdyBuZXcgRXJyb3IoXCJkeW5hbWljIHNlZ21lbnQgc2hvdWxkIGRpc3BsYXkgYSBbbCwgcl0gc3BhY2Ugd2l0aCBsIDw9IHJcIik7aWYoZSE9PXIubGVuZ3RoLTEmJnQucmlnaHQhPT1yW2UrMV0ubGVmdCl0aHJvdyBuZXcgRXJyb3IoXCJkeW5hbWljIHNlZ21lbnQgc2hvdWxkIGJlIGNvbnNlY3V0aXZlXCIpfWxldCBjPTA7Zm9yKGxldCBvPTA7bzx0Lmxlbmd0aDtvKyspdFtvXS5pc0R5bmFtaWMoKSYmKG5bb109ZS5zbGljZShyW2NdLmxlZnQscltjXS5yaWdodCksYys9MSk7Y29uc3QgdT1bXTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgcj10W2VdLmRlY29kZShuW2VdKTt1LnB1c2gocil9cmV0dXJuIHV9c3RhdGljIHBhcnNlVHVwbGVDb250ZW50KGUpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5bXTtpZihlLmVuZHNXaXRoKFwiLFwiKXx8ZS5zdGFydHNXaXRoKFwiLFwiKSl0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgc2hvdWxkIG5vdCBzdGFydCB3aXRoIGNvbW1hXCIpO2lmKGUuaW5jbHVkZXMoXCIsLFwiKSl0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgc2hvdWxkIG5vdCBoYXZlIGNvbnNlY3V0aXZlIGNvbW1hc1wiKTtjb25zdCB0PVtdO2xldCByPTAsbj1cIlwiO2Zvcihjb25zdCBvIG9mIGUpbis9byxcIihcIj09PW8/cis9MTpcIilcIj09PW8/ci09MTpcIixcIj09PW8mJjA9PT1yJiYodC5wdXNoKG4uc2xpY2UoMCxuLmxlbmd0aC0xKSksbj1cIlwiKTtpZigwIT09bi5sZW5ndGgmJnQucHVzaChuKSwwIT09cil0aHJvdyBuZXcgRXJyb3IoXCJ0dXBsZSBzdHJpbmcgaGFzIG1pc21hdGNoZWQgcGFyZW50aGVzZXNcIik7cmV0dXJuIHR9fWZ1bmN0aW9uIEUoZSl7bGV0IHQ9MDtpZihlLmxlbmd0aD44KXRocm93IG5ldyBFcnJvcihcInZhbHVlIGxpc3QgcGFzc2VkIGluIHNob3VsZCBiZSBubyBncmVhdGVyIHRoYW4gbGVuZ3RoIDhcIik7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspe2NvbnN0IG49ZVtyXTtpZihcImJvb2xlYW5cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKFwibm9uLWJvb2xlYW4gdmFsdWVzIGNhbm5vdCBiZSBjb21wcmVzc2VkIGludG8gYSBieXRlXCIpO24mJih0fD0xPDw3LXIpfXJldHVybiB0fWZ1bmN0aW9uIFQoZSx0LHIpe2xldCBuPTA7Zm9yKDs7KXtjb25zdCBvPXQrcipuO2lmKGVbb10uY29uc3RydWN0b3IhPT1iKXtuLT0xO2JyZWFrfWlmKG8hPT1lLmxlbmd0aC0xJiYxPT09ciluKz0xO2Vsc2V7aWYoIShvPjAmJi0xPT09cikpYnJlYWs7bis9MX19cmV0dXJuIG59dmFyIF8sQixVPXIoOTQwNCk7ZnVuY3Rpb24gayhlKXtyZXR1cm4gZT09PV8uYW55fHxlPT09Xy5wYXl8fGU9PT1fLmtleXJlZ3x8ZT09PV8uYWNmZ3x8ZT09PV8uYXhmZXJ8fGU9PT1fLmFmcnp8fGU9PT1fLmFwcGx9ZnVuY3Rpb24gSShlLHQpe3JldHVybiBlPT09Xy5hbnl8fHQudHlwZSYmdC50eXBlLnRvU3RyaW5nKCk9PT1lLnRvU3RyaW5nKCl9ZnVuY3Rpb24gQyhlKXtyZXR1cm4gZT09PUIuYWNjb3VudHx8ZT09PUIuYXBwbGljYXRpb258fGU9PT1CLmFzc2V0fSFmdW5jdGlvbihlKXtlLmFueT1cInR4blwiLGUucGF5PVwicGF5XCIsZS5rZXlyZWc9XCJrZXlyZWdcIixlLmFjZmc9XCJhY2ZnXCIsZS5heGZlcj1cImF4ZmVyXCIsZS5hZnJ6PVwiYWZyelwiLGUuYXBwbD1cImFwcGxcIn0oX3x8KF89e30pKSxmdW5jdGlvbihlKXtlLmFjY291bnQ9XCJhY2NvdW50XCIsZS5hcHBsaWNhdGlvbj1cImFwcGxpY2F0aW9uXCIsZS5hc3NldD1cImFzc2V0XCJ9KEJ8fChCPXt9KSk7Y2xhc3MgUntjb25zdHJ1Y3RvcihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZS5uYW1lfHxcIm9iamVjdFwiIT10eXBlb2YgZS5yZXR1cm5zfHwhQXJyYXkuaXNBcnJheShlLmFyZ3MpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQUJJTWV0aG9kIHBhcmFtZXRlcnNcIik7dGhpcy5uYW1lPWUubmFtZSx0aGlzLmRlc2NyaXB0aW9uPWUuZGVzYyx0aGlzLmFyZ3M9ZS5hcmdzLm1hcCgoKHt0eXBlOmUsbmFtZTp0LGRlc2M6cn0pPT5rKGUpfHxDKGUpP3t0eXBlOmUsbmFtZTp0LGRlc2NyaXB0aW9uOnJ9Ont0eXBlOmQuZnJvbShlKSxuYW1lOnQsZGVzY3JpcHRpb246cn0pKSx0aGlzLnJldHVybnM9e3R5cGU6XCJ2b2lkXCI9PT1lLnJldHVybnMudHlwZT9lLnJldHVybnMudHlwZTpkLmZyb20oZS5yZXR1cm5zLnR5cGUpLGRlc2NyaXB0aW9uOmUucmV0dXJucy5kZXNjfX1nZXRTaWduYXR1cmUoKXtjb25zdCBlPXRoaXMuYXJncy5tYXAoKGU9PmUudHlwZS50b1N0cmluZygpKSkuam9pbihcIixcIiksdD10aGlzLnJldHVybnMudHlwZS50b1N0cmluZygpO3JldHVybmAke3RoaXMubmFtZX0oJHtlfSkke3R9YH1nZXRTZWxlY3Rvcigpe2NvbnN0IGU9KDAsVS5nZW5lcmljSGFzaCkodGhpcy5nZXRTaWduYXR1cmUoKSk7cmV0dXJuIG5ldyBVaW50OEFycmF5KGUuc2xpY2UoMCw0KSl9dHhuQ291bnQoKXtsZXQgZT0xO2Zvcihjb25zdCB0IG9mIHRoaXMuYXJncylcInN0cmluZ1wiPT10eXBlb2YgdC50eXBlJiZrKHQudHlwZSkmJihlKz0xKTtyZXR1cm4gZX10b0pTT04oKXtyZXR1cm57bmFtZTp0aGlzLm5hbWUsZGVzYzp0aGlzLmRlc2NyaXB0aW9uLGFyZ3M6dGhpcy5hcmdzLm1hcCgoKHt0eXBlOmUsbmFtZTp0LGRlc2NyaXB0aW9uOnJ9KT0+KHt0eXBlOmUudG9TdHJpbmcoKSxuYW1lOnQsZGVzYzpyfSkpKSxyZXR1cm5zOnt0eXBlOnRoaXMucmV0dXJucy50eXBlLnRvU3RyaW5nKCksZGVzYzp0aGlzLnJldHVybnMuZGVzY3JpcHRpb259fX1zdGF0aWMgZnJvbVNpZ25hdHVyZShlKXtjb25zdHtuYW1lOnQsYXJnczpyLHJldHVybnM6bn09ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmluZGV4T2YoXCIoXCIpO2lmKC0xPT09dCl0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbWV0aG9kIHNpZ25hdHVyZTogJHtlfWApO2xldCByPS0xLG49MDtmb3IobGV0IG89dDtvPGUubGVuZ3RoO28rKyl7Y29uc3QgdD1lW29dO2lmKFwiKFwiPT09dCluKz0xO2Vsc2UgaWYoXCIpXCI9PT10KXtpZigwPT09bilicmVhaztpZihuLT0xLDA9PT1uKXtyPW87YnJlYWt9fX1pZigtMT09PXIpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG1ldGhvZCBzaWduYXR1cmU6ICR7ZX1gKTtyZXR1cm57bmFtZTplLnNsaWNlKDAsdCksYXJnczp4LnBhcnNlVHVwbGVDb250ZW50KGUuc2xpY2UodCsxLHIpKSxyZXR1cm5zOmUuc2xpY2UocisxKX19KGUpO3JldHVybiBuZXcgUih7bmFtZTp0LGFyZ3M6ci5tYXAoKGU9Pih7dHlwZTplfSkpKSxyZXR1cm5zOnt0eXBlOm59fSl9fWZ1bmN0aW9uIE8oZSx0KXtpZihudWxsPT09ZXx8IUFycmF5LmlzQXJyYXkoZSl8fCFlLmV2ZXJ5KChlPT5lIGluc3RhbmNlb2YgUikpKXRocm93IG5ldyBFcnJvcihcIk1ldGhvZHMgbGlzdCBwcm92aWRlZCBpcyBudWxsIG9yIG5vdCB0aGUgY29ycmVjdCB0eXBlXCIpO2NvbnN0IHI9ZS5maWx0ZXIoKGU9PmUubmFtZT09PXQpKTtpZihyLmxlbmd0aD4xKXRocm93IG5ldyBFcnJvcihgZm91bmQgJHtyLmxlbmd0aH0gbWV0aG9kcyB3aXRoIHRoZSBzYW1lIG5hbWUgJHtyLm1hcCgoZT0+ZS5nZXRTaWduYXR1cmUoKSkpLmpvaW4oXCIsXCIpfWApO2lmKDA9PT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYGZvdW5kIDAgbWV0aG9kcyB3aXRoIHRoZSBuYW1lICR7dH1gKTtyZXR1cm4gclswXX1jbGFzcyBEe2NvbnN0cnVjdG9yKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlLm5hbWV8fCFBcnJheS5pc0FycmF5KGUubWV0aG9kcyl8fGUubmV0d29ya3MmJlwib2JqZWN0XCIhPXR5cGVvZiBlLm5ldHdvcmtzKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQUJJQ29udHJhY3QgcGFyYW1ldGVyc1wiKTt0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuZGVzY3JpcHRpb249ZS5kZXNjLHRoaXMubmV0d29ya3M9ZS5uZXR3b3Jrcz97Li4uZS5uZXR3b3Jrc306e30sdGhpcy5tZXRob2RzPWUubWV0aG9kcy5tYXAoKGU9Pm5ldyBSKGUpKSl9dG9KU09OKCl7cmV0dXJue25hbWU6dGhpcy5uYW1lLGRlc2M6dGhpcy5kZXNjcmlwdGlvbixuZXR3b3Jrczp0aGlzLm5ldHdvcmtzLG1ldGhvZHM6dGhpcy5tZXRob2RzLm1hcCgoZT0+ZS50b0pTT04oKSkpfX1nZXRNZXRob2RCeU5hbWUoZSl7cmV0dXJuIE8odGhpcy5tZXRob2RzLGUpfX1jbGFzcyBOe2NvbnN0cnVjdG9yKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlLm5hbWV8fCFBcnJheS5pc0FycmF5KGUubWV0aG9kcykpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBBQklJbnRlcmZhY2UgcGFyYW1ldGVyc1wiKTt0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuZGVzY3JpcHRpb249ZS5kZXNjLHRoaXMubWV0aG9kcz1lLm1ldGhvZHMubWFwKChlPT5uZXcgUihlKSkpfXRvSlNPTigpe3JldHVybntuYW1lOnRoaXMubmFtZSxkZXNjOnRoaXMuZGVzY3JpcHRpb24sbWV0aG9kczp0aGlzLm1ldGhvZHMubWFwKChlPT5lLnRvSlNPTigpKSl9fWdldE1ldGhvZEJ5TmFtZShlKXtyZXR1cm4gTyh0aGlzLm1ldGhvZHMsZSl9fX0sNzk4ODooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse1o6KCk9PnN9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KTtmdW5jdGlvbiBzKCl7Y29uc3QgZT1uLmtleVBhaXIoKTtyZXR1cm57YWRkcjpvLmVuY29kZUFkZHJlc3MoZS5wdWJsaWNLZXkpLHNrOmUuc2VjcmV0S2V5fX19LDI2OTE6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5jfSk7dmFyIG49cig3MTE2KSxvPXIoMzAzMykscz1yKDk0MDQpLGk9cig0MTMpLGE9cigyNDg2KS5CdWZmZXI7Y2xhc3MgY3tjb25zdHJ1Y3Rvcih7YmlkZGVyS2V5OmUsYmlkQW1vdW50OnQsYmlkSUQ6cixhdWN0aW9uS2V5Om8sYXVjdGlvbklEOnMsbWF4UHJpY2U6aX0pe3RoaXMubmFtZT1cIkJpZFwiLHRoaXMudGFnPWEuZnJvbShbOTcsNjZdKTtjb25zdCBjPW4uZGVjb2RlQWRkcmVzcyhlKSx1PW4uZGVjb2RlQWRkcmVzcyhvKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIodCl8fHQ8MCl0aHJvdyBFcnJvcihcIkJpZCBhbW91bnQgbXVzdCBiZSBwb3NpdGl2ZSBhbmQgMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyKXx8cjwwKXRocm93IEVycm9yKFwiQmlkSUQgbXVzdCBiZSBwb3NpdGl2ZSBhbmQgMl41My0xXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihzKXx8czwwKXRocm93IEVycm9yKFwiYXVjdGlvbklEIG11c3QgYmUgcG9zaXRpdmVcIik7T2JqZWN0LmFzc2lnbih0aGlzLHtiaWRkZXJLZXk6YyxiaWRBbW91bnQ6dCxiaWRJRDpyLGF1Y3Rpb25LZXk6dSxhdWN0aW9uSUQ6cyxtYXhQcmljZTppfSl9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtyZXR1cm57YmlkZGVyOmEuZnJvbSh0aGlzLmJpZGRlcktleS5wdWJsaWNLZXkpLGN1cjp0aGlzLmJpZEFtb3VudCxwcmljZTp0aGlzLm1heFByaWNlLGlkOnRoaXMuYmlkSUQsYXVjOmEuZnJvbSh0aGlzLmF1Y3Rpb25LZXkucHVibGljS2V5KSxhaWQ6dGhpcy5hdWN0aW9uSUR9fXNpZ25CaWQoZSl7Y29uc3QgdD1vLmVuY29kZSh0aGlzLmdldF9vYmpfZm9yX2VuY29kaW5nKCkpLHI9YS5mcm9tKGkuY29uY2F0QXJyYXlzKHRoaXMudGFnLHQpKSxuPXMuc2lnbihyLGUpLGM9e3Q6XCJiXCIsYjp7c2lnOmEuZnJvbShuKSxiaWQ6dGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpfX07cmV0dXJuIG5ldyBVaW50OEFycmF5KG8uZW5jb2RlKGMpKX19fSwxMTEzOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse2RlZmF1bHQ6KCk9PnV9KTt2YXIgbj1yKDQxMyksbz1yKDUzOTEpLHM9cigyNDg2KS5CdWZmZXI7Y2xhc3MgaXtjb25zdHJ1Y3RvcihlLHQscixuPXt9KXt0aGlzLmRlZmF1bHRIZWFkZXJzPW47Y29uc3Qgbz10LmVuZHNXaXRoKFwiL1wiKT90OmAke3R9L2Ascz1uZXcgVVJMKG8pO2lmKHZvaWQgMCE9PXImJihzLnBvcnQ9ci50b1N0cmluZygpKSwwPT09cy5wcm90b2NvbC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlIHNlcnZlciBVUkwsIHByb3RvY29sIG11c3QgYmUgZGVmaW5lZC5cIik7dGhpcy5iYXNlVVJMPXMsdGhpcy50b2tlbkhlYWRlcj1lfWFkZHJlc3NXaXRoUGF0aChlKXtsZXQgdDtyZXR1cm4gdD1lLnN0YXJ0c1dpdGgoXCIuL1wiKT9lOmUuc3RhcnRzV2l0aChcIi9cIik/YC4ke2V9YDpgLi8ke2V9YCxuZXcgVVJMKHQsdGhpcy5iYXNlVVJMKS50b1N0cmluZygpfXN0YXRpYyBzdXBlcmFnZW50VG9IVFRQQ2xpZW50UmVzcG9uc2UoZSl7cmV0dXJuIGUuYm9keSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyJiYoZS5ib2R5PW5ldyBVaW50OEFycmF5KGUuYm9keSkpLGV9c3RhdGljIGZvcm1hdFN1cGVyYWdlbnRFcnJvcihlKXtpZihlLnJlc3BvbnNlKXRyeXtjb25zdCB0PUpTT04ucGFyc2Uocy5mcm9tKGUucmVzcG9uc2UuYm9keSkudG9TdHJpbmcoKSk7ZS5tZXNzYWdlPWBOZXR3b3JrIHJlcXVlc3QgZXJyb3IuIFJlY2VpdmVkIHN0YXR1cyAke2UucmVzcG9uc2Uuc3RhdHVzfTogJHt0Lm1lc3NhZ2V9YH1jYXRjaChlKXt9cmV0dXJuIGV9YXN5bmMgZ2V0KGUsdCxyPXt9KXtjb25zdCBuPW8uZ2V0KHRoaXMuYWRkcmVzc1dpdGhQYXRoKGUpKS5zZXQodGhpcy50b2tlbkhlYWRlcikuc2V0KHRoaXMuZGVmYXVsdEhlYWRlcnMpLnNldChyKS5yZXNwb25zZVR5cGUoXCJhcnJheWJ1ZmZlclwiKS5xdWVyeSh0KTt0cnl7Y29uc3QgZT1hd2FpdCBuO3JldHVybiBpLnN1cGVyYWdlbnRUb0hUVFBDbGllbnRSZXNwb25zZShlKX1jYXRjaChlKXt0aHJvdyBpLmZvcm1hdFN1cGVyYWdlbnRFcnJvcihlKX19YXN5bmMgcG9zdChlLHQscixuPXt9KXtjb25zdCBhPW8ucG9zdCh0aGlzLmFkZHJlc3NXaXRoUGF0aChlKSkuc2V0KHRoaXMudG9rZW5IZWFkZXIpLnNldCh0aGlzLmRlZmF1bHRIZWFkZXJzKS5zZXQobikucXVlcnkocikuc2VyaWFsaXplKChlPT5lKSkucmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIikuc2VuZChzLmZyb20odCkpO3RyeXtjb25zdCBlPWF3YWl0IGE7cmV0dXJuIGkuc3VwZXJhZ2VudFRvSFRUUENsaWVudFJlc3BvbnNlKGUpfWNhdGNoKGUpe3Rocm93IGkuZm9ybWF0U3VwZXJhZ2VudEVycm9yKGUpfX1hc3luYyBkZWxldGUoZSx0LHIsbj17fSl7Y29uc3QgYT1vLmRlbGV0ZSh0aGlzLmFkZHJlc3NXaXRoUGF0aChlKSkuc2V0KHRoaXMudG9rZW5IZWFkZXIpLnNldCh0aGlzLmRlZmF1bHRIZWFkZXJzKS5zZXQobikucXVlcnkocikuc2VyaWFsaXplKChlPT5lKSkucmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIikuc2VuZChzLmZyb20odCkpO3RyeXtjb25zdCBlPWF3YWl0IGE7cmV0dXJuIGkuc3VwZXJhZ2VudFRvSFRUUENsaWVudFJlc3BvbnNlKGUpfWNhdGNoKGUpe3Rocm93IGkuZm9ybWF0U3VwZXJhZ2VudEVycm9yKGUpfX19dmFyIGE9cigyNDg2KS5CdWZmZXI7ZnVuY3Rpb24gYyhlKXtyZXR1cm4gT2JqZWN0LmtleXMoZSkucmVkdWNlKCgodCxyKT0+KHRbci50b0xvd2VyQ2FzZSgpXT1lW3JdLHQpKSx7fSl9Y2xhc3MgdXtjb25zdHJ1Y3RvcihlLHQscixuPXt9KXt0aGlzLmJjPXZvaWQgMCE9PXQ/bmV3IGkoZSx0LHIsbik6ZX1zdGF0aWMgcGFyc2VKU09OKGUsdCxyPXt9KXt0cnl7cmV0dXJuIDA9PT1PYmplY3Qua2V5cyhyKS5sZW5ndGg/ZSYmSlNPTi5wYXJzZShlKTplJiZuLnBhcnNlSlNPTihlLHIpfWNhdGNoKHIpe2NvbnN0IG49cjt0aHJvdyBuLnJhd1Jlc3BvbnNlPWV8fG51bGwsbi5zdGF0dXNDb2RlPXQsbn19c3RhdGljIHNlcmlhbGl6ZURhdGEoZSx0KXtpZighZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7aWYoXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10W1wiY29udGVudC10eXBlXCJdKXJldHVybiBuZXcgVWludDhBcnJheShhLmZyb20oSlNPTi5zdHJpbmdpZnkoZSkpKTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYS5mcm9tKGUpKTtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyZXR1cm4gZTt0aHJvdyBuZXcgRXJyb3IoXCJwcm92aWRlZCBkYXRhIGlzIG5laXRoZXIgYSBzdHJpbmcgbm9yIGEgVWludDhBcnJheSBhbmQgY29udGVudC10eXBlIGlzIG5vdCBhcHBsaWNhdGlvbi9qc29uXCIpfXN0YXRpYyBwcmVwYXJlUmVzcG9uc2UoZSx0LHI9e30pe2xldCBuLHtib2R5Om99PWU7cmV0dXJuXCJhcHBsaWNhdGlvbi9tc2dwYWNrXCIhPT10JiYobj1vJiZhLmZyb20obykudG9TdHJpbmcoKXx8XCJcIiksXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10JiYobz11LnBhcnNlSlNPTihuLGUuc3RhdHVzLHIpKSx7Li4uZSxib2R5Om8sdGV4dDpuLG9rOjI9PT1NYXRoLnRydW5jKGUuc3RhdHVzLzEwMCl9fXN0YXRpYyBwcmVwYXJlUmVzcG9uc2VFcnJvcihlKXtyZXR1cm4gZS5yZXNwb25zZSYmKGUucmVzcG9uc2U9dS5wcmVwYXJlUmVzcG9uc2UoZS5yZXNwb25zZSxcImFwcGxpY2F0aW9uL2pzb25cIiksZS5zdGF0dXM9ZS5yZXNwb25zZS5zdGF0dXMpLGV9YXN5bmMgZ2V0KGUsdCxyPXt9LG49e30pe2NvbnN0IG89ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZXx8IU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLFwiZm9ybWF0XCIpKXJldHVyblwiYXBwbGljYXRpb24vanNvblwiO3N3aXRjaChlLmZvcm1hdCl7Y2FzZVwibXNncGFja1wiOnJldHVyblwiYXBwbGljYXRpb24vbXNncGFja1wiO2Nhc2VcImpzb25cIjpkZWZhdWx0OnJldHVyblwiYXBwbGljYXRpb24vanNvblwifX0odCkscz17Li4ucixhY2NlcHQ6b307dHJ5e2NvbnN0IHI9YXdhaXQgdGhpcy5iYy5nZXQoZSxmdW5jdGlvbihlKXtmb3IoY29uc3QgdCBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpJiYoZVt0XSYmMCE9PWVbdF0ubGVuZ3RofHxkZWxldGUgZVt0XSk7cmV0dXJuIGV9KHQpLHMpO3JldHVybiB1LnByZXBhcmVSZXNwb25zZShyLG8sbil9Y2F0Y2goZSl7dGhyb3cgdS5wcmVwYXJlUmVzcG9uc2VFcnJvcihlKX19YXN5bmMgcG9zdChlLHQscj17fSl7Y29uc3Qgbj17XCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIiwuLi5jKHIpfTt0cnl7Y29uc3Qgcj1hd2FpdCB0aGlzLmJjLnBvc3QoZSx1LnNlcmlhbGl6ZURhdGEodCxuKSx2b2lkIDAsbik7cmV0dXJuIHUucHJlcGFyZVJlc3BvbnNlKHIsXCJhcHBsaWNhdGlvbi9qc29uXCIpfWNhdGNoKGUpe3Rocm93IHUucHJlcGFyZVJlc3BvbnNlRXJyb3IoZSl9fWFzeW5jIGRlbGV0ZShlLHQscj17fSl7Y29uc3Qgbj17XCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIiwuLi5jKHIpfSxvPWF3YWl0IHRoaXMuYmMuZGVsZXRlKGUsdS5zZXJpYWxpemVEYXRhKHQsbiksdm9pZCAwLG4pO3JldHVybiB1LnByZXBhcmVSZXNwb25zZShvLFwiYXBwbGljYXRpb24vanNvblwiKX19fSw2NDc3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7WjooKT0+aX0pO3ZhciBuPXIoMzQ4MCksbz1yKDk0MTcpLHM9cigyNDg2KS5CdWZmZXI7Y2xhc3MgaSBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQ9XCJodHRwOi8vMTI3LjAuMC4xXCIscj03ODMzLG49e30pe3N1cGVyKFwiWC1LTUQtQVBJLVRva2VuXCIsZSx0LHIsbil9YXN5bmMgdmVyc2lvbnMoKXtyZXR1cm4oYXdhaXQgdGhpcy5jLmdldChcIi92ZXJzaW9uc1wiKSkuYm9keX1hc3luYyBsaXN0V2FsbGV0cygpe3JldHVybihhd2FpdCB0aGlzLmMuZ2V0KFwiL3YxL3dhbGxldHNcIikpLmJvZHl9YXN5bmMgY3JlYXRlV2FsbGV0KGUsdCxyPW5ldyBVaW50OEFycmF5LG49XCJzcWxpdGVcIil7Y29uc3Qgbz17d2FsbGV0X25hbWU6ZSx3YWxsZXRfZHJpdmVyX25hbWU6bix3YWxsZXRfcGFzc3dvcmQ6dCxtYXN0ZXJfZGVyaXZhdGlvbl9rZXk6cy5mcm9tKHIpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0XCIsbykpLmJvZHl9YXN5bmMgaW5pdFdhbGxldEhhbmRsZShlLHQpe2NvbnN0IHI9e3dhbGxldF9pZDplLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L2luaXRcIixyKSkuYm9keX1hc3luYyByZWxlYXNlV2FsbGV0SGFuZGxlKGUpe2NvbnN0IHQ9e3dhbGxldF9oYW5kbGVfdG9rZW46ZX07cmV0dXJuKGF3YWl0IHRoaXMuYy5wb3N0KFwiL3YxL3dhbGxldC9yZWxlYXNlXCIsdCkpLmJvZHl9YXN5bmMgcmVuZXdXYWxsZXRIYW5kbGUoZSl7Y29uc3QgdD17d2FsbGV0X2hhbmRsZV90b2tlbjplfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L3JlbmV3XCIsdCkpLmJvZHl9YXN5bmMgcmVuYW1lV2FsbGV0KGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaWQ6ZSx3YWxsZXRfcGFzc3dvcmQ6dCx3YWxsZXRfbmFtZTpyfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvd2FsbGV0L3JlbmFtZVwiLG4pKS5ib2R5fWFzeW5jIGdldFdhbGxldChlKXtjb25zdCB0PXt3YWxsZXRfaGFuZGxlX3Rva2VuOmV9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS93YWxsZXQvaW5mb1wiLHQpKS5ib2R5fWFzeW5jIGV4cG9ydE1hc3RlckRlcml2YXRpb25LZXkoZSx0KXtjb25zdCByPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsd2FsbGV0X3Bhc3N3b3JkOnR9LG49YXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbWFzdGVyLWtleS9leHBvcnRcIixyKTtyZXR1cm57bWFzdGVyX2Rlcml2YXRpb25fa2V5OnMuZnJvbShuLmJvZHkubWFzdGVyX2Rlcml2YXRpb25fa2V5LFwiYmFzZTY0XCIpfX1hc3luYyBpbXBvcnRLZXkoZSx0KXtjb25zdCByPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUscHJpdmF0ZV9rZXk6cy5mcm9tKHQpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEva2V5L2ltcG9ydFwiLHIpKS5ib2R5fWFzeW5jIGV4cG9ydEtleShlLHQscil7Y29uc3Qgbj17d2FsbGV0X2hhbmRsZV90b2tlbjplLGFkZHJlc3M6cix3YWxsZXRfcGFzc3dvcmQ6dH0sbz1hd2FpdCB0aGlzLmMucG9zdChcIi92MS9rZXkvZXhwb3J0XCIsbik7cmV0dXJue3ByaXZhdGVfa2V5OnMuZnJvbShvLmJvZHkucHJpdmF0ZV9rZXksXCJiYXNlNjRcIil9fWFzeW5jIGdlbmVyYXRlS2V5KGUpe2NvbnN0IHQ9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxkaXNwbGF5X21uZW1vbmljOiExfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEva2V5XCIsdCkpLmJvZHl9YXN5bmMgZGVsZXRlS2V5KGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsYWRkcmVzczpyLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLmRlbGV0ZShcIi92MS9rZXlcIixuKSkuYm9keX1hc3luYyBsaXN0S2V5cyhlKXtjb25zdCB0PXt3YWxsZXRfaGFuZGxlX3Rva2VuOmV9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9rZXkvbGlzdFwiLHQpKS5ib2R5fWFzeW5jIHNpZ25UcmFuc2FjdGlvbihlLHQscil7Y29uc3Qgbj1vLmluc3RhbnRpYXRlVHhuSWZOZWVkZWQociksaT17d2FsbGV0X2hhbmRsZV90b2tlbjplLHdhbGxldF9wYXNzd29yZDp0LHRyYW5zYWN0aW9uOnMuZnJvbShuLnRvQnl0ZSgpKS50b1N0cmluZyhcImJhc2U2NFwiKX0sYT1hd2FpdCB0aGlzLmMucG9zdChcIi92MS90cmFuc2FjdGlvbi9zaWduXCIsaSk7cmV0dXJuIDIwMD09PWEuc3RhdHVzP3MuZnJvbShhLmJvZHkuc2lnbmVkX3RyYW5zYWN0aW9uLFwiYmFzZTY0XCIpOmEuYm9keX1hc3luYyBzaWduVHJhbnNhY3Rpb25XaXRoU3BlY2lmaWNQdWJsaWNLZXkoZSx0LHIsbil7Y29uc3QgaT1vLmluc3RhbnRpYXRlVHhuSWZOZWVkZWQociksYT17d2FsbGV0X2hhbmRsZV90b2tlbjplLHdhbGxldF9wYXNzd29yZDp0LHRyYW5zYWN0aW9uOnMuZnJvbShpLnRvQnl0ZSgpKS50b1N0cmluZyhcImJhc2U2NFwiKSxwdWJsaWNfa2V5OnMuZnJvbShuKS50b1N0cmluZyhcImJhc2U2NFwiKX0sYz1hd2FpdCB0aGlzLmMucG9zdChcIi92MS90cmFuc2FjdGlvbi9zaWduXCIsYSk7cmV0dXJuIDIwMD09PWMuc3RhdHVzP3MuZnJvbShjLmJvZHkuc2lnbmVkX3RyYW5zYWN0aW9uLFwiYmFzZTY0XCIpOmMuYm9keX1hc3luYyBsaXN0TXVsdGlzaWcoZSl7Y29uc3QgdD17d2FsbGV0X2hhbmRsZV90b2tlbjplfTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbXVsdGlzaWcvbGlzdFwiLHQpKS5ib2R5fWFzeW5jIGltcG9ydE11bHRpc2lnKGUsdCxyLG4pe2NvbnN0IG89e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxtdWx0aXNpZ192ZXJzaW9uOnQsdGhyZXNob2xkOnIscGtzOm59O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9tdWx0aXNpZy9pbXBvcnRcIixvKSkuYm9keX1hc3luYyBleHBvcnRNdWx0aXNpZyhlLHQpe2NvbnN0IHI9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSxhZGRyZXNzOnR9O3JldHVybihhd2FpdCB0aGlzLmMucG9zdChcIi92MS9tdWx0aXNpZy9leHBvcnRcIixyKSkuYm9keX1hc3luYyBzaWduTXVsdGlzaWdUcmFuc2FjdGlvbihlLHQscixuLGkpe2NvbnN0IGE9by5pbnN0YW50aWF0ZVR4bklmTmVlZGVkKHIpLGM9e3dhbGxldF9oYW5kbGVfdG9rZW46ZSx0cmFuc2FjdGlvbjpzLmZyb20oYS50b0J5dGUoKSkudG9TdHJpbmcoXCJiYXNlNjRcIikscHVibGljX2tleTpzLmZyb20obikudG9TdHJpbmcoXCJiYXNlNjRcIikscGFydGlhbF9tdWx0aXNpZzppLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QoXCIvdjEvbXVsdGlzaWcvc2lnblwiLGMpKS5ib2R5fWFzeW5jIGRlbGV0ZU11bHRpc2lnKGUsdCxyKXtjb25zdCBuPXt3YWxsZXRfaGFuZGxlX3Rva2VuOmUsYWRkcmVzczpyLHdhbGxldF9wYXNzd29yZDp0fTtyZXR1cm4oYXdhaXQgdGhpcy5jLmRlbGV0ZShcIi92MS9tdWx0aXNpZ1wiLG4pKS5ib2R5fX19LDE2NjM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5rfSk7dmFyIG49cigzNDgwKSxvPXIoODY4MCk7Y2xhc3MgcyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH1gfWV4Y2x1ZGUoZSl7cmV0dXJuIHRoaXMucXVlcnkuZXhjbHVkZT1lLHRoaXN9fWNsYXNzIGkgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFzc2V0SUQ9bix0aGlzLmFjY291bnQ9cix0aGlzLmFzc2V0SUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXNzZXRzLyR7dGhpcy5hc3NldElEfWB9fWNsYXNzIGEgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFwcGxpY2F0aW9uSUQ9bix0aGlzLmFjY291bnQ9cix0aGlzLmFwcGxpY2F0aW9uSUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXBwbGljYXRpb25zLyR7dGhpcy5hcHBsaWNhdGlvbklEfWB9fXZhciBjPXIoMzAzMyk7Y2xhc3MgdSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe2lmKHN1cGVyKGUpLCFOdW1iZXIuaXNJbnRlZ2VyKHQpKXRocm93IEVycm9yKFwicm91bmROdW1iZXIgc2hvdWxkIGJlIGFuIGludGVnZXJcIik7dGhpcy5yb3VuZD10LHRoaXMucXVlcnk9e2Zvcm1hdDpcIm1zZ3BhY2tcIn19cGF0aCgpe3JldHVybmAvdjIvYmxvY2tzLyR7dGhpcy5yb3VuZH1gfXByZXBhcmUoZSl7aWYoZSYmZS5ieXRlTGVuZ3RoPjApcmV0dXJuIGMuZGVjb2RlKGUpfX12YXIgbD1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBoKGU9e30pe2xldCB0PWU7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmV2ZXJ5KChlPT5cImNvbnRlbnQtdHlwZVwiIT09ZS50b0xvd2VyQ2FzZSgpKSkmJih0PXsuLi5lfSx0W1wiQ29udGVudC1UeXBlXCJdPVwidGV4dC9wbGFpblwiKSx0fWNsYXNzIHAgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlKSx0aGlzLnNvdXJjZT10LHRoaXMuc291cmNlPXR9cGF0aCgpe3JldHVyblwiL3YyL3RlYWwvY29tcGlsZVwifWFzeW5jIGRvKGU9e30pe2NvbnN0IHQ9aChlKTtyZXR1cm4oYXdhaXQgdGhpcy5jLnBvc3QodGhpcy5wYXRoKCksbC5mcm9tKHRoaXMuc291cmNlKSx0KSkuYm9keX19dmFyIGY9cigyNDg2KS5CdWZmZXI7Y2xhc3MgZCBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpLHRoaXMuYmxvYj1jLmVuY29kZSh0LmdldF9vYmpfZm9yX2VuY29kaW5nKCEwKSl9cGF0aCgpe3JldHVyblwiL3YyL3RlYWwvZHJ5cnVuXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1oKGUpO3JldHVybihhd2FpdCB0aGlzLmMucG9zdCh0aGlzLnBhdGgoKSxmLmZyb20odGhpcy5ibG9iKSx0KSkuYm9keX19Y2xhc3MgZyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2Fzc2V0cy8ke3RoaXMuaW5kZXh9YH19Y2xhc3MgeSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FwcGxpY2F0aW9ucy8ke3RoaXMuaW5kZXh9YH19Y2xhc3MgbSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvaGVhbHRoXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1hd2FpdCB0aGlzLmMuZ2V0KHRoaXMucGF0aCgpLHt9LGUpO2lmKCF0Lm9rKXRocm93IG5ldyBFcnJvcihgSGVhbHRoIHJlc3BvbnNlOiAke3Quc3RhdHVzfWApO3JldHVybnt9fX1jbGFzcyBiIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSksdGhpcy50eGlkPXQsdGhpcy50eGlkPXQsdGhpcy5xdWVyeS5mb3JtYXQ9XCJtc2dwYWNrXCJ9cHJlcGFyZShlKXtpZihlJiZlLmJ5dGVMZW5ndGg+MClyZXR1cm4gYy5kZWNvZGUoZSl9cGF0aCgpe3JldHVybmAvdjIvdHJhbnNhY3Rpb25zL3BlbmRpbmcvJHt0aGlzLnR4aWR9YH1tYXgoZSl7cmV0dXJuIHRoaXMucXVlcnkubWF4PWUsdGhpc319Y2xhc3MgQSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLnF1ZXJ5LmZvcm1hdD1cIm1zZ3BhY2tcIn1wYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zL3BlbmRpbmdcIn1wcmVwYXJlKGUpe2lmKGUmJmUuYnl0ZUxlbmd0aD4wKXJldHVybiBjLmRlY29kZShlKX1tYXgoZSl7cmV0dXJuIHRoaXMucXVlcnkubWF4PWUsdGhpc319Y2xhc3MgdyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpLHRoaXMuYWRkcmVzcz10LHRoaXMuYWRkcmVzcz10LHRoaXMucXVlcnkuZm9ybWF0PVwibXNncGFja1wifXByZXBhcmUoZSl7aWYoZSYmZS5ieXRlTGVuZ3RoPjApcmV0dXJuIGMuZGVjb2RlKGUpfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hZGRyZXNzfS90cmFuc2FjdGlvbnMvcGVuZGluZ2B9bWF4KGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm1heD1lLHRoaXN9fXZhciB2PXIoNTE4MCk7Y2xhc3MgUyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvc3RhdHVzXCJ9fWNsYXNzIHggZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe2lmKHN1cGVyKGUsdCksdGhpcy5yb3VuZD1yLCFOdW1iZXIuaXNJbnRlZ2VyKHIpKXRocm93IEVycm9yKFwicm91bmQgc2hvdWxkIGJlIGFuIGludGVnZXJcIik7dGhpcy5yb3VuZD1yfXBhdGgoKXtyZXR1cm5gL3YyL3N0YXR1cy93YWl0LWZvci1ibG9jay1hZnRlci8ke3RoaXMucm91bmR9YH19Y2xhc3MgRSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zL3BhcmFtc1wifXByZXBhcmUoZSl7cmV0dXJue2ZsYXRGZWU6ITEsZmVlOmUuZmVlLGZpcnN0Um91bmQ6ZVtcImxhc3Qtcm91bmRcIl0sbGFzdFJvdW5kOmVbXCJsYXN0LXJvdW5kXCJdKzFlMyxnZW5lc2lzSUQ6ZVtcImdlbmVzaXMtaWRcIl0sZ2VuZXNpc0hhc2g6ZVtcImdlbmVzaXMtaGFzaFwiXX19fWNsYXNzIFQgZXh0ZW5kcyBvLlp7cGF0aCgpe3JldHVyblwiL3YyL2xlZGdlci9zdXBwbHlcIn19Y2xhc3MgXyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdmVyc2lvbnNcIn19Y2xhc3MgQiBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvZ2VuZXNpc1wifX1jbGFzcyBVIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyLG4pe3N1cGVyKGUsdCksdGhpcy5yb3VuZD1yLHRoaXMudHhJRD1uLHRoaXMucm91bmQ9cix0aGlzLnR4SUQ9bn1wYXRoKCl7cmV0dXJuYC92Mi9ibG9ja3MvJHt0aGlzLnJvdW5kfS90cmFuc2FjdGlvbnMvJHt0aGlzLnR4SUR9L3Byb29mYH19Y2xhc3MgayBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQ9XCJodHRwOi8vcjIuYWxnb3JhbmQubmV0d29ya1wiLHI9NDE4MCxuPXt9KXtzdXBlcihcIlgtQWxnby1BUEktVG9rZW5cIixlLHQscixuKX1oZWFsdGhDaGVjaygpe3JldHVybiBuZXcgbSh0aGlzLmMpfXZlcnNpb25zQ2hlY2soKXtyZXR1cm4gbmV3IF8odGhpcy5jKX1zZW5kUmF3VHJhbnNhY3Rpb24oZSl7cmV0dXJuIG5ldyB2LmRlZmF1bHQodGhpcy5jLGUpfWFjY291bnRJbmZvcm1hdGlvbihlKXtyZXR1cm4gbmV3IHModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9YWNjb3VudEFzc2V0SW5mb3JtYXRpb24oZSx0KXtyZXR1cm4gbmV3IGkodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSx0KX1hY2NvdW50QXBwbGljYXRpb25JbmZvcm1hdGlvbihlLHQpe3JldHVybiBuZXcgYSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlLHQpfWJsb2NrKGUpe3JldHVybiBuZXcgdSh0aGlzLmMsZSl9cGVuZGluZ1RyYW5zYWN0aW9uSW5mb3JtYXRpb24oZSl7cmV0dXJuIG5ldyBiKHRoaXMuYyxlKX1wZW5kaW5nVHJhbnNhY3Rpb25zSW5mb3JtYXRpb24oKXtyZXR1cm4gbmV3IEEodGhpcy5jKX1wZW5kaW5nVHJhbnNhY3Rpb25CeUFkZHJlc3MoZSl7cmV0dXJuIG5ldyB3KHRoaXMuYyxlKX1zdGF0dXMoKXtyZXR1cm4gbmV3IFModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfXN0YXR1c0FmdGVyQmxvY2soZSl7cmV0dXJuIG5ldyB4KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWdldFRyYW5zYWN0aW9uUGFyYW1zKCl7cmV0dXJuIG5ldyBFKHRoaXMuYyl9c3VwcGx5KCl7cmV0dXJuIG5ldyBUKHRoaXMuYyx0aGlzLmludERlY29kaW5nKX1jb21waWxlKGUpe3JldHVybiBuZXcgcCh0aGlzLmMsZSl9ZHJ5cnVuKGUpe3JldHVybiBuZXcgZCh0aGlzLmMsZSl9Z2V0QXNzZXRCeUlEKGUpe3JldHVybiBuZXcgZyh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1nZXRBcHBsaWNhdGlvbkJ5SUQoZSl7cmV0dXJuIG5ldyB5KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWdlbmVzaXMoKXtyZXR1cm4gbmV3IEIodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfWdldFByb29mKGUsdCl7cmV0dXJuIG5ldyBVKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUsdCl9fX0sMjI3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse0FjY291bnQ6KCk9PmEsQWNjb3VudEFwcGxpY2F0aW9uUmVzcG9uc2U6KCk9PmMsQWNjb3VudEFzc2V0UmVzcG9uc2U6KCk9PnUsQWNjb3VudFBhcnRpY2lwYXRpb246KCk9PmwsQWNjb3VudFN0YXRlRGVsdGE6KCk9PmgsQXBwbGljYXRpb246KCk9PnAsQXBwbGljYXRpb25Mb2NhbFN0YXRlOigpPT5mLEFwcGxpY2F0aW9uUGFyYW1zOigpPT5kLEFwcGxpY2F0aW9uU3RhdGVTY2hlbWE6KCk9PmcsQXNzZXQ6KCk9PnksQXNzZXRIb2xkaW5nOigpPT5tLEFzc2V0UGFyYW1zOigpPT5iLEJsb2NrUmVzcG9uc2U6KCk9PkEsQnVpbGRWZXJzaW9uOigpPT53LENhdGNocG9pbnRBYm9ydFJlc3BvbnNlOigpPT52LENhdGNocG9pbnRTdGFydFJlc3BvbnNlOigpPT5TLENvbXBpbGVSZXNwb25zZTooKT0+eCxEaXNhc3NlbWJsZVJlc3BvbnNlOigpPT5FLERyeXJ1blJlcXVlc3Q6KCk9PlQsRHJ5cnVuUmVzcG9uc2U6KCk9Pl8sRHJ5cnVuU291cmNlOigpPT5CLERyeXJ1blN0YXRlOigpPT5VLERyeXJ1blR4blJlc3VsdDooKT0+ayxFcnJvclJlc3BvbnNlOigpPT5JLEV2YWxEZWx0YTooKT0+QyxFdmFsRGVsdGFLZXlWYWx1ZTooKT0+UixOb2RlU3RhdHVzUmVzcG9uc2U6KCk9Pk8sUGVuZGluZ1RyYW5zYWN0aW9uUmVzcG9uc2U6KCk9PkQsUGVuZGluZ1RyYW5zYWN0aW9uc1Jlc3BvbnNlOigpPT5OLFBvc3RUcmFuc2FjdGlvbnNSZXNwb25zZTooKT0+UCxQcm9vZlJlc3BvbnNlOigpPT5MLFN1cHBseVJlc3BvbnNlOigpPT5GLFRlYWxLZXlWYWx1ZTooKT0+eixUZWFsVmFsdWU6KCk9PmosVHJhbnNhY3Rpb25QYXJhbWV0ZXJzUmVzcG9uc2U6KCk9Pk0sVmVyc2lvbjooKT0+SH0pO3ZhciBuPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIG8oZSx0KXtsZXQgcjtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyPXQ/ZTpuLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIik7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmdldF9vYmpfZm9yX2VuY29kaW5nKXI9ZS5nZXRfb2JqX2Zvcl9lbmNvZGluZyh0KTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpe3I9W107Zm9yKGNvbnN0IG4gb2YgZSlyLnB1c2gobyhuLHQpKX1lbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBlKXtjb25zdCBuPXt9O2Zvcihjb25zdCByIG9mIE9iamVjdC5rZXlzKGUpKW5bcl09byhlW3JdLHQpO3I9bn1lbHNle2lmKCFmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZXx8bnVsbD09ZXx8XCJvYmplY3RcIiE9dHlwZW9mIGUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGV9KGUpKXRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgdmFsdWU6ICR7U3RyaW5nKGUpfWApO3I9ZX1yZXR1cm4gcn1jbGFzcyBze2dldF9vYmpfZm9yX2VuY29kaW5nKGU9ITEpe2NvbnN0IHQ9e307Zm9yKGNvbnN0IHIgb2YgT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVfbWFwKSl7Y29uc3Qgbj10aGlzLmF0dHJpYnV0ZV9tYXBbcl0scz10aGlzW3JdO3ZvaWQgMCE9PXMmJih0W25dPW51bGw9PT1zP251bGw6byhzLGUpKX1yZXR1cm4gdH19dmFyIGk9cigyNDg2KS5CdWZmZXI7Y2xhc3MgYSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2FkZHJlc3M6ZSxhbW91bnQ6dCxhbW91bnRXaXRob3V0UGVuZGluZ1Jld2FyZHM6cixtaW5CYWxhbmNlOm4scGVuZGluZ1Jld2FyZHM6byxyZXdhcmRzOnMscm91bmQ6aSxzdGF0dXM6YSx0b3RhbEFwcHNPcHRlZEluOmMsdG90YWxBc3NldHNPcHRlZEluOnUsdG90YWxDcmVhdGVkQXBwczpsLHRvdGFsQ3JlYXRlZEFzc2V0czpoLGFwcHNMb2NhbFN0YXRlOnAsYXBwc1RvdGFsRXh0cmFQYWdlczpmLGFwcHNUb3RhbFNjaGVtYTpkLGFzc2V0czpnLGF1dGhBZGRyOnksY3JlYXRlZEFwcHM6bSxjcmVhdGVkQXNzZXRzOmIscGFydGljaXBhdGlvbjpBLHJld2FyZEJhc2U6dyxzaWdUeXBlOnZ9KXtzdXBlcigpLHRoaXMuYWRkcmVzcz1lLHRoaXMuYW1vdW50PXQsdGhpcy5hbW91bnRXaXRob3V0UGVuZGluZ1Jld2FyZHM9cix0aGlzLm1pbkJhbGFuY2U9bix0aGlzLnBlbmRpbmdSZXdhcmRzPW8sdGhpcy5yZXdhcmRzPXMsdGhpcy5yb3VuZD1pLHRoaXMuc3RhdHVzPWEsdGhpcy50b3RhbEFwcHNPcHRlZEluPWMsdGhpcy50b3RhbEFzc2V0c09wdGVkSW49dSx0aGlzLnRvdGFsQ3JlYXRlZEFwcHM9bCx0aGlzLnRvdGFsQ3JlYXRlZEFzc2V0cz1oLHRoaXMuYXBwc0xvY2FsU3RhdGU9cCx0aGlzLmFwcHNUb3RhbEV4dHJhUGFnZXM9Zix0aGlzLmFwcHNUb3RhbFNjaGVtYT1kLHRoaXMuYXNzZXRzPWcsdGhpcy5hdXRoQWRkcj15LHRoaXMuY3JlYXRlZEFwcHM9bSx0aGlzLmNyZWF0ZWRBc3NldHM9Yix0aGlzLnBhcnRpY2lwYXRpb249QSx0aGlzLnJld2FyZEJhc2U9dyx0aGlzLnNpZ1R5cGU9dix0aGlzLmF0dHJpYnV0ZV9tYXA9e2FkZHJlc3M6XCJhZGRyZXNzXCIsYW1vdW50OlwiYW1vdW50XCIsYW1vdW50V2l0aG91dFBlbmRpbmdSZXdhcmRzOlwiYW1vdW50LXdpdGhvdXQtcGVuZGluZy1yZXdhcmRzXCIsbWluQmFsYW5jZTpcIm1pbi1iYWxhbmNlXCIscGVuZGluZ1Jld2FyZHM6XCJwZW5kaW5nLXJld2FyZHNcIixyZXdhcmRzOlwicmV3YXJkc1wiLHJvdW5kOlwicm91bmRcIixzdGF0dXM6XCJzdGF0dXNcIix0b3RhbEFwcHNPcHRlZEluOlwidG90YWwtYXBwcy1vcHRlZC1pblwiLHRvdGFsQXNzZXRzT3B0ZWRJbjpcInRvdGFsLWFzc2V0cy1vcHRlZC1pblwiLHRvdGFsQ3JlYXRlZEFwcHM6XCJ0b3RhbC1jcmVhdGVkLWFwcHNcIix0b3RhbENyZWF0ZWRBc3NldHM6XCJ0b3RhbC1jcmVhdGVkLWFzc2V0c1wiLGFwcHNMb2NhbFN0YXRlOlwiYXBwcy1sb2NhbC1zdGF0ZVwiLGFwcHNUb3RhbEV4dHJhUGFnZXM6XCJhcHBzLXRvdGFsLWV4dHJhLXBhZ2VzXCIsYXBwc1RvdGFsU2NoZW1hOlwiYXBwcy10b3RhbC1zY2hlbWFcIixhc3NldHM6XCJhc3NldHNcIixhdXRoQWRkcjpcImF1dGgtYWRkclwiLGNyZWF0ZWRBcHBzOlwiY3JlYXRlZC1hcHBzXCIsY3JlYXRlZEFzc2V0czpcImNyZWF0ZWQtYXNzZXRzXCIscGFydGljaXBhdGlvbjpcInBhcnRpY2lwYXRpb25cIixyZXdhcmRCYXNlOlwicmV3YXJkLWJhc2VcIixzaWdUeXBlOlwic2lnLXR5cGVcIn19fWNsYXNzIGMgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcigpLHRoaXMucm91bmQ9ZSx0aGlzLmFwcExvY2FsU3RhdGU9dCx0aGlzLmNyZWF0ZWRBcHA9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e3JvdW5kOlwicm91bmRcIixhcHBMb2NhbFN0YXRlOlwiYXBwLWxvY2FsLXN0YXRlXCIsY3JlYXRlZEFwcDpcImNyZWF0ZWQtYXBwXCJ9fX1jbGFzcyB1IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLnJvdW5kPWUsdGhpcy5hc3NldEhvbGRpbmc9dCx0aGlzLmNyZWF0ZWRBc3NldD1yLHRoaXMuYXR0cmlidXRlX21hcD17cm91bmQ6XCJyb3VuZFwiLGFzc2V0SG9sZGluZzpcImFzc2V0LWhvbGRpbmdcIixjcmVhdGVkQXNzZXQ6XCJjcmVhdGVkLWFzc2V0XCJ9fX1jbGFzcyBsIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7c2VsZWN0aW9uUGFydGljaXBhdGlvbktleTplLHZvdGVGaXJzdFZhbGlkOnQsdm90ZUtleURpbHV0aW9uOnIsdm90ZUxhc3RWYWxpZDpuLHZvdGVQYXJ0aWNpcGF0aW9uS2V5Om8sc3RhdGVQcm9vZktleTpzfSl7c3VwZXIoKSx0aGlzLnNlbGVjdGlvblBhcnRpY2lwYXRpb25LZXk9XCJzdHJpbmdcIj09dHlwZW9mIGU/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKGUsXCJiYXNlNjRcIikpOmUsdGhpcy52b3RlRmlyc3RWYWxpZD10LHRoaXMudm90ZUtleURpbHV0aW9uPXIsdGhpcy52b3RlTGFzdFZhbGlkPW4sdGhpcy52b3RlUGFydGljaXBhdGlvbktleT1cInN0cmluZ1wiPT10eXBlb2Ygbz9uZXcgVWludDhBcnJheShpLmZyb20obyxcImJhc2U2NFwiKSk6byx0aGlzLnN0YXRlUHJvb2ZLZXk9XCJzdHJpbmdcIj09dHlwZW9mIHM/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHMsXCJiYXNlNjRcIikpOnMsdGhpcy5hdHRyaWJ1dGVfbWFwPXtzZWxlY3Rpb25QYXJ0aWNpcGF0aW9uS2V5Olwic2VsZWN0aW9uLXBhcnRpY2lwYXRpb24ta2V5XCIsdm90ZUZpcnN0VmFsaWQ6XCJ2b3RlLWZpcnN0LXZhbGlkXCIsdm90ZUtleURpbHV0aW9uOlwidm90ZS1rZXktZGlsdXRpb25cIix2b3RlTGFzdFZhbGlkOlwidm90ZS1sYXN0LXZhbGlkXCIsdm90ZVBhcnRpY2lwYXRpb25LZXk6XCJ2b3RlLXBhcnRpY2lwYXRpb24ta2V5XCIsc3RhdGVQcm9vZktleTpcInN0YXRlLXByb29mLWtleVwifX19Y2xhc3MgaCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMuYWRkcmVzcz1lLHRoaXMuZGVsdGE9dCx0aGlzLmF0dHJpYnV0ZV9tYXA9e2FkZHJlc3M6XCJhZGRyZXNzXCIsZGVsdGE6XCJkZWx0YVwifX19Y2xhc3MgcCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMuaWQ9ZSx0aGlzLnBhcmFtcz10LHRoaXMuYXR0cmlidXRlX21hcD17aWQ6XCJpZFwiLHBhcmFtczpcInBhcmFtc1wifX19Y2xhc3MgZiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKCksdGhpcy5pZD1lLHRoaXMuc2NoZW1hPXQsdGhpcy5rZXlWYWx1ZT1yLHRoaXMuYXR0cmlidXRlX21hcD17aWQ6XCJpZFwiLHNjaGVtYTpcInNjaGVtYVwiLGtleVZhbHVlOlwia2V5LXZhbHVlXCJ9fX1jbGFzcyBkIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7YXBwcm92YWxQcm9ncmFtOmUsY2xlYXJTdGF0ZVByb2dyYW06dCxjcmVhdG9yOnIsZXh0cmFQcm9ncmFtUGFnZXM6bixnbG9iYWxTdGF0ZTpvLGdsb2JhbFN0YXRlU2NoZW1hOnMsbG9jYWxTdGF0ZVNjaGVtYTphfSl7c3VwZXIoKSx0aGlzLmFwcHJvdmFsUHJvZ3JhbT1cInN0cmluZ1wiPT10eXBlb2YgZT9uZXcgVWludDhBcnJheShpLmZyb20oZSxcImJhc2U2NFwiKSk6ZSx0aGlzLmNsZWFyU3RhdGVQcm9ncmFtPVwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBVaW50OEFycmF5KGkuZnJvbSh0LFwiYmFzZTY0XCIpKTp0LHRoaXMuY3JlYXRvcj1yLHRoaXMuZXh0cmFQcm9ncmFtUGFnZXM9bix0aGlzLmdsb2JhbFN0YXRlPW8sdGhpcy5nbG9iYWxTdGF0ZVNjaGVtYT1zLHRoaXMubG9jYWxTdGF0ZVNjaGVtYT1hLHRoaXMuYXR0cmlidXRlX21hcD17YXBwcm92YWxQcm9ncmFtOlwiYXBwcm92YWwtcHJvZ3JhbVwiLGNsZWFyU3RhdGVQcm9ncmFtOlwiY2xlYXItc3RhdGUtcHJvZ3JhbVwiLGNyZWF0b3I6XCJjcmVhdG9yXCIsZXh0cmFQcm9ncmFtUGFnZXM6XCJleHRyYS1wcm9ncmFtLXBhZ2VzXCIsZ2xvYmFsU3RhdGU6XCJnbG9iYWwtc3RhdGVcIixnbG9iYWxTdGF0ZVNjaGVtYTpcImdsb2JhbC1zdGF0ZS1zY2hlbWFcIixsb2NhbFN0YXRlU2NoZW1hOlwibG9jYWwtc3RhdGUtc2NoZW1hXCJ9fX1jbGFzcyBnIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5udW1VaW50PWUsdGhpcy5udW1CeXRlU2xpY2U9dCx0aGlzLmF0dHJpYnV0ZV9tYXA9e251bVVpbnQ6XCJudW0tdWludFwiLG51bUJ5dGVTbGljZTpcIm51bS1ieXRlLXNsaWNlXCJ9fX1jbGFzcyB5IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5pbmRleD1lLHRoaXMucGFyYW1zPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtpbmRleDpcImluZGV4XCIscGFyYW1zOlwicGFyYW1zXCJ9fX1jbGFzcyBtIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmFtb3VudD1lLHRoaXMuYXNzZXRJZD10LHRoaXMuaXNGcm96ZW49cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2Ftb3VudDpcImFtb3VudFwiLGFzc2V0SWQ6XCJhc3NldC1pZFwiLGlzRnJvemVuOlwiaXMtZnJvemVuXCJ9fX1jbGFzcyBiIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7Y3JlYXRvcjplLGRlY2ltYWxzOnQsdG90YWw6cixjbGF3YmFjazpuLGRlZmF1bHRGcm96ZW46byxmcmVlemU6cyxtYW5hZ2VyOmEsbWV0YWRhdGFIYXNoOmMsbmFtZTp1LG5hbWVCNjQ6bCxyZXNlcnZlOmgsdW5pdE5hbWU6cCx1bml0TmFtZUI2NDpmLHVybDpkLHVybEI2NDpnfSl7c3VwZXIoKSx0aGlzLmNyZWF0b3I9ZSx0aGlzLmRlY2ltYWxzPXQsdGhpcy50b3RhbD1yLHRoaXMuY2xhd2JhY2s9bix0aGlzLmRlZmF1bHRGcm96ZW49byx0aGlzLmZyZWV6ZT1zLHRoaXMubWFuYWdlcj1hLHRoaXMubWV0YWRhdGFIYXNoPVwic3RyaW5nXCI9PXR5cGVvZiBjP25ldyBVaW50OEFycmF5KGkuZnJvbShjLFwiYmFzZTY0XCIpKTpjLHRoaXMubmFtZT11LHRoaXMubmFtZUI2ND1cInN0cmluZ1wiPT10eXBlb2YgbD9uZXcgVWludDhBcnJheShpLmZyb20obCxcImJhc2U2NFwiKSk6bCx0aGlzLnJlc2VydmU9aCx0aGlzLnVuaXROYW1lPXAsdGhpcy51bml0TmFtZUI2ND1cInN0cmluZ1wiPT10eXBlb2YgZj9uZXcgVWludDhBcnJheShpLmZyb20oZixcImJhc2U2NFwiKSk6Zix0aGlzLnVybD1kLHRoaXMudXJsQjY0PVwic3RyaW5nXCI9PXR5cGVvZiBnP25ldyBVaW50OEFycmF5KGkuZnJvbShnLFwiYmFzZTY0XCIpKTpnLHRoaXMuYXR0cmlidXRlX21hcD17Y3JlYXRvcjpcImNyZWF0b3JcIixkZWNpbWFsczpcImRlY2ltYWxzXCIsdG90YWw6XCJ0b3RhbFwiLGNsYXdiYWNrOlwiY2xhd2JhY2tcIixkZWZhdWx0RnJvemVuOlwiZGVmYXVsdC1mcm96ZW5cIixmcmVlemU6XCJmcmVlemVcIixtYW5hZ2VyOlwibWFuYWdlclwiLG1ldGFkYXRhSGFzaDpcIm1ldGFkYXRhLWhhc2hcIixuYW1lOlwibmFtZVwiLG5hbWVCNjQ6XCJuYW1lLWI2NFwiLHJlc2VydmU6XCJyZXNlcnZlXCIsdW5pdE5hbWU6XCJ1bml0LW5hbWVcIix1bml0TmFtZUI2NDpcInVuaXQtbmFtZS1iNjRcIix1cmw6XCJ1cmxcIix1cmxCNjQ6XCJ1cmwtYjY0XCJ9fX1jbGFzcyBBIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5ibG9jaz1lLHRoaXMuY2VydD10LHRoaXMuYXR0cmlidXRlX21hcD17YmxvY2s6XCJibG9ja1wiLGNlcnQ6XCJjZXJ0XCJ9fX1jbGFzcyB3IGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcih7YnJhbmNoOmUsYnVpbGROdW1iZXI6dCxjaGFubmVsOnIsY29tbWl0SGFzaDpuLG1ham9yOm8sbWlub3I6c30pe3N1cGVyKCksdGhpcy5icmFuY2g9ZSx0aGlzLmJ1aWxkTnVtYmVyPXQsdGhpcy5jaGFubmVsPXIsdGhpcy5jb21taXRIYXNoPW4sdGhpcy5tYWpvcj1vLHRoaXMubWlub3I9cyx0aGlzLmF0dHJpYnV0ZV9tYXA9e2JyYW5jaDpcImJyYW5jaFwiLGJ1aWxkTnVtYmVyOlwiYnVpbGRfbnVtYmVyXCIsY2hhbm5lbDpcImNoYW5uZWxcIixjb21taXRIYXNoOlwiY29tbWl0X2hhc2hcIixtYWpvcjpcIm1ham9yXCIsbWlub3I6XCJtaW5vclwifX19Y2xhc3MgdiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSx0aGlzLmNhdGNodXBNZXNzYWdlPWUsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwTWVzc2FnZTpcImNhdGNodXAtbWVzc2FnZVwifX19Y2xhc3MgUyBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSx0aGlzLmNhdGNodXBNZXNzYWdlPWUsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwTWVzc2FnZTpcImNhdGNodXAtbWVzc2FnZVwifX19Y2xhc3MgeCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKCksdGhpcy5oYXNoPWUsdGhpcy5yZXN1bHQ9dCx0aGlzLnNvdXJjZW1hcD1yLHRoaXMuYXR0cmlidXRlX21hcD17aGFzaDpcImhhc2hcIixyZXN1bHQ6XCJyZXN1bHRcIixzb3VyY2VtYXA6XCJzb3VyY2VtYXBcIn19fWNsYXNzIEUgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksdGhpcy5yZXN1bHQ9ZSx0aGlzLmF0dHJpYnV0ZV9tYXA9e3Jlc3VsdDpcInJlc3VsdFwifX19Y2xhc3MgVCBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2FjY291bnRzOmUsYXBwczp0LGxhdGVzdFRpbWVzdGFtcDpyLHByb3RvY29sVmVyc2lvbjpuLHJvdW5kOm8sc291cmNlczpzLHR4bnM6aX0pe3N1cGVyKCksdGhpcy5hY2NvdW50cz1lLHRoaXMuYXBwcz10LHRoaXMubGF0ZXN0VGltZXN0YW1wPXIsdGhpcy5wcm90b2NvbFZlcnNpb249bix0aGlzLnJvdW5kPW8sdGhpcy5zb3VyY2VzPXMsdGhpcy50eG5zPWksdGhpcy5hdHRyaWJ1dGVfbWFwPXthY2NvdW50czpcImFjY291bnRzXCIsYXBwczpcImFwcHNcIixsYXRlc3RUaW1lc3RhbXA6XCJsYXRlc3QtdGltZXN0YW1wXCIscHJvdG9jb2xWZXJzaW9uOlwicHJvdG9jb2wtdmVyc2lvblwiLHJvdW5kOlwicm91bmRcIixzb3VyY2VzOlwic291cmNlc1wiLHR4bnM6XCJ0eG5zXCJ9fX1jbGFzcyBfIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmVycm9yPWUsdGhpcy5wcm90b2NvbFZlcnNpb249dCx0aGlzLnR4bnM9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2Vycm9yOlwiZXJyb3JcIixwcm90b2NvbFZlcnNpb246XCJwcm90b2NvbC12ZXJzaW9uXCIsdHhuczpcInR4bnNcIn19fWNsYXNzIEIgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyLG4pe3N1cGVyKCksdGhpcy5maWVsZE5hbWU9ZSx0aGlzLnNvdXJjZT10LHRoaXMudHhuSW5kZXg9cix0aGlzLmFwcEluZGV4PW4sdGhpcy5hdHRyaWJ1dGVfbWFwPXtmaWVsZE5hbWU6XCJmaWVsZC1uYW1lXCIsc291cmNlOlwic291cmNlXCIsdHhuSW5kZXg6XCJ0eG4taW5kZXhcIixhcHBJbmRleDpcImFwcC1pbmRleFwifX19Y2xhc3MgVSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2xpbmU6ZSxwYzp0LHN0YWNrOnIsZXJyb3I6bixzY3JhdGNoOm99KXtzdXBlcigpLHRoaXMubGluZT1lLHRoaXMucGM9dCx0aGlzLnN0YWNrPXIsdGhpcy5lcnJvcj1uLHRoaXMuc2NyYXRjaD1vLHRoaXMuYXR0cmlidXRlX21hcD17bGluZTpcImxpbmVcIixwYzpcInBjXCIsc3RhY2s6XCJzdGFja1wiLGVycm9yOlwiZXJyb3JcIixzY3JhdGNoOlwic2NyYXRjaFwifX19Y2xhc3MgayBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2Rpc2Fzc2VtYmx5OmUsYXBwQ2FsbE1lc3NhZ2VzOnQsYXBwQ2FsbFRyYWNlOnIsYnVkZ2V0QWRkZWQ6bixidWRnZXRDb25zdW1lZDpvLGNvc3Q6cyxnbG9iYWxEZWx0YTppLGxvY2FsRGVsdGFzOmEsbG9naWNTaWdEaXNhc3NlbWJseTpjLGxvZ2ljU2lnTWVzc2FnZXM6dSxsb2dpY1NpZ1RyYWNlOmwsbG9nczpofSl7c3VwZXIoKSx0aGlzLmRpc2Fzc2VtYmx5PWUsdGhpcy5hcHBDYWxsTWVzc2FnZXM9dCx0aGlzLmFwcENhbGxUcmFjZT1yLHRoaXMuYnVkZ2V0QWRkZWQ9bix0aGlzLmJ1ZGdldENvbnN1bWVkPW8sdGhpcy5jb3N0PXMsdGhpcy5nbG9iYWxEZWx0YT1pLHRoaXMubG9jYWxEZWx0YXM9YSx0aGlzLmxvZ2ljU2lnRGlzYXNzZW1ibHk9Yyx0aGlzLmxvZ2ljU2lnTWVzc2FnZXM9dSx0aGlzLmxvZ2ljU2lnVHJhY2U9bCx0aGlzLmxvZ3M9aCx0aGlzLmF0dHJpYnV0ZV9tYXA9e2Rpc2Fzc2VtYmx5OlwiZGlzYXNzZW1ibHlcIixhcHBDYWxsTWVzc2FnZXM6XCJhcHAtY2FsbC1tZXNzYWdlc1wiLGFwcENhbGxUcmFjZTpcImFwcC1jYWxsLXRyYWNlXCIsYnVkZ2V0QWRkZWQ6XCJidWRnZXQtYWRkZWRcIixidWRnZXRDb25zdW1lZDpcImJ1ZGdldC1jb25zdW1lZFwiLGNvc3Q6XCJjb3N0XCIsZ2xvYmFsRGVsdGE6XCJnbG9iYWwtZGVsdGFcIixsb2NhbERlbHRhczpcImxvY2FsLWRlbHRhc1wiLGxvZ2ljU2lnRGlzYXNzZW1ibHk6XCJsb2dpYy1zaWctZGlzYXNzZW1ibHlcIixsb2dpY1NpZ01lc3NhZ2VzOlwibG9naWMtc2lnLW1lc3NhZ2VzXCIsbG9naWNTaWdUcmFjZTpcImxvZ2ljLXNpZy10cmFjZVwiLGxvZ3M6XCJsb2dzXCJ9fX1jbGFzcyBJIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5tZXNzYWdlPWUsdGhpcy5kYXRhPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXttZXNzYWdlOlwibWVzc2FnZVwiLGRhdGE6XCJkYXRhXCJ9fX1jbGFzcyBDIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLmFjdGlvbj1lLHRoaXMuYnl0ZXM9dCx0aGlzLnVpbnQ9cix0aGlzLmF0dHJpYnV0ZV9tYXA9e2FjdGlvbjpcImFjdGlvblwiLGJ5dGVzOlwiYnl0ZXNcIix1aW50OlwidWludFwifX19Y2xhc3MgUiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMua2V5PWUsdGhpcy52YWx1ZT10LHRoaXMuYXR0cmlidXRlX21hcD17a2V5Olwia2V5XCIsdmFsdWU6XCJ2YWx1ZVwifX19Y2xhc3MgTyBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2NhdGNodXBUaW1lOmUsbGFzdFJvdW5kOnQsbGFzdFZlcnNpb246cixuZXh0VmVyc2lvbjpuLG5leHRWZXJzaW9uUm91bmQ6byxuZXh0VmVyc2lvblN1cHBvcnRlZDpzLHN0b3BwZWRBdFVuc3VwcG9ydGVkUm91bmQ6aSx0aW1lU2luY2VMYXN0Um91bmQ6YSxjYXRjaHBvaW50OmMsY2F0Y2hwb2ludEFjcXVpcmVkQmxvY2tzOnUsY2F0Y2hwb2ludFByb2Nlc3NlZEFjY291bnRzOmwsY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM6aCxjYXRjaHBvaW50VG90YWxCbG9ja3M6cCxjYXRjaHBvaW50VmVyaWZpZWRBY2NvdW50czpmLGxhc3RDYXRjaHBvaW50OmR9KXtzdXBlcigpLHRoaXMuY2F0Y2h1cFRpbWU9ZSx0aGlzLmxhc3RSb3VuZD10LHRoaXMubGFzdFZlcnNpb249cix0aGlzLm5leHRWZXJzaW9uPW4sdGhpcy5uZXh0VmVyc2lvblJvdW5kPW8sdGhpcy5uZXh0VmVyc2lvblN1cHBvcnRlZD1zLHRoaXMuc3RvcHBlZEF0VW5zdXBwb3J0ZWRSb3VuZD1pLHRoaXMudGltZVNpbmNlTGFzdFJvdW5kPWEsdGhpcy5jYXRjaHBvaW50PWMsdGhpcy5jYXRjaHBvaW50QWNxdWlyZWRCbG9ja3M9dSx0aGlzLmNhdGNocG9pbnRQcm9jZXNzZWRBY2NvdW50cz1sLHRoaXMuY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM9aCx0aGlzLmNhdGNocG9pbnRUb3RhbEJsb2Nrcz1wLHRoaXMuY2F0Y2hwb2ludFZlcmlmaWVkQWNjb3VudHM9Zix0aGlzLmxhc3RDYXRjaHBvaW50PWQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjYXRjaHVwVGltZTpcImNhdGNodXAtdGltZVwiLGxhc3RSb3VuZDpcImxhc3Qtcm91bmRcIixsYXN0VmVyc2lvbjpcImxhc3QtdmVyc2lvblwiLG5leHRWZXJzaW9uOlwibmV4dC12ZXJzaW9uXCIsbmV4dFZlcnNpb25Sb3VuZDpcIm5leHQtdmVyc2lvbi1yb3VuZFwiLG5leHRWZXJzaW9uU3VwcG9ydGVkOlwibmV4dC12ZXJzaW9uLXN1cHBvcnRlZFwiLHN0b3BwZWRBdFVuc3VwcG9ydGVkUm91bmQ6XCJzdG9wcGVkLWF0LXVuc3VwcG9ydGVkLXJvdW5kXCIsdGltZVNpbmNlTGFzdFJvdW5kOlwidGltZS1zaW5jZS1sYXN0LXJvdW5kXCIsY2F0Y2hwb2ludDpcImNhdGNocG9pbnRcIixjYXRjaHBvaW50QWNxdWlyZWRCbG9ja3M6XCJjYXRjaHBvaW50LWFjcXVpcmVkLWJsb2Nrc1wiLGNhdGNocG9pbnRQcm9jZXNzZWRBY2NvdW50czpcImNhdGNocG9pbnQtcHJvY2Vzc2VkLWFjY291bnRzXCIsY2F0Y2hwb2ludFRvdGFsQWNjb3VudHM6XCJjYXRjaHBvaW50LXRvdGFsLWFjY291bnRzXCIsY2F0Y2hwb2ludFRvdGFsQmxvY2tzOlwiY2F0Y2hwb2ludC10b3RhbC1ibG9ja3NcIixjYXRjaHBvaW50VmVyaWZpZWRBY2NvdW50czpcImNhdGNocG9pbnQtdmVyaWZpZWQtYWNjb3VudHNcIixsYXN0Q2F0Y2hwb2ludDpcImxhc3QtY2F0Y2hwb2ludFwifX19Y2xhc3MgRCBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe3Bvb2xFcnJvcjplLHR4bjp0LGFwcGxpY2F0aW9uSW5kZXg6cixhc3NldENsb3NpbmdBbW91bnQ6bixhc3NldEluZGV4Om8sY2xvc2VSZXdhcmRzOnMsY2xvc2luZ0Ftb3VudDppLGNvbmZpcm1lZFJvdW5kOmEsZ2xvYmFsU3RhdGVEZWx0YTpjLGlubmVyVHhuczp1LGxvY2FsU3RhdGVEZWx0YTpsLGxvZ3M6aCxyZWNlaXZlclJld2FyZHM6cCxzZW5kZXJSZXdhcmRzOmZ9KXtzdXBlcigpLHRoaXMucG9vbEVycm9yPWUsdGhpcy50eG49dCx0aGlzLmFwcGxpY2F0aW9uSW5kZXg9cix0aGlzLmFzc2V0Q2xvc2luZ0Ftb3VudD1uLHRoaXMuYXNzZXRJbmRleD1vLHRoaXMuY2xvc2VSZXdhcmRzPXMsdGhpcy5jbG9zaW5nQW1vdW50PWksdGhpcy5jb25maXJtZWRSb3VuZD1hLHRoaXMuZ2xvYmFsU3RhdGVEZWx0YT1jLHRoaXMuaW5uZXJUeG5zPXUsdGhpcy5sb2NhbFN0YXRlRGVsdGE9bCx0aGlzLmxvZ3M9aCx0aGlzLnJlY2VpdmVyUmV3YXJkcz1wLHRoaXMuc2VuZGVyUmV3YXJkcz1mLHRoaXMuYXR0cmlidXRlX21hcD17cG9vbEVycm9yOlwicG9vbC1lcnJvclwiLHR4bjpcInR4blwiLGFwcGxpY2F0aW9uSW5kZXg6XCJhcHBsaWNhdGlvbi1pbmRleFwiLGFzc2V0Q2xvc2luZ0Ftb3VudDpcImFzc2V0LWNsb3NpbmctYW1vdW50XCIsYXNzZXRJbmRleDpcImFzc2V0LWluZGV4XCIsY2xvc2VSZXdhcmRzOlwiY2xvc2UtcmV3YXJkc1wiLGNsb3NpbmdBbW91bnQ6XCJjbG9zaW5nLWFtb3VudFwiLGNvbmZpcm1lZFJvdW5kOlwiY29uZmlybWVkLXJvdW5kXCIsZ2xvYmFsU3RhdGVEZWx0YTpcImdsb2JhbC1zdGF0ZS1kZWx0YVwiLGlubmVyVHhuczpcImlubmVyLXR4bnNcIixsb2NhbFN0YXRlRGVsdGE6XCJsb2NhbC1zdGF0ZS1kZWx0YVwiLGxvZ3M6XCJsb2dzXCIscmVjZWl2ZXJSZXdhcmRzOlwicmVjZWl2ZXItcmV3YXJkc1wiLHNlbmRlclJld2FyZHM6XCJzZW5kZXItcmV3YXJkc1wifX19Y2xhc3MgTiBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLHRoaXMudG9wVHJhbnNhY3Rpb25zPWUsdGhpcy50b3RhbFRyYW5zYWN0aW9ucz10LHRoaXMuYXR0cmlidXRlX21hcD17dG9wVHJhbnNhY3Rpb25zOlwidG9wLXRyYW5zYWN0aW9uc1wiLHRvdGFsVHJhbnNhY3Rpb25zOlwidG90YWwtdHJhbnNhY3Rpb25zXCJ9fX1jbGFzcyBQIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMudHhpZD1lLHRoaXMuYXR0cmlidXRlX21hcD17dHhpZDpcInR4SWRcIn19fWNsYXNzIEwgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKHtpZHg6ZSxwcm9vZjp0LHN0aWJoYXNoOnIsdHJlZWRlcHRoOm4saGFzaHR5cGU6b30pe3N1cGVyKCksdGhpcy5pZHg9ZSx0aGlzLnByb29mPVwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBVaW50OEFycmF5KGkuZnJvbSh0LFwiYmFzZTY0XCIpKTp0LHRoaXMuc3RpYmhhc2g9XCJzdHJpbmdcIj09dHlwZW9mIHI/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHIsXCJiYXNlNjRcIikpOnIsdGhpcy50cmVlZGVwdGg9bix0aGlzLmhhc2h0eXBlPW8sdGhpcy5hdHRyaWJ1dGVfbWFwPXtpZHg6XCJpZHhcIixwcm9vZjpcInByb29mXCIsc3RpYmhhc2g6XCJzdGliaGFzaFwiLHRyZWVkZXB0aDpcInRyZWVkZXB0aFwiLGhhc2h0eXBlOlwiaGFzaHR5cGVcIn19fWNsYXNzIEYgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcigpLHRoaXMuY3VycmVudFJvdW5kPWUsdGhpcy5vbmxpbmVNb25leT10LHRoaXMudG90YWxNb25leT1yLHRoaXMuYXR0cmlidXRlX21hcD17Y3VycmVudFJvdW5kOlwiY3VycmVudF9yb3VuZFwiLG9ubGluZU1vbmV5Olwib25saW5lLW1vbmV5XCIsdG90YWxNb25leTpcInRvdGFsLW1vbmV5XCJ9fX1jbGFzcyB6IGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5rZXk9ZSx0aGlzLnZhbHVlPXQsdGhpcy5hdHRyaWJ1dGVfbWFwPXtrZXk6XCJrZXlcIix2YWx1ZTpcInZhbHVlXCJ9fX1jbGFzcyBqIGV4dGVuZHMgc3tjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoKSx0aGlzLnR5cGU9ZSx0aGlzLmJ5dGVzPXQsdGhpcy51aW50PXIsdGhpcy5hdHRyaWJ1dGVfbWFwPXt0eXBlOlwidHlwZVwiLGJ5dGVzOlwiYnl0ZXNcIix1aW50OlwidWludFwifX19Y2xhc3MgTSBleHRlbmRzIHN7Y29uc3RydWN0b3Ioe2NvbnNlbnN1c1ZlcnNpb246ZSxmZWU6dCxnZW5lc2lzSGFzaDpyLGdlbmVzaXNJZDpuLGxhc3RSb3VuZDpvLG1pbkZlZTpzfSl7c3VwZXIoKSx0aGlzLmNvbnNlbnN1c1ZlcnNpb249ZSx0aGlzLmZlZT10LHRoaXMuZ2VuZXNpc0hhc2g9XCJzdHJpbmdcIj09dHlwZW9mIHI/bmV3IFVpbnQ4QXJyYXkoaS5mcm9tKHIsXCJiYXNlNjRcIikpOnIsdGhpcy5nZW5lc2lzSWQ9bix0aGlzLmxhc3RSb3VuZD1vLHRoaXMubWluRmVlPXMsdGhpcy5hdHRyaWJ1dGVfbWFwPXtjb25zZW5zdXNWZXJzaW9uOlwiY29uc2Vuc3VzLXZlcnNpb25cIixmZWU6XCJmZWVcIixnZW5lc2lzSGFzaDpcImdlbmVzaXMtaGFzaFwiLGdlbmVzaXNJZDpcImdlbmVzaXMtaWRcIixsYXN0Um91bmQ6XCJsYXN0LXJvdW5kXCIsbWluRmVlOlwibWluLWZlZVwifX19Y2xhc3MgSCBleHRlbmRzIHN7Y29uc3RydWN0b3IoZSx0LHIsbil7c3VwZXIoKSx0aGlzLmJ1aWxkPWUsdGhpcy5nZW5lc2lzSGFzaEI2ND1cInN0cmluZ1wiPT10eXBlb2YgdD9uZXcgVWludDhBcnJheShpLmZyb20odCxcImJhc2U2NFwiKSk6dCx0aGlzLmdlbmVzaXNJZD1yLHRoaXMudmVyc2lvbnM9bix0aGlzLmF0dHJpYnV0ZV9tYXA9e2J1aWxkOlwiYnVpbGRcIixnZW5lc2lzSGFzaEI2NDpcImdlbmVzaXNfaGFzaF9iNjRcIixnZW5lc2lzSWQ6XCJnZW5lc2lzX2lkXCIsdmVyc2lvbnM6XCJ2ZXJzaW9uc1wifX19fSw1MTgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse3NldFNlbmRUcmFuc2FjdGlvbkhlYWRlcnM6KCk9PmksZGVmYXVsdDooKT0+Y30pO3ZhciBuPXIoODY4MCksbz1yKDQxMykscz1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBpKGU9e30pe2xldCB0PWU7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmV2ZXJ5KChlPT5cImNvbnRlbnQtdHlwZVwiIT09ZS50b0xvd2VyQ2FzZSgpKSkmJih0PXsuLi5lfSx0W1wiQ29udGVudC1UeXBlXCJdPVwiYXBwbGljYXRpb24veC1iaW5hcnlcIiksdH1mdW5jdGlvbiBhKGUpe3JldHVybiBlJiZ2b2lkIDAhPT1lLmJ5dGVMZW5ndGh9Y2xhc3MgYyBleHRlbmRzIG4uWntjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUpO2xldCByPXQ7aWYoQXJyYXkuaXNBcnJheSh0KSl7aWYoIXQuZXZlcnkoYSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFycmF5IGVsZW1lbnRzIG11c3QgYmUgYnl0ZSBhcnJheXNcIik7cj0oMCxvLmNvbmNhdEFycmF5cykoLi4udCl9ZWxzZSBpZighYShyKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBieXRlIGFycmF5XCIpO3RoaXMudHhuQnl0ZXNUb1Bvc3Q9cn1wYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zXCJ9YXN5bmMgZG8oZT17fSl7Y29uc3QgdD1pKGUpO3JldHVybihhd2FpdCB0aGlzLmMucG9zdCh0aGlzLnBhdGgoKSxzLmZyb20odGhpcy50eG5CeXRlc1RvUG9zdCksdCkpLmJvZHl9fX0sOTU4MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse1o6KCk9PlR9KTt2YXIgbj1yKDM0ODApLG89cig4NjgwKTtjbGFzcyBzIGV4dGVuZHMgby5ae3BhdGgoKXtyZXR1cm5cIi9oZWFsdGhcIn19Y2xhc3MgaSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmluZGV4PXIsdGhpcy5pbmRleD1yfXBhdGgoKXtyZXR1cm5gL3YyL2Fzc2V0cy8ke3RoaXMuaW5kZXh9L2JhbGFuY2VzYH1saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9Y3VycmVuY3lHcmVhdGVyVGhhbihlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImN1cnJlbmN5LWdyZWF0ZXItdGhhblwiXT1lLHRoaXN9Y3VycmVuY3lMZXNzVGhhbihlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImN1cnJlbmN5LWxlc3MtdGhhblwiXT1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fXZhciBhPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIGMoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/ZTphLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIil9Y2xhc3MgdSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vdHJhbnNhY3Rpb25zYH1ub3RlUHJlZml4KGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibm90ZS1wcmVmaXhcIl09YyhlKSx0aGlzfXR4VHlwZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcInR4LXR5cGVcIl09ZSx0aGlzfXNpZ1R5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzaWctdHlwZVwiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bWluUm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtaW4tcm91bmRcIl09ZSx0aGlzfW1heFJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWF4LXJvdW5kXCJdPWUsdGhpc31hc3NldElEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXNzZXQtaWRcIl09ZSx0aGlzfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31iZWZvcmVUaW1lKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYmVmb3JlLXRpbWVcIl09ZSx0aGlzfWFmdGVyVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFmdGVyLXRpbWVcIl09ZSx0aGlzfWN1cnJlbmN5R3JlYXRlclRoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1ncmVhdGVyLXRoYW5cIl09ZSx0aGlzfWN1cnJlbmN5TGVzc1RoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1sZXNzLXRoYW5cIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31yZWtleVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wicmVrZXktdG9cIl09ZSx0aGlzfX1jbGFzcyBsIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuaW5kZXg9cix0aGlzLmluZGV4PXJ9cGF0aCgpe3JldHVybmAvdjIvYXNzZXRzLyR7dGhpcy5pbmRleH0vdHJhbnNhY3Rpb25zYH1ub3RlUHJlZml4KGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibm90ZS1wcmVmaXhcIl09YyhlKSx0aGlzfXR4VHlwZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcInR4LXR5cGVcIl09ZSx0aGlzfXNpZ1R5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzaWctdHlwZVwiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bWluUm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtaW4tcm91bmRcIl09ZSx0aGlzfW1heFJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWF4LXJvdW5kXCJdPWUsdGhpc31hc3NldElEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXNzZXQtaWRcIl09ZSx0aGlzfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31iZWZvcmVUaW1lKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYmVmb3JlLXRpbWVcIl09ZSx0aGlzfWFmdGVyVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFmdGVyLXRpbWVcIl09ZSx0aGlzfWN1cnJlbmN5R3JlYXRlclRoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1ncmVhdGVyLXRoYW5cIl09ZSx0aGlzfWN1cnJlbmN5TGVzc1RoYW4oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJjdXJyZW5jeS1sZXNzLXRoYW5cIl09ZSx0aGlzfWFkZHJlc3NSb2xlKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYWRkcmVzcy1yb2xlXCJdPWUsdGhpc31hZGRyZXNzKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmFkZHJlc3M9ZSx0aGlzfWV4Y2x1ZGVDbG9zZVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiZXhjbHVkZS1jbG9zZS10b1wiXT1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfXJla2V5VG8oZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJyZWtleS10b1wiXT1lLHRoaXN9fWNsYXNzIGggZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5yb3VuZD1yLHRoaXMucm91bmQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9ibG9ja3MvJHt0aGlzLnJvdW5kfWB9fWNsYXNzIHAgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy50eElEPXIsdGhpcy50eElEPXJ9cGF0aCgpe3JldHVybmAvdjIvdHJhbnNhY3Rpb25zLyR7dGhpcy50eElEfWB9fWNsYXNzIGYgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5hY2NvdW50PXIsdGhpcy5hY2NvdW50PXJ9cGF0aCgpe3JldHVybmAvdjIvYWNjb3VudHMvJHt0aGlzLmFjY291bnR9YH1yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31leGNsdWRlKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmV4Y2x1ZGU9ZSx0aGlzfX1jbGFzcyBkIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuYWNjb3VudD1yLHRoaXMuYWNjb3VudD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hY2NvdW50fS9hc3NldHNgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9YXNzZXRJZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc319Y2xhc3MgZyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vY3JlYXRlZC1hc3NldHNgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31yb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeS5yb3VuZD1lLHRoaXN9bmV4dFRva2VuKGUpe3JldHVybiB0aGlzLnF1ZXJ5Lm5leHQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc319Y2xhc3MgeSBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFjY291bnQ9cix0aGlzLmFjY291bnQ9cn1wYXRoKCl7cmV0dXJuYC92Mi9hY2NvdW50cy8ke3RoaXMuYWNjb3VudH0vYXBwcy1sb2NhbC1zdGF0ZWB9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfXJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5LnJvdW5kPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfX1jbGFzcyBtIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuYWNjb3VudD1yLHRoaXMuYWNjb3VudD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FjY291bnRzLyR7dGhpcy5hY2NvdW50fS9jcmVhdGVkLWFwcGxpY2F0aW9uc2B9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfXJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5LnJvdW5kPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfX1jbGFzcyBiIGV4dGVuZHMgby5ae2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihlLHQpLHRoaXMuaW5kZXg9cix0aGlzLmluZGV4PXJ9cGF0aCgpe3JldHVybmAvdjIvYXNzZXRzLyR7dGhpcy5pbmRleH1gfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fWNsYXNzIEEgZXh0ZW5kcyBvLlp7Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKGUsdCksdGhpcy5pbmRleD1yLHRoaXMuaW5kZXg9cn1wYXRoKCl7cmV0dXJuYC92Mi9hcHBsaWNhdGlvbnMvJHt0aGlzLmluZGV4fWB9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc319Y2xhc3MgdyBleHRlbmRzIG8uWntjb25zdHJ1Y3RvcihlLHQscil7c3VwZXIoZSx0KSx0aGlzLmFwcElEPXIsdGhpcy5hcHBJRD1yfXBhdGgoKXtyZXR1cm5gL3YyL2FwcGxpY2F0aW9ucy8ke3RoaXMuYXBwSUR9L2xvZ3NgfWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31taW5Sb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm1pbi1yb3VuZFwiXT1lLHRoaXN9bWF4Um91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJtYXgtcm91bmRcIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31zZW5kZXIoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJzZW5kZXItYWRkcmVzc1wiXT1lLHRoaXN9dHhpZChlKXtyZXR1cm4gdGhpcy5xdWVyeS50eGlkPWUsdGhpc319Y2xhc3MgdiBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvYWNjb3VudHNcIn1jdXJyZW5jeUdyZWF0ZXJUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktZ3JlYXRlci10aGFuXCJdPWUsdGhpc31jdXJyZW5jeUxlc3NUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktbGVzcy10aGFuXCJdPWUsdGhpc31saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9cm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnkucm91bmQ9ZSx0aGlzfWF1dGhBZGRyKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXV0aC1hZGRyXCJdPWUsdGhpc31hcHBsaWNhdGlvbklEKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiYXBwbGljYXRpb24taWRcIl09ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9ZXhjbHVkZShlKXtyZXR1cm4gdGhpcy5xdWVyeS5leGNsdWRlPWUsdGhpc319Y2xhc3MgUyBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvdHJhbnNhY3Rpb25zXCJ9bm90ZVByZWZpeChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm5vdGUtcHJlZml4XCJdPWMoZSksdGhpc310eFR5cGUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJ0eC10eXBlXCJdPWUsdGhpc31zaWdUeXBlKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wic2lnLXR5cGVcIl09ZSx0aGlzfXR4aWQoZSl7cmV0dXJuIHRoaXMucXVlcnkudHhpZD1lLHRoaXN9cm91bmQoZSl7cmV0dXJuIHRoaXMucXVlcnkucm91bmQ9ZSx0aGlzfW1pblJvdW5kKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wibWluLXJvdW5kXCJdPWUsdGhpc31tYXhSb3VuZChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcIm1heC1yb3VuZFwiXT1lLHRoaXN9YXNzZXRJRChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31saW1pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS5saW1pdD1lLHRoaXN9YmVmb3JlVGltZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImJlZm9yZS10aW1lXCJdPWUsdGhpc31hZnRlclRpbWUoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhZnRlci10aW1lXCJdPWUsdGhpc31jdXJyZW5jeUdyZWF0ZXJUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktZ3JlYXRlci10aGFuXCJdPWUsdGhpc31jdXJyZW5jeUxlc3NUaGFuKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wiY3VycmVuY3ktbGVzcy10aGFuXCJdPWUsdGhpc31hZGRyZXNzUm9sZShlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFkZHJlc3Mtcm9sZVwiXT1lLHRoaXN9YWRkcmVzcyhlKXtyZXR1cm4gdGhpcy5xdWVyeS5hZGRyZXNzPWUsdGhpc31leGNsdWRlQ2xvc2VUbyhlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImV4Y2x1ZGUtY2xvc2UtdG9cIl09ZSx0aGlzfW5leHRUb2tlbihlKXtyZXR1cm4gdGhpcy5xdWVyeS5uZXh0PWUsdGhpc31yZWtleVRvKGUpe3JldHVybiB0aGlzLnF1ZXJ5W1wicmVrZXktdG9cIl09ZSx0aGlzfWFwcGxpY2F0aW9uSUQoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhcHBsaWNhdGlvbi1pZFwiXT1lLHRoaXN9fWNsYXNzIHggZXh0ZW5kcyBvLlp7cGF0aCgpe3JldHVyblwiL3YyL2Fzc2V0c1wifWxpbWl0KGUpe3JldHVybiB0aGlzLnF1ZXJ5LmxpbWl0PWUsdGhpc31jcmVhdG9yKGUpe3JldHVybiB0aGlzLnF1ZXJ5LmNyZWF0b3I9ZSx0aGlzfW5hbWUoZSl7cmV0dXJuIHRoaXMucXVlcnkubmFtZT1lLHRoaXN9dW5pdChlKXtyZXR1cm4gdGhpcy5xdWVyeS51bml0PWUsdGhpc31pbmRleChlKXtyZXR1cm4gdGhpcy5xdWVyeVtcImFzc2V0LWlkXCJdPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9aW5jbHVkZUFsbChlPSEwKXtyZXR1cm4gdGhpcy5xdWVyeVtcImluY2x1ZGUtYWxsXCJdPWUsdGhpc319Y2xhc3MgRSBleHRlbmRzIG8uWntwYXRoKCl7cmV0dXJuXCIvdjIvYXBwbGljYXRpb25zXCJ9aW5kZXgoZSl7cmV0dXJuIHRoaXMucXVlcnlbXCJhcHBsaWNhdGlvbi1pZFwiXT1lLHRoaXN9Y3JlYXRvcihlKXtyZXR1cm4gdGhpcy5xdWVyeS5jcmVhdG9yPWUsdGhpc31uZXh0VG9rZW4oZSl7cmV0dXJuIHRoaXMucXVlcnkubmV4dD1lLHRoaXN9bGltaXQoZSl7cmV0dXJuIHRoaXMucXVlcnkubGltaXQ9ZSx0aGlzfWluY2x1ZGVBbGwoZT0hMCl7cmV0dXJuIHRoaXMucXVlcnlbXCJpbmNsdWRlLWFsbFwiXT1lLHRoaXN9fWNsYXNzIFQgZXh0ZW5kcyBuLlp7Y29uc3RydWN0b3IoZSx0PVwiaHR0cDovLzEyNy4wLjAuMVwiLHI9ODA4MCxuPXt9KXtzdXBlcihcIlgtSW5kZXhlci1BUEktVG9rZW5cIixlLHQscixuKX1tYWtlSGVhbHRoQ2hlY2soKXtyZXR1cm4gbmV3IHModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfWxvb2t1cEFzc2V0QmFsYW5jZXMoZSl7cmV0dXJuIG5ldyBpKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFzc2V0VHJhbnNhY3Rpb25zKGUpe3JldHVybiBuZXcgbCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBY2NvdW50VHJhbnNhY3Rpb25zKGUpe3JldHVybiBuZXcgdSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBCbG9jayhlKXtyZXR1cm4gbmV3IGgodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwVHJhbnNhY3Rpb25CeUlEKGUpe3JldHVybiBuZXcgcCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBY2NvdW50QnlJRChlKXtyZXR1cm4gbmV3IGYodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudEFzc2V0cyhlKXtyZXR1cm4gbmV3IGQodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudENyZWF0ZWRBc3NldHMoZSl7cmV0dXJuIG5ldyBnKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFjY291bnRBcHBMb2NhbFN0YXRlcyhlKXtyZXR1cm4gbmV3IHkodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQWNjb3VudENyZWF0ZWRBcHBsaWNhdGlvbnMoZSl7cmV0dXJuIG5ldyBtKHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfWxvb2t1cEFzc2V0QnlJRChlKXtyZXR1cm4gbmV3IGIodGhpcy5jLHRoaXMuaW50RGVjb2RpbmcsZSl9bG9va3VwQXBwbGljYXRpb25zKGUpe3JldHVybiBuZXcgQSh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyxlKX1sb29rdXBBcHBsaWNhdGlvbkxvZ3MoZSl7cmV0dXJuIG5ldyB3KHRoaXMuYyx0aGlzLmludERlY29kaW5nLGUpfXNlYXJjaEFjY291bnRzKCl7cmV0dXJuIG5ldyB2KHRoaXMuYyx0aGlzLmludERlY29kaW5nKX1zZWFyY2hGb3JUcmFuc2FjdGlvbnMoKXtyZXR1cm4gbmV3IFModGhpcy5jLHRoaXMuaW50RGVjb2RpbmcpfXNlYXJjaEZvckFzc2V0cygpe3JldHVybiBuZXcgeCh0aGlzLmMsdGhpcy5pbnREZWNvZGluZyl9c2VhcmNoRm9yQXBwbGljYXRpb25zKCl7cmV0dXJuIG5ldyBFKHRoaXMuYyx0aGlzLmludERlY29kaW5nKX19fSw4NjgwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7WjooKT0+b30pO3ZhciBuPXIoNzE5Nyk7Y2xhc3Mgb3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMuYz1lLHRoaXMucXVlcnk9e30sdGhpcy5pbnREZWNvZGluZz10fHxuLlouREVGQVVMVH1wcmVwYXJlKGUpe3JldHVybiBlfWFzeW5jIGRvKGU9e30pe2NvbnN0IHQ9e307XCJkZWZhdWx0XCIhPT10aGlzLmludERlY29kaW5nJiYodC5pbnREZWNvZGluZz10aGlzLmludERlY29kaW5nKTtjb25zdCByPWF3YWl0IHRoaXMuYy5nZXQodGhpcy5wYXRoKCksdGhpcy5xdWVyeSxlLHQpO3JldHVybiB0aGlzLnByZXBhcmUoci5ib2R5KX1zZXRJbnREZWNvZGluZyhlKXtpZihcImRlZmF1bHRcIiE9PWUmJlwic2FmZVwiIT09ZSYmXCJtaXhlZFwiIT09ZSYmXCJiaWdpbnRcIiE9PWUpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG1ldGhvZCBmb3IgaW50IGRlY29kaW5nOiAke2V9YCk7cmV0dXJuIHRoaXMuaW50RGVjb2Rpbmc9ZSx0aGlzfX19LDM0ODA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtaOigpPT5zfSk7dmFyIG49cigxMTEzKSxvPXIoNzE5Nyk7Y2xhc3Mgc3tjb25zdHJ1Y3RvcihlLHQscixzLGk9e30pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0KXRoaXMuYz1uZXcgbi5kZWZhdWx0KHQpO2Vsc2V7bGV0IG87bz1cInN0cmluZ1wiPT10eXBlb2YgdD9mdW5jdGlvbihlPVwiXCIsdCl7Y29uc3Qgcj17fTtyZXR1cm4gclt0XT1lLHJ9KHQsZSk6dCx0aGlzLmM9bmV3IG4uZGVmYXVsdChvLHIscyxpKX10aGlzLmludERlY29kaW5nPW8uWi5ERUZBVUxUfXNldEludEVuY29kaW5nKGUpe3RoaXMuaW50RGVjb2Rpbmc9ZX1nZXRJbnRFbmNvZGluZygpe3JldHVybiB0aGlzLmludERlY29kaW5nfX19LDM0NTg6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtiOigpPT5wLEE6KCk9PmR9KTt2YXIgbj1yKDc2NzcpLG89cig5NDE3KSxzPXIoMTk4OCksaT1yKDEwNjMpLGE9cig1MDYyKSxjPXIoODM0KSx1PXIoMTYyNCksbD1yKDI0ODYpLkJ1ZmZlcjtjb25zdCBoPWwuZnJvbShbMjEsMzEsMTI0LDExN10pO3ZhciBwO2Z1bmN0aW9uIGYoZSx0LHIpe2lmKG51bGwhPXImJmU9PT1yKXJldHVybiAwO2NvbnN0IG49bnVsbD09cj8wOjE7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKyspaWYoZT09PXRbcl0pcmV0dXJuIHIrbjtyZXR1cm4gdC5wdXNoKGUpLHQubGVuZ3RoLTErbn0hZnVuY3Rpb24oZSl7ZVtlLkJVSUxESU5HPTBdPVwiQlVJTERJTkdcIixlW2UuQlVJTFQ9MV09XCJCVUlMVFwiLGVbZS5TSUdORUQ9Ml09XCJTSUdORURcIixlW2UuU1VCTUlUVEVEPTNdPVwiU1VCTUlUVEVEXCIsZVtlLkNPTU1JVFRFRD00XT1cIkNPTU1JVFRFRFwifShwfHwocD17fSkpO2NsYXNzIGR7Y29uc3RydWN0b3IoKXt0aGlzLnN0YXR1cz1wLkJVSUxESU5HLHRoaXMudHJhbnNhY3Rpb25zPVtdLHRoaXMubWV0aG9kQ2FsbHM9bmV3IE1hcCx0aGlzLnNpZ25lZFR4bnM9W10sdGhpcy50eElEcz1bXX1nZXRTdGF0dXMoKXtyZXR1cm4gdGhpcy5zdGF0dXN9Y291bnQoKXtyZXR1cm4gdGhpcy50cmFuc2FjdGlvbnMubGVuZ3RofWNsb25lKCl7Y29uc3QgZT1uZXcgZDtyZXR1cm4gZS50cmFuc2FjdGlvbnM9dGhpcy50cmFuc2FjdGlvbnMubWFwKCgoe3R4bjplLHNpZ25lcjp0fSk9Pih7dHhuOm8uVHJhbnNhY3Rpb24uZnJvbV9vYmpfZm9yX2VuY29kaW5nKHsuLi5lLmdldF9vYmpfZm9yX2VuY29kaW5nKCksZ3JwOnZvaWQgMH0pLHNpZ25lcjp0fSkpKSxlLm1ldGhvZENhbGxzPW5ldyBNYXAodGhpcy5tZXRob2RDYWxscyksZX1hZGRUcmFuc2FjdGlvbihlKXtpZih0aGlzLnN0YXR1cyE9PXAuQlVJTERJTkcpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGFkZCB0cmFuc2FjdGlvbnMgd2hlbiBjb21wb3NlciBzdGF0dXMgaXMgbm90IEJVSUxESU5HXCIpO2lmKHRoaXMudHJhbnNhY3Rpb25zLmxlbmd0aD09PWQuTUFYX0dST1VQX1NJWkUpdGhyb3cgbmV3IEVycm9yKGBBZGRpbmcgYW4gYWRkaXRpb25hbCB0cmFuc2FjdGlvbiBleGNlZWRzIHRoZSBtYXhpbXVtIGF0b21pYyBncm91cCBzaXplIG9mICR7ZC5NQVhfR1JPVVBfU0laRX1gKTtpZihlLnR4bi5ncm91cCYmZS50eG4uZ3JvdXAuc29tZSgoZT0+MCE9PWUpKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIGEgdHJhbnNhY3Rpb24gd2l0aCBub256ZXJvIGdyb3VwIElEXCIpO3RoaXMudHJhbnNhY3Rpb25zLnB1c2goZSl9YWRkTWV0aG9kQ2FsbCh7YXBwSUQ6ZSxtZXRob2Q6dCxtZXRob2RBcmdzOnIsc2VuZGVyOm8sc3VnZ2VzdGVkUGFyYW1zOmksb25Db21wbGV0ZTphLGFwcHJvdmFsUHJvZ3JhbTpsLGNsZWFyUHJvZ3JhbTpoLG51bUdsb2JhbEludHM6ZyxudW1HbG9iYWxCeXRlU2xpY2VzOnksbnVtTG9jYWxJbnRzOm0sbnVtTG9jYWxCeXRlU2xpY2VzOmIsZXh0cmFQYWdlczpBLG5vdGU6dyxsZWFzZTp2LHJla2V5VG86UyxzaWduZXI6eH0pe2lmKHRoaXMuc3RhdHVzIT09cC5CVUlMRElORyl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIHRyYW5zYWN0aW9ucyB3aGVuIGNvbXBvc2VyIHN0YXR1cyBpcyBub3QgQlVJTERJTkdcIik7aWYodGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoK3QudHhuQ291bnQoKT5kLk1BWF9HUk9VUF9TSVpFKXRocm93IG5ldyBFcnJvcihgQWRkaW5nIGFkZGl0aW9uYWwgdHJhbnNhY3Rpb25zIGV4Y2VlZHMgdGhlIG1heGltdW0gYXRvbWljIGdyb3VwIHNpemUgb2YgJHtkLk1BWF9HUk9VUF9TSVpFfWApO2lmKDA9PT1lKXtpZihudWxsPT1sfHxudWxsPT1ofHxudWxsPT1nfHxudWxsPT15fHxudWxsPT1tfHxudWxsPT1iKXRocm93IG5ldyBFcnJvcihcIk9uZSBvZiB0aGUgZm9sbG93aW5nIHJlcXVpcmVkIHBhcmFtZXRlcnMgZm9yIGFwcGxpY2F0aW9uIGNyZWF0aW9uIGlzIG1pc3Npbmc6IGFwcHJvdmFsUHJvZ3JhbSwgY2xlYXJQcm9ncmFtLCBudW1HbG9iYWxJbnRzLCBudW1HbG9iYWxCeXRlU2xpY2VzLCBudW1Mb2NhbEludHMsIG51bUxvY2FsQnl0ZVNsaWNlc1wiKX1lbHNlIGlmKGE9PT11LmhxLlVwZGF0ZUFwcGxpY2F0aW9uT0Mpe2lmKG51bGw9PWx8fG51bGw9PWgpdGhyb3cgbmV3IEVycm9yKFwiT25lIG9mIHRoZSBmb2xsb3dpbmcgcmVxdWlyZWQgcGFyYW1ldGVycyBmb3IgT25BcHBsaWNhdGlvbkNvbXBsZXRlLlVwZGF0ZUFwcGxpY2F0aW9uT0MgaXMgbWlzc2luZzogYXBwcm92YWxQcm9ncmFtLCBjbGVhclByb2dyYW1cIik7aWYobnVsbCE9Z3x8bnVsbCE9eXx8bnVsbCE9bXx8bnVsbCE9Ynx8bnVsbCE9QSl0aHJvdyBuZXcgRXJyb3IoXCJPbmUgb2YgdGhlIGZvbGxvd2luZyBhcHBsaWNhdGlvbiBjcmVhdGlvbiBwYXJhbWV0ZXJzIHdlcmUgc2V0IG9uIGEgbm9uLWNyZWF0aW9uIGNhbGw6IG51bUdsb2JhbEludHMsIG51bUdsb2JhbEJ5dGVTbGljZXMsIG51bUxvY2FsSW50cywgbnVtTG9jYWxCeXRlU2xpY2VzLCBleHRyYVBhZ2VzXCIpfWVsc2UgaWYobnVsbCE9bHx8bnVsbCE9aHx8bnVsbCE9Z3x8bnVsbCE9eXx8bnVsbCE9bXx8bnVsbCE9Ynx8bnVsbCE9QSl0aHJvdyBuZXcgRXJyb3IoXCJPbmUgb2YgdGhlIGZvbGxvd2luZyBhcHBsaWNhdGlvbiBjcmVhdGlvbiBwYXJhbWV0ZXJzIHdlcmUgc2V0IG9uIGEgbm9uLWNyZWF0aW9uIGNhbGw6IGFwcHJvdmFsUHJvZ3JhbSwgY2xlYXJQcm9ncmFtLCBudW1HbG9iYWxJbnRzLCBudW1HbG9iYWxCeXRlU2xpY2VzLCBudW1Mb2NhbEludHMsIG51bUxvY2FsQnl0ZVNsaWNlcywgZXh0cmFQYWdlc1wiKTtpZihudWxsPT1yJiYocj1bXSksci5sZW5ndGghPT10LmFyZ3MubGVuZ3RoKXRocm93IG5ldyBFcnJvcihgSW5jb3JyZWN0IG51bWJlciBvZiBtZXRob2QgYXJndW1lbnRzLiBFeHBlY3RlZCAke3QuYXJncy5sZW5ndGh9LCBnb3QgJHtyLmxlbmd0aH1gKTtsZXQgRT1bXSxUPVtdO2NvbnN0IF89W10sQj1bXSxVPVtdLGs9bmV3IE1hcDtmb3IobGV0IGU9MDtlPHIubGVuZ3RoO2UrKyl7bGV0IG89dC5hcmdzW2VdLnR5cGU7Y29uc3Qgcz1yW2VdO2lmKCgwLG4uQUUpKG8pKXtpZighKDAsYy5Ydykocyl8fCEoMCxuLnZKKShvLHMudHhuKSl0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkICR7b30gdHJhbnNhY3Rpb24gZm9yIGFyZ3VtZW50IGF0IGluZGV4ICR7ZX1gKTtpZihzLnR4bi5ncm91cCYmcy50eG4uZ3JvdXAuc29tZSgoZT0+MCE9PWUpKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIGEgdHJhbnNhY3Rpb24gd2l0aCBub256ZXJvIGdyb3VwIElEXCIpO18ucHVzaChzKX1lbHNle2lmKCgwLGMuWHcpKHMpKXRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgbm9uLXRyYW5zYWN0aW9uIHZhbHVlIGZvciBhcmd1bWVudCBhdCBpbmRleCAke2V9YCk7aWYoKDAsbi5vNSkobykmJihrLnNldChCLmxlbmd0aCxFLmxlbmd0aCksQi5wdXNoKG8pLFUucHVzaChzKSxvPW5ldyBuLlB1KDgpKSxcInN0cmluZ1wiPT10eXBlb2Ygbyl0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gQUJJIHR5cGU6ICR7b31gKTtFLnB1c2gobyksVC5wdXNoKHMpfX1jb25zdCBJPVtdLEM9W10sUj1bXSxPPVtdO2ZvcihsZXQgdD0wO3Q8Qi5sZW5ndGg7dCsrKXtjb25zdCByPUJbdF0scz1VW3RdO2xldCBpPTA7c3dpdGNoKHIpe2Nhc2Ugbi5VVi5hY2NvdW50Ontjb25zdCBlPW5ldyBuLkpRO2k9ZihlLmRlY29kZShlLmVuY29kZShzKSksQyxvKTticmVha31jYXNlIG4uVVYuYXBwbGljYXRpb246e2NvbnN0IHQ9bmV3IG4uUHUoNjQpLHI9dC5kZWNvZGUodC5lbmNvZGUocykpO2lmKHI+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBzYWZlIGludGVnZXIgZm9yIGFwcGxpY2F0aW9uIHZhbHVlLCBnb3QgJHtyfWApO2k9ZihOdW1iZXIociksUixlKTticmVha31jYXNlIG4uVVYuYXNzZXQ6e2NvbnN0IGU9bmV3IG4uUHUoNjQpLHQ9ZS5kZWNvZGUoZS5lbmNvZGUocykpO2lmKHQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBzYWZlIGludGVnZXIgZm9yIGFzc2V0IHZhbHVlLCBnb3QgJHt0fWApO2k9ZihOdW1iZXIodCksTyk7YnJlYWt9ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcmVmZXJlbmNlIHR5cGU6ICR7cn1gKX1JLnB1c2goaSl9Zm9yKGxldCBlPTA7ZTxJLmxlbmd0aDtlKyspVFtrLmdldChlKV09SVtlXTtpZihFLmxlbmd0aD4xNSl7Y29uc3QgZT1FLnNsaWNlKDE0KSx0PVQuc2xpY2UoMTQpO0U9RS5zbGljZSgwLDE0KSxUPVQuc2xpY2UoMCwxNCksRS5wdXNoKG5ldyBuLncxKGUpKSxULnB1c2godCl9Y29uc3QgRD1bdC5nZXRTZWxlY3RvcigpXTtmb3IobGV0IGU9MDtlPEUubGVuZ3RoO2UrKylELnB1c2goRVtlXS5lbmNvZGUoVFtlXSkpO2NvbnN0IE49e3R4bjooMCxzLm1ha2VBcHBsaWNhdGlvbkNhbGxUeG5Gcm9tT2JqZWN0KSh7ZnJvbTpvLGFwcEluZGV4OmUsYXBwQXJnczpELGFjY291bnRzOkMsZm9yZWlnbkFwcHM6Uixmb3JlaWduQXNzZXRzOk8sb25Db21wbGV0ZTpudWxsPT1hP3UuaHEuTm9PcE9DOmEsYXBwcm92YWxQcm9ncmFtOmwsY2xlYXJQcm9ncmFtOmgsbnVtR2xvYmFsSW50czpnLG51bUdsb2JhbEJ5dGVTbGljZXM6eSxudW1Mb2NhbEludHM6bSxudW1Mb2NhbEJ5dGVTbGljZXM6YixleHRyYVBhZ2VzOkEsbGVhc2U6dixub3RlOncscmVrZXlUbzpTLHN1Z2dlc3RlZFBhcmFtczppfSksc2lnbmVyOnh9O3RoaXMudHJhbnNhY3Rpb25zLnB1c2goLi4uXyxOKSx0aGlzLm1ldGhvZENhbGxzLnNldCh0aGlzLnRyYW5zYWN0aW9ucy5sZW5ndGgtMSx0KX1idWlsZEdyb3VwKCl7aWYodGhpcy5zdGF0dXM9PT1wLkJVSUxESU5HKXtpZigwPT09dGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBidWlsZCBhIGdyb3VwIHdpdGggMCB0cmFuc2FjdGlvbnNcIik7dGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoPjEmJigwLGkuYXNzaWduR3JvdXBJRCkodGhpcy50cmFuc2FjdGlvbnMubWFwKChlPT5lLnR4bikpKSx0aGlzLnN0YXR1cz1wLkJVSUxUfXJldHVybiB0aGlzLnRyYW5zYWN0aW9uc31hc3luYyBnYXRoZXJTaWduYXR1cmVzKCl7aWYodGhpcy5zdGF0dXM+PXAuU0lHTkVEKXJldHVybiB0aGlzLnNpZ25lZFR4bnM7Y29uc3QgZT10aGlzLmJ1aWxkR3JvdXAoKSx0PWUubWFwKChlPT5lLnR4bikpLHI9bmV3IE1hcDtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3R7c2lnbmVyOm59PWVbdF07ci5oYXMobil8fHIuc2V0KG4sW10pLHIuZ2V0KG4pLnB1c2godCl9Y29uc3Qgbj1BcnJheS5mcm9tKHIpLHM9YXdhaXQgUHJvbWlzZS5hbGwobi5tYXAoKChbZSxyXSk9PmUodCxyKSkpKSxpPWUubWFwKCgoKT0+bnVsbCkpO2ZvcihsZXQgZT0wO2U8bi5sZW5ndGg7ZSsrKXtjb25zdCB0PW5bZV1bMV0scj1zW2VdO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKWlbdFtlXV09cltlXX1pZighaS5ldmVyeSgoZT0+bnVsbCE9ZSkpKXRocm93IG5ldyBFcnJvcihgTWlzc2luZyBzaWduYXR1cmVzLiBHb3QgJHtpfWApO2NvbnN0IGE9aS5tYXAoKChlLHQpPT57dHJ5e3JldHVybigwLG8uZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24pKGUpLnR4bi50eElEKCl9Y2F0Y2goZSl7dGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZGVjb2RlIHNpZ25lZCB0cmFuc2FjdGlvbiBhdCBpbmRleCAke3R9LiAke2V9YCl9fSkpO3JldHVybiB0aGlzLnNpZ25lZFR4bnM9aSx0aGlzLnR4SURzPWEsdGhpcy5zdGF0dXM9cC5TSUdORUQsaX1hc3luYyBzdWJtaXQoZSl7aWYodGhpcy5zdGF0dXM+cC5TVUJNSVRURUQpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNhY3Rpb24gZ3JvdXAgY2Fubm90IGJlIHJlc3VibWl0dGVkXCIpO2NvbnN0IHQ9YXdhaXQgdGhpcy5nYXRoZXJTaWduYXR1cmVzKCk7cmV0dXJuIGF3YWl0IGUuc2VuZFJhd1RyYW5zYWN0aW9uKHQpLmRvKCksdGhpcy5zdGF0dXM9cC5TVUJNSVRURUQsdGhpcy50eElEc31hc3luYyBleGVjdXRlKGUsdCl7aWYodGhpcy5zdGF0dXM9PT1wLkNPTU1JVFRFRCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2FjdGlvbiBncm91cCBoYXMgYWxyZWFkeSBiZWVuIGV4ZWN1dGVkIHN1Y2Nlc3NmdWxseVwiKTtjb25zdCByPWF3YWl0IHRoaXMuc3VibWl0KGUpO3RoaXMuc3RhdHVzPXAuU1VCTUlUVEVEO2NvbnN0IG49dGhpcy50cmFuc2FjdGlvbnMuZmluZEluZGV4KCgoZSx0KT0+dGhpcy5tZXRob2RDYWxscy5oYXModCkpKSxvPS0xPT09bj8wOm4scz1hd2FpdCgwLGEuSykoZSxyW29dLHQpO3RoaXMuc3RhdHVzPXAuQ09NTUlUVEVEO2NvbnN0IGk9c1tcImNvbmZpcm1lZC1yb3VuZFwiXSxjPVtdO2Zvcihjb25zdFt0LG9db2YgdGhpcy5tZXRob2RDYWxscyl7Y29uc3QgaT1yW3RdLGE9e3R4SUQ6aSxyYXdSZXR1cm5WYWx1ZTpuZXcgVWludDhBcnJheSxtZXRob2Q6b307dHJ5e2NvbnN0IHI9dD09PW4/czphd2FpdCBlLnBlbmRpbmdUcmFuc2FjdGlvbkluZm9ybWF0aW9uKGkpLmRvKCk7aWYoYS50eEluZm89cixcInZvaWRcIiE9PW8ucmV0dXJucy50eXBlKXtjb25zdCBlPXIubG9nc3x8W107aWYoMD09PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkFwcCBjYWxsIHRyYW5zYWN0aW9uIGRpZCBub3QgbG9nIGEgcmV0dXJuIHZhbHVlXCIpO2NvbnN0IHQ9bC5mcm9tKGVbZS5sZW5ndGgtMV0sXCJiYXNlNjRcIik7aWYodC5ieXRlTGVuZ3RoPDR8fCF0LnNsaWNlKDAsNCkuZXF1YWxzKGgpKXRocm93IG5ldyBFcnJvcihcIkFwcCBjYWxsIHRyYW5zYWN0aW9uIGRpZCBub3QgbG9nIGEgcmV0dXJuIHZhbHVlXCIpO2EucmF3UmV0dXJuVmFsdWU9bmV3IFVpbnQ4QXJyYXkodC5zbGljZSg0KSksYS5yZXR1cm5WYWx1ZT1vLnJldHVybnMudHlwZS5kZWNvZGUoYS5yYXdSZXR1cm5WYWx1ZSl9fWNhdGNoKGUpe2EuZGVjb2RlRXJyb3I9ZX1jLnB1c2goYSl9cmV0dXJue2NvbmZpcm1lZFJvdW5kOmksdHhJRHM6cixtZXRob2RSZXN1bHRzOmN9fX1kLk1BWF9HUk9VUF9TSVpFPTE2fSw5MDcwOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7ckQ6KCk9Pm8sXzooKT0+cyxITjooKT0+aX0pO2NvbnN0IG49MWU2LG89XCJNaWNyb2FsZ29zIHNob3VsZCBiZSBwb3NpdGl2ZSBhbmQgbGVzcyB0aGFuIDJeNTMgLSAxLlwiO2Z1bmN0aW9uIHMoZSl7aWYoZTwwfHwhTnVtYmVyLmlzU2FmZUludGVnZXIoZSkpdGhyb3cgbmV3IEVycm9yKG8pO3JldHVybiBlL259ZnVuY3Rpb24gaShlKXtjb25zdCB0PWUqbjtyZXR1cm4gTWF0aC5yb3VuZCh0KX19LDQzODM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtQOigpPT5jLHg6KCk9Pnl9KTt2YXIgbj1yKDIyNyksbz1yKDE4MjQpLHM9cig3MTE2KSxpPXIoMjQ4NikuQnVmZmVyO2Z1bmN0aW9uIGEoZSl7cmV0dXJuIGUucGFyYW1zW1wiYXBwcm92YWwtcHJvZ3JhbVwiXT1pLmZyb20oZS5wYXJhbXNbXCJhcHByb3ZhbC1wcm9ncmFtXCJdLnRvU3RyaW5nKCksXCJiYXNlNjRcIiksZS5wYXJhbXNbXCJjbGVhci1zdGF0ZS1wcm9ncmFtXCJdPWkuZnJvbShlLnBhcmFtc1tcImNsZWFyLXN0YXRlLXByb2dyYW1cIl0udG9TdHJpbmcoKSxcImJhc2U2NFwiKSxlfWFzeW5jIGZ1bmN0aW9uIGMoe2NsaWVudDplLHR4bnM6dCxwcm90b2NvbFZlcnNpb246cixsYXRlc3RUaW1lc3RhbXA6aSxyb3VuZDpjLHNvdXJjZXM6dX0pe2NvbnN0IGw9W10saD1bXSxwPVtdLGY9W10sZD1bXTtmb3IoY29uc3QgZSBvZiB0KWUudHhuLnR5cGU9PT1vLmkuYXBwbCYmKGQucHVzaCgoMCxzLmVuY29kZUFkZHJlc3MpKGUudHhuLmZyb20ucHVibGljS2V5KSksZS50eG4uYXBwQWNjb3VudHMmJmQucHVzaCguLi5lLnR4bi5hcHBBY2NvdW50cy5tYXAoKGU9PigwLHMuZW5jb2RlQWRkcmVzcykoZS5wdWJsaWNLZXkpKSkpLGUudHhuLmFwcEZvcmVpZ25BcHBzJiYocC5wdXNoKC4uLmUudHhuLmFwcEZvcmVpZ25BcHBzKSxkLnB1c2goLi4uZS50eG4uYXBwRm9yZWlnbkFwcHMubWFwKChlPT4oMCxzLmdldEFwcGxpY2F0aW9uQWRkcmVzcykoZSkpKSkpLGUudHhuLmFwcEZvcmVpZ25Bc3NldHMmJmYucHVzaCguLi5lLnR4bi5hcHBGb3JlaWduQXNzZXRzKSx2b2lkIDA9PT1lLnR4bi5hcHBJbmRleHx8MD09PWUudHhuLmFwcEluZGV4P2wucHVzaChuZXcgbi5BcHBsaWNhdGlvbigxMzgwMDExNTg4LG5ldyBuLkFwcGxpY2F0aW9uUGFyYW1zKHtjcmVhdG9yOigwLHMuZW5jb2RlQWRkcmVzcykoZS50eG4uZnJvbS5wdWJsaWNLZXkpLGFwcHJvdmFsUHJvZ3JhbTplLnR4bi5hcHBBcHByb3ZhbFByb2dyYW0sY2xlYXJTdGF0ZVByb2dyYW06ZS50eG4uYXBwQ2xlYXJQcm9ncmFtLGxvY2FsU3RhdGVTY2hlbWE6bmV3IG4uQXBwbGljYXRpb25TdGF0ZVNjaGVtYShlLnR4bi5hcHBMb2NhbEludHMsZS50eG4uYXBwTG9jYWxCeXRlU2xpY2VzKSxnbG9iYWxTdGF0ZVNjaGVtYTpuZXcgbi5BcHBsaWNhdGlvblN0YXRlU2NoZW1hKGUudHhuLmFwcEdsb2JhbEludHMsZS50eG4uYXBwR2xvYmFsQnl0ZVNsaWNlcyl9KSkpOihwLnB1c2goZS50eG4uYXBwSW5kZXgpLGQucHVzaCgoMCxzLmdldEFwcGxpY2F0aW9uQWRkcmVzcykoZS50eG4uYXBwSW5kZXgpKSkpO2NvbnN0IGc9W107Zm9yKGNvbnN0IHQgb2ZbLi4ubmV3IFNldChmKV0pZy5wdXNoKGUuZ2V0QXNzZXRCeUlEKHQpLmRvKCkudGhlbigoZT0+e2QucHVzaChlLnBhcmFtcy5jcmVhdG9yKX0pKSk7YXdhaXQgUHJvbWlzZS5hbGwoZyk7Y29uc3QgeT1bXTtmb3IoY29uc3QgdCBvZlsuLi5uZXcgU2V0KHApXSl5LnB1c2goZS5nZXRBcHBsaWNhdGlvbkJ5SUQodCkuZG8oKS50aGVuKChlPT57Y29uc3QgdD1hKGUpO2wucHVzaCh0KSxkLnB1c2godC5wYXJhbXMuY3JlYXRvcil9KSkpO2F3YWl0IFByb21pc2UuYWxsKHkpO2NvbnN0IG09W107Zm9yKGNvbnN0IHQgb2ZbLi4ubmV3IFNldChkKV0pbS5wdXNoKGUuYWNjb3VudEluZm9ybWF0aW9uKHQpLmRvKCkudGhlbigoZT0+e1wiY3JlYXRlZC1hcHBzXCJpbiBlJiYoZVtcImNyZWF0ZWQtYXBwc1wiXT1lW1wiY3JlYXRlZC1hcHBzXCJdLm1hcCgoZT0+YShlKSkpKSxoLnB1c2goZSl9KSkpO3JldHVybiBhd2FpdCBQcm9taXNlLmFsbChtKSxuZXcgbi5EcnlydW5SZXF1ZXN0KHt0eG5zOnQubWFwKChlPT4oey4uLmUsdHhuOmUudHhuLmdldF9vYmpfZm9yX2VuY29kaW5nKCl9KSkpLGFjY291bnRzOmgsYXBwczpsLGxhdGVzdFRpbWVzdGFtcDppLHJvdW5kOmMscHJvdG9jb2xWZXJzaW9uOnIsc291cmNlczp1fSl9Y2xhc3MgdXtjb25zdHJ1Y3RvcihlKXt0aGlzLnR5cGU9MCx0aGlzLmJ5dGVzPVwiXCIsdGhpcy51aW50PTAsdGhpcy50eXBlPWUudHlwZSx0aGlzLmJ5dGVzPWUuYnl0ZXMsdGhpcy51aW50PWUudWludH10b1N0cmluZygpe3JldHVybiAxPT09dGhpcy50eXBlP2AweCR7aS5mcm9tKHRoaXMuYnl0ZXMsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIil9YDp0aGlzLnVpbnQudG9TdHJpbmcoKX19Y2xhc3MgbHtjb25zdHJ1Y3RvcihlKXt0aGlzLmVycm9yPVwiXCIsdGhpcy5saW5lPTAsdGhpcy5wYz0wLHRoaXMuc2NyYXRjaD1bXSx0aGlzLnN0YWNrPVtdLHRoaXMuZXJyb3I9dm9pZCAwPT09ZS5lcnJvcj9cIlwiOmUuZXJyb3IsdGhpcy5saW5lPWUubGluZSx0aGlzLnBjPWUucGMsdGhpcy5zY3JhdGNoPWUuc2NyYXRjaCx0aGlzLnN0YWNrPWUuc3RhY2subWFwKChlPT5uZXcgdShlKSkpfX1jbGFzcyBoe2NvbnN0cnVjdG9yKGUpe3RoaXMudHJhY2U9W10sdm9pZCAwIT09ZSYmKHRoaXMudHJhY2U9ZS5tYXAoKGU9Pm5ldyBsKGUpKSkpfX1mdW5jdGlvbiBwKGUsdCl7cmV0dXJuIGUubGVuZ3RoPnQmJnQ+MD9gJHtlLnNsaWNlKDAsdCl9Li4uYDplfWZ1bmN0aW9uIGYoZSx0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuXCJcIjtsZXQgcj1udWxsO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKShuPmUubGVuZ3RofHxKU09OLnN0cmluZ2lmeShlW25dKSE9PUpTT04uc3RyaW5naWZ5KHRbbl0pKSYmKHI9bik7aWYobnVsbD09cilyZXR1cm5cIlwiO2NvbnN0IG49dFtyXTtyZXR1cm4gbi5ieXRlcy5sZW5ndGg+MD9gJHtyfSA9IDB4JHtpLmZyb20obi5ieXRlcyxcImJhc2U2NFwiKS50b1N0cmluZyhcImhleFwiKX1gOmAke3J9ID0gJHtuLnVpbnQudG9TdHJpbmcoKX1gfWZ1bmN0aW9uIGQoZSx0KXtyZXR1cm5gWyR7KHQ/ZS5yZXZlcnNlKCk6ZSkubWFwKChlPT57c3dpdGNoKGUudHlwZSl7Y2FzZSAxOnJldHVybmAweCR7aS5mcm9tKGUuYnl0ZXMsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIil9YDtjYXNlIDI6cmV0dXJuYCR7ZS51aW50LnRvU3RyaW5nKCl9YDtkZWZhdWx0OnJldHVyblwiXCJ9fSkpLmpvaW4oXCIsIFwiKX1dYH1jbGFzcyBne2NvbnN0cnVjdG9yKGUpe3RoaXMuZGlzYXNzZW1ibHk9W10sdGhpcy5hcHBDYWxsTWVzc2FnZXM9W10sdGhpcy5sb2NhbERlbHRhcz1bXSx0aGlzLmdsb2JhbERlbHRhPVtdLHRoaXMuY29zdD0wLHRoaXMubG9naWNTaWdNZXNzYWdlcz1bXSx0aGlzLmxvZ2ljU2lnRGlzYXNzZW1ibHk9W10sdGhpcy5sb2dzPVtdLHRoaXMuYXBwQ2FsbFRyYWNlPXZvaWQgMCx0aGlzLmxvZ2ljU2lnVHJhY2U9dm9pZCAwLHRoaXMucmVxdWlyZWQ9W1wiZGlzYXNzZW1ibHlcIl0sdGhpcy5vcHRpb25hbHM9W1wiYXBwLWNhbGwtbWVzc2FnZXNcIixcImxvY2FsLWRlbHRhc1wiLFwiZ2xvYmFsLWRlbHRhXCIsXCJjb3N0XCIsXCJsb2dpYy1zaWctbWVzc2FnZXNcIixcImxvZ2ljLXNpZy1kaXNhc3NlbWJseVwiLFwibG9nc1wiXSx0aGlzLnRyYWNlcz1bXCJhcHAtY2FsbC10cmFjZVwiLFwibG9naWMtc2lnLXRyYWNlXCJdLHRoaXMuZGlzYXNzZW1ibHk9ZS5kaXNhc3NlbWJseSx0aGlzLmFwcENhbGxNZXNzYWdlcz1lW1wiYXBwLWNhbGwtbWVzc2FnZXNcIl0sdGhpcy5sb2NhbERlbHRhcz1lW1wibG9jYWwtZGVsdGFzXCJdLHRoaXMuZ2xvYmFsRGVsdGE9ZVtcImdsb2JhbC1kZWx0YVwiXSx0aGlzLmNvc3Q9ZS5jb3N0LHRoaXMubG9naWNTaWdNZXNzYWdlcz1lW1wibG9naWMtc2lnLW1lc3NhZ2VzXCJdLHRoaXMubG9naWNTaWdEaXNhc3NlbWJseT1lW1wibG9naWMtc2lnLWRpc2Fzc2VtYmx5XCJdLHRoaXMubG9ncz1lLmxvZ3MsdGhpcy5hcHBDYWxsVHJhY2U9bmV3IGgoZVtcImFwcC1jYWxsLXRyYWNlXCJdKSx0aGlzLmxvZ2ljU2lnVHJhY2U9bmV3IGgoZVtcImxvZ2ljLXNpZy10cmFjZVwiXSl9YXBwQ2FsbFJlamVjdGVkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuYXBwQ2FsbE1lc3NhZ2VzJiZ0aGlzLmFwcENhbGxNZXNzYWdlcy5pbmNsdWRlcyhcIlJFSkVDVFwiKX1sb2dpY1NpZ1JlamVjdGVkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMubG9naWNTaWdNZXNzYWdlcyYmdGhpcy5sb2dpY1NpZ01lc3NhZ2VzLmluY2x1ZGVzKFwiUkVKRUNUXCIpfXN0YXRpYyB0cmFjZShlLHQscil7Y29uc3Qgbj1yLm1heFZhbHVlV2lkdGh8fDMwLG89W1tcInBjI1wiLFwibG4jXCIsXCJzb3VyY2VcIixcInNjcmF0Y2hcIixcInN0YWNrXCJdXTtmb3IobGV0IHM9MDtzPGUudHJhY2UubGVuZ3RoO3MrKyl7Y29uc3R7bGluZTppLGVycm9yOmEscGM6YyxzY3JhdGNoOnUsc3RhY2s6bH09ZS50cmFjZVtzXSxoPXZvaWQgMCE9PXU/dTpbXSxnPXM+MCYmdm9pZCAwIT09ZS50cmFjZVtzLTFdLnNjcmF0Y2g/ZS50cmFjZVtzLTFdLnNjcmF0Y2g6W10seT1cIlwiPT09YT90W2ldOmAhISAke2F9ICEhYDtvLnB1c2goW2MudG9TdHJpbmcoKS5wYWRFbmQoMyxcIiBcIiksaS50b1N0cmluZygpLnBhZEVuZCgzLFwiIFwiKSxwKHksbikscChmKGcsaCksbikscChkKGwsci50b3BPZlN0YWNrRmlyc3QpLG4pXSl9Y29uc3Qgcz1vLnJlZHVjZSgoKGUsdCk9Pntjb25zdCByPW5ldyBBcnJheShvWzBdLmxlbmd0aCkuZmlsbCgwKTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKylyW25dPXRbbl0ubGVuZ3RoPmVbbl0/dFtuXS5sZW5ndGg6ZVtuXTtyZXR1cm4gcn0pLG5ldyBBcnJheShvWzBdLmxlbmd0aCkuZmlsbCgwKSk7cmV0dXJuYCR7by5tYXAoKGU9PmUubWFwKCgoZSx0KT0+ZS5wYWRFbmQoc1t0XSsxLFwiIFwiKSkpLmpvaW4oXCJ8XCIpLnRyaW0oKSkpLmpvaW4oXCJcXG5cIil9XFxuYH1hcHBUcmFjZShlKXtpZih2b2lkIDA9PT10aGlzLmFwcENhbGxUcmFjZXx8IXRoaXMuZGlzYXNzZW1ibHkpcmV0dXJuXCJcIjtsZXQgdD1lO3JldHVybiB2b2lkIDA9PT1lJiYodD17bWF4VmFsdWVXaWR0aDozMCx0b3BPZlN0YWNrRmlyc3Q6ITF9KSxnLnRyYWNlKHRoaXMuYXBwQ2FsbFRyYWNlLHRoaXMuZGlzYXNzZW1ibHksdCl9bHNpZ1RyYWNlKGUpe2lmKHZvaWQgMD09PXRoaXMubG9naWNTaWdUcmFjZXx8dm9pZCAwPT09dGhpcy5sb2dpY1NpZ0Rpc2Fzc2VtYmx5KXJldHVyblwiXCI7bGV0IHQ9ZTtyZXR1cm4gdm9pZCAwPT09ZSYmKHQ9e21heFZhbHVlV2lkdGg6MzAsdG9wT2ZTdGFja0ZpcnN0OiEwfSksZy50cmFjZSh0aGlzLmxvZ2ljU2lnVHJhY2UsdGhpcy5sb2dpY1NpZ0Rpc2Fzc2VtYmx5LHQpfX1jbGFzcyB5e2NvbnN0cnVjdG9yKGUpe3RoaXMuZXJyb3I9XCJcIix0aGlzLnByb3RvY29sVmVyc2lvbj1cIlwiLHRoaXMudHhucz1bXSx0aGlzLmVycm9yPWUuZXJyb3IsdGhpcy5wcm90b2NvbFZlcnNpb249ZVtcInByb3RvY29sLXZlcnNpb25cIl0sdGhpcy50eG5zPWUudHhucy5tYXAoKGU9Pm5ldyBnKGUpKSl9fX0sNzExNjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtBTEdPUkFORF9aRVJPX0FERFJFU1NfU1RSSU5HOigpPT51LE1BTEZPUk1FRF9BRERSRVNTX0VSUk9SX01TRzooKT0+cCxDSEVDS1NVTV9BRERSRVNTX0VSUk9SX01TRzooKT0+ZixJTlZBTElEX01TSUdfVkVSU0lPTl9FUlJPUl9NU0c6KCk9PmQsSU5WQUxJRF9NU0lHX1RIUkVTSE9MRF9FUlJPUl9NU0c6KCk9PmcsSU5WQUxJRF9NU0lHX1BLX0VSUk9SX01TRzooKT0+eSxVTkVYUEVDVEVEX1BLX0xFTl9FUlJPUl9NU0c6KCk9Pm0sZGVjb2RlQWRkcmVzczooKT0+Yixpc1ZhbGlkQWRkcmVzczooKT0+QSxlbmNvZGVBZGRyZXNzOigpPT53LGZyb21NdWx0aXNpZ1ByZUltZzooKT0+dixmcm9tTXVsdGlzaWdQcmVJbWdBZGRyczooKT0+UyxnZXRBcHBsaWNhdGlvbkFkZHJlc3M6KCk9Pnh9KTt2YXIgbj1yKDcyNjcpLG89ci5uKG4pLHM9cig5NDA0KSxpPXIoNDEzKSxhPXIoNjk2MyksYz1yKDI0ODYpLkJ1ZmZlcjtjb25zdCB1PVwiQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVk1SEZLUVwiLGw9bmV3IFVpbnQ4QXJyYXkoWzc3LDExNywxMDgsMTE2LDEwNSwxMTUsMTA1LDEwMyw2NSwxMDAsMTAwLDExNF0pLGg9Yy5mcm9tKFwiYXBwSURcIikscD1cImFkZHJlc3Mgc2VlbXMgdG8gYmUgbWFsZm9ybWVkXCIsZj1cIndyb25nIGNoZWNrc3VtIGZvciBhZGRyZXNzXCIsZD1cImludmFsaWQgbXVsdGlzaWcgdmVyc2lvblwiLGc9XCJiYWQgbXVsdGlzaWcgdGhyZXNob2xkXCIseT1cImJhZCBtdWx0aXNpZyBwdWJsaWMga2V5IC0gd3JvbmcgbGVuZ3RoXCIsbT1cIm5hY2wgcHVibGljIGtleSBsZW5ndGggaXMgbm90IDMyIGJ5dGVzXCI7ZnVuY3Rpb24gYihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZXx8NTghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IocCk7Y29uc3QgdD1vKCkuZGVjb2RlLmFzQnl0ZXMoZS50b1N0cmluZygpKTtpZigzNiE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihwKTtjb25zdCByPW5ldyBVaW50OEFycmF5KHQuc2xpY2UoMCwzMikpLG49bmV3IFVpbnQ4QXJyYXkodC5zbGljZShzLlBVQkxJQ19LRVlfTEVOR1RILDM2KSksYT1zLmdlbmVyaWNIYXNoKHIpLnNsaWNlKHMuSEFTSF9CWVRFU19MRU5HVEgtNCxzLkhBU0hfQllURVNfTEVOR1RIKTtpZighaS5hcnJheUVxdWFsKGEsbikpdGhyb3cgbmV3IEVycm9yKGYpO3JldHVybntwdWJsaWNLZXk6cixjaGVja3N1bTpufX1mdW5jdGlvbiBBKGUpe3RyeXtiKGUpfWNhdGNoKGUpe3JldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIHcoZSl7Y29uc3QgdD1zLmdlbmVyaWNIYXNoKGUpLnNsaWNlKHMuUFVCTElDX0tFWV9MRU5HVEgtNCxzLlBVQkxJQ19LRVlfTEVOR1RIKTtyZXR1cm4gbygpLmVuY29kZShpLmNvbmNhdEFycmF5cyhlLHQpKS50b1N0cmluZygpLnNsaWNlKDAsNTgpfWZ1bmN0aW9uIHYoe3ZlcnNpb246ZSx0aHJlc2hvbGQ6dCxwa3M6cn0pe2lmKDEhPT1lfHxlPjI1NXx8ZTwwKXRocm93IG5ldyBFcnJvcihkKTtpZigwPT09dHx8MD09PXIubGVuZ3RofHx0PnIubGVuZ3RofHx0PjI1NSl0aHJvdyBuZXcgRXJyb3IoZyk7aWYoMzIhPT1zLlBVQkxJQ19LRVlfTEVOR1RIKXRocm93IG5ldyBFcnJvcihtKTtjb25zdCBuPW5ldyBVaW50OEFycmF5KGwubGVuZ3RoKzIrMzIqci5sZW5ndGgpO24uc2V0KGwsMCksbi5zZXQoW2VdLGwubGVuZ3RoKSxuLnNldChbdF0sbC5sZW5ndGgrMSk7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspe2lmKDMyIT09cltlXS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKHkpO24uc2V0KHJbZV0sbC5sZW5ndGgrMiszMiplKX1yZXR1cm4gbmV3IFVpbnQ4QXJyYXkocy5nZW5lcmljSGFzaChuKSl9ZnVuY3Rpb24gUyh7dmVyc2lvbjplLHRocmVzaG9sZDp0LGFkZHJzOnJ9KXtyZXR1cm4gdyh2KHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQscGtzOnIubWFwKChlPT5iKGUpLnB1YmxpY0tleSkpfSkpfWZ1bmN0aW9uIHgoZSl7Y29uc3QgdD1pLmNvbmNhdEFycmF5cyhoLCgwLGEuVCkoZSkpLHI9cy5nZW5lcmljSGFzaCh0KTtyZXR1cm4gdyhuZXcgVWludDhBcnJheShyKSl9fSw4OTIyOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7ajooKT0+byx2OigpPT5zfSk7dmFyIG49cigyNDg2KS5CdWZmZXI7ZnVuY3Rpb24gbyhlLHQpe2xldCByPWUudG9TdHJpbmcoMTYpO3IubGVuZ3RoIT09Mip0JiYocj1yLnBhZFN0YXJ0KDIqdCxcIjBcIikpO2NvbnN0IG49bmV3IFVpbnQ4QXJyYXkoci5sZW5ndGgvMik7Zm9yKGxldCBlPTAsdD0wO2U8ci5sZW5ndGgvMjtlKyssdCs9MiluW2VdPXBhcnNlSW50KHIuc2xpY2UodCx0KzIpLDE2KTtyZXR1cm4gbn1mdW5jdGlvbiBzKGUpe2xldCB0PUJpZ0ludCgwKTtjb25zdCByPW4uZnJvbShlKTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl0PUJpZ0ludChOdW1iZXIoci5yZWFkVUludEJFKG4sMSkpKSt0KkJpZ0ludCgyNTYpO3JldHVybiB0fX0sMzAzMzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtFUlJPUl9DT05UQUlOU19FTVBUWV9TVFJJTkc6KCk9Pm8sZW5jb2RlOigpPT5zLGRlY29kZTooKT0+aX0pO3ZhciBuPXIoNTQwNik7Y29uc3Qgbz1cIlRoZSBvYmplY3QgY29udGFpbnMgZW1wdHkgb3IgMCB2YWx1ZXMuIEZpcnN0IGVtcHR5IG9yIDAgdmFsdWUgZW5jb3VudGVyZWQgZHVyaW5nIGVuY29kaW5nOiBcIjtmdW5jdGlvbiBzKGUpe2NvbnN0IHQ9ZnVuY3Rpb24oZSl7Zm9yKGNvbnN0IHQgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSYmKCFlW3RdfHwwPT09ZVt0XS5sZW5ndGgpKXJldHVybntjb250YWluc0VtcHR5OiEwLGZpcnN0RW1wdHlLZXk6dH07cmV0dXJue2NvbnRhaW5zRW1wdHk6ITEsZmlyc3RFbXB0eUtleTp2b2lkIDB9fShlKTtpZih0LmNvbnRhaW5zRW1wdHkpdGhyb3cgbmV3IEVycm9yKG8rdC5maXJzdEVtcHR5S2V5KTtyZXR1cm4gbi5lbmNvZGUoZSx7c29ydEtleXM6ITB9KX1mdW5jdGlvbiBpKGUpe3JldHVybiBuLmRlY29kZShlKX19LDY5NjM6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtUOigpPT5vLHU6KCk9PnN9KTt2YXIgbj1yKDI0ODYpLkJ1ZmZlcjtmdW5jdGlvbiBvKGUpe2lmKFwiYmlnaW50XCIhPXR5cGVvZiBlJiYhTnVtYmVyLmlzSW50ZWdlcihlKXx8ZTwwfHxlPkJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnB1dCBpcyBub3QgYSA2NC1iaXQgdW5zaWduZWQgaW50ZWdlclwiKTtjb25zdCB0PW4uYWxsb2NVbnNhZmUoOCk7cmV0dXJuIHQud3JpdGVCaWdVSW50NjRCRShCaWdJbnQoZSkpLG5ldyBVaW50OEFycmF5KHQpfWZ1bmN0aW9uIHMoZSx0PVwic2FmZVwiKXtpZihcInNhZmVcIiE9PXQmJlwibWl4ZWRcIiE9PXQmJlwiYmlnaW50XCIhPT10KXRocm93IG5ldyBFcnJvcihgVW5rbm93biBkZWNvZGluZ01vZGUgb3B0aW9uOiAke3R9YCk7aWYoMD09PWUuYnl0ZUxlbmd0aHx8ZS5ieXRlTGVuZ3RoPjgpdGhyb3cgbmV3IEVycm9yKGBEYXRhIGhhcyB1bmFjY2VwdGFibGUgbGVuZ3RoLiBFeHBlY3RlZCBsZW5ndGggaXMgYmV0d2VlbiAxIGFuZCA4LCBnb3QgJHtlLmJ5dGVMZW5ndGh9YCk7Y29uc3Qgcj1uLmFsbG9jVW5zYWZlKDgtZS5ieXRlTGVuZ3RoKTtyLmZpbGwoMCk7Y29uc3Qgbz1uLmNvbmNhdChbcixuLmZyb20oZSldKS5yZWFkQmlnVUludDY0QkUoKSxzPW8+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7aWYoXCJzYWZlXCI9PT10KXtpZihzKXRocm93IG5ldyBFcnJvcihgSW50ZWdlciBleGNlZWRzIG1heGltdW0gc2FmZSBpbnRlZ2VyOiAke28udG9TdHJpbmcoKX0uIFRyeSBkZWNvZGluZyB3aXRoIFwibWl4ZWRcIiBvciBcInNhZmVcIiBkZWNvZGluZ01vZGUuYCk7cmV0dXJuIE51bWJlcihvKX1yZXR1cm5cIm1peGVkXCIhPT10fHxzP286TnVtYmVyKG8pfX0sMTA2MzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtUeEdyb3VwOigpPT51LGNvbXB1dGVHcm91cElEOigpPT5sLGFzc2lnbkdyb3VwSUQ6KCk9PmgsZGVmYXVsdDooKT0+cH0pO3ZhciBuPXIoOTQxNyksbz1yKDk0MDQpLHM9cigzMDMzKSxpPXIoNzExNiksYT1yKDQxMyksYz1yKDI0ODYpLkJ1ZmZlcjtjbGFzcyB1e2NvbnN0cnVjdG9yKGUpe2lmKHRoaXMubmFtZT1cIlRyYW5zYWN0aW9uIGdyb3VwXCIsdGhpcy50YWc9Yy5mcm9tKFwiVEdcIiksZS5sZW5ndGg+MTYpe2NvbnN0IHQ9YCR7ZS5sZW5ndGgudG9TdHJpbmcoKX0gdHJhbnNhY3Rpb25zIGdyb3VwZWQgdG9nZXRoZXIgYnV0IG1heCBncm91cCBzaXplIGlzICR7MTYuLnRvU3RyaW5nKCl9YDt0aHJvdyBFcnJvcih0KX10aGlzLnR4R3JvdXBIYXNoZXM9ZX1nZXRfb2JqX2Zvcl9lbmNvZGluZygpe3JldHVybnt0eGxpc3Q6dGhpcy50eEdyb3VwSGFzaGVzfX1zdGF0aWMgZnJvbV9vYmpfZm9yX2VuY29kaW5nKGUpe2NvbnN0IHQ9T2JqZWN0LmNyZWF0ZSh0aGlzLnByb3RvdHlwZSk7dC5uYW1lPVwiVHJhbnNhY3Rpb24gZ3JvdXBcIix0LnRhZz1jLmZyb20oXCJUR1wiKSx0LnR4R3JvdXBIYXNoZXM9W107Zm9yKGNvbnN0IHIgb2YgZS50eGxpc3QpdC50eEdyb3VwSGFzaGVzLnB1c2goYy5mcm9tKHIpKTtyZXR1cm4gdH10b0J5dGUoKXtyZXR1cm4gcy5lbmNvZGUodGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpKX19ZnVuY3Rpb24gbChlKXtjb25zdCB0PVtdO2Zvcihjb25zdCByIG9mIGUpe2NvbnN0IGU9bi5pbnN0YW50aWF0ZVR4bklmTmVlZGVkKHIpO3QucHVzaChlLnJhd1R4SUQoKSl9Y29uc3Qgcj1uZXcgdSh0KSxzPXIudG9CeXRlKCksaT1jLmZyb20oYS5jb25jYXRBcnJheXMoci50YWcscykpLGw9by5nZW5lcmljSGFzaChpKTtyZXR1cm4gYy5mcm9tKGwpfWZ1bmN0aW9uIGgoZSx0KXtjb25zdCByPWwoZSksbz1bXTtmb3IoY29uc3QgcyBvZiBlKXtjb25zdCBlPW4uaW5zdGFudGlhdGVUeG5JZk5lZWRlZChzKTt0JiZpLmVuY29kZUFkZHJlc3MoZS5mcm9tLnB1YmxpY0tleSkhPT10fHwoZS5ncm91cD1yLG8ucHVzaChlKSl9cmV0dXJuIG99Y29uc3QgcD11fSw1NTgzOihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse2NoZWNrQnl0ZUNvbnN0QmxvY2s6KCk9PmYsY2hlY2tJbnRDb25zdEJsb2NrOigpPT5wLGNoZWNrUHJvZ3JhbTooKT0+aCxjaGVja1B1c2hCeXRlT3A6KCk9PmcsY2hlY2tQdXNoSW50T3A6KCk9PmQsbGFuZ3NwZWNFdmFsTWF4VmVyc2lvbjooKT0+eSxsYW5nc3BlY0xvZ2ljU2lnVmVyc2lvbjooKT0+bSxwYXJzZVV2YXJpbnQ6KCk9PnMscmVhZFByb2dyYW06KCk9Pmx9KTtjb25zdCBuPUpTT04ucGFyc2UoJ3tcInpfXCI6NixcIkJWXCI6NSxcIkFQXCI6W3tcIk9wY29kZVwiOjAsXCJOYW1lXCI6XCJlcnJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkZhaWwgaW1tZWRpYXRlbHkuXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjEsXCJOYW1lXCI6XCJzaGEyNTZcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjozNSxcIlNpemVcIjoxLFwiRG9jXCI6XCJTSEEyNTYgaGFzaCBvZiB2YWx1ZSBBLCB5aWVsZHMgWzMyXWJ5dGVcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjIsXCJOYW1lXCI6XCJrZWNjYWsyNTZcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxMzAsXCJTaXplXCI6MSxcIkRvY1wiOlwiS2VjY2FrMjU2IGhhc2ggb2YgdmFsdWUgQSwgeWllbGRzIFszMl1ieXRlXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjozLFwiTmFtZVwiOlwic2hhNTEyXzI1NlwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjQ1LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIlNIQTUxMl8yNTYgaGFzaCBvZiB2YWx1ZSBBLCB5aWVsZHMgWzMyXWJ5dGVcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjQsXCJOYW1lXCI6XCJlZDI1NTE5dmVyaWZ5XCIsXCJBcmdzXCI6XCJCQkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxOTAwLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImZvciAoZGF0YSBBLCBzaWduYXR1cmUgQiwgcHVia2V5IEMpIHZlcmlmeSB0aGUgc2lnbmF0dXJlIG9mIChcXFxcXCJQcm9nRGF0YVxcXFxcIiB8fCBwcm9ncmFtX2hhc2ggfHwgZGF0YSkgYWdhaW5zdCB0aGUgcHVia2V5ID0+IHswIG9yIDF9XCIsXCJEb2NFeHRyYVwiOlwiVGhlIDMyIGJ5dGUgcHVibGljIGtleSBpcyB0aGUgbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjaywgcHJlY2VkZWQgYnkgdGhlIDY0IGJ5dGUgc2lnbmF0dXJlIGF0IHRoZSBzZWNvbmQtdG8tbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjaywgcHJlY2VkZWQgYnkgdGhlIGRhdGEgd2hpY2ggd2FzIHNpZ25lZCBhdCB0aGUgdGhpcmQtdG8tbGFzdCBlbGVtZW50IG9uIHRoZSBzdGFjay5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjUsXCJOYW1lXCI6XCJlY2RzYV92ZXJpZnlcIixcIkFyZ3NcIjpcIkJCQkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MTcwMCxcIlNpemVcIjoyLFwiRG9jXCI6XCJmb3IgKGRhdGEgQSwgc2lnbmF0dXJlIEIsIEMgYW5kIHB1YmtleSBELCBFKSB2ZXJpZnkgdGhlIHNpZ25hdHVyZSBvZiB0aGUgZGF0YSBhZ2FpbnN0IHRoZSBwdWJrZXkgPT4gezAgb3IgMX1cIixcIkRvY0V4dHJhXCI6XCJUaGUgMzIgYnl0ZSBZLWNvbXBvbmVudCBvZiBhIHB1YmxpYyBrZXkgaXMgdGhlIGxhc3QgZWxlbWVudCBvbiB0aGUgc3RhY2ssIHByZWNlZGVkIGJ5IFgtY29tcG9uZW50IG9mIGEgcHVia2V5LCBwcmVjZWRlZCBieSBTIGFuZCBSIGNvbXBvbmVudHMgb2YgYSBzaWduYXR1cmUsIHByZWNlZGVkIGJ5IHRoZSBkYXRhIHRoYXQgaXMgZmlmdGggZWxlbWVudCBvbiB0aGUgc3RhY2suIEFsbCB2YWx1ZXMgYXJlIGJpZy1lbmRpYW4gZW5jb2RlZC4gVGhlIHNpZ25lZCBkYXRhIG11c3QgYmUgMzIgYnl0ZXMgbG9uZywgYW5kIHNpZ25hdHVyZXMgaW4gbG93ZXItUyBmb3JtIGFyZSBvbmx5IGFjY2VwdGVkLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6NixcIk5hbWVcIjpcImVjZHNhX3BrX2RlY29tcHJlc3NcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJCXCIsXCJDb3N0XCI6NjUwLFwiU2l6ZVwiOjIsXCJEb2NcIjpcImRlY29tcHJlc3MgcHVia2V5IEEgaW50byBjb21wb25lbnRzIFgsIFlcIixcIkRvY0V4dHJhXCI6XCJUaGUgMzMgYnl0ZSBwdWJsaWMga2V5IGluIGEgY29tcHJlc3NlZCBmb3JtIHRvIGJlIGRlY29tcHJlc3NlZCBpbnRvIFggYW5kIFkgKHRvcCkgY29tcG9uZW50cy4gQWxsIHZhbHVlcyBhcmUgYmlnLWVuZGlhbiBlbmNvZGVkLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6NyxcIk5hbWVcIjpcImVjZHNhX3BrX3JlY292ZXJcIixcIkFyZ3NcIjpcIkJVQkJcIixcIlJldHVybnNcIjpcIkJCXCIsXCJDb3N0XCI6MjAwMCxcIlNpemVcIjoyLFwiRG9jXCI6XCJmb3IgKGRhdGEgQSwgcmVjb3ZlcnkgaWQgQiwgc2lnbmF0dXJlIEMsIEQpIHJlY292ZXIgYSBwdWJsaWMga2V5XCIsXCJEb2NFeHRyYVwiOlwiUyAodG9wKSBhbmQgUiBlbGVtZW50cyBvZiBhIHNpZ25hdHVyZSwgcmVjb3ZlcnkgaWQgYW5kIGRhdGEgKGJvdHRvbSkgYXJlIGV4cGVjdGVkIG9uIHRoZSBzdGFjayBhbmQgdXNlZCB0byBkZXJpdmVyIGEgcHVibGljIGtleS4gQWxsIHZhbHVlcyBhcmUgYmlnLWVuZGlhbiBlbmNvZGVkLiBUaGUgc2lnbmVkIGRhdGEgbXVzdCBiZSAzMiBieXRlcyBsb25nLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGN1cnZlIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6OCxcIk5hbWVcIjpcIitcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHBsdXMgQi4gRmFpbCBvbiBvdmVyZmxvdy5cIixcIkRvY0V4dHJhXCI6XCJPdmVyZmxvdyBpcyBhbiBlcnJvciBjb25kaXRpb24gd2hpY2ggaGFsdHMgZXhlY3V0aW9uIGFuZCBmYWlscyB0aGUgdHJhbnNhY3Rpb24uIEZ1bGwgcHJlY2lzaW9uIGlzIGF2YWlsYWJsZSBmcm9tIGBhZGR3YC5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjksXCJOYW1lXCI6XCItXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtaW51cyBCLiBGYWlsIGlmIEIgPiBBLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTAsXCJOYW1lXCI6XCIvXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBkaXZpZGVkIGJ5IEIgKHRydW5jYXRlZCBkaXZpc2lvbikuIEZhaWwgaWYgQiA9PSAwLlwiLFwiRG9jRXh0cmFcIjpcImBkaXZtb2R3YCBpcyBhdmFpbGFibGUgdG8gZGl2aWRlIHRoZSB0d28tZWxlbWVudCB2YWx1ZXMgcHJvZHVjZWQgYnkgYG11bHdgIGFuZCBgYWRkd2AuXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMSxcIk5hbWVcIjpcIipcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIuIEZhaWwgb24gb3ZlcmZsb3cuXCIsXCJEb2NFeHRyYVwiOlwiT3ZlcmZsb3cgaXMgYW4gZXJyb3IgY29uZGl0aW9uIHdoaWNoIGhhbHRzIGV4ZWN1dGlvbiBhbmQgZmFpbHMgdGhlIHRyYW5zYWN0aW9uLiBGdWxsIHByZWNpc2lvbiBpcyBhdmFpbGFibGUgZnJvbSBgbXVsd2AuXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMixcIk5hbWVcIjpcIjxcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGxlc3MgdGhhbiBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxMyxcIk5hbWVcIjpcIj5cIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGdyZWF0ZXIgdGhhbiBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNCxcIk5hbWVcIjpcIjw9XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gQiA9PiB7MCBvciAxfVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTUsXCJOYW1lXCI6XCI+PVwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIEIgPT4gezAgb3IgMX1cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2LFwiTmFtZVwiOlwiJiZcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIGlzIG5vdCB6ZXJvIGFuZCBCIGlzIG5vdCB6ZXJvID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNyxcIk5hbWVcIjpcInx8XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBub3QgemVybyBvciBCIGlzIG5vdCB6ZXJvID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxOCxcIk5hbWVcIjpcIj09XCIsXCJBcmdzXCI6XCIuLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBlcXVhbCB0byBCID0+IHswIG9yIDF9XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxOSxcIk5hbWVcIjpcIiE9XCIsXCJBcmdzXCI6XCIuLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBpcyBub3QgZXF1YWwgdG8gQiA9PiB7MCBvciAxfVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjAsXCJOYW1lXCI6XCIhXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBID09IDAgeWllbGRzIDE7IGVsc2UgMFwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjEsXCJOYW1lXCI6XCJsZW5cIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInlpZWxkcyBsZW5ndGggb2YgYnl0ZSB2YWx1ZSBBXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoyMixcIk5hbWVcIjpcIml0b2JcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnZlcnRzIHVpbnQ2NCBBIHRvIGJpZyBlbmRpYW4gYnl0ZXNcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjIzLFwiTmFtZVwiOlwiYnRvaVwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29udmVydHMgYnl0ZXMgQSBhcyBiaWcgZW5kaWFuIHRvIHVpbnQ2NFwiLFwiRG9jRXh0cmFcIjpcImBidG9pYCBmYWlscyBpZiB0aGUgaW5wdXQgaXMgbG9uZ2VyIHRoYW4gOCBieXRlcy5cIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI0LFwiTmFtZVwiOlwiJVwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgbW9kdWxvIEIuIEZhaWwgaWYgQiA9PSAwLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjUsXCJOYW1lXCI6XCJ8XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLW9yIEJcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI2LFwiTmFtZVwiOlwiJlwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgYml0d2lzZS1hbmQgQlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MjcsXCJOYW1lXCI6XCJeXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLXhvciBCXCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoyOCxcIk5hbWVcIjpcIn5cIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImJpdHdpc2UgaW52ZXJ0IHZhbHVlIEFcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjI5LFwiTmFtZVwiOlwibXVsd1wiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIgYXMgYSAxMjgtYml0IHJlc3VsdCBpbiB0d28gdWludDY0cy4gWCBpcyB0aGUgaGlnaCA2NCBiaXRzLCBZIGlzIHRoZSBsb3dcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjMwLFwiTmFtZVwiOlwiYWRkd1wiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHBsdXMgQiBhcyBhIDEyOC1iaXQgcmVzdWx0LiBYIGlzIHRoZSBjYXJyeS1iaXQsIFkgaXMgdGhlIGxvdy1vcmRlciA2NCBiaXRzLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MzEsXCJOYW1lXCI6XCJkaXZtb2R3XCIsXCJBcmdzXCI6XCJVVVVVXCIsXCJSZXR1cm5zXCI6XCJVVVVVXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiVyxYID0gKEEsQiAvIEMsRCk7IFksWiA9IChBLEIgbW9kdWxvIEMsRClcIixcIkRvY0V4dHJhXCI6XCJUaGUgbm90YXRpb24gSixLIGluZGljYXRlcyB0aGF0IHR3byB1aW50NjQgdmFsdWVzIEogYW5kIEsgYXJlIGludGVycHJldGVkIGFzIGEgdWludDEyOCB2YWx1ZSwgd2l0aCBKIGFzIHRoZSBoaWdoIHVpbnQ2NCBhbmQgSyB0aGUgbG93LlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MzIsXCJOYW1lXCI6XCJpbnRjYmxvY2tcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjAsXCJEb2NcIjpcInByZXBhcmUgYmxvY2sgb2YgdWludDY0IGNvbnN0YW50cyBmb3IgdXNlIGJ5IGludGNcIixcIkRvY0V4dHJhXCI6XCJgaW50Y2Jsb2NrYCBsb2FkcyBmb2xsb3dpbmcgcHJvZ3JhbSBieXRlcyBpbnRvIGFuIGFycmF5IG9mIGludGVnZXIgY29uc3RhbnRzIGluIHRoZSBldmFsdWF0b3IuIFRoZXNlIGludGVnZXIgY29uc3RhbnRzIGNhbiBiZSByZWZlcnJlZCB0byBieSBgaW50Y2AgYW5kIGBpbnRjXypgIHdoaWNoIHdpbGwgcHVzaCB0aGUgdmFsdWUgb250byB0aGUgc3RhY2suIFN1YnNlcXVlbnQgY2FsbHMgdG8gYGludGNibG9ja2AgcmVzZXQgYW5kIHJlcGxhY2UgdGhlIGludGVnZXIgY29uc3RhbnRzIGF2YWlsYWJsZSB0byB0aGUgc2NyaXB0LlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgbGVuZ3RofSBbe3ZhcnVpbnQgdmFsdWV9LCAuLi5dXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzMsXCJOYW1lXCI6XCJpbnRjXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJJdGggY29uc3RhbnQgZnJvbSBpbnRjYmxvY2tcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBpbnQgY29uc3RhbnQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzQsXCJOYW1lXCI6XCJpbnRjXzBcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDAgZnJvbSBpbnRjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjozNSxcIk5hbWVcIjpcImludGNfMVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29uc3RhbnQgMSBmcm9tIGludGNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjM2LFwiTmFtZVwiOlwiaW50Y18yXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAyIGZyb20gaW50Y2Jsb2NrXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzcsXCJOYW1lXCI6XCJpbnRjXzNcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDMgZnJvbSBpbnRjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjozOCxcIk5hbWVcIjpcImJ5dGVjYmxvY2tcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjAsXCJEb2NcIjpcInByZXBhcmUgYmxvY2sgb2YgYnl0ZS1hcnJheSBjb25zdGFudHMgZm9yIHVzZSBieSBieXRlY1wiLFwiRG9jRXh0cmFcIjpcImBieXRlY2Jsb2NrYCBsb2FkcyB0aGUgZm9sbG93aW5nIHByb2dyYW0gYnl0ZXMgaW50byBhbiBhcnJheSBvZiBieXRlLWFycmF5IGNvbnN0YW50cyBpbiB0aGUgZXZhbHVhdG9yLiBUaGVzZSBjb25zdGFudHMgY2FuIGJlIHJlZmVycmVkIHRvIGJ5IGBieXRlY2AgYW5kIGBieXRlY18qYCB3aGljaCB3aWxsIHB1c2ggdGhlIHZhbHVlIG9udG8gdGhlIHN0YWNrLiBTdWJzZXF1ZW50IGNhbGxzIHRvIGBieXRlY2Jsb2NrYCByZXNldCBhbmQgcmVwbGFjZSB0aGUgYnl0ZXMgY29uc3RhbnRzIGF2YWlsYWJsZSB0byB0aGUgc2NyaXB0LlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgbGVuZ3RofSBbKHt2YXJ1aW50IHZhbHVlIGxlbmd0aH0gYnl0ZXMpLCAuLi5dXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MzksXCJOYW1lXCI6XCJieXRlY1wiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkRvY1wiOlwiSXRoIGNvbnN0YW50IGZyb20gYnl0ZWNibG9ja1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGJ5dGUgY29uc3RhbnQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDAsXCJOYW1lXCI6XCJieXRlY18wXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAwIGZyb20gYnl0ZWNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQxLFwiTmFtZVwiOlwiYnl0ZWNfMVwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiY29uc3RhbnQgMSBmcm9tIGJ5dGVjYmxvY2tcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0MixcIk5hbWVcIjpcImJ5dGVjXzJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImNvbnN0YW50IDIgZnJvbSBieXRlY2Jsb2NrXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDMsXCJOYW1lXCI6XCJieXRlY18zXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJjb25zdGFudCAzIGZyb20gYnl0ZWNibG9ja1wiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQ0LFwiTmFtZVwiOlwiYXJnXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJOdGggTG9naWNTaWcgYXJndW1lbnRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhcmcgaW5kZXggTn1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0NSxcIk5hbWVcIjpcImFyZ18wXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJMb2dpY1NpZyBhcmd1bWVudCAwXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDYsXCJOYW1lXCI6XCJhcmdfMVwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiTG9naWNTaWcgYXJndW1lbnQgMVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjQ3LFwiTmFtZVwiOlwiYXJnXzJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkxvZ2ljU2lnIGFyZ3VtZW50IDJcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo0OCxcIk5hbWVcIjpcImFyZ18zXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJMb2dpY1NpZyBhcmd1bWVudCAzXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NDksXCJOYW1lXCI6XCJ0eG5cIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJBcmdFbnVtXCI6W1wiU2VuZGVyXCIsXCJGZWVcIixcIkZpcnN0VmFsaWRcIixcIkZpcnN0VmFsaWRUaW1lXCIsXCJMYXN0VmFsaWRcIixcIk5vdGVcIixcIkxlYXNlXCIsXCJSZWNlaXZlclwiLFwiQW1vdW50XCIsXCJDbG9zZVJlbWFpbmRlclRvXCIsXCJWb3RlUEtcIixcIlNlbGVjdGlvblBLXCIsXCJWb3RlRmlyc3RcIixcIlZvdGVMYXN0XCIsXCJWb3RlS2V5RGlsdXRpb25cIixcIlR5cGVcIixcIlR5cGVFbnVtXCIsXCJYZmVyQXNzZXRcIixcIkFzc2V0QW1vdW50XCIsXCJBc3NldFNlbmRlclwiLFwiQXNzZXRSZWNlaXZlclwiLFwiQXNzZXRDbG9zZVRvXCIsXCJHcm91cEluZGV4XCIsXCJUeElEXCIsXCJBcHBsaWNhdGlvbklEXCIsXCJPbkNvbXBsZXRpb25cIixcIkFwcGxpY2F0aW9uQXJnc1wiLFwiTnVtQXBwQXJnc1wiLFwiQWNjb3VudHNcIixcIk51bUFjY291bnRzXCIsXCJBcHByb3ZhbFByb2dyYW1cIixcIkNsZWFyU3RhdGVQcm9ncmFtXCIsXCJSZWtleVRvXCIsXCJDb25maWdBc3NldFwiLFwiQ29uZmlnQXNzZXRUb3RhbFwiLFwiQ29uZmlnQXNzZXREZWNpbWFsc1wiLFwiQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuXCIsXCJDb25maWdBc3NldFVuaXROYW1lXCIsXCJDb25maWdBc3NldE5hbWVcIixcIkNvbmZpZ0Fzc2V0VVJMXCIsXCJDb25maWdBc3NldE1ldGFkYXRhSGFzaFwiLFwiQ29uZmlnQXNzZXRNYW5hZ2VyXCIsXCJDb25maWdBc3NldFJlc2VydmVcIixcIkNvbmZpZ0Fzc2V0RnJlZXplXCIsXCJDb25maWdBc3NldENsYXdiYWNrXCIsXCJGcmVlemVBc3NldFwiLFwiRnJlZXplQXNzZXRBY2NvdW50XCIsXCJGcmVlemVBc3NldEZyb3plblwiLFwiQXNzZXRzXCIsXCJOdW1Bc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTnVtQXBwbGljYXRpb25zXCIsXCJHbG9iYWxOdW1VaW50XCIsXCJHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkxvY2FsTnVtVWludFwiLFwiTG9jYWxOdW1CeXRlU2xpY2VcIixcIkV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJOb25wYXJ0aWNpcGF0aW9uXCIsXCJMb2dzXCIsXCJOdW1Mb2dzXCIsXCJDcmVhdGVkQXNzZXRJRFwiLFwiQ3JlYXRlZEFwcGxpY2F0aW9uSURcIixcIkxhc3RMb2dcIixcIlN0YXRlUHJvb2ZQS1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQlVVVVVCQkJVQkJCVVVVQlVVVUJCQlVCVVVCVUJVQkJCVVVVVUJCQkJCQkJCVUJVVVVVVVVVVVVVVUJVVVVCQlwiLFwiRG9jXCI6XCJmaWVsZCBGIG9mIGN1cnJlbnQgdHJhbnNhY3Rpb25cIixcIkRvY0V4dHJhXCI6XCJGaXJzdFZhbGlkVGltZSBjYXVzZXMgdGhlIHByb2dyYW0gdG8gZmFpbC4gVGhlIGZpZWxkIGlzIHJlc2VydmVkIGZvciBmdXR1cmUgdXNlLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjUwLFwiTmFtZVwiOlwiZ2xvYmFsXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJnbG9iYWwgZmllbGQgRlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGdsb2JhbCBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MSxcIk5hbWVcIjpcImd0eG5cIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJBcmdFbnVtXCI6W1wiU2VuZGVyXCIsXCJGZWVcIixcIkZpcnN0VmFsaWRcIixcIkZpcnN0VmFsaWRUaW1lXCIsXCJMYXN0VmFsaWRcIixcIk5vdGVcIixcIkxlYXNlXCIsXCJSZWNlaXZlclwiLFwiQW1vdW50XCIsXCJDbG9zZVJlbWFpbmRlclRvXCIsXCJWb3RlUEtcIixcIlNlbGVjdGlvblBLXCIsXCJWb3RlRmlyc3RcIixcIlZvdGVMYXN0XCIsXCJWb3RlS2V5RGlsdXRpb25cIixcIlR5cGVcIixcIlR5cGVFbnVtXCIsXCJYZmVyQXNzZXRcIixcIkFzc2V0QW1vdW50XCIsXCJBc3NldFNlbmRlclwiLFwiQXNzZXRSZWNlaXZlclwiLFwiQXNzZXRDbG9zZVRvXCIsXCJHcm91cEluZGV4XCIsXCJUeElEXCIsXCJBcHBsaWNhdGlvbklEXCIsXCJPbkNvbXBsZXRpb25cIixcIkFwcGxpY2F0aW9uQXJnc1wiLFwiTnVtQXBwQXJnc1wiLFwiQWNjb3VudHNcIixcIk51bUFjY291bnRzXCIsXCJBcHByb3ZhbFByb2dyYW1cIixcIkNsZWFyU3RhdGVQcm9ncmFtXCIsXCJSZWtleVRvXCIsXCJDb25maWdBc3NldFwiLFwiQ29uZmlnQXNzZXRUb3RhbFwiLFwiQ29uZmlnQXNzZXREZWNpbWFsc1wiLFwiQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuXCIsXCJDb25maWdBc3NldFVuaXROYW1lXCIsXCJDb25maWdBc3NldE5hbWVcIixcIkNvbmZpZ0Fzc2V0VVJMXCIsXCJDb25maWdBc3NldE1ldGFkYXRhSGFzaFwiLFwiQ29uZmlnQXNzZXRNYW5hZ2VyXCIsXCJDb25maWdBc3NldFJlc2VydmVcIixcIkNvbmZpZ0Fzc2V0RnJlZXplXCIsXCJDb25maWdBc3NldENsYXdiYWNrXCIsXCJGcmVlemVBc3NldFwiLFwiRnJlZXplQXNzZXRBY2NvdW50XCIsXCJGcmVlemVBc3NldEZyb3plblwiLFwiQXNzZXRzXCIsXCJOdW1Bc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTnVtQXBwbGljYXRpb25zXCIsXCJHbG9iYWxOdW1VaW50XCIsXCJHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkxvY2FsTnVtVWludFwiLFwiTG9jYWxOdW1CeXRlU2xpY2VcIixcIkV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJOb25wYXJ0aWNpcGF0aW9uXCIsXCJMb2dzXCIsXCJOdW1Mb2dzXCIsXCJDcmVhdGVkQXNzZXRJRFwiLFwiQ3JlYXRlZEFwcGxpY2F0aW9uSURcIixcIkxhc3RMb2dcIixcIlN0YXRlUHJvb2ZQS1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQlVVVVVCQkJVQkJCVVVVQlVVVUJCQlVCVVVCVUJVQkJCVVVVVUJCQkJCQkJCVUJVVVVVVVVVVVVVVUJVVVVCQlwiLFwiRG9jXCI6XCJmaWVsZCBGIG9mIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJmb3Igbm90ZXMgb24gdHJhbnNhY3Rpb24gZmllbGRzIGF2YWlsYWJsZSwgc2VlIGB0eG5gLiBJZiB0aGlzIHRyYW5zYWN0aW9uIGlzIF9pXyBpbiB0aGUgZ3JvdXAsIGBndHhuIGkgZmllbGRgIGlzIGVxdWl2YWxlbnQgdG8gYHR4biBmaWVsZGAuXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MixcIk5hbWVcIjpcImxvYWRcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIkl0aCBzY3JhdGNoIHNwYWNlIHZhbHVlLiBBbGwgc2NyYXRjaCBzcGFjZXMgYXJlIDAgYXQgcHJvZ3JhbSBzdGFydC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBwb3NpdGlvbiBpbiBzY3JhdGNoIHNwYWNlIHRvIGxvYWQgZnJvbX1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1MyxcIk5hbWVcIjpcInN0b3JlXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJzdG9yZSBBIHRvIHRoZSBJdGggc2NyYXRjaCBzcGFjZVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHBvc2l0aW9uIGluIHNjcmF0Y2ggc3BhY2UgdG8gc3RvcmUgdG99XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTQsXCJOYW1lXCI6XCJ0eG5hXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjozLFwiQXJnRW51bVwiOltcIkFwcGxpY2F0aW9uQXJnc1wiLFwiQWNjb3VudHNcIixcIkFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJMb2dzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVQlwiLFwiRG9jXCI6XCJJdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgb2YgdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGFycmF5IGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjU1LFwiTmFtZVwiOlwiZ3R4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjQsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBmcm9tIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTYsXCJOYW1lXCI6XCJndHhuc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImZvciBub3RlcyBvbiB0cmFuc2FjdGlvbiBmaWVsZHMgYXZhaWxhYmxlLCBzZWUgYHR4bmAuIElmIHRvcCBvZiBzdGFjayBpcyBfaV8sIGBndHhucyBmaWVsZGAgaXMgZXF1aXZhbGVudCB0byBgZ3R4biBfaV8gZmllbGRgLiBndHhucyBleGlzdHMgc28gdGhhdCBfaV8gY2FuIGJlIGNhbGN1bGF0ZWQsIG9mdGVuIGJhc2VkIG9uIHRoZSBpbmRleCBvZiB0aGUgY3VycmVudCB0cmFuc2FjdGlvbi5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo1NyxcIk5hbWVcIjpcImd0eG5zYVwiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiSXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NTgsXCJOYW1lXCI6XCJnbG9hZFwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiSXRoIHNjcmF0Y2ggc3BhY2UgdmFsdWUgb2YgdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImBnbG9hZGAgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gaXMgYW4gQXBwbGljYXRpb25DYWxsIGFuZCBUIDwgR3JvdXBJbmRleC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHBvc2l0aW9uIGluIHNjcmF0Y2ggc3BhY2UgdG8gbG9hZCBmcm9tfVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjU5LFwiTmFtZVwiOlwiZ2xvYWRzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJJdGggc2NyYXRjaCBzcGFjZSB2YWx1ZSBvZiB0aGUgQXRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJEb2NFeHRyYVwiOlwiYGdsb2Fkc2AgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gaXMgYW4gQXBwbGljYXRpb25DYWxsIGFuZCBBIDwgR3JvdXBJbmRleC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBwb3NpdGlvbiBpbiBzY3JhdGNoIHNwYWNlIHRvIGxvYWQgZnJvbX1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo2MCxcIk5hbWVcIjpcImdhaWRcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIklEIG9mIHRoZSBhc3NldCBvciBhcHBsaWNhdGlvbiBjcmVhdGVkIGluIHRoZSBUdGggdHJhbnNhY3Rpb24gb2YgdGhlIGN1cnJlbnQgZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgZ2FpZGAgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gY3JlYXRlZCBhbiBhc3NldCBvciBhcHBsaWNhdGlvbiBhbmQgVCA8IEdyb3VwSW5kZXguXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjEsXCJOYW1lXCI6XCJnYWlkc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiSUQgb2YgdGhlIGFzc2V0IG9yIGFwcGxpY2F0aW9uIGNyZWF0ZWQgaW4gdGhlIEF0aCB0cmFuc2FjdGlvbiBvZiB0aGUgY3VycmVudCBncm91cFwiLFwiRG9jRXh0cmFcIjpcImBnYWlkc2AgZmFpbHMgdW5sZXNzIHRoZSByZXF1ZXN0ZWQgdHJhbnNhY3Rpb24gY3JlYXRlZCBhbiBhc3NldCBvciBhcHBsaWNhdGlvbiBhbmQgQSA8IEdyb3VwSW5kZXguXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjIsXCJOYW1lXCI6XCJsb2Fkc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQXRoIHNjcmF0Y2ggc3BhY2UgdmFsdWUuICBBbGwgc2NyYXRjaCBzcGFjZXMgYXJlIDAgYXQgcHJvZ3JhbSBzdGFydC5cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjo2MyxcIk5hbWVcIjpcInN0b3Jlc1wiLFwiQXJnc1wiOlwiVS5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInN0b3JlIEIgdG8gdGhlIEF0aCBzY3JhdGNoIHNwYWNlXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6NjQsXCJOYW1lXCI6XCJibnpcIixcIkFyZ3NcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB0byBUQVJHRVQgaWYgdmFsdWUgQSBpcyBub3QgemVyb1wiLFwiRG9jRXh0cmFcIjpcIlRoZSBgYm56YCBpbnN0cnVjdGlvbiBvcGNvZGUgMHg0MCBpcyBmb2xsb3dlZCBieSB0d28gaW1tZWRpYXRlIGRhdGEgYnl0ZXMgd2hpY2ggYXJlIGEgaGlnaCBieXRlIGZpcnN0IGFuZCBsb3cgYnl0ZSBzZWNvbmQgd2hpY2ggdG9nZXRoZXIgZm9ybSBhIDE2IGJpdCBvZmZzZXQgd2hpY2ggdGhlIGluc3RydWN0aW9uIG1heSBicmFuY2ggdG8uIEZvciBhIGJueiBpbnN0cnVjdGlvbiBhdCBgcGNgLCBpZiB0aGUgbGFzdCBlbGVtZW50IG9mIHRoZSBzdGFjayBpcyBub3QgemVybyB0aGVuIGJyYW5jaCB0byBpbnN0cnVjdGlvbiBhdCBgcGMgKyAzICsgTmAsIGVsc2UgcHJvY2VlZCB0byBuZXh0IGluc3RydWN0aW9uIGF0IGBwYyArIDNgLiBCcmFuY2ggdGFyZ2V0cyBtdXN0IGJlIGFsaWduZWQgaW5zdHJ1Y3Rpb25zLiAoZS5nLiBCcmFuY2hpbmcgdG8gdGhlIHNlY29uZCBieXRlIG9mIGEgMiBieXRlIG9wIHdpbGwgYmUgcmVqZWN0ZWQuKSBTdGFydGluZyBhdCB2NCwgdGhlIG9mZnNldCBpcyB0cmVhdGVkIGFzIGEgc2lnbmVkIDE2IGJpdCBpbnRlZ2VyIGFsbG93aW5nIGZvciBiYWNrd2FyZCBicmFuY2hlcyBhbmQgbG9vcGluZy4gSW4gcHJpb3IgdmVyc2lvbiAodjEgdG8gdjMpLCBicmFuY2ggb2Zmc2V0cyBhcmUgbGltaXRlZCB0byBmb3J3YXJkIGJyYW5jaGVzIG9ubHksIDAtMHg3ZmZmLlxcXFxuXFxcXG5BdCB2MiBpdCBiZWNhbWUgYWxsb3dlZCB0byBicmFuY2ggdG8gdGhlIGVuZCBvZiB0aGUgcHJvZ3JhbSBleGFjdGx5IGFmdGVyIHRoZSBsYXN0IGluc3RydWN0aW9uOiBibnogdG8gYnl0ZSBOICh3aXRoIDAtaW5kZXhpbmcpIHdhcyBpbGxlZ2FsIGZvciBhIFRFQUwgcHJvZ3JhbSB3aXRoIE4gYnl0ZXMgYmVmb3JlIHYyLCBhbmQgaXMgbGVnYWwgYWZ0ZXIgaXQuIFRoaXMgY2hhbmdlIGVsaW1pbmF0ZXMgdGhlIG5lZWQgZm9yIGEgbGFzdCBpbnN0cnVjdGlvbiBvZiBuby1vcCBhcyBhIGJyYW5jaCB0YXJnZXQgYXQgdGhlIGVuZC4gKEJyYW5jaGluZyBiZXlvbmQgdGhlIGVuZC0taW4gb3RoZXIgd29yZHMsIHRvIGEgYnl0ZSBsYXJnZXIgdGhhbiBOLS1pcyBzdGlsbCBpbGxlZ2FsIGFuZCB3aWxsIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie2ludDE2IGJyYW5jaCBvZmZzZXQsIGJpZyBlbmRpYW59XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY1LFwiTmFtZVwiOlwiYnpcIixcIkFyZ3NcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB0byBUQVJHRVQgaWYgdmFsdWUgQSBpcyB6ZXJvXCIsXCJEb2NFeHRyYVwiOlwiU2VlIGBibnpgIGZvciBkZXRhaWxzIG9uIGhvdyBicmFuY2hlcyB3b3JrLiBgYnpgIGludmVydHMgdGhlIGJlaGF2aW9yIG9mIGBibnpgLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie2ludDE2IGJyYW5jaCBvZmZzZXQsIGJpZyBlbmRpYW59XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY2LFwiTmFtZVwiOlwiYlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiYnJhbmNoIHVuY29uZGl0aW9uYWxseSB0byBUQVJHRVRcIixcIkRvY0V4dHJhXCI6XCJTZWUgYGJuemAgZm9yIGRldGFpbHMgb24gaG93IGJyYW5jaGVzIHdvcmsuIGBiYCBhbHdheXMganVtcHMgdG8gdGhlIG9mZnNldC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcIntpbnQxNiBicmFuY2ggb2Zmc2V0LCBiaWcgZW5kaWFufVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo2NyxcIk5hbWVcIjpcInJldHVyblwiLFwiQXJnc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwidXNlIEEgYXMgc3VjY2VzcyB2YWx1ZTsgZW5kXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjY4LFwiTmFtZVwiOlwiYXNzZXJ0XCIsXCJBcmdzXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJpbW1lZGlhdGVseSBmYWlsIHVubGVzcyBBIGlzIGEgbm9uLXplcm8gbnVtYmVyXCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjcyLFwiTmFtZVwiOlwicG9wXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkaXNjYXJkIEFcIixcIkdyb3Vwc1wiOltcIkZsb3cgQ29udHJvbFwiXX0se1wiT3Bjb2RlXCI6NzMsXCJOYW1lXCI6XCJkdXBcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIi4uXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkdXBsaWNhdGUgQVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NCxcIk5hbWVcIjpcImR1cDJcIixcIkFyZ3NcIjpcIi4uXCIsXCJSZXR1cm5zXCI6XCIuLi4uXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkdXBsaWNhdGUgQSBhbmQgQlwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NSxcIk5hbWVcIjpcImRpZ1wiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiLi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjIsXCJEb2NcIjpcIk50aCB2YWx1ZSBmcm9tIHRoZSB0b3Agb2YgdGhlIHN0YWNrLiBkaWcgMCBpcyBlcXVpdmFsZW50IHRvIGR1cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGRlcHRofVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NixcIk5hbWVcIjpcInN3YXBcIixcIkFyZ3NcIjpcIi4uXCIsXCJSZXR1cm5zXCI6XCIuLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwic3dhcHMgQSBhbmQgQiBvbiBzdGFja1wiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3NyxcIk5hbWVcIjpcInNlbGVjdFwiLFwiQXJnc1wiOlwiLi5VXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJzZWxlY3RzIG9uZSBvZiB0d28gdmFsdWVzIGJhc2VkIG9uIHRvcC1vZi1zdGFjazogQiBpZiBDICE9IDAsIGVsc2UgQVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjo3OCxcIk5hbWVcIjpcImNvdmVyXCIsXCJBcmdzXCI6XCIuXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJyZW1vdmUgdG9wIG9mIHN0YWNrLCBhbmQgcGxhY2UgaXQgZGVlcGVyIGluIHRoZSBzdGFjayBzdWNoIHRoYXQgTiBlbGVtZW50cyBhcmUgYWJvdmUgaXQuIEZhaWxzIGlmIHN0YWNrIGRlcHRoIDw9IE4uXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggZGVwdGh9XCIsXCJHcm91cHNcIjpbXCJGbG93IENvbnRyb2xcIl19LHtcIk9wY29kZVwiOjc5LFwiTmFtZVwiOlwidW5jb3ZlclwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkRvY1wiOlwicmVtb3ZlIHRoZSB2YWx1ZSBhdCBkZXB0aCBOIGluIHRoZSBzdGFjayBhbmQgc2hpZnQgYWJvdmUgaXRlbXMgZG93biBzbyB0aGUgTnRoIGRlZXAgdmFsdWUgaXMgb24gdG9wIG9mIHRoZSBzdGFjay4gRmFpbHMgaWYgc3RhY2sgZGVwdGggPD0gTi5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBkZXB0aH1cIixcIkdyb3Vwc1wiOltcIkZsb3cgQ29udHJvbFwiXX0se1wiT3Bjb2RlXCI6ODAsXCJOYW1lXCI6XCJjb25jYXRcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJqb2luIEEgYW5kIEJcIixcIkRvY0V4dHJhXCI6XCJgY29uY2F0YCBmYWlscyBpZiB0aGUgcmVzdWx0IHdvdWxkIGJlIGdyZWF0ZXIgdGhhbiA0MDk2IGJ5dGVzLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODEsXCJOYW1lXCI6XCJzdWJzdHJpbmdcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcIkEgcmFuZ2Ugb2YgYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IFMgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgRS4gSWYgRSA8IFMsIG9yIGVpdGhlciBpcyBsYXJnZXIgdGhhbiB0aGUgYXJyYXkgbGVuZ3RoLCB0aGUgcHJvZ3JhbSBmYWlsc1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHN0YXJ0IHBvc2l0aW9ufSB7dWludDggZW5kIHBvc2l0aW9ufVwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBNYW5pcHVsYXRpb25cIl19LHtcIk9wY29kZVwiOjgyLFwiTmFtZVwiOlwic3Vic3RyaW5nM1wiLFwiQXJnc1wiOlwiQlVVXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHJhbmdlIG9mIGJ5dGVzIGZyb20gQSBzdGFydGluZyBhdCBCIHVwIHRvIGJ1dCBub3QgaW5jbHVkaW5nIEMuIElmIEMgPCBCLCBvciBlaXRoZXIgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4MyxcIk5hbWVcIjpcImdldGJpdFwiLFwiQXJnc1wiOlwiLlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkJ0aCBiaXQgb2YgKGJ5dGUtYXJyYXkgb3IgaW50ZWdlcikgQS5cIixcIkRvY0V4dHJhXCI6XCJzZWUgZXhwbGFuYXRpb24gb2YgYml0IG9yZGVyaW5nIGluIHNldGJpdFwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODQsXCJOYW1lXCI6XCJzZXRiaXRcIixcIkFyZ3NcIjpcIi5VVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQ29weSBvZiAoYnl0ZS1hcnJheSBvciBpbnRlZ2VyKSBBLCB3aXRoIHRoZSBCdGggYml0IHNldCB0byAoMCBvciAxKSBDXCIsXCJEb2NFeHRyYVwiOlwiV2hlbiBBIGlzIGEgdWludDY0LCBpbmRleCAwIGlzIHRoZSBsZWFzdCBzaWduaWZpY2FudCBiaXQuIFNldHRpbmcgYml0IDMgdG8gMSBvbiB0aGUgaW50ZWdlciAwIHlpZWxkcyA4LCBvciAyXjMuIFdoZW4gQSBpcyBhIGJ5dGUgYXJyYXksIGluZGV4IDAgaXMgdGhlIGxlZnRtb3N0IGJpdCBvZiB0aGUgbGVmdG1vc3QgYnl0ZS4gU2V0dGluZyBiaXRzIDAgdGhyb3VnaCAxMSB0byAxIGluIGEgNC1ieXRlLWFycmF5IG9mIDBzIHlpZWxkcyB0aGUgYnl0ZSBhcnJheSAweGZmZjAwMDAwLiBTZXR0aW5nIGJpdCAzIHRvIDEgb24gdGhlIDEtYnl0ZS1hcnJheSAweDAwIHlpZWxkcyB0aGUgYnl0ZSBhcnJheSAweDEwLlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODUsXCJOYW1lXCI6XCJnZXRieXRlXCIsXCJBcmdzXCI6XCJCVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQnRoIGJ5dGUgb2YgQSwgYXMgYW4gaW50ZWdlclwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6ODYsXCJOYW1lXCI6XCJzZXRieXRlXCIsXCJBcmdzXCI6XCJCVVVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkNvcHkgb2YgQSB3aXRoIHRoZSBCdGggYnl0ZSBzZXQgdG8gc21hbGwgaW50ZWdlciAoYmV0d2VlbiAwLi4yNTUpIENcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjg3LFwiTmFtZVwiOlwiZXh0cmFjdFwiLFwiQXJnc1wiOlwiQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiQSByYW5nZSBvZiBieXRlcyBmcm9tIEEgc3RhcnRpbmcgYXQgUyB1cCB0byBidXQgbm90IGluY2x1ZGluZyBTK0wuIElmIEwgaXMgMCwgdGhlbiBleHRyYWN0IHRvIHRoZSBlbmQgb2YgdGhlIHN0cmluZy4gSWYgUyBvciBTK0wgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBzdGFydCBwb3NpdGlvbn0ge3VpbnQ4IGxlbmd0aH1cIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4OCxcIk5hbWVcIjpcImV4dHJhY3QzXCIsXCJBcmdzXCI6XCJCVVVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgcmFuZ2Ugb2YgYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IEIgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgQitDLiBJZiBCK0MgaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo4OSxcIk5hbWVcIjpcImV4dHJhY3RfdWludDE2XCIsXCJBcmdzXCI6XCJCVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSB1aW50MTYgZm9ybWVkIGZyb20gYSByYW5nZSBvZiBiaWctZW5kaWFuIGJ5dGVzIGZyb20gQSBzdGFydGluZyBhdCBCIHVwIHRvIGJ1dCBub3QgaW5jbHVkaW5nIEIrMi4gSWYgQisyIGlzIGxhcmdlciB0aGFuIHRoZSBhcnJheSBsZW5ndGgsIHRoZSBwcm9ncmFtIGZhaWxzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IE1hbmlwdWxhdGlvblwiXX0se1wiT3Bjb2RlXCI6OTAsXCJOYW1lXCI6XCJleHRyYWN0X3VpbnQzMlwiLFwiQXJnc1wiOlwiQlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgdWludDMyIGZvcm1lZCBmcm9tIGEgcmFuZ2Ugb2YgYmlnLWVuZGlhbiBieXRlcyBmcm9tIEEgc3RhcnRpbmcgYXQgQiB1cCB0byBidXQgbm90IGluY2x1ZGluZyBCKzQuIElmIEIrNCBpcyBsYXJnZXIgdGhhbiB0aGUgYXJyYXkgbGVuZ3RoLCB0aGUgcHJvZ3JhbSBmYWlsc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBNYW5pcHVsYXRpb25cIl19LHtcIk9wY29kZVwiOjkxLFwiTmFtZVwiOlwiZXh0cmFjdF91aW50NjRcIixcIkFyZ3NcIjpcIkJVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHVpbnQ2NCBmb3JtZWQgZnJvbSBhIHJhbmdlIG9mIGJpZy1lbmRpYW4gYnl0ZXMgZnJvbSBBIHN0YXJ0aW5nIGF0IEIgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgQis4LiBJZiBCKzggaXMgbGFyZ2VyIHRoYW4gdGhlIGFycmF5IGxlbmd0aCwgdGhlIHByb2dyYW0gZmFpbHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTWFuaXB1bGF0aW9uXCJdfSx7XCJPcGNvZGVcIjo5NixcIk5hbWVcIjpcImJhbGFuY2VcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcImdldCBiYWxhbmNlIGZvciBhY2NvdW50IEEsIGluIG1pY3JvYWxnb3MuIFRoZSBiYWxhbmNlIGlzIG9ic2VydmVkIGFmdGVyIHRoZSBlZmZlY3RzIG9mIHByZXZpb3VzIHRyYW5zYWN0aW9ucyBpbiB0aGUgZ3JvdXAsIGFuZCBhZnRlciB0aGUgZmVlIGZvciB0aGUgY3VycmVudCB0cmFuc2FjdGlvbiBpcyBkZWR1Y3RlZC5cIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5BY2NvdW50cyBvZmZzZXQgKG9yLCBzaW5jZSB2NCwgYW4gX2F2YWlsYWJsZV8gYWNjb3VudCBhZGRyZXNzKSwgX2F2YWlsYWJsZV8gYXBwbGljYXRpb24gaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0KS4gUmV0dXJuOiB2YWx1ZS5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTcsXCJOYW1lXCI6XCJhcHBfb3B0ZWRfaW5cIixcIkFyZ3NcIjpcIi5VXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIGFjY291bnQgQSBpcyBvcHRlZCBpbiB0byBhcHBsaWNhdGlvbiBCLCBlbHNlIDBcIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5BY2NvdW50cyBvZmZzZXQgKG9yLCBzaW5jZSB2NCwgYW4gX2F2YWlsYWJsZV8gYWNjb3VudCBhZGRyZXNzKSwgX2F2YWlsYWJsZV8gYXBwbGljYXRpb24gaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0KS4gUmV0dXJuOiAxIGlmIG9wdGVkIGluIGFuZCAwIG90aGVyd2lzZS5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTgsXCJOYW1lXCI6XCJhcHBfbG9jYWxfZ2V0XCIsXCJBcmdzXCI6XCIuQlwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwibG9jYWwgc3RhdGUgb2YgdGhlIGtleSBCIGluIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uIGluIGFjY291bnQgQVwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkFjY291bnRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhY2NvdW50IGFkZHJlc3MpLCBzdGF0ZSBrZXkuIFJldHVybjogdmFsdWUuIFRoZSB2YWx1ZSBpcyB6ZXJvIChvZiB0eXBlIHVpbnQ2NCkgaWYgdGhlIGtleSBkb2VzIG5vdCBleGlzdC5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6OTksXCJOYW1lXCI6XCJhcHBfbG9jYWxfZ2V0X2V4XCIsXCJBcmdzXCI6XCIuVUJcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJYIGlzIHRoZSBsb2NhbCBzdGF0ZSBvZiBhcHBsaWNhdGlvbiBCLCBrZXkgQyBpbiBhY2NvdW50IEEuIFkgaXMgMSBpZiBrZXkgZXhpc3RlZCwgZWxzZSAwXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIF9hdmFpbGFibGVfIGFwcGxpY2F0aW9uIGlkIChvciwgc2luY2UgdjQsIGEgVHhuLkZvcmVpZ25BcHBzIG9mZnNldCksIHN0YXRlIGtleS4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAodG9wIG9mIHRoZSBzdGFjaywgMSBpZiB0aGUgYXBwbGljYXRpb24gYW5kIGtleSBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLiBUaGUgdmFsdWUgaXMgemVybyAob2YgdHlwZSB1aW50NjQpIGlmIHRoZSBrZXkgZG9lcyBub3QgZXhpc3QuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMCxcIk5hbWVcIjpcImFwcF9nbG9iYWxfZ2V0XCIsXCJBcmdzXCI6XCJCXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJnbG9iYWwgc3RhdGUgb2YgdGhlIGtleSBBIGluIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBzdGF0ZSBrZXkuIFJldHVybjogdmFsdWUuIFRoZSB2YWx1ZSBpcyB6ZXJvIChvZiB0eXBlIHVpbnQ2NCkgaWYgdGhlIGtleSBkb2VzIG5vdCBleGlzdC5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6MTAxLFwiTmFtZVwiOlwiYXBwX2dsb2JhbF9nZXRfZXhcIixcIkFyZ3NcIjpcIlVCXCIsXCJSZXR1cm5zXCI6XCIuVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiWCBpcyB0aGUgZ2xvYmFsIHN0YXRlIG9mIGFwcGxpY2F0aW9uIEEsIGtleSBCLiBZIGlzIDEgaWYga2V5IGV4aXN0ZWQsIGVsc2UgMFwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkZvcmVpZ25BcHBzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhcHBsaWNhdGlvbiBpZCksIHN0YXRlIGtleS4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAodG9wIG9mIHRoZSBzdGFjaywgMSBpZiB0aGUgYXBwbGljYXRpb24gYW5kIGtleSBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLiBUaGUgdmFsdWUgaXMgemVybyAob2YgdHlwZSB1aW50NjQpIGlmIHRoZSBrZXkgZG9lcyBub3QgZXhpc3QuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMixcIk5hbWVcIjpcImFwcF9sb2NhbF9wdXRcIixcIkFyZ3NcIjpcIi5CLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwid3JpdGUgQyB0byBrZXkgQiBpbiBhY2NvdW50IEFcXCdzIGxvY2FsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIHN0YXRlIGtleSwgdmFsdWUuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwMyxcIk5hbWVcIjpcImFwcF9nbG9iYWxfcHV0XCIsXCJBcmdzXCI6XCJCLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwid3JpdGUgQiB0byBrZXkgQSBpbiB0aGUgZ2xvYmFsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEwNCxcIk5hbWVcIjpcImFwcF9sb2NhbF9kZWxcIixcIkFyZ3NcIjpcIi5CXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJkZWxldGUga2V5IEIgZnJvbSBhY2NvdW50IEFcXCdzIGxvY2FsIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIHN0YXRlIGtleS5cXFxcblxcXFxuRGVsZXRpbmcgYSBrZXkgd2hpY2ggaXMgYWxyZWFkeSBhYnNlbnQgaGFzIG5vIGVmZmVjdCBvbiB0aGUgYXBwbGljYXRpb24gbG9jYWwgc3RhdGUuIChJbiBwYXJ0aWN1bGFyLCBpdCBkb2VzIF9ub3RfIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMDUsXCJOYW1lXCI6XCJhcHBfZ2xvYmFsX2RlbFwiLFwiQXJnc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZGVsZXRlIGtleSBBIGZyb20gdGhlIGdsb2JhbCBzdGF0ZSBvZiB0aGUgY3VycmVudCBhcHBsaWNhdGlvblwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogc3RhdGUga2V5LlxcXFxuXFxcXG5EZWxldGluZyBhIGtleSB3aGljaCBpcyBhbHJlYWR5IGFic2VudCBoYXMgbm8gZWZmZWN0IG9uIHRoZSBhcHBsaWNhdGlvbiBnbG9iYWwgc3RhdGUuIChJbiBwYXJ0aWN1bGFyLCBpdCBkb2VzIF9ub3RfIGNhdXNlIHRoZSBwcm9ncmFtIHRvIGZhaWwuKVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMTIsXCJOYW1lXCI6XCJhc3NldF9ob2xkaW5nX2dldFwiLFwiQXJnc1wiOlwiLlVcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIkFzc2V0QmFsYW5jZVwiLFwiQXNzZXRGcm96ZW5cIl0sXCJBcmdFbnVtVHlwZXNcIjpcIlVVXCIsXCJEb2NcIjpcIlggaXMgZmllbGQgRiBmcm9tIGFjY291bnQgQVxcJ3MgaG9sZGluZyBvZiBhc3NldCBCLiBZIGlzIDEgaWYgQSBpcyBvcHRlZCBpbnRvIEIsIGVsc2UgMFwiLFwiRG9jRXh0cmFcIjpcInBhcmFtczogVHhuLkFjY291bnRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhZGRyZXNzKSwgYXNzZXQgaWQgKG9yLCBzaW5jZSB2NCwgYSBUeG4uRm9yZWlnbkFzc2V0cyBvZmZzZXQpLiBSZXR1cm46IGRpZF9leGlzdCBmbGFnICgxIGlmIHRoZSBhc3NldCBleGlzdGVkIGFuZCAwIG90aGVyd2lzZSksIHZhbHVlLlwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGFzc2V0IGhvbGRpbmcgZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjExMyxcIk5hbWVcIjpcImFzc2V0X3BhcmFtc19nZXRcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIkFzc2V0VG90YWxcIixcIkFzc2V0RGVjaW1hbHNcIixcIkFzc2V0RGVmYXVsdEZyb3plblwiLFwiQXNzZXRVbml0TmFtZVwiLFwiQXNzZXROYW1lXCIsXCJBc3NldFVSTFwiLFwiQXNzZXRNZXRhZGF0YUhhc2hcIixcIkFzc2V0TWFuYWdlclwiLFwiQXNzZXRSZXNlcnZlXCIsXCJBc3NldEZyZWV6ZVwiLFwiQXNzZXRDbGF3YmFja1wiLFwiQXNzZXRDcmVhdG9yXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJVVVVCQkJCQkJCQkJcIixcIkRvY1wiOlwiWCBpcyBmaWVsZCBGIGZyb20gYXNzZXQgQS4gWSBpcyAxIGlmIEEgZXhpc3RzLCBlbHNlIDBcIixcIkRvY0V4dHJhXCI6XCJwYXJhbXM6IFR4bi5Gb3JlaWduQXNzZXRzIG9mZnNldCAob3IsIHNpbmNlIHY0LCBhbiBfYXZhaWxhYmxlXyBhc3NldCBpZC4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAoMSBpZiB0aGUgYXNzZXQgZXhpc3RlZCBhbmQgMCBvdGhlcndpc2UpLCB2YWx1ZS5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhc3NldCBwYXJhbXMgZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjExNCxcIk5hbWVcIjpcImFwcF9wYXJhbXNfZ2V0XCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBBcHByb3ZhbFByb2dyYW1cIixcIkFwcENsZWFyU3RhdGVQcm9ncmFtXCIsXCJBcHBHbG9iYWxOdW1VaW50XCIsXCJBcHBHbG9iYWxOdW1CeXRlU2xpY2VcIixcIkFwcExvY2FsTnVtVWludFwiLFwiQXBwTG9jYWxOdW1CeXRlU2xpY2VcIixcIkFwcEV4dHJhUHJvZ3JhbVBhZ2VzXCIsXCJBcHBDcmVhdG9yXCIsXCJBcHBBZGRyZXNzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVVVVVQkJcIixcIkRvY1wiOlwiWCBpcyBmaWVsZCBGIGZyb20gYXBwIEEuIFkgaXMgMSBpZiBBIGV4aXN0cywgZWxzZSAwXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uRm9yZWlnbkFwcHMgb2Zmc2V0IG9yIGFuIF9hdmFpbGFibGVfIGFwcCBpZC4gUmV0dXJuOiBkaWRfZXhpc3QgZmxhZyAoMSBpZiB0aGUgYXBwbGljYXRpb24gZXhpc3RlZCBhbmQgMCBvdGhlcndpc2UpLCB2YWx1ZS5cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCBhcHAgcGFyYW1zIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMTUsXCJOYW1lXCI6XCJhY2N0X3BhcmFtc19nZXRcIixcIkFyZ3NcIjpcIi5cIixcIlJldHVybnNcIjpcIi5VXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJYIGlzIGZpZWxkIEYgZnJvbSBhY2NvdW50IEEuIFkgaXMgMSBpZiBBIG93bnMgcG9zaXRpdmUgYWxnb3MsIGVsc2UgMFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IGFjY291bnQgcGFyYW1zIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiU3RhdGUgQWNjZXNzXCJdfSx7XCJPcGNvZGVcIjoxMjAsXCJOYW1lXCI6XCJtaW5fYmFsYW5jZVwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZ2V0IG1pbmltdW0gcmVxdWlyZWQgYmFsYW5jZSBmb3IgYWNjb3VudCBBLCBpbiBtaWNyb2FsZ29zLiBSZXF1aXJlZCBiYWxhbmNlIGlzIGFmZmVjdGVkIGJ5IFtBU0FdKGh0dHBzOi8vZGV2ZWxvcGVyLmFsZ29yYW5kLm9yZy9kb2NzL2ZlYXR1cmVzL2FzYS8jYXNzZXRzLW92ZXJ2aWV3KSBhbmQgW0FwcF0oaHR0cHM6Ly9kZXZlbG9wZXIuYWxnb3JhbmQub3JnL2RvY3MvZmVhdHVyZXMvYXNjMS9zdGF0ZWZ1bC8jbWluaW11bS1iYWxhbmNlLXJlcXVpcmVtZW50LWZvci1hLXNtYXJ0LWNvbnRyYWN0KSB1c2FnZS4gV2hlbiBjcmVhdGluZyBvciBvcHRpbmcgaW50byBhbiBhcHAsIHRoZSBtaW5pbXVtIGJhbGFuY2UgZ3Jvd3MgYmVmb3JlIHRoZSBhcHAgY29kZSBydW5zLCB0aGVyZWZvcmUgdGhlIGluY3JlYXNlIGlzIHZpc2libGUgdGhlcmUuIFdoZW4gZGVsZXRpbmcgb3IgY2xvc2luZyBvdXQsIHRoZSBtaW5pbXVtIGJhbGFuY2UgZGVjcmVhc2VzIGFmdGVyIHRoZSBhcHAgZXhlY3V0ZXMuXCIsXCJEb2NFeHRyYVwiOlwicGFyYW1zOiBUeG4uQWNjb3VudHMgb2Zmc2V0IChvciwgc2luY2UgdjQsIGFuIF9hdmFpbGFibGVfIGFjY291bnQgYWRkcmVzcyksIF9hdmFpbGFibGVfIGFwcGxpY2F0aW9uIGlkIChvciwgc2luY2UgdjQsIGEgVHhuLkZvcmVpZ25BcHBzIG9mZnNldCkuIFJldHVybjogdmFsdWUuXCIsXCJHcm91cHNcIjpbXCJTdGF0ZSBBY2Nlc3NcIl19LHtcIk9wY29kZVwiOjEyOCxcIk5hbWVcIjpcInB1c2hieXRlc1wiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MCxcIkRvY1wiOlwiaW1tZWRpYXRlIEJZVEVTXCIsXCJEb2NFeHRyYVwiOlwicHVzaGJ5dGVzIGFyZ3MgYXJlIG5vdCBhZGRlZCB0byB0aGUgYnl0ZWNibG9jayBkdXJpbmcgYXNzZW1ibHkgcHJvY2Vzc2VzXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dmFydWludCBsZW5ndGh9IHtieXRlc31cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxMjksXCJOYW1lXCI6XCJwdXNoaW50XCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjowLFwiRG9jXCI6XCJpbW1lZGlhdGUgVUlOVFwiLFwiRG9jRXh0cmFcIjpcInB1c2hpbnQgYXJncyBhcmUgbm90IGFkZGVkIHRvIHRoZSBpbnRjYmxvY2sgZHVyaW5nIGFzc2VtYmx5IHByb2Nlc3Nlc1wiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3ZhcnVpbnQgaW50fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjEzNixcIk5hbWVcIjpcImNhbGxzdWJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJEb2NcIjpcImJyYW5jaCB1bmNvbmRpdGlvbmFsbHkgdG8gVEFSR0VULCBzYXZpbmcgdGhlIG5leHQgaW5zdHJ1Y3Rpb24gb24gdGhlIGNhbGwgc3RhY2tcIixcIkRvY0V4dHJhXCI6XCJUaGUgY2FsbCBzdGFjayBpcyBzZXBhcmF0ZSBmcm9tIHRoZSBkYXRhIHN0YWNrLiBPbmx5IGBjYWxsc3ViYCBhbmQgYHJldHN1YmAgbWFuaXB1bGF0ZSBpdC5cIixcIkltbWVkaWF0ZU5vdGVcIjpcIntpbnQxNiBicmFuY2ggb2Zmc2V0LCBiaWcgZW5kaWFufVwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjoxMzcsXCJOYW1lXCI6XCJyZXRzdWJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInBvcCB0aGUgdG9wIGluc3RydWN0aW9uIGZyb20gdGhlIGNhbGwgc3RhY2sgYW5kIGJyYW5jaCB0byBpdFwiLFwiRG9jRXh0cmFcIjpcIlRoZSBjYWxsIHN0YWNrIGlzIHNlcGFyYXRlIGZyb20gdGhlIGRhdGEgc3RhY2suIE9ubHkgYGNhbGxzdWJgIGFuZCBgcmV0c3ViYCBtYW5pcHVsYXRlIGl0LlwiLFwiR3JvdXBzXCI6W1wiRmxvdyBDb250cm9sXCJdfSx7XCJPcGNvZGVcIjoxNDQsXCJOYW1lXCI6XCJzaGxcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIDJeQiwgbW9kdWxvIDJeNjRcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NSxcIk5hbWVcIjpcInNoclwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgZGl2aWRlZCBieSAyXkJcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NixcIk5hbWVcIjpcInNxcnRcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjo0LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIlRoZSBsYXJnZXN0IGludGVnZXIgSSBzdWNoIHRoYXQgSV4yIDw9IEFcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0NyxcIk5hbWVcIjpcImJpdGxlblwiLFwiQXJnc1wiOlwiLlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiVGhlIGhpZ2hlc3Qgc2V0IGJpdCBpbiBBLiBJZiBBIGlzIGEgYnl0ZS1hcnJheSwgaXQgaXMgaW50ZXJwcmV0ZWQgYXMgYSBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXIuIGJpdGxlbiBvZiAwIGlzIDAsIGJpdGxlbiBvZiA4IGlzIDRcIixcIkRvY0V4dHJhXCI6XCJiaXRsZW4gaW50ZXJwcmV0cyBhcnJheXMgYXMgYmlnLWVuZGlhbiBpbnRlZ2VycywgdW5saWtlIHNldGJpdC9nZXRiaXRcIixcIkdyb3Vwc1wiOltcIkFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE0OCxcIk5hbWVcIjpcImV4cFwiLFwiQXJnc1wiOlwiVVVcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgcmFpc2VkIHRvIHRoZSBCdGggcG93ZXIuIEZhaWwgaWYgQSA9PSBCID09IDAgYW5kIG9uIG92ZXJmbG93XCIsXCJHcm91cHNcIjpbXCJBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNDksXCJOYW1lXCI6XCJleHB3XCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiVVVcIixcIkNvc3RcIjoxMCxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHJhaXNlZCB0byB0aGUgQnRoIHBvd2VyIGFzIGEgMTI4LWJpdCByZXN1bHQgaW4gdHdvIHVpbnQ2NHMuIFggaXMgdGhlIGhpZ2ggNjQgYml0cywgWSBpcyB0aGUgbG93LiBGYWlsIGlmIEEgPT0gQiA9PSAwIG9yIGlmIHRoZSByZXN1bHRzIGV4Y2VlZHMgMl4xMjgtMVwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTUwLFwiTmFtZVwiOlwiYnNxcnRcIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo0MCxcIlNpemVcIjoxLFwiRG9jXCI6XCJUaGUgbGFyZ2VzdCBpbnRlZ2VyIEkgc3VjaCB0aGF0IEleMiA8PSBBLiBBIGFuZCBJIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE1MSxcIk5hbWVcIjpcImRpdndcIixcIkFyZ3NcIjpcIlVVVVwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSxCIC8gQy4gRmFpbCBpZiBDID09IDAgb3IgaWYgcmVzdWx0IG92ZXJmbG93cy5cIixcIkRvY0V4dHJhXCI6XCJUaGUgbm90YXRpb24gQSxCIGluZGljYXRlcyB0aGF0IEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGEgdWludDEyOCB2YWx1ZSwgd2l0aCBBIGFzIHRoZSBoaWdoIHVpbnQ2NCBhbmQgQiB0aGUgbG93LlwiLFwiR3JvdXBzXCI6W1wiQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYwLFwiTmFtZVwiOlwiYitcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MTAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBwbHVzIEIuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYxLFwiTmFtZVwiOlwiYi1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MTAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtaW51cyBCLiBBIGFuZCBCIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzLiBGYWlsIG9uIHVuZGVyZmxvdy5cIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTYyLFwiTmFtZVwiOlwiYi9cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBkaXZpZGVkIGJ5IEIgKHRydW5jYXRlZCBkaXZpc2lvbikuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnMuIEZhaWwgaWYgQiBpcyB6ZXJvLlwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjMsXCJOYW1lXCI6XCJiKlwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoyMCxcIlNpemVcIjoxLFwiRG9jXCI6XCJBIHRpbWVzIEIuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnMuXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2NCxcIk5hbWVcIjpcImI8XCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiVVwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiMSBpZiBBIGlzIGxlc3MgdGhhbiBCLCBlbHNlIDAuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTY1LFwiTmFtZVwiOlwiYj5cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZ3JlYXRlciB0aGFuIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjYsXCJOYW1lXCI6XCJiPD1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjcsXCJOYW1lXCI6XCJiPj1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIEIsIGVsc2UgMC4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vyc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBBcml0aG1ldGljXCJdfSx7XCJPcGNvZGVcIjoxNjgsXCJOYW1lXCI6XCJiPT1cIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJVXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCIxIGlmIEEgaXMgZXF1YWwgdG8gQiwgZWxzZSAwLiBBIGFuZCBCIGFyZSBpbnRlcnByZXRlZCBhcyBiaWctZW5kaWFuIHVuc2lnbmVkIGludGVnZXJzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE2OSxcIk5hbWVcIjpcImIhPVwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIlVcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIjAgaWYgQSBpcyBlcXVhbCB0byBCLCBlbHNlIDEuIEEgYW5kIEIgYXJlIGludGVycHJldGVkIGFzIGJpZy1lbmRpYW4gdW5zaWduZWQgaW50ZWdlcnNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgQXJpdGhtZXRpY1wiXX0se1wiT3Bjb2RlXCI6MTcwLFwiTmFtZVwiOlwiYiVcIixcIkFyZ3NcIjpcIkJCXCIsXCJSZXR1cm5zXCI6XCJCXCIsXCJDb3N0XCI6MjAsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBtb2R1bG8gQi4gQSBhbmQgQiBhcmUgaW50ZXJwcmV0ZWQgYXMgYmlnLWVuZGlhbiB1bnNpZ25lZCBpbnRlZ2Vycy4gRmFpbCBpZiBCIGlzIHplcm8uXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IEFyaXRobWV0aWNcIl19LHtcIk9wY29kZVwiOjE3MSxcIk5hbWVcIjpcImJ8XCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjYsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLW9yIEIuIEEgYW5kIEIgYXJlIHplcm8tbGVmdCBleHRlbmRlZCB0byB0aGUgZ3JlYXRlciBvZiB0aGVpciBsZW5ndGhzXCIsXCJHcm91cHNcIjpbXCJCeXRlIEFycmF5IExvZ2ljXCJdfSx7XCJPcGNvZGVcIjoxNzIsXCJOYW1lXCI6XCJiJlwiLFwiQXJnc1wiOlwiQkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo2LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgYml0d2lzZS1hbmQgQi4gQSBhbmQgQiBhcmUgemVyby1sZWZ0IGV4dGVuZGVkIHRvIHRoZSBncmVhdGVyIG9mIHRoZWlyIGxlbmd0aHNcIixcIkdyb3Vwc1wiOltcIkJ5dGUgQXJyYXkgTG9naWNcIl19LHtcIk9wY29kZVwiOjE3MyxcIk5hbWVcIjpcImJeXCIsXCJBcmdzXCI6XCJCQlwiLFwiUmV0dXJuc1wiOlwiQlwiLFwiQ29zdFwiOjYsXCJTaXplXCI6MSxcIkRvY1wiOlwiQSBiaXR3aXNlLXhvciBCLiBBIGFuZCBCIGFyZSB6ZXJvLWxlZnQgZXh0ZW5kZWQgdG8gdGhlIGdyZWF0ZXIgb2YgdGhlaXIgbGVuZ3Roc1wiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBMb2dpY1wiXX0se1wiT3Bjb2RlXCI6MTc0LFwiTmFtZVwiOlwiYn5cIixcIkFyZ3NcIjpcIkJcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjo0LFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkEgd2l0aCBhbGwgYml0cyBpbnZlcnRlZFwiLFwiR3JvdXBzXCI6W1wiQnl0ZSBBcnJheSBMb2dpY1wiXX0se1wiT3Bjb2RlXCI6MTc1LFwiTmFtZVwiOlwiYnplcm9cIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcInplcm8gZmlsbGVkIGJ5dGUtYXJyYXkgb2YgbGVuZ3RoIEFcIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxNzYsXCJOYW1lXCI6XCJsb2dcIixcIkFyZ3NcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIndyaXRlIEEgdG8gbG9nIHN0YXRlIG9mIHRoZSBjdXJyZW50IGFwcGxpY2F0aW9uXCIsXCJEb2NFeHRyYVwiOlwiYGxvZ2AgZmFpbHMgaWYgY2FsbGVkIG1vcmUgdGhhbiBNYXhMb2dDYWxscyB0aW1lcyBpbiBhIHByb2dyYW0sIG9yIGlmIHRoZSBzdW0gb2YgbG9nZ2VkIGJ5dGVzIGV4Y2VlZHMgMTAyNCBieXRlcy5cIixcIkdyb3Vwc1wiOltcIlN0YXRlIEFjY2Vzc1wiXX0se1wiT3Bjb2RlXCI6MTc3LFwiTmFtZVwiOlwiaXR4bl9iZWdpblwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiYmVnaW4gcHJlcGFyYXRpb24gb2YgYSBuZXcgaW5uZXIgdHJhbnNhY3Rpb24gaW4gYSBuZXcgdHJhbnNhY3Rpb24gZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgaXR4bl9iZWdpbmAgaW5pdGlhbGl6ZXMgU2VuZGVyIHRvIHRoZSBhcHBsaWNhdGlvbiBhZGRyZXNzOyBGZWUgdG8gdGhlIG1pbmltdW0gYWxsb3dhYmxlLCB0YWtpbmcgaW50byBhY2NvdW50IE1pblR4bkZlZSBhbmQgY3JlZGl0IGZyb20gb3ZlcnBheWluZyBpbiBlYXJsaWVyIHRyYW5zYWN0aW9uczsgRmlyc3RWYWxpZC9MYXN0VmFsaWQgdG8gdGhlIHZhbHVlcyBpbiB0aGUgaW52b2tpbmcgdHJhbnNhY3Rpb24sIGFuZCBhbGwgb3RoZXIgZmllbGRzIHRvIHplcm8gb3IgZW1wdHkgdmFsdWVzLlwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxNzgsXCJOYW1lXCI6XCJpdHhuX2ZpZWxkXCIsXCJBcmdzXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiQXJnRW51bVwiOltcIlNlbmRlclwiLFwiRmVlXCIsXCJGaXJzdFZhbGlkXCIsXCJGaXJzdFZhbGlkVGltZVwiLFwiTGFzdFZhbGlkXCIsXCJOb3RlXCIsXCJMZWFzZVwiLFwiUmVjZWl2ZXJcIixcIkFtb3VudFwiLFwiQ2xvc2VSZW1haW5kZXJUb1wiLFwiVm90ZVBLXCIsXCJTZWxlY3Rpb25QS1wiLFwiVm90ZUZpcnN0XCIsXCJWb3RlTGFzdFwiLFwiVm90ZUtleURpbHV0aW9uXCIsXCJUeXBlXCIsXCJUeXBlRW51bVwiLFwiWGZlckFzc2V0XCIsXCJBc3NldEFtb3VudFwiLFwiQXNzZXRTZW5kZXJcIixcIkFzc2V0UmVjZWl2ZXJcIixcIkFzc2V0Q2xvc2VUb1wiLFwiR3JvdXBJbmRleFwiLFwiVHhJRFwiLFwiQXBwbGljYXRpb25JRFwiLFwiT25Db21wbGV0aW9uXCIsXCJBcHBsaWNhdGlvbkFyZ3NcIixcIk51bUFwcEFyZ3NcIixcIkFjY291bnRzXCIsXCJOdW1BY2NvdW50c1wiLFwiQXBwcm92YWxQcm9ncmFtXCIsXCJDbGVhclN0YXRlUHJvZ3JhbVwiLFwiUmVrZXlUb1wiLFwiQ29uZmlnQXNzZXRcIixcIkNvbmZpZ0Fzc2V0VG90YWxcIixcIkNvbmZpZ0Fzc2V0RGVjaW1hbHNcIixcIkNvbmZpZ0Fzc2V0RGVmYXVsdEZyb3plblwiLFwiQ29uZmlnQXNzZXRVbml0TmFtZVwiLFwiQ29uZmlnQXNzZXROYW1lXCIsXCJDb25maWdBc3NldFVSTFwiLFwiQ29uZmlnQXNzZXRNZXRhZGF0YUhhc2hcIixcIkNvbmZpZ0Fzc2V0TWFuYWdlclwiLFwiQ29uZmlnQXNzZXRSZXNlcnZlXCIsXCJDb25maWdBc3NldEZyZWV6ZVwiLFwiQ29uZmlnQXNzZXRDbGF3YmFja1wiLFwiRnJlZXplQXNzZXRcIixcIkZyZWV6ZUFzc2V0QWNjb3VudFwiLFwiRnJlZXplQXNzZXRGcm96ZW5cIixcIkFzc2V0c1wiLFwiTnVtQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIk51bUFwcGxpY2F0aW9uc1wiLFwiR2xvYmFsTnVtVWludFwiLFwiR2xvYmFsTnVtQnl0ZVNsaWNlXCIsXCJMb2NhbE51bVVpbnRcIixcIkxvY2FsTnVtQnl0ZVNsaWNlXCIsXCJFeHRyYVByb2dyYW1QYWdlc1wiLFwiTm9ucGFydGljaXBhdGlvblwiLFwiTG9nc1wiLFwiTnVtTG9nc1wiLFwiQ3JlYXRlZEFzc2V0SURcIixcIkNyZWF0ZWRBcHBsaWNhdGlvbklEXCIsXCJMYXN0TG9nXCIsXCJTdGF0ZVByb29mUEtcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJVVVVVQkJCVUJCQlVVVUJVVVVCQkJVQlVVQlVCVUJCQlVVVVVCQkJCQkJCQlVCVVVVVVVVVVVVVVVCVVVVQkJcIixcIkRvY1wiOlwic2V0IGZpZWxkIEYgb2YgdGhlIGN1cnJlbnQgaW5uZXIgdHJhbnNhY3Rpb24gdG8gQVwiLFwiRG9jRXh0cmFcIjpcImBpdHhuX2ZpZWxkYCBmYWlscyBpZiBBIGlzIG9mIHRoZSB3cm9uZyB0eXBlIGZvciBGLCBpbmNsdWRpbmcgYSBieXRlIGFycmF5IG9mIHRoZSB3cm9uZyBzaXplIGZvciB1c2UgYXMgYW4gYWRkcmVzcyB3aGVuIEYgaXMgYW4gYWRkcmVzcyBmaWVsZC4gYGl0eG5fZmllbGRgIGFsc28gZmFpbHMgaWYgQSBpcyBhbiBhY2NvdW50LCBhc3NldCwgb3IgYXBwIHRoYXQgaXMgbm90IF9hdmFpbGFibGVfLCBvciBhbiBhdHRlbXB0IGlzIG1hZGUgZXh0ZW5kIGFuIGFycmF5IGZpZWxkIGJleW9uZCB0aGUgbGltaXQgaW1wb3NlZCBieSBjb25zZW5zdXMgcGFyYW1ldGVycy4gKEFkZHJlc3NlcyBzZXQgaW50byBhc3NldCBwYXJhbXMgb2YgYWNmZyB0cmFuc2FjdGlvbnMgbmVlZCBub3QgYmUgX2F2YWlsYWJsZV8uKVwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxNzksXCJOYW1lXCI6XCJpdHhuX3N1Ym1pdFwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiZXhlY3V0ZSB0aGUgY3VycmVudCBpbm5lciB0cmFuc2FjdGlvbiBncm91cC4gRmFpbCBpZiBleGVjdXRpbmcgdGhpcyBncm91cCB3b3VsZCBleGNlZWQgdGhlIGlubmVyIHRyYW5zYWN0aW9uIGxpbWl0LCBvciBpZiBhbnkgdHJhbnNhY3Rpb24gaW4gdGhlIGdyb3VwIGZhaWxzLlwiLFwiRG9jRXh0cmFcIjpcImBpdHhuX3N1Ym1pdGAgcmVzZXRzIHRoZSBjdXJyZW50IHRyYW5zYWN0aW9uIHNvIHRoYXQgaXQgY2FuIG5vdCBiZSByZXN1Ym1pdHRlZC4gQSBuZXcgYGl0eG5fYmVnaW5gIGlzIHJlcXVpcmVkIHRvIHByZXBhcmUgYW5vdGhlciBpbm5lciB0cmFuc2FjdGlvbi5cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTgwLFwiTmFtZVwiOlwiaXR4blwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIGxhc3QgaW5uZXIgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTgxLFwiTmFtZVwiOlwiaXR4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjMsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBvZiB0aGUgbGFzdCBpbm5lciB0cmFuc2FjdGlvblwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fSB7dWludDggdHJhbnNhY3Rpb24gZmllbGQgYXJyYXkgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJJbm5lciBUcmFuc2FjdGlvbnNcIl19LHtcIk9wY29kZVwiOjE4MixcIk5hbWVcIjpcIml0eG5fbmV4dFwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MSxcIkRvY1wiOlwiYmVnaW4gcHJlcGFyYXRpb24gb2YgYSBuZXcgaW5uZXIgdHJhbnNhY3Rpb24gaW4gdGhlIHNhbWUgdHJhbnNhY3Rpb24gZ3JvdXBcIixcIkRvY0V4dHJhXCI6XCJgaXR4bl9uZXh0YCBpbml0aWFsaXplcyB0aGUgdHJhbnNhY3Rpb24gZXhhY3RseSBhcyBgaXR4bl9iZWdpbmAgZG9lc1wiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxODMsXCJOYW1lXCI6XCJnaXR4blwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkFyZ0VudW1cIjpbXCJTZW5kZXJcIixcIkZlZVwiLFwiRmlyc3RWYWxpZFwiLFwiRmlyc3RWYWxpZFRpbWVcIixcIkxhc3RWYWxpZFwiLFwiTm90ZVwiLFwiTGVhc2VcIixcIlJlY2VpdmVyXCIsXCJBbW91bnRcIixcIkNsb3NlUmVtYWluZGVyVG9cIixcIlZvdGVQS1wiLFwiU2VsZWN0aW9uUEtcIixcIlZvdGVGaXJzdFwiLFwiVm90ZUxhc3RcIixcIlZvdGVLZXlEaWx1dGlvblwiLFwiVHlwZVwiLFwiVHlwZUVudW1cIixcIlhmZXJBc3NldFwiLFwiQXNzZXRBbW91bnRcIixcIkFzc2V0U2VuZGVyXCIsXCJBc3NldFJlY2VpdmVyXCIsXCJBc3NldENsb3NlVG9cIixcIkdyb3VwSW5kZXhcIixcIlR4SURcIixcIkFwcGxpY2F0aW9uSURcIixcIk9uQ29tcGxldGlvblwiLFwiQXBwbGljYXRpb25BcmdzXCIsXCJOdW1BcHBBcmdzXCIsXCJBY2NvdW50c1wiLFwiTnVtQWNjb3VudHNcIixcIkFwcHJvdmFsUHJvZ3JhbVwiLFwiQ2xlYXJTdGF0ZVByb2dyYW1cIixcIlJla2V5VG9cIixcIkNvbmZpZ0Fzc2V0XCIsXCJDb25maWdBc3NldFRvdGFsXCIsXCJDb25maWdBc3NldERlY2ltYWxzXCIsXCJDb25maWdBc3NldERlZmF1bHRGcm96ZW5cIixcIkNvbmZpZ0Fzc2V0VW5pdE5hbWVcIixcIkNvbmZpZ0Fzc2V0TmFtZVwiLFwiQ29uZmlnQXNzZXRVUkxcIixcIkNvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoXCIsXCJDb25maWdBc3NldE1hbmFnZXJcIixcIkNvbmZpZ0Fzc2V0UmVzZXJ2ZVwiLFwiQ29uZmlnQXNzZXRGcmVlemVcIixcIkNvbmZpZ0Fzc2V0Q2xhd2JhY2tcIixcIkZyZWV6ZUFzc2V0XCIsXCJGcmVlemVBc3NldEFjY291bnRcIixcIkZyZWV6ZUFzc2V0RnJvemVuXCIsXCJBc3NldHNcIixcIk51bUFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJOdW1BcHBsaWNhdGlvbnNcIixcIkdsb2JhbE51bVVpbnRcIixcIkdsb2JhbE51bUJ5dGVTbGljZVwiLFwiTG9jYWxOdW1VaW50XCIsXCJMb2NhbE51bUJ5dGVTbGljZVwiLFwiRXh0cmFQcm9ncmFtUGFnZXNcIixcIk5vbnBhcnRpY2lwYXRpb25cIixcIkxvZ3NcIixcIk51bUxvZ3NcIixcIkNyZWF0ZWRBc3NldElEXCIsXCJDcmVhdGVkQXBwbGljYXRpb25JRFwiLFwiTGFzdExvZ1wiLFwiU3RhdGVQcm9vZlBLXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCVVVVVUJCQlVCQkJVVVVCVVVVQkJCVUJVVUJVQlVCQkJVVVVVQkJCQkJCQkJVQlVVVVVVVVVVVVVVQlVVVUJCXCIsXCJEb2NcIjpcImZpZWxkIEYgb2YgdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgbGFzdCBpbm5lciBncm91cCBzdWJtaXR0ZWRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxODQsXCJOYW1lXCI6XCJnaXR4bmFcIixcIlJldHVybnNcIjpcIi5cIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjQsXCJBcmdFbnVtXCI6W1wiQXBwbGljYXRpb25BcmdzXCIsXCJBY2NvdW50c1wiLFwiQXNzZXRzXCIsXCJBcHBsaWNhdGlvbnNcIixcIkxvZ3NcIl0sXCJBcmdFbnVtVHlwZXNcIjpcIkJCVVVCXCIsXCJEb2NcIjpcIkl0aCB2YWx1ZSBvZiB0aGUgYXJyYXkgZmllbGQgRiBmcm9tIHRoZSBUdGggdHJhbnNhY3Rpb24gaW4gdGhlIGxhc3QgaW5uZXIgZ3JvdXAgc3VibWl0dGVkXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGFycmF5IGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfSx7XCJPcGNvZGVcIjoxOTIsXCJOYW1lXCI6XCJ0eG5hc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiQXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIG9mIHRoZSBjdXJyZW50IHRyYW5zYWN0aW9uXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZmllbGQgaW5kZXh9XCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MTkzLFwiTmFtZVwiOlwiZ3R4bmFzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjozLFwiQXJnRW51bVwiOltcIkFwcGxpY2F0aW9uQXJnc1wiLFwiQWNjb3VudHNcIixcIkFzc2V0c1wiLFwiQXBwbGljYXRpb25zXCIsXCJMb2dzXCJdLFwiQXJnRW51bVR5cGVzXCI6XCJCQlVVQlwiLFwiRG9jXCI6XCJBdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgZnJvbSB0aGUgVHRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJJbW1lZGlhdGVOb3RlXCI6XCJ7dWludDggdHJhbnNhY3Rpb24gZ3JvdXAgaW5kZXh9IHt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIkxvYWRpbmcgVmFsdWVzXCJdfSx7XCJPcGNvZGVcIjoxOTQsXCJOYW1lXCI6XCJndHhuc2FzXCIsXCJBcmdzXCI6XCJVVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MixcIkFyZ0VudW1cIjpbXCJBcHBsaWNhdGlvbkFyZ3NcIixcIkFjY291bnRzXCIsXCJBc3NldHNcIixcIkFwcGxpY2F0aW9uc1wiLFwiTG9nc1wiXSxcIkFyZ0VudW1UeXBlc1wiOlwiQkJVVUJcIixcIkRvY1wiOlwiQnRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIEF0aCB0cmFuc2FjdGlvbiBpbiB0aGUgY3VycmVudCBncm91cFwiLFwiSW1tZWRpYXRlTm90ZVwiOlwie3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjE5NSxcIk5hbWVcIjpcImFyZ3NcIixcIkFyZ3NcIjpcIlVcIixcIlJldHVybnNcIjpcIkJcIixcIkNvc3RcIjoxLFwiU2l6ZVwiOjEsXCJEb2NcIjpcIkF0aCBMb2dpY1NpZyBhcmd1bWVudFwiLFwiR3JvdXBzXCI6W1wiTG9hZGluZyBWYWx1ZXNcIl19LHtcIk9wY29kZVwiOjE5NixcIk5hbWVcIjpcImdsb2Fkc3NcIixcIkFyZ3NcIjpcIlVVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoxLFwiRG9jXCI6XCJCdGggc2NyYXRjaCBzcGFjZSB2YWx1ZSBvZiB0aGUgQXRoIHRyYW5zYWN0aW9uIGluIHRoZSBjdXJyZW50IGdyb3VwXCIsXCJHcm91cHNcIjpbXCJMb2FkaW5nIFZhbHVlc1wiXX0se1wiT3Bjb2RlXCI6MTk3LFwiTmFtZVwiOlwiaXR4bmFzXCIsXCJBcmdzXCI6XCJVXCIsXCJSZXR1cm5zXCI6XCIuXCIsXCJDb3N0XCI6MSxcIlNpemVcIjoyLFwiRG9jXCI6XCJBdGggdmFsdWUgb2YgdGhlIGFycmF5IGZpZWxkIEYgb2YgdGhlIGxhc3QgaW5uZXIgdHJhbnNhY3Rpb25cIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleH1cIixcIkdyb3Vwc1wiOltcIklubmVyIFRyYW5zYWN0aW9uc1wiXX0se1wiT3Bjb2RlXCI6MTk4LFwiTmFtZVwiOlwiZ2l0eG5hc1wiLFwiQXJnc1wiOlwiVVwiLFwiUmV0dXJuc1wiOlwiLlwiLFwiQ29zdFwiOjEsXCJTaXplXCI6MyxcIkRvY1wiOlwiQXRoIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCBGIGZyb20gdGhlIFR0aCB0cmFuc2FjdGlvbiBpbiB0aGUgbGFzdCBpbm5lciBncm91cCBzdWJtaXR0ZWRcIixcIkltbWVkaWF0ZU5vdGVcIjpcInt1aW50OCB0cmFuc2FjdGlvbiBncm91cCBpbmRleH0ge3VpbnQ4IHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4fVwiLFwiR3JvdXBzXCI6W1wiSW5uZXIgVHJhbnNhY3Rpb25zXCJdfV19Jyk7bGV0IG87ZnVuY3Rpb24gcyhlKXtsZXQgdD0wLHI9MDtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7Y29uc3Qgbz1lW25dO2lmKG88MTI4KXJldHVybiBuPjl8fDk9PT1uJiZvPjE/WzAsLShuKzEpXTpbdHxvPDxyLG4rMV07dCs9KDEyNyZvKTw8cixyKz03fXJldHVyblswLDBdfWZ1bmN0aW9uIGkoZSx0KXtsZXQgcj0xO2NvbnN0IG49cyhlLnNsaWNlKHQrcikpLG89blswXTtsZXQgaT1uWzFdO2lmKGk8PTApdGhyb3cgbmV3IEVycm9yKGBjb3VsZCBub3QgZGVjb2RlIGludCBjb25zdCBibG9jayBzaXplIGF0IHBjPSR7dCtyfWApO2NvbnN0IGE9W107cis9aTtmb3IobGV0IG49MDtuPG87bisrKXtpZih0K3I+PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImludGNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtsZXQgbztpZihbbyxpXT1zKGUuc2xpY2UodCtyKSksaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgaW50IGNvbnN0WyR7bn1dIGJsb2NrIHNpemUgYXQgcGM9JHt0K3J9YCk7YS5wdXNoKG8pLHIrPWl9cmV0dXJuW3IsYV19ZnVuY3Rpb24gYShlLHQpe2xldCByPTE7Y29uc3Qgbj1zKGUuc2xpY2UodCtyKSksbz1uWzBdO2xldCBpPW5bMV07aWYoaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgW11ieXRlIGNvbnN0IGJsb2NrIHNpemUgYXQgcGM9JHt0K3J9YCk7Y29uc3QgYT1bXTtyKz1pO2ZvcihsZXQgbj0wO248bztuKyspe2lmKHQrcj49ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZWNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtsZXQgbztpZihbbyxpXT1zKGUuc2xpY2UodCtyKSksaTw9MCl0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWNvZGUgW11ieXRlXSBjb25zdFske259XSBibG9jayBzaXplIGF0IHBjPSR7dCtyfWApO2lmKHIrPWksdCtyK28+ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYnl0ZWNibG9jayByYW4gcGFzdCBlbmQgb2YgcHJvZ3JhbVwiKTtjb25zdCBjPWUuc2xpY2UodCtyLHQrcitvKTthLnB1c2goYykscis9b31yZXR1cm5bcixhXX1mdW5jdGlvbiBjKGUsdCl7bGV0IHI9MTtjb25zdFtuLG9dPXMoZS5zbGljZSh0K3IpKTtpZihvPD0wKXRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGRlY29kZSBwdXNoIGludCBjb25zdCBhdCBwYz0ke3Qrcn1gKTtyZXR1cm4gcis9byxbcixuXX1mdW5jdGlvbiB1KGUsdCl7bGV0IHI9MTtjb25zdFtuLG9dPXMoZS5zbGljZSh0K3IpKTtpZihvPD0wKXRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGRlY29kZSBwdXNoIFtdYnl0ZSBjb25zdCBzaXplIGF0IHBjPSR7dCtyfWApO2lmKHIrPW8sdCtyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwicHVzaGJ5dGVzIHJhbiBwYXN0IGVuZCBvZiBwcm9ncmFtXCIpO2NvbnN0IGk9ZS5zbGljZSh0K3IsdCtyK24pO3JldHVybiByKz1uLFtyLGldfWZ1bmN0aW9uIGwoZSx0KXtpZighZSl0aHJvdyBuZXcgRXJyb3IoXCJlbXB0eSBwcm9ncmFtXCIpO2lmKHZvaWQgMD09PXQmJih0PVtdKSwhQXJyYXkuaXNBcnJheSh0KSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGFyZ3VtZW50c1wiKTtjb25zdFtyLGxdPXMoZSk7aWYobDw9MCl0aHJvdyBuZXcgRXJyb3IoXCJ2ZXJzaW9uIHBhcnNpbmcgZXJyb3JcIik7aWYocj5uLnpfKXRocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkIHZlcnNpb25cIik7bGV0IGg9MCx7bGVuZ3RoOnB9PWU7Zm9yKGNvbnN0IGUgb2YgdClwKz1lLmxlbmd0aDtpZihwPjFlMyl0aHJvdyBuZXcgRXJyb3IoXCJwcm9ncmFtIHRvbyBsb25nXCIpO2lmKCFvKXtvPXt9O2Zvcihjb25zdCBlIG9mIG4uQVApb1tlLk9wY29kZV09ZX1sZXQgZj1sLGQ9W10sZz1bXTtmb3IoO2Y8ZS5sZW5ndGg7KXtjb25zdCB0PW9bZVtmXV07aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGluc3RydWN0aW9uXCIpO2grPXQuQ29zdDtsZXQgcj10LlNpemU7aWYoMD09PXIpc3dpdGNoKHQuT3Bjb2RlKXtjYXNlIDMyOntsZXQgdDtbcix0XT1pKGUsZiksZD1kLmNvbmNhdCh0KTticmVha31jYXNlIDM4OntsZXQgdDtbcix0XT1hKGUsZiksZz1nLmNvbmNhdCh0KTticmVha31jYXNlIDEyOTp7bGV0IHQ7W3IsdF09YyhlLGYpLGQucHVzaCh0KTticmVha31jYXNlIDEyODp7bGV0IHQ7W3IsdF09dShlLGYpLGcucHVzaCh0KTticmVha31kZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgaW5zdHJ1Y3Rpb25cIil9Zis9cn1pZihyPDQmJmg+MmU0KXRocm93IG5ldyBFcnJvcihcInByb2dyYW0gdG9vIGNvc3RseSBmb3IgVGVhbCB2ZXJzaW9uIDwgNC4gY29uc2lkZXIgdXNpbmcgdjQuXCIpO3JldHVybltkLGcsITBdfWZ1bmN0aW9uIGgoZSx0KXtjb25zdFssLHJdPWwoZSx0KTtyZXR1cm4gcn1mdW5jdGlvbiBwKGUsdCl7Y29uc3Rbcl09aShlLHQpO3JldHVybiByfWZ1bmN0aW9uIGYoZSx0KXtjb25zdFtyXT1hKGUsdCk7cmV0dXJuIHJ9ZnVuY3Rpb24gZChlLHQpe2NvbnN0W3JdPWMoZSx0KTtyZXR1cm4gcn1mdW5jdGlvbiBnKGUsdCl7Y29uc3Rbcl09dShlLHQpO3JldHVybiByfWNvbnN0IHk9bi56XyxtPW4uQlZ9LDg4MDA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3Iucih0KSxyLmQodCx7TG9naWNTaWc6KCk9PmgsTG9naWNTaWdBY2NvdW50OigpPT5wLG1ha2VMb2dpY1NpZzooKT0+ZixzaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdDooKT0+ZCxzaWduTG9naWNTaWdUcmFuc2FjdGlvbjooKT0+Zyxsb2dpY1NpZ0Zyb21CeXRlOigpPT55LHRlYWxTaWduOigpPT5iLHRlYWxTaWduRnJvbVByb2dyYW06KCk9PkF9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KSxzPXIoMzAzMyksaT1yKDU1ODMpLGE9cig0MTU4KSxjPXIoNDEzKSx1PXIoOTQxNyksbD1yKDI0ODYpLkJ1ZmZlcjtjbGFzcyBoe2NvbnN0cnVjdG9yKGUsdCl7aWYodGhpcy50YWc9bC5mcm9tKFwiUHJvZ3JhbVwiKSx0JiYoIUFycmF5LmlzQXJyYXkodCl8fCF0LmV2ZXJ5KChlPT5lLmNvbnN0cnVjdG9yPT09VWludDhBcnJheXx8bC5pc0J1ZmZlcihlKSkpKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhcmd1bWVudHNcIik7bGV0IHI7aWYobnVsbCE9dCYmKHI9dC5tYXAoKGU9Pm5ldyBVaW50OEFycmF5KGUpKSkpLCFpLmNoZWNrUHJvZ3JhbShlLHIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHJvZ3JhbVwiKTt0aGlzLmxvZ2ljPWUsdGhpcy5hcmdzPXIsdGhpcy5zaWc9dm9pZCAwLHRoaXMubXNpZz12b2lkIDB9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtjb25zdCBlPXtsOnRoaXMubG9naWN9O3JldHVybiB0aGlzLmFyZ3MmJihlLmFyZz10aGlzLmFyZ3MpLHRoaXMuc2lnP2Uuc2lnPXRoaXMuc2lnOnRoaXMubXNpZyYmKGUubXNpZz10aGlzLm1zaWcpLGV9c3RhdGljIGZyb21fb2JqX2Zvcl9lbmNvZGluZyhlKXtjb25zdCB0PW5ldyBoKGUubCxlLmFyZyk7cmV0dXJuIHQuc2lnPWUuc2lnLHQubXNpZz1lLm1zaWcsdH12ZXJpZnkoZSl7aWYodGhpcy5zaWcmJnRoaXMubXNpZylyZXR1cm4hMTt0cnl7aS5jaGVja1Byb2dyYW0odGhpcy5sb2dpYyx0aGlzLmFyZ3MpfWNhdGNoKGUpe3JldHVybiExfWNvbnN0IHQ9Yy5jb25jYXRBcnJheXModGhpcy50YWcsdGhpcy5sb2dpYyk7aWYoIXRoaXMuc2lnJiYhdGhpcy5tc2lnKXtjb25zdCByPW4uZ2VuZXJpY0hhc2godCk7cmV0dXJuIGMuYXJyYXlFcXVhbChyLGUpfXJldHVybiB0aGlzLnNpZz9uLnZlcmlmeSh0LHRoaXMuc2lnLGUpOigwLGEuRjIpKHQsdGhpcy5tc2lnLGUpfWFkZHJlc3MoKXtjb25zdCBlPWMuY29uY2F0QXJyYXlzKHRoaXMudGFnLHRoaXMubG9naWMpLHQ9bi5nZW5lcmljSGFzaChlKTtyZXR1cm4gby5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KHQpKX1zaWduKGUsdCl7aWYobnVsbD09dCl0aGlzLnNpZz10aGlzLnNpZ25Qcm9ncmFtKGUpO2Vsc2V7Y29uc3Qgcj10LmFkZHJzLm1hcCgoZT0+KHtwazpvLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5fSkpKTt0aGlzLm1zaWc9e3Y6dC52ZXJzaW9uLHRocjp0LnRocmVzaG9sZCxzdWJzaWc6cn07Y29uc3RbbixzXT10aGlzLnNpbmdsZVNpZ25NdWx0aXNpZyhlLHRoaXMubXNpZyk7dGhpcy5tc2lnLnN1YnNpZ1tzXS5zPW59fWFwcGVuZFRvTXVsdGlzaWcoZSl7aWYodm9pZCAwPT09dGhpcy5tc2lnKXRocm93IG5ldyBFcnJvcihcIm5vIG11bHRpc2lnIHByZXNlbnRcIik7Y29uc3RbdCxyXT10aGlzLnNpbmdsZVNpZ25NdWx0aXNpZyhlLHRoaXMubXNpZyk7dGhpcy5tc2lnLnN1YnNpZ1tyXS5zPXR9c2lnblByb2dyYW0oZSl7Y29uc3QgdD1jLmNvbmNhdEFycmF5cyh0aGlzLnRhZyx0aGlzLmxvZ2ljKTtyZXR1cm4gbi5zaWduKHQsZSl9c2luZ2xlU2lnbk11bHRpc2lnKGUsdCl7bGV0IHI9LTE7Y29uc3Qgbz1uLmtleVBhaXJGcm9tU2VjcmV0S2V5KGUpLnB1YmxpY0tleTtmb3IobGV0IGU9MDtlPHQuc3Vic2lnLmxlbmd0aDtlKyspe2NvbnN0e3BrOm59PXQuc3Vic2lnW2VdO2lmKGMuYXJyYXlFcXVhbChuLG8pKXtyPWU7YnJlYWt9fWlmKC0xPT09cil0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHNlY3JldCBrZXlcIik7cmV0dXJuW3RoaXMuc2lnblByb2dyYW0oZSkscl19dG9CeXRlKCl7cmV0dXJuIHMuZW5jb2RlKHRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKSl9c3RhdGljIGZyb21CeXRlKGUpe2NvbnN0IHQ9cy5kZWNvZGUoZSk7cmV0dXJuIGguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQpfX1jbGFzcyBwe2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5sc2lnPW5ldyBoKGUsdCksdGhpcy5zaWdrZXk9dm9pZCAwfWdldF9vYmpfZm9yX2VuY29kaW5nKCl7Y29uc3QgZT17bHNpZzp0aGlzLmxzaWcuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX07cmV0dXJuIHRoaXMuc2lna2V5JiYoZS5zaWdrZXk9dGhpcy5zaWdrZXkpLGV9c3RhdGljIGZyb21fb2JqX2Zvcl9lbmNvZGluZyhlKXtjb25zdCB0PW5ldyBwKGUubHNpZy5sLGUubHNpZy5hcmcpO3JldHVybiB0LmxzaWc9aC5mcm9tX29ial9mb3JfZW5jb2RpbmcoZS5sc2lnKSx0LnNpZ2tleT1lLnNpZ2tleSx0fXRvQnl0ZSgpe3JldHVybiBzLmVuY29kZSh0aGlzLmdldF9vYmpfZm9yX2VuY29kaW5nKCkpfXN0YXRpYyBmcm9tQnl0ZShlKXtjb25zdCB0PXMuZGVjb2RlKGUpO3JldHVybiBwLmZyb21fb2JqX2Zvcl9lbmNvZGluZyh0KX1pc0RlbGVnYXRlZCgpe3JldHVybiEoIXRoaXMubHNpZy5zaWcmJiF0aGlzLmxzaWcubXNpZyl9dmVyaWZ5KCl7Y29uc3QgZT10aGlzLmFkZHJlc3MoKTtyZXR1cm4gdGhpcy5sc2lnLnZlcmlmeShvLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5KX1hZGRyZXNzKCl7aWYodGhpcy5sc2lnLnNpZyYmdGhpcy5sc2lnLm1zaWcpdGhyb3cgbmV3IEVycm9yKFwiTG9naWNTaWcgaGFzIHRvbyBtYW55IHNpZ25hdHVyZXMuIEF0IG1vc3Qgb25lIG9mIHNpZyBvciBtc2lnIG1heSBiZSBwcmVzZW50XCIpO2lmKHRoaXMubHNpZy5zaWcpe2lmKCF0aGlzLnNpZ2tleSl0aHJvdyBuZXcgRXJyb3IoXCJTaWduaW5nIGtleSBmb3IgZGVsZWdhdGVkIGFjY291bnQgaXMgbWlzc2luZ1wiKTtyZXR1cm4gby5lbmNvZGVBZGRyZXNzKHRoaXMuc2lna2V5KX1pZih0aGlzLmxzaWcubXNpZyl7Y29uc3QgZT17dmVyc2lvbjp0aGlzLmxzaWcubXNpZy52LHRocmVzaG9sZDp0aGlzLmxzaWcubXNpZy50aHIscGtzOnRoaXMubHNpZy5tc2lnLnN1YnNpZy5tYXAoKGU9PmUucGspKX07cmV0dXJuIG8uZW5jb2RlQWRkcmVzcyhvLmZyb21NdWx0aXNpZ1ByZUltZyhlKSl9cmV0dXJuIHRoaXMubHNpZy5hZGRyZXNzKCl9c2lnbk11bHRpc2lnKGUsdCl7dGhpcy5sc2lnLnNpZ24odCxlKX1hcHBlbmRUb011bHRpc2lnKGUpe3RoaXMubHNpZy5hcHBlbmRUb011bHRpc2lnKGUpfXNpZ24oZSl7dGhpcy5sc2lnLnNpZ24oZSksdGhpcy5zaWdrZXk9bi5rZXlQYWlyRnJvbVNlY3JldEtleShlKS5wdWJsaWNLZXl9fWZ1bmN0aW9uIGYoZSx0KXtyZXR1cm4gbmV3IGgoZSx0KX1mdW5jdGlvbiBkKGUsdCl7bGV0IHIsaTtpZih0IGluc3RhbmNlb2YgcClyPXQubHNpZyxpPW8uZGVjb2RlQWRkcmVzcyh0LmFkZHJlc3MoKSkucHVibGljS2V5O2Vsc2UgaWYocj10LHIuc2lnKWk9ZS5mcm9tLnB1YmxpY0tleTtlbHNlIGlmKHIubXNpZyl7Y29uc3QgZT17dmVyc2lvbjpyLm1zaWcudix0aHJlc2hvbGQ6ci5tc2lnLnRocixwa3M6ci5tc2lnLnN1YnNpZy5tYXAoKGU9PmUucGspKX07aT1vLmZyb21NdWx0aXNpZ1ByZUltZyhlKX1lbHNlIGk9by5kZWNvZGVBZGRyZXNzKHIuYWRkcmVzcygpKS5wdWJsaWNLZXk7cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXtpZighdC52ZXJpZnkocikpdGhyb3cgbmV3IEVycm9yKFwiTG9naWMgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBmYWlsZWQuIEVuc3VyZSB0aGUgcHJvZ3JhbSBhbmQgc2lnbmF0dXJlIGFyZSB2YWxpZC5cIik7Y29uc3Qgbz17bHNpZzp0LmdldF9vYmpfZm9yX2VuY29kaW5nKCksdHhuOmUuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX07cmV0dXJuIG4uYnl0ZXNFcXVhbChyLGUuZnJvbS5wdWJsaWNLZXkpfHwoby5zZ25yPWwuZnJvbShyKSkse3R4SUQ6ZS50eElEKCkudG9TdHJpbmcoKSxibG9iOnMuZW5jb2RlKG8pfX0oZSxyLGkpfWZ1bmN0aW9uIGcoZSx0KXtyZXR1cm4gZCh1Lmluc3RhbnRpYXRlVHhuSWZOZWVkZWQoZSksdCl9ZnVuY3Rpb24geShlKXtyZXR1cm4gaC5mcm9tQnl0ZShlKX1jb25zdCBtPWwuZnJvbShcIlByb2dEYXRhXCIpO2Z1bmN0aW9uIGIoZSx0LHIpe2NvbnN0IHM9Yy5jb25jYXRBcnJheXMoby5kZWNvZGVBZGRyZXNzKHIpLnB1YmxpY0tleSx0KSxpPWwuZnJvbShjLmNvbmNhdEFycmF5cyhtLHMpKTtyZXR1cm4gbi5zaWduKGksZSl9ZnVuY3Rpb24gQShlLHQscil7cmV0dXJuIGIoZSx0LG5ldyBoKHIpLmFkZHJlc3MoKSl9fSw2NjA4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLnIodCksci5kKHQse01VTFRJU0lHX0JBRF9TRU5ERVJfRVJST1JfTVNHOigpPT5OLHNpZ25UcmFuc2FjdGlvbjooKT0+UCxzaWduQmlkOigpPT5MLHNpZ25CeXRlczooKT0+Rix2ZXJpZnlCeXRlczooKT0+eixlbmNvZGVPYmo6KCk9PmosZGVjb2RlT2JqOigpPT5NLEVSUk9SX01VTFRJU0lHX0JBRF9TRU5ERVI6KCk9PkgsRVJST1JfSU5WQUxJRF9NSUNST0FMR09TOigpPT5HLEFsZ29kdjI6KCk9PmQuWixLbWQ6KCk9PmcuWixJbnREZWNvZGluZzooKT0+eS5aLEluZGV4ZXI6KCk9Pm0uWix3YWl0Rm9yQ29uZmlybWF0aW9uOigpPT5iLkssaXNWYWxpZEFkZHJlc3M6KCk9Pm8uaXNWYWxpZEFkZHJlc3MsZW5jb2RlQWRkcmVzczooKT0+by5lbmNvZGVBZGRyZXNzLGRlY29kZUFkZHJlc3M6KCk9Pm8uZGVjb2RlQWRkcmVzcyxnZXRBcHBsaWNhdGlvbkFkZHJlc3M6KCk9Pm8uZ2V0QXBwbGljYXRpb25BZGRyZXNzLGJ5dGVzVG9CaWdJbnQ6KCk9PkEudixiaWdJbnRUb0J5dGVzOigpPT5BLmosZW5jb2RlVWludDY0OigpPT53LlQsZGVjb2RlVWludDY0OigpPT53LnUsZ2VuZXJhdGVBY2NvdW50OigpPT52LlosbW9kZWxzdjI6KCk9PlMsbW5lbW9uaWNUb01hc3RlckRlcml2YXRpb25LZXk6KCk9PnguT0YsbWFzdGVyRGVyaXZhdGlvbktleVRvTW5lbW9uaWM6KCk9PngudkMsc2VjcmV0S2V5VG9NbmVtb25pYzooKT0+eC5RWCxtbmVtb25pY1RvU2VjcmV0S2V5OigpPT54LkNoLHNlZWRGcm9tTW5lbW9uaWM6KCk9PngubUUsbW5lbW9uaWNGcm9tU2VlZDooKT0+eC53MyxtaWNyb2FsZ29zVG9BbGdvczooKT0+bC5fLGFsZ29zVG9NaWNyb2FsZ29zOigpPT5sLkhOLElOVkFMSURfTUlDUk9BTEdPU19FUlJPUl9NU0c6KCk9PmwuckQsY29tcHV0ZUdyb3VwSUQ6KCk9PkUuY29tcHV0ZUdyb3VwSUQsYXNzaWduR3JvdXBJRDooKT0+RS5hc3NpZ25Hcm91cElELExvZ2ljU2lnQWNjb3VudDooKT0+VC5Mb2dpY1NpZ0FjY291bnQsbWFrZUxvZ2ljU2lnOigpPT5ULm1ha2VMb2dpY1NpZyxzaWduTG9naWNTaWdUcmFuc2FjdGlvbjooKT0+VC5zaWduTG9naWNTaWdUcmFuc2FjdGlvbixzaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdDooKT0+VC5zaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdCxsb2dpY1NpZ0Zyb21CeXRlOigpPT5ULmxvZ2ljU2lnRnJvbUJ5dGUsdGVhbFNpZ246KCk9PlQudGVhbFNpZ24sdGVhbFNpZ25Gcm9tUHJvZ3JhbTooKT0+VC50ZWFsU2lnbkZyb21Qcm9ncmFtLHNpZ25NdWx0aXNpZ1RyYW5zYWN0aW9uOigpPT5fLlBVLG1lcmdlTXVsdGlzaWdUcmFuc2FjdGlvbnM6KCk9Pl8uSjYsYXBwZW5kU2lnbk11bHRpc2lnVHJhbnNhY3Rpb246KCk9Pl8uUE8sbXVsdGlzaWdBZGRyZXNzOigpPT5fLnZILExvZ2ljVGVtcGxhdGVzOigpPT5LLERyeXJ1blJlc3VsdDooKT0+Qi54LGNyZWF0ZURyeXJ1bjooKT0+Qi5QLE9uQXBwbGljYXRpb25Db21wbGV0ZTooKT0+VS5PbkFwcGxpY2F0aW9uQ29tcGxldGUsbWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3Q6KCk9PlUubWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uQ2xlYXJTdGF0ZVR4bjooKT0+VS5tYWtlQXBwbGljYXRpb25DbGVhclN0YXRlVHhuLG1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG5Gcm9tT2JqZWN0LG1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuLG1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuRnJvbU9iamVjdDooKT0+VS5tYWtlQXBwbGljYXRpb25DbG9zZU91dFR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uQ3JlYXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4bixtYWtlQXBwbGljYXRpb25DcmVhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uRGVsZXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbkRlbGV0ZVR4bixtYWtlQXBwbGljYXRpb25EZWxldGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbkRlbGV0ZVR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uTm9PcFR4bjooKT0+VS5tYWtlQXBwbGljYXRpb25Ob09wVHhuLG1ha2VBcHBsaWNhdGlvbk5vT3BUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvbk5vT3BUeG5Gcm9tT2JqZWN0LG1ha2VBcHBsaWNhdGlvbk9wdEluVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvbk9wdEluVHhuLG1ha2VBcHBsaWNhdGlvbk9wdEluVHhuRnJvbU9iamVjdDooKT0+VS5tYWtlQXBwbGljYXRpb25PcHRJblR4bkZyb21PYmplY3QsbWFrZUFwcGxpY2F0aW9uVXBkYXRlVHhuOigpPT5VLm1ha2VBcHBsaWNhdGlvblVwZGF0ZVR4bixtYWtlQXBwbGljYXRpb25VcGRhdGVUeG5Gcm9tT2JqZWN0OigpPT5VLm1ha2VBcHBsaWNhdGlvblVwZGF0ZVR4bkZyb21PYmplY3QsbWFrZUFzc2V0Q29uZmlnVHhuOigpPT5VLm1ha2VBc3NldENvbmZpZ1R4bixtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldENvbmZpZ1R4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0Q3JlYXRlVHhuOigpPT5VLm1ha2VBc3NldENyZWF0ZVR4bixtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldENyZWF0ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0Q3JlYXRlVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0Q3JlYXRlVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0RGVzdHJveVR4bjooKT0+VS5tYWtlQXNzZXREZXN0cm95VHhuLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+VS5tYWtlQXNzZXREZXN0cm95VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0RnJlZXplVHhuOigpPT5VLm1ha2VBc3NldEZyZWV6ZVR4bixtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldEZyZWV6ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXMsbWFrZUFzc2V0RnJlZXplVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3Q6KCk9PlUubWFrZUFzc2V0RnJlZXplVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUFzc2V0VHJhbnNmZXJUeG46KCk9PlUubWFrZUFzc2V0VHJhbnNmZXJUeG4sbWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VBc3NldFRyYW5zZmVyVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyxtYWtlQXNzZXRUcmFuc2ZlclR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0OigpPT5VLm1ha2VBc3NldFRyYW5zZmVyVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZUtleVJlZ2lzdHJhdGlvblR4bjooKT0+VS5tYWtlS2V5UmVnaXN0cmF0aW9uVHhuLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+VS5tYWtlS2V5UmVnaXN0cmF0aW9uVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsbWFrZVBheW1lbnRUeG46KCk9PlUubWFrZVBheW1lbnRUeG4sbWFrZVBheW1lbnRUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5VLm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyxtYWtlUGF5bWVudFR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0OigpPT5VLm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsQUxHT1JBTkRfTUlOX1RYX0ZFRTooKT0+aS5BTEdPUkFORF9NSU5fVFhfRkVFLFRyYW5zYWN0aW9uOigpPT5pLlRyYW5zYWN0aW9uLGRlY29kZVNpZ25lZFRyYW5zYWN0aW9uOigpPT5pLmRlY29kZVNpZ25lZFRyYW5zYWN0aW9uLGRlY29kZVVuc2lnbmVkVHJhbnNhY3Rpb246KCk9PmkuZGVjb2RlVW5zaWduZWRUcmFuc2FjdGlvbixlbmNvZGVVbnNpZ25lZFRyYW5zYWN0aW9uOigpPT5pLmVuY29kZVVuc2lnbmVkVHJhbnNhY3Rpb24saW5zdGFudGlhdGVUeG5JZk5lZWRlZDooKT0+aS5pbnN0YW50aWF0ZVR4bklmTmVlZGVkLGlzVHJhbnNhY3Rpb25XaXRoU2lnbmVyOigpPT5rLlh3LG1ha2VCYXNpY0FjY291bnRUcmFuc2FjdGlvblNpZ25lcjooKT0+ay54NyxtYWtlTG9naWNTaWdBY2NvdW50VHJhbnNhY3Rpb25TaWduZXI6KCk9PmsuaTEsbWFrZU11bHRpU2lnQWNjb3VudFRyYW5zYWN0aW9uU2lnbmVyOigpPT5rLlZqLEF0b21pY1RyYW5zYWN0aW9uQ29tcG9zZXI6KCk9PkkuQSxBdG9taWNUcmFuc2FjdGlvbkNvbXBvc2VyU3RhdHVzOigpPT5JLmIsVHJhbnNhY3Rpb25UeXBlOigpPT5DLmksQUJJQWRkcmVzc1R5cGU6KCk9PlIuSlEsQUJJQXJyYXlEeW5hbWljVHlwZTooKT0+Ui5fNCxBQklBcnJheVN0YXRpY1R5cGU6KCk9PlIuWDMsQUJJQm9vbFR5cGU6KCk9PlIuUjAsQUJJQnl0ZVR5cGU6KCk9PlIuakQsQUJJQ29udHJhY3Q6KCk9PlIuWWgsQUJJSW50ZXJmYWNlOigpPT5SLmJMLEFCSU1ldGhvZDooKT0+Ui5McyxBQklSZWZlcmVuY2VUeXBlOigpPT5SLlVWLEFCSVN0cmluZ1R5cGU6KCk9PlIuQXgsQUJJVHJhbnNhY3Rpb25UeXBlOigpPT5SLkE5LEFCSVR1cGxlVHlwZTooKT0+Ui53MSxBQklUeXBlOigpPT5SLk5LLEFCSVVmaXhlZFR5cGU6KCk9PlIuUlksQUJJVWludFR5cGU6KCk9PlIuUHUsQUREUl9CWVRFX1NJWkU6KCk9PlIuVmssTEVOR1RIX0VOQ09ERV9CWVRFX1NJWkU6KCk9PlIubmgsTUFYX0xFTjooKT0+Ui5rRyxTSU5HTEVfQk9PTF9TSVpFOigpPT5SLnFILFNJTkdMRV9CWVRFX1NJWkU6KCk9PlIuSkgsYWJpQ2hlY2tUcmFuc2FjdGlvblR5cGU6KCk9PlIudkosYWJpVHlwZUlzUmVmZXJlbmNlOigpPT5SLm81LGFiaVR5cGVJc1RyYW5zYWN0aW9uOigpPT5SLkFFLGdldE1ldGhvZEJ5TmFtZTooKT0+Ui5JNX0pO3ZhciBuPXIoOTQwNCksbz1yKDcxMTYpLHM9cigzMDMzKSxpPXIoOTQxNyksYT1yKDg4ODYpLGM9ci5uKGEpLHU9cigyNjkxKSxsPXIoOTA3MCksaD1yKDQxMykscD1yKDU5MjIpLGY9e307Zm9yKGNvbnN0IGUgaW4gcClbXCJkZWZhdWx0XCIsXCJNVUxUSVNJR19CQURfU0VOREVSX0VSUk9SX01TR1wiLFwic2lnblRyYW5zYWN0aW9uXCIsXCJzaWduQmlkXCIsXCJzaWduQnl0ZXNcIixcInZlcmlmeUJ5dGVzXCIsXCJlbmNvZGVPYmpcIixcImRlY29kZU9ialwiLFwiRVJST1JfTVVMVElTSUdfQkFEX1NFTkRFUlwiLFwiRVJST1JfSU5WQUxJRF9NSUNST0FMR09TXCIsXCJBbGdvZHYyXCIsXCJLbWRcIixcIkludERlY29kaW5nXCIsXCJJbmRleGVyXCIsXCJ3YWl0Rm9yQ29uZmlybWF0aW9uXCIsXCJpc1ZhbGlkQWRkcmVzc1wiLFwiZW5jb2RlQWRkcmVzc1wiLFwiZGVjb2RlQWRkcmVzc1wiLFwiZ2V0QXBwbGljYXRpb25BZGRyZXNzXCIsXCJieXRlc1RvQmlnSW50XCIsXCJiaWdJbnRUb0J5dGVzXCIsXCJlbmNvZGVVaW50NjRcIixcImRlY29kZVVpbnQ2NFwiLFwiZ2VuZXJhdGVBY2NvdW50XCIsXCJtb2RlbHN2MlwiLFwibW5lbW9uaWNUb01hc3RlckRlcml2YXRpb25LZXlcIixcIm1hc3RlckRlcml2YXRpb25LZXlUb01uZW1vbmljXCIsXCJzZWNyZXRLZXlUb01uZW1vbmljXCIsXCJtbmVtb25pY1RvU2VjcmV0S2V5XCIsXCJzZWVkRnJvbU1uZW1vbmljXCIsXCJtbmVtb25pY0Zyb21TZWVkXCIsXCJtaWNyb2FsZ29zVG9BbGdvc1wiLFwiYWxnb3NUb01pY3JvYWxnb3NcIixcIklOVkFMSURfTUlDUk9BTEdPU19FUlJPUl9NU0dcIixcImNvbXB1dGVHcm91cElEXCIsXCJhc3NpZ25Hcm91cElEXCIsXCJMb2dpY1NpZ0FjY291bnRcIixcIm1ha2VMb2dpY1NpZ1wiLFwic2lnbkxvZ2ljU2lnVHJhbnNhY3Rpb25cIixcInNpZ25Mb2dpY1NpZ1RyYW5zYWN0aW9uT2JqZWN0XCIsXCJsb2dpY1NpZ0Zyb21CeXRlXCIsXCJ0ZWFsU2lnblwiLFwidGVhbFNpZ25Gcm9tUHJvZ3JhbVwiLFwic2lnbk11bHRpc2lnVHJhbnNhY3Rpb25cIixcIm1lcmdlTXVsdGlzaWdUcmFuc2FjdGlvbnNcIixcImFwcGVuZFNpZ25NdWx0aXNpZ1RyYW5zYWN0aW9uXCIsXCJtdWx0aXNpZ0FkZHJlc3NcIixcIkxvZ2ljVGVtcGxhdGVzXCJdLmluZGV4T2YoZSk8MCYmKGZbZV09KCk9PnBbZV0pO3IuZCh0LGYpO3ZhciBkPXIoMTY2MyksZz1yKDY0NzcpLHk9cig3MTk3KSxtPXIoOTU4MiksYj1yKDUwNjIpLEE9cig4OTIyKSx3PXIoNjk2Myksdj1yKDc5ODgpLFM9cigyMjcpLHg9cigzNTEwKSxFPXIoMTA2MyksVD1yKDg4MDApLF89cig0MTU4KSxCPXIoNDM4MyksVT1yKDE5ODgpLGs9cig4MzQpLEk9cigzNDU4KSxDPXIoMjM4MCksUj1yKDc2NzcpLE89cigyNDg2KS5CdWZmZXI7Y29uc3QgRD1PLmZyb20oWzc3LDg4XSksTj1cIlRoZSB0cmFuc2FjdGlvbiBzZW5kZXIgYWRkcmVzcyBhbmQgbXVsdGlzaWcgcHJlaW1hZ2UgZG8gbm90IG1hdGNoLlwiO2Z1bmN0aW9uIFAoZSx0KXtpZih2b2lkIDA9PT1lLmZyb20pe2NvbnN0IHI9bi5rZXlQYWlyRnJvbVNlY3JldEtleSh0KTtlLmZyb209by5lbmNvZGVBZGRyZXNzKHIucHVibGljS2V5KX1jb25zdCByPWkuaW5zdGFudGlhdGVUeG5JZk5lZWRlZChlKTtyZXR1cm57dHhJRDpyLnR4SUQoKS50b1N0cmluZygpLGJsb2I6ci5zaWduVHhuKHQpfX1mdW5jdGlvbiBMKGUsdCl7cmV0dXJuIG5ldyB1LlooZSkuc2lnbkJpZCh0KX1mdW5jdGlvbiBGKGUsdCl7Y29uc3Qgcj1PLmZyb20oaC5jb25jYXRBcnJheXMoRCxlKSk7cmV0dXJuIG4uc2lnbihyLHQpfWZ1bmN0aW9uIHooZSx0LHIpe2NvbnN0IHM9Ty5mcm9tKGguY29uY2F0QXJyYXlzKEQsZSkpLGk9by5kZWNvZGVBZGRyZXNzKHIpLnB1YmxpY0tleTtyZXR1cm4gbi52ZXJpZnkocyx0LGkpfWZ1bmN0aW9uIGooZSl7cmV0dXJuIG5ldyBVaW50OEFycmF5KHMuZW5jb2RlKGUpKX1mdW5jdGlvbiBNKGUpe3JldHVybiBzLmRlY29kZShlKX1jb25zdCBIPW5ldyBFcnJvcihOKSxHPW5ldyBFcnJvcihsLnJEKSxLPWMoKX0sMTk4ODooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHttYWtlUGF5bWVudFR4bldpdGhTdWdnZXN0ZWRQYXJhbXM6KCk9PmksbWFrZVBheW1lbnRUeG46KCk9PmEsbWFrZVBheW1lbnRUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+YyxtYWtlS2V5UmVnaXN0cmF0aW9uVHhuV2l0aFN1Z2dlc3RlZFBhcmFtczooKT0+dSxtYWtlS2V5UmVnaXN0cmF0aW9uVHhuOigpPT5sLG1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+aCxtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5wLG1ha2VBc3NldENyZWF0ZVR4bjooKT0+ZixtYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+ZCxtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT5nLG1ha2VBc3NldENvbmZpZ1R4bjooKT0+eSxtYWtlQXNzZXRDb25maWdUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+bSxtYWtlQXNzZXREZXN0cm95VHhuV2l0aFN1Z2dlc3RlZFBhcmFtczooKT0+YixtYWtlQXNzZXREZXN0cm95VHhuOigpPT5BLG1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+dyxtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zOigpPT52LG1ha2VBc3NldEZyZWV6ZVR4bjooKT0+UyxtYWtlQXNzZXRGcmVlemVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+eCxtYWtlQXNzZXRUcmFuc2ZlclR4bldpdGhTdWdnZXN0ZWRQYXJhbXM6KCk9PkUsbWFrZUFzc2V0VHJhbnNmZXJUeG46KCk9PlQsbWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdDooKT0+XyxtYWtlQXBwbGljYXRpb25DcmVhdGVUeG46KCk9PkIsbWFrZUFwcGxpY2F0aW9uQ3JlYXRlVHhuRnJvbU9iamVjdDooKT0+VSxtYWtlQXBwbGljYXRpb25VcGRhdGVUeG46KCk9PmssbWFrZUFwcGxpY2F0aW9uVXBkYXRlVHhuRnJvbU9iamVjdDooKT0+SSxtYWtlQXBwbGljYXRpb25EZWxldGVUeG46KCk9PkMsbWFrZUFwcGxpY2F0aW9uRGVsZXRlVHhuRnJvbU9iamVjdDooKT0+UixtYWtlQXBwbGljYXRpb25PcHRJblR4bjooKT0+TyxtYWtlQXBwbGljYXRpb25PcHRJblR4bkZyb21PYmplY3Q6KCk9PkQsbWFrZUFwcGxpY2F0aW9uQ2xvc2VPdXRUeG46KCk9Pk4sbWFrZUFwcGxpY2F0aW9uQ2xvc2VPdXRUeG5Gcm9tT2JqZWN0OigpPT5QLG1ha2VBcHBsaWNhdGlvbkNsZWFyU3RhdGVUeG46KCk9PkwsbWFrZUFwcGxpY2F0aW9uQ2xlYXJTdGF0ZVR4bkZyb21PYmplY3Q6KCk9PkYsbWFrZUFwcGxpY2F0aW9uTm9PcFR4bjooKT0+eixtYWtlQXBwbGljYXRpb25Ob09wVHhuRnJvbU9iamVjdDooKT0+aixPbkFwcGxpY2F0aW9uQ29tcGxldGU6KCk9Pm8uaHEsbWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3Q6KCk9Pk19KTt2YXIgbj1yKDk0MTcpLG89cigxNjI0KSxzPXIoMTgyNCk7ZnVuY3Rpb24gaShlLHQscixvLGksYSxjKXtjb25zdCB1PXtmcm9tOmUsdG86dCxhbW91bnQ6cixjbG9zZVJlbWFpbmRlclRvOm8sbm90ZTppLHN1Z2dlc3RlZFBhcmFtczphLHR5cGU6cy5pLnBheSxyZUtleVRvOmN9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbih1KX1mdW5jdGlvbiBhKGUsdCxyLG4sbyxzLGEsYyx1LGwsaCl7cmV0dXJuIGkoZSx0LG4sbyxjLHtnZW5lc2lzSGFzaDp1LGdlbmVzaXNJRDpsLGZpcnN0Um91bmQ6cyxsYXN0Um91bmQ6YSxmZWU6cn0saCl9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gaShlLmZyb20sZS50byxlLmFtb3VudCxlLmNsb3NlUmVtYWluZGVyVG8sZS5ub3RlLGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gdShlLHQscixvLGksYSxjLHUsbCxoPSExLHApe2NvbnN0IGY9e2Zyb206ZSxub3RlOnQsdm90ZUtleTpyLHNlbGVjdGlvbktleTpvLHZvdGVGaXJzdDppLHZvdGVMYXN0OmEsdm90ZUtleURpbHV0aW9uOmMsc3VnZ2VzdGVkUGFyYW1zOnUsdHlwZTpzLmkua2V5cmVnLHJlS2V5VG86bCxub25QYXJ0aWNpcGF0aW9uOmgsc3RhdGVQcm9vZktleTpwfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZil9ZnVuY3Rpb24gbChlLHQscixuLG8scyxpLGEsYyxsLGgscCxmLGQ9ITEsZyl7cmV0dXJuIHUoZSxvLGEsYyxsLGgscCx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGYsZCxnKX1mdW5jdGlvbiBoKGUpe3JldHVybiB1KGUuZnJvbSxlLm5vdGUsZS52b3RlS2V5LGUuc2VsZWN0aW9uS2V5LGUudm90ZUZpcnN0LGUudm90ZUxhc3QsZS52b3RlS2V5RGlsdXRpb24sZS5zdWdnZXN0ZWRQYXJhbXMsZS5yZWtleVRvLGUubm9uUGFydGljaXBhdGlvbixlLnN0YXRlUHJvb2ZLZXkpfWZ1bmN0aW9uIHAoZSx0LHIsbyxpLGEsYyx1LGwsaCxwLGYsZCxnLHkpe2NvbnN0IG09e2Zyb206ZSxub3RlOnQsc3VnZ2VzdGVkUGFyYW1zOmcsYXNzZXRUb3RhbDpyLGFzc2V0RGVjaW1hbHM6byxhc3NldERlZmF1bHRGcm96ZW46aSxhc3NldFVuaXROYW1lOmgsYXNzZXROYW1lOnAsYXNzZXRVUkw6Zixhc3NldE1ldGFkYXRhSGFzaDpkLGFzc2V0TWFuYWdlcjphLGFzc2V0UmVzZXJ2ZTpjLGFzc2V0RnJlZXplOnUsYXNzZXRDbGF3YmFjazpsLHR5cGU6cy5pLmFjZmcscmVLZXlUbzp5fTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24obSl9ZnVuY3Rpb24gZihlLHQscixuLG8scyxpLGEsYyx1LGwsaCxmLGQsZyx5LG0sYixBKXtyZXR1cm4gcChlLG8sYSxjLHUsbCxoLGYsZCxnLHksbSxiLHtnZW5lc2lzSGFzaDpzLGdlbmVzaXNJRDppLGZpcnN0Um91bmQ6cixsYXN0Um91bmQ6bixmZWU6dH0sQSl9ZnVuY3Rpb24gZChlKXtyZXR1cm4gcChlLmZyb20sZS5ub3RlLGUudG90YWwsZS5kZWNpbWFscyxlLmRlZmF1bHRGcm96ZW4sZS5tYW5hZ2VyLGUucmVzZXJ2ZSxlLmZyZWV6ZSxlLmNsYXdiYWNrLGUudW5pdE5hbWUsZS5hc3NldE5hbWUsZS5hc3NldFVSTCxlLmFzc2V0TWV0YWRhdGFIYXNoLGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gZyhlLHQscixvLGksYSxjLHUsbD0hMCxoKXtpZihsJiYodm9pZCAwPT09b3x8dm9pZCAwPT09aXx8dm9pZCAwPT09YXx8dm9pZCAwPT09YykpdGhyb3cgRXJyb3IoXCJzdHJpY3QgZW1wdHkgYWRkcmVzcyBjaGVja2luZyB3YXMgdHVybmVkIG9uLCBidXQgYXQgbGVhc3Qgb25lIGVtcHR5IGFkZHJlc3Mgd2FzIHByb3ZpZGVkXCIpO2NvbnN0IHA9e2Zyb206ZSxzdWdnZXN0ZWRQYXJhbXM6dSxhc3NldEluZGV4OnIsYXNzZXRNYW5hZ2VyOm8sYXNzZXRSZXNlcnZlOmksYXNzZXRGcmVlemU6YSxhc3NldENsYXdiYWNrOmMsdHlwZTpzLmkuYWNmZyxub3RlOnQscmVLZXlUbzpofTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24ocCl9ZnVuY3Rpb24geShlLHQscixuLG8scyxpLGEsYyx1LGwsaCxwPSEwLGYpe3JldHVybiBnKGUsbyxhLGMsdSxsLGgse2dlbmVzaXNIYXNoOnMsZ2VuZXNpc0lEOmksZmlyc3RSb3VuZDpyLGxhc3RSb3VuZDpuLGZlZTp0fSxwLGYpfWZ1bmN0aW9uIG0oZSl7cmV0dXJuIGcoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5tYW5hZ2VyLGUucmVzZXJ2ZSxlLmZyZWV6ZSxlLmNsYXdiYWNrLGUuc3VnZ2VzdGVkUGFyYW1zLGUuc3RyaWN0RW1wdHlBZGRyZXNzQ2hlY2tpbmcsZS5yZWtleVRvKX1mdW5jdGlvbiBiKGUsdCxyLG8saSl7Y29uc3QgYT17ZnJvbTplLHN1Z2dlc3RlZFBhcmFtczpvLGFzc2V0SW5kZXg6cix0eXBlOnMuaS5hY2ZnLG5vdGU6dCxyZUtleVRvOml9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihhKX1mdW5jdGlvbiBBKGUsdCxyLG4sbyxzLGksYSxjKXtyZXR1cm4gYihlLG8sYSx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGMpfWZ1bmN0aW9uIHcoZSl7cmV0dXJuIGIoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5zdWdnZXN0ZWRQYXJhbXMsZS5yZWtleVRvKX1mdW5jdGlvbiB2KGUsdCxyLG8saSxhLGMpe2NvbnN0IHU9e2Zyb206ZSx0eXBlOnMuaS5hZnJ6LGZyZWV6ZUFjY291bnQ6byxhc3NldEluZGV4OnIsZnJlZXplU3RhdGU6aSxub3RlOnQsc3VnZ2VzdGVkUGFyYW1zOmEscmVLZXlUbzpjfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24odSl9ZnVuY3Rpb24gUyhlLHQscixuLG8scyxpLGEsYyx1LGwpe3JldHVybiB2KGUsbyxhLGMsdSx7Z2VuZXNpc0hhc2g6cyxnZW5lc2lzSUQ6aSxmaXJzdFJvdW5kOnIsbGFzdFJvdW5kOm4sZmVlOnR9LGwpfWZ1bmN0aW9uIHgoZSl7cmV0dXJuIHYoZS5mcm9tLGUubm90ZSxlLmFzc2V0SW5kZXgsZS5mcmVlemVUYXJnZXQsZS5mcmVlemVTdGF0ZSxlLnN1Z2dlc3RlZFBhcmFtcyxlLnJla2V5VG8pfWZ1bmN0aW9uIEUoZSx0LHIsbyxpLGEsYyx1LGwpe2NvbnN0IGg9e3R5cGU6cy5pLmF4ZmVyLGZyb206ZSx0bzp0LGFtb3VudDppLHN1Z2dlc3RlZFBhcmFtczp1LGFzc2V0SW5kZXg6Yyxub3RlOmEsYXNzZXRSZXZvY2F0aW9uVGFyZ2V0Om8sY2xvc2VSZW1haW5kZXJUbzpyLHJlS2V5VG86bH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGgpfWZ1bmN0aW9uIFQoZSx0LHIsbixvLHMsaSxhLGMsdSxsLGgscCl7cmV0dXJuIEUoZSx0LHIsbixzLGMsaCx7Z2VuZXNpc0hhc2g6dSxnZW5lc2lzSUQ6bCxmaXJzdFJvdW5kOmksbGFzdFJvdW5kOmEsZmVlOm99LHApfWZ1bmN0aW9uIF8oZSl7cmV0dXJuIEUoZS5mcm9tLGUudG8sZS5jbG9zZVJlbWFpbmRlclRvLGUucmV2b2NhdGlvblRhcmdldCxlLmFtb3VudCxlLm5vdGUsZS5hc3NldEluZGV4LGUuc3VnZ2VzdGVkUGFyYW1zLGUucmVrZXlUbyl9ZnVuY3Rpb24gQihlLHQscixvLGksYSxjLHUsbCxoLHAsZixkLGcseSxtLGIpe2NvbnN0IEE9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OjAsYXBwT25Db21wbGV0ZTpyLGFwcExvY2FsSW50czphLGFwcExvY2FsQnl0ZVNsaWNlczpjLGFwcEdsb2JhbEludHM6dSxhcHBHbG9iYWxCeXRlU2xpY2VzOmwsYXBwQXBwcm92YWxQcm9ncmFtOm8sYXBwQ2xlYXJQcm9ncmFtOmksYXBwQXJnczpoLGFwcEFjY291bnRzOnAsYXBwRm9yZWlnbkFwcHM6ZixhcHBGb3JlaWduQXNzZXRzOmQsbm90ZTpnLGxlYXNlOnkscmVLZXlUbzptLGV4dHJhUGFnZXM6Yn07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKEEpfWZ1bmN0aW9uIFUoZSl7cmV0dXJuIEIoZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUub25Db21wbGV0ZSxlLmFwcHJvdmFsUHJvZ3JhbSxlLmNsZWFyUHJvZ3JhbSxlLm51bUxvY2FsSW50cyxlLm51bUxvY2FsQnl0ZVNsaWNlcyxlLm51bUdsb2JhbEludHMsZS5udW1HbG9iYWxCeXRlU2xpY2VzLGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyxlLmV4dHJhUGFnZXMpfWZ1bmN0aW9uIGsoZSx0LHIsaSxhLGMsdSxsLGgscCxmLGQpe2NvbnN0IGc9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwQXBwcm92YWxQcm9ncmFtOmksYXBwT25Db21wbGV0ZTpvLmhxLlVwZGF0ZUFwcGxpY2F0aW9uT0MsYXBwQ2xlYXJQcm9ncmFtOmEsYXBwQXJnczpjLGFwcEFjY291bnRzOnUsYXBwRm9yZWlnbkFwcHM6bCxhcHBGb3JlaWduQXNzZXRzOmgsbm90ZTpwLGxlYXNlOmYscmVLZXlUbzpkfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZyl9ZnVuY3Rpb24gSShlKXtyZXR1cm4gayhlLmZyb20sZS5zdWdnZXN0ZWRQYXJhbXMsZS5hcHBJbmRleCxlLmFwcHJvdmFsUHJvZ3JhbSxlLmNsZWFyUHJvZ3JhbSxlLmFwcEFyZ3MsZS5hY2NvdW50cyxlLmZvcmVpZ25BcHBzLGUuZm9yZWlnbkFzc2V0cyxlLm5vdGUsZS5sZWFzZSxlLnJla2V5VG8pfWZ1bmN0aW9uIEMoZSx0LHIsaSxhLGMsdSxsLGgscCl7Y29uc3QgZj17dHlwZTpzLmkuYXBwbCxmcm9tOmUsc3VnZ2VzdGVkUGFyYW1zOnQsYXBwSW5kZXg6cixhcHBPbkNvbXBsZXRlOm8uaHEuRGVsZXRlQXBwbGljYXRpb25PQyxhcHBBcmdzOmksYXBwQWNjb3VudHM6YSxhcHBGb3JlaWduQXBwczpjLGFwcEZvcmVpZ25Bc3NldHM6dSxub3RlOmwsbGVhc2U6aCxyZUtleVRvOnB9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihmKX1mdW5jdGlvbiBSKGUpe3JldHVybiBDKGUuZnJvbSxlLnN1Z2dlc3RlZFBhcmFtcyxlLmFwcEluZGV4LGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyl9ZnVuY3Rpb24gTyhlLHQscixpLGEsYyx1LGwsaCxwKXtjb25zdCBmPXt0eXBlOnMuaS5hcHBsLGZyb206ZSxzdWdnZXN0ZWRQYXJhbXM6dCxhcHBJbmRleDpyLGFwcE9uQ29tcGxldGU6by5ocS5PcHRJbk9DLGFwcEFyZ3M6aSxhcHBBY2NvdW50czphLGFwcEZvcmVpZ25BcHBzOmMsYXBwRm9yZWlnbkFzc2V0czp1LG5vdGU6bCxsZWFzZTpoLHJlS2V5VG86cH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGYpfWZ1bmN0aW9uIEQoZSl7cmV0dXJuIE8oZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUuYXBwSW5kZXgsZS5hcHBBcmdzLGUuYWNjb3VudHMsZS5mb3JlaWduQXBwcyxlLmZvcmVpZ25Bc3NldHMsZS5ub3RlLGUubGVhc2UsZS5yZWtleVRvKX1mdW5jdGlvbiBOKGUsdCxyLGksYSxjLHUsbCxoLHApe2NvbnN0IGY9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwT25Db21wbGV0ZTpvLmhxLkNsb3NlT3V0T0MsYXBwQXJnczppLGFwcEFjY291bnRzOmEsYXBwRm9yZWlnbkFwcHM6YyxhcHBGb3JlaWduQXNzZXRzOnUsbm90ZTpsLGxlYXNlOmgscmVLZXlUbzpwfTtyZXR1cm4gbmV3IG4uVHJhbnNhY3Rpb24oZil9ZnVuY3Rpb24gUChlKXtyZXR1cm4gTihlLmZyb20sZS5zdWdnZXN0ZWRQYXJhbXMsZS5hcHBJbmRleCxlLmFwcEFyZ3MsZS5hY2NvdW50cyxlLmZvcmVpZ25BcHBzLGUuZm9yZWlnbkFzc2V0cyxlLm5vdGUsZS5sZWFzZSxlLnJla2V5VG8pfWZ1bmN0aW9uIEwoZSx0LHIsaSxhLGMsdSxsLGgscCl7Y29uc3QgZj17dHlwZTpzLmkuYXBwbCxmcm9tOmUsc3VnZ2VzdGVkUGFyYW1zOnQsYXBwSW5kZXg6cixhcHBPbkNvbXBsZXRlOm8uaHEuQ2xlYXJTdGF0ZU9DLGFwcEFyZ3M6aSxhcHBBY2NvdW50czphLGFwcEZvcmVpZ25BcHBzOmMsYXBwRm9yZWlnbkFzc2V0czp1LG5vdGU6bCxsZWFzZTpoLHJlS2V5VG86cH07cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKGYpfWZ1bmN0aW9uIEYoZSl7cmV0dXJuIEwoZS5mcm9tLGUuc3VnZ2VzdGVkUGFyYW1zLGUuYXBwSW5kZXgsZS5hcHBBcmdzLGUuYWNjb3VudHMsZS5mb3JlaWduQXBwcyxlLmZvcmVpZ25Bc3NldHMsZS5ub3RlLGUubGVhc2UsZS5yZWtleVRvKX1mdW5jdGlvbiB6KGUsdCxyLGksYSxjLHUsbCxoLHApe2NvbnN0IGY9e3R5cGU6cy5pLmFwcGwsZnJvbTplLHN1Z2dlc3RlZFBhcmFtczp0LGFwcEluZGV4OnIsYXBwT25Db21wbGV0ZTpvLmhxLk5vT3BPQyxhcHBBcmdzOmksYXBwQWNjb3VudHM6YSxhcHBGb3JlaWduQXBwczpjLGFwcEZvcmVpZ25Bc3NldHM6dSxub3RlOmwsbGVhc2U6aCxyZUtleVRvOnB9O3JldHVybiBuZXcgbi5UcmFuc2FjdGlvbihmKX1mdW5jdGlvbiBqKGUpe3JldHVybiB6KGUuZnJvbSxlLnN1Z2dlc3RlZFBhcmFtcyxlLmFwcEluZGV4LGUuYXBwQXJncyxlLmFjY291bnRzLGUuZm9yZWlnbkFwcHMsZS5mb3JlaWduQXNzZXRzLGUubm90ZSxlLmxlYXNlLGUucmVrZXlUbyl9ZnVuY3Rpb24gTShlKXtjb25zdCB0PXt0eXBlOnMuaS5hcHBsLGZyb206ZS5mcm9tLHN1Z2dlc3RlZFBhcmFtczplLnN1Z2dlc3RlZFBhcmFtcyxhcHBJbmRleDplLmFwcEluZGV4LGFwcE9uQ29tcGxldGU6ZS5vbkNvbXBsZXRlLGFwcExvY2FsSW50czplLm51bUxvY2FsSW50cyxhcHBMb2NhbEJ5dGVTbGljZXM6ZS5udW1Mb2NhbEJ5dGVTbGljZXMsYXBwR2xvYmFsSW50czplLm51bUdsb2JhbEludHMsYXBwR2xvYmFsQnl0ZVNsaWNlczplLm51bUdsb2JhbEJ5dGVTbGljZXMsYXBwQXBwcm92YWxQcm9ncmFtOmUuYXBwcm92YWxQcm9ncmFtLGFwcENsZWFyUHJvZ3JhbTplLmNsZWFyUHJvZ3JhbSxhcHBBcmdzOmUuYXBwQXJncyxhcHBBY2NvdW50czplLmFjY291bnRzLGFwcEZvcmVpZ25BcHBzOmUuZm9yZWlnbkFwcHMsYXBwRm9yZWlnbkFzc2V0czplLmZvcmVpZ25Bc3NldHMsbm90ZTplLm5vdGUsbGVhc2U6ZS5sZWFzZSxyZUtleVRvOmUucmVrZXlUbyxleHRyYVBhZ2VzOmUuZXh0cmFQYWdlc307cmV0dXJuIG5ldyBuLlRyYW5zYWN0aW9uKHQpfX0sMzUxMDooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5kKHQse3ZDOigpPT5nLHczOigpPT5sLE9GOigpPT5kLENoOigpPT5wLFFYOigpPT5mLG1FOigpPT5ofSk7Y29uc3Qgbj1bXCJhYmFuZG9uXCIsXCJhYmlsaXR5XCIsXCJhYmxlXCIsXCJhYm91dFwiLFwiYWJvdmVcIixcImFic2VudFwiLFwiYWJzb3JiXCIsXCJhYnN0cmFjdFwiLFwiYWJzdXJkXCIsXCJhYnVzZVwiLFwiYWNjZXNzXCIsXCJhY2NpZGVudFwiLFwiYWNjb3VudFwiLFwiYWNjdXNlXCIsXCJhY2hpZXZlXCIsXCJhY2lkXCIsXCJhY291c3RpY1wiLFwiYWNxdWlyZVwiLFwiYWNyb3NzXCIsXCJhY3RcIixcImFjdGlvblwiLFwiYWN0b3JcIixcImFjdHJlc3NcIixcImFjdHVhbFwiLFwiYWRhcHRcIixcImFkZFwiLFwiYWRkaWN0XCIsXCJhZGRyZXNzXCIsXCJhZGp1c3RcIixcImFkbWl0XCIsXCJhZHVsdFwiLFwiYWR2YW5jZVwiLFwiYWR2aWNlXCIsXCJhZXJvYmljXCIsXCJhZmZhaXJcIixcImFmZm9yZFwiLFwiYWZyYWlkXCIsXCJhZ2FpblwiLFwiYWdlXCIsXCJhZ2VudFwiLFwiYWdyZWVcIixcImFoZWFkXCIsXCJhaW1cIixcImFpclwiLFwiYWlycG9ydFwiLFwiYWlzbGVcIixcImFsYXJtXCIsXCJhbGJ1bVwiLFwiYWxjb2hvbFwiLFwiYWxlcnRcIixcImFsaWVuXCIsXCJhbGxcIixcImFsbGV5XCIsXCJhbGxvd1wiLFwiYWxtb3N0XCIsXCJhbG9uZVwiLFwiYWxwaGFcIixcImFscmVhZHlcIixcImFsc29cIixcImFsdGVyXCIsXCJhbHdheXNcIixcImFtYXRldXJcIixcImFtYXppbmdcIixcImFtb25nXCIsXCJhbW91bnRcIixcImFtdXNlZFwiLFwiYW5hbHlzdFwiLFwiYW5jaG9yXCIsXCJhbmNpZW50XCIsXCJhbmdlclwiLFwiYW5nbGVcIixcImFuZ3J5XCIsXCJhbmltYWxcIixcImFua2xlXCIsXCJhbm5vdW5jZVwiLFwiYW5udWFsXCIsXCJhbm90aGVyXCIsXCJhbnN3ZXJcIixcImFudGVubmFcIixcImFudGlxdWVcIixcImFueGlldHlcIixcImFueVwiLFwiYXBhcnRcIixcImFwb2xvZ3lcIixcImFwcGVhclwiLFwiYXBwbGVcIixcImFwcHJvdmVcIixcImFwcmlsXCIsXCJhcmNoXCIsXCJhcmN0aWNcIixcImFyZWFcIixcImFyZW5hXCIsXCJhcmd1ZVwiLFwiYXJtXCIsXCJhcm1lZFwiLFwiYXJtb3JcIixcImFybXlcIixcImFyb3VuZFwiLFwiYXJyYW5nZVwiLFwiYXJyZXN0XCIsXCJhcnJpdmVcIixcImFycm93XCIsXCJhcnRcIixcImFydGVmYWN0XCIsXCJhcnRpc3RcIixcImFydHdvcmtcIixcImFza1wiLFwiYXNwZWN0XCIsXCJhc3NhdWx0XCIsXCJhc3NldFwiLFwiYXNzaXN0XCIsXCJhc3N1bWVcIixcImFzdGhtYVwiLFwiYXRobGV0ZVwiLFwiYXRvbVwiLFwiYXR0YWNrXCIsXCJhdHRlbmRcIixcImF0dGl0dWRlXCIsXCJhdHRyYWN0XCIsXCJhdWN0aW9uXCIsXCJhdWRpdFwiLFwiYXVndXN0XCIsXCJhdW50XCIsXCJhdXRob3JcIixcImF1dG9cIixcImF1dHVtblwiLFwiYXZlcmFnZVwiLFwiYXZvY2Fkb1wiLFwiYXZvaWRcIixcImF3YWtlXCIsXCJhd2FyZVwiLFwiYXdheVwiLFwiYXdlc29tZVwiLFwiYXdmdWxcIixcImF3a3dhcmRcIixcImF4aXNcIixcImJhYnlcIixcImJhY2hlbG9yXCIsXCJiYWNvblwiLFwiYmFkZ2VcIixcImJhZ1wiLFwiYmFsYW5jZVwiLFwiYmFsY29ueVwiLFwiYmFsbFwiLFwiYmFtYm9vXCIsXCJiYW5hbmFcIixcImJhbm5lclwiLFwiYmFyXCIsXCJiYXJlbHlcIixcImJhcmdhaW5cIixcImJhcnJlbFwiLFwiYmFzZVwiLFwiYmFzaWNcIixcImJhc2tldFwiLFwiYmF0dGxlXCIsXCJiZWFjaFwiLFwiYmVhblwiLFwiYmVhdXR5XCIsXCJiZWNhdXNlXCIsXCJiZWNvbWVcIixcImJlZWZcIixcImJlZm9yZVwiLFwiYmVnaW5cIixcImJlaGF2ZVwiLFwiYmVoaW5kXCIsXCJiZWxpZXZlXCIsXCJiZWxvd1wiLFwiYmVsdFwiLFwiYmVuY2hcIixcImJlbmVmaXRcIixcImJlc3RcIixcImJldHJheVwiLFwiYmV0dGVyXCIsXCJiZXR3ZWVuXCIsXCJiZXlvbmRcIixcImJpY3ljbGVcIixcImJpZFwiLFwiYmlrZVwiLFwiYmluZFwiLFwiYmlvbG9neVwiLFwiYmlyZFwiLFwiYmlydGhcIixcImJpdHRlclwiLFwiYmxhY2tcIixcImJsYWRlXCIsXCJibGFtZVwiLFwiYmxhbmtldFwiLFwiYmxhc3RcIixcImJsZWFrXCIsXCJibGVzc1wiLFwiYmxpbmRcIixcImJsb29kXCIsXCJibG9zc29tXCIsXCJibG91c2VcIixcImJsdWVcIixcImJsdXJcIixcImJsdXNoXCIsXCJib2FyZFwiLFwiYm9hdFwiLFwiYm9keVwiLFwiYm9pbFwiLFwiYm9tYlwiLFwiYm9uZVwiLFwiYm9udXNcIixcImJvb2tcIixcImJvb3N0XCIsXCJib3JkZXJcIixcImJvcmluZ1wiLFwiYm9ycm93XCIsXCJib3NzXCIsXCJib3R0b21cIixcImJvdW5jZVwiLFwiYm94XCIsXCJib3lcIixcImJyYWNrZXRcIixcImJyYWluXCIsXCJicmFuZFwiLFwiYnJhc3NcIixcImJyYXZlXCIsXCJicmVhZFwiLFwiYnJlZXplXCIsXCJicmlja1wiLFwiYnJpZGdlXCIsXCJicmllZlwiLFwiYnJpZ2h0XCIsXCJicmluZ1wiLFwiYnJpc2tcIixcImJyb2Njb2xpXCIsXCJicm9rZW5cIixcImJyb256ZVwiLFwiYnJvb21cIixcImJyb3RoZXJcIixcImJyb3duXCIsXCJicnVzaFwiLFwiYnViYmxlXCIsXCJidWRkeVwiLFwiYnVkZ2V0XCIsXCJidWZmYWxvXCIsXCJidWlsZFwiLFwiYnVsYlwiLFwiYnVsa1wiLFwiYnVsbGV0XCIsXCJidW5kbGVcIixcImJ1bmtlclwiLFwiYnVyZGVuXCIsXCJidXJnZXJcIixcImJ1cnN0XCIsXCJidXNcIixcImJ1c2luZXNzXCIsXCJidXN5XCIsXCJidXR0ZXJcIixcImJ1eWVyXCIsXCJidXp6XCIsXCJjYWJiYWdlXCIsXCJjYWJpblwiLFwiY2FibGVcIixcImNhY3R1c1wiLFwiY2FnZVwiLFwiY2FrZVwiLFwiY2FsbFwiLFwiY2FsbVwiLFwiY2FtZXJhXCIsXCJjYW1wXCIsXCJjYW5cIixcImNhbmFsXCIsXCJjYW5jZWxcIixcImNhbmR5XCIsXCJjYW5ub25cIixcImNhbm9lXCIsXCJjYW52YXNcIixcImNhbnlvblwiLFwiY2FwYWJsZVwiLFwiY2FwaXRhbFwiLFwiY2FwdGFpblwiLFwiY2FyXCIsXCJjYXJib25cIixcImNhcmRcIixcImNhcmdvXCIsXCJjYXJwZXRcIixcImNhcnJ5XCIsXCJjYXJ0XCIsXCJjYXNlXCIsXCJjYXNoXCIsXCJjYXNpbm9cIixcImNhc3RsZVwiLFwiY2FzdWFsXCIsXCJjYXRcIixcImNhdGFsb2dcIixcImNhdGNoXCIsXCJjYXRlZ29yeVwiLFwiY2F0dGxlXCIsXCJjYXVnaHRcIixcImNhdXNlXCIsXCJjYXV0aW9uXCIsXCJjYXZlXCIsXCJjZWlsaW5nXCIsXCJjZWxlcnlcIixcImNlbWVudFwiLFwiY2Vuc3VzXCIsXCJjZW50dXJ5XCIsXCJjZXJlYWxcIixcImNlcnRhaW5cIixcImNoYWlyXCIsXCJjaGFsa1wiLFwiY2hhbXBpb25cIixcImNoYW5nZVwiLFwiY2hhb3NcIixcImNoYXB0ZXJcIixcImNoYXJnZVwiLFwiY2hhc2VcIixcImNoYXRcIixcImNoZWFwXCIsXCJjaGVja1wiLFwiY2hlZXNlXCIsXCJjaGVmXCIsXCJjaGVycnlcIixcImNoZXN0XCIsXCJjaGlja2VuXCIsXCJjaGllZlwiLFwiY2hpbGRcIixcImNoaW1uZXlcIixcImNob2ljZVwiLFwiY2hvb3NlXCIsXCJjaHJvbmljXCIsXCJjaHVja2xlXCIsXCJjaHVua1wiLFwiY2h1cm5cIixcImNpZ2FyXCIsXCJjaW5uYW1vblwiLFwiY2lyY2xlXCIsXCJjaXRpemVuXCIsXCJjaXR5XCIsXCJjaXZpbFwiLFwiY2xhaW1cIixcImNsYXBcIixcImNsYXJpZnlcIixcImNsYXdcIixcImNsYXlcIixcImNsZWFuXCIsXCJjbGVya1wiLFwiY2xldmVyXCIsXCJjbGlja1wiLFwiY2xpZW50XCIsXCJjbGlmZlwiLFwiY2xpbWJcIixcImNsaW5pY1wiLFwiY2xpcFwiLFwiY2xvY2tcIixcImNsb2dcIixcImNsb3NlXCIsXCJjbG90aFwiLFwiY2xvdWRcIixcImNsb3duXCIsXCJjbHViXCIsXCJjbHVtcFwiLFwiY2x1c3RlclwiLFwiY2x1dGNoXCIsXCJjb2FjaFwiLFwiY29hc3RcIixcImNvY29udXRcIixcImNvZGVcIixcImNvZmZlZVwiLFwiY29pbFwiLFwiY29pblwiLFwiY29sbGVjdFwiLFwiY29sb3JcIixcImNvbHVtblwiLFwiY29tYmluZVwiLFwiY29tZVwiLFwiY29tZm9ydFwiLFwiY29taWNcIixcImNvbW1vblwiLFwiY29tcGFueVwiLFwiY29uY2VydFwiLFwiY29uZHVjdFwiLFwiY29uZmlybVwiLFwiY29uZ3Jlc3NcIixcImNvbm5lY3RcIixcImNvbnNpZGVyXCIsXCJjb250cm9sXCIsXCJjb252aW5jZVwiLFwiY29va1wiLFwiY29vbFwiLFwiY29wcGVyXCIsXCJjb3B5XCIsXCJjb3JhbFwiLFwiY29yZVwiLFwiY29yblwiLFwiY29ycmVjdFwiLFwiY29zdFwiLFwiY290dG9uXCIsXCJjb3VjaFwiLFwiY291bnRyeVwiLFwiY291cGxlXCIsXCJjb3Vyc2VcIixcImNvdXNpblwiLFwiY292ZXJcIixcImNveW90ZVwiLFwiY3JhY2tcIixcImNyYWRsZVwiLFwiY3JhZnRcIixcImNyYW1cIixcImNyYW5lXCIsXCJjcmFzaFwiLFwiY3JhdGVyXCIsXCJjcmF3bFwiLFwiY3JhenlcIixcImNyZWFtXCIsXCJjcmVkaXRcIixcImNyZWVrXCIsXCJjcmV3XCIsXCJjcmlja2V0XCIsXCJjcmltZVwiLFwiY3Jpc3BcIixcImNyaXRpY1wiLFwiY3JvcFwiLFwiY3Jvc3NcIixcImNyb3VjaFwiLFwiY3Jvd2RcIixcImNydWNpYWxcIixcImNydWVsXCIsXCJjcnVpc2VcIixcImNydW1ibGVcIixcImNydW5jaFwiLFwiY3J1c2hcIixcImNyeVwiLFwiY3J5c3RhbFwiLFwiY3ViZVwiLFwiY3VsdHVyZVwiLFwiY3VwXCIsXCJjdXBib2FyZFwiLFwiY3VyaW91c1wiLFwiY3VycmVudFwiLFwiY3VydGFpblwiLFwiY3VydmVcIixcImN1c2hpb25cIixcImN1c3RvbVwiLFwiY3V0ZVwiLFwiY3ljbGVcIixcImRhZFwiLFwiZGFtYWdlXCIsXCJkYW1wXCIsXCJkYW5jZVwiLFwiZGFuZ2VyXCIsXCJkYXJpbmdcIixcImRhc2hcIixcImRhdWdodGVyXCIsXCJkYXduXCIsXCJkYXlcIixcImRlYWxcIixcImRlYmF0ZVwiLFwiZGVicmlzXCIsXCJkZWNhZGVcIixcImRlY2VtYmVyXCIsXCJkZWNpZGVcIixcImRlY2xpbmVcIixcImRlY29yYXRlXCIsXCJkZWNyZWFzZVwiLFwiZGVlclwiLFwiZGVmZW5zZVwiLFwiZGVmaW5lXCIsXCJkZWZ5XCIsXCJkZWdyZWVcIixcImRlbGF5XCIsXCJkZWxpdmVyXCIsXCJkZW1hbmRcIixcImRlbWlzZVwiLFwiZGVuaWFsXCIsXCJkZW50aXN0XCIsXCJkZW55XCIsXCJkZXBhcnRcIixcImRlcGVuZFwiLFwiZGVwb3NpdFwiLFwiZGVwdGhcIixcImRlcHV0eVwiLFwiZGVyaXZlXCIsXCJkZXNjcmliZVwiLFwiZGVzZXJ0XCIsXCJkZXNpZ25cIixcImRlc2tcIixcImRlc3BhaXJcIixcImRlc3Ryb3lcIixcImRldGFpbFwiLFwiZGV0ZWN0XCIsXCJkZXZlbG9wXCIsXCJkZXZpY2VcIixcImRldm90ZVwiLFwiZGlhZ3JhbVwiLFwiZGlhbFwiLFwiZGlhbW9uZFwiLFwiZGlhcnlcIixcImRpY2VcIixcImRpZXNlbFwiLFwiZGlldFwiLFwiZGlmZmVyXCIsXCJkaWdpdGFsXCIsXCJkaWduaXR5XCIsXCJkaWxlbW1hXCIsXCJkaW5uZXJcIixcImRpbm9zYXVyXCIsXCJkaXJlY3RcIixcImRpcnRcIixcImRpc2FncmVlXCIsXCJkaXNjb3ZlclwiLFwiZGlzZWFzZVwiLFwiZGlzaFwiLFwiZGlzbWlzc1wiLFwiZGlzb3JkZXJcIixcImRpc3BsYXlcIixcImRpc3RhbmNlXCIsXCJkaXZlcnRcIixcImRpdmlkZVwiLFwiZGl2b3JjZVwiLFwiZGl6enlcIixcImRvY3RvclwiLFwiZG9jdW1lbnRcIixcImRvZ1wiLFwiZG9sbFwiLFwiZG9scGhpblwiLFwiZG9tYWluXCIsXCJkb25hdGVcIixcImRvbmtleVwiLFwiZG9ub3JcIixcImRvb3JcIixcImRvc2VcIixcImRvdWJsZVwiLFwiZG92ZVwiLFwiZHJhZnRcIixcImRyYWdvblwiLFwiZHJhbWFcIixcImRyYXN0aWNcIixcImRyYXdcIixcImRyZWFtXCIsXCJkcmVzc1wiLFwiZHJpZnRcIixcImRyaWxsXCIsXCJkcmlua1wiLFwiZHJpcFwiLFwiZHJpdmVcIixcImRyb3BcIixcImRydW1cIixcImRyeVwiLFwiZHVja1wiLFwiZHVtYlwiLFwiZHVuZVwiLFwiZHVyaW5nXCIsXCJkdXN0XCIsXCJkdXRjaFwiLFwiZHV0eVwiLFwiZHdhcmZcIixcImR5bmFtaWNcIixcImVhZ2VyXCIsXCJlYWdsZVwiLFwiZWFybHlcIixcImVhcm5cIixcImVhcnRoXCIsXCJlYXNpbHlcIixcImVhc3RcIixcImVhc3lcIixcImVjaG9cIixcImVjb2xvZ3lcIixcImVjb25vbXlcIixcImVkZ2VcIixcImVkaXRcIixcImVkdWNhdGVcIixcImVmZm9ydFwiLFwiZWdnXCIsXCJlaWdodFwiLFwiZWl0aGVyXCIsXCJlbGJvd1wiLFwiZWxkZXJcIixcImVsZWN0cmljXCIsXCJlbGVnYW50XCIsXCJlbGVtZW50XCIsXCJlbGVwaGFudFwiLFwiZWxldmF0b3JcIixcImVsaXRlXCIsXCJlbHNlXCIsXCJlbWJhcmtcIixcImVtYm9keVwiLFwiZW1icmFjZVwiLFwiZW1lcmdlXCIsXCJlbW90aW9uXCIsXCJlbXBsb3lcIixcImVtcG93ZXJcIixcImVtcHR5XCIsXCJlbmFibGVcIixcImVuYWN0XCIsXCJlbmRcIixcImVuZGxlc3NcIixcImVuZG9yc2VcIixcImVuZW15XCIsXCJlbmVyZ3lcIixcImVuZm9yY2VcIixcImVuZ2FnZVwiLFwiZW5naW5lXCIsXCJlbmhhbmNlXCIsXCJlbmpveVwiLFwiZW5saXN0XCIsXCJlbm91Z2hcIixcImVucmljaFwiLFwiZW5yb2xsXCIsXCJlbnN1cmVcIixcImVudGVyXCIsXCJlbnRpcmVcIixcImVudHJ5XCIsXCJlbnZlbG9wZVwiLFwiZXBpc29kZVwiLFwiZXF1YWxcIixcImVxdWlwXCIsXCJlcmFcIixcImVyYXNlXCIsXCJlcm9kZVwiLFwiZXJvc2lvblwiLFwiZXJyb3JcIixcImVydXB0XCIsXCJlc2NhcGVcIixcImVzc2F5XCIsXCJlc3NlbmNlXCIsXCJlc3RhdGVcIixcImV0ZXJuYWxcIixcImV0aGljc1wiLFwiZXZpZGVuY2VcIixcImV2aWxcIixcImV2b2tlXCIsXCJldm9sdmVcIixcImV4YWN0XCIsXCJleGFtcGxlXCIsXCJleGNlc3NcIixcImV4Y2hhbmdlXCIsXCJleGNpdGVcIixcImV4Y2x1ZGVcIixcImV4Y3VzZVwiLFwiZXhlY3V0ZVwiLFwiZXhlcmNpc2VcIixcImV4aGF1c3RcIixcImV4aGliaXRcIixcImV4aWxlXCIsXCJleGlzdFwiLFwiZXhpdFwiLFwiZXhvdGljXCIsXCJleHBhbmRcIixcImV4cGVjdFwiLFwiZXhwaXJlXCIsXCJleHBsYWluXCIsXCJleHBvc2VcIixcImV4cHJlc3NcIixcImV4dGVuZFwiLFwiZXh0cmFcIixcImV5ZVwiLFwiZXllYnJvd1wiLFwiZmFicmljXCIsXCJmYWNlXCIsXCJmYWN1bHR5XCIsXCJmYWRlXCIsXCJmYWludFwiLFwiZmFpdGhcIixcImZhbGxcIixcImZhbHNlXCIsXCJmYW1lXCIsXCJmYW1pbHlcIixcImZhbW91c1wiLFwiZmFuXCIsXCJmYW5jeVwiLFwiZmFudGFzeVwiLFwiZmFybVwiLFwiZmFzaGlvblwiLFwiZmF0XCIsXCJmYXRhbFwiLFwiZmF0aGVyXCIsXCJmYXRpZ3VlXCIsXCJmYXVsdFwiLFwiZmF2b3JpdGVcIixcImZlYXR1cmVcIixcImZlYnJ1YXJ5XCIsXCJmZWRlcmFsXCIsXCJmZWVcIixcImZlZWRcIixcImZlZWxcIixcImZlbWFsZVwiLFwiZmVuY2VcIixcImZlc3RpdmFsXCIsXCJmZXRjaFwiLFwiZmV2ZXJcIixcImZld1wiLFwiZmliZXJcIixcImZpY3Rpb25cIixcImZpZWxkXCIsXCJmaWd1cmVcIixcImZpbGVcIixcImZpbG1cIixcImZpbHRlclwiLFwiZmluYWxcIixcImZpbmRcIixcImZpbmVcIixcImZpbmdlclwiLFwiZmluaXNoXCIsXCJmaXJlXCIsXCJmaXJtXCIsXCJmaXJzdFwiLFwiZmlzY2FsXCIsXCJmaXNoXCIsXCJmaXRcIixcImZpdG5lc3NcIixcImZpeFwiLFwiZmxhZ1wiLFwiZmxhbWVcIixcImZsYXNoXCIsXCJmbGF0XCIsXCJmbGF2b3JcIixcImZsZWVcIixcImZsaWdodFwiLFwiZmxpcFwiLFwiZmxvYXRcIixcImZsb2NrXCIsXCJmbG9vclwiLFwiZmxvd2VyXCIsXCJmbHVpZFwiLFwiZmx1c2hcIixcImZseVwiLFwiZm9hbVwiLFwiZm9jdXNcIixcImZvZ1wiLFwiZm9pbFwiLFwiZm9sZFwiLFwiZm9sbG93XCIsXCJmb29kXCIsXCJmb290XCIsXCJmb3JjZVwiLFwiZm9yZXN0XCIsXCJmb3JnZXRcIixcImZvcmtcIixcImZvcnR1bmVcIixcImZvcnVtXCIsXCJmb3J3YXJkXCIsXCJmb3NzaWxcIixcImZvc3RlclwiLFwiZm91bmRcIixcImZveFwiLFwiZnJhZ2lsZVwiLFwiZnJhbWVcIixcImZyZXF1ZW50XCIsXCJmcmVzaFwiLFwiZnJpZW5kXCIsXCJmcmluZ2VcIixcImZyb2dcIixcImZyb250XCIsXCJmcm9zdFwiLFwiZnJvd25cIixcImZyb3plblwiLFwiZnJ1aXRcIixcImZ1ZWxcIixcImZ1blwiLFwiZnVubnlcIixcImZ1cm5hY2VcIixcImZ1cnlcIixcImZ1dHVyZVwiLFwiZ2FkZ2V0XCIsXCJnYWluXCIsXCJnYWxheHlcIixcImdhbGxlcnlcIixcImdhbWVcIixcImdhcFwiLFwiZ2FyYWdlXCIsXCJnYXJiYWdlXCIsXCJnYXJkZW5cIixcImdhcmxpY1wiLFwiZ2FybWVudFwiLFwiZ2FzXCIsXCJnYXNwXCIsXCJnYXRlXCIsXCJnYXRoZXJcIixcImdhdWdlXCIsXCJnYXplXCIsXCJnZW5lcmFsXCIsXCJnZW5pdXNcIixcImdlbnJlXCIsXCJnZW50bGVcIixcImdlbnVpbmVcIixcImdlc3R1cmVcIixcImdob3N0XCIsXCJnaWFudFwiLFwiZ2lmdFwiLFwiZ2lnZ2xlXCIsXCJnaW5nZXJcIixcImdpcmFmZmVcIixcImdpcmxcIixcImdpdmVcIixcImdsYWRcIixcImdsYW5jZVwiLFwiZ2xhcmVcIixcImdsYXNzXCIsXCJnbGlkZVwiLFwiZ2xpbXBzZVwiLFwiZ2xvYmVcIixcImdsb29tXCIsXCJnbG9yeVwiLFwiZ2xvdmVcIixcImdsb3dcIixcImdsdWVcIixcImdvYXRcIixcImdvZGRlc3NcIixcImdvbGRcIixcImdvb2RcIixcImdvb3NlXCIsXCJnb3JpbGxhXCIsXCJnb3NwZWxcIixcImdvc3NpcFwiLFwiZ292ZXJuXCIsXCJnb3duXCIsXCJncmFiXCIsXCJncmFjZVwiLFwiZ3JhaW5cIixcImdyYW50XCIsXCJncmFwZVwiLFwiZ3Jhc3NcIixcImdyYXZpdHlcIixcImdyZWF0XCIsXCJncmVlblwiLFwiZ3JpZFwiLFwiZ3JpZWZcIixcImdyaXRcIixcImdyb2NlcnlcIixcImdyb3VwXCIsXCJncm93XCIsXCJncnVudFwiLFwiZ3VhcmRcIixcImd1ZXNzXCIsXCJndWlkZVwiLFwiZ3VpbHRcIixcImd1aXRhclwiLFwiZ3VuXCIsXCJneW1cIixcImhhYml0XCIsXCJoYWlyXCIsXCJoYWxmXCIsXCJoYW1tZXJcIixcImhhbXN0ZXJcIixcImhhbmRcIixcImhhcHB5XCIsXCJoYXJib3JcIixcImhhcmRcIixcImhhcnNoXCIsXCJoYXJ2ZXN0XCIsXCJoYXRcIixcImhhdmVcIixcImhhd2tcIixcImhhemFyZFwiLFwiaGVhZFwiLFwiaGVhbHRoXCIsXCJoZWFydFwiLFwiaGVhdnlcIixcImhlZGdlaG9nXCIsXCJoZWlnaHRcIixcImhlbGxvXCIsXCJoZWxtZXRcIixcImhlbHBcIixcImhlblwiLFwiaGVyb1wiLFwiaGlkZGVuXCIsXCJoaWdoXCIsXCJoaWxsXCIsXCJoaW50XCIsXCJoaXBcIixcImhpcmVcIixcImhpc3RvcnlcIixcImhvYmJ5XCIsXCJob2NrZXlcIixcImhvbGRcIixcImhvbGVcIixcImhvbGlkYXlcIixcImhvbGxvd1wiLFwiaG9tZVwiLFwiaG9uZXlcIixcImhvb2RcIixcImhvcGVcIixcImhvcm5cIixcImhvcnJvclwiLFwiaG9yc2VcIixcImhvc3BpdGFsXCIsXCJob3N0XCIsXCJob3RlbFwiLFwiaG91clwiLFwiaG92ZXJcIixcImh1YlwiLFwiaHVnZVwiLFwiaHVtYW5cIixcImh1bWJsZVwiLFwiaHVtb3JcIixcImh1bmRyZWRcIixcImh1bmdyeVwiLFwiaHVudFwiLFwiaHVyZGxlXCIsXCJodXJyeVwiLFwiaHVydFwiLFwiaHVzYmFuZFwiLFwiaHlicmlkXCIsXCJpY2VcIixcImljb25cIixcImlkZWFcIixcImlkZW50aWZ5XCIsXCJpZGxlXCIsXCJpZ25vcmVcIixcImlsbFwiLFwiaWxsZWdhbFwiLFwiaWxsbmVzc1wiLFwiaW1hZ2VcIixcImltaXRhdGVcIixcImltbWVuc2VcIixcImltbXVuZVwiLFwiaW1wYWN0XCIsXCJpbXBvc2VcIixcImltcHJvdmVcIixcImltcHVsc2VcIixcImluY2hcIixcImluY2x1ZGVcIixcImluY29tZVwiLFwiaW5jcmVhc2VcIixcImluZGV4XCIsXCJpbmRpY2F0ZVwiLFwiaW5kb29yXCIsXCJpbmR1c3RyeVwiLFwiaW5mYW50XCIsXCJpbmZsaWN0XCIsXCJpbmZvcm1cIixcImluaGFsZVwiLFwiaW5oZXJpdFwiLFwiaW5pdGlhbFwiLFwiaW5qZWN0XCIsXCJpbmp1cnlcIixcImlubWF0ZVwiLFwiaW5uZXJcIixcImlubm9jZW50XCIsXCJpbnB1dFwiLFwiaW5xdWlyeVwiLFwiaW5zYW5lXCIsXCJpbnNlY3RcIixcImluc2lkZVwiLFwiaW5zcGlyZVwiLFwiaW5zdGFsbFwiLFwiaW50YWN0XCIsXCJpbnRlcmVzdFwiLFwiaW50b1wiLFwiaW52ZXN0XCIsXCJpbnZpdGVcIixcImludm9sdmVcIixcImlyb25cIixcImlzbGFuZFwiLFwiaXNvbGF0ZVwiLFwiaXNzdWVcIixcIml0ZW1cIixcIml2b3J5XCIsXCJqYWNrZXRcIixcImphZ3VhclwiLFwiamFyXCIsXCJqYXp6XCIsXCJqZWFsb3VzXCIsXCJqZWFuc1wiLFwiamVsbHlcIixcImpld2VsXCIsXCJqb2JcIixcImpvaW5cIixcImpva2VcIixcImpvdXJuZXlcIixcImpveVwiLFwianVkZ2VcIixcImp1aWNlXCIsXCJqdW1wXCIsXCJqdW5nbGVcIixcImp1bmlvclwiLFwianVua1wiLFwianVzdFwiLFwia2FuZ2Fyb29cIixcImtlZW5cIixcImtlZXBcIixcImtldGNodXBcIixcImtleVwiLFwia2lja1wiLFwia2lkXCIsXCJraWRuZXlcIixcImtpbmRcIixcImtpbmdkb21cIixcImtpc3NcIixcImtpdFwiLFwia2l0Y2hlblwiLFwia2l0ZVwiLFwia2l0dGVuXCIsXCJraXdpXCIsXCJrbmVlXCIsXCJrbmlmZVwiLFwia25vY2tcIixcImtub3dcIixcImxhYlwiLFwibGFiZWxcIixcImxhYm9yXCIsXCJsYWRkZXJcIixcImxhZHlcIixcImxha2VcIixcImxhbXBcIixcImxhbmd1YWdlXCIsXCJsYXB0b3BcIixcImxhcmdlXCIsXCJsYXRlclwiLFwibGF0aW5cIixcImxhdWdoXCIsXCJsYXVuZHJ5XCIsXCJsYXZhXCIsXCJsYXdcIixcImxhd25cIixcImxhd3N1aXRcIixcImxheWVyXCIsXCJsYXp5XCIsXCJsZWFkZXJcIixcImxlYWZcIixcImxlYXJuXCIsXCJsZWF2ZVwiLFwibGVjdHVyZVwiLFwibGVmdFwiLFwibGVnXCIsXCJsZWdhbFwiLFwibGVnZW5kXCIsXCJsZWlzdXJlXCIsXCJsZW1vblwiLFwibGVuZFwiLFwibGVuZ3RoXCIsXCJsZW5zXCIsXCJsZW9wYXJkXCIsXCJsZXNzb25cIixcImxldHRlclwiLFwibGV2ZWxcIixcImxpYXJcIixcImxpYmVydHlcIixcImxpYnJhcnlcIixcImxpY2Vuc2VcIixcImxpZmVcIixcImxpZnRcIixcImxpZ2h0XCIsXCJsaWtlXCIsXCJsaW1iXCIsXCJsaW1pdFwiLFwibGlua1wiLFwibGlvblwiLFwibGlxdWlkXCIsXCJsaXN0XCIsXCJsaXR0bGVcIixcImxpdmVcIixcImxpemFyZFwiLFwibG9hZFwiLFwibG9hblwiLFwibG9ic3RlclwiLFwibG9jYWxcIixcImxvY2tcIixcImxvZ2ljXCIsXCJsb25lbHlcIixcImxvbmdcIixcImxvb3BcIixcImxvdHRlcnlcIixcImxvdWRcIixcImxvdW5nZVwiLFwibG92ZVwiLFwibG95YWxcIixcImx1Y2t5XCIsXCJsdWdnYWdlXCIsXCJsdW1iZXJcIixcImx1bmFyXCIsXCJsdW5jaFwiLFwibHV4dXJ5XCIsXCJseXJpY3NcIixcIm1hY2hpbmVcIixcIm1hZFwiLFwibWFnaWNcIixcIm1hZ25ldFwiLFwibWFpZFwiLFwibWFpbFwiLFwibWFpblwiLFwibWFqb3JcIixcIm1ha2VcIixcIm1hbW1hbFwiLFwibWFuXCIsXCJtYW5hZ2VcIixcIm1hbmRhdGVcIixcIm1hbmdvXCIsXCJtYW5zaW9uXCIsXCJtYW51YWxcIixcIm1hcGxlXCIsXCJtYXJibGVcIixcIm1hcmNoXCIsXCJtYXJnaW5cIixcIm1hcmluZVwiLFwibWFya2V0XCIsXCJtYXJyaWFnZVwiLFwibWFza1wiLFwibWFzc1wiLFwibWFzdGVyXCIsXCJtYXRjaFwiLFwibWF0ZXJpYWxcIixcIm1hdGhcIixcIm1hdHJpeFwiLFwibWF0dGVyXCIsXCJtYXhpbXVtXCIsXCJtYXplXCIsXCJtZWFkb3dcIixcIm1lYW5cIixcIm1lYXN1cmVcIixcIm1lYXRcIixcIm1lY2hhbmljXCIsXCJtZWRhbFwiLFwibWVkaWFcIixcIm1lbG9keVwiLFwibWVsdFwiLFwibWVtYmVyXCIsXCJtZW1vcnlcIixcIm1lbnRpb25cIixcIm1lbnVcIixcIm1lcmN5XCIsXCJtZXJnZVwiLFwibWVyaXRcIixcIm1lcnJ5XCIsXCJtZXNoXCIsXCJtZXNzYWdlXCIsXCJtZXRhbFwiLFwibWV0aG9kXCIsXCJtaWRkbGVcIixcIm1pZG5pZ2h0XCIsXCJtaWxrXCIsXCJtaWxsaW9uXCIsXCJtaW1pY1wiLFwibWluZFwiLFwibWluaW11bVwiLFwibWlub3JcIixcIm1pbnV0ZVwiLFwibWlyYWNsZVwiLFwibWlycm9yXCIsXCJtaXNlcnlcIixcIm1pc3NcIixcIm1pc3Rha2VcIixcIm1peFwiLFwibWl4ZWRcIixcIm1peHR1cmVcIixcIm1vYmlsZVwiLFwibW9kZWxcIixcIm1vZGlmeVwiLFwibW9tXCIsXCJtb21lbnRcIixcIm1vbml0b3JcIixcIm1vbmtleVwiLFwibW9uc3RlclwiLFwibW9udGhcIixcIm1vb25cIixcIm1vcmFsXCIsXCJtb3JlXCIsXCJtb3JuaW5nXCIsXCJtb3NxdWl0b1wiLFwibW90aGVyXCIsXCJtb3Rpb25cIixcIm1vdG9yXCIsXCJtb3VudGFpblwiLFwibW91c2VcIixcIm1vdmVcIixcIm1vdmllXCIsXCJtdWNoXCIsXCJtdWZmaW5cIixcIm11bGVcIixcIm11bHRpcGx5XCIsXCJtdXNjbGVcIixcIm11c2V1bVwiLFwibXVzaHJvb21cIixcIm11c2ljXCIsXCJtdXN0XCIsXCJtdXR1YWxcIixcIm15c2VsZlwiLFwibXlzdGVyeVwiLFwibXl0aFwiLFwibmFpdmVcIixcIm5hbWVcIixcIm5hcGtpblwiLFwibmFycm93XCIsXCJuYXN0eVwiLFwibmF0aW9uXCIsXCJuYXR1cmVcIixcIm5lYXJcIixcIm5lY2tcIixcIm5lZWRcIixcIm5lZ2F0aXZlXCIsXCJuZWdsZWN0XCIsXCJuZWl0aGVyXCIsXCJuZXBoZXdcIixcIm5lcnZlXCIsXCJuZXN0XCIsXCJuZXRcIixcIm5ldHdvcmtcIixcIm5ldXRyYWxcIixcIm5ldmVyXCIsXCJuZXdzXCIsXCJuZXh0XCIsXCJuaWNlXCIsXCJuaWdodFwiLFwibm9ibGVcIixcIm5vaXNlXCIsXCJub21pbmVlXCIsXCJub29kbGVcIixcIm5vcm1hbFwiLFwibm9ydGhcIixcIm5vc2VcIixcIm5vdGFibGVcIixcIm5vdGVcIixcIm5vdGhpbmdcIixcIm5vdGljZVwiLFwibm92ZWxcIixcIm5vd1wiLFwibnVjbGVhclwiLFwibnVtYmVyXCIsXCJudXJzZVwiLFwibnV0XCIsXCJvYWtcIixcIm9iZXlcIixcIm9iamVjdFwiLFwib2JsaWdlXCIsXCJvYnNjdXJlXCIsXCJvYnNlcnZlXCIsXCJvYnRhaW5cIixcIm9idmlvdXNcIixcIm9jY3VyXCIsXCJvY2VhblwiLFwib2N0b2JlclwiLFwib2RvclwiLFwib2ZmXCIsXCJvZmZlclwiLFwib2ZmaWNlXCIsXCJvZnRlblwiLFwib2lsXCIsXCJva2F5XCIsXCJvbGRcIixcIm9saXZlXCIsXCJvbHltcGljXCIsXCJvbWl0XCIsXCJvbmNlXCIsXCJvbmVcIixcIm9uaW9uXCIsXCJvbmxpbmVcIixcIm9ubHlcIixcIm9wZW5cIixcIm9wZXJhXCIsXCJvcGluaW9uXCIsXCJvcHBvc2VcIixcIm9wdGlvblwiLFwib3JhbmdlXCIsXCJvcmJpdFwiLFwib3JjaGFyZFwiLFwib3JkZXJcIixcIm9yZGluYXJ5XCIsXCJvcmdhblwiLFwib3JpZW50XCIsXCJvcmlnaW5hbFwiLFwib3JwaGFuXCIsXCJvc3RyaWNoXCIsXCJvdGhlclwiLFwib3V0ZG9vclwiLFwib3V0ZXJcIixcIm91dHB1dFwiLFwib3V0c2lkZVwiLFwib3ZhbFwiLFwib3ZlblwiLFwib3ZlclwiLFwib3duXCIsXCJvd25lclwiLFwib3h5Z2VuXCIsXCJveXN0ZXJcIixcIm96b25lXCIsXCJwYWN0XCIsXCJwYWRkbGVcIixcInBhZ2VcIixcInBhaXJcIixcInBhbGFjZVwiLFwicGFsbVwiLFwicGFuZGFcIixcInBhbmVsXCIsXCJwYW5pY1wiLFwicGFudGhlclwiLFwicGFwZXJcIixcInBhcmFkZVwiLFwicGFyZW50XCIsXCJwYXJrXCIsXCJwYXJyb3RcIixcInBhcnR5XCIsXCJwYXNzXCIsXCJwYXRjaFwiLFwicGF0aFwiLFwicGF0aWVudFwiLFwicGF0cm9sXCIsXCJwYXR0ZXJuXCIsXCJwYXVzZVwiLFwicGF2ZVwiLFwicGF5bWVudFwiLFwicGVhY2VcIixcInBlYW51dFwiLFwicGVhclwiLFwicGVhc2FudFwiLFwicGVsaWNhblwiLFwicGVuXCIsXCJwZW5hbHR5XCIsXCJwZW5jaWxcIixcInBlb3BsZVwiLFwicGVwcGVyXCIsXCJwZXJmZWN0XCIsXCJwZXJtaXRcIixcInBlcnNvblwiLFwicGV0XCIsXCJwaG9uZVwiLFwicGhvdG9cIixcInBocmFzZVwiLFwicGh5c2ljYWxcIixcInBpYW5vXCIsXCJwaWNuaWNcIixcInBpY3R1cmVcIixcInBpZWNlXCIsXCJwaWdcIixcInBpZ2VvblwiLFwicGlsbFwiLFwicGlsb3RcIixcInBpbmtcIixcInBpb25lZXJcIixcInBpcGVcIixcInBpc3RvbFwiLFwicGl0Y2hcIixcInBpenphXCIsXCJwbGFjZVwiLFwicGxhbmV0XCIsXCJwbGFzdGljXCIsXCJwbGF0ZVwiLFwicGxheVwiLFwicGxlYXNlXCIsXCJwbGVkZ2VcIixcInBsdWNrXCIsXCJwbHVnXCIsXCJwbHVuZ2VcIixcInBvZW1cIixcInBvZXRcIixcInBvaW50XCIsXCJwb2xhclwiLFwicG9sZVwiLFwicG9saWNlXCIsXCJwb25kXCIsXCJwb255XCIsXCJwb29sXCIsXCJwb3B1bGFyXCIsXCJwb3J0aW9uXCIsXCJwb3NpdGlvblwiLFwicG9zc2libGVcIixcInBvc3RcIixcInBvdGF0b1wiLFwicG90dGVyeVwiLFwicG92ZXJ0eVwiLFwicG93ZGVyXCIsXCJwb3dlclwiLFwicHJhY3RpY2VcIixcInByYWlzZVwiLFwicHJlZGljdFwiLFwicHJlZmVyXCIsXCJwcmVwYXJlXCIsXCJwcmVzZW50XCIsXCJwcmV0dHlcIixcInByZXZlbnRcIixcInByaWNlXCIsXCJwcmlkZVwiLFwicHJpbWFyeVwiLFwicHJpbnRcIixcInByaW9yaXR5XCIsXCJwcmlzb25cIixcInByaXZhdGVcIixcInByaXplXCIsXCJwcm9ibGVtXCIsXCJwcm9jZXNzXCIsXCJwcm9kdWNlXCIsXCJwcm9maXRcIixcInByb2dyYW1cIixcInByb2plY3RcIixcInByb21vdGVcIixcInByb29mXCIsXCJwcm9wZXJ0eVwiLFwicHJvc3BlclwiLFwicHJvdGVjdFwiLFwicHJvdWRcIixcInByb3ZpZGVcIixcInB1YmxpY1wiLFwicHVkZGluZ1wiLFwicHVsbFwiLFwicHVscFwiLFwicHVsc2VcIixcInB1bXBraW5cIixcInB1bmNoXCIsXCJwdXBpbFwiLFwicHVwcHlcIixcInB1cmNoYXNlXCIsXCJwdXJpdHlcIixcInB1cnBvc2VcIixcInB1cnNlXCIsXCJwdXNoXCIsXCJwdXRcIixcInB1enpsZVwiLFwicHlyYW1pZFwiLFwicXVhbGl0eVwiLFwicXVhbnR1bVwiLFwicXVhcnRlclwiLFwicXVlc3Rpb25cIixcInF1aWNrXCIsXCJxdWl0XCIsXCJxdWl6XCIsXCJxdW90ZVwiLFwicmFiYml0XCIsXCJyYWNjb29uXCIsXCJyYWNlXCIsXCJyYWNrXCIsXCJyYWRhclwiLFwicmFkaW9cIixcInJhaWxcIixcInJhaW5cIixcInJhaXNlXCIsXCJyYWxseVwiLFwicmFtcFwiLFwicmFuY2hcIixcInJhbmRvbVwiLFwicmFuZ2VcIixcInJhcGlkXCIsXCJyYXJlXCIsXCJyYXRlXCIsXCJyYXRoZXJcIixcInJhdmVuXCIsXCJyYXdcIixcInJhem9yXCIsXCJyZWFkeVwiLFwicmVhbFwiLFwicmVhc29uXCIsXCJyZWJlbFwiLFwicmVidWlsZFwiLFwicmVjYWxsXCIsXCJyZWNlaXZlXCIsXCJyZWNpcGVcIixcInJlY29yZFwiLFwicmVjeWNsZVwiLFwicmVkdWNlXCIsXCJyZWZsZWN0XCIsXCJyZWZvcm1cIixcInJlZnVzZVwiLFwicmVnaW9uXCIsXCJyZWdyZXRcIixcInJlZ3VsYXJcIixcInJlamVjdFwiLFwicmVsYXhcIixcInJlbGVhc2VcIixcInJlbGllZlwiLFwicmVseVwiLFwicmVtYWluXCIsXCJyZW1lbWJlclwiLFwicmVtaW5kXCIsXCJyZW1vdmVcIixcInJlbmRlclwiLFwicmVuZXdcIixcInJlbnRcIixcInJlb3BlblwiLFwicmVwYWlyXCIsXCJyZXBlYXRcIixcInJlcGxhY2VcIixcInJlcG9ydFwiLFwicmVxdWlyZVwiLFwicmVzY3VlXCIsXCJyZXNlbWJsZVwiLFwicmVzaXN0XCIsXCJyZXNvdXJjZVwiLFwicmVzcG9uc2VcIixcInJlc3VsdFwiLFwicmV0aXJlXCIsXCJyZXRyZWF0XCIsXCJyZXR1cm5cIixcInJldW5pb25cIixcInJldmVhbFwiLFwicmV2aWV3XCIsXCJyZXdhcmRcIixcInJoeXRobVwiLFwicmliXCIsXCJyaWJib25cIixcInJpY2VcIixcInJpY2hcIixcInJpZGVcIixcInJpZGdlXCIsXCJyaWZsZVwiLFwicmlnaHRcIixcInJpZ2lkXCIsXCJyaW5nXCIsXCJyaW90XCIsXCJyaXBwbGVcIixcInJpc2tcIixcInJpdHVhbFwiLFwicml2YWxcIixcInJpdmVyXCIsXCJyb2FkXCIsXCJyb2FzdFwiLFwicm9ib3RcIixcInJvYnVzdFwiLFwicm9ja2V0XCIsXCJyb21hbmNlXCIsXCJyb29mXCIsXCJyb29raWVcIixcInJvb21cIixcInJvc2VcIixcInJvdGF0ZVwiLFwicm91Z2hcIixcInJvdW5kXCIsXCJyb3V0ZVwiLFwicm95YWxcIixcInJ1YmJlclwiLFwicnVkZVwiLFwicnVnXCIsXCJydWxlXCIsXCJydW5cIixcInJ1bndheVwiLFwicnVyYWxcIixcInNhZFwiLFwic2FkZGxlXCIsXCJzYWRuZXNzXCIsXCJzYWZlXCIsXCJzYWlsXCIsXCJzYWxhZFwiLFwic2FsbW9uXCIsXCJzYWxvblwiLFwic2FsdFwiLFwic2FsdXRlXCIsXCJzYW1lXCIsXCJzYW1wbGVcIixcInNhbmRcIixcInNhdGlzZnlcIixcInNhdG9zaGlcIixcInNhdWNlXCIsXCJzYXVzYWdlXCIsXCJzYXZlXCIsXCJzYXlcIixcInNjYWxlXCIsXCJzY2FuXCIsXCJzY2FyZVwiLFwic2NhdHRlclwiLFwic2NlbmVcIixcInNjaGVtZVwiLFwic2Nob29sXCIsXCJzY2llbmNlXCIsXCJzY2lzc29yc1wiLFwic2NvcnBpb25cIixcInNjb3V0XCIsXCJzY3JhcFwiLFwic2NyZWVuXCIsXCJzY3JpcHRcIixcInNjcnViXCIsXCJzZWFcIixcInNlYXJjaFwiLFwic2Vhc29uXCIsXCJzZWF0XCIsXCJzZWNvbmRcIixcInNlY3JldFwiLFwic2VjdGlvblwiLFwic2VjdXJpdHlcIixcInNlZWRcIixcInNlZWtcIixcInNlZ21lbnRcIixcInNlbGVjdFwiLFwic2VsbFwiLFwic2VtaW5hclwiLFwic2VuaW9yXCIsXCJzZW5zZVwiLFwic2VudGVuY2VcIixcInNlcmllc1wiLFwic2VydmljZVwiLFwic2Vzc2lvblwiLFwic2V0dGxlXCIsXCJzZXR1cFwiLFwic2V2ZW5cIixcInNoYWRvd1wiLFwic2hhZnRcIixcInNoYWxsb3dcIixcInNoYXJlXCIsXCJzaGVkXCIsXCJzaGVsbFwiLFwic2hlcmlmZlwiLFwic2hpZWxkXCIsXCJzaGlmdFwiLFwic2hpbmVcIixcInNoaXBcIixcInNoaXZlclwiLFwic2hvY2tcIixcInNob2VcIixcInNob290XCIsXCJzaG9wXCIsXCJzaG9ydFwiLFwic2hvdWxkZXJcIixcInNob3ZlXCIsXCJzaHJpbXBcIixcInNocnVnXCIsXCJzaHVmZmxlXCIsXCJzaHlcIixcInNpYmxpbmdcIixcInNpY2tcIixcInNpZGVcIixcInNpZWdlXCIsXCJzaWdodFwiLFwic2lnblwiLFwic2lsZW50XCIsXCJzaWxrXCIsXCJzaWxseVwiLFwic2lsdmVyXCIsXCJzaW1pbGFyXCIsXCJzaW1wbGVcIixcInNpbmNlXCIsXCJzaW5nXCIsXCJzaXJlblwiLFwic2lzdGVyXCIsXCJzaXR1YXRlXCIsXCJzaXhcIixcInNpemVcIixcInNrYXRlXCIsXCJza2V0Y2hcIixcInNraVwiLFwic2tpbGxcIixcInNraW5cIixcInNraXJ0XCIsXCJza3VsbFwiLFwic2xhYlwiLFwic2xhbVwiLFwic2xlZXBcIixcInNsZW5kZXJcIixcInNsaWNlXCIsXCJzbGlkZVwiLFwic2xpZ2h0XCIsXCJzbGltXCIsXCJzbG9nYW5cIixcInNsb3RcIixcInNsb3dcIixcInNsdXNoXCIsXCJzbWFsbFwiLFwic21hcnRcIixcInNtaWxlXCIsXCJzbW9rZVwiLFwic21vb3RoXCIsXCJzbmFja1wiLFwic25ha2VcIixcInNuYXBcIixcInNuaWZmXCIsXCJzbm93XCIsXCJzb2FwXCIsXCJzb2NjZXJcIixcInNvY2lhbFwiLFwic29ja1wiLFwic29kYVwiLFwic29mdFwiLFwic29sYXJcIixcInNvbGRpZXJcIixcInNvbGlkXCIsXCJzb2x1dGlvblwiLFwic29sdmVcIixcInNvbWVvbmVcIixcInNvbmdcIixcInNvb25cIixcInNvcnJ5XCIsXCJzb3J0XCIsXCJzb3VsXCIsXCJzb3VuZFwiLFwic291cFwiLFwic291cmNlXCIsXCJzb3V0aFwiLFwic3BhY2VcIixcInNwYXJlXCIsXCJzcGF0aWFsXCIsXCJzcGF3blwiLFwic3BlYWtcIixcInNwZWNpYWxcIixcInNwZWVkXCIsXCJzcGVsbFwiLFwic3BlbmRcIixcInNwaGVyZVwiLFwic3BpY2VcIixcInNwaWRlclwiLFwic3Bpa2VcIixcInNwaW5cIixcInNwaXJpdFwiLFwic3BsaXRcIixcInNwb2lsXCIsXCJzcG9uc29yXCIsXCJzcG9vblwiLFwic3BvcnRcIixcInNwb3RcIixcInNwcmF5XCIsXCJzcHJlYWRcIixcInNwcmluZ1wiLFwic3B5XCIsXCJzcXVhcmVcIixcInNxdWVlemVcIixcInNxdWlycmVsXCIsXCJzdGFibGVcIixcInN0YWRpdW1cIixcInN0YWZmXCIsXCJzdGFnZVwiLFwic3RhaXJzXCIsXCJzdGFtcFwiLFwic3RhbmRcIixcInN0YXJ0XCIsXCJzdGF0ZVwiLFwic3RheVwiLFwic3RlYWtcIixcInN0ZWVsXCIsXCJzdGVtXCIsXCJzdGVwXCIsXCJzdGVyZW9cIixcInN0aWNrXCIsXCJzdGlsbFwiLFwic3RpbmdcIixcInN0b2NrXCIsXCJzdG9tYWNoXCIsXCJzdG9uZVwiLFwic3Rvb2xcIixcInN0b3J5XCIsXCJzdG92ZVwiLFwic3RyYXRlZ3lcIixcInN0cmVldFwiLFwic3RyaWtlXCIsXCJzdHJvbmdcIixcInN0cnVnZ2xlXCIsXCJzdHVkZW50XCIsXCJzdHVmZlwiLFwic3R1bWJsZVwiLFwic3R5bGVcIixcInN1YmplY3RcIixcInN1Ym1pdFwiLFwic3Vid2F5XCIsXCJzdWNjZXNzXCIsXCJzdWNoXCIsXCJzdWRkZW5cIixcInN1ZmZlclwiLFwic3VnYXJcIixcInN1Z2dlc3RcIixcInN1aXRcIixcInN1bW1lclwiLFwic3VuXCIsXCJzdW5ueVwiLFwic3Vuc2V0XCIsXCJzdXBlclwiLFwic3VwcGx5XCIsXCJzdXByZW1lXCIsXCJzdXJlXCIsXCJzdXJmYWNlXCIsXCJzdXJnZVwiLFwic3VycHJpc2VcIixcInN1cnJvdW5kXCIsXCJzdXJ2ZXlcIixcInN1c3BlY3RcIixcInN1c3RhaW5cIixcInN3YWxsb3dcIixcInN3YW1wXCIsXCJzd2FwXCIsXCJzd2FybVwiLFwic3dlYXJcIixcInN3ZWV0XCIsXCJzd2lmdFwiLFwic3dpbVwiLFwic3dpbmdcIixcInN3aXRjaFwiLFwic3dvcmRcIixcInN5bWJvbFwiLFwic3ltcHRvbVwiLFwic3lydXBcIixcInN5c3RlbVwiLFwidGFibGVcIixcInRhY2tsZVwiLFwidGFnXCIsXCJ0YWlsXCIsXCJ0YWxlbnRcIixcInRhbGtcIixcInRhbmtcIixcInRhcGVcIixcInRhcmdldFwiLFwidGFza1wiLFwidGFzdGVcIixcInRhdHRvb1wiLFwidGF4aVwiLFwidGVhY2hcIixcInRlYW1cIixcInRlbGxcIixcInRlblwiLFwidGVuYW50XCIsXCJ0ZW5uaXNcIixcInRlbnRcIixcInRlcm1cIixcInRlc3RcIixcInRleHRcIixcInRoYW5rXCIsXCJ0aGF0XCIsXCJ0aGVtZVwiLFwidGhlblwiLFwidGhlb3J5XCIsXCJ0aGVyZVwiLFwidGhleVwiLFwidGhpbmdcIixcInRoaXNcIixcInRob3VnaHRcIixcInRocmVlXCIsXCJ0aHJpdmVcIixcInRocm93XCIsXCJ0aHVtYlwiLFwidGh1bmRlclwiLFwidGlja2V0XCIsXCJ0aWRlXCIsXCJ0aWdlclwiLFwidGlsdFwiLFwidGltYmVyXCIsXCJ0aW1lXCIsXCJ0aW55XCIsXCJ0aXBcIixcInRpcmVkXCIsXCJ0aXNzdWVcIixcInRpdGxlXCIsXCJ0b2FzdFwiLFwidG9iYWNjb1wiLFwidG9kYXlcIixcInRvZGRsZXJcIixcInRvZVwiLFwidG9nZXRoZXJcIixcInRvaWxldFwiLFwidG9rZW5cIixcInRvbWF0b1wiLFwidG9tb3Jyb3dcIixcInRvbmVcIixcInRvbmd1ZVwiLFwidG9uaWdodFwiLFwidG9vbFwiLFwidG9vdGhcIixcInRvcFwiLFwidG9waWNcIixcInRvcHBsZVwiLFwidG9yY2hcIixcInRvcm5hZG9cIixcInRvcnRvaXNlXCIsXCJ0b3NzXCIsXCJ0b3RhbFwiLFwidG91cmlzdFwiLFwidG93YXJkXCIsXCJ0b3dlclwiLFwidG93blwiLFwidG95XCIsXCJ0cmFja1wiLFwidHJhZGVcIixcInRyYWZmaWNcIixcInRyYWdpY1wiLFwidHJhaW5cIixcInRyYW5zZmVyXCIsXCJ0cmFwXCIsXCJ0cmFzaFwiLFwidHJhdmVsXCIsXCJ0cmF5XCIsXCJ0cmVhdFwiLFwidHJlZVwiLFwidHJlbmRcIixcInRyaWFsXCIsXCJ0cmliZVwiLFwidHJpY2tcIixcInRyaWdnZXJcIixcInRyaW1cIixcInRyaXBcIixcInRyb3BoeVwiLFwidHJvdWJsZVwiLFwidHJ1Y2tcIixcInRydWVcIixcInRydWx5XCIsXCJ0cnVtcGV0XCIsXCJ0cnVzdFwiLFwidHJ1dGhcIixcInRyeVwiLFwidHViZVwiLFwidHVpdGlvblwiLFwidHVtYmxlXCIsXCJ0dW5hXCIsXCJ0dW5uZWxcIixcInR1cmtleVwiLFwidHVyblwiLFwidHVydGxlXCIsXCJ0d2VsdmVcIixcInR3ZW50eVwiLFwidHdpY2VcIixcInR3aW5cIixcInR3aXN0XCIsXCJ0d29cIixcInR5cGVcIixcInR5cGljYWxcIixcInVnbHlcIixcInVtYnJlbGxhXCIsXCJ1bmFibGVcIixcInVuYXdhcmVcIixcInVuY2xlXCIsXCJ1bmNvdmVyXCIsXCJ1bmRlclwiLFwidW5kb1wiLFwidW5mYWlyXCIsXCJ1bmZvbGRcIixcInVuaGFwcHlcIixcInVuaWZvcm1cIixcInVuaXF1ZVwiLFwidW5pdFwiLFwidW5pdmVyc2VcIixcInVua25vd25cIixcInVubG9ja1wiLFwidW50aWxcIixcInVudXN1YWxcIixcInVudmVpbFwiLFwidXBkYXRlXCIsXCJ1cGdyYWRlXCIsXCJ1cGhvbGRcIixcInVwb25cIixcInVwcGVyXCIsXCJ1cHNldFwiLFwidXJiYW5cIixcInVyZ2VcIixcInVzYWdlXCIsXCJ1c2VcIixcInVzZWRcIixcInVzZWZ1bFwiLFwidXNlbGVzc1wiLFwidXN1YWxcIixcInV0aWxpdHlcIixcInZhY2FudFwiLFwidmFjdXVtXCIsXCJ2YWd1ZVwiLFwidmFsaWRcIixcInZhbGxleVwiLFwidmFsdmVcIixcInZhblwiLFwidmFuaXNoXCIsXCJ2YXBvclwiLFwidmFyaW91c1wiLFwidmFzdFwiLFwidmF1bHRcIixcInZlaGljbGVcIixcInZlbHZldFwiLFwidmVuZG9yXCIsXCJ2ZW50dXJlXCIsXCJ2ZW51ZVwiLFwidmVyYlwiLFwidmVyaWZ5XCIsXCJ2ZXJzaW9uXCIsXCJ2ZXJ5XCIsXCJ2ZXNzZWxcIixcInZldGVyYW5cIixcInZpYWJsZVwiLFwidmlicmFudFwiLFwidmljaW91c1wiLFwidmljdG9yeVwiLFwidmlkZW9cIixcInZpZXdcIixcInZpbGxhZ2VcIixcInZpbnRhZ2VcIixcInZpb2xpblwiLFwidmlydHVhbFwiLFwidmlydXNcIixcInZpc2FcIixcInZpc2l0XCIsXCJ2aXN1YWxcIixcInZpdGFsXCIsXCJ2aXZpZFwiLFwidm9jYWxcIixcInZvaWNlXCIsXCJ2b2lkXCIsXCJ2b2xjYW5vXCIsXCJ2b2x1bWVcIixcInZvdGVcIixcInZveWFnZVwiLFwid2FnZVwiLFwid2Fnb25cIixcIndhaXRcIixcIndhbGtcIixcIndhbGxcIixcIndhbG51dFwiLFwid2FudFwiLFwid2FyZmFyZVwiLFwid2FybVwiLFwid2FycmlvclwiLFwid2FzaFwiLFwid2FzcFwiLFwid2FzdGVcIixcIndhdGVyXCIsXCJ3YXZlXCIsXCJ3YXlcIixcIndlYWx0aFwiLFwid2VhcG9uXCIsXCJ3ZWFyXCIsXCJ3ZWFzZWxcIixcIndlYXRoZXJcIixcIndlYlwiLFwid2VkZGluZ1wiLFwid2Vla2VuZFwiLFwid2VpcmRcIixcIndlbGNvbWVcIixcIndlc3RcIixcIndldFwiLFwid2hhbGVcIixcIndoYXRcIixcIndoZWF0XCIsXCJ3aGVlbFwiLFwid2hlblwiLFwid2hlcmVcIixcIndoaXBcIixcIndoaXNwZXJcIixcIndpZGVcIixcIndpZHRoXCIsXCJ3aWZlXCIsXCJ3aWxkXCIsXCJ3aWxsXCIsXCJ3aW5cIixcIndpbmRvd1wiLFwid2luZVwiLFwid2luZ1wiLFwid2lua1wiLFwid2lubmVyXCIsXCJ3aW50ZXJcIixcIndpcmVcIixcIndpc2RvbVwiLFwid2lzZVwiLFwid2lzaFwiLFwid2l0bmVzc1wiLFwid29sZlwiLFwid29tYW5cIixcIndvbmRlclwiLFwid29vZFwiLFwid29vbFwiLFwid29yZFwiLFwid29ya1wiLFwid29ybGRcIixcIndvcnJ5XCIsXCJ3b3J0aFwiLFwid3JhcFwiLFwid3JlY2tcIixcIndyZXN0bGVcIixcIndyaXN0XCIsXCJ3cml0ZVwiLFwid3JvbmdcIixcInlhcmRcIixcInllYXJcIixcInllbGxvd1wiLFwieW91XCIsXCJ5b3VuZ1wiLFwieW91dGhcIixcInplYnJhXCIsXCJ6ZXJvXCIsXCJ6b25lXCIsXCJ6b29cIl07dmFyIG89cig5NDA0KSxzPXIoNzExNik7Y29uc3QgaT1cImZhaWxlZCB0byBkZWNvZGUgbW5lbW9uaWNcIjtmdW5jdGlvbiBhKGUpe2NvbnN0IHQ9W107bGV0IHI9MCxuPTA7cmV0dXJuIGUuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cnw9ZTw8bixuKz04LG4+PTExJiYodC5wdXNoKDIwNDcmcikscj4+PTExLG4tPTExKX0pKSxuJiZ0LnB1c2gociksdH1mdW5jdGlvbiBjKGUpe3JldHVybiBlLm1hcCgoZT0+bltlXSkpfWZ1bmN0aW9uIHUoZSl7cmV0dXJuIGMoYShvLmdlbmVyaWNIYXNoKGUpKSlbMF19ZnVuY3Rpb24gbChlKXtpZihlLmxlbmd0aCE9PW8uU0VFRF9CVFlFU19MRU5HVEgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoYFNlZWQgbGVuZ3RoIG11c3QgYmUgJHtvLlNFRURfQlRZRVNfTEVOR1RIfWApO2NvbnN0IHQ9YyhhKGUpKSxyPXUoZSk7cmV0dXJuYCR7dC5qb2luKFwiIFwiKX0gJHtyfWB9ZnVuY3Rpb24gaChlKXtjb25zdCB0PWUuc3BsaXQoXCIgXCIpLHI9dC5zbGljZSgwLDI0KTtmb3IoY29uc3QgZSBvZiByKWlmKC0xPT09bi5pbmRleE9mKGUpKXRocm93IG5ldyBFcnJvcihcInRoZSBtbmVtb25pYyBjb250YWlucyBhIHdvcmQgdGhhdCBpcyBub3QgaW4gdGhlIHdvcmRsaXN0XCIpO2NvbnN0IG89dFt0Lmxlbmd0aC0xXTtsZXQgcz1mdW5jdGlvbihlKXtjb25zdCB0PVtdO2xldCByPTAsbj0wO3JldHVybiBlLmZvckVhY2goKGZ1bmN0aW9uKGUpe2ZvcihyfD1lPDxuLG4rPTExO24+PTg7KXQucHVzaCgyNTUmcikscj4+PTgsbi09OH0pKSxuJiZ0LnB1c2gociksbmV3IFVpbnQ4QXJyYXkodCl9KHIubWFwKChlPT5uLmluZGV4T2YoZSkpKSk7aWYoMzMhPT1zLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoaSk7aWYoMCE9PXNbcy5sZW5ndGgtMV0pdGhyb3cgbmV3IEVycm9yKGkpO2lmKHM9cy5zbGljZSgwLHMubGVuZ3RoLTEpLHUocyk9PT1vKXJldHVybiBzO3Rocm93IG5ldyBFcnJvcihpKX1mdW5jdGlvbiBwKGUpe2NvbnN0IHQ9aChlKSxyPW8ua2V5UGFpckZyb21TZWVkKHQpO3JldHVybnthZGRyOnMuZW5jb2RlQWRkcmVzcyhyLnB1YmxpY0tleSksc2s6ci5zZWNyZXRLZXl9fWZ1bmN0aW9uIGYoZSl7cmV0dXJuIGwoZS5zbGljZSgwLG8uU0VFRF9CVFlFU19MRU5HVEgpKX1mdW5jdGlvbiBkKGUpe3JldHVybiBoKGUpfWZ1bmN0aW9uIGcoZSl7cmV0dXJuIGwoZSl9fSw0MTU4OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7SjY6KCk9PnAsRjI6KCk9PmYsUFU6KCk9PmQsUE86KCk9Pmcsdkg6KCk9Pnl9KTt2YXIgbj1yKDk0MDQpLG89cig3MTE2KSxzPXIoMzAzMyksaT1yKDk0MTcpLGE9cig0MTMpLGM9cigyNDg2KS5CdWZmZXI7Y29uc3QgdT1cIkNhbm5vdCBtZXJnZSB0eHMuIE11bHRpc2lnIHByZWltYWdlcyBkaWZmZXJcIixsPVwiQ2Fubm90IG11dGF0ZSBhIG11bHRpc2lnIGZpZWxkIGFzIGl0IHdvdWxkIGludmFsaWRhdGUgYWxsIGV4aXN0aW5nIHNpZ25hdHVyZXMuXCI7Y2xhc3MgaCBleHRlbmRzIGkuVHJhbnNhY3Rpb257YWRkTGVhc2UoKXt0aHJvdyBuZXcgRXJyb3IobCl9YWRkUmVrZXkoKXt0aHJvdyBuZXcgRXJyb3IobCl9c2lnblR4bihlKXt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2lnbiBhIG11bHRpc2lnIHRyYW5zYWN0aW9uIHVzaW5nIGBzaWduVHhuYC4gVXNlIGBwYXJ0aWFsU2lnblR4bmAgaW5zdGVhZC5cIil9cGFydGlhbFNpZ25UeG4oe3ZlcnNpb246ZSx0aHJlc2hvbGQ6dCxwa3M6cn0saSl7Y29uc3QgYT1uLmtleVBhaXJGcm9tU2VjcmV0S2V5KGkpLnB1YmxpY0tleTtyZXR1cm4gZnVuY3Rpb24oZSx7cmF3U2lnOnQsbXlQazpyfSx7dmVyc2lvbjppLHRocmVzaG9sZDphLHBrczp1fSl7bGV0IGw9ITE7Y29uc3QgaD11Lm1hcCgoZT0+bi5ieXRlc0VxdWFsKGUscik/KGw9ITAse3BrOmMuZnJvbShlKSxzOnR9KTp7cGs6Yy5mcm9tKGUpfSkpO2lmKCExPT09bCl0aHJvdyBuZXcgRXJyb3IoXCJLZXkgZG9lcyBub3QgZXhpc3RcIik7Y29uc3QgcD17bXNpZzp7djppLHRocjphLHN1YnNpZzpofSx0eG46ZX0sZj1vLmZyb21NdWx0aXNpZ1ByZUltZyh7dmVyc2lvbjppLHRocmVzaG9sZDphLHBrczp1fSk7cmV0dXJuIG8uZW5jb2RlQWRkcmVzcyhlLnNuZCkhPT1vLmVuY29kZUFkZHJlc3MoZikmJihwLnNnbnI9Yy5mcm9tKGYpKSxuZXcgVWludDhBcnJheShzLmVuY29kZShwKSl9KHRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKSx7cmF3U2lnOnRoaXMucmF3U2lnblR4bihpKSxteVBrOmF9LHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQscGtzOnJ9KX1zdGF0aWMgZnJvbV9vYmpfZm9yX2VuY29kaW5nKGUpe3JldHVybiBzdXBlci5mcm9tX29ial9mb3JfZW5jb2RpbmcoZSl9fWZ1bmN0aW9uIHAoZSl7aWYoZS5sZW5ndGg8Mil0aHJvdyBuZXcgRXJyb3IoXCJOb3QgZW5vdWdoIG11bHRpc2lnIHRyYW5zYWN0aW9ucyB0byBtZXJnZS4gTmVlZCBhdCBsZWFzdCB0d29cIik7Y29uc3QgdD1zLmRlY29kZShlWzBdKSxyPWguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQudHhuKS50eElEKCksbj10LnNnbnI/by5lbmNvZGVBZGRyZXNzKHQuc2ducik6dm9pZCAwLGk9e3ZlcnNpb246dC5tc2lnLnYsdGhyZXNob2xkOnQubXNpZy50aHIscGtzOnQubXNpZy5zdWJzaWcubWFwKChlPT5lLnBrKSl9LGE9by5lbmNvZGVBZGRyZXNzKG8uZnJvbU11bHRpc2lnUHJlSW1nKGkpKTtsZXQgbD10Lm1zaWcuc3Vic2lnO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBwPXMuZGVjb2RlKGVbaV0pO2lmKGguZnJvbV9vYmpfZm9yX2VuY29kaW5nKHAudHhuKS50eElEKCkhPT1yKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBtZXJnZSB0eHMuIHR4SURzIGRpZmZlclwiKTtpZihuIT09KHAuc2ducj9vLmVuY29kZUFkZHJlc3MocC5zZ25yKTp2b2lkIDApKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBtZXJnZSB0eHMuIEF1dGggYWRkcnMgZGlmZmVyXCIpO2lmKHAubXNpZy5zdWJzaWcubGVuZ3RoIT09dC5tc2lnLnN1YnNpZy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKHUpO2NvbnN0IGY9e3ZlcnNpb246cC5tc2lnLnYsdGhyZXNob2xkOnAubXNpZy50aHIscGtzOnAubXNpZy5zdWJzaWcubWFwKChlPT5lLnBrKSl9O2lmKGEhPT1vLmVuY29kZUFkZHJlc3Moby5mcm9tTXVsdGlzaWdQcmVJbWcoZikpKXRocm93IG5ldyBFcnJvcih1KTtsPXAubXNpZy5zdWJzaWcubWFwKCgoZSxyKT0+e2NvbnN0IG49dC5tc2lnLnN1YnNpZ1tyXTtpZihuLnMpe2lmKGUucyYmMCE9PWMuY29tcGFyZShjLmZyb20oZS5zKSxjLmZyb20obi5zKSkpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IG1lcmdlIHR4cy4gc3Vic2lncyBhcmUgbWlzbWF0Y2hlZC5cIik7cmV0dXJue3BrOm4ucGssczpuLnN9fXJldHVybiBlLnM/e3BrOm4ucGssczplLnN9Om59KSl9Y29uc3QgcD17bXNpZzp7djp0Lm1zaWcudix0aHI6dC5tc2lnLnRocixzdWJzaWc6bH0sdHhuOnQudHhufTtyZXR1cm4gdm9pZCAwIT09biYmKHAuc2ducj1jLmZyb20oby5kZWNvZGVBZGRyZXNzKG4pLnB1YmxpY0tleSkpLG5ldyBVaW50OEFycmF5KHMuZW5jb2RlKHApKX1mdW5jdGlvbiBmKGUsdCxyKXtjb25zdCBzPXQudixpPXQudGhyLGM9dC5zdWJzaWcsdT1jLm1hcCgoZT0+ZS5waykpO2lmKHQuc3Vic2lnLmxlbmd0aDxpKXJldHVybiExO2xldCBsO3RyeXtsPW8uZnJvbU11bHRpc2lnUHJlSW1nKHt2ZXJzaW9uOnMsdGhyZXNob2xkOmkscGtzOnV9KX1jYXRjaChlKXtyZXR1cm4hMX1pZighYS5hcnJheUVxdWFsKGwscikpcmV0dXJuITE7bGV0IGg9MDtmb3IoY29uc3QgZSBvZiBjKXZvaWQgMCE9PWUucyYmKGgrPTEpO2lmKGg8aSlyZXR1cm4hMTtsZXQgcD0wO2Zvcihjb25zdCB0IG9mIGMpdm9pZCAwIT09dC5zJiZuLnZlcmlmeShlLHQucyx0LnBrKSYmKHArPTEpO3JldHVybiEocDxpKX1mdW5jdGlvbiBkKGUse3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSxzKXtjb25zdCBhPW8uZnJvbU11bHRpc2lnUHJlSW1nQWRkcnMoe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSk7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJmcm9tXCIpfHwoZS5mcm9tPWEpO2NvbnN0IGM9bi5tYXAoKGU9Pm8uZGVjb2RlQWRkcmVzcyhlKS5wdWJsaWNLZXkpKTtsZXQgdSxsO3JldHVybiBlIGluc3RhbmNlb2YgaS5UcmFuc2FjdGlvbj8odT1lLGw9aC5wcm90b3R5cGUucGFydGlhbFNpZ25UeG4uY2FsbCh1LHt2ZXJzaW9uOnQsdGhyZXNob2xkOnIscGtzOmN9LHMpKToodT1uZXcgaChlKSxsPXUucGFydGlhbFNpZ25UeG4oe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixwa3M6Y30scykpLHt0eElEOnUudHhJRCgpLnRvU3RyaW5nKCksYmxvYjpsfX1mdW5jdGlvbiBnKGUse3ZlcnNpb246dCx0aHJlc2hvbGQ6cixhZGRyczpufSxpKXtjb25zdCBhPW4ubWFwKChlPT5vLmRlY29kZUFkZHJlc3MoZSkucHVibGljS2V5KSksYz1zLmRlY29kZShlKSx1PWguZnJvbV9vYmpfZm9yX2VuY29kaW5nKGMudHhuKSxsPXUucGFydGlhbFNpZ25UeG4oe3ZlcnNpb246dCx0aHJlc2hvbGQ6cixwa3M6YX0saSk7cmV0dXJue3R4SUQ6dS50eElEKCkudG9TdHJpbmcoKSxibG9iOnAoW2UsbF0pfX1mdW5jdGlvbiB5KHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQsYWRkcnM6cn0pe3JldHVybiBvLmZyb21NdWx0aXNpZ1ByZUltZ0FkZHJzKHt2ZXJzaW9uOmUsdGhyZXNob2xkOnQsYWRkcnM6cn0pfX0sOTQwNDooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtnZW5lcmljSGFzaDooKT0+YSxyYW5kb21CeXRlczooKT0+YyxrZXlQYWlyRnJvbVNlZWQ6KCk9PnUsa2V5UGFpcjooKT0+bCxrZXlQYWlyRnJvbVNlY3JldEtleTooKT0+aCxzaWduOigpPT5wLGJ5dGVzRXF1YWw6KCk9PmYsdmVyaWZ5OigpPT5kLFBVQkxJQ19LRVlfTEVOR1RIOigpPT5nLFNFQ1JFVF9LRVlfTEVOR1RIOigpPT55LEhBU0hfQllURVNfTEVOR1RIOigpPT5tLFNFRURfQlRZRVNfTEVOR1RIOigpPT5ifSk7dmFyIG49cig3NzY1KSxvPXIubihuKSxzPXIoOTc1NyksaT1yLm4ocyk7ZnVuY3Rpb24gYShlKXtyZXR1cm4gaSgpLnNoYTUxMl8yNTYuYXJyYXkoZSl9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gbygpLnJhbmRvbUJ5dGVzKGUpfWZ1bmN0aW9uIHUoZSl7cmV0dXJuIG8oKS5zaWduLmtleVBhaXIuZnJvbVNlZWQoZSl9ZnVuY3Rpb24gbCgpe3JldHVybiB1KGMobygpLmJveC5zZWNyZXRLZXlMZW5ndGgpKX1mdW5jdGlvbiBoKGUpe3JldHVybiBvKCkuc2lnbi5rZXlQYWlyLmZyb21TZWNyZXRLZXkoZSl9ZnVuY3Rpb24gcChlLHQpe3JldHVybiBvKCkuc2lnbi5kZXRhY2hlZChlLHQpfWZ1bmN0aW9uIGYoZSx0KXtyZXR1cm4gbygpLnZlcmlmeShlLHQpfWZ1bmN0aW9uIGQoZSx0LHIpe3JldHVybiBvKCkuc2lnbi5kZXRhY2hlZC52ZXJpZnkoZSx0LHIpfWNvbnN0IGc9bygpLnNpZ24ucHVibGljS2V5TGVuZ3RoLHk9bygpLnNpZ24uc2VjcmV0S2V5TGVuZ3RoLG09MzIsYj0zMn0sODM0OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7eDc6KCk9PnMsaTE6KCk9PmksVmo6KCk9PmEsWHc6KCk9PmN9KTt2YXIgbj1yKDg4MDApLG89cig0MTU4KTtmdW5jdGlvbiBzKGUpe3JldHVybih0LHIpPT57Y29uc3Qgbj1bXTtmb3IoY29uc3QgbyBvZiByKW4ucHVzaCh0W29dLnNpZ25UeG4oZS5zaykpO3JldHVybiBQcm9taXNlLnJlc29sdmUobil9fWZ1bmN0aW9uIGkoZSl7cmV0dXJuKHQscik9Pntjb25zdCBvPVtdO2Zvcihjb25zdCBzIG9mIHIpe2NvbnN0e2Jsb2I6cn09KDAsbi5zaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdCkodFtzXSxlKTtvLnB1c2gocil9cmV0dXJuIFByb21pc2UucmVzb2x2ZShvKX19ZnVuY3Rpb24gYShlLHQpe3JldHVybihyLG4pPT57Y29uc3Qgcz1bXTtmb3IoY29uc3QgaSBvZiBuKXtjb25zdCBuPXJbaV0sYT1bXTtmb3IoY29uc3QgciBvZiB0KXtjb25zdHtibG9iOnR9PSgwLG8uUFUpKG4sZSxyKTthLnB1c2godCl9cy5wdXNoKCgwLG8uSjYpKGEpKX1yZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHMpfX1mdW5jdGlvbiBjKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiYyPT09T2JqZWN0LmtleXMoZSkubGVuZ3RoJiZcIm9iamVjdFwiPT10eXBlb2YgZS50eG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuc2lnbmVyfX0sOTQxNzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtBTEdPUkFORF9NSU5fVFhfRkVFOigpPT5oLFRyYW5zYWN0aW9uOigpPT5mLGVuY29kZVVuc2lnbmVkVHJhbnNhY3Rpb246KCk9PmQsZGVjb2RlVW5zaWduZWRUcmFuc2FjdGlvbjooKT0+ZyxkZWNvZGVTaWduZWRUcmFuc2FjdGlvbjooKT0+eSxpbnN0YW50aWF0ZVR4bklmTmVlZGVkOigpPT5tLGRlZmF1bHQ6KCk9PmJ9KTt2YXIgbj1yKDcyNjcpLG89ci5uKG4pLHM9cig3MTE2KSxpPXIoMzAzMyksYT1yKDk0MDQpLGM9cig0MTMpLHU9cigxNjI0KSxsPXIoMjQ4NikuQnVmZmVyO2NvbnN0IGg9MWUzO2Z1bmN0aW9uIHAoZSx0LHIpe2lmKG51bGw9PWUpcmV0dXJuO2xldCBuO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlP249bC5mcm9tKGUsXCJiYXNlNjRcIik6ZS5jb25zdHJ1Y3Rvcj09PVVpbnQ4QXJyYXk/bj1sLmZyb20oZSk6bC5pc0J1ZmZlcihlKSYmKG49ZSksbnVsbD09bnx8bi5ieXRlTGVuZ3RoIT09cil0aHJvdyBFcnJvcihgJHt0fSBtdXN0IGJlIGEgJHtyfSBieXRlIFVpbnQ4QXJyYXkgb3IgQnVmZmVyIG9yIGJhc2U2NCBzdHJpbmcuYCk7cmV0dXJuIG59Y2xhc3MgZntjb25zdHJ1Y3Rvcih7Li4uZX0pe3RoaXMubmFtZT1cIlRyYW5zYWN0aW9uXCIsdGhpcy50YWc9bC5mcm9tKFwiVFhcIik7Y29uc3QgdD17dHlwZTp1LmlVLnBheSxmbGF0RmVlOiExLG5vblBhcnRpY2lwYXRpb246ITF9O2lmKHZvaWQgMD09PWUudHlwZSYmKGUudHlwZT10LnR5cGUpLHZvaWQgMD09PWUuZmxhdEZlZSYmKGUuZmxhdEZlZT10LmZsYXRGZWUpLGUudHlwZT09PXUuaVUua2V5cmVnJiZ2b2lkIDAhPT1lLnZvdGVLZXkmJnZvaWQgMD09PWUubm9uUGFydGljaXBhdGlvbiYmKGUubm9uUGFydGljaXBhdGlvbj10Lm5vblBhcnRpY2lwYXRpb24pLHZvaWQgMCE9PWUuc3VnZ2VzdGVkUGFyYW1zKXtjb25zdCB0PWU7dC5nZW5lc2lzSGFzaD10LnN1Z2dlc3RlZFBhcmFtcy5nZW5lc2lzSGFzaCx0LmZlZT10LnN1Z2dlc3RlZFBhcmFtcy5mZWUsdm9pZCAwIT09dC5zdWdnZXN0ZWRQYXJhbXMuZmxhdEZlZSYmKHQuZmxhdEZlZT10LnN1Z2dlc3RlZFBhcmFtcy5mbGF0RmVlKSx0LmZpcnN0Um91bmQ9dC5zdWdnZXN0ZWRQYXJhbXMuZmlyc3RSb3VuZCx0Lmxhc3RSb3VuZD10LnN1Z2dlc3RlZFBhcmFtcy5sYXN0Um91bmQsdC5nZW5lc2lzSUQ9dC5zdWdnZXN0ZWRQYXJhbXMuZ2VuZXNpc0lEfWNvbnN0IHI9ZTtpZihyLmZyb209cy5kZWNvZGVBZGRyZXNzKHIuZnJvbSksdm9pZCAwIT09ci50byYmKHIudG89cy5kZWNvZGVBZGRyZXNzKHIudG8pKSx2b2lkIDAhPT1yLmNsb3NlUmVtYWluZGVyVG8mJihyLmNsb3NlUmVtYWluZGVyVG89cy5kZWNvZGVBZGRyZXNzKHIuY2xvc2VSZW1haW5kZXJUbykpLHZvaWQgMCE9PXIuYXNzZXRNYW5hZ2VyJiYoci5hc3NldE1hbmFnZXI9cy5kZWNvZGVBZGRyZXNzKHIuYXNzZXRNYW5hZ2VyKSksdm9pZCAwIT09ci5hc3NldFJlc2VydmUmJihyLmFzc2V0UmVzZXJ2ZT1zLmRlY29kZUFkZHJlc3Moci5hc3NldFJlc2VydmUpKSx2b2lkIDAhPT1yLmFzc2V0RnJlZXplJiYoci5hc3NldEZyZWV6ZT1zLmRlY29kZUFkZHJlc3Moci5hc3NldEZyZWV6ZSkpLHZvaWQgMCE9PXIuYXNzZXRDbGF3YmFjayYmKHIuYXNzZXRDbGF3YmFjaz1zLmRlY29kZUFkZHJlc3Moci5hc3NldENsYXdiYWNrKSksdm9pZCAwIT09ci5hc3NldFJldm9jYXRpb25UYXJnZXQmJihyLmFzc2V0UmV2b2NhdGlvblRhcmdldD1zLmRlY29kZUFkZHJlc3Moci5hc3NldFJldm9jYXRpb25UYXJnZXQpKSx2b2lkIDAhPT1yLmZyZWV6ZUFjY291bnQmJihyLmZyZWV6ZUFjY291bnQ9cy5kZWNvZGVBZGRyZXNzKHIuZnJlZXplQWNjb3VudCkpLHZvaWQgMCE9PXIucmVLZXlUbyYmKHIucmVLZXlUbz1zLmRlY29kZUFkZHJlc3Moci5yZUtleVRvKSksdm9pZCAwPT09ci5nZW5lc2lzSGFzaCl0aHJvdyBFcnJvcihcImdlbmVzaXMgaGFzaCBtdXN0IGJlIHNwZWNpZmllZCBhbmQgaW4gYSBiYXNlNjQgc3RyaW5nLlwiKTtpZihyLmdlbmVzaXNIYXNoPWwuZnJvbShyLmdlbmVzaXNIYXNoLFwiYmFzZTY0XCIpLHZvaWQgMCE9PXIuYW1vdW50JiYoIShOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFtb3VudCl8fFwiYmlnaW50XCI9PXR5cGVvZiByLmFtb3VudCYmci5hbW91bnQ8PUJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl8fHIuYW1vdW50PDApKXRocm93IEVycm9yKFwiQW1vdW50IG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjY0LTEuIElmIHRoZSBudW1iZXIgaXMgbGFyZ2VyIHRoYW4gMl41My0xLCB1c2UgYmlnaW50LlwiKTtpZighTnVtYmVyLmlzU2FmZUludGVnZXIoci5mZWUpfHxyLmZlZTwwKXRocm93IEVycm9yKFwiZmVlIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIgYW5kIHNtYWxsZXIgdGhhbiAyXjUzLTFcIik7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuZmlyc3RSb3VuZCl8fHIuZmlyc3RSb3VuZDwwKXRocm93IEVycm9yKFwiZmlyc3RSb3VuZCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyXCIpO2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmxhc3RSb3VuZCl8fHIubGFzdFJvdW5kPDApdGhyb3cgRXJyb3IoXCJsYXN0Um91bmQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlclwiKTtpZih2b2lkIDAhPT1yLmV4dHJhUGFnZXMmJighTnVtYmVyLmlzSW50ZWdlcihyLmV4dHJhUGFnZXMpfHxyLmV4dHJhUGFnZXM8MHx8ci5leHRyYVBhZ2VzPjMpKXRocm93IEVycm9yKFwiZXh0cmFQYWdlcyBtdXN0IGJlIGFuIEludGVnZXIgYmV0d2VlbiBhbmQgaW5jbHVkaW5nIDAgdG8gM1wiKTtpZih2b2lkIDAhPT1yLmFzc2V0VG90YWwmJighKE51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXNzZXRUb3RhbCl8fFwiYmlnaW50XCI9PXR5cGVvZiByLmFzc2V0VG90YWwmJnIuYXNzZXRUb3RhbDw9QmlnSW50KFwiMHhmZmZmZmZmZmZmZmZmZmZmXCIpKXx8ci5hc3NldFRvdGFsPDApKXRocm93IEVycm9yKFwiVG90YWwgYXNzZXQgaXNzdWFuY2UgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNjQtMS4gSWYgdGhlIG51bWJlciBpcyBsYXJnZXIgdGhhbiAyXjUzLTEsIHVzZSBiaWdpbnQuXCIpO2lmKHZvaWQgMCE9PXIuYXNzZXREZWNpbWFscyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFzc2V0RGVjaW1hbHMpfHxyLmFzc2V0RGVjaW1hbHM8MHx8ci5hc3NldERlY2ltYWxzPjE5KSl0aHJvdyBFcnJvcihgYXNzZXREZWNpbWFscyBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gJHsxOS4udG9TdHJpbmcoKX1gKTtpZih2b2lkIDAhPT1yLmFzc2V0SW5kZXgmJighTnVtYmVyLmlzU2FmZUludGVnZXIoci5hc3NldEluZGV4KXx8ci5hc3NldEluZGV4PDApKXRocm93IEVycm9yKFwiQXNzZXQgaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcEluZGV4JiYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXBwSW5kZXgpfHxyLmFwcEluZGV4PDApKXRocm93IEVycm9yKFwiQXBwbGljYXRpb24gaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcExvY2FsSW50cyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcExvY2FsSW50cyl8fHIuYXBwTG9jYWxJbnRzPDApKXRocm93IEVycm9yKFwiQXBwbGljYXRpb24gbG9jYWwgaW50cyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwTG9jYWxCeXRlU2xpY2VzJiYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHIuYXBwTG9jYWxCeXRlU2xpY2VzKXx8ci5hcHBMb2NhbEJ5dGVTbGljZXM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBsb2NhbCBieXRlIHNsaWNlcyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwR2xvYmFsSW50cyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcEdsb2JhbEludHMpfHxyLmFwcEdsb2JhbEludHM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBnbG9iYWwgaW50cyBjb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpO2lmKHZvaWQgMCE9PXIuYXBwR2xvYmFsQnl0ZVNsaWNlcyYmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihyLmFwcEdsb2JhbEJ5dGVTbGljZXMpfHxyLmFwcEdsb2JhbEJ5dGVTbGljZXM8MCkpdGhyb3cgRXJyb3IoXCJBcHBsaWNhdGlvbiBnbG9iYWwgYnl0ZSBzbGljZXMgY291bnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKTtpZih2b2lkIDAhPT1yLmFwcEFwcHJvdmFsUHJvZ3JhbSYmci5hcHBBcHByb3ZhbFByb2dyYW0uY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwiYXBwQXBwcm92YWxQcm9ncmFtIG11c3QgYmUgYSBVaW50OEFycmF5LlwiKTtpZih2b2lkIDAhPT1yLmFwcENsZWFyUHJvZ3JhbSYmci5hcHBDbGVhclByb2dyYW0uY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwiYXBwQ2xlYXJQcm9ncmFtIG11c3QgYmUgYSBVaW50OEFycmF5LlwiKTtpZih2b2lkIDAhPT1yLmFwcEFyZ3Mpe2lmKCFBcnJheS5pc0FycmF5KHIuYXBwQXJncykpdGhyb3cgRXJyb3IoXCJhcHBBcmdzIG11c3QgYmUgYW4gQXJyYXkgb2YgVWludDhBcnJheS5cIik7ci5hcHBBcmdzPXIuYXBwQXJncy5zbGljZSgpLHIuYXBwQXJncy5mb3JFYWNoKChlPT57aWYoZS5jb25zdHJ1Y3RvciE9PVVpbnQ4QXJyYXkpdGhyb3cgRXJyb3IoXCJlYWNoIGVsZW1lbnQgb2YgQXBwQXJncyBtdXN0IGJlIGEgVWludDhBcnJheS5cIil9KSl9ZWxzZSByLmFwcEFyZ3M9W107aWYodm9pZCAwIT09ci5hcHBBY2NvdW50cyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBBY2NvdW50cykpdGhyb3cgRXJyb3IoXCJhcHBBY2NvdW50cyBtdXN0IGJlIGFuIEFycmF5IG9mIGFkZHJlc3Nlcy5cIik7ci5hcHBBY2NvdW50cz1yLmFwcEFjY291bnRzLm1hcCgoZT0+cy5kZWNvZGVBZGRyZXNzKGUpKSl9aWYodm9pZCAwIT09ci5hcHBGb3JlaWduQXBwcyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBGb3JlaWduQXBwcykpdGhyb3cgRXJyb3IoXCJhcHBGb3JlaWduQXBwcyBtdXN0IGJlIGFuIEFycmF5IG9mIGludGVnZXJzLlwiKTtyLmFwcEZvcmVpZ25BcHBzPXIuYXBwRm9yZWlnbkFwcHMuc2xpY2UoKSxyLmFwcEZvcmVpZ25BcHBzLmZvckVhY2goKGU9PntpZighTnVtYmVyLmlzU2FmZUludGVnZXIoZSl8fGU8MCl0aHJvdyBFcnJvcihcImVhY2ggZm9yZWlnbiBhcHBsaWNhdGlvbiBpbmRleCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIGFuZCBzbWFsbGVyIHRoYW4gMl41My0xXCIpfSkpfWlmKHZvaWQgMCE9PXIuYXBwRm9yZWlnbkFzc2V0cyl7aWYoIUFycmF5LmlzQXJyYXkoci5hcHBGb3JlaWduQXNzZXRzKSl0aHJvdyBFcnJvcihcImFwcEZvcmVpZ25Bc3NldHMgbXVzdCBiZSBhbiBBcnJheSBvZiBpbnRlZ2Vycy5cIik7ci5hcHBGb3JlaWduQXNzZXRzPXIuYXBwRm9yZWlnbkFzc2V0cy5zbGljZSgpLHIuYXBwRm9yZWlnbkFzc2V0cy5mb3JFYWNoKChlPT57aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKGUpfHxlPDApdGhyb3cgRXJyb3IoXCJlYWNoIGZvcmVpZ24gYXNzZXQgaW5kZXggbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBhbmQgc21hbGxlciB0aGFuIDJeNTMtMVwiKX0pKX1pZih2b2lkIDAhPT1yLmFzc2V0TWV0YWRhdGFIYXNoJiYwIT09ci5hc3NldE1ldGFkYXRhSGFzaC5sZW5ndGgpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByLmFzc2V0TWV0YWRhdGFIYXNoJiYoci5hc3NldE1ldGFkYXRhSGFzaD1uZXcgVWludDhBcnJheShsLmZyb20oci5hc3NldE1ldGFkYXRhSGFzaCkpKSxyLmFzc2V0TWV0YWRhdGFIYXNoLmNvbnN0cnVjdG9yIT09VWludDhBcnJheXx8MzIhPT1yLmFzc2V0TWV0YWRhdGFIYXNoLmJ5dGVMZW5ndGgpdGhyb3cgRXJyb3IoXCJhc3NldE1ldGFkYXRhSGFzaCBtdXN0IGJlIGEgMzIgYnl0ZSBVaW50OEFycmF5IG9yIHN0cmluZy5cIik7ci5hc3NldE1ldGFkYXRhSGFzaC5ldmVyeSgoZT0+MD09PWUpKSYmKHIuYXNzZXRNZXRhZGF0YUhhc2g9dm9pZCAwKX1lbHNlIHIuYXNzZXRNZXRhZGF0YUhhc2g9dm9pZCAwO2lmKHZvaWQgMCE9PXIubm90ZSl7aWYoci5ub3RlLmNvbnN0cnVjdG9yIT09VWludDhBcnJheSl0aHJvdyBFcnJvcihcIm5vdGUgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpfWVsc2Ugci5ub3RlPW5ldyBVaW50OEFycmF5KDApO2lmKHZvaWQgMCE9PXIubGVhc2Upe2lmKHIubGVhc2UuY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwibGVhc2UgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpO2lmKDMyIT09ci5sZWFzZS5sZW5ndGgpdGhyb3cgRXJyb3IoYGxlYXNlIG11c3QgYmUgb2YgbGVuZ3RoICR7MzIuLnRvU3RyaW5nKCl9LmApO3IubGVhc2UuZXZlcnkoKGU9PjA9PT1lKSkmJihyLmxlYXNlPW5ldyBVaW50OEFycmF5KDApKX1lbHNlIHIubGVhc2U9bmV3IFVpbnQ4QXJyYXkoMCk7aWYoci52b3RlS2V5PXAoci52b3RlS2V5LFwidm90ZUtleVwiLDMyKSxyLnNlbGVjdGlvbktleT1wKHIuc2VsZWN0aW9uS2V5LFwic2VsZWN0aW9uS2V5XCIsMzIpLHIuc3RhdGVQcm9vZktleT1wKHIuc3RhdGVQcm9vZktleSxcInN0YXRlUHJvb2ZLZXlcIiw2NCksci5ub25QYXJ0aWNpcGF0aW9uJiYoci52b3RlS2V5fHxyLnNlbGVjdGlvbktleXx8ci52b3RlRmlyc3R8fHIuc3RhdGVQcm9vZktleXx8ci52b3RlTGFzdHx8ci52b3RlS2V5RGlsdXRpb24pKXRocm93IG5ldyBFcnJvcihcIm5vblBhcnRpY2lwYXRpb24gaXMgdHJ1ZSBidXQgcGFydGljaXBhdGlvbiBwYXJhbXMgYXJlIHByZXNlbnQuXCIpO2lmKCFyLm5vblBhcnRpY2lwYXRpb24mJihyLnZvdGVLZXl8fHIuc2VsZWN0aW9uS2V5fHxyLnN0YXRlUHJvb2ZLZXl8fHIudm90ZUZpcnN0fHxyLnZvdGVMYXN0fHxyLnZvdGVLZXlEaWx1dGlvbikmJiEoci52b3RlS2V5JiZyLnNlbGVjdGlvbktleSYmci52b3RlRmlyc3QmJnIudm90ZUxhc3QmJnIudm90ZUtleURpbHV0aW9uKSl0aHJvdyBuZXcgRXJyb3IoXCJvbmxpbmUga2V5IHJlZ2lzdHJhdGlvbiBtaXNzaW5nIGF0IGxlYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nIGZpZWxkczogdm90ZUtleSwgc2VsZWN0aW9uS2V5LCB2b3RlRmlyc3QsIHZvdGVMYXN0LCB2b3RlS2V5RGlsdXRpb25cIik7ZGVsZXRlIHIuc3VnZ2VzdGVkUGFyYW1zLE9iamVjdC5hc3NpZ24odGhpcyxjLnJlbW92ZVVuZGVmaW5lZFByb3BlcnRpZXMocikpLHIuZmxhdEZlZXx8KHRoaXMuZmVlKj10aGlzLmVzdGltYXRlU2l6ZSgpLHRoaXMuZmVlPGgmJih0aGlzLmZlZT1oKSksdGhpcy5ncm91cD12b2lkIDB9Z2V0X29ial9mb3JfZW5jb2RpbmcoKXtpZihcInBheVwiPT09dGhpcy50eXBlKXtjb25zdCBlPXthbXQ6dGhpcy5hbW91bnQsZmVlOnRoaXMuZmVlLGZ2OnRoaXMuZmlyc3RSb3VuZCxsdjp0aGlzLmxhc3RSb3VuZCxub3RlOmwuZnJvbSh0aGlzLm5vdGUpLHNuZDpsLmZyb20odGhpcy5mcm9tLnB1YmxpY0tleSksdHlwZTpcInBheVwiLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cH07cmV0dXJuIHZvaWQgMCE9PXRoaXMuY2xvc2VSZW1haW5kZXJUbyYmcy5lbmNvZGVBZGRyZXNzKHRoaXMuY2xvc2VSZW1haW5kZXJUby5wdWJsaWNLZXkpIT09cy5BTEdPUkFORF9aRVJPX0FERFJFU1NfU1RSSU5HJiYoZS5jbG9zZT1sLmZyb20odGhpcy5jbG9zZVJlbWFpbmRlclRvLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMucmVLZXlUbyYmKGUucmVrZXk9bC5mcm9tKHRoaXMucmVLZXlUby5wdWJsaWNLZXkpKSx2b2lkIDAhPT10aGlzLnRvJiYoZS5yY3Y9bC5mcm9tKHRoaXMudG8ucHVibGljS2V5KSksZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGUubHgubGVuZ3RofHxkZWxldGUgZS5seCxlLnJla2V5fHxkZWxldGUgZS5yZWtleSxlfWlmKFwia2V5cmVnXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2ZlZTp0aGlzLmZlZSxmdjp0aGlzLmZpcnN0Um91bmQsbHY6dGhpcy5sYXN0Um91bmQsbm90ZTpsLmZyb20odGhpcy5ub3RlKSxzbmQ6bC5mcm9tKHRoaXMuZnJvbS5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCx2b3Rla2V5OnRoaXMudm90ZUtleSxzZWxrZXk6dGhpcy5zZWxlY3Rpb25LZXksc3ByZmtleTp0aGlzLnN0YXRlUHJvb2ZLZXksdm90ZWZzdDp0aGlzLnZvdGVGaXJzdCx2b3RlbHN0OnRoaXMudm90ZUxhc3Qsdm90ZWtkOnRoaXMudm90ZUtleURpbHV0aW9ufTtyZXR1cm4gZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmx4Lmxlbmd0aHx8ZGVsZXRlIGUubHgsZS5mZWV8fGRlbGV0ZSBlLmZlZSxlLmZ2fHxkZWxldGUgZS5mdixlLmdlbnx8ZGVsZXRlIGUuZ2VuLHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsdm9pZCAwIT09dGhpcy5yZUtleVRvJiYoZS5yZWtleT1sLmZyb20odGhpcy5yZUtleVRvLnB1YmxpY0tleSkpLHRoaXMubm9uUGFydGljaXBhdGlvbiYmKGUubm9ucGFydD0hMCksZS5zZWxrZXl8fGRlbGV0ZSBlLnNlbGtleSxlLnZvdGVrZXl8fGRlbGV0ZSBlLnZvdGVrZXksZS5zcHJma2V5fHxkZWxldGUgZS5zcHJma2V5LGUudm90ZWZzdHx8ZGVsZXRlIGUudm90ZWZzdCxlLnZvdGVsc3R8fGRlbGV0ZSBlLnZvdGVsc3QsZS52b3Rla2R8fGRlbGV0ZSBlLnZvdGVrZCxlfWlmKFwiYWNmZ1wiPT09dGhpcy50eXBlKXtjb25zdCBlPXtmZWU6dGhpcy5mZWUsZnY6dGhpcy5maXJzdFJvdW5kLGx2OnRoaXMubGFzdFJvdW5kLG5vdGU6bC5mcm9tKHRoaXMubm90ZSksc25kOmwuZnJvbSh0aGlzLmZyb20ucHVibGljS2V5KSx0eXBlOnRoaXMudHlwZSxnZW46dGhpcy5nZW5lc2lzSUQsZ2g6dGhpcy5nZW5lc2lzSGFzaCxseDpsLmZyb20odGhpcy5sZWFzZSksZ3JwOnRoaXMuZ3JvdXAsY2FpZDp0aGlzLmFzc2V0SW5kZXgsYXBhcjp7dDp0aGlzLmFzc2V0VG90YWwsZGY6dGhpcy5hc3NldERlZmF1bHRGcm96ZW4sZGM6dGhpcy5hc3NldERlY2ltYWxzfX07cmV0dXJuIHZvaWQgMCE9PXRoaXMuYXNzZXRNYW5hZ2VyJiYoZS5hcGFyLm09bC5mcm9tKHRoaXMuYXNzZXRNYW5hZ2VyLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXRSZXNlcnZlJiYoZS5hcGFyLnI9bC5mcm9tKHRoaXMuYXNzZXRSZXNlcnZlLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXRGcmVlemUmJihlLmFwYXIuZj1sLmZyb20odGhpcy5hc3NldEZyZWV6ZS5wdWJsaWNLZXkpKSx2b2lkIDAhPT10aGlzLmFzc2V0Q2xhd2JhY2smJihlLmFwYXIuYz1sLmZyb20odGhpcy5hc3NldENsYXdiYWNrLnB1YmxpY0tleSkpLHZvaWQgMCE9PXRoaXMuYXNzZXROYW1lJiYoZS5hcGFyLmFuPXRoaXMuYXNzZXROYW1lKSx2b2lkIDAhPT10aGlzLmFzc2V0VW5pdE5hbWUmJihlLmFwYXIudW49dGhpcy5hc3NldFVuaXROYW1lKSx2b2lkIDAhPT10aGlzLmFzc2V0VVJMJiYoZS5hcGFyLmF1PXRoaXMuYXNzZXRVUkwpLHZvaWQgMCE9PXRoaXMuYXNzZXRNZXRhZGF0YUhhc2gmJihlLmFwYXIuYW09bC5mcm9tKHRoaXMuYXNzZXRNZXRhZGF0YUhhc2gpKSxlLm5vdGUubGVuZ3RofHxkZWxldGUgZS5ub3RlLGUubHgubGVuZ3RofHxkZWxldGUgZS5seCxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDAhPT10aGlzLnJlS2V5VG8mJihlLnJla2V5PWwuZnJvbSh0aGlzLnJlS2V5VG8ucHVibGljS2V5KSksZS5jYWlkfHxkZWxldGUgZS5jYWlkLGUuYXBhci50fHxlLmFwYXIudW58fGUuYXBhci5hbnx8ZS5hcGFyLmRmfHxlLmFwYXIubXx8ZS5hcGFyLnJ8fGUuYXBhci5mfHxlLmFwYXIuY3x8ZS5hcGFyLmF1fHxlLmFwYXIuYW18fGUuYXBhci5kYz8oZS5hcGFyLnR8fGRlbGV0ZSBlLmFwYXIudCxlLmFwYXIuZGN8fGRlbGV0ZSBlLmFwYXIuZGMsZS5hcGFyLnVufHxkZWxldGUgZS5hcGFyLnVuLGUuYXBhci5hbnx8ZGVsZXRlIGUuYXBhci5hbixlLmFwYXIuZGZ8fGRlbGV0ZSBlLmFwYXIuZGYsZS5hcGFyLm18fGRlbGV0ZSBlLmFwYXIubSxlLmFwYXIucnx8ZGVsZXRlIGUuYXBhci5yLGUuYXBhci5mfHxkZWxldGUgZS5hcGFyLmYsZS5hcGFyLmN8fGRlbGV0ZSBlLmFwYXIuYyxlLmFwYXIuYXV8fGRlbGV0ZSBlLmFwYXIuYXUsZS5hcGFyLmFtfHxkZWxldGUgZS5hcGFyLmFtKTpkZWxldGUgZS5hcGFyLHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsZX1pZihcImF4ZmVyXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2FhbXQ6dGhpcy5hbW91bnQsZmVlOnRoaXMuZmVlLGZ2OnRoaXMuZmlyc3RSb3VuZCxsdjp0aGlzLmxhc3RSb3VuZCxub3RlOmwuZnJvbSh0aGlzLm5vdGUpLHNuZDpsLmZyb20odGhpcy5mcm9tLnB1YmxpY0tleSksYXJjdjpsLmZyb20odGhpcy50by5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCx4YWlkOnRoaXMuYXNzZXRJbmRleH07cmV0dXJuIHZvaWQgMCE9PXRoaXMuY2xvc2VSZW1haW5kZXJUbyYmKGUuYWNsb3NlPWwuZnJvbSh0aGlzLmNsb3NlUmVtYWluZGVyVG8ucHVibGljS2V5KSksdm9pZCAwIT09dGhpcy5hc3NldFJldm9jYXRpb25UYXJnZXQmJihlLmFzbmQ9bC5mcm9tKHRoaXMuYXNzZXRSZXZvY2F0aW9uVGFyZ2V0LnB1YmxpY0tleSkpLGUubm90ZS5sZW5ndGh8fGRlbGV0ZSBlLm5vdGUsZS5seC5sZW5ndGh8fGRlbGV0ZSBlLmx4LGUuYWFtdHx8ZGVsZXRlIGUuYWFtdCxlLmFtdHx8ZGVsZXRlIGUuYW10LGUuZmVlfHxkZWxldGUgZS5mZWUsZS5mdnx8ZGVsZXRlIGUuZnYsZS5nZW58fGRlbGV0ZSBlLmdlbix2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGUuYWNsb3NlfHxkZWxldGUgZS5hY2xvc2UsZS5hc25kfHxkZWxldGUgZS5hc25kLGUucmVrZXl8fGRlbGV0ZSBlLnJla2V5LHZvaWQgMCE9PXRoaXMucmVLZXlUbyYmKGUucmVrZXk9bC5mcm9tKHRoaXMucmVLZXlUby5wdWJsaWNLZXkpKSxlfWlmKFwiYWZyelwiPT09dGhpcy50eXBlKXtjb25zdCBlPXtmZWU6dGhpcy5mZWUsZnY6dGhpcy5maXJzdFJvdW5kLGx2OnRoaXMubGFzdFJvdW5kLG5vdGU6bC5mcm9tKHRoaXMubm90ZSksc25kOmwuZnJvbSh0aGlzLmZyb20ucHVibGljS2V5KSx0eXBlOnRoaXMudHlwZSxnZW46dGhpcy5nZW5lc2lzSUQsZ2g6dGhpcy5nZW5lc2lzSGFzaCxseDpsLmZyb20odGhpcy5sZWFzZSksZ3JwOnRoaXMuZ3JvdXAsZmFpZDp0aGlzLmFzc2V0SW5kZXgsYWZyejp0aGlzLmZyZWV6ZVN0YXRlfTtyZXR1cm4gdm9pZCAwIT09dGhpcy5mcmVlemVBY2NvdW50JiYoZS5mYWRkPWwuZnJvbSh0aGlzLmZyZWV6ZUFjY291bnQucHVibGljS2V5KSksZS5ub3RlLmxlbmd0aHx8ZGVsZXRlIGUubm90ZSxlLmx4Lmxlbmd0aHx8ZGVsZXRlIGUubHgsZS5hbXR8fGRlbGV0ZSBlLmFtdCxlLmZlZXx8ZGVsZXRlIGUuZmVlLGUuZnZ8fGRlbGV0ZSBlLmZ2LGUuZ2VufHxkZWxldGUgZS5nZW4sZS5hZnJ6fHxkZWxldGUgZS5hZnJ6LHZvaWQgMD09PWUuZ3JwJiZkZWxldGUgZS5ncnAsdm9pZCAwIT09dGhpcy5yZUtleVRvJiYoZS5yZWtleT1sLmZyb20odGhpcy5yZUtleVRvLnB1YmxpY0tleSkpLGV9aWYoXCJhcHBsXCI9PT10aGlzLnR5cGUpe2NvbnN0IGU9e2ZlZTp0aGlzLmZlZSxmdjp0aGlzLmZpcnN0Um91bmQsbHY6dGhpcy5sYXN0Um91bmQsbm90ZTpsLmZyb20odGhpcy5ub3RlKSxzbmQ6bC5mcm9tKHRoaXMuZnJvbS5wdWJsaWNLZXkpLHR5cGU6dGhpcy50eXBlLGdlbjp0aGlzLmdlbmVzaXNJRCxnaDp0aGlzLmdlbmVzaXNIYXNoLGx4OmwuZnJvbSh0aGlzLmxlYXNlKSxncnA6dGhpcy5ncm91cCxhcGlkOnRoaXMuYXBwSW5kZXgsYXBhbjp0aGlzLmFwcE9uQ29tcGxldGUsYXBsczp7bnVpOnRoaXMuYXBwTG9jYWxJbnRzLG5iczp0aGlzLmFwcExvY2FsQnl0ZVNsaWNlc30sYXBnczp7bnVpOnRoaXMuYXBwR2xvYmFsSW50cyxuYnM6dGhpcy5hcHBHbG9iYWxCeXRlU2xpY2VzfSxhcGZhOnRoaXMuYXBwRm9yZWlnbkFwcHMsYXBhczp0aGlzLmFwcEZvcmVpZ25Bc3NldHMsYXBlcDp0aGlzLmV4dHJhUGFnZXN9O3JldHVybiB2b2lkIDAhPT10aGlzLnJlS2V5VG8mJihlLnJla2V5PWwuZnJvbSh0aGlzLnJlS2V5VG8ucHVibGljS2V5KSksdm9pZCAwIT09dGhpcy5hcHBBcHByb3ZhbFByb2dyYW0mJihlLmFwYXA9bC5mcm9tKHRoaXMuYXBwQXBwcm92YWxQcm9ncmFtKSksdm9pZCAwIT09dGhpcy5hcHBDbGVhclByb2dyYW0mJihlLmFwc3U9bC5mcm9tKHRoaXMuYXBwQ2xlYXJQcm9ncmFtKSksdm9pZCAwIT09dGhpcy5hcHBBcmdzJiYoZS5hcGFhPXRoaXMuYXBwQXJncy5tYXAoKGU9PmwuZnJvbShlKSkpKSx2b2lkIDAhPT10aGlzLmFwcEFjY291bnRzJiYoZS5hcGF0PXRoaXMuYXBwQWNjb3VudHMubWFwKChlPT5sLmZyb20oZS5wdWJsaWNLZXkpKSkpLGUubm90ZS5sZW5ndGh8fGRlbGV0ZSBlLm5vdGUsZS5seC5sZW5ndGh8fGRlbGV0ZSBlLmx4LGUuYW10fHxkZWxldGUgZS5hbXQsZS5mZWV8fGRlbGV0ZSBlLmZlZSxlLmZ2fHxkZWxldGUgZS5mdixlLmdlbnx8ZGVsZXRlIGUuZ2VuLGUuYXBpZHx8ZGVsZXRlIGUuYXBpZCxlLmFwbHMubnVpfHxkZWxldGUgZS5hcGxzLm51aSxlLmFwbHMubmJzfHxkZWxldGUgZS5hcGxzLm5icyxlLmFwbHMubnVpfHxlLmFwbHMubmJzfHxkZWxldGUgZS5hcGxzLGUuYXBncy5udWl8fGRlbGV0ZSBlLmFwZ3MubnVpLGUuYXBncy5uYnN8fGRlbGV0ZSBlLmFwZ3MubmJzLGUuYXBhYSYmZS5hcGFhLmxlbmd0aHx8ZGVsZXRlIGUuYXBhYSxlLmFwZ3MubnVpfHxlLmFwZ3MubmJzfHxkZWxldGUgZS5hcGdzLGUuYXBhcHx8ZGVsZXRlIGUuYXBhcCxlLmFwc3V8fGRlbGV0ZSBlLmFwc3UsZS5hcGFufHxkZWxldGUgZS5hcGFuLGUuYXBmYSYmZS5hcGZhLmxlbmd0aHx8ZGVsZXRlIGUuYXBmYSxlLmFwYXMmJmUuYXBhcy5sZW5ndGh8fGRlbGV0ZSBlLmFwYXMsZS5hcGF0JiZlLmFwYXQubGVuZ3RofHxkZWxldGUgZS5hcGF0LGUuYXBlcHx8ZGVsZXRlIGUuYXBlcCx2b2lkIDA9PT1lLmdycCYmZGVsZXRlIGUuZ3JwLGV9fXN0YXRpYyBmcm9tX29ial9mb3JfZW5jb2RpbmcoZSl7Y29uc3QgdD1PYmplY3QuY3JlYXRlKHRoaXMucHJvdG90eXBlKTtpZih0Lm5hbWU9XCJUcmFuc2FjdGlvblwiLHQudGFnPWwuZnJvbShcIlRYXCIpLHQuZ2VuZXNpc0lEPWUuZ2VuLHQuZ2VuZXNpc0hhc2g9bC5mcm9tKGUuZ2gpLCEoMCx1LnY4KShlLnR5cGUpKXRocm93IG5ldyBFcnJvcihgVW5yZWNvZ25pemVkIHRyYW5zYWN0aW9uIHR5cGU6ICR7ZS50eXBlfWApO3JldHVybiB0LnR5cGU9ZS50eXBlLHQuZmVlPWUuZmVlLHQuZmlyc3RSb3VuZD1lLmZ2LHQubGFzdFJvdW5kPWUubHYsdC5ub3RlPW5ldyBVaW50OEFycmF5KGUubm90ZSksdC5sZWFzZT1uZXcgVWludDhBcnJheShlLmx4KSx0LmZyb209cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLnNuZCkpKSx2b2lkIDAhPT1lLmdycCYmKHQuZ3JvdXA9bC5mcm9tKGUuZ3JwKSksdm9pZCAwIT09ZS5yZWtleSYmKHQucmVLZXlUbz1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUucmVrZXkpKSkpLFwicGF5XCI9PT1lLnR5cGU/KHQuYW1vdW50PWUuYW10LHQudG89cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLnJjdikpKSx2b2lkIDAhPT1lLmNsb3NlJiYodC5jbG9zZVJlbWFpbmRlclRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MoZS5jbG9zZSkpKSk6XCJrZXlyZWdcIj09PWUudHlwZT8odm9pZCAwIT09ZS52b3Rla2V5JiYodC52b3RlS2V5PWwuZnJvbShlLnZvdGVrZXkpKSx2b2lkIDAhPT1lLnNlbGtleSYmKHQuc2VsZWN0aW9uS2V5PWwuZnJvbShlLnNlbGtleSkpLHZvaWQgMCE9PWUuc3ByZmtleSYmKHQuc3RhdGVQcm9vZktleT1sLmZyb20oZS5zcHJma2V5KSksdm9pZCAwIT09ZS52b3Rla2QmJih0LnZvdGVLZXlEaWx1dGlvbj1lLnZvdGVrZCksdm9pZCAwIT09ZS52b3RlZnN0JiYodC52b3RlRmlyc3Q9ZS52b3RlZnN0KSx2b2lkIDAhPT1lLnZvdGVsc3QmJih0LnZvdGVMYXN0PWUudm90ZWxzdCksdm9pZCAwIT09ZS5ub25wYXJ0JiYodC5ub25QYXJ0aWNpcGF0aW9uPWUubm9ucGFydCkpOlwiYWNmZ1wiPT09ZS50eXBlPyh2b2lkIDAhPT1lLmNhaWQmJih0LmFzc2V0SW5kZXg9ZS5jYWlkKSx2b2lkIDAhPT1lLmFwYXImJih0LmFzc2V0VG90YWw9ZS5hcGFyLnQsdC5hc3NldERlZmF1bHRGcm96ZW49ZS5hcGFyLmRmLHZvaWQgMCE9PWUuYXBhci5kYyYmKHQuYXNzZXREZWNpbWFscz1lLmFwYXIuZGMpLHZvaWQgMCE9PWUuYXBhci5tJiYodC5hc3NldE1hbmFnZXI9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIubSkpKSksdm9pZCAwIT09ZS5hcGFyLnImJih0LmFzc2V0UmVzZXJ2ZT1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUuYXBhci5yKSkpKSx2b2lkIDAhPT1lLmFwYXIuZiYmKHQuYXNzZXRGcmVlemU9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIuZikpKSksdm9pZCAwIT09ZS5hcGFyLmMmJih0LmFzc2V0Q2xhd2JhY2s9cy5kZWNvZGVBZGRyZXNzKHMuZW5jb2RlQWRkcmVzcyhuZXcgVWludDhBcnJheShlLmFwYXIuYykpKSksdm9pZCAwIT09ZS5hcGFyLnVuJiYodC5hc3NldFVuaXROYW1lPWUuYXBhci51biksdm9pZCAwIT09ZS5hcGFyLmFuJiYodC5hc3NldE5hbWU9ZS5hcGFyLmFuKSx2b2lkIDAhPT1lLmFwYXIuYXUmJih0LmFzc2V0VVJMPWUuYXBhci5hdSksdm9pZCAwIT09ZS5hcGFyLmFtJiYodC5hc3NldE1ldGFkYXRhSGFzaD1lLmFwYXIuYW0pKSk6XCJheGZlclwiPT09ZS50eXBlPyh2b2lkIDAhPT1lLnhhaWQmJih0LmFzc2V0SW5kZXg9ZS54YWlkKSx2b2lkIDAhPT1lLmFhbXQmJih0LmFtb3VudD1lLmFhbXQpLHZvaWQgMCE9PWUuYWNsb3NlJiYodC5jbG9zZVJlbWFpbmRlclRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hY2xvc2UpKSkpLHZvaWQgMCE9PWUuYXNuZCYmKHQuYXNzZXRSZXZvY2F0aW9uVGFyZ2V0PXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hc25kKSkpKSx0LnRvPXMuZGVjb2RlQWRkcmVzcyhzLmVuY29kZUFkZHJlc3MobmV3IFVpbnQ4QXJyYXkoZS5hcmN2KSkpKTpcImFmcnpcIj09PWUudHlwZT8odm9pZCAwIT09ZS5hZnJ6JiYodC5mcmVlemVTdGF0ZT1lLmFmcnopLHZvaWQgMCE9PWUuZmFpZCYmKHQuYXNzZXRJbmRleD1lLmZhaWQpLHQuZnJlZXplQWNjb3VudD1zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUuZmFkZCkpKSk6XCJhcHBsXCI9PT1lLnR5cGUmJih2b2lkIDAhPT1lLmFwaWQmJih0LmFwcEluZGV4PWUuYXBpZCksdm9pZCAwIT09ZS5hcGFuJiYodC5hcHBPbkNvbXBsZXRlPWUuYXBhbiksdm9pZCAwIT09ZS5hcGxzJiYodm9pZCAwIT09ZS5hcGxzLm51aSYmKHQuYXBwTG9jYWxJbnRzPWUuYXBscy5udWkpLHZvaWQgMCE9PWUuYXBscy5uYnMmJih0LmFwcExvY2FsQnl0ZVNsaWNlcz1lLmFwbHMubmJzKSksdm9pZCAwIT09ZS5hcGdzJiYodm9pZCAwIT09ZS5hcGdzLm51aSYmKHQuYXBwR2xvYmFsSW50cz1lLmFwZ3MubnVpKSx2b2lkIDAhPT1lLmFwZ3MubmJzJiYodC5hcHBHbG9iYWxCeXRlU2xpY2VzPWUuYXBncy5uYnMpKSx2b2lkIDAhPT1lLmFwZXAmJih0LmV4dHJhUGFnZXM9ZS5hcGVwKSx2b2lkIDAhPT1lLmFwYXAmJih0LmFwcEFwcHJvdmFsUHJvZ3JhbT1uZXcgVWludDhBcnJheShlLmFwYXApKSx2b2lkIDAhPT1lLmFwc3UmJih0LmFwcENsZWFyUHJvZ3JhbT1uZXcgVWludDhBcnJheShlLmFwc3UpKSx2b2lkIDAhPT1lLmFwYWEmJih0LmFwcEFyZ3M9ZS5hcGFhLm1hcCgoZT0+bmV3IFVpbnQ4QXJyYXkoZSkpKSksdm9pZCAwIT09ZS5hcGF0JiYodC5hcHBBY2NvdW50cz1lLmFwYXQubWFwKChlPT5zLmRlY29kZUFkZHJlc3Mocy5lbmNvZGVBZGRyZXNzKG5ldyBVaW50OEFycmF5KGUpKSkpKSksdm9pZCAwIT09ZS5hcGZhJiYodC5hcHBGb3JlaWduQXBwcz1lLmFwZmEpLHZvaWQgMCE9PWUuYXBhcyYmKHQuYXBwRm9yZWlnbkFzc2V0cz1lLmFwYXMpKSx0fWVzdGltYXRlU2l6ZSgpe3JldHVybiB0aGlzLnRvQnl0ZSgpLmxlbmd0aCs3NX1ieXRlc1RvU2lnbigpe2NvbnN0IGU9dGhpcy50b0J5dGUoKTtyZXR1cm4gbC5mcm9tKGMuY29uY2F0QXJyYXlzKHRoaXMudGFnLGUpKX10b0J5dGUoKXtyZXR1cm4gaS5lbmNvZGUodGhpcy5nZXRfb2JqX2Zvcl9lbmNvZGluZygpKX1yYXdTaWduVHhuKGUpe2NvbnN0IHQ9dGhpcy5ieXRlc1RvU2lnbigpLHI9YS5zaWduKHQsZSk7cmV0dXJuIGwuZnJvbShyKX1zaWduVHhuKGUpe2NvbnN0IHQ9e3NpZzp0aGlzLnJhd1NpZ25UeG4oZSksdHhuOnRoaXMuZ2V0X29ial9mb3JfZW5jb2RpbmcoKX0scj1hLmtleVBhaXJGcm9tU2VjcmV0S2V5KGUpLnB1YmxpY0tleTtyZXR1cm4gcy5lbmNvZGVBZGRyZXNzKHIpIT09cy5lbmNvZGVBZGRyZXNzKHRoaXMuZnJvbS5wdWJsaWNLZXkpJiYodC5zZ25yPWwuZnJvbShyKSksbmV3IFVpbnQ4QXJyYXkoaS5lbmNvZGUodCkpfXJhd1R4SUQoKXtjb25zdCBlPXRoaXMudG9CeXRlKCksdD1sLmZyb20oYy5jb25jYXRBcnJheXModGhpcy50YWcsZSkpO3JldHVybiBsLmZyb20oYS5nZW5lcmljSGFzaCh0KSl9dHhJRCgpe2NvbnN0IGU9dGhpcy5yYXdUeElEKCk7cmV0dXJuIG8oKS5lbmNvZGUoZSkuc2xpY2UoMCw1Mil9YWRkTGVhc2UoZSx0PTApe2xldCByO2lmKHZvaWQgMCE9PWUpe2lmKGUuY29uc3RydWN0b3IhPT1VaW50OEFycmF5KXRocm93IEVycm9yKFwibGVhc2UgbXVzdCBiZSBhIFVpbnQ4QXJyYXkuXCIpO2lmKDMyIT09ZS5sZW5ndGgpdGhyb3cgRXJyb3IoYGxlYXNlIG11c3QgYmUgb2YgbGVuZ3RoICR7MzIuLnRvU3RyaW5nKCl9LmApO3I9bmV3IFVpbnQ4QXJyYXkoZSl9ZWxzZSByPW5ldyBVaW50OEFycmF5KDApO3RoaXMubGVhc2U9ciwwIT09dCYmKHRoaXMuZmVlKz0zNyp0KX1hZGRSZWtleShlLHQ9MCl7dm9pZCAwIT09ZSYmKHRoaXMucmVLZXlUbz1zLmRlY29kZUFkZHJlc3MoZSkpLDAhPT10JiYodGhpcy5mZWUrPTM3KnQpfV9nZXREaWN0Rm9yRGlzcGxheSgpe2NvbnN0IGU9ey4uLnRoaXN9O3JldHVybiBlLnRhZz1lLnRhZy50b1N0cmluZygpLGUuZnJvbT1zLmVuY29kZUFkZHJlc3MoZS5mcm9tLnB1YmxpY0tleSksdm9pZCAwIT09ZS50byYmKGUudG89cy5lbmNvZGVBZGRyZXNzKGUudG8ucHVibGljS2V5KSksdm9pZCAwIT09ZS5mcmVlemVBY2NvdW50JiYoZS5mcmVlemVBY2NvdW50PXMuZW5jb2RlQWRkcmVzcyhlLmZyZWV6ZUFjY291bnQucHVibGljS2V5KSksdm9pZCAwIT09ZS5jbG9zZVJlbWFpbmRlclRvJiYoZS5jbG9zZVJlbWFpbmRlclRvPXMuZW5jb2RlQWRkcmVzcyhlLmNsb3NlUmVtYWluZGVyVG8ucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldE1hbmFnZXImJihlLmFzc2V0TWFuYWdlcj1zLmVuY29kZUFkZHJlc3MoZS5hc3NldE1hbmFnZXIucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldFJlc2VydmUmJihlLmFzc2V0UmVzZXJ2ZT1zLmVuY29kZUFkZHJlc3MoZS5hc3NldFJlc2VydmUucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldEZyZWV6ZSYmKGUuYXNzZXRGcmVlemU9cy5lbmNvZGVBZGRyZXNzKGUuYXNzZXRGcmVlemUucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldENsYXdiYWNrJiYoZS5hc3NldENsYXdiYWNrPXMuZW5jb2RlQWRkcmVzcyhlLmFzc2V0Q2xhd2JhY2sucHVibGljS2V5KSksdm9pZCAwIT09ZS5hc3NldFJldm9jYXRpb25UYXJnZXQmJihlLmFzc2V0UmV2b2NhdGlvblRhcmdldD1zLmVuY29kZUFkZHJlc3MoZS5hc3NldFJldm9jYXRpb25UYXJnZXQucHVibGljS2V5KSksdm9pZCAwIT09ZS5yZUtleVRvJiYoZS5yZUtleVRvPXMuZW5jb2RlQWRkcmVzcyhlLnJlS2V5VG8ucHVibGljS2V5KSksZS5nZW5lc2lzSGFzaD1lLmdlbmVzaXNIYXNoLnRvU3RyaW5nKFwiYmFzZTY0XCIpLGV9cHJldHR5UHJpbnQoKXtjb25zb2xlLmxvZyh0aGlzLl9nZXREaWN0Rm9yRGlzcGxheSgpKX10b1N0cmluZygpe3JldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLl9nZXREaWN0Rm9yRGlzcGxheSgpKX19ZnVuY3Rpb24gZChlKXtjb25zdCB0PWUuZ2V0X29ial9mb3JfZW5jb2RpbmcoKTtyZXR1cm4gaS5lbmNvZGUodCl9ZnVuY3Rpb24gZyhlKXtjb25zdCB0PWkuZGVjb2RlKGUpO3JldHVybiBmLmZyb21fb2JqX2Zvcl9lbmNvZGluZyh0KX1mdW5jdGlvbiB5KGUpe2NvbnN0IHQ9aS5kZWNvZGUoZSk7cmV0dXJuey4uLnQsdHhuOmYuZnJvbV9vYmpfZm9yX2VuY29kaW5nKHQudHhuKX19ZnVuY3Rpb24gbShlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGY/ZTpuZXcgZihlKX1jb25zdCBiPWZ9LDIzODA6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3IuZCh0LHtpOigpPT5uLml9KTt2YXIgbj1yKDE4MjQpfSw3MTk3OihlLHQscik9PntcInVzZSBzdHJpY3RcIjt2YXIgbjtyLmQodCx7WjooKT0+b30pLGZ1bmN0aW9uKGUpe2UuREVGQVVMVD1cImRlZmF1bHRcIixlLlNBRkU9XCJzYWZlXCIsZS5NSVhFRD1cIm1peGVkXCIsZS5CSUdJTlQ9XCJiaWdpbnRcIn0obnx8KG49e30pKTtjb25zdCBvPW59LDE2MjQ6KGUsdCxyKT0+e1widXNlIHN0cmljdFwiO3ZhciBuLG87ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZT09PW4ucGF5fHxlPT09bi5rZXlyZWd8fGU9PT1uLmFjZmd8fGU9PT1uLmF4ZmVyfHxlPT09bi5hZnJ6fHxlPT09bi5hcHBsfXIuZCh0LHtpVTooKT0+bix2ODooKT0+cyxocTooKT0+b30pLGZ1bmN0aW9uKGUpe2UucGF5PVwicGF5XCIsZS5rZXlyZWc9XCJrZXlyZWdcIixlLmFjZmc9XCJhY2ZnXCIsZS5heGZlcj1cImF4ZmVyXCIsZS5hZnJ6PVwiYWZyelwiLGUuYXBwbD1cImFwcGxcIn0obnx8KG49e30pKSxmdW5jdGlvbihlKXtlW2UuTm9PcE9DPTBdPVwiTm9PcE9DXCIsZVtlLk9wdEluT0M9MV09XCJPcHRJbk9DXCIsZVtlLkNsb3NlT3V0T0M9Ml09XCJDbG9zZU91dE9DXCIsZVtlLkNsZWFyU3RhdGVPQz0zXT1cIkNsZWFyU3RhdGVPQ1wiLGVbZS5VcGRhdGVBcHBsaWNhdGlvbk9DPTRdPVwiVXBkYXRlQXBwbGljYXRpb25PQ1wiLGVbZS5EZWxldGVBcHBsaWNhdGlvbk9DPTVdPVwiRGVsZXRlQXBwbGljYXRpb25PQ1wifShvfHwobz17fSkpfSwxODI0OihlLHQscik9PntcInVzZSBzdHJpY3RcIjtyLmQodCx7aTooKT0+bi5pVX0pO3ZhciBuPXIoMTYyNCl9LDQxMzooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7ci5yKHQpLHIuZCh0LHtwYXJzZUpTT046KCk9PmEsYXJyYXlFcXVhbDooKT0+Yyxjb25jYXRBcnJheXM6KCk9PnUscmVtb3ZlVW5kZWZpbmVkUHJvcGVydGllczooKT0+bCxpc05vZGU6KCk9Pmh9KTt2YXIgbj1yKDQzNjApLG89ci5uKG4pLHM9cig3MTk3KTtjb25zdCBpPW8oKSh7dXNlTmF0aXZlQmlnSW50OiEwLHN0cmljdDohMH0pO2Z1bmN0aW9uIGEoZSx0KXtjb25zdCByPXQmJnQuaW50RGVjb2Rpbmc/dC5pbnREZWNvZGluZzpzLlouREVGQVVMVDtyZXR1cm4gaS5wYXJzZShlLCgoZSx0KT0+e2lmKG51bGwhPXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCkmJk9iamVjdC5zZXRQcm90b3R5cGVPZih0LE9iamVjdC5wcm90b3R5cGUpLFwiYmlnaW50XCI9PXR5cGVvZiB0KXtpZihcInNhZmVcIj09PXImJnQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpdGhyb3cgbmV3IEVycm9yKGBJbnRlZ2VyIGV4Y2VlZHMgbWF4aW11bSBzYWZlIGludGVnZXI6ICR7dC50b1N0cmluZygpfS4gVHJ5IHBhcnNpbmcgd2l0aCBhIGRpZmZlcmVudCBpbnREZWNvZGluZyBvcHRpb24uYCk7cmV0dXJuXCJiaWdpbnRcIj09PXJ8fFwibWl4ZWRcIj09PXImJnQ+TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI/dDpOdW1iZXIodCl9cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJlwiYmlnaW50XCI9PT1yJiZOdW1iZXIuaXNJbnRlZ2VyKHQpP0JpZ0ludCh0KTp0fSkpfWZ1bmN0aW9uIGMoZSx0KXtyZXR1cm4gZS5sZW5ndGg9PT10Lmxlbmd0aCYmQXJyYXkuZnJvbShlKS5ldmVyeSgoKGUscik9PmU9PT10W3JdKSl9ZnVuY3Rpb24gdSguLi5lKXtjb25zdCB0PWUucmVkdWNlKCgoZSx0KT0+ZSt0Lmxlbmd0aCksMCkscj1uZXcgVWludDhBcnJheSh0KTtsZXQgbj0wO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXIuc2V0KGVbdF0sbiksbis9ZVt0XS5sZW5ndGg7cmV0dXJuIHJ9ZnVuY3Rpb24gbChlKXtjb25zdCB0PXsuLi5lfTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaCgoZT0+e3ZvaWQgMD09PXRbZV0mJmRlbGV0ZSB0W2VdfSkpLHR9ZnVuY3Rpb24gaCgpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBwcm9jZXNzJiZcIm9iamVjdFwiPT10eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyYmdm9pZCAwIT09cHJvY2Vzcy52ZXJzaW9ucy5ub2RlfX0sNTA2MjooZSx0LHIpPT57XCJ1c2Ugc3RyaWN0XCI7YXN5bmMgZnVuY3Rpb24gbihlLHQscil7Y29uc3Qgbj1hd2FpdCBlLnN0YXR1cygpLmRvKCk7aWYodm9pZCAwPT09bil0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gZ2V0IG5vZGUgc3RhdHVzXCIpO2NvbnN0IG89bltcImxhc3Qtcm91bmRcIl0rMTtsZXQgcz1vO2Zvcig7czxvK3I7KXtsZXQgcj0hMTt0cnl7Y29uc3Qgbj1hd2FpdCBlLnBlbmRpbmdUcmFuc2FjdGlvbkluZm9ybWF0aW9uKHQpLmRvKCk7aWYobltcImNvbmZpcm1lZC1yb3VuZFwiXSlyZXR1cm4gbjtpZihuW1wicG9vbC1lcnJvclwiXSl0aHJvdyByPSEwLG5ldyBFcnJvcihgVHJhbnNhY3Rpb24gUmVqZWN0ZWQ6ICR7bltcInBvb2wtZXJyb3JcIl19YCl9Y2F0Y2goZSl7aWYocil0aHJvdyBlfWF3YWl0IGUuc3RhdHVzQWZ0ZXJCbG9jayhzKS5kbygpLHMrPTF9dGhyb3cgbmV3IEVycm9yKGBUcmFuc2FjdGlvbiBub3QgY29uZmlybWVkIGFmdGVyICR7cn0gcm91bmRzYCl9ci5kKHQse0s6KCk9Pm59KX0sNDY1NDooKT0+e319LF9fd2VicGFja19tb2R1bGVfY2FjaGVfXz17fTtmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKGUpe3ZhciB0PV9fd2VicGFja19tb2R1bGVfY2FjaGVfX1tlXTtpZih2b2lkIDAhPT10KXJldHVybiB0LmV4cG9ydHM7dmFyIHI9X193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW2VdPXtleHBvcnRzOnt9fTtyZXR1cm4gX193ZWJwYWNrX21vZHVsZXNfX1tlXS5jYWxsKHIuZXhwb3J0cyxyLHIuZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKSxyLmV4cG9ydHN9X193ZWJwYWNrX3JlcXVpcmVfXy5hbWRPPXt9LF9fd2VicGFja19yZXF1aXJlX18ubj1lPT57dmFyIHQ9ZSYmZS5fX2VzTW9kdWxlPygpPT5lLmRlZmF1bHQ6KCk9PmU7cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZCh0LHthOnR9KSx0fSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQ9KGUsdCk9Pntmb3IodmFyIHIgaW4gdClfX3dlYnBhY2tfcmVxdWlyZV9fLm8odCxyKSYmIV9fd2VicGFja19yZXF1aXJlX18ubyhlLHIpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtlbnVtZXJhYmxlOiEwLGdldDp0W3JdfSl9LF9fd2VicGFja19yZXF1aXJlX18uZz1mdW5jdGlvbigpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWxUaGlzKXJldHVybiBnbG9iYWxUaGlzO3RyeXtyZXR1cm4gdGhpc3x8bmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKX1jYXRjaChlKXtpZihcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93KXJldHVybiB3aW5kb3d9fSgpLF9fd2VicGFja19yZXF1aXJlX18ubz0oZSx0KT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCksX193ZWJwYWNrX3JlcXVpcmVfXy5yPWU9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgX193ZWJwYWNrX2V4cG9ydHNfXz17fTtyZXR1cm4oKCk9PntcInVzZSBzdHJpY3RcIjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18se2RlZmF1bHQ6KCk9PnJ9KTt2YXIgZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDY2MDgpLHQ9e307Zm9yKGNvbnN0IHIgaW4gZSlcImRlZmF1bHRcIiE9PXImJih0W3JdPSgpPT5lW3JdKTtfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXyx0KTtjb25zdCByPWV9KSgpLF9fd2VicGFja19leHBvcnRzX199KSgpfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWxnb3Nkay5taW4uanMubWFwIiwidmFyIG1hcCA9IHtcblx0XCIuL2Jhc2UuanNcIjogW1xuXHRcdDY5OTgsXG5cdFx0OTk4XG5cdF0sXG5cdFwiLi9icm93c2UuanNcIjogW1xuXHRcdDY4OTIsXG5cdFx0ODkyXG5cdF0sXG5cdFwiLi9jb25uZWN0LmpzXCI6IFtcblx0XHQyNjQxLFxuXHRcdDY0MVxuXHRdLFxuXHRcIi4vZ29vZC1tb3JuaW5nLmpzXCI6IFtcblx0XHQxMTE3LFxuXHRcdDUxMixcblx0XHQ3MDEsXG5cdFx0ODEwLFxuXHRcdDExN1xuXHRdLFxuXHRcIi4vZ3JpbmRlci1xdWV1ZS5qc1wiOiBbXG5cdFx0MjM1OCxcblx0XHQzNThcblx0XSxcblx0XCIuL2dyaW5kZXIuanNcIjogW1xuXHRcdDY1MzgsXG5cdFx0NzAxLFxuXHRcdDUzOFxuXHRdLFxuXHRcIi4vaG9tZS5qc1wiOiBbXG5cdFx0MTI3MSxcblx0XHQzOTMsXG5cdFx0MjcxXG5cdF0sXG5cdFwiLi9sb25nYm9pLmpzXCI6IFtcblx0XHQ0MTI2LFxuXHRcdDUxMixcblx0XHQ3MDEsXG5cdFx0ODEwLFxuXHRcdDEyNlxuXHRdLFxuXHRcIi4vcGFja3MuanNcIjogW1xuXHRcdDUyOTgsXG5cdFx0MzkzLFxuXHRcdDQ2OFxuXHRdLFxuXHRcIi4vd2FsbGV0LmpzXCI6IFtcblx0XHQxMDQ5LFxuXHRcdDQ5XG5cdF1cbn07XG5mdW5jdGlvbiB3ZWJwYWNrQXN5bmNDb250ZXh0KHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcblx0XHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHRcdHRocm93IGU7XG5cdFx0fSk7XG5cdH1cblxuXHR2YXIgaWRzID0gbWFwW3JlcV0sIGlkID0gaWRzWzBdO1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoaWRzLnNsaWNlKDEpLm1hcChfX3dlYnBhY2tfcmVxdWlyZV9fLmUpKS50aGVuKCgpID0+IHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG5cdH0pO1xufVxud2VicGFja0FzeW5jQ29udGV4dC5rZXlzID0gKCkgPT4gKE9iamVjdC5rZXlzKG1hcCkpO1xud2VicGFja0FzeW5jQ29udGV4dC5pZCA9IDkzNDM7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tBc3luY0NvbnRleHQ7IiwidmFyIGVuY29kZV8xID0gZW5jb2RlO1xudmFyIE1TQiA9IDEyOCwgUkVTVCA9IDEyNywgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gIG91dCA9IG91dCB8fCBbXTtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgb3V0W29mZnNldCsrXSA9IG51bSAmIDI1NSB8IE1TQjtcbiAgICBudW0gLz0gMTI4O1xuICB9XG4gIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICBvdXRbb2Zmc2V0KytdID0gbnVtICYgMjU1IHwgTVNCO1xuICAgIG51bSA+Pj49IDc7XG4gIH1cbiAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICByZXR1cm4gb3V0O1xufVxudmFyIGRlY29kZSA9IHJlYWQ7XG52YXIgTVNCJDEgPSAxMjgsIFJFU1QkMSA9IDEyNztcbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICBkbyB7XG4gICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICB9XG4gICAgYiA9IGJ1Zltjb3VudGVyKytdO1xuICAgIHJlcyArPSBzaGlmdCA8IDI4ID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0IDogKGIgJiBSRVNUJDEpICogTWF0aC5wb3coMiwgc2hpZnQpO1xuICAgIHNoaWZ0ICs9IDc7XG4gIH0gd2hpbGUgKGIgPj0gTVNCJDEpO1xuICByZWFkLmJ5dGVzID0gY291bnRlciAtIG9mZnNldDtcbiAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPCBOMSA/IDEgOiB2YWx1ZSA8IE4yID8gMiA6IHZhbHVlIDwgTjMgPyAzIDogdmFsdWUgPCBONCA/IDQgOiB2YWx1ZSA8IE41ID8gNSA6IHZhbHVlIDwgTjYgPyA2IDogdmFsdWUgPCBONyA/IDcgOiB2YWx1ZSA8IE44ID8gOCA6IHZhbHVlIDwgTjkgPyA5IDogMTA7XG59O1xudmFyIHZhcmludCA9IHtcbiAgZW5jb2RlOiBlbmNvZGVfMSxcbiAgZGVjb2RlOiBkZWNvZGUsXG4gIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50OyIsImltcG9ydCB2YXJpbnQgZnJvbSAnLi4vdmVuZG9yL3ZhcmludC5qcyc7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gZGF0YSA9PiB7XG4gIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKGRhdGEpO1xuICByZXR1cm4gW1xuICAgIGNvZGUsXG4gICAgdmFyaW50LmRlY29kZS5ieXRlc1xuICBdO1xufTtcbmV4cG9ydCBjb25zdCBlbmNvZGVUbyA9IChpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkgPT4ge1xuICB2YXJpbnQuZW5jb2RlKGludCwgdGFyZ2V0LCBvZmZzZXQpO1xuICByZXR1cm4gdGFyZ2V0O1xufTtcbmV4cG9ydCBjb25zdCBlbmNvZGluZ0xlbmd0aCA9IGludCA9PiB7XG4gIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn07IiwiY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmNvbnN0IHRvSGV4ID0gZCA9PiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG5jb25zdCBmcm9tSGV4ID0gaGV4ID0+IHtcbiAgY29uc3QgaGV4ZXMgPSBoZXgubWF0Y2goLy4uL2cpO1xuICByZXR1cm4gaGV4ZXMgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufTtcbmNvbnN0IGVxdWFscyA9IChhYSwgYmIpID0+IHtcbiAgaWYgKGFhID09PSBiYilcbiAgICByZXR1cm4gdHJ1ZTtcbiAgaWYgKGFhLmJ5dGVMZW5ndGggIT09IGJiLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICBpZiAoYWFbaWldICE9PSBiYltpaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuY29uc3QgY29lcmNlID0gbyA9PiB7XG4gIGlmIChvIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBvLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5JylcbiAgICByZXR1cm4gbztcbiAgaWYgKG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobyk7XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcobykpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufTtcbmNvbnN0IGlzQmluYXJ5ID0gbyA9PiBvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KG8pO1xuY29uc3QgZnJvbVN0cmluZyA9IHN0ciA9PiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbmNvbnN0IHRvU3RyaW5nID0gYiA9PiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG5leHBvcnQge1xuICBlcXVhbHMsXG4gIGNvZXJjZSxcbiAgaXNCaW5hcnksXG4gIGZyb21IZXgsXG4gIHRvSGV4LFxuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZyxcbiAgZW1wdHlcbn07IiwiaW1wb3J0IHtcbiAgY29lcmNlLFxuICBlcXVhbHMgYXMgZXF1YWxCeXRlc1xufSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoY29kZSwgZGlnZXN0KSA9PiB7XG4gIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgY29uc3Qgc2l6ZU9mZnNldCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChjb2RlKTtcbiAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgdmFyaW50LmVuY29kZVRvKGNvZGUsIGJ5dGVzLCAwKTtcbiAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IG11bHRpaGFzaCA9PiB7XG4gIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gIGNvbnN0IFtjb2RlLCBzaXplT2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMpO1xuICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgaWYgKGRpZ2VzdC5ieXRlTGVuZ3RoICE9PSBzaXplKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGVxdWFscyA9IChhLCBiKSA9PiB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGEuY29kZSA9PT0gYi5jb2RlICYmIGEuc2l6ZSA9PT0gYi5zaXplICYmIGVxdWFsQnl0ZXMoYS5ieXRlcywgYi5ieXRlcyk7XG4gIH1cbn07XG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICB0aGlzLmJ5dGVzID0gYnl0ZXM7XG4gIH1cbn0iLCJpbXBvcnQgYmFzZXggZnJvbSAnLi4vLi4vdmVuZG9yL2Jhc2UteC5qcyc7XG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5jbGFzcyBFbmNvZGVyIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4LCBiYXNlRW5jb2RlKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICB0aGlzLmJhc2VFbmNvZGUgPSBiYXNlRW5jb2RlO1xuICB9XG4gIGVuY29kZShieXRlcykge1xuICAgIGlmIChieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgIHJldHVybiBgJHsgdGhpcy5wcmVmaXggfSR7IHRoaXMuYmFzZUVuY29kZShieXRlcykgfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbiAgICB9XG4gIH1cbn1cbmNsYXNzIERlY29kZXIge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXgsIGJhc2VEZWNvZGUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMucHJlZml4ID0gcHJlZml4O1xuICAgIGlmIChwcmVmaXguY29kZVBvaW50QXQoMCkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHByZWZpeCBjaGFyYWN0ZXInKTtcbiAgICB9XG4gICAgdGhpcy5wcmVmaXhDb2RlUG9pbnQgPSBwcmVmaXguY29kZVBvaW50QXQoMCk7XG4gICAgdGhpcy5iYXNlRGVjb2RlID0gYmFzZURlY29kZTtcbiAgfVxuICBkZWNvZGUodGV4dCkge1xuICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICh0ZXh0LmNvZGVQb2ludEF0KDApICE9PSB0aGlzLnByZWZpeENvZGVQb2ludCkge1xuICAgICAgICB0aHJvdyBFcnJvcihgVW5hYmxlIHRvIGRlY29kZSBtdWx0aWJhc2Ugc3RyaW5nICR7IEpTT04uc3RyaW5naWZ5KHRleHQpIH0sICR7IHRoaXMubmFtZSB9IGRlY29kZXIgb25seSBzdXBwb3J0cyBpbnB1dHMgcHJlZml4ZWQgd2l0aCAkeyB0aGlzLnByZWZpeCB9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5iYXNlRGVjb2RlKHRleHQuc2xpY2UodGhpcy5wcmVmaXgubGVuZ3RoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IEVycm9yKCdDYW4gb25seSBtdWx0aWJhc2UgZGVjb2RlIHN0cmluZ3MnKTtcbiAgICB9XG4gIH1cbiAgb3IoZGVjb2Rlcikge1xuICAgIHJldHVybiBvcih0aGlzLCBkZWNvZGVyKTtcbiAgfVxufVxuY2xhc3MgQ29tcG9zZWREZWNvZGVyIHtcbiAgY29uc3RydWN0b3IoZGVjb2RlcnMpIHtcbiAgICB0aGlzLmRlY29kZXJzID0gZGVjb2RlcnM7XG4gIH1cbiAgb3IoZGVjb2Rlcikge1xuICAgIHJldHVybiBvcih0aGlzLCBkZWNvZGVyKTtcbiAgfVxuICBkZWNvZGUoaW5wdXQpIHtcbiAgICBjb25zdCBwcmVmaXggPSBpbnB1dFswXTtcbiAgICBjb25zdCBkZWNvZGVyID0gdGhpcy5kZWNvZGVyc1twcmVmaXhdO1xuICAgIGlmIChkZWNvZGVyKSB7XG4gICAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoaW5wdXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBSYW5nZUVycm9yKGBVbmFibGUgdG8gZGVjb2RlIG11bHRpYmFzZSBzdHJpbmcgJHsgSlNPTi5zdHJpbmdpZnkoaW5wdXQpIH0sIG9ubHkgaW5wdXRzIHByZWZpeGVkIHdpdGggJHsgT2JqZWN0LmtleXModGhpcy5kZWNvZGVycykgfSBhcmUgc3VwcG9ydGVkYCk7XG4gICAgfVxuICB9XG59XG5leHBvcnQgY29uc3Qgb3IgPSAobGVmdCwgcmlnaHQpID0+IG5ldyBDb21wb3NlZERlY29kZXIoe1xuICAuLi5sZWZ0LmRlY29kZXJzIHx8IHsgW2xlZnQucHJlZml4XTogbGVmdCB9LFxuICAuLi5yaWdodC5kZWNvZGVycyB8fCB7IFtyaWdodC5wcmVmaXhdOiByaWdodCB9XG59KTtcbmV4cG9ydCBjbGFzcyBDb2RlYyB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSwgYmFzZURlY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgdGhpcy5iYXNlRW5jb2RlID0gYmFzZUVuY29kZTtcbiAgICB0aGlzLmJhc2VEZWNvZGUgPSBiYXNlRGVjb2RlO1xuICAgIHRoaXMuZW5jb2RlciA9IG5ldyBFbmNvZGVyKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSk7XG4gICAgdGhpcy5kZWNvZGVyID0gbmV3IERlY29kZXIobmFtZSwgcHJlZml4LCBiYXNlRGVjb2RlKTtcbiAgfVxuICBlbmNvZGUoaW5wdXQpIHtcbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLmVuY29kZShpbnB1dCk7XG4gIH1cbiAgZGVjb2RlKGlucHV0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVjb2Rlci5kZWNvZGUoaW5wdXQpO1xuICB9XG59XG5leHBvcnQgY29uc3QgZnJvbSA9ICh7bmFtZSwgcHJlZml4LCBlbmNvZGUsIGRlY29kZX0pID0+IG5ldyBDb2RlYyhuYW1lLCBwcmVmaXgsIGVuY29kZSwgZGVjb2RlKTtcbmV4cG9ydCBjb25zdCBiYXNlWCA9ICh7cHJlZml4LCBuYW1lLCBhbHBoYWJldH0pID0+IHtcbiAgY29uc3Qge2VuY29kZSwgZGVjb2RlfSA9IGJhc2V4KGFscGhhYmV0LCBuYW1lKTtcbiAgcmV0dXJuIGZyb20oe1xuICAgIHByZWZpeCxcbiAgICBuYW1lLFxuICAgIGVuY29kZSxcbiAgICBkZWNvZGU6IHRleHQgPT4gY29lcmNlKGRlY29kZSh0ZXh0KSlcbiAgfSk7XG59O1xuY29uc3QgZGVjb2RlID0gKHN0cmluZywgYWxwaGFiZXQsIGJpdHNQZXJDaGFyLCBuYW1lKSA9PiB7XG4gIGNvbnN0IGNvZGVzID0ge307XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYWxwaGFiZXQubGVuZ3RoOyArK2kpIHtcbiAgICBjb2Rlc1thbHBoYWJldFtpXV0gPSBpO1xuICB9XG4gIGxldCBlbmQgPSBzdHJpbmcubGVuZ3RoO1xuICB3aGlsZSAoc3RyaW5nW2VuZCAtIDFdID09PSAnPScpIHtcbiAgICAtLWVuZDtcbiAgfVxuICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShlbmQgKiBiaXRzUGVyQ2hhciAvIDggfCAwKTtcbiAgbGV0IGJpdHMgPSAwO1xuICBsZXQgYnVmZmVyID0gMDtcbiAgbGV0IHdyaXR0ZW4gPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVuZDsgKytpKSB7XG4gICAgY29uc3QgdmFsdWUgPSBjb2Rlc1tzdHJpbmdbaV1dO1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoYE5vbi0keyBuYW1lIH0gY2hhcmFjdGVyYCk7XG4gICAgfVxuICAgIGJ1ZmZlciA9IGJ1ZmZlciA8PCBiaXRzUGVyQ2hhciB8IHZhbHVlO1xuICAgIGJpdHMgKz0gYml0c1BlckNoYXI7XG4gICAgaWYgKGJpdHMgPj0gOCkge1xuICAgICAgYml0cyAtPSA4O1xuICAgICAgb3V0W3dyaXR0ZW4rK10gPSAyNTUgJiBidWZmZXIgPj4gYml0cztcbiAgICB9XG4gIH1cbiAgaWYgKGJpdHMgPj0gYml0c1BlckNoYXIgfHwgMjU1ICYgYnVmZmVyIDw8IDggLSBiaXRzKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJyk7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn07XG5jb25zdCBlbmNvZGUgPSAoZGF0YSwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyKSA9PiB7XG4gIGNvbnN0IHBhZCA9IGFscGhhYmV0W2FscGhhYmV0Lmxlbmd0aCAtIDFdID09PSAnPSc7XG4gIGNvbnN0IG1hc2sgPSAoMSA8PCBiaXRzUGVyQ2hhcikgLSAxO1xuICBsZXQgb3V0ID0gJyc7XG4gIGxldCBiaXRzID0gMDtcbiAgbGV0IGJ1ZmZlciA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgIGJ1ZmZlciA9IGJ1ZmZlciA8PCA4IHwgZGF0YVtpXTtcbiAgICBiaXRzICs9IDg7XG4gICAgd2hpbGUgKGJpdHMgPiBiaXRzUGVyQ2hhcikge1xuICAgICAgYml0cyAtPSBiaXRzUGVyQ2hhcjtcbiAgICAgIG91dCArPSBhbHBoYWJldFttYXNrICYgYnVmZmVyID4+IGJpdHNdO1xuICAgIH1cbiAgfVxuICBpZiAoYml0cykge1xuICAgIG91dCArPSBhbHBoYWJldFttYXNrICYgYnVmZmVyIDw8IGJpdHNQZXJDaGFyIC0gYml0c107XG4gIH1cbiAgaWYgKHBhZCkge1xuICAgIHdoaWxlIChvdXQubGVuZ3RoICogYml0c1BlckNoYXIgJiA3KSB7XG4gICAgICBvdXQgKz0gJz0nO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0O1xufTtcbmV4cG9ydCBjb25zdCByZmM0NjQ4ID0gKHtuYW1lLCBwcmVmaXgsIGJpdHNQZXJDaGFyLCBhbHBoYWJldH0pID0+IHtcbiAgcmV0dXJuIGZyb20oe1xuICAgIHByZWZpeCxcbiAgICBuYW1lLFxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgcmV0dXJuIGVuY29kZShpbnB1dCwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyKTtcbiAgICB9LFxuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgcmV0dXJuIGRlY29kZShpbnB1dCwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyLCBuYW1lKTtcbiAgICB9XG4gIH0pO1xufTsiLCJmdW5jdGlvbiBiYXNlKEFMUEhBQkVULCBuYW1lKSB7XG4gIGlmIChBTFBIQUJFVC5sZW5ndGggPj0gMjU1KSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQWxwaGFiZXQgdG9vIGxvbmcnKTtcbiAgfVxuICB2YXIgQkFTRV9NQVAgPSBuZXcgVWludDhBcnJheSgyNTYpO1xuICBmb3IgKHZhciBqID0gMDsgaiA8IEJBU0VfTUFQLmxlbmd0aDsgaisrKSB7XG4gICAgQkFTRV9NQVBbal0gPSAyNTU7XG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBBTFBIQUJFVC5sZW5ndGg7IGkrKykge1xuICAgIHZhciB4ID0gQUxQSEFCRVQuY2hhckF0KGkpO1xuICAgIHZhciB4YyA9IHguY2hhckNvZGVBdCgwKTtcbiAgICBpZiAoQkFTRV9NQVBbeGNdICE9PSAyNTUpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoeCArICcgaXMgYW1iaWd1b3VzJyk7XG4gICAgfVxuICAgIEJBU0VfTUFQW3hjXSA9IGk7XG4gIH1cbiAgdmFyIEJBU0UgPSBBTFBIQUJFVC5sZW5ndGg7XG4gIHZhciBMRUFERVIgPSBBTFBIQUJFVC5jaGFyQXQoMCk7XG4gIHZhciBGQUNUT1IgPSBNYXRoLmxvZyhCQVNFKSAvIE1hdGgubG9nKDI1Nik7XG4gIHZhciBpRkFDVE9SID0gTWF0aC5sb2coMjU2KSAvIE1hdGgubG9nKEJBU0UpO1xuICBmdW5jdGlvbiBlbmNvZGUoc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpO1xuICAgIGVsc2UgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBuZXcgVWludDhBcnJheShzb3VyY2UuYnVmZmVyLCBzb3VyY2UuYnl0ZU9mZnNldCwgc291cmNlLmJ5dGVMZW5ndGgpO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBVaW50OEFycmF5LmZyb20oc291cmNlKTtcbiAgICB9XG4gICAgaWYgKCEoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKTtcbiAgICB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgdmFyIHplcm9lcyA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IDA7XG4gICAgdmFyIHBiZWdpbiA9IDA7XG4gICAgdmFyIHBlbmQgPSBzb3VyY2UubGVuZ3RoO1xuICAgIHdoaWxlIChwYmVnaW4gIT09IHBlbmQgJiYgc291cmNlW3BiZWdpbl0gPT09IDApIHtcbiAgICAgIHBiZWdpbisrO1xuICAgICAgemVyb2VzKys7XG4gICAgfVxuICAgIHZhciBzaXplID0gKHBlbmQgLSBwYmVnaW4pICogaUZBQ1RPUiArIDEgPj4+IDA7XG4gICAgdmFyIGI1OCA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIHdoaWxlIChwYmVnaW4gIT09IHBlbmQpIHtcbiAgICAgIHZhciBjYXJyeSA9IHNvdXJjZVtwYmVnaW5dO1xuICAgICAgdmFyIGkgPSAwO1xuICAgICAgZm9yICh2YXIgaXQxID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiBpdDEgIT09IC0xOyBpdDEtLSwgaSsrKSB7XG4gICAgICAgIGNhcnJ5ICs9IDI1NiAqIGI1OFtpdDFdID4+PiAwO1xuICAgICAgICBiNThbaXQxXSA9IGNhcnJ5ICUgQkFTRSA+Pj4gMDtcbiAgICAgICAgY2FycnkgPSBjYXJyeSAvIEJBU0UgPj4+IDA7XG4gICAgICB9XG4gICAgICBpZiAoY2FycnkgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb24temVybyBjYXJyeScpO1xuICAgICAgfVxuICAgICAgbGVuZ3RoID0gaTtcbiAgICAgIHBiZWdpbisrO1xuICAgIH1cbiAgICB2YXIgaXQyID0gc2l6ZSAtIGxlbmd0aDtcbiAgICB3aGlsZSAoaXQyICE9PSBzaXplICYmIGI1OFtpdDJdID09PSAwKSB7XG4gICAgICBpdDIrKztcbiAgICB9XG4gICAgdmFyIHN0ciA9IExFQURFUi5yZXBlYXQoemVyb2VzKTtcbiAgICBmb3IgKDsgaXQyIDwgc2l6ZTsgKytpdDIpIHtcbiAgICAgIHN0ciArPSBBTFBIQUJFVC5jaGFyQXQoYjU4W2l0Ml0pO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIGZ1bmN0aW9uIGRlY29kZVVuc2FmZShzb3VyY2UpIHtcbiAgICBpZiAodHlwZW9mIHNvdXJjZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFN0cmluZycpO1xuICAgIH1cbiAgICBpZiAoc291cmNlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KCk7XG4gICAgfVxuICAgIHZhciBwc3ogPSAwO1xuICAgIGlmIChzb3VyY2VbcHN6XSA9PT0gJyAnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB6ZXJvZXMgPSAwO1xuICAgIHZhciBsZW5ndGggPSAwO1xuICAgIHdoaWxlIChzb3VyY2VbcHN6XSA9PT0gTEVBREVSKSB7XG4gICAgICB6ZXJvZXMrKztcbiAgICAgIHBzeisrO1xuICAgIH1cbiAgICB2YXIgc2l6ZSA9IChzb3VyY2UubGVuZ3RoIC0gcHN6KSAqIEZBQ1RPUiArIDEgPj4+IDA7XG4gICAgdmFyIGIyNTYgPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgICB3aGlsZSAoc291cmNlW3Bzel0pIHtcbiAgICAgIHZhciBjYXJyeSA9IEJBU0VfTUFQW3NvdXJjZS5jaGFyQ29kZUF0KHBzeildO1xuICAgICAgaWYgKGNhcnJ5ID09PSAyNTUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIGkgPSAwO1xuICAgICAgZm9yICh2YXIgaXQzID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiBpdDMgIT09IC0xOyBpdDMtLSwgaSsrKSB7XG4gICAgICAgIGNhcnJ5ICs9IEJBU0UgKiBiMjU2W2l0M10gPj4+IDA7XG4gICAgICAgIGIyNTZbaXQzXSA9IGNhcnJ5ICUgMjU2ID4+PiAwO1xuICAgICAgICBjYXJyeSA9IGNhcnJ5IC8gMjU2ID4+PiAwO1xuICAgICAgfVxuICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKTtcbiAgICAgIH1cbiAgICAgIGxlbmd0aCA9IGk7XG4gICAgICBwc3orKztcbiAgICB9XG4gICAgaWYgKHNvdXJjZVtwc3pdID09PSAnICcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGl0NCA9IHNpemUgLSBsZW5ndGg7XG4gICAgd2hpbGUgKGl0NCAhPT0gc2l6ZSAmJiBiMjU2W2l0NF0gPT09IDApIHtcbiAgICAgIGl0NCsrO1xuICAgIH1cbiAgICB2YXIgdmNoID0gbmV3IFVpbnQ4QXJyYXkoemVyb2VzICsgKHNpemUgLSBpdDQpKTtcbiAgICB2YXIgaiA9IHplcm9lcztcbiAgICB3aGlsZSAoaXQ0ICE9PSBzaXplKSB7XG4gICAgICB2Y2hbaisrXSA9IGIyNTZbaXQ0KytdO1xuICAgIH1cbiAgICByZXR1cm4gdmNoO1xuICB9XG4gIGZ1bmN0aW9uIGRlY29kZShzdHJpbmcpIHtcbiAgICB2YXIgYnVmZmVyID0gZGVjb2RlVW5zYWZlKHN0cmluZyk7XG4gICAgaWYgKGJ1ZmZlcikge1xuICAgICAgcmV0dXJuIGJ1ZmZlcjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBOb24tJHsgbmFtZSB9IGNoYXJhY3RlcmApO1xuICB9XG4gIHJldHVybiB7XG4gICAgZW5jb2RlOiBlbmNvZGUsXG4gICAgZGVjb2RlVW5zYWZlOiBkZWNvZGVVbnNhZmUsXG4gICAgZGVjb2RlOiBkZWNvZGVcbiAgfTtcbn1cbnZhciBzcmMgPSBiYXNlO1xudmFyIF9icnJwX19tdWx0aWZvcm1hdHNfc2NvcGVfYmFzZVggPSBzcmM7XG5leHBvcnQgZGVmYXVsdCBfYnJycF9fbXVsdGlmb3JtYXRzX3Njb3BlX2Jhc2VYOyIsImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlNThidGMgPSBiYXNlWCh7XG4gIG5hbWU6ICdiYXNlNThidGMnLFxuICBwcmVmaXg6ICd6JyxcbiAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlBQkNERUZHSEpLTE1OUFFSU1RVVldYWVphYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6J1xufSk7XG5leHBvcnQgY29uc3QgYmFzZTU4ZmxpY2tyID0gYmFzZVgoe1xuICBuYW1lOiAnYmFzZTU4ZmxpY2tyJyxcbiAgcHJlZml4OiAnWicsXG4gIGFscGhhYmV0OiAnMTIzNDU2Nzg5YWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5ekFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWidcbn0pOyIsImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdiJyxcbiAgbmFtZTogJ2Jhc2UzMicsXG4gIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMydXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnQicsXG4gIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ2MnLFxuICBuYW1lOiAnYmFzZTMycGFkJyxcbiAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnQycsXG4gIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICd2JyxcbiAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXYnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnVicsXG4gIG5hbWU6ICdiYXNlMzJoZXh1cHBlcicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ3QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnVCcsXG4gIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVY9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnaCcsXG4gIG5hbWU6ICdiYXNlMzJ6JyxcbiAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTsiLCJpbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi92YXJpbnQuanMnO1xuaW1wb3J0ICogYXMgRGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5pbXBvcnQgeyBiYXNlNThidGMgfSBmcm9tICcuL2Jhc2VzL2Jhc2U1OC5qcyc7XG5pbXBvcnQgeyBiYXNlMzIgfSBmcm9tICcuL2Jhc2VzL2Jhc2UzMi5qcyc7XG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuL2J5dGVzLmpzJztcbmV4cG9ydCBjbGFzcyBDSUQge1xuICBjb25zdHJ1Y3Rvcih2ZXJzaW9uLCBjb2RlLCBtdWx0aWhhc2gsIGJ5dGVzKSB7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIHRoaXMubXVsdGloYXNoID0gbXVsdGloYXNoO1xuICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB0aGlzLmJ5dGVPZmZzZXQgPSBieXRlcy5ieXRlT2Zmc2V0O1xuICAgIHRoaXMuYnl0ZUxlbmd0aCA9IGJ5dGVzLmJ5dGVMZW5ndGg7XG4gICAgdGhpcy5hc0NJRCA9IHRoaXM7XG4gICAgdGhpcy5fYmFzZUNhY2hlID0gbmV3IE1hcCgpO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgIGJ5dGVPZmZzZXQ6IGhpZGRlbixcbiAgICAgIGJ5dGVMZW5ndGg6IGhpZGRlbixcbiAgICAgIGNvZGU6IHJlYWRvbmx5LFxuICAgICAgdmVyc2lvbjogcmVhZG9ubHksXG4gICAgICBtdWx0aWhhc2g6IHJlYWRvbmx5LFxuICAgICAgYnl0ZXM6IHJlYWRvbmx5LFxuICAgICAgX2Jhc2VDYWNoZTogaGlkZGVuLFxuICAgICAgYXNDSUQ6IGhpZGRlblxuICAgIH0pO1xuICB9XG4gIHRvVjAoKSB7XG4gICAgc3dpdGNoICh0aGlzLnZlcnNpb24pIHtcbiAgICBjYXNlIDA6IHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgICBjb25zdCB7Y29kZSwgbXVsdGloYXNofSA9IHRoaXM7XG4gICAgICAgIGlmIChjb2RlICE9PSBEQUdfUEJfQ09ERSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnZlcnQgYSBub24gZGFnLXBiIENJRCB0byBDSUR2MCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtdWx0aWhhc2guY29kZSAhPT0gU0hBXzI1Nl9DT0RFKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29udmVydCBub24gc2hhMi0yNTYgbXVsdGloYXNoIENJRCB0byBDSUR2MCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBDSUQuY3JlYXRlVjAobXVsdGloYXNoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgdG9WMSgpIHtcbiAgICBzd2l0Y2ggKHRoaXMudmVyc2lvbikge1xuICAgIGNhc2UgMDoge1xuICAgICAgICBjb25zdCB7Y29kZSwgZGlnZXN0fSA9IHRoaXMubXVsdGloYXNoO1xuICAgICAgICBjb25zdCBtdWx0aWhhc2ggPSBEaWdlc3QuY3JlYXRlKGNvZGUsIGRpZ2VzdCk7XG4gICAgICAgIHJldHVybiBDSUQuY3JlYXRlVjEodGhpcy5jb2RlLCBtdWx0aWhhc2gpO1xuICAgICAgfVxuICAgIGNhc2UgMToge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICAgIHRocm93IEVycm9yKGBDYW4gbm90IGNvbnZlcnQgQ0lEIHZlcnNpb24gJHsgdGhpcy52ZXJzaW9uIH0gdG8gdmVyc2lvbiAwLiBUaGlzIGlzIGEgYnVnIHBsZWFzZSByZXBvcnRgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZXF1YWxzKG90aGVyKSB7XG4gICAgcmV0dXJuIG90aGVyICYmIHRoaXMuY29kZSA9PT0gb3RoZXIuY29kZSAmJiB0aGlzLnZlcnNpb24gPT09IG90aGVyLnZlcnNpb24gJiYgRGlnZXN0LmVxdWFscyh0aGlzLm11bHRpaGFzaCwgb3RoZXIubXVsdGloYXNoKTtcbiAgfVxuICB0b1N0cmluZyhiYXNlKSB7XG4gICAgY29uc3Qge2J5dGVzLCB2ZXJzaW9uLCBfYmFzZUNhY2hlfSA9IHRoaXM7XG4gICAgc3dpdGNoICh2ZXJzaW9uKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmV0dXJuIHRvU3RyaW5nVjAoYnl0ZXMsIF9iYXNlQ2FjaGUsIGJhc2UgfHwgYmFzZTU4YnRjLmVuY29kZXIpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdG9TdHJpbmdWMShieXRlcywgX2Jhc2VDYWNoZSwgYmFzZSB8fCBiYXNlMzIuZW5jb2Rlcik7XG4gICAgfVxuICB9XG4gIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgdmVyc2lvbjogdGhpcy52ZXJzaW9uLFxuICAgICAgaGFzaDogdGhpcy5tdWx0aWhhc2guYnl0ZXNcbiAgICB9O1xuICB9XG4gIGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcbiAgICByZXR1cm4gJ0NJRCc7XG4gIH1cbiAgW1N5bWJvbC5mb3IoJ25vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tJyldKCkge1xuICAgIHJldHVybiAnQ0lEKCcgKyB0aGlzLnRvU3RyaW5nKCkgKyAnKSc7XG4gIH1cbiAgc3RhdGljIGlzQ0lEKHZhbHVlKSB7XG4gICAgZGVwcmVjYXRlKC9eMFxcLjAvLCBJU19DSURfREVQUkVDQVRJT04pO1xuICAgIHJldHVybiAhISh2YWx1ZSAmJiAodmFsdWVbY2lkU3ltYm9sXSB8fCB2YWx1ZS5hc0NJRCA9PT0gdmFsdWUpKTtcbiAgfVxuICBnZXQgdG9CYXNlRW5jb2RlZFN0cmluZygpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0RlcHJlY2F0ZWQsIHVzZSAudG9TdHJpbmcoKScpO1xuICB9XG4gIGdldCBjb2RlYygpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1wiY29kZWNcIiBwcm9wZXJ0eSBpcyBkZXByZWNhdGVkLCB1c2UgaW50ZWdlciBcImNvZGVcIiBwcm9wZXJ0eSBpbnN0ZWFkJyk7XG4gIH1cbiAgZ2V0IGJ1ZmZlcigpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0RlcHJlY2F0ZWQgLmJ1ZmZlciBwcm9wZXJ0eSwgdXNlIC5ieXRlcyB0byBnZXQgVWludDhBcnJheSBpbnN0ZWFkJyk7XG4gIH1cbiAgZ2V0IG11bHRpYmFzZU5hbWUoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdcIm11bHRpYmFzZU5hbWVcIiBwcm9wZXJ0eSBpcyBkZXByZWNhdGVkJyk7XG4gIH1cbiAgZ2V0IHByZWZpeCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1wicHJlZml4XCIgcHJvcGVydHkgaXMgZGVwcmVjYXRlZCcpO1xuICB9XG4gIHN0YXRpYyBhc0NJRCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIENJRCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0gZWxzZSBpZiAodmFsdWUgIT0gbnVsbCAmJiB2YWx1ZS5hc0NJRCA9PT0gdmFsdWUpIHtcbiAgICAgIGNvbnN0IHt2ZXJzaW9uLCBjb2RlLCBtdWx0aWhhc2gsIGJ5dGVzfSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIG5ldyBDSUQodmVyc2lvbiwgY29kZSwgbXVsdGloYXNoLCBieXRlcyB8fCBlbmNvZGVDSUQodmVyc2lvbiwgY29kZSwgbXVsdGloYXNoLmJ5dGVzKSk7XG4gICAgfSBlbHNlIGlmICh2YWx1ZSAhPSBudWxsICYmIHZhbHVlW2NpZFN5bWJvbF0gPT09IHRydWUpIHtcbiAgICAgIGNvbnN0IHt2ZXJzaW9uLCBtdWx0aWhhc2gsIGNvZGV9ID0gdmFsdWU7XG4gICAgICBjb25zdCBkaWdlc3QgPSBEaWdlc3QuZGVjb2RlKG11bHRpaGFzaCk7XG4gICAgICByZXR1cm4gQ0lELmNyZWF0ZSh2ZXJzaW9uLCBjb2RlLCBkaWdlc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbiAgc3RhdGljIGNyZWF0ZSh2ZXJzaW9uLCBjb2RlLCBkaWdlc3QpIHtcbiAgICBpZiAodHlwZW9mIGNvZGUgIT09ICdudW1iZXInKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0cmluZyBjb2RlY3MgYXJlIG5vIGxvbmdlciBzdXBwb3J0ZWQnKTtcbiAgICB9XG4gICAgc3dpdGNoICh2ZXJzaW9uKSB7XG4gICAgY2FzZSAwOiB7XG4gICAgICAgIGlmIChjb2RlICE9PSBEQUdfUEJfQ09ERSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVmVyc2lvbiAwIENJRCBtdXN0IHVzZSBkYWctcGIgKGNvZGU6ICR7IERBR19QQl9DT0RFIH0pIGJsb2NrIGVuY29kaW5nYCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBDSUQodmVyc2lvbiwgY29kZSwgZGlnZXN0LCBkaWdlc3QuYnl0ZXMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgY2FzZSAxOiB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gZW5jb2RlQ0lEKHZlcnNpb24sIGNvZGUsIGRpZ2VzdC5ieXRlcyk7XG4gICAgICAgIHJldHVybiBuZXcgQ0lEKHZlcnNpb24sIGNvZGUsIGRpZ2VzdCwgYnl0ZXMpO1xuICAgICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZlcnNpb24nKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgc3RhdGljIGNyZWF0ZVYwKGRpZ2VzdCkge1xuICAgIHJldHVybiBDSUQuY3JlYXRlKDAsIERBR19QQl9DT0RFLCBkaWdlc3QpO1xuICB9XG4gIHN0YXRpYyBjcmVhdGVWMShjb2RlLCBkaWdlc3QpIHtcbiAgICByZXR1cm4gQ0lELmNyZWF0ZSgxLCBjb2RlLCBkaWdlc3QpO1xuICB9XG4gIHN0YXRpYyBkZWNvZGUoYnl0ZXMpIHtcbiAgICBjb25zdCBbY2lkLCByZW1haW5kZXJdID0gQ0lELmRlY29kZUZpcnN0KGJ5dGVzKTtcbiAgICBpZiAocmVtYWluZGVyLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBjaWQ7XG4gIH1cbiAgc3RhdGljIGRlY29kZUZpcnN0KGJ5dGVzKSB7XG4gICAgY29uc3Qgc3BlY3MgPSBDSUQuaW5zcGVjdEJ5dGVzKGJ5dGVzKTtcbiAgICBjb25zdCBwcmVmaXhTaXplID0gc3BlY3Muc2l6ZSAtIHNwZWNzLm11bHRpaGFzaFNpemU7XG4gICAgY29uc3QgbXVsdGloYXNoQnl0ZXMgPSBjb2VyY2UoYnl0ZXMuc3ViYXJyYXkocHJlZml4U2l6ZSwgcHJlZml4U2l6ZSArIHNwZWNzLm11bHRpaGFzaFNpemUpKTtcbiAgICBpZiAobXVsdGloYXNoQnl0ZXMuYnl0ZUxlbmd0aCAhPT0gc3BlY3MubXVsdGloYXNoU2l6ZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIGNvbnN0IGRpZ2VzdEJ5dGVzID0gbXVsdGloYXNoQnl0ZXMuc3ViYXJyYXkoc3BlY3MubXVsdGloYXNoU2l6ZSAtIHNwZWNzLmRpZ2VzdFNpemUpO1xuICAgIGNvbnN0IGRpZ2VzdCA9IG5ldyBEaWdlc3QuRGlnZXN0KHNwZWNzLm11bHRpaGFzaENvZGUsIHNwZWNzLmRpZ2VzdFNpemUsIGRpZ2VzdEJ5dGVzLCBtdWx0aWhhc2hCeXRlcyk7XG4gICAgY29uc3QgY2lkID0gc3BlY3MudmVyc2lvbiA9PT0gMCA/IENJRC5jcmVhdGVWMChkaWdlc3QpIDogQ0lELmNyZWF0ZVYxKHNwZWNzLmNvZGVjLCBkaWdlc3QpO1xuICAgIHJldHVybiBbXG4gICAgICBjaWQsXG4gICAgICBieXRlcy5zdWJhcnJheShzcGVjcy5zaXplKVxuICAgIF07XG4gIH1cbiAgc3RhdGljIGluc3BlY3RCeXRlcyhpbml0aWFsQnl0ZXMpIHtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBjb25zdCBuZXh0ID0gKCkgPT4ge1xuICAgICAgY29uc3QgW2ksIGxlbmd0aF0gPSB2YXJpbnQuZGVjb2RlKGluaXRpYWxCeXRlcy5zdWJhcnJheShvZmZzZXQpKTtcbiAgICAgIG9mZnNldCArPSBsZW5ndGg7XG4gICAgICByZXR1cm4gaTtcbiAgICB9O1xuICAgIGxldCB2ZXJzaW9uID0gbmV4dCgpO1xuICAgIGxldCBjb2RlYyA9IERBR19QQl9DT0RFO1xuICAgIGlmICh2ZXJzaW9uID09PSAxOCkge1xuICAgICAgdmVyc2lvbiA9IDA7XG4gICAgICBvZmZzZXQgPSAwO1xuICAgIH0gZWxzZSBpZiAodmVyc2lvbiA9PT0gMSkge1xuICAgICAgY29kZWMgPSBuZXh0KCk7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uICE9PSAwICYmIHZlcnNpb24gIT09IDEpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGBJbnZhbGlkIENJRCB2ZXJzaW9uICR7IHZlcnNpb24gfWApO1xuICAgIH1cbiAgICBjb25zdCBwcmVmaXhTaXplID0gb2Zmc2V0O1xuICAgIGNvbnN0IG11bHRpaGFzaENvZGUgPSBuZXh0KCk7XG4gICAgY29uc3QgZGlnZXN0U2l6ZSA9IG5leHQoKTtcbiAgICBjb25zdCBzaXplID0gb2Zmc2V0ICsgZGlnZXN0U2l6ZTtcbiAgICBjb25zdCBtdWx0aWhhc2hTaXplID0gc2l6ZSAtIHByZWZpeFNpemU7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZlcnNpb24sXG4gICAgICBjb2RlYyxcbiAgICAgIG11bHRpaGFzaENvZGUsXG4gICAgICBkaWdlc3RTaXplLFxuICAgICAgbXVsdGloYXNoU2l6ZSxcbiAgICAgIHNpemVcbiAgICB9O1xuICB9XG4gIHN0YXRpYyBwYXJzZShzb3VyY2UsIGJhc2UpIHtcbiAgICBjb25zdCBbcHJlZml4LCBieXRlc10gPSBwYXJzZUNJRHRvQnl0ZXMoc291cmNlLCBiYXNlKTtcbiAgICBjb25zdCBjaWQgPSBDSUQuZGVjb2RlKGJ5dGVzKTtcbiAgICBjaWQuX2Jhc2VDYWNoZS5zZXQocHJlZml4LCBzb3VyY2UpO1xuICAgIHJldHVybiBjaWQ7XG4gIH1cbn1cbmNvbnN0IHBhcnNlQ0lEdG9CeXRlcyA9IChzb3VyY2UsIGJhc2UpID0+IHtcbiAgc3dpdGNoIChzb3VyY2VbMF0pIHtcbiAgY2FzZSAnUSc6IHtcbiAgICAgIGNvbnN0IGRlY29kZXIgPSBiYXNlIHx8IGJhc2U1OGJ0YztcbiAgICAgIHJldHVybiBbXG4gICAgICAgIGJhc2U1OGJ0Yy5wcmVmaXgsXG4gICAgICAgIGRlY29kZXIuZGVjb2RlKGAkeyBiYXNlNThidGMucHJlZml4IH0keyBzb3VyY2UgfWApXG4gICAgICBdO1xuICAgIH1cbiAgY2FzZSBiYXNlNThidGMucHJlZml4OiB7XG4gICAgICBjb25zdCBkZWNvZGVyID0gYmFzZSB8fCBiYXNlNThidGM7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBiYXNlNThidGMucHJlZml4LFxuICAgICAgICBkZWNvZGVyLmRlY29kZShzb3VyY2UpXG4gICAgICBdO1xuICAgIH1cbiAgY2FzZSBiYXNlMzIucHJlZml4OiB7XG4gICAgICBjb25zdCBkZWNvZGVyID0gYmFzZSB8fCBiYXNlMzI7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBiYXNlMzIucHJlZml4LFxuICAgICAgICBkZWNvZGVyLmRlY29kZShzb3VyY2UpXG4gICAgICBdO1xuICAgIH1cbiAgZGVmYXVsdDoge1xuICAgICAgaWYgKGJhc2UgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBFcnJvcignVG8gcGFyc2Ugbm9uIGJhc2UzMiBvciBiYXNlNThidGMgZW5jb2RlZCBDSUQgbXVsdGliYXNlIGRlY29kZXIgbXVzdCBiZSBwcm92aWRlZCcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFtcbiAgICAgICAgc291cmNlWzBdLFxuICAgICAgICBiYXNlLmRlY29kZShzb3VyY2UpXG4gICAgICBdO1xuICAgIH1cbiAgfVxufTtcbmNvbnN0IHRvU3RyaW5nVjAgPSAoYnl0ZXMsIGNhY2hlLCBiYXNlKSA9PiB7XG4gIGNvbnN0IHtwcmVmaXh9ID0gYmFzZTtcbiAgaWYgKHByZWZpeCAhPT0gYmFzZTU4YnRjLnByZWZpeCkge1xuICAgIHRocm93IEVycm9yKGBDYW5ub3Qgc3RyaW5nIGVuY29kZSBWMCBpbiAkeyBiYXNlLm5hbWUgfSBlbmNvZGluZ2ApO1xuICB9XG4gIGNvbnN0IGNpZCA9IGNhY2hlLmdldChwcmVmaXgpO1xuICBpZiAoY2lkID09IG51bGwpIHtcbiAgICBjb25zdCBjaWQgPSBiYXNlLmVuY29kZShieXRlcykuc2xpY2UoMSk7XG4gICAgY2FjaGUuc2V0KHByZWZpeCwgY2lkKTtcbiAgICByZXR1cm4gY2lkO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBjaWQ7XG4gIH1cbn07XG5jb25zdCB0b1N0cmluZ1YxID0gKGJ5dGVzLCBjYWNoZSwgYmFzZSkgPT4ge1xuICBjb25zdCB7cHJlZml4fSA9IGJhc2U7XG4gIGNvbnN0IGNpZCA9IGNhY2hlLmdldChwcmVmaXgpO1xuICBpZiAoY2lkID09IG51bGwpIHtcbiAgICBjb25zdCBjaWQgPSBiYXNlLmVuY29kZShieXRlcyk7XG4gICAgY2FjaGUuc2V0KHByZWZpeCwgY2lkKTtcbiAgICByZXR1cm4gY2lkO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBjaWQ7XG4gIH1cbn07XG5jb25zdCBEQUdfUEJfQ09ERSA9IDExMjtcbmNvbnN0IFNIQV8yNTZfQ09ERSA9IDE4O1xuY29uc3QgZW5jb2RlQ0lEID0gKHZlcnNpb24sIGNvZGUsIG11bHRpaGFzaCkgPT4ge1xuICBjb25zdCBjb2RlT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKHZlcnNpb24pO1xuICBjb25zdCBoYXNoT2Zmc2V0ID0gY29kZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChjb2RlKTtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShoYXNoT2Zmc2V0ICsgbXVsdGloYXNoLmJ5dGVMZW5ndGgpO1xuICB2YXJpbnQuZW5jb2RlVG8odmVyc2lvbiwgYnl0ZXMsIDApO1xuICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIGNvZGVPZmZzZXQpO1xuICBieXRlcy5zZXQobXVsdGloYXNoLCBoYXNoT2Zmc2V0KTtcbiAgcmV0dXJuIGJ5dGVzO1xufTtcbmNvbnN0IGNpZFN5bWJvbCA9IFN5bWJvbC5mb3IoJ0BpcGxkL2pzLWNpZC9DSUQnKTtcbmNvbnN0IHJlYWRvbmx5ID0ge1xuICB3cml0YWJsZTogZmFsc2UsXG4gIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gIGVudW1lcmFibGU6IHRydWVcbn07XG5jb25zdCBoaWRkZW4gPSB7XG4gIHdyaXRhYmxlOiBmYWxzZSxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGNvbmZpZ3VyYWJsZTogZmFsc2Vcbn07XG5jb25zdCB2ZXJzaW9uID0gJzAuMC4wLWRldic7XG5jb25zdCBkZXByZWNhdGUgPSAocmFuZ2UsIG1lc3NhZ2UpID0+IHtcbiAgaWYgKHJhbmdlLnRlc3QodmVyc2lvbikpIHtcbiAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9XG59O1xuY29uc3QgSVNfQ0lEX0RFUFJFQ0FUSU9OID0gYENJRC5pc0NJRCh2KSBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgcmVsZWFzZS5cbkZvbGxvd2luZyBjb2RlIHBhdHRlcm46XG5cbmlmIChDSUQuaXNDSUQodmFsdWUpKSB7XG4gIGRvU29tZXRoaW5nV2l0aENJRCh2YWx1ZSlcbn1cblxuSXMgcmVwbGFjZWQgd2l0aDpcblxuY29uc3QgY2lkID0gQ0lELmFzQ0lEKHZhbHVlKVxuaWYgKGNpZCkge1xuICAvLyBNYWtlIHN1cmUgdG8gdXNlIGNpZCBpbnN0ZWFkIG9mIHZhbHVlXG4gIGRvU29tZXRoaW5nV2l0aENJRChjaWQpXG59XG5gOyIsImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5leHBvcnQgY29uc3QgZnJvbSA9ICh7bmFtZSwgY29kZSwgZW5jb2RlfSkgPT4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUpO1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgfVxuICBkaWdlc3QoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICByZXR1cm4gcmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCByZXN1bHQpIDogcmVzdWx0LnRoZW4oZGlnZXN0ID0+IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCBkaWdlc3QpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCB7IGZyb20gfSBmcm9tICcuL2hhc2hlci5qcyc7XG5jb25zdCBzaGEgPSBuYW1lID0+IGFzeW5jIGRhdGEgPT4gbmV3IFVpbnQ4QXJyYXkoYXdhaXQgY3J5cHRvLnN1YnRsZS5kaWdlc3QobmFtZSwgZGF0YSkpO1xuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGZyb20oe1xuICBuYW1lOiAnc2hhMi0yNTYnLFxuICBjb2RlOiAxOCxcbiAgZW5jb2RlOiBzaGEoJ1NIQS0yNTYnKVxufSk7XG5leHBvcnQgY29uc3Qgc2hhNTEyID0gZnJvbSh7XG4gIG5hbWU6ICdzaGEyLTUxMicsXG4gIGNvZGU6IDE5LFxuICBlbmNvZGU6IHNoYSgnU0hBLTUxMicpXG59KTsiLCJpbXBvcnQgYWxnb3NkayBmcm9tICdhbGdvc2RrJztcbmltcG9ydCB7IGRlY29kZUFkZHJlc3MsIGVuY29kZUFkZHJlc3MgfSBmcm9tIFwiYWxnb3Nka1wiO1xuaW1wb3J0IHsgQ0lEIH0gZnJvbSBcIm11bHRpZm9ybWF0cy9jaWRcIjtcbmltcG9ydCAqIGFzIG1mc2hhMiBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL3NoYTInO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvZGlnZXN0JztcblxubGV0IHBhcmFtcztcblxuLy9zZWVcbi8vaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9BUkNzL2Jsb2IvbWFpbi9BUkNzL2FyYy0wMDE5Lm1kXG4vL2h0dHBzOi8vZ2l0aHViLmNvbS9iYXJuamFtaW4vYXJjMy54eXovYmxvYi9tYWluL3NyYy9saWIvbmZ0LnRzXG5cbmNvbnN0IEFSQzNfVVJMX1NVRkZJWCA9ICcjYXJjMyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDSUQoYXNzZXRVcmwsIHJlc2VydmVBZGRyZXNzKXtcblxuICAgIGxldCB1cmw7XG5cbiAgICBpZiAoYXNzZXRVcmwuZW5kc1dpdGgoQVJDM19VUkxfU1VGRklYKSlcbiAgICAgICAgdXJsID0gYXNzZXRVcmwuc2xpY2UoMCwgYXNzZXRVcmwubGVuZ3RoIC0gQVJDM19VUkxfU1VGRklYLmxlbmd0aCk7XG4gICAgZWxzZSB7XG4gICAgICAgIHVybCA9IGFzc2V0VXJsO1xuICAgIH1cblxuICAgIGxldCBjaHVua3MgPSB1cmwuc3BsaXQoJzovLycpO1xuXG4gICAgLy8gQ2hlY2sgaWYgcHJlZml4IGlzIHRlbXBsYXRlLWlwZnMgYW5kIGlmIHtpcGZzY2lkOi4ufSBpcyB3aGVyZSBDSUQgd291bGQgbm9ybWFsbHkgYmVcbiAgICBpZiAoY2h1bmtzWzBdID09PSAndGVtcGxhdGUtaXBmcycgJiYgY2h1bmtzWzFdLnN0YXJ0c1dpdGgoJ3tpcGZzY2lkOicpKSB7XG4gICAgICAgIC8vIExvb2sgZm9yIHNvbWV0aGluZyBsaWtlOiB0ZW1wbGF0ZTppcGZzOi8ve2lwZnNjaWQ6MTpyYXc6cmVzZXJ2ZTpzaGEyLTI1Nn0gYW5kIHBhcnNlIGludG8gY29tcG9uZW50c1xuICAgICAgICBjaHVua3NbMF0gPSAnaXBmcyc7XG4gICAgICAgIGNvbnN0IGNpZENvbXBvbmVudHMgPSBjaHVua3NbMV0uc3BsaXQoJzonKTtcbiAgICAgICAgaWYgKGNpZENvbXBvbmVudHMubGVuZ3RoICE9PSA1KSB7XG4gICAgICAgICAgICAvLyBnaXZlIHVwXG4gICAgICAgICAgICBjb25zb2xlLmxvZygndW5rbm93biBpcGZzY2lkIGZvcm1hdCcpO1xuICAgICAgICAgICAgcmV0dXJuIHVybDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbLCBjaWRWZXJzaW9uLCBjaWRDb2RlYywgYXNhRmllbGQsIGNpZEhhc2hdID0gY2lkQ29tcG9uZW50cztcblxuICAgICAgICAvLyBjb25zdCBjaWRWZXJzaW9uSW50ID0gcGFyc2VJbnQoY2lkVmVyc2lvbikgYXMgQ0lEVmVyc2lvblxuICAgICAgICBpZiAoY2lkSGFzaC5zcGxpdCgnfScpWzBdICE9PSAnc2hhMi0yNTYnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygndW5zdXBwb3J0ZWQgaGFzaDonLCBjaWRIYXNoKTtcbiAgICAgICAgICAgIHJldHVybiB1cmw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNpZENvZGVjICE9PSAncmF3JyAmJiBjaWRDb2RlYyAhPT0gJ2RhZy1wYicpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd1bnN1cHBvcnRlZCBjb2RlYzonLCBjaWRDb2RlYyk7XG4gICAgICAgICAgICByZXR1cm4gdXJsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhc2FGaWVsZCAhPT0gJ3Jlc2VydmUnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygndW5zdXBwb3J0ZWQgYXNhIGZpZWxkOicsIGFzYUZpZWxkKTtcbiAgICAgICAgICAgIHJldHVybiB1cmw7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNpZENvZGVjQ29kZVxuICAgICAgICBpZiAoY2lkQ29kZWMgPT09ICdyYXcnKSB7XG4gICAgICAgICAgICBjaWRDb2RlY0NvZGUgPSAweDU1O1xuICAgICAgICB9IGVsc2UgaWYgKGNpZENvZGVjID09PSAnZGFnLXBiJykge1xuICAgICAgICAgICAgY2lkQ29kZWNDb2RlID0gMHg3MDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGdldCAzMiBieXRlcyBVaW50OEFycmF5IHJlc2VydmUgYWRkcmVzcyAtIHRyZWF0aW5nIGl0IGFzIDMyLWJ5dGUgc2hhMi0yNTYgaGFzaFxuICAgICAgICBjb25zdCBhZGRyID0gZGVjb2RlQWRkcmVzcyhyZXNlcnZlQWRkcmVzcyk7XG4gICAgICAgIGNvbnN0IG1oZGlnZXN0ID0gZGlnZXN0LmNyZWF0ZShtZnNoYTIuc2hhMjU2LmNvZGUsIGFkZHIucHVibGljS2V5KTtcblxuICAgICAgICBjb25zdCBjaWQgPSBDSUQuY3JlYXRlKHBhcnNlSW50KGNpZFZlcnNpb24pLCBjaWRDb2RlY0NvZGUsIG1oZGlnZXN0KTtcblxuICAgICAgICByZXR1cm4gY2lkLnRvU3RyaW5nKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRSZXNlcnZlQWRkcmVzcyhjaWQpe1xuXG4gICAgY29uc3QgZGVjb2RlZENJRCA9IENJRC5wYXJzZShjaWQpO1xuICAgIHJldHVybiBlbmNvZGVBZGRyZXNzKFVpbnQ4QXJyYXkuZnJvbShCdWZmZXIuZnJvbShkZWNvZGVkQ0lELm11bHRpaGFzaC5kaWdlc3QpKSk7XG5cbn1cblxuZnVuY3Rpb24gZ2V0QXNzZXRVUkwoY2lkKXtcblxuICAgIGNvbnN0IGRlY29kZWRDSUQgPSBDSUQucGFyc2UoY2lkKTtcbiAgICBjb25zdCBjb2RlY0NvZGUgPSBkZWNvZGVkQ0lELmNvZGU7XG5cbiAgICBsZXQgY29kZWNTdHI7XG5cbiAgICBpZiAoY29kZWNDb2RlID09PSAweDU1KSB7XG4gICAgICAgIGNvZGVjU3RyID0gJ3Jhdyc7XG4gICAgfSBlbHNlIGlmIChjb2RlY0NvZGUgPT09IDB4NzApIHtcbiAgICAgICAgY29kZWNTdHIgPSAnZGFnLXBiJztcbiAgICB9XG5cbiAgICByZXR1cm4gYHRlbXBsYXRlLWlwZnM6Ly97aXBmc2NpZDoke2RlY29kZWRDSUQudmVyc2lvbn06JHtjb2RlY1N0cn06cmVzZXJ2ZTpzaGEyLTI1Nn1gXG59XG5cbi8qXG5vcHRpb25zID0ge1xuICAgIGFzc2V0TmFtZVxuICAgIHVuaXROYW1lXG4gICAgY3JlYXRvckFkZHJlc3NcbiAgICB0b3RhbFxuICAgIGlwZnNDaWQsXG5cbn1cbiovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWludEFSQzE5KGFsZ29kQ2xpZW50LCBvcHRpb25zLCBzaWduZXJfbW5lbW9uaWMpe1xuXG4gICAgcGFyYW1zID0gYXdhaXQgYWxnb2RDbGllbnQuZ2V0VHJhbnNhY3Rpb25QYXJhbXMoKS5kbygpO1xuICAgIFxuXG4gICAgLy9jaGVjayBhc3NldCBuYW1lIGxlbmd0aCgpXG4gICAgaWYgKEJ1ZmZlci5ieXRlTGVuZ3RoKG9wdGlvbnMuYXNzZXROYW1lLCAndXRmLTgnKSA+IDMyKXtcbiAgICAgICAgdGhyb3cobmV3IEVycm9yKGBBc3NldCBuYW1lIHRvIGxvbmcgKCR7QnVmZmVyLmJ5dGVMZW5ndGgob3B0aW9ucy5hc3NldE5hbWUsICd1dGYtOCcpfSBieXRlcyBpbnN0ZWFkIG9mIDMyKTogJHtvcHRpb25zLmFzc2V0TmFtZX1gKSlcbiAgICB9XG5cbiAgICAvL2NoZWNrIGFzc2V0IG5hbWUgbGVuZ3RoKClcbiAgICBpZiAoQnVmZmVyLmJ5dGVMZW5ndGgob3B0aW9ucy51bml0TmFtZSwgJ3V0Zi04JykgPiA4KXtcbiAgICAgICAgdGhyb3cobmV3IEVycm9yKGBVbml0IG5hbWUgdG8gbG9uZyAoJHtCdWZmZXIuYnl0ZUxlbmd0aChvcHRpb25zLnVuaXROYW1lLCAndXRmLTgnKX0gYnl0ZXMgaW5zdGVhZCBvZiA4KTogJHtvcHRpb25zLnVuaXROYW1lfWApKVxuICAgIH1cblxuICAgIGNvbnN0IHNpZ25lclNlY3JldEtleSA9IGFsZ29zZGsubW5lbW9uaWNUb1NlY3JldEtleShzaWduZXJfbW5lbW9uaWMpLnNrO1xuXG4gICAgY29uc3QgYXNzZXRVcmwgPSBnZXRBc3NldFVSTChvcHRpb25zLmlwZnNDaWQpO1xuICAgIGNvbnN0IHJlc2VydmVBZGRyZXNzID0gZ2V0UmVzZXJ2ZUFkZHJlc3Mob3B0aW9ucy5pcGZzQ2lkKVxuXG4gICAgY29uc3QgdHhuID0gYWxnb3Nkay5tYWtlQXNzZXRDcmVhdGVUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdCh7XG4gICAgICAgIGZyb206IG9wdGlvbnMuY3JlYXRvckFkZHJlc3MsXG4gICAgICAgIGFzc2V0TmFtZTogb3B0aW9ucy5hc3NldE5hbWUsXG4gICAgICAgIHVuaXROYW1lOiBvcHRpb25zLnVuaXROYW1lLFxuICAgICAgICBhc3NldFVSTDogYXNzZXRVcmwsXG4gICAgICAgIG1hbmFnZXI6IG9wdGlvbnMuY3JlYXRvckFkZHJlc3MsXG4gICAgICAgIHJlc2VydmU6IHJlc2VydmVBZGRyZXNzLFxuICAgICAgICBkZWNpbWFsczogMCxcbiAgICAgICAgdG90YWw6IG9wdGlvbnMudG90YWwsXG4gICAgICAgIHN1Z2dlc3RlZFBhcmFtczogcGFyYW1zLFxuICAgICAgICBkZWZhdWx0RnJvemVuOiBmYWxzZVxuXG4gICAgfSlcblxuICAgIC8vc2lnbiB0eFxuICAgIGNvbnN0IHNpZ25lZFR4ID0gdHhuLnNpZ25UeG4oc2lnbmVyU2VjcmV0S2V5KTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbklkID0gdHhuLnR4SUQoKS50b1N0cmluZygpO1xuXG4gICAgYXdhaXQgYWxnb2RDbGllbnQuc2VuZFJhd1RyYW5zYWN0aW9uKHNpZ25lZFR4KS5kbygpO1xuXG4gICAgY29uc3QgY29uZmlybWVkVHhuID0gYXdhaXQgYWxnb3Nkay53YWl0Rm9yQ29uZmlybWF0aW9uKFxuICAgICAgICBhbGdvZENsaWVudCxcbiAgICAgICAgdHJhbnNhY3Rpb25JZCxcbiAgICAgICAgNFxuICAgICAgICApO1xuXG4gICAgY29uc29sZS5sb2coYENvbmZpcm1lZDogJHt0cmFuc2FjdGlvbklkfWApXG4gICAgcmV0dXJuKGNvbmZpcm1lZFR4bik7XG5cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUFSQzE5KGFsZ29kQ2xpZW50LCBhc3NldElkLCBjcmVhdG9yQWRkcmVzcywgbmV3Q2lkLCBub3RlID0gdW5kZWZpbmVkLCBzaWduZXJfbW5lbW9uaWMsIHJldHVyblVuc2lnbmVkVHhuT2JqID0gZmFsc2Upe1xuXG4gICAgaWYgKCFwYXJhbXMpe1xuICAgICAgICBwYXJhbXMgPSBhd2FpdCBhbGdvZENsaWVudC5nZXRUcmFuc2FjdGlvblBhcmFtcygpLmRvKCk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzZXJ2ZUFkZHJlc3MgPSBnZXRSZXNlcnZlQWRkcmVzcyhuZXdDaWQpO1xuXG4gICAgY29uc3QgdHhuT2JqID0ge1xuICAgICAgICBmcm9tOiBjcmVhdG9yQWRkcmVzcyxcbiAgICAgICAgYXNzZXRJbmRleDogYXNzZXRJZCxcbiAgICAgICAgbWFuYWdlcjogY3JlYXRvckFkZHJlc3MsXG4gICAgICAgIHJlc2VydmU6IHJlc2VydmVBZGRyZXNzLFxuICAgICAgICBzdWdnZXN0ZWRQYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgc3RyaWN0RW1wdHlBZGRyZXNzQ2hlY2tpbmc6IGZhbHNlLFxuICAgICAgICBub3RlOiBub3RlXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHR4biA9IGFsZ29zZGsubWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QodHhuT2JqKTtcblxuICAgIGlmIChyZXR1cm5VbnNpZ25lZFR4bk9iail7XG4gICAgICAgIHJldHVybiB0eG5PYmo7XG4gICAgfVxuXG4gICAgY29uc3Qgc2lnbmVyU2VjcmV0S2V5ID0gYWxnb3Nkay5tbmVtb25pY1RvU2VjcmV0S2V5KHNpZ25lcl9tbmVtb25pYykuc2s7XG5cbiAgICAvL3NpZ24gdHhcbiAgICBjb25zdCBzaWduZWRUeCA9IHR4bi5zaWduVHhuKHNpZ25lclNlY3JldEtleSk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb25JZCA9IHR4bi50eElEKCkudG9TdHJpbmcoKTtcblxuICAgIGF3YWl0IGFsZ29kQ2xpZW50LnNlbmRSYXdUcmFuc2FjdGlvbihzaWduZWRUeCkuZG8oKTtcblxuICAgIGNvbnN0IGNvbmZpcm1lZFR4biA9IGF3YWl0IGFsZ29zZGsud2FpdEZvckNvbmZpcm1hdGlvbihcbiAgICAgICAgYWxnb2RDbGllbnQsXG4gICAgICAgIHRyYW5zYWN0aW9uSWQsXG4gICAgICAgIDRcbiAgICApO1xuXG4gICAgY29uc29sZS5sb2coYENvbmZpcm1lZDogJHt0cmFuc2FjdGlvbklkfWApXG4gICAgcmV0dXJuIGNvbmZpcm1lZFR4bjtcblxufSIsImltcG9ydCB7IGdldENJRCB9IGZyb20gXCIuL2FyYzE5LmpzXCI7XG5pbXBvcnQgc2V0dGluZ3MgZnJvbSBcImN1c3RvbS1zZXR0aW5nc1wiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJjcm9zcy1mZXRjaFwiO1xuXG5leHBvcnQgY2xhc3MgTkZUIHtcbiAgY29uc3RydWN0b3IoYXNzZXRJZCwgYXNzZXRJbmZvKSB7XG4gICAgdGhpcy5hc3NldElkID0gYXNzZXRJZDtcbiAgICB0aGlzLm5hbWU7XG4gICAgdGhpcy51bml0TmFtZTtcbiAgICB0aGlzLnVybDtcbiAgICB0aGlzLnRvdGFsO1xuICAgIHRoaXMucmVzZXJ2ZTtcbiAgICB0aGlzLmNpZDtcblxuICAgIGlmIChhc3NldEluZm8gJiYgYXNzZXRJbmZvLnBhcmFtcykge1xuICAgICAgdGhpcy5uYW1lID0gYXNzZXRJbmZvLnBhcmFtcy5uYW1lO1xuICAgICAgdGhpcy51bml0TmFtZSA9IGFzc2V0SW5mby5wYXJhbXNbXCJ1bml0LW5hbWVcIl07XG4gICAgICB0aGlzLnVybCA9IGFzc2V0SW5mby5wYXJhbXMudXJsO1xuICAgICAgdGhpcy50b3RhbCA9IGFzc2V0SW5mby5wYXJhbXMudG90YWw7XG4gICAgICB0aGlzLnJlc2VydmUgPSBhc3NldEluZm8ucGFyYW1zLnJlc2VydmU7XG4gICAgfVxuXG4gICAgdGhpcy5hbW91bnQ7XG4gICAgdGhpcy5pbWFnZVVybDtcbiAgICB0aGlzLmltYWdlVXJsQWx0ZXJuYXRlO1xuICAgIHRoaXMubWV0YWRhdGE7XG5cbiAgICB0aGlzLmlzTG9hZGVkID0gZmFsc2U7XG4gIH1cblxuICBhc3luYyBsb2FkKGFsZ29JbmRleGVyLCB1c2VQZXJhID0gZmFsc2UpIHtcbiAgICBpZiAoIXRoaXMudXJsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHVzZVBlcmEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHRoaXMubG9hZFdpdGhQZXJhKCk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICF0aGlzLmltYWdlVXJsIHx8XG4gICAgICB0aGlzLmltYWdlVXJsLnN0YXJ0c1dpdGgoXCJudWxsXCIpIHx8XG4gICAgICB0aGlzLmltYWdlVXJsLnN0YXJ0c1dpdGgoXCJ1bmRlZmluZWRcIilcbiAgICApIHtcbiAgICAgIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKFwidGVtcGxhdGUtaXBmczovL1wiKSkge1xuICAgICAgICBhd2FpdCB0aGlzLmxvYWRBUkM2OShhbGdvSW5kZXhlcik7XG4gICAgICAgIGF3YWl0IHRoaXMubG9hZEFSQzE5KGFsZ29JbmRleGVyKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy51cmwuZW5kc1dpdGgoXCIjYXJjM1wiKSkge1xuICAgICAgICBhd2FpdCB0aGlzLmxvYWRBUkMzKGFsZ29JbmRleGVyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF3YWl0IHRoaXMubG9hZEFSQzY5KGFsZ29JbmRleGVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmlzTG9hZGVkID0gdHJ1ZTtcblxuICAgIC8vcmV0dXJuIHRydWU7XG4gIH1cblxuICBhc3luYyBsb2FkV2l0aFBlcmEoKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2goYCR7c2V0dGluZ3MucGVyYUFwaVVybH0vYXNzZXRzLyR7dGhpcy5hc3NldElkfWApO1xuXG4gICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgY29uc3QgcGVyYVBhcnNlckluZm8gPSBhd2FpdCByZXN1bHQuanNvbigpO1xuXG4gICAgICBpZiAocGVyYVBhcnNlckluZm8uY29sbGVjdGlibGUpIHtcbiAgICAgICAgdGhpcy5pbWFnZVVybCA9IHBlcmFQYXJzZXJJbmZvLmNvbGxlY3RpYmxlLnByaW1hcnlfaW1hZ2UgKyBcIj93aWR0aD01MTJcIjtcblxuICAgICAgICBpZiAocGVyYVBhcnNlckluZm8uY29sbGVjdGlibGU/LnRyYWl0cz8ubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGxldCBwcm9wZXJ0aWVzID0ge307XG5cbiAgICAgICAgICBmb3IgKGNvbnN0IHRyYWl0IG9mIHBlcmFQYXJzZXJJbmZvLmNvbGxlY3RpYmxlLnRyYWl0cykge1xuICAgICAgICAgICAgcHJvcGVydGllc1t0cmFpdC5kaXNwbGF5X25hbWVdID0gdHJhaXQuZGlzcGxheV92YWx1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLm1ldGFkYXRhID0ge1xuICAgICAgICAgICAgcHJvcGVydGllczogcHJvcGVydGllcyxcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmV0Y2hpbmcgcGVyYSBlcnJvciAke3Jlc3VsdC5zdGF0dXN9YCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbG9hZEFSQzMoYWxnb0luZGV4ZXIpIHtcbiAgICBsZXQgdXJsQ2h1bmtzID0gdGhpcy51cmwuc3BsaXQoXCIvL1wiKTtcbiAgICB1cmxDaHVua3MgPSB1cmxDaHVua3NbMV0uc3BsaXQoXCIjXCIpO1xuICAgIGNvbnN0IGNpZCA9IHVybENodW5rc1swXTtcblxuICAgIHRoaXMuY2lkID0gY2lkO1xuXG4gICAgYXdhaXQgdGhpcy5sb2FkSXBmc01ldGFkYXRhKGNpZCk7XG4gIH1cblxuICBhc3luYyBsb2FkQVJDMTkoYWxnb0luZGV4ZXIpIHtcbiAgICBjb25zdCBjaWQgPSBnZXRDSUQodGhpcy51cmwsIHRoaXMucmVzZXJ2ZSk7XG5cbiAgICB0aGlzLmNpZCA9IGNpZDtcblxuICAgIGF3YWl0IHRoaXMubG9hZElwZnNNZXRhZGF0YShjaWQpO1xuICB9XG5cbiAgYjY0RGVjb2RlVW5pY29kZShzdHIpIHtcbiAgICAvLyBHb2luZyBiYWNrd2FyZHM6IGZyb20gYnl0ZXN0cmVhbSwgdG8gcGVyY2VudC1lbmNvZGluZywgdG8gb3JpZ2luYWwgc3RyaW5nLlxuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoXG4gICAgICBhdG9iKHN0cilcbiAgICAgICAgLnNwbGl0KFwiXCIpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICByZXR1cm4gXCIlXCIgKyAoXCIwMFwiICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO1xuICAgICAgICB9KVxuICAgICAgICAuam9pbihcIlwiKVxuICAgICk7XG4gIH1cblxuICBhc3luYyBsb2FkQVJDNjkoYWxnb0luZGV4ZXIpIHtcbiAgICBpZiAodGhpcy51cmwuc3RhcnRzV2l0aChcImlwZnM6Ly9cIikpIHtcbiAgICAgIGxldCB1cmxDaHVua3MgPSB0aGlzLnVybC5zcGxpdChcIi8vXCIpO1xuICAgICAgdXJsQ2h1bmtzID0gdXJsQ2h1bmtzWzFdLnNwbGl0KFwiI1wiKTtcbiAgICAgIGNvbnN0IGNpZCA9IHVybENodW5rc1swXTtcblxuICAgICAgdGhpcy5jaWQgPSBjaWQ7XG5cbiAgICAgIGlmIChjaWQpIHtcbiAgICAgICAgdGhpcy5pbWFnZVVybCA9IGAke3NldHRpbmdzLnByaW1hcnlJcGZzR2F0ZXdheVVybH0vJHtjaWR9YDtcbiAgICAgICAgdGhpcy5pbWFnZVVybEFsdGVybmF0ZSA9IGAke3NldHRpbmdzLnNlY29uZGFyeUlwZnNHYXRld2F5VXJsfS8ke2NpZH1gO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICB0aGlzLnVybC5zdGFydHNXaXRoKFwiaHR0cDovL1wiKSB8fFxuICAgICAgdGhpcy51cmwuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpXG4gICAgKSB7XG4gICAgICB0aGlzLmltYWdlVXJsID0gdGhpcy51cmw7XG4gICAgICB0aGlzLmltYWdlVXJsQWx0ZXJuYXRlID0gdGhpcy51cmw7XG4gICAgfVxuXG4gICAgLy9sb2FkIHByb3BlcnRpZXNcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhbGdvSW5kZXhlclxuICAgICAgLmxvb2t1cEFzc2V0VHJhbnNhY3Rpb25zKHRoaXMuYXNzZXRJZClcbiAgICAgIC50eFR5cGUoXCJhY2ZnXCIpXG4gICAgICAuZG8oKTtcblxuICAgIGxldCB0cmFuc2FjdGlvbnMgPSByZXN1bHQudHJhbnNhY3Rpb25zO1xuICAgIHRyYW5zYWN0aW9ucy5zb3J0KChhLCBiKSA9PiBiW1wicm91bmQtdGltZVwiXSAtIGFbXCJyb3VuZC10aW1lXCJdKTtcblxuICAgIC8vIEF0dGVtcHQgdG8gcGFyc2UgZWFjaCBgYWNmYCB0cmFuc2FjdGlvbidzIG5vdGUgZm9yIEFSQzY5IG1ldGFkYXRhLlxuICAgIGZvciAoY29uc3QgdHJhbnNhY3Rpb24gb2YgdHJhbnNhY3Rpb25zKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBub3RlQmFzZTY0ID0gdHJhbnNhY3Rpb24ubm90ZTtcbiAgICAgICAgY29uc3Qgbm90ZVN0cmluZyA9IHRoaXMuYjY0RGVjb2RlVW5pY29kZShub3RlQmFzZTY0KTtcblxuICAgICAgICBjb25zdCBub3RlSnNvbiA9IEpTT04ucGFyc2Uobm90ZVN0cmluZyk7XG5cbiAgICAgICAgaWYgKG5vdGVKc29uLnN0YW5kYXJkID09PSBcImFyYzY5XCIpIHtcbiAgICAgICAgICB0aGlzLm1ldGFkYXRhID0gbm90ZUpzb247XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvL2NvbnNvbGUubG9nKGVycik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbG9hZElwZnNNZXRhZGF0YShpcGZzQ2lkKSB7XG4gICAgbGV0IG1ldGFkYXRhO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGZldGNoKFxuICAgICAgICBgJHtzZXR0aW5ncy5wcmltYXJ5SXBmc0dhdGV3YXlVcmx9LyR7aXBmc0NpZH1gXG4gICAgICApO1xuXG4gICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzdWx0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuXG4gICAgICAgIGlmIChjb250ZW50VHlwZS5pbmNsdWRlcyhcImpzb25cIikpIHtcbiAgICAgICAgICBtZXRhZGF0YSA9IGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoY29udGVudFR5cGUuaW5jbHVkZXMoXCJpbWFnZVwiKSkge1xuXG4gICAgICAgICAgdGhpcy5pbWFnZVVybCA9IGAke3NldHRpbmdzLnByaW1hcnlJcGZzR2F0ZXdheVVybH0vJHtpcGZzQ2lkfWA7XG4gICAgICAgICAgdGhpcy5pbWFnZVVybEFsdGVybmF0ZSA9IGAke3NldHRpbmdzLnNlY29uZGFyeUlwZnNHYXRld2F5VXJsfS8ke2lwZnNDaWR9YDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGZpbGUgdHlwZSBmb3IgQVJDMTlcIik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgRmV0Y2hpbmcgaXBmcyBtZXRhZGF0YSBlcnJvciAke3Jlc3VsdC5zdGF0dXN9IChwcmltYXJ5IGdhdGVhd2F5KWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcblxuICAgICAgLy90cnlpbmcgc2Vjb25kYXJ5IGdhdGVhd2F5XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgYCR7c2V0dGluZ3Muc2Vjb25kYXJ5SXBmc0dhdGV3YXlVcmx9LyR7aXBmc0NpZH1gXG4gICAgICApO1xuXG4gICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzdWx0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuXG4gICAgICAgIGlmIChjb250ZW50VHlwZS5pbmNsdWRlcyhcImpzb25cIikpIHtcbiAgICAgICAgICBtZXRhZGF0YSA9IGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoY29udGVudFR5cGUuaW5jbHVkZXMoXCJpbWFnZVwiKSkge1xuICAgICAgICAgIHRoaXMuaW1hZ2VVcmwgPSBgJHtzZXR0aW5ncy5wcmltYXJ5SXBmc0dhdGV3YXlVcmx9LyR7aXBmc0NpZH1gO1xuICAgICAgICAgIHRoaXMuaW1hZ2VVcmxBbHRlcm5hdGUgPSBgJHtzZXR0aW5ncy5zZWNvbmRhcnlJcGZzR2F0ZXdheVVybH0vJHtpcGZzQ2lkfWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBmaWxlIHR5cGUgZm9yIEFSQzE5XCIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICAgYEZldGNoaW5nIGlwZnMgbWV0YWRhdGEgZXJyb3IgJHtyZXN1bHQuc3RhdHVzfSAoc2Vjb25kYXJ5IGdhdGV3YXkpYFxuICAgICAgICApO1xuICAgICAgICBlcnJvci5zdGF0dXMgPSByZXN1bHQuc3RhdHVzO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobWV0YWRhdGEpIHtcbiAgICAgIGNvbnN0IGltYWdlQ2h1bmtzID0gbWV0YWRhdGFbXCJpbWFnZVwiXS5zcGxpdChcIi8vXCIpO1xuXG4gICAgICBpZiAoaW1hZ2VDaHVua3NbMF0gPT09IFwiaXBmczpcIikge1xuICAgICAgICB0aGlzLmltYWdlVXJsID0gYCR7c2V0dGluZ3MucHJpbWFyeUlwZnNHYXRld2F5VXJsfS8ke2ltYWdlQ2h1bmtzWzFdfWA7XG4gICAgICAgIHRoaXMuaW1hZ2VVcmxBbHRlcm5hdGUgPSBgJHtzZXR0aW5ncy5zZWNvbmRhcnlJcGZzR2F0ZXdheVVybH0vJHtpbWFnZUNodW5rc1sxXX1gO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubWV0YWRhdGEgPSBtZXRhZGF0YTtcbiAgfVxuXG4gIC8vdXNlIGFsdGVybmF0aXZlIGlwZnMgZ2F0ZWF3YXkgd2hlbiBpbWFnZSBmYWlsIHRvIGxvYWRcbiAgaGFuZGxlSW1hZ2VFcnJvcihpbWdFbGVtZW50KSB7XG4gICAgaW1nRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAodGhpcy5pbWFnZVVybEFsdGVybmF0ZSAmJiBpbWdFbGVtZW50LnNyYyAhPT0gdGhpcy5pbWFnZVVybEFsdGVybmF0ZSkge1xuICAgICAgICBpbWdFbGVtZW50LnNyYyA9IHRoaXMuaW1hZ2VVcmxBbHRlcm5hdGU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IE5GVCB9IGZyb20gXCIuL25mdC5qc1wiO1xuaW1wb3J0IHNldHRpbmdzIGZyb20gXCJjdXN0b20tc2V0dGluZ3NcIjtcblxuZXhwb3J0IGNsYXNzIE5GVENvbGxlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcihjb2xsZWN0aW9ucykge1xuICAgIHRoaXMuY29sbGVjdGlvbnMgPSBjb2xsZWN0aW9ucztcblxuICAgIHRoaXMubmZ0cztcblxuICAgIHRoaXMuaXNMb2FkZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIGxvYWQoYWxnb0luZGV4ZXIpIHtcblxuICAgIC8vbG9hZCBhbGwgYXNzZXRzIGZvciB0aGUgZ2l2ZW4gY29sbGVjdGlvbnNcbiAgICB0aGlzLm5mdHMgPSBbXTtcblxuICAgIGZvciAoY29uc3QgY29sbGVjdGlvbiBvZiB0aGlzLmNvbGxlY3Rpb25zKSB7XG5cbiAgICAgIGZvciAoY29uc3QgY3JlYXRvckFkZHJlc3Mgb2YgY29sbGVjdGlvbi5hZGRyZXNzZXMpIHtcblxuICAgICAgICBsZXQgbmV4dFRva2VuO1xuXG4gICAgICAgIGRvIHtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhbGdvSW5kZXhlclxuICAgICAgICAgICAgLmxvb2t1cEFjY291bnRDcmVhdGVkQXNzZXRzKGNyZWF0b3JBZGRyZXNzKVxuICAgICAgICAgICAgLmxpbWl0KHNldHRpbmdzLmFsZ29JbmRleGVyTGltaXQpXG4gICAgICAgICAgICAubmV4dFRva2VuKG5leHRUb2tlbilcbiAgICAgICAgICAgIC5kbygpO1xuXG5cbiAgICAgICAgICBmb3IgKGNvbnN0IGFzc2V0IG9mIHJlc3VsdC5hc3NldHMpIHtcbiAgICAgICAgICAgIGlmIChhc3NldC5wYXJhbXNbXCJ1bml0LW5hbWVcIl0uc3RhcnRzV2l0aChjb2xsZWN0aW9uLnByZWZpeCkpIHtcbiAgICAgICAgICAgICAgdGhpcy5uZnRzLnB1c2gobmV3IE5GVChhc3NldFtcImluZGV4XCJdLCBhc3NldCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHRUb2tlbiA9IHJlc3VsdFtcIm5leHQtdG9rZW5cIl07XG4gICAgICAgIH0gd2hpbGUgKG5leHRUb2tlbik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XG4gIH1cbn1cbiIsImltcG9ydCB7IE5GVENvbGxlY3Rpb24gfSBmcm9tICcuL25mdC1jb2xsZWN0aW9uLmpzJztcbmltcG9ydCBzZXR0aW5ncyBmcm9tICdjdXN0b20tc2V0dGluZ3MnO1xuXG5leHBvcnQgY2xhc3MgTkZUSG9sZGVyQ29sbGVjdGlvbiB7XG5cbiAgICBjb25zdHJ1Y3Rvcih3YWxsZXRBZGRyZXNzLCBjb2xsZWN0aW9ucyl7XG5cbiAgICAgICAgdGhpcy53YWxsZXRBZGRyZXNzID0gd2FsbGV0QWRkcmVzcztcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zO1xuXG4gICAgICAgIHRoaXMubmZ0cztcblxuICAgICAgICB0aGlzLmlzTG9hZGVkID0gZmFsc2U7XG5cbiAgICB9XG5cbiAgICBhc3luYyBsb2FkKGFsZ29JbmRleGVyKXtcblxuICAgICAgICBjb25zdCBuZnRDb2xsZWN0aW9uID0gbmV3IE5GVENvbGxlY3Rpb24odGhpcy5jb2xsZWN0aW9ucyk7XG5cbiAgICAgICAgYXdhaXQgbmZ0Q29sbGVjdGlvbi5sb2FkKGFsZ29JbmRleGVyKTtcblxuICAgICAgICAvL2xvYWQgY3VycmVudCB3YWxsZXQgYXNzZXRzXG4gICAgICAgIGxldCBuZXh0VG9rZW47XG5cbiAgICAgICAgdGhpcy5uZnRzID0gW107XG5cbiAgICAgICAgY29uc3QgY3JlYXRvcnNBc3NldHMgPSBuZnRDb2xsZWN0aW9uLm5mdHMubWFwKG5mdCA9PiBuZnQuYXNzZXRJZCk7XG5cbiAgICAgICAgZG8ge1xuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhbGdvSW5kZXhlci5sb29rdXBBY2NvdW50QXNzZXRzKHRoaXMud2FsbGV0QWRkcmVzcykubGltaXQoc2V0dGluZ3MuYWxnb0luZGV4ZXJMaW1pdCkubmV4dFRva2VuKG5leHRUb2tlbikuZG8oKTtcblxuICAgICAgICAgICAgZm9yIChjb25zdCBhc3NldCBvZiByZXN1bHQuYXNzZXRzKXtcblxuICAgICAgICAgICAgICAgIGlmIChhc3NldC5hbW91bnQgPiAwICYmICFhc3NldC5kZWxldGVkKXtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3VuZEluZGV4ID0gY3JlYXRvcnNBc3NldHMuaW5kZXhPZihhc3NldFtcImFzc2V0LWlkXCJdKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRJbmRleCAhPT0gLTEpe1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZnQgPSBuZnRDb2xsZWN0aW9uLm5mdHNbZm91bmRJbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICBuZnQuYW1vdW50ID0gYXNzZXQuYW1vdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uZnRzLnB1c2gobmZ0KTtcblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG5leHRUb2tlbiA9IHJlc3VsdFtcIm5leHQtdG9rZW5cIl07XG4gICAgICAgICAgICBcblxuICAgICAgICB9IHdoaWxlIChuZXh0VG9rZW4pO1xuXG5cbiAgICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XG5cblxuICAgIH1cblxuICAgIFxuXG59IiwiY29uc3Qgc2V0dGluZ3MgPSB7XG5cbiAgICAvL0FMR09OT0RFXG4gICAgLy9hbGdvZFVybDogXCJodHRwczovL3Rlc3RuZXQtYXBpLmFsZ29ub2RlLmNsb3VkXCIsXG4gICAgLy9hbGdvSW5kZXhlclVybDogXCJodHRwczovL3Rlc3RuZXQtaWR4LmFsZ29ub2RlLmNsb3VkXCIsXG5cbiAgICBhbGdvZFVybDogXCJodHRwczovL21haW5uZXQtYXBpLmFsZ29ub2RlLmNsb3VkXCIsXG4gICAgYWxnb0luZGV4ZXJVcmw6IFwiaHR0cHM6Ly9tYWlubmV0LWlkeC5hbGdvbm9kZS5jbG91ZFwiLFxuXG4gICAgLy9BTEdPRVhQTE9SRVJcbiAgICBhbGdvZFVybDogXCJodHRwczovL25vZGUuYWxnb2V4cGxvcmVyYXBpLmlvXCIsXG4gICAgYWxnb0luZGV4ZXJVcmw6IFwiaHR0cHM6Ly9hbGdvaW5kZXhlci5hbGdvZXhwbG9yZXJhcGkuaW9cIixcblxuICAgIGFsZ29JbmRleGVyTGltaXQ6IDEwMDAsXG5cbiAgICBwZXJhQXBpVXJsOiBcImh0dHBzOi8vbWFpbm5ldC5hcGkucGVyYXdhbGxldC5hcHAvdjFcIixcblxuICAgIHByaW1hcnlJcGZzR2F0ZXdheVVybDogXCJodHRwczovL2lwZnMuYWxnb25vZGUueHl6L2lwZnNcIixcbiAgICAvL3ByaW1hcnlJcGZzR2F0ZXdheVVybDogXCJodHRwczovL3czcy5saW5rL2lwZnNcIixcbiAgICAvL3ByaW1hcnlJcGZzR2F0ZXdheVVybDogXCJodHRwczovL25mdHN0b3JhZ2UubGluay9pcGZzXCIsXG4gICAgc2Vjb25kYXJ5SXBmc0dhdGV3YXlVcmw6IFwiaHR0cHM6Ly9pcGZzLmlvL2lwZnNcIlxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IHNldHRpbmdzOyIsImV4cG9ydCBkZWZhdWx0IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJiYXRoZXJzXCIsXG4gICAgICAgICAgICBkaXNwbGF5TmFtZTogXCJCYXRoZXJzXCIsXG4gICAgICAgICAgICBhZGRyZXNzZXM6IFtcIkJBVEhLM0VERFlBWU1ZWkxPTU9BSDJSTFdaSTVQUzVOSjI1TjNKVU9ON0EzVTQ3U0Q2Q0g1SlhXUklcIl0sXG4gICAgICAgICAgICBwcmVmaXg6IFwiQkFUSFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwiY2FmZmVpbmVDYXJkc1wiLFxuICAgICAgICAgICAgZGlzcGxheU5hbWU6IFwiQ2FmZmVpbmUgQ2FyZHNcIixcbiAgICAgICAgICAgIGFkZHJlc3NlczogW1wiQ0FSRFJRRVRIS1lGTU82TE1HUFdKVzU0S1YyNE5EVFJOSUlENkxaQlQzSUlYTVRLNVM3UUNVTVVBTVwiXSxcbiAgICAgICAgICAgIHByZWZpeDogXCJDQVJEXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJjb2ZmZWViaXRzXCIsXG4gICAgICAgICAgICBkaXNwbGF5TmFtZTogXCJDb2ZmZWVCaXRzIE9yaWdpbmFsc1wiLFxuICAgICAgICAgICAgYWRkcmVzc2VzOiBbXCJDQUZFUFhGRkQzTllTQ1lXQU1aUTc1Qk9MWllBQ0RXMzdOSVhRWUpWTUhSTVJaSUxBUU9WTTM3QkVZXCJdLFxuICAgICAgICAgICAgcHJlZml4OiBcIkNPRkZcIlxuICAgICAgICB9XG4gICAgXVxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0bG9hZGVkOiBmYWxzZSxcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsInZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiA/IChvYmopID0+IChPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSkgOiAob2JqKSA9PiAob2JqLl9fcHJvdG9fXyk7XG52YXIgbGVhZlByb3RvdHlwZXM7XG4vLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuLy8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8vIG1vZGUgJiAxNjogcmV0dXJuIHZhbHVlIHdoZW4gaXQncyBQcm9taXNlLWxpa2Vcbi8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbl9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG5cdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IHRoaXModmFsdWUpO1xuXHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuXHRpZih0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlKSB7XG5cdFx0aWYoKG1vZGUgJiA0KSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG5cdFx0aWYoKG1vZGUgJiAxNikgJiYgdHlwZW9mIHZhbHVlLnRoZW4gPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZTtcblx0fVxuXHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuXHR2YXIgZGVmID0ge307XG5cdGxlYWZQcm90b3R5cGVzID0gbGVhZlByb3RvdHlwZXMgfHwgW251bGwsIGdldFByb3RvKHt9KSwgZ2V0UHJvdG8oW10pLCBnZXRQcm90byhnZXRQcm90byldO1xuXHRmb3IodmFyIGN1cnJlbnQgPSBtb2RlICYgMiAmJiB2YWx1ZTsgdHlwZW9mIGN1cnJlbnQgPT0gJ29iamVjdCcgJiYgIX5sZWFmUHJvdG90eXBlcy5pbmRleE9mKGN1cnJlbnQpOyBjdXJyZW50ID0gZ2V0UHJvdG8oY3VycmVudCkpIHtcblx0XHRPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhjdXJyZW50KS5mb3JFYWNoKChrZXkpID0+IChkZWZba2V5XSA9ICgpID0+ICh2YWx1ZVtrZXldKSkpO1xuXHR9XG5cdGRlZlsnZGVmYXVsdCddID0gKCkgPT4gKHZhbHVlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBkZWYpO1xuXHRyZXR1cm4gbnM7XG59OyIsInZhciBpblByb2dyZXNzID0ge307XG52YXIgZGF0YVdlYnBhY2tQcmVmaXggPSBcInN0dWRpbzpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gKHVybCwgZG9uZSwga2V5LCBjaHVua0lkKSA9PiB7XG5cdGlmKGluUHJvZ3Jlc3NbdXJsXSkgeyBpblByb2dyZXNzW3VybF0ucHVzaChkb25lKTsgcmV0dXJuOyB9XG5cdHZhciBzY3JpcHQsIG5lZWRBdHRhY2g7XG5cdGlmKGtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHMgPSBzY3JpcHRzW2ldO1xuXHRcdFx0aWYocy5nZXRBdHRyaWJ1dGUoXCJzcmNcIikgPT0gdXJsIHx8IHMuZ2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIpID09IGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KSB7IHNjcmlwdCA9IHM7IGJyZWFrOyB9XG5cdFx0fVxuXHR9XG5cdGlmKCFzY3JpcHQpIHtcblx0XHRuZWVkQXR0YWNoID0gdHJ1ZTtcblx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxuXHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04Jztcblx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xuXHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuXHRcdH1cblx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIsIGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KTtcblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHQ7XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uYW1kTyA9IHt9OyIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5mID0ge307XG4vLyBUaGlzIGZpbGUgY29udGFpbnMgb25seSB0aGUgZW50cnkgY2h1bmsuXG4vLyBUaGUgY2h1bmsgbG9hZGluZyBmdW5jdGlvbiBmb3IgYWRkaXRpb25hbCBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18uZSA9IChjaHVua0lkKSA9PiB7XG5cdHJldHVybiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmYpLnJlZHVjZSgocHJvbWlzZXMsIGtleSkgPT4ge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZltrZXldKGNodW5rSWQsIHByb21pc2VzKTtcblx0XHRyZXR1cm4gcHJvbWlzZXM7XG5cdH0sIFtdKSk7XG59OyIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFzeW5jIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy51ID0gKGNodW5rSWQpID0+IHtcblx0Ly8gcmV0dXJuIHVybCBmb3IgZmlsZW5hbWVzIGJhc2VkIG9uIHRlbXBsYXRlXG5cdHJldHVybiBcIlwiICsgY2h1bmtJZCArIFwiLlwiICsge1wiNDlcIjpcIjViMjMwZmY5ODQyNDhmNDA5N2ZjXCIsXCI3MlwiOlwiNTQ0MTY2YWQwZTg0MGViMWM2NzhcIixcIjExN1wiOlwiY2E1NmVkNWMwZmJiYzE2YmQ0ODdcIixcIjEyNlwiOlwiNmY3Yjc1NmU4ZWJiOTZjZTdmMGNcIixcIjI3MVwiOlwiMjNiMTk4YWMzYWUwNWQyYTZmZThcIixcIjI5OFwiOlwiYzIxZDA3Zjk2MmRhZjMwODg4ZTZcIixcIjMzOVwiOlwiOTY1Y2JlZWE3MmM4NDE3N2QwMzdcIixcIjM1OFwiOlwiNzYzMDgzZGMyMTBkNWI4ZWEyMWRcIixcIjM5M1wiOlwiOGNhZTNkNWI2MmU1MDExMTNlNmVcIixcIjQ2OFwiOlwiNmE4ZmM2MDcwZDc5MTU1ZTE2ZTRcIixcIjUxMlwiOlwiODAzZGZlNjVmMjIwZDlkYWM1MzZcIixcIjUzOFwiOlwiYzFmY2U4NDljOTBjNGM4ZDc2OTlcIixcIjYwMVwiOlwiM2RiNmY2OWIxMmVlOTU5ZDI4YjJcIixcIjY0MVwiOlwiNDkxNDVlZDMyMjNmNTM3ODkxZmJcIixcIjcwMVwiOlwiODkxMjNjMjQxNTU1MTIyZTk0YzlcIixcIjc2NFwiOlwiYmU3NDRkY2JhNTlkMjRiZDQyNmFcIixcIjgxMFwiOlwiMDE1NTdlMjE1NGUwYmJlMzQ1ZjVcIixcIjg5MlwiOlwiMGE4MjBmMDViMDljZTY1NTI1OTJcIixcIjk5OFwiOlwiZTYxOTE3ZDJlNWQ2YzFkZGMzOTdcIn1bY2h1bmtJZF0gKyBcIi5qc1wiO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5tZCA9IChtb2R1bGUpID0+IHtcblx0bW9kdWxlLnBhdGhzID0gW107XG5cdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0cmV0dXJuIG1vZHVsZTtcbn07IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCIvLyBubyBiYXNlVVJJXG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmYuaiA9IChjaHVua0lkLCBwcm9taXNlcykgPT4ge1xuXHRcdC8vIEpTT05QIGNodW5rIGxvYWRpbmcgZm9yIGphdmFzY3JpcHRcblx0XHR2YXIgaW5zdGFsbGVkQ2h1bmtEYXRhID0gX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgPyBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gOiB1bmRlZmluZWQ7XG5cdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSB7IC8vIDAgbWVhbnMgXCJhbHJlYWR5IGluc3RhbGxlZFwiLlxuXG5cdFx0XHQvLyBhIFByb21pc2UgbWVhbnMgXCJjdXJyZW50bHkgbG9hZGluZ1wiLlxuXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhKSB7XG5cdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmKHRydWUpIHsgLy8gYWxsIGNodW5rcyBoYXZlIEpTXG5cdFx0XHRcdFx0Ly8gc2V0dXAgUHJvbWlzZSBpbiBjaHVuayBjYWNoZVxuXHRcdFx0XHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gKGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IFtyZXNvbHZlLCByZWplY3RdKSk7XG5cdFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0gPSBwcm9taXNlKTtcblxuXHRcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcblx0XHRcdFx0XHR2YXIgdXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy51KGNodW5rSWQpO1xuXHRcdFx0XHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHRcdFx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHRcdFx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSkge1xuXHRcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IubWVzc2FnZSA9ICdMb2FkaW5nIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci50eXBlID0gZXJyb3JUeXBlO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YVsxXShlcnJvcik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubCh1cmwsIGxvYWRpbmdFbmRlZCwgXCJjaHVuay1cIiArIGNodW5rSWQsIGNodW5rSWQpO1xuXHRcdFx0XHR9IGVsc2UgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0XHRcdH1cblx0XHR9XG59O1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xudmFyIHdlYnBhY2tKc29ucENhbGxiYWNrID0gKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uLCBkYXRhKSA9PiB7XG5cdHZhciBbY2h1bmtJZHMsIG1vcmVNb2R1bGVzLCBydW50aW1lXSA9IGRhdGE7XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0aWYoY2h1bmtJZHMuc29tZSgoaWQpID0+IChpbnN0YWxsZWRDaHVua3NbaWRdICE9PSAwKSkpIHtcblx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHR9XG5cdGlmKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKSBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcblx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0oKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rc3R1ZGlvXCJdID0gc2VsZltcIndlYnBhY2tDaHVua3N0dWRpb1wiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6IFwiUk9BUlwiLFxuICAgIGlkOiA5MTc5NjI0NTdcbn0iLCJpbXBvcnQgeyBXYWxsZXRDb25uZWN0IH0gZnJvbSAnLi9jb21tb24vd2FsbGV0LWNvbm5lY3QuanMnO1xuaW1wb3J0IGFsZ29zZGsgZnJvbSAnYWxnb3Nkayc7XG5pbXBvcnQgc2V0dGluZ3MgZnJvbSAnY3VzdG9tLXNldHRpbmdzJztcbmltcG9ydCBjb2xsZWN0aW9ucyBmcm9tICcuL2NvbGxlY3Rpb25zLmpzJztcbmltcG9ydCB7IE5GVEhvbGRlckNvbGxlY3Rpb24gfSBmcm9tIFwiYWxnby1uZnQtdXRpbHNcIjtcbmltcG9ydCB0b2tlblNldHRpbmdzIGZyb20gXCIuL3Rva2VuLmpzXCI7XG5cbmNvbnN0IHBhZ2VzID0gW1xuICAgIHtcbiAgICAgICAgbmFtZTogXCJjb25uZWN0XCIsXG4gICAgICAgIGZpbGU6IFwiY29ubmVjdC5qc1wiLFxuICAgICAgICBjbGFzc05hbWU6IFwiQ29ubmVjdFwiLFxuICAgICAgICB1cmw6IG51bGwsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiaG9tZVwiLFxuICAgICAgICBmaWxlOiBcImhvbWUuanNcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcIkhvbWVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJ3YWxsZXRcIixcbiAgICAgICAgZmlsZTogXCJ3YWxsZXQuanNcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcIldhbGxldFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcImdyaW5kZXJcIixcbiAgICAgICAgZmlsZTogXCJncmluZGVyLmpzXCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJHcmluZGVyXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiZ3JpbmRlci1xdWV1ZVwiLFxuICAgICAgICBmaWxlOiBcImdyaW5kZXItcXVldWUuanNcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcIkdyaW5kZXJRdWV1ZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcImdvb2QtbW9ybmluZ1wiLFxuICAgICAgICBmaWxlOiBcImdvb2QtbW9ybmluZy5qc1wiLFxuICAgICAgICBjbGFzc05hbWU6IFwiR29vZE1vcm5pbmdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJsb25nYm9pc1wiLFxuICAgICAgICBmaWxlOiBcImxvbmdib2kuanNcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcIkxvbmdCb2lcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJjYXJkc1wiLFxuICAgICAgICBmaWxlOiBcImJyb3dzZS5qc1wiLFxuICAgICAgICBjbGFzc05hbWU6IFwiQnJvd3NlXCIsXG4gICAgICAgIGFyZ3M6IFsnY2FmZmVpbmVDYXJkcyddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiYmF0aGVyc1wiLFxuICAgICAgICBmaWxlOiBcImJyb3dzZS5qc1wiLFxuICAgICAgICBjbGFzc05hbWU6IFwiQnJvd3NlXCIsXG4gICAgICAgIGFyZ3M6IFsnYmF0aGVycyddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwicGFja3NcIixcbiAgICAgICAgZmlsZTogXCJwYWNrcy5qc1wiLFxuICAgICAgICBjbGFzc05hbWU6IFwiUGFja3NcIixcbiAgICB9XG5cbl1cblxubGV0IGN1cnJlbnRQYWdlTmFtZTtcbmxldCBjdXJyZW50UGFnZTtcblxuLy9BTEdPIENMSUVOVFxuY29uc3QgYWxnb2RDbGllbnQgPSBuZXcgYWxnb3Nkay5BbGdvZHYyKFwiXCIsIHNldHRpbmdzLmFsZ29kVXJsLCA0NDMpO1xuXG4vL0FMR08gSU5ERVhFUlxuY29uc3QgYWxnb0luZGV4ZXIgPSBuZXcgYWxnb3Nkay5JbmRleGVyKFwiXCIsIHNldHRpbmdzLmFsZ29JbmRleGVyVXJsLCA0NDMpO1xuXG4vL1dBTExFVCBDT05ORUNUXG5jb25zdCB3YWxsZXRDb25uZWN0ID0gbmV3IFdhbGxldENvbm5lY3QoZGlkQ29ubmVjdFdhbGxldCwgZGlkRGlzY29ubmVjdFdhbGxldCk7XG5cbi8vUFJFTE9BREVEIEhPTERJTkdTXG5sZXQgaG9sZGluZ3M7IFxuXG5cbi8vbGlzdGVuIHRvIG5hdmlnYXRpb24gZXZlbnRzXG53aW5kb3cub25wb3BzdGF0ZSA9IGxvYWRSZXF1ZXN0ZWRQYWdlO1xuXG4vKmlmICh3YWxsZXRDb25uZWN0LndhbGxldEFkZHJlc3Mpe1xuICAgIGxvYWRSZXF1ZXN0ZWRQYWdlKCk7XG59IGVsc2Uge1xuICAgIGxvYWRQYWdlKCdjb25uZWN0Jyk7XG59Ki9cblxuaWYgKHNldHRpbmdzLmFsZ29kVXJsLmluY2x1ZGVzKCd0ZXN0bmV0JykgfHwgc2V0dGluZ3MuYWxnb0luZGV4ZXJVcmwuaW5jbHVkZXMoJ3Rlc3RuZXQnKSl7XG4gICAgY29uc3QgdGVzdG5ldEFsZXJ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGVzdG5ldEFsZXJ0LnRleHRDb250ZW50ID0gJ1RFU1RORVQnO1xuICAgIHRlc3RuZXRBbGVydC5jbGFzc05hbWUgPSAndGV4dC1jZW50ZXIgYmctd2FybmluZyB0ZXh0LWRhcmsnO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLnByZXBlbmQodGVzdG5ldEFsZXJ0KTtcbn1cblxuXG5cbmZ1bmN0aW9uIGVuYWJsZU5hdmlnYXRpb25MaW5rcygpe1xuXG4gICAgdmFyIGFsbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhJyk7XG5cbiAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgYWxsKXtcbiAgICAgICAgaWYgKGVsZW1lbnQuZGF0YXNldC5wYWdlTGluayl7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBtZW51Q2xpY2tlZCwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG53aW5kb3cuZW5hYmxlTmF2aWdhdGlvbkxpbmtzID0gZW5hYmxlTmF2aWdhdGlvbkxpbmtzO1xuXG5hc3luYyBmdW5jdGlvbiBkaXNwbGF5V2FsbGV0SW5mbygpe1xuXG4gICAgLy9kaXNwbGF5IGFkZHJlc3NcbiAgICBjb25zdCB3YWxsZXRBZGRyZXNzID0gd2FsbGV0Q29ubmVjdC53YWxsZXRBZGRyZXNzO1xuICAgIGNvbnN0IHRydW5jYXRlZEFkZHJlc3MgPSB3YWxsZXRBZGRyZXNzLnN1YnN0cmluZygwLCA2KSArICcuLi4nICsgd2FsbGV0QWRkcmVzcy5zdWJzdHJpbmcod2FsbGV0QWRkcmVzcy5sZW5ndGgtNiwgd2FsbGV0QWRkcmVzcy5sZW5ndGgpO1xuXG4gICAgY29uc3Qgd2FsbGV0QWRkcmVzc0EgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2FsbGV0LWFkZHJlc3MnKTtcbiAgICB3YWxsZXRBZGRyZXNzQS50ZXh0Q29udGVudCA9IHRydW5jYXRlZEFkZHJlc3M7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2FsbGV0LWRpc2Nvbm5lY3QnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRpc2Nvbm5lY3RXYWxsZXQsIGZhbHNlKTtcblxuICAgIC8vZGlzcGxheSBwcm9maWxlIHBpY1xuICAgIGlmIChob2xkaW5nc1snYmF0aGVycyddLm5mdHMubGVuZ3RoID4gMCl7XG4gICAgICAgIGNvbnN0IGltZ1VSTCA9IGhvbGRpbmdzWydiYXRoZXJzJ10ubmZ0c1swXS5pbWFnZVVybDtcblxuICAgICAgICBjb25zdCB3YWxsZXRJbWFnZURpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3YWxsZXQtaW1nJyk7XG4gICAgICAgIHdhbGxldEltYWdlRGl2LnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHtpbWdVUkx9KWA7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIC8vbG9vayBmb3IgYW4gbmZkIGRvbWFpbiBhZGRyZXNzXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkubmYuZG9tYWlucy9uZmQvYWRkcmVzcz9hZGRyZXNzPSR7d2FsbGV0QWRkcmVzc31gKTtcblxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApe1xuXG4gICAgICAgICAgICBjb25zdCBuZmQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgICAgIHdhbGxldEFkZHJlc3NBLnRleHRDb250ZW50ID0gbmZkWzBdLm5hbWU7XG5cbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfVxuXG4gICAgLy9sb2FkIHRva2VuIGJhbGFuY2VcbiAgICBhd2FpdCBsb2FkVG9rZW5CYWxhbmNlKCk7XG5cbn1cblxuZnVuY3Rpb24gc2xlZXAoZGVsYXlUaW1lKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBkZWxheVRpbWUpKTtcbn1cblxuZnVuY3Rpb24gbG9hZEhvbGRpbmdzKHBlcmNlbnRDYWxsYmFjayl7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgIGhvbGRpbmdzID0ge307XG4gICAgXG4gICAgICAgIC8vbG9hZCBjb2xsZWN0aW9uc1xuICAgICAgICBmb3IgKGNvbnN0IGNvbGxlY3Rpb25JbmZvIG9mIGNvbGxlY3Rpb25zKXtcblxuICAgICAgICAgICAgaG9sZGluZ3NbY29sbGVjdGlvbkluZm8ubmFtZV0gPSBuZXcgTkZUSG9sZGVyQ29sbGVjdGlvbihcbiAgICAgICAgICAgICAgICB3YWxsZXRDb25uZWN0LndhbGxldEFkZHJlc3MsXG4gICAgICAgICAgICAgICAgW2NvbGxlY3Rpb25JbmZvXVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgYXdhaXQgaG9sZGluZ3NbY29sbGVjdGlvbkluZm8ubmFtZV0ubG9hZChhbGdvSW5kZXhlcik7XG4gICAgICAgIH1cblxuICAgICAgICAvL2NvdW50IG5mdHMgdG8gbG9hZFxuICAgICAgICBsZXQgdG90YWwgPSAwO1xuICAgICAgICBsZXQgbG9hZGVkID0gMDtcblxuICAgICAgICBmb3IgKGNvbnN0IGNvbGxlY3Rpb25OYW1lIGluIGhvbGRpbmdzKXtcbiAgICAgICAgICAgIHRvdGFsICs9IGhvbGRpbmdzW2NvbGxlY3Rpb25OYW1lXS5uZnRzLmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0b3RhbCA9PT0gMCl7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL2xvYWQgbmZ0c1xuICAgICAgICBmb3IgKGNvbnN0IGNvbGxlY3Rpb25OYW1lIGluIGhvbGRpbmdzKXtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbmZ0IG9mIGhvbGRpbmdzW2NvbGxlY3Rpb25OYW1lXS5uZnRzKXtcblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIG5mdC5sb2FkKGFsZ29JbmRleGVyKS50aGVuKCgpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICBsb2FkZWQrKztcblxuICAgICAgICAgICAgICAgICAgICBwZXJjZW50Q2FsbGJhY2sobG9hZGVkL3RvdGFsKjEwMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGxvYWRlZCA9PT0gdG90YWwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7IFxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuc3RhdHVzKVxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy9hd2FpdCBzbGVlcCgxMDApO1xuICAgICAgICAgICAgICAgIC8vfSkuY2F0Y2goZXJyID0+IHJlamVjdChlcnIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfSlcblxufVxuXG5hc3luYyBmdW5jdGlvbiBsb2FkVG9rZW5CYWxhbmNlKCl7XG5cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBiYWxhbmNlUmVzdWx0ID0gYXdhaXQgYWxnb2RDbGllbnQuYWNjb3VudEFzc2V0SW5mb3JtYXRpb24od2FsbGV0Q29ubmVjdC53YWxsZXRBZGRyZXNzLCB0b2tlblNldHRpbmdzLmlkKS5kbygpO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9rZW4tYmFsYW5jZScpLmlubmVySFRNTCA9IGAke2JhbGFuY2VSZXN1bHRbJ2Fzc2V0LWhvbGRpbmcnXS5hbW91bnR9ICQke3Rva2VuU2V0dGluZ3MubmFtZX1gO1xuICAgIH0gY2F0Y2goZXJyKXtcblxuICAgICAgICBpZihlcnIuc3RhdHVzID09PSA0MDQpe1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rva2VuLWJhbGFuY2UnKS5pbm5lckhUTUwgPSBgPGEgaHJlZj1cImh0dHBzOi8vYXRvbWl4d2FwLnh5ei8/b3B0aW49JHt0b2tlblNldHRpbmdzLmlkfVwiPk9wdC1pbiAkJHt0b2tlblNldHRpbmdzLm5hbWV9PC9hPmA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG59XG5cblxuYXN5bmMgZnVuY3Rpb24gbG9hZFJlcXVlc3RlZFBhZ2UoKXtcblxuICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaDtcbiAgICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nKTtcblxuICAgIGxldCBzdWNjZXNzID0gZmFsc2U7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiB1cmxQYXJhbXMua2V5cygpKXtcblxuICAgICAgICBpZiAocGFnZXMuZmlsdGVyKHAgPT4gcC5uYW1lID09PSBrZXkpLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgYXdhaXQgbG9hZFBhZ2UodXJsUGFyYW1zLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vc3VjY2VzcyA9IGF3YWl0IGxvYWRQYWdlKGtleSk7XG4gICAgICAgIC8vaWYgKHN1Y2Nlc3MpeyBicmVhazsgfVxuXG4gICAgfVxuXG4gICAgLy9ieSBkZWZhdWx0LCBsb2FkIGhvbWUgcGFnZVxuICAgIGxvYWRQYWdlKCdob21lJyk7XG4gICAgLyppZiAoIXN1Y2Nlc3Mpe1xuICAgICAgICBsb2FkUGFnZSgnaG9tZScpO1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoJycsICcnLCAnP2hvbWUnKVxuICAgIH0qL1xufVxuXG5mdW5jdGlvbiBpc0hvbGRlcigpe1xuXG4gICAgaWYgKGhvbGRpbmdzICYmIChob2xkaW5nc1snYmF0aGVycyddLm5mdHMubGVuZ3RoID4gMCB8fCBob2xkaW5nc1snY29mZmVlYml0cyddLm5mdHMubGVuZ3RoKSl7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gbG9hZFBhZ2UocGFnZVBhcmFtcyl7XG5cblxuICAgIGNvbnN0IHBhZ2VOYW1lID0gcGFnZVBhcmFtcy5zcGxpdCgnJicpWzBdLnNwbGl0KCc9JylbMF07XG5cbiAgICBpZiAocGFnZU5hbWUgIT0gJ2Nvbm5lY3QnICYmICF3YWxsZXRDb25uZWN0LndhbGxldEFkZHJlc3Mpe1xuXG4gICAgICAgIHJldHVybiBsb2FkUGFnZSgnY29ubmVjdCcpO1xuICAgICAgICAvL3JldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBtYWluQ29udGFpbmVyRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1cGVyLWNvbnRhaW5lcicpO1xuICAgIGNvbnN0IGNvbnRlbnREaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpO1xuXG4gICAgaWYgKHBhZ2VOYW1lICE9PSAnY29ubmVjdCcgJiYgIWhvbGRpbmdzICYmIHdhbGxldENvbm5lY3Qud2FsbGV0QWRkcmVzcyl7XG5cbiAgICAgICAgbWFpbkNvbnRhaW5lckRpdi5jbGFzc05hbWUgPSAnJztcblxuICAgICAgICAvL3ByZWxvYWQgY29sbGVjdGlvbnMgaG9sZGluZ3NcbiAgICAgICAgY29udGVudERpdi5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXIgdmgtMTAwIHRleHQtY2VudGVyIGQtZmxleCBmbGV4LXdyYXBcIj5cbiAgICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbjogYXV0bztcIiBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gICAgICAgIDxpbWcgc3JjPVwiYXNzZXRzL2xvYWRpbmcucG5nXCIgd2lkdGg9XCIxMjhcIiBoZWlnaHQ9XCIxMjhcIj48YnI+XG4gICAgICAgIFNpcCBzaXAgc2lwPGJyPlxuICAgICAgICBMb2FkaW5nIHlvdXIgcGl4ZWwgY2FmZmVpbmUuLi48YnI+XG4gICAgICAgIDxzcGFuIGlkPVwibG9hZGluZy1wZXJjZW50XCI+PC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgXG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG5cbiAgICAgIHRyeSB7XG5cbiAgICAgICAgY29uc3QgbG9hZGluZ1BlcmNlbnRTcGFuID0gY29udGVudERpdi5xdWVyeVNlbGVjdG9yKCcjbG9hZGluZy1wZXJjZW50Jyk7XG4gICAgICAgIGF3YWl0IGxvYWRIb2xkaW5ncygocGVyY2VudCkgPT4ge1xuICAgICAgICAgICAgbG9hZGluZ1BlcmNlbnRTcGFuLnRleHRDb250ZW50ID0gYCR7cGVyY2VudC50b0ZpeGVkKDApfSVgXG4gICAgICAgIH0pO1xuXG4gICAgICB9IGNhdGNoKGVycikge1xuXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcblxuICAgICAgICAvL2NvbnRlbnREaXYuaW5uZXJIVE1MID0gYDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIiByb2xlPVwiYWxlcnRcIj5FcnJvcjogJHtlcnIubWVzc2FnZX0uIFRyeSBhZ2FpbiBpbiAzMHMuPC9kaXY+YDtcblxuICAgICAgICAvL3JldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgICAgXG5cbiAgICAgICAgaWYgKCFpc0hvbGRlcigpKXtcbiAgICAgICAgICAgIGFsZXJ0KCdZb3UgbmVlZCB0byBvd24gYXQgbGVhc3Qgb25lIE5GVCBmcm9tIHRoZSBjb2xsZWN0aW9uIHRvIGFjY2VzcyB0aGlzIGFyZWEuJylcbiAgICAgICAgICAgIHdhbGxldENvbm5lY3QuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCBkaXNwbGF5V2FsbGV0SW5mbygpO1xuICAgIH1cblxuICAgIGNvbnRlbnREaXYuaW5uZXJIVE1MID0gYExvYWRpbmcgcGFnZS4uLmA7XG5cbiAgICBsZXQgcGFnZUluZm8gPSBwYWdlcy5maWx0ZXIocCA9PiBwLm5hbWUgPT09IHBhZ2VOYW1lKTtcblxuICAgIGlmIChwYWdlSW5mb1swXSl7XG5cbiAgICAgICAgY3VycmVudFBhZ2UgPSBudWxsO1xuXG4gICAgICAgIGNvbnN0IHBhZ2VNb2R1bGUgPSBhd2FpdCBpbXBvcnQoYC4vcGFnZXMvJHtwYWdlSW5mb1swXS5maWxlfWApO1xuICAgICAgICBjb25zdCBwYWdlQ2xhc3MgPSBwYWdlTW9kdWxlW3BhZ2VJbmZvWzBdLmNsYXNzTmFtZV07XG5cbiAgICAgICAgY29uc3QgYXJncyA9IHBhZ2VJbmZvWzBdLmFyZ3MgPyBwYWdlSW5mb1swXS5hcmdzIDogW107XG5cbiAgICAgICAgaWYgKHBhZ2VOYW1lICE9ICdjb25uZWN0JyAmJiBjdXJyZW50UGFnZU5hbWUgIT09IHBhZ2VOYW1lKXtcblxuICAgICAgICAgICAgbGV0IHBhcmFtc1N0cmluZyA9IHBhZ2VQYXJhbXM7XG5cbiAgICAgICAgICAgIC8vcmVtb3ZlIGZpbmFsIGVxdWFsIHNpZ24gaWYgbmVlZGVkXG4gICAgICAgICAgICBpZiAocGFyYW1zU3RyaW5nLnN1YnN0cmluZyhwYXJhbXNTdHJpbmcubGVuZ3RoIC0gMSwgcGFyYW1zU3RyaW5nLmxlbmd0aCkgPT09ICc9Jyl7XG4gICAgICAgICAgICAgICAgcGFyYW1zU3RyaW5nID0gcGFyYW1zU3RyaW5nLnN1YnN0cmluZygwLCBwYXJhbXNTdHJpbmcubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSgnJywgJycsIGA/JHtwYXJhbXNTdHJpbmd9YClcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY3VycmVudFBhZ2UgPSBuZXcgcGFnZUNsYXNzKHdhbGxldENvbm5lY3QsIGhvbGRpbmdzLCBhbGdvZENsaWVudCwgYWxnb0luZGV4ZXIsIC4uLmFyZ3MpO1xuXG4gICAgICAgIGlmICghY3VycmVudFBhZ2Upe1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudFBhZ2UudWkuaWQgPSBgcGFnZS0ke3BhZ2VOYW1lfWA7XG4gICAgXG4gICAgICAgIGNvbnRlbnREaXYudGV4dENvbnRlbnQgPSAnJztcbiAgICAgICAgY29udGVudERpdi5hcHBlbmQoY3VycmVudFBhZ2UudWkpO1xuXG4gICAgICAgIGN1cnJlbnRQYWdlTmFtZSA9IHBhZ2VOYW1lO1xuXG4gICAgICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ25hdicpO1xuICAgICAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdmb290ZXInKTtcblxuICAgICAgICBpZiAocGFnZU5hbWUgPT09ICdjb25uZWN0Jyl7XG4gICAgICAgICAgICBtYWluQ29udGFpbmVyRGl2LmNsYXNzTmFtZSA9ICdjb250YWluZXItZmx1aWQgZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIHBhZ2UtY29ubmVjdCc7XG4gICAgICAgICAgICBuYXYuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvb3Rlci5oaWRkZW4gPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbWFpbkNvbnRhaW5lckRpdi5jbGFzc05hbWUgPSAnJztcbiAgICAgICAgICAgIG5hdi5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgIGZvb3Rlci5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVuYWJsZU5hdmlnYXRpb25MaW5rcygpO1xuICAgIFxuICAgICAgICByZXR1cm4gdHJ1ZTtcblxuICAgIH0gZWxzZSB7XG5cbiAgICAgICAgYWxlcnQoYEVycm9yIGxvYWRpbmcgcGFnZSAke3BhZ2VOYW1lfWApO1xuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbn1cblxuZnVuY3Rpb24gbWVudUNsaWNrZWQoZXZlbnQpe1xuXG4gICAgY29uc3QgcGFnZU5hbWUgPSBldmVudC5jdXJyZW50VGFyZ2V0LmRhdGFzZXQucGFnZUxpbms7XG5cbiAgICBsb2FkUGFnZShwYWdlTmFtZSk7XG4gICAgICAgIFxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG59XG5cbmZ1bmN0aW9uIGRpc2Nvbm5lY3RXYWxsZXQoZXZlbnQpe1xuXG4gICAgd2FsbGV0Q29ubmVjdC5kaXNjb25uZWN0KCk7XG5cbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xufVxuXG5mdW5jdGlvbiBkaWRDb25uZWN0V2FsbGV0KCl7XG5cbiAgICBsb2FkUmVxdWVzdGVkUGFnZSgpO1xuXG59XG5cbmZ1bmN0aW9uIGRpZERpc2Nvbm5lY3RXYWxsZXQoKXtcblxuICAgIGhvbGRpbmdzID0gbnVsbDtcblxuICAgIGxvYWRQYWdlKCdjb25uZWN0Jyk7XG5cbn1cbiIsImltcG9ydCB7IGVuY29kZUFkZHJlc3MgfSBmcm9tIFwiYWxnb3Nka1wiO1xuXG5leHBvcnQgY2xhc3MgV2FsbGV0Q29ubmVjdCB7XG4gIGNvbnN0cnVjdG9yKGNvbm5lY3RlZENhbGxiYWNrLCBkaXNjb25uZWN0ZWRDYWxsYmFjaywgYnRuQ2xhc3MgPSBcIlwiKSB7XG4gICAgdGhpcy5jb25uZWN0ZWRDYWxsYmFjayA9IGNvbm5lY3RlZENhbGxiYWNrO1xuICAgIHRoaXMuZGlzY29ubmVjdGVkQ2FsbGJhY2sgPSBkaXNjb25uZWN0ZWRDYWxsYmFjaztcblxuICAgIHRoaXMudWkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgdGhpcy53YWxsZXQ7XG4gICAgdGhpcy53YWxsZXRUeXBlO1xuICAgIHRoaXMud2FsbGV0QWRkcmVzcztcbiAgICB0aGlzLm5mZDtcblxuICAgIHRoaXMuYnRuQ2xhc3MgPSBidG5DbGFzcztcblxuICAgIC8vZm9yY2UgYWRkcmVzc1xuICAgIC8vbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ3YWxsZXQtY29ubmVjdC1hZGRyZXNzXCIsIFwiV1hJVkRLR1NCREJMQk5LUDNaWUVYSlU1V0hCRVBZTEtPUUFXWEJZRkdKNlZEVlpRQTNXQ0xTRTRXQVwiKTtcbiAgICAvL2xvY2FsU3RvcmFnZS5zZXRJdGVtKFwid2FsbGV0LWNvbm5lY3QtdHlwZVwiLCBcIm15YWxnb1wiKTtcblxuICAgIHRoaXMubG9hZFN0YXRlKCkudGhlbigoKSA9PiB7XG5cbiAgICAgIGlmICh0aGlzLndhbGxldFR5cGUgJiYgdGhpcy53YWxsZXRBZGRyZXNzKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICAgICAgdGhpcy5sb2FkTmZkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudXBkYXRlVUkoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vVUlcbiAgdXBkYXRlVUkoKSB7XG4gICAgdGhpcy51aS50ZXh0Q29udGVudCA9IFwiXCI7XG5cbiAgICBpZiAodGhpcy53YWxsZXRUeXBlICYmIHRoaXMud2FsbGV0QWRkcmVzcykge1xuICAgICAgdGhpcy5kaXNwbGF5Q29ubmVjdGVkVUkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kaXNwbGF5Q29ubmVjdFVJKCk7XG4gICAgfVxuICB9XG5cbiAgZGlzcGxheUNvbm5lY3RVSSgpIHtcbiAgICB0aGlzLnVpLmlubmVySFRNTCA9IGBcbiAgICA8YnV0dG9uIGNsYXNzPVwiYnRuLW15YWxnbyAke3RoaXMuYnRuQ2xhc3N9XCIgaWQ9XCJidXR0b25NeUFsZ29cIj5NeUFsZ288L2J1dHRvbj5cbiAgICA8YnV0dG9uIGNsYXNzPVwiYnRuLXBlcmEgJHt0aGlzLmJ0bkNsYXNzfVwiIGlkPVwiYnV0dG9uUGVyYVwiPlBlcmE8L2J1dHRvbj5cbiAgICBgO1xuXG4gICAgdGhpcy51aVxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjYnV0dG9uTXlBbGdvXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY29ubmVjdE15QWxnby5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLnVpXG4gICAgICAucXVlcnlTZWxlY3RvcihcIiNidXR0b25QZXJhXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY29ubmVjdFBlcmEuYmluZCh0aGlzKSk7XG4gIH1cblxuICBkaXNwbGF5Q29ubmVjdGVkVUkoKSB7XG4gICAgbGV0IGRpc3BsYXlBZGRyZXNzO1xuXG4gICAgaWYgKHRoaXMubmZkKSB7XG4gICAgICBkaXNwbGF5QWRkcmVzcyA9IHRoaXMubmZkO1xuICAgIH0gZWxzZSB7XG4gICAgICBkaXNwbGF5QWRkcmVzcyA9IHRoaXMud2FsbGV0QWRkcmVzcztcbiAgICB9XG5cbiAgICB0aGlzLnVpLmlubmVySFRNTCA9IGBcbiAgICA8c3BhbiBzdHlsZT1cIndvcmQtYnJlYWs6IGJyZWFrLWFsbDtcIj4ke2Rpc3BsYXlBZGRyZXNzfTwvc3Bhbj5cbiAgICA8YSBocmVmPVwiI1wiIGlkPVwiYnV0dG9uRGlzY29ubmVjdFwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCIyMFwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiBjbGFzcz1cImJpIGJpLXgtY2lyY2xlXCIgdmlld0JveD1cIjAgMCAxNiAxNlwiPlxuICAgIDxwYXRoIGQ9XCJNOCAxNUE3IDcgMCAxIDEgOCAxYTcgNyAwIDAgMSAwIDE0em0wIDFBOCA4IDAgMSAwIDggMGE4IDggMCAwIDAgMCAxNnpcIi8+XG4gICAgPHBhdGggZD1cIk00LjY0NiA0LjY0NmEuNS41IDAgMCAxIC43MDggMEw4IDcuMjkzbDIuNjQ2LTIuNjQ3YS41LjUgMCAwIDEgLjcwOC43MDhMOC43MDcgOGwyLjY0NyAyLjY0NmEuNS41IDAgMCAxLS43MDguNzA4TDggOC43MDdsLTIuNjQ2IDIuNjQ3YS41LjUgMCAwIDEtLjcwOC0uNzA4TDcuMjkzIDggNC42NDYgNS4zNTRhLjUuNSAwIDAgMSAwLS43MDh6XCIvPlxuICA8L3N2Zz48L2E+XG4gICAgYDtcblxuICAgIHRoaXMudWlcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2J1dHRvbkRpc2Nvbm5lY3RcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5kaXNjb25uZWN0LmJpbmQodGhpcykpO1xuICB9XG5cbiAgLy9TdGF0ZVxuICBhc3luYyBsb2FkU3RhdGUoKSB7XG4gICAgdGhpcy53YWxsZXRUeXBlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ3YWxsZXQtY29ubmVjdC10eXBlXCIpO1xuICAgIHRoaXMud2FsbGV0QWRkcmVzcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwid2FsbGV0LWNvbm5lY3QtYWRkcmVzc1wiKTtcblxuICAgIGlmICh0aGlzLndhbGxldFR5cGUgPT09IFwibXlhbGdvXCIgJiYgdGhpcy53YWxsZXRBZGRyZXNzKSB7XG4gICAgICBjb25zdCBNeUFsZ29Db25uZWN0ID0gYXdhaXQgaW1wb3J0KFwiQHJhbmRsYWJzL215YWxnby1jb25uZWN0XCIpO1xuICAgICAgdGhpcy53YWxsZXQgPSBuZXcgTXlBbGdvQ29ubmVjdC5kZWZhdWx0KCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLndhbGxldFR5cGUgPT09IFwicGVyYVwiICYmIHRoaXMud2FsbGV0QWRkcmVzcykge1xuICAgICAgY29uc3QgeyBQZXJhV2FsbGV0Q29ubmVjdCB9ID0gYXdhaXQgaW1wb3J0KFwiQHBlcmF3YWxsZXQvY29ubmVjdFwiKTtcbiAgICAgIHRoaXMud2FsbGV0ID0gbmV3IFBlcmFXYWxsZXRDb25uZWN0KCk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgdGhpcy53YWxsZXQucmVjb25uZWN0U2Vzc2lvbigpO1xuXG4gICAgICAgIGlmIChhY2NvdW50cz8uWzBdKSB7XG4gICAgICAgICAgdGhpcy53YWxsZXRBZGRyZXNzID0gYWNjb3VudHNbMF07XG4gICAgICAgICAgdGhpcy5zYXZlU3RhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgdGhpcy53YWxsZXQuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuXG4gICAgICAvLyBTZXR1cCB0aGUgZGlzY29ubmVjdCBldmVudCBsaXN0ZW5lclxuICAgICAgLy90aGlzLndhbGxldC5jb25uZWN0b3I/Lm9uKFwiZGlzY29ubmVjdFwiLCB0aGlzLmRpc2Nvbm5lY3QuYmluZCh0aGlzKSk7XG4gICAgfVxuICB9XG5cbiAgc2F2ZVN0YXRlKCkge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwid2FsbGV0LWNvbm5lY3QtdHlwZVwiLCB0aGlzLndhbGxldFR5cGUpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwid2FsbGV0LWNvbm5lY3QtYWRkcmVzc1wiLCB0aGlzLndhbGxldEFkZHJlc3MpO1xuICB9XG5cbiAgY2xlYXJTdGF0ZSgpIHtcbiAgICB0aGlzLm5mZCA9IG51bGw7XG4gICAgdGhpcy53YWxsZXQgPSBudWxsO1xuICAgIHRoaXMud2FsbGV0VHlwZSA9IG51bGw7XG4gICAgdGhpcy53YWxsZXRBZGRyZXNzID0gbnVsbDtcblxuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwid2FsbGV0LWNvbm5lY3QtdHlwZVwiKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcIndhbGxldC1jb25uZWN0LWFkZHJlc3NcIik7XG4gIH1cblxuICAvL2xvYWQgbmZkIGRvbWFpblxuICBhc3luYyBsb2FkTmZkKCkge1xuICAgIGlmICh0aGlzLndhbGxldEFkZHJlc3MpIHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIFwiaHR0cHM6Ly9hcGkubmYuZG9tYWlucy9uZmQvYWRkcmVzcz9hZGRyZXNzPVwiICtcbiAgICAgICAgICB0aGlzLndhbGxldEFkZHJlc3MgK1xuICAgICAgICAgIFwiJmxpbWl0PTEmdmlldz10aHVtYm5haWxcIlxuICAgICAgKTtcblxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgIGNvbnN0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgIGpzb24ubGVuZ3RoID4gMCAmJlxuICAgICAgICAgIGpzb25bMF0uY2FBbGdvICYmXG4gICAgICAgICAganNvblswXS5jYUFsZ28uaW5jbHVkZXModGhpcy53YWxsZXRBZGRyZXNzKVxuICAgICAgICApIHtcbiAgICAgICAgICB0aGlzLm5mZCA9IGpzb25bMF0ubmFtZTtcbiAgICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvL0Nvbm5lY3RcblxuICBhc3luYyBjb25uZWN0TXlBbGdvKCkge1xuICAgIGNvbnN0IE15QWxnb0Nvbm5lY3QgPSBhd2FpdCBpbXBvcnQoXCJAcmFuZGxhYnMvbXlhbGdvLWNvbm5lY3RcIik7XG5cbiAgICB0aGlzLndhbGxldCA9IG5ldyBNeUFsZ29Db25uZWN0LmRlZmF1bHQoKTtcbiAgICBjb25zdCBhY2NvdW50c1NoYXJlZEJ5VXNlciA9IGF3YWl0IHRoaXMud2FsbGV0LmNvbm5lY3Qoe1xuICAgICAgc2hvdWxkU2VsZWN0T25lQWNjb3VudDogdHJ1ZSxcbiAgICAgIG9wZW5NYW5hZ2VyOiB0cnVlLFxuICAgIH0pO1xuXG4gICAgaWYgKGFjY291bnRzU2hhcmVkQnlVc2VyWzBdKSB7XG4gICAgICB0aGlzLndhbGxldFR5cGUgPSBcIm15YWxnb1wiO1xuICAgICAgdGhpcy53YWxsZXRBZGRyZXNzID0gYWNjb3VudHNTaGFyZWRCeVVzZXJbMF0uYWRkcmVzcztcbiAgICAgIHRoaXMuc2F2ZVN0YXRlKCk7XG4gICAgICB0aGlzLnVwZGF0ZVVJKCk7XG4gICAgICB0aGlzLmxvYWROZmQoKTtcblxuICAgICAgdGhpcy5jb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGNvbm5lY3RQZXJhKCkge1xuICAgIGNvbnN0IHsgUGVyYVdhbGxldENvbm5lY3QgfSA9IGF3YWl0IGltcG9ydChcIkBwZXJhd2FsbGV0L2Nvbm5lY3RcIik7XG5cbiAgICB0aGlzLndhbGxldCA9IG5ldyBQZXJhV2FsbGV0Q29ubmVjdCgpO1xuXG4gICAgdGhpcy53YWxsZXQuY29ubmVjdG9yPy5raWxsU2Vzc2lvbigpO1xuXG4gICAgYXdhaXQgdGhpcy53YWxsZXQuZGlzY29ubmVjdCgpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFjY291bnRzU2hhcmVkQnlVc2VyID0gYXdhaXQgdGhpcy53YWxsZXQuY29ubmVjdCgpO1xuXG4gICAgICBpZiAoYWNjb3VudHNTaGFyZWRCeVVzZXJbMF0pIHtcbiAgICAgICAgdGhpcy53YWxsZXRUeXBlID0gXCJwZXJhXCI7XG4gICAgICAgIHRoaXMud2FsbGV0QWRkcmVzcyA9IGFjY291bnRzU2hhcmVkQnlVc2VyWzBdO1xuICAgICAgICB0aGlzLnNhdmVTdGF0ZSgpO1xuICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7XG4gICAgICAgIHRoaXMubG9hZE5mZCgpO1xuXG4gICAgICAgIC8vIFNldHVwIHRoZSBkaXNjb25uZWN0IGV2ZW50IGxpc3RlbmVyXG4gICAgICAgIHRoaXMud2FsbGV0LmNvbm5lY3Rvcj8ub24oXCJkaXNjb25uZWN0XCIsIHRoaXMuZGlzY29ubmVjdC5iaW5kKHRoaXMpKTtcblxuICAgICAgICB0aGlzLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBpZiAoZXJyPy5kYXRhPy50eXBlICE9PSBcIkNPTk5FQ1RfTU9EQUxfQ0xPU0VEXCIpIHtcbiAgICAgICAgYWxlcnQoZXJyLm1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRpc2Nvbm5lY3QoKSB7XG4gICAgaWYgKHRoaXMud2FsbGV0VHlwZSA9PT0gXCJwZXJhXCIpIHtcbiAgICAgIHRoaXMud2FsbGV0LmRpc2Nvbm5lY3QoKTtcbiAgICB9XG5cbiAgICB0aGlzLmNsZWFyU3RhdGUoKTtcbiAgICB0aGlzLnVwZGF0ZVVJKCk7XG5cbiAgICB0aGlzLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCk7XG4gIH1cblxuICAvL1NpZ25cblxuICBhc3luYyBzaWduVHJhbnNhY3Rpb25zKHRyYW5zYWN0aW9ucykge1xuICAgIGxldCBzaWduZWRUcmFuc2FjdGlvbnM7XG5cbiAgICBpZiAodGhpcy53YWxsZXRUeXBlID09PSBcIm15YWxnb1wiKSB7XG4gICAgICBjb25zdCB0cmFuc2FjdGlvbnNUb1NpZ24gPSBbXTtcblxuICAgICAgZm9yIChjb25zdCB0eCBvZiB0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgaWYgKGVuY29kZUFkZHJlc3ModHguZnJvbS5wdWJsaWNLZXkpID09PSB0aGlzLndhbGxldEFkZHJlc3MpIHtcbiAgICAgICAgICB0cmFuc2FjdGlvbnNUb1NpZ24ucHVzaCh0eC50b0J5dGUoKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgc2lnbmVkVHJhbnNhY3Rpb25zID0gYXdhaXQgdGhpcy53YWxsZXQuc2lnblRyYW5zYWN0aW9uKFxuICAgICAgICAgIHRyYW5zYWN0aW9uc1RvU2lnblxuICAgICAgICApO1xuXG4gICAgICAgIHNpZ25lZFRyYW5zYWN0aW9ucyA9IHNpZ25lZFRyYW5zYWN0aW9ucy5tYXAoKHR4KSA9PiB0eC5ibG9iKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLndhbGxldFR5cGUgPT09IFwicGVyYVwiKSB7XG4gICAgICBgYDtcblxuICAgICAgY29uc3QgdHJhbnNhY3Rpb25zVG9TaWduID0gdHJhbnNhY3Rpb25zLm1hcCgodHgpID0+ICh7XG4gICAgICAgIHR4bjogdHgsXG4gICAgICAgIHNpZ25lcnM6IFtlbmNvZGVBZGRyZXNzKHR4LmZyb20ucHVibGljS2V5KV0sXG4gICAgICB9KSk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHNpZ25lZFRyYW5zYWN0aW9ucyA9IGF3YWl0IHRoaXMud2FsbGV0LnNpZ25UcmFuc2FjdGlvbihbXG4gICAgICAgICAgdHJhbnNhY3Rpb25zVG9TaWduLFxuICAgICAgICBdKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHdhbGxldCBjb25uZWN0ZWRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNpZ25lZFRyYW5zYWN0aW9ucztcbiAgfVxufVxuIl0sIm5hbWVzIjpbInQiLCJzZWxmIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImUiLCJleHBvcnRzIiwiciIsIm4iLCJvIiwiaSIsImwiLCJjYWxsIiwibSIsImMiLCJkIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsIl9fZXNNb2R1bGUiLCJjcmVhdGUiLCJiaW5kIiwiZGVmYXVsdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJVIiwiSCIsIlciLCJYIiwiWSIsImoiLCJfIiwieCIsImYiLCJ5IiwiYiIsInciLCJBIiwidiIsIml0ZXJhdG9yIiwibmV4dCIsImRvbmUiLCJwdXNoIiwiZXJyb3IiLCJyZXR1cm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJjb25jYXQiLCJwcm9jZXNzIiwiVGV4dEVuY29kZXIiLCJUZXh0RGVjb2RlciIsImNoYXJDb2RlQXQiLCJhIiwidSIsImVuY29kZUludG8iLCJzdWJhcnJheSIsInNldCIsImVuY29kZSIsImgiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJhcHBseSIsInRoaXMiLCJ0eXBlIiwiZGF0YSIsIk1hdGgiLCJmbG9vciIsInNldFVpbnQzMiIsImciLCJnZXRJbnQzMiIsImdldFVpbnQzMiIsIk51bWJlciIsIk1JTl9TQUZFX0lOVEVHRVIiLCJNQVhfU0FGRV9JTlRFR0VSIiwiQmlnSW50Iiwic2VjIiwibnNlYyIsIlVpbnQ4QXJyYXkiLCJEYXRhVmlldyIsImJ1ZmZlciIsImdldFRpbWUiLCJEYXRlIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJFcnJvciIsIlMiLCJkZWNvZGUiLCJidWlsdEluRW5jb2RlcnMiLCJidWlsdEluRGVjb2RlcnMiLCJlbmNvZGVycyIsImRlY29kZXJzIiwicmVnaXN0ZXIiLCJ0cnlUb0VuY29kZSIsImRlZmF1bHRDb2RlYyIsIkUiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsImZyb20iLCJUIiwiVHlwZUVycm9yIiwiZXh0ZW5zaW9uQ29kZWMiLCJjb250ZXh0IiwibWF4RGVwdGgiLCJpbml0aWFsQnVmZmVyU2l6ZSIsInNvcnRLZXlzIiwiZm9yY2VGbG9hdDMyIiwiaWdub3JlVW5kZWZpbmVkIiwiZm9yY2VJbnRlZ2VyVG9GbG9hdCIsInBvcyIsInZpZXciLCJieXRlcyIsImdldFVpbnQ4QXJyYXkiLCJyZWluaXRpYWxpemVTdGF0ZSIsImRvRW5jb2RlIiwiZW5jb2RlTmlsIiwiZW5jb2RlQm9vbGVhbiIsImVuY29kZU51bWJlciIsImVuY29kZVN0cmluZyIsImVuY29kZWJpZ2ludCIsImVuY29kZU9iamVjdCIsImVuc3VyZUJ1ZmZlclNpemVUb1dyaXRlIiwicmVzaXplQnVmZmVyIiwid3JpdGVVOCIsImlzU2FmZUludGVnZXIiLCJ3cml0ZVUxNiIsIndyaXRlVTMyIiwid3JpdGVVNjQiLCJ3cml0ZUk4Iiwid3JpdGVJMTYiLCJ3cml0ZUkzMiIsIndyaXRlSTY0Iiwid3JpdGVGMzIiLCJ3cml0ZUY2NCIsIndyaXRlQmlnNjQiLCJ3cml0ZVN0cmluZ0hlYWRlciIsImVuY29kZUV4dGVuc2lvbiIsIkFycmF5IiwiaXNBcnJheSIsImVuY29kZUFycmF5IiwiZW5jb2RlQmluYXJ5IiwidG9TdHJpbmciLCJlbmNvZGVNYXAiLCJ3cml0ZVU4YSIsImNvdW50V2l0aG91dFVuZGVmaW5lZCIsImtleXMiLCJzb3J0Iiwic2V0VWludDgiLCJzZXRJbnQ4Iiwic2V0VWludDE2Iiwic2V0SW50MTYiLCJzZXRJbnQzMiIsInNldEZsb2F0MzIiLCJzZXRGbG9hdDY0IiwiQiIsImsiLCJhYnMiLCJwYWRTdGFydCIsIkkiLCJtYXhLZXlMZW5ndGgiLCJtYXhMZW5ndGhQZXJLZXkiLCJoaXQiLCJtaXNzIiwiY2FjaGVzIiwiY2FuQmVDYWNoZWQiLCJzdG9yZSIsInJhbmRvbSIsInNsaWNlIiwiQyIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJ0aHJvdyIsInBvcCIsIlIiLCJhc3luY0l0ZXJhdG9yIiwiX192YWx1ZXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJPIiwiRCIsInNoaWZ0IiwiTiIsIlAiLCJMIiwiZ2V0SW50OCIsImNvbnN0cnVjdG9yIiwiRiIsInoiLCJtYXhTdHJMZW5ndGgiLCJtYXhCaW5MZW5ndGgiLCJtYXhBcnJheUxlbmd0aCIsIm1heE1hcExlbmd0aCIsIm1heEV4dExlbmd0aCIsImtleURlY29kZXIiLCJ0b3RhbFBvcyIsImhlYWRCeXRlIiwic3RhY2siLCJzZXRCdWZmZXIiLCJhcHBlbmRCdWZmZXIiLCJoYXNSZW1haW5pbmciLCJjcmVhdGVOb0V4dHJhQnl0ZXNFcnJvciIsIlJhbmdlRXJyb3IiLCJkb0RlY29kZVNpbmdsZVN5bmMiLCJkb0RlY29kZVN5bmMiLCJkZWNvZGVBc3luYyIsImRlY29kZUFycmF5U3RyZWFtIiwiZGVjb2RlTXVsdGlBc3luYyIsImRlY29kZVN0cmVhbSIsInJlYWRBcnJheVNpemUiLCJjb21wbGV0ZSIsInJlYWRIZWFkQnl0ZSIsInB1c2hNYXBTdGF0ZSIsInB1c2hBcnJheVN0YXRlIiwiZGVjb2RlVXRmOFN0cmluZyIsInJlYWRGMzIiLCJyZWFkRjY0IiwicmVhZFU4IiwicmVhZFUxNiIsInJlYWRVMzIiLCJyZWFkVTY0IiwicmVhZEk4IiwicmVhZEkxNiIsInJlYWRJMzIiLCJyZWFkSTY0IiwibG9va1U4IiwibG9va1UxNiIsImxvb2tVMzIiLCJkZWNvZGVCaW5hcnkiLCJkZWNvZGVFeHRlbnNpb24iLCJhcnJheSIsInBvc2l0aW9uIiwic2l6ZSIsImtleSIsIm1hcCIsInJlYWRDb3VudCIsInN0YXRlSXNNYXBLZXkiLCJnZXRVaW50OCIsImdldFVpbnQxNiIsImdldEludDE2IiwiZ2V0RmxvYXQzMiIsImdldEZsb2F0NjQiLCJNIiwiRyIsIksiLCJxIiwiJCIsIlYiLCJnZXRSZWFkZXIiLCJyZWFkIiwicmVsZWFzZUxvY2siLCJ0b0J5dGVBcnJheSIsImZyb21CeXRlQXJyYXkiLCJqb2luIiwiaW5kZXhPZiIsImNlaWwiLCJjaGFyQXQiLCJ2YWx1ZU9mIiwicHJlZml4IiwiZ3JvdXBTaXplIiwic2Vjb25kYXJ5R3JvdXBTaXplIiwiZ3JvdXBTZXBhcmF0b3IiLCJkZWNpbWFsU2VwYXJhdG9yIiwiZnJhY3Rpb25Hcm91cFNpemUiLCJmcmFjdGlvbkdyb3VwU2VwYXJhdG9yIiwic3VmZml4IiwiX2lzQmlnTnVtYmVyIiwidGVzdCIsInJlcGxhY2UiLCJzZWFyY2giLCJzdWJzdHJpbmciLCJERUJVRyIsInRvVXBwZXJDYXNlIiwidG9Mb3dlckNhc2UiLCJjbG9uZSIsIlJPVU5EX1VQIiwiUk9VTkRfRE9XTiIsIlJPVU5EX0NFSUwiLCJST1VORF9GTE9PUiIsIlJPVU5EX0hBTEZfVVAiLCJST1VORF9IQUxGX0RPV04iLCJST1VORF9IQUxGX0VWRU4iLCJST1VORF9IQUxGX0NFSUwiLCJST1VORF9IQUxGX0ZMT09SIiwiRVVDTElEIiwiY29uZmlnIiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwicmFuZG9tQnl0ZXMiLCJERUNJTUFMX1BMQUNFUyIsIlJPVU5ESU5HX01PREUiLCJFWFBPTkVOVElBTF9BVCIsIlJBTkdFIiwiQ1JZUFRPIiwiTU9EVUxPX01PREUiLCJQT1dfUFJFQ0lTSU9OIiwiRk9STUFUIiwiQUxQSEFCRVQiLCJpc0JpZ051bWJlciIsIm1heGltdW0iLCJtYXgiLCJsdCIsIm1pbmltdW0iLCJtaW4iLCJndCIsIlVpbnQzMkFycmF5IiwiY29weSIsInNwbGljZSIsInN1bSIsInBsdXMiLCJyZXZlcnNlIiwicG93IiwiTmFOIiwiaXNOYU4iLCJhYnNvbHV0ZVZhbHVlIiwiY29tcGFyZWRUbyIsImRlY2ltYWxQbGFjZXMiLCJkcCIsImRpdmlkZWRCeSIsImRpdiIsImRpdmlkZWRUb0ludGVnZXJCeSIsImlkaXYiLCJleHBvbmVudGlhdGVkQnkiLCJpc0ludGVnZXIiLCJtb2QiLCJ0aW1lcyIsImludGVnZXJWYWx1ZSIsImlzRXF1YWxUbyIsImVxIiwiaXNGaW5pdGUiLCJpc0dyZWF0ZXJUaGFuIiwiaXNHcmVhdGVyVGhhbk9yRXF1YWxUbyIsImd0ZSIsImlzTGVzc1RoYW4iLCJpc0xlc3NUaGFuT3JFcXVhbFRvIiwibHRlIiwiaXNOZWdhdGl2ZSIsImlzUG9zaXRpdmUiLCJpc1plcm8iLCJtaW51cyIsIm1vZHVsbyIsIm11bHRpcGxpZWRCeSIsIm5lZ2F0ZWQiLCJwcmVjaXNpb24iLCJzZCIsInNoaWZ0ZWRCeSIsInNxdWFyZVJvb3QiLCJzcXJ0IiwidG9FeHBvbmVudGlhbCIsInRvRml4ZWQiLCJ0b0Zvcm1hdCIsInNwbGl0Iiwic3Vic3RyIiwiUmVnRXhwIiwidG9GcmFjdGlvbiIsInRvTnVtYmVyIiwidG9QcmVjaXNpb24iLCJ0b0pTT04iLCJCaWdOdW1iZXIiLCJmb3IiLCJCdWZmZXIiLCJTbG93QnVmZmVyIiwiYWxsb2MiLCJJTlNQRUNUX01BWF9CWVRFUyIsInNldFByb3RvdHlwZU9mIiwiaXNFbmNvZGluZyIsIndyaXRlIiwiU2hhcmVkQXJyYXlCdWZmZXIiLCJpc0J1ZmZlciIsInRvUHJpbWl0aXZlIiwibGFzdEluZGV4T2YiLCJyZWFkVUludDE2QkUiLCJwYXJzZUludCIsImtNYXhMZW5ndGgiLCJUWVBFRF9BUlJBWV9TVVBQT1JUIiwiZm9vIiwiY29uc29sZSIsInBvb2xTaXplIiwiZmlsbCIsImFsbG9jVW5zYWZlIiwiYWxsb2NVbnNhZmVTbG93IiwiX2lzQnVmZmVyIiwiY29tcGFyZSIsIm9mZnNldCIsInN3YXAxNiIsInN3YXAzMiIsInN3YXA2NCIsInRvTG9jYWxlU3RyaW5nIiwiZXF1YWxzIiwiaW5zcGVjdCIsInRyaW0iLCJpbmNsdWRlcyIsIl9hcnIiLCJKIiwicmVhZFVpbnRMRSIsInJlYWRVSW50TEUiLCJyZWFkVWludEJFIiwicmVhZFVJbnRCRSIsInJlYWRVaW50OCIsInJlYWRVSW50OCIsInJlYWRVaW50MTZMRSIsInJlYWRVSW50MTZMRSIsInJlYWRVaW50MTZCRSIsInJlYWRVaW50MzJMRSIsInJlYWRVSW50MzJMRSIsInJlYWRVaW50MzJCRSIsInJlYWRVSW50MzJCRSIsInJlYWRCaWdVSW50NjRMRSIsIlEiLCJyZWFkQmlnVUludDY0QkUiLCJyZWFkSW50TEUiLCJyZWFkSW50QkUiLCJyZWFkSW50OCIsInJlYWRJbnQxNkxFIiwicmVhZEludDE2QkUiLCJyZWFkSW50MzJMRSIsInJlYWRJbnQzMkJFIiwicmVhZEJpZ0ludDY0TEUiLCJyZWFkQmlnSW50NjRCRSIsInJlYWRGbG9hdExFIiwicmVhZEZsb2F0QkUiLCJyZWFkRG91YmxlTEUiLCJyZWFkRG91YmxlQkUiLCJ3cml0ZVVpbnRMRSIsIndyaXRlVUludExFIiwid3JpdGVVaW50QkUiLCJ3cml0ZVVJbnRCRSIsIndyaXRlVWludDgiLCJ3cml0ZVVJbnQ4Iiwid3JpdGVVaW50MTZMRSIsIndyaXRlVUludDE2TEUiLCJ3cml0ZVVpbnQxNkJFIiwid3JpdGVVSW50MTZCRSIsIndyaXRlVWludDMyTEUiLCJ3cml0ZVVJbnQzMkxFIiwid3JpdGVVaW50MzJCRSIsIndyaXRlVUludDMyQkUiLCJ3cml0ZUJpZ1VJbnQ2NExFIiwid3JpdGVCaWdVSW50NjRCRSIsIndyaXRlSW50TEUiLCJ3cml0ZUludEJFIiwid3JpdGVJbnQ4Iiwid3JpdGVJbnQxNkxFIiwid3JpdGVJbnQxNkJFIiwid3JpdGVJbnQzMkxFIiwid3JpdGVJbnQzMkJFIiwid3JpdGVCaWdJbnQ2NExFIiwid3JpdGVCaWdJbnQ2NEJFIiwid3JpdGVGbG9hdExFIiwid3JpdGVGbG9hdEJFIiwid3JpdGVEb3VibGVMRSIsIndyaXRlRG91YmxlQkUiLCJjb3B5V2l0aGluIiwic3VwZXIiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsIm5hbWUiLCJjb2RlIiwibWVzc2FnZSIsIkVSUl9PVVRfT0ZfUkFOR0UiLCJFUlJfSU5WQUxJRF9BUkdfVFlQRSIsIkVSUl9CVUZGRVJfT1VUX09GX0JPVU5EUyIsIloiLCJvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2FsbGJhY2tzIiwib25jZSIsIm9mZiIsImZuIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZW1pdCIsImxpc3RlbmVycyIsImhhc0xpc3RlbmVycyIsInN0YWJsZSIsInN0YWJsZVN0cmluZ2lmeSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJGdW5jdGlvbiIsIlN5bnRheEVycm9yIiwiZ2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBZ2dyZWdhdGVFcnJvciIsIkF0b21pY3MiLCJCb29sZWFuIiwiZGVjb2RlVVJJIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZW5jb2RlVVJJIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZXZhbCIsIkV2YWxFcnJvciIsIkZsb2F0MzJBcnJheSIsIkZsb2F0NjRBcnJheSIsIkZpbmFsaXphdGlvblJlZ2lzdHJ5IiwiSW50OEFycmF5IiwiSW50MTZBcnJheSIsIkludDMyQXJyYXkiLCJNYXAiLCJwYXJzZUZsb2F0IiwiUHJveHkiLCJSZWZlcmVuY2VFcnJvciIsIlJlZmxlY3QiLCJTZXQiLCJVaW50OENsYW1wZWRBcnJheSIsIlVpbnQxNkFycmF5IiwiVVJJRXJyb3IiLCJXZWFrTWFwIiwiV2Vha1JlZiIsIldlYWtTZXQiLCJhbGlhcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5TmFtZXMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIndpbmRvdyIsIkhJX0JBU0UzMl9OT19OT0RFX0pTIiwidmVyc2lvbnMiLCJub2RlIiwiSElfQkFTRTMyX05PX0NPTU1PTl9KUyIsImFtZE8iLCJhc0J5dGVzIiwiYmFzZTMyIiwibG9nIiwiTE4yIiwibW9kdWxlIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18iLCJFUlJPUiIsIldJTkRPVyIsInJvb3QiLCJKU19TSEEyNTZfTk9fV0lORE9XIiwiV0VCX1dPUktFUiIsIk5PREVfSlMiLCJKU19TSEEyNTZfTk9fTk9ERV9KUyIsIkNPTU1PTl9KUyIsIkpTX1NIQTI1Nl9OT19DT01NT05fSlMiLCJBTUQiLCJBUlJBWV9CVUZGRVIiLCJKU19TSEEyNTZfTk9fQVJSQVlfQlVGRkVSIiwiSEVYX0NIQVJTIiwiRVhUUkEiLCJTSElGVCIsIk9VVFBVVF9UWVBFUyIsImJsb2NrcyIsIkpTX1NIQTI1Nl9OT19BUlJBWV9CVUZGRVJfSVNfVklFVyIsImNyZWF0ZU91dHB1dE1ldGhvZCIsIlNoYTI1NiIsInVwZGF0ZSIsImNyZWF0ZU1ldGhvZCIsIm5vZGVXcmFwIiwibWV0aG9kIiwiaXMyMjQiLCJhbGdvcml0aG0iLCJub2RlTWV0aG9kIiwiY3JlYXRlSGFzaCIsImRpZ2VzdCIsImNyZWF0ZUhtYWNPdXRwdXRNZXRob2QiLCJIbWFjU2hhMjU2IiwiY3JlYXRlSG1hY01ldGhvZCIsImgwIiwiaDEiLCJoMiIsImgzIiwiaDQiLCJoNSIsImg2IiwiaDciLCJibG9jayIsInN0YXJ0IiwiaEJ5dGVzIiwiZmluYWxpemVkIiwiaGFzaGVkIiwiZmlyc3QiLCJvS2V5UGFkIiwiaW5uZXIiLCJzaGFyZWRNZW1vcnkiLCJsYXN0Qnl0ZUluZGV4IiwiaGFzaCIsImZpbmFsaXplIiwiaGV4IiwiYXJyYXlCdWZmZXIiLCJzaGEyNTYiLCJzaGEyMjQiLCJobWFjIiwiSlNfU0hBM19OT19XSU5ET1ciLCJKU19TSEEzX05PX05PREVfSlMiLCJKU19TSEEzX05PX0NPTU1PTl9KUyIsIkpTX1NIQTNfTk9fQVJSQVlfQlVGRkVSIiwiSlNfU0hBM19OT19BUlJBWV9CVUZGRVJfSVNfVklFVyIsInBhZGRpbmciLCJiaXRzIiwiYnl0ZXBhZCIsIm91dHB1dEJpdHMiLCJyZXNldCIsImJsb2NrQ291bnQiLCJieXRlQ291bnQiLCJvdXRwdXRCbG9ja3MiLCJleHRyYUJ5dGVzIiwidW5zaGlmdCIsImVlIiwidGUiLCJyZSIsIm5lIiwib2UiLCJzZSIsImllIiwiYWUiLCJjZSIsInVlIiwibGUiLCJKU19TSEE1MTJfTk9fV0lORE9XIiwiSlNfU0hBNTEyX05PX05PREVfSlMiLCJKU19TSEE1MTJfTk9fQ09NTU9OX0pTIiwiSlNfU0hBNTEyX05PX0FSUkFZX0JVRkZFUiIsIkpTX1NIQTUxMl9OT19BUlJBWV9CVUZGRVJfSVNfVklFVyIsImgwaCIsImgwbCIsImgxaCIsImgxbCIsImgyaCIsImgybCIsImgzaCIsImgzbCIsImg0aCIsImg0bCIsImg1aCIsImg1bCIsImg2aCIsImg2bCIsImg3aCIsImg3bCIsImNvcHlUbyIsInNoYTUxMiIsInNoYTM4NCIsInNoYTUxMl8yNTYiLCJzaGE1MTJfMjI0IiwicGFyc2UiLCJzdHJpY3QiLCJzdG9yZUFzU3RyaW5nIiwiYWx3YXlzUGFyc2VBc0JpZyIsInVzZU5hdGl2ZUJpZ0ludCIsInByb3RvQWN0aW9uIiwiY29uc3RydWN0b3JBY3Rpb24iLCJhdCIsInRleHQiLCJmb3JFYWNoIiwibGFzdEluZGV4IiwiaGFzIiwiZGVyZWYiLCJtYXRjaCIsImN1c3RvbSIsInF1b3RlU3R5bGUiLCJtYXhTdHJpbmdMZW5ndGgiLCJjdXN0b21JbnNwZWN0IiwiaW5kZW50IiwiZGVwdGgiLCJiYXNlIiwicHJldiIsIkhUTUxFbGVtZW50Iiwibm9kZU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJhdHRyaWJ1dGVzIiwiY2hpbGROb2RlcyIsImFzc2VydCIsIl9kZWZhdWx0cyIsImFyZ3MiLCJfc2V0RGVmYXVsdHMiLCJ3YXJuIiwiUmVxdWVzdCIsImVuZCIsImdldFhIUiIsIlhNTEh0dHBSZXF1ZXN0IiwibG9jYXRpb24iLCJwcm90b2NvbCIsIkFjdGl2ZVhPYmplY3QiLCJyZXEiLCJ4aHIiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwic3RhdHVzIiwiX3NldFN0YXR1c1Byb3BlcnRpZXMiLCJoZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwiaGVhZGVyIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJfc2V0SGVhZGVyUHJvcGVydGllcyIsIl9yZXNwb25zZVR5cGUiLCJib2R5IiwicmVzcG9uc2UiLCJfcGFyc2VCb2R5IiwiX3F1ZXJ5IiwidXJsIiwiX2hlYWRlciIsIm9yaWdpbmFsIiwicmF3UmVzcG9uc2UiLCJzdGF0dXNDb2RlIiwiY2FsbGJhY2siLCJfaXNSZXNwb25zZU9LIiwic2VuZCIsInNlcmlhbGl6ZU9iamVjdCIsInBhcnNlU3RyaW5nIiwidHlwZXMiLCJodG1sIiwianNvbiIsInhtbCIsInVybGVuY29kZWQiLCJmb3JtIiwic2VyaWFsaXplIiwiX3BhcnNlciIsInRvRXJyb3IiLCJSZXNwb25zZSIsImFjY2VwdCIsImF1dGgiLCJidG9hIiwiX2F1dGgiLCJxdWVyeSIsImF0dGFjaCIsIl9kYXRhIiwiX2dldEZvcm1EYXRhIiwiYXBwZW5kIiwiX2Zvcm1EYXRhIiwiRm9ybURhdGEiLCJfc2hvdWxkUmV0cnkiLCJfcmV0cnkiLCJfY2FsbGJhY2siLCJjbGVhclRpbWVvdXQiLCJfbWF4UmV0cmllcyIsInJldHJpZXMiLCJfcmV0cmllcyIsImNyb3NzRG9tYWluRXJyb3IiLCJjcm9zc0RvbWFpbiIsImFnZW50IiwiY2EiLCJwaXBlIiwiX2lzSG9zdCIsIl9lbmRDYWxsZWQiLCJfZmluYWxpemVRdWVyeVN0cmluZyIsIl9lbmQiLCJfc2V0VXBsb2FkVGltZW91dCIsIl91cGxvYWRUaW1lb3V0IiwiX3VwbG9hZFRpbWVvdXRUaW1lciIsInNldFRpbWVvdXQiLCJfdGltZW91dEVycm9yIiwiX2Fib3J0ZWQiLCJfc2V0VGltZW91dHMiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwiX3Jlc3BvbnNlVGltZW91dFRpbWVyIiwidGltZWRvdXQiLCJ0b3RhbCIsInBlcmNlbnQiLCJsb2FkZWQiLCJkaXJlY3Rpb24iLCJ1cGxvYWQiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwib3BlbiIsIl93aXRoQ3JlZGVudGlhbHMiLCJ3aXRoQ3JlZGVudGlhbHMiLCJfc2VyaWFsaXplciIsInNldFJlcXVlc3RIZWFkZXIiLCJkZWwiLCJkZWxldGUiLCJoZWFkIiwib3B0aW9ucyIsInBhdGNoIiwicG9zdCIsInB1dCIsIl90aW1lciIsInRpbWVvdXQiLCJfdGltZW91dCIsIl9yZXNwb25zZVRpbWVvdXQiLCJkZWFkbGluZSIsInJldHJ5IiwiX3JldHJ5Q2FsbGJhY2siLCJyZXF1ZXN0IiwidGltZWRvdXRFcnJvciIsIl9mdWxsZmlsbGVkUHJvbWlzZSIsImNhdGNoIiwidXNlIiwib2siLCJfb2tDYWxsYmFjayIsImdldEhlYWRlciIsInVuc2V0IiwiZmllbGQiLCJhYm9ydCIsInJlZGlyZWN0cyIsIl9tYXhSZWRpcmVjdHMiLCJtYXhSZXNwb25zZVNpemUiLCJfbWF4UmVzcG9uc2VTaXplIiwic29ydFF1ZXJ5IiwiX3NvcnQiLCJfYXBwZW5kUXVlcnlTdHJpbmciLCJlcnJubyIsInBhcmFtcyIsImxpbmtzIiwibGluayIsInBhcnNlTGlua3MiLCJzdGF0dXNUeXBlIiwiaW5mbyIsInJlZGlyZWN0IiwiY2xpZW50RXJyb3IiLCJzZXJ2ZXJFcnJvciIsImNyZWF0ZWQiLCJhY2NlcHRlZCIsIm5vQ29udGVudCIsImJhZFJlcXVlc3QiLCJ1bmF1dGhvcml6ZWQiLCJub3RBY2NlcHRhYmxlIiwiZm9yYmlkZGVuIiwibm90Rm91bmQiLCJ1bnByb2Nlc3NhYmxlRW50aXR5IiwiY2xlYW5IZWFkZXIiLCJob3N0IiwiYXV0aG9yaXphdGlvbiIsImNvb2tpZSIsImZvcm1hdHRlcnMiLCJSRkMxNzM4IiwiUkZDMzk4NiIsImZvcm1hdHMiLCJhbGxvd0RvdHMiLCJhbGxvd1Byb3RvdHlwZXMiLCJhbGxvd1NwYXJzZSIsImFycmF5TGltaXQiLCJjaGFyc2V0IiwiY2hhcnNldFNlbnRpbmVsIiwiY29tbWEiLCJkZWNvZGVyIiwiZGVsaW1pdGVyIiwiaWdub3JlUXVlcnlQcmVmaXgiLCJpbnRlcnByZXROdW1lcmljRW50aXRpZXMiLCJwYXJhbWV0ZXJMaW1pdCIsInBhcnNlQXJyYXlzIiwicGxhaW5PYmplY3RzIiwic3RyaWN0TnVsbEhhbmRsaW5nIiwiZXhlYyIsImluZGV4IiwiaXNSZWdFeHAiLCJtYXliZU1hcCIsImNvbWJpbmUiLCJtZXJnZSIsImNvbXBhY3QiLCJicmFja2V0cyIsImluZGljZXMiLCJyZXBlYXQiLCJ0b0lTT1N0cmluZyIsImFkZFF1ZXJ5UHJlZml4IiwiZW5jb2RlciIsImVuY29kZVZhbHVlc09ubHkiLCJmb3JtYXQiLCJmb3JtYXR0ZXIiLCJzZXJpYWxpemVEYXRlIiwic2tpcE51bGxzIiwiZmlsdGVyIiwiYXJyYXlGb3JtYXQiLCJhcnJheVRvT2JqZWN0IiwiYXNzaWduIiwicmVkdWNlIiwib2JqIiwicHJvcCIsInVuZXNjYXBlIiwiZXNjYXBlIiwicGFkIiwibGVmdG92ZXIiLCJmaW4iLCJmaW5pc2giLCJoZSIsInBlIiwiZmUiLCJsb3dsZXZlbCIsImNyeXB0b19jb3JlX2hzYWxzYTIwIiwiY3J5cHRvX3N0cmVhbV94b3IiLCJjcnlwdG9fc3RyZWFtIiwiY3J5cHRvX3N0cmVhbV9zYWxzYTIwX3hvciIsImNyeXB0b19zdHJlYW1fc2Fsc2EyMCIsImNyeXB0b19vbmV0aW1lYXV0aCIsImNyeXB0b19vbmV0aW1lYXV0aF92ZXJpZnkiLCJjcnlwdG9fdmVyaWZ5XzE2IiwiY3J5cHRvX3ZlcmlmeV8zMiIsImNyeXB0b19zZWNyZXRib3giLCJjcnlwdG9fc2VjcmV0Ym94X29wZW4iLCJjcnlwdG9fc2NhbGFybXVsdCIsImNyeXB0b19zY2FsYXJtdWx0X2Jhc2UiLCJjcnlwdG9fYm94X2JlZm9yZW5tIiwiY3J5cHRvX2JveF9hZnRlcm5tIiwiY3J5cHRvX2JveCIsImNyeXB0b19ib3hfb3BlbiIsImNyeXB0b19ib3hfa2V5cGFpciIsImNyeXB0b19oYXNoIiwiY3J5cHRvX3NpZ24iLCJjcnlwdG9fc2lnbl9rZXlwYWlyIiwiY3J5cHRvX3NpZ25fb3BlbiIsImNyeXB0b19zZWNyZXRib3hfS0VZQllURVMiLCJjcnlwdG9fc2VjcmV0Ym94X05PTkNFQllURVMiLCJjcnlwdG9fc2VjcmV0Ym94X1pFUk9CWVRFUyIsImNyeXB0b19zZWNyZXRib3hfQk9YWkVST0JZVEVTIiwiY3J5cHRvX3NjYWxhcm11bHRfQllURVMiLCJjcnlwdG9fc2NhbGFybXVsdF9TQ0FMQVJCWVRFUyIsImNyeXB0b19ib3hfUFVCTElDS0VZQllURVMiLCJjcnlwdG9fYm94X1NFQ1JFVEtFWUJZVEVTIiwiY3J5cHRvX2JveF9CRUZPUkVOTUJZVEVTIiwiY3J5cHRvX2JveF9OT05DRUJZVEVTIiwiY3J5cHRvX2JveF9aRVJPQllURVMiLCJjcnlwdG9fYm94X0JPWFpFUk9CWVRFUyIsImNyeXB0b19zaWduX0JZVEVTIiwiY3J5cHRvX3NpZ25fUFVCTElDS0VZQllURVMiLCJjcnlwdG9fc2lnbl9TRUNSRVRLRVlCWVRFUyIsImNyeXB0b19zaWduX1NFRURCWVRFUyIsImNyeXB0b19oYXNoX0JZVEVTIiwiZ2YiLCJwYWNrMjU1MTkiLCJ1bnBhY2syNTUxOSIsInBvdzI1MjMiLCJhZGQiLCJzZXQyNTUxOSIsIm1vZEwiLCJzY2FsYXJtdWx0Iiwic2NhbGFyYmFzZSIsInNlY3JldGJveCIsImtleUxlbmd0aCIsIm5vbmNlTGVuZ3RoIiwib3ZlcmhlYWRMZW5ndGgiLCJzY2FsYXJNdWx0Iiwic2NhbGFyTGVuZ3RoIiwiZ3JvdXBFbGVtZW50TGVuZ3RoIiwiYm94IiwiYmVmb3JlIiwiYWZ0ZXIiLCJrZXlQYWlyIiwicHVibGljS2V5Iiwic2VjcmV0S2V5IiwiZnJvbVNlY3JldEtleSIsInB1YmxpY0tleUxlbmd0aCIsInNlY3JldEtleUxlbmd0aCIsInNoYXJlZEtleUxlbmd0aCIsInNpZ24iLCJkZXRhY2hlZCIsInZlcmlmeSIsImZyb21TZWVkIiwic2VlZExlbmd0aCIsInNpZ25hdHVyZUxlbmd0aCIsImhhc2hMZW5ndGgiLCJzZXRQUk5HIiwibXNDcnlwdG8iLCJuYWNsIiwic2V0U2VuZFRyYW5zYWN0aW9uSGVhZGVycyIsIkFsZ29kIiwibm90ZWI2NCIsIm5vdGUiLCJhc3luYyIsImhlYWx0aENoZWNrIiwic3RhdHVzQWZ0ZXJCbG9jayIsInBlbmRpbmdUcmFuc2FjdGlvbnMiLCJ0cnVuY2F0ZWRUeG5zIiwidHJhbnNhY3Rpb25zIiwibGVkZ2VyU3VwcGx5IiwidHJhbnNhY3Rpb25CeUFkZHJlc3MiLCJmaXJzdFJvdW5kIiwibGFzdFJvdW5kIiwidHJhbnNhY3Rpb25CeUFkZHJlc3NBbmREYXRlIiwiZnJvbURhdGUiLCJ0b0RhdGUiLCJ0cmFuc2FjdGlvbkJ5SWQiLCJ0cmFuc2FjdGlvbkluZm9ybWF0aW9uIiwicGVuZGluZ1RyYW5zYWN0aW9uSW5mb3JtYXRpb24iLCJhY2NvdW50SW5mb3JtYXRpb24iLCJhc3NldEluZm9ybWF0aW9uIiwic3VnZ2VzdGVkRmVlIiwic2VuZFJhd1RyYW5zYWN0aW9uIiwic2VuZFJhd1RyYW5zYWN0aW9ucyIsImdldFRyYW5zYWN0aW9uUGFyYW1zIiwic3VnZ2VzdFBhcmFtcyIsImZsYXRGZWUiLCJmZWUiLCJnZW5lc2lzSUQiLCJnZW5lc2lzSGFzaCIsImdlbmVzaXNoYXNoYjY0IiwidHhucyIsIkR5bmFtaWNGZWUiLCJBTEdPUkFORF9aRVJPX0FERFJFU1NfU1RSSU5HIiwidmFsVHlwZXMiLCJJTlQiLCJBRERSRVNTIiwiQkFTRTY0IiwiaW5qZWN0IiwicHJvZ3JhbUJ5dGVzIiwiTG9naWNTaWciLCJhZGRyZXNzIiwiZ2V0UHJvZ3JhbSIsImdldEFkZHJlc3MiLCJnZXREeW5hbWljRmVlVHJhbnNhY3Rpb25zIiwiZGVjb2RlQWRkcmVzcyIsIkFMR09SQU5EX01JTl9UWF9GRUUiLCJrZXlQYWlyRnJvbVNlY3JldEtleSIsImVuY29kZUFkZHJlc3MiLCJsZWFzZSIsIlRyYW5zYWN0aW9uIiwiYWRkTGVhc2UiLCJ0byIsImFtb3VudCIsImFzc2lnbkdyb3VwSUQiLCJsc2lnIiwiZ2V0X29ial9mb3JfZW5jb2RpbmciLCJ0eG4iLCJzaWduVHhuIiwic2lnbkR5bmFtaWNGZWUiLCJyZWFkUHJvZ3JhbSIsImNsb3NlUmVtYWluZGVyVG8iLCJrZWNjYWsyNTYiLCJIVExDIiwic2lnblRyYW5zYWN0aW9uV2l0aEhUTENVbmxvY2siLCJzaWduTG9naWNTaWdUcmFuc2FjdGlvbiIsIkxpbWl0T3JkZXIiLCJnZXRTd2FwQXNzZXRzVHJhbnNhY3Rpb24iLCJTcGxpdCIsImdldFNwbGl0RnVuZHNUcmFuc2FjdGlvbiIsIlBlcmlvZGljUGF5bWVudCIsImdldFBlcmlvZGljUGF5bWVudFdpdGhkcmF3YWxUcmFuc2FjdGlvbiIsIm93bmVyIiwiYXNzZXRpZCIsIm1ha2VMb2dpY1NpZyIsIm1ha2VQYXltZW50VHhuIiwibWFrZUFzc2V0VHJhbnNmZXJUeG4iLCJzaWduTG9naWNTaWdUcmFuc2FjdGlvbk9iamVjdCIsImNvbmNhdEFycmF5cyIsImJsb2IiLCJyZWNlaXZlciIsIndpdGhkcmF3YWxXaW5kb3ciLCJwZXJpb2QiLCJleHBpcnlSb3VuZCIsIm1heEZlZSIsInJvdW5kIiwiSlEiLCJfNCIsIlgzIiwiUjAiLCJqRCIsIlloIiwiYkwiLCJMcyIsIlVWIiwiQXgiLCJBOSIsIncxIiwiTksiLCJSWSIsIlB1IiwiVmsiLCJuaCIsImtHIiwicUgiLCJKSCIsInZKIiwibzUiLCJBRSIsIkk1Iiwic3RhdGljIiwiZW5kc1dpdGgiLCJzdGFydHNXaXRoIiwiZXZlcnkiLCJwYXJzZVR1cGxlQ29udGVudCIsImJpdFNpemUiLCJpc0R5bmFtaWMiLCJieXRlTGVuIiwiY2hpbGRUeXBlIiwic3RhdGljTGVuZ3RoIiwidG9BQklUdXBsZVR5cGUiLCJjaGlsZFR5cGVzIiwic29tZSIsInRydW5jIiwicmlnaHQiLCJsZWZ0IiwiYW55IiwicGF5Iiwia2V5cmVnIiwiYWNmZyIsImF4ZmVyIiwiYWZyeiIsImFwcGwiLCJhY2NvdW50IiwiYXBwbGljYXRpb24iLCJhc3NldCIsInJldHVybnMiLCJkZXNjcmlwdGlvbiIsImRlc2MiLCJnZXRTaWduYXR1cmUiLCJnZXRTZWxlY3RvciIsImdlbmVyaWNIYXNoIiwidHhuQ291bnQiLCJtZXRob2RzIiwibmV0d29ya3MiLCJnZXRNZXRob2RCeU5hbWUiLCJhZGRyIiwic2siLCJiaWRkZXJLZXkiLCJiaWRBbW91bnQiLCJiaWRJRCIsImF1Y3Rpb25LZXkiLCJhdWN0aW9uSUQiLCJtYXhQcmljZSIsInRhZyIsImJpZGRlciIsImN1ciIsInByaWNlIiwiaWQiLCJhdWMiLCJhaWQiLCJzaWduQmlkIiwic2lnIiwiYmlkIiwiZGVmYXVsdEhlYWRlcnMiLCJVUkwiLCJwb3J0IiwiYmFzZVVSTCIsInRva2VuSGVhZGVyIiwiYWRkcmVzc1dpdGhQYXRoIiwic3VwZXJhZ2VudFRvSFRUUENsaWVudFJlc3BvbnNlIiwiZm9ybWF0U3VwZXJhZ2VudEVycm9yIiwiYmMiLCJwYXJzZUpTT04iLCJwcmVwYXJlUmVzcG9uc2UiLCJwcmVwYXJlUmVzcG9uc2VFcnJvciIsInNlcmlhbGl6ZURhdGEiLCJ3YWxsZXRfbmFtZSIsIndhbGxldF9kcml2ZXJfbmFtZSIsIndhbGxldF9wYXNzd29yZCIsIm1hc3Rlcl9kZXJpdmF0aW9uX2tleSIsIndhbGxldF9pZCIsIndhbGxldF9oYW5kbGVfdG9rZW4iLCJwcml2YXRlX2tleSIsImRpc3BsYXlfbW5lbW9uaWMiLCJpbnN0YW50aWF0ZVR4bklmTmVlZGVkIiwidHJhbnNhY3Rpb24iLCJ0b0J5dGUiLCJzaWduZWRfdHJhbnNhY3Rpb24iLCJwdWJsaWNfa2V5IiwibXVsdGlzaWdfdmVyc2lvbiIsInRocmVzaG9sZCIsInBrcyIsInBhcnRpYWxfbXVsdGlzaWciLCJwYXRoIiwiZXhjbHVkZSIsImFzc2V0SUQiLCJhcHBsaWNhdGlvbklEIiwicHJlcGFyZSIsInNvdXJjZSIsInR4aWQiLCJ0eElEIiwidmVyc2lvbnNDaGVjayIsImludERlY29kaW5nIiwiYWNjb3VudEFzc2V0SW5mb3JtYXRpb24iLCJhY2NvdW50QXBwbGljYXRpb25JbmZvcm1hdGlvbiIsInBlbmRpbmdUcmFuc2FjdGlvbnNJbmZvcm1hdGlvbiIsInBlbmRpbmdUcmFuc2FjdGlvbkJ5QWRkcmVzcyIsInN1cHBseSIsImNvbXBpbGUiLCJkcnlydW4iLCJnZXRBc3NldEJ5SUQiLCJnZXRBcHBsaWNhdGlvbkJ5SUQiLCJnZW5lc2lzIiwiZ2V0UHJvb2YiLCJBY2NvdW50IiwiQWNjb3VudEFwcGxpY2F0aW9uUmVzcG9uc2UiLCJBY2NvdW50QXNzZXRSZXNwb25zZSIsIkFjY291bnRQYXJ0aWNpcGF0aW9uIiwiQWNjb3VudFN0YXRlRGVsdGEiLCJBcHBsaWNhdGlvbiIsIkFwcGxpY2F0aW9uTG9jYWxTdGF0ZSIsIkFwcGxpY2F0aW9uUGFyYW1zIiwiQXBwbGljYXRpb25TdGF0ZVNjaGVtYSIsIkFzc2V0IiwiQXNzZXRIb2xkaW5nIiwiQXNzZXRQYXJhbXMiLCJCbG9ja1Jlc3BvbnNlIiwiQnVpbGRWZXJzaW9uIiwiQ2F0Y2hwb2ludEFib3J0UmVzcG9uc2UiLCJDYXRjaHBvaW50U3RhcnRSZXNwb25zZSIsIkNvbXBpbGVSZXNwb25zZSIsIkRpc2Fzc2VtYmxlUmVzcG9uc2UiLCJEcnlydW5SZXF1ZXN0IiwiRHJ5cnVuUmVzcG9uc2UiLCJEcnlydW5Tb3VyY2UiLCJEcnlydW5TdGF0ZSIsIkRyeXJ1blR4blJlc3VsdCIsIkVycm9yUmVzcG9uc2UiLCJFdmFsRGVsdGEiLCJFdmFsRGVsdGFLZXlWYWx1ZSIsIk5vZGVTdGF0dXNSZXNwb25zZSIsIlBlbmRpbmdUcmFuc2FjdGlvblJlc3BvbnNlIiwiUGVuZGluZ1RyYW5zYWN0aW9uc1Jlc3BvbnNlIiwiUG9zdFRyYW5zYWN0aW9uc1Jlc3BvbnNlIiwiUHJvb2ZSZXNwb25zZSIsIlN1cHBseVJlc3BvbnNlIiwiVGVhbEtleVZhbHVlIiwiVGVhbFZhbHVlIiwiVHJhbnNhY3Rpb25QYXJhbWV0ZXJzUmVzcG9uc2UiLCJWZXJzaW9uIiwiYXR0cmlidXRlX21hcCIsImFtb3VudFdpdGhvdXRQZW5kaW5nUmV3YXJkcyIsIm1pbkJhbGFuY2UiLCJwZW5kaW5nUmV3YXJkcyIsInJld2FyZHMiLCJ0b3RhbEFwcHNPcHRlZEluIiwidG90YWxBc3NldHNPcHRlZEluIiwidG90YWxDcmVhdGVkQXBwcyIsInRvdGFsQ3JlYXRlZEFzc2V0cyIsImFwcHNMb2NhbFN0YXRlIiwiYXBwc1RvdGFsRXh0cmFQYWdlcyIsImFwcHNUb3RhbFNjaGVtYSIsImFzc2V0cyIsImF1dGhBZGRyIiwiY3JlYXRlZEFwcHMiLCJjcmVhdGVkQXNzZXRzIiwicGFydGljaXBhdGlvbiIsInJld2FyZEJhc2UiLCJzaWdUeXBlIiwiYXBwTG9jYWxTdGF0ZSIsImNyZWF0ZWRBcHAiLCJhc3NldEhvbGRpbmciLCJjcmVhdGVkQXNzZXQiLCJzZWxlY3Rpb25QYXJ0aWNpcGF0aW9uS2V5Iiwidm90ZUZpcnN0VmFsaWQiLCJ2b3RlS2V5RGlsdXRpb24iLCJ2b3RlTGFzdFZhbGlkIiwidm90ZVBhcnRpY2lwYXRpb25LZXkiLCJzdGF0ZVByb29mS2V5IiwiZGVsdGEiLCJzY2hlbWEiLCJrZXlWYWx1ZSIsImFwcHJvdmFsUHJvZ3JhbSIsImNsZWFyU3RhdGVQcm9ncmFtIiwiY3JlYXRvciIsImV4dHJhUHJvZ3JhbVBhZ2VzIiwiZ2xvYmFsU3RhdGUiLCJnbG9iYWxTdGF0ZVNjaGVtYSIsImxvY2FsU3RhdGVTY2hlbWEiLCJudW1VaW50IiwibnVtQnl0ZVNsaWNlIiwiYXNzZXRJZCIsImlzRnJvemVuIiwiZGVjaW1hbHMiLCJjbGF3YmFjayIsImRlZmF1bHRGcm96ZW4iLCJmcmVlemUiLCJtYW5hZ2VyIiwibWV0YWRhdGFIYXNoIiwibmFtZUI2NCIsInJlc2VydmUiLCJ1bml0TmFtZSIsInVuaXROYW1lQjY0IiwidXJsQjY0IiwiY2VydCIsImJyYW5jaCIsImJ1aWxkTnVtYmVyIiwiY2hhbm5lbCIsImNvbW1pdEhhc2giLCJtYWpvciIsIm1pbm9yIiwiY2F0Y2h1cE1lc3NhZ2UiLCJyZXN1bHQiLCJzb3VyY2VtYXAiLCJhY2NvdW50cyIsImFwcHMiLCJsYXRlc3RUaW1lc3RhbXAiLCJwcm90b2NvbFZlcnNpb24iLCJzb3VyY2VzIiwiZmllbGROYW1lIiwidHhuSW5kZXgiLCJhcHBJbmRleCIsImxpbmUiLCJwYyIsInNjcmF0Y2giLCJkaXNhc3NlbWJseSIsImFwcENhbGxNZXNzYWdlcyIsImFwcENhbGxUcmFjZSIsImJ1ZGdldEFkZGVkIiwiYnVkZ2V0Q29uc3VtZWQiLCJjb3N0IiwiZ2xvYmFsRGVsdGEiLCJsb2NhbERlbHRhcyIsImxvZ2ljU2lnRGlzYXNzZW1ibHkiLCJsb2dpY1NpZ01lc3NhZ2VzIiwibG9naWNTaWdUcmFjZSIsImxvZ3MiLCJhY3Rpb24iLCJ1aW50IiwiY2F0Y2h1cFRpbWUiLCJsYXN0VmVyc2lvbiIsIm5leHRWZXJzaW9uIiwibmV4dFZlcnNpb25Sb3VuZCIsIm5leHRWZXJzaW9uU3VwcG9ydGVkIiwic3RvcHBlZEF0VW5zdXBwb3J0ZWRSb3VuZCIsInRpbWVTaW5jZUxhc3RSb3VuZCIsImNhdGNocG9pbnQiLCJjYXRjaHBvaW50QWNxdWlyZWRCbG9ja3MiLCJjYXRjaHBvaW50UHJvY2Vzc2VkQWNjb3VudHMiLCJjYXRjaHBvaW50VG90YWxBY2NvdW50cyIsImNhdGNocG9pbnRUb3RhbEJsb2NrcyIsImNhdGNocG9pbnRWZXJpZmllZEFjY291bnRzIiwibGFzdENhdGNocG9pbnQiLCJwb29sRXJyb3IiLCJhcHBsaWNhdGlvbkluZGV4IiwiYXNzZXRDbG9zaW5nQW1vdW50IiwiYXNzZXRJbmRleCIsImNsb3NlUmV3YXJkcyIsImNsb3NpbmdBbW91bnQiLCJjb25maXJtZWRSb3VuZCIsImdsb2JhbFN0YXRlRGVsdGEiLCJpbm5lclR4bnMiLCJsb2NhbFN0YXRlRGVsdGEiLCJyZWNlaXZlclJld2FyZHMiLCJzZW5kZXJSZXdhcmRzIiwidG9wVHJhbnNhY3Rpb25zIiwidG90YWxUcmFuc2FjdGlvbnMiLCJpZHgiLCJwcm9vZiIsInN0aWJoYXNoIiwidHJlZWRlcHRoIiwiaGFzaHR5cGUiLCJjdXJyZW50Um91bmQiLCJvbmxpbmVNb25leSIsInRvdGFsTW9uZXkiLCJjb25zZW5zdXNWZXJzaW9uIiwiZ2VuZXNpc0lkIiwibWluRmVlIiwiYnVpbGQiLCJnZW5lc2lzSGFzaEI2NCIsInR4bkJ5dGVzVG9Qb3N0IiwibGltaXQiLCJjdXJyZW5jeUdyZWF0ZXJUaGFuIiwiY3VycmVuY3lMZXNzVGhhbiIsIm5leHRUb2tlbiIsImluY2x1ZGVBbGwiLCJub3RlUHJlZml4IiwidHhUeXBlIiwibWluUm91bmQiLCJtYXhSb3VuZCIsImJlZm9yZVRpbWUiLCJhZnRlclRpbWUiLCJyZWtleVRvIiwiYWRkcmVzc1JvbGUiLCJleGNsdWRlQ2xvc2VUbyIsImFwcElEIiwic2VuZGVyIiwidW5pdCIsIm1ha2VIZWFsdGhDaGVjayIsImxvb2t1cEFzc2V0QmFsYW5jZXMiLCJsb29rdXBBc3NldFRyYW5zYWN0aW9ucyIsImxvb2t1cEFjY291bnRUcmFuc2FjdGlvbnMiLCJsb29rdXBCbG9jayIsImxvb2t1cFRyYW5zYWN0aW9uQnlJRCIsImxvb2t1cEFjY291bnRCeUlEIiwibG9va3VwQWNjb3VudEFzc2V0cyIsImxvb2t1cEFjY291bnRDcmVhdGVkQXNzZXRzIiwibG9va3VwQWNjb3VudEFwcExvY2FsU3RhdGVzIiwibG9va3VwQWNjb3VudENyZWF0ZWRBcHBsaWNhdGlvbnMiLCJsb29rdXBBc3NldEJ5SUQiLCJsb29rdXBBcHBsaWNhdGlvbnMiLCJsb29rdXBBcHBsaWNhdGlvbkxvZ3MiLCJzZWFyY2hBY2NvdW50cyIsInNlYXJjaEZvclRyYW5zYWN0aW9ucyIsInNlYXJjaEZvckFzc2V0cyIsInNlYXJjaEZvckFwcGxpY2F0aW9ucyIsIkRFRkFVTFQiLCJzZXRJbnREZWNvZGluZyIsInNldEludEVuY29kaW5nIiwiZ2V0SW50RW5jb2RpbmciLCJCVUlMRElORyIsIkJVSUxUIiwiU0lHTkVEIiwiU1VCTUlUVEVEIiwiQ09NTUlUVEVEIiwibWV0aG9kQ2FsbHMiLCJzaWduZWRUeG5zIiwidHhJRHMiLCJnZXRTdGF0dXMiLCJjb3VudCIsInNpZ25lciIsImZyb21fb2JqX2Zvcl9lbmNvZGluZyIsImdycCIsImFkZFRyYW5zYWN0aW9uIiwiTUFYX0dST1VQX1NJWkUiLCJncm91cCIsImFkZE1ldGhvZENhbGwiLCJtZXRob2RBcmdzIiwic3VnZ2VzdGVkUGFyYW1zIiwib25Db21wbGV0ZSIsImNsZWFyUHJvZ3JhbSIsIm51bUdsb2JhbEludHMiLCJudW1HbG9iYWxCeXRlU2xpY2VzIiwibnVtTG9jYWxJbnRzIiwibnVtTG9jYWxCeXRlU2xpY2VzIiwiZXh0cmFQYWdlcyIsImhxIiwiVXBkYXRlQXBwbGljYXRpb25PQyIsIlh3IiwibWFrZUFwcGxpY2F0aW9uQ2FsbFR4bkZyb21PYmplY3QiLCJhcHBBcmdzIiwiZm9yZWlnbkFwcHMiLCJmb3JlaWduQXNzZXRzIiwiTm9PcE9DIiwiYnVpbGRHcm91cCIsImFsbCIsImRlY29kZVNpZ25lZFRyYW5zYWN0aW9uIiwiZ2F0aGVyU2lnbmF0dXJlcyIsImRvIiwic3VibWl0IiwiZmluZEluZGV4IiwicmF3UmV0dXJuVmFsdWUiLCJ0eEluZm8iLCJyZXR1cm5WYWx1ZSIsImRlY29kZUVycm9yIiwibWV0aG9kUmVzdWx0cyIsInJEIiwiSE4iLCJjbGllbnQiLCJhcHBBY2NvdW50cyIsImFwcEZvcmVpZ25BcHBzIiwiZ2V0QXBwbGljYXRpb25BZGRyZXNzIiwiYXBwRm9yZWlnbkFzc2V0cyIsImFwcEFwcHJvdmFsUHJvZ3JhbSIsImFwcENsZWFyUHJvZ3JhbSIsImFwcExvY2FsSW50cyIsImFwcExvY2FsQnl0ZVNsaWNlcyIsImFwcEdsb2JhbEludHMiLCJhcHBHbG9iYWxCeXRlU2xpY2VzIiwidHJhY2UiLCJyZXF1aXJlZCIsIm9wdGlvbmFscyIsInRyYWNlcyIsImFwcENhbGxSZWplY3RlZCIsImxvZ2ljU2lnUmVqZWN0ZWQiLCJtYXhWYWx1ZVdpZHRoIiwicGFkRW5kIiwidG9wT2ZTdGFja0ZpcnN0IiwiYXBwVHJhY2UiLCJsc2lnVHJhY2UiLCJNQUxGT1JNRURfQUREUkVTU19FUlJPUl9NU0ciLCJDSEVDS1NVTV9BRERSRVNTX0VSUk9SX01TRyIsIklOVkFMSURfTVNJR19WRVJTSU9OX0VSUk9SX01TRyIsIklOVkFMSURfTVNJR19USFJFU0hPTERfRVJST1JfTVNHIiwiSU5WQUxJRF9NU0lHX1BLX0VSUk9SX01TRyIsIlVORVhQRUNURURfUEtfTEVOX0VSUk9SX01TRyIsImlzVmFsaWRBZGRyZXNzIiwiZnJvbU11bHRpc2lnUHJlSW1nIiwiZnJvbU11bHRpc2lnUHJlSW1nQWRkcnMiLCJQVUJMSUNfS0VZX0xFTkdUSCIsIkhBU0hfQllURVNfTEVOR1RIIiwiYXJyYXlFcXVhbCIsImNoZWNrc3VtIiwidmVyc2lvbiIsImFkZHJzIiwiRVJST1JfQ09OVEFJTlNfRU1QVFlfU1RSSU5HIiwiY29udGFpbnNFbXB0eSIsImZpcnN0RW1wdHlLZXkiLCJUeEdyb3VwIiwiY29tcHV0ZUdyb3VwSUQiLCJ0eEdyb3VwSGFzaGVzIiwidHhsaXN0IiwicmF3VHhJRCIsImNoZWNrQnl0ZUNvbnN0QmxvY2siLCJjaGVja0ludENvbnN0QmxvY2siLCJjaGVja1Byb2dyYW0iLCJjaGVja1B1c2hCeXRlT3AiLCJjaGVja1B1c2hJbnRPcCIsImxhbmdzcGVjRXZhbE1heFZlcnNpb24iLCJsYW5nc3BlY0xvZ2ljU2lnVmVyc2lvbiIsInBhcnNlVXZhcmludCIsInpfIiwiQVAiLCJPcGNvZGUiLCJDb3N0IiwiU2l6ZSIsIkJWIiwiTG9naWNTaWdBY2NvdW50IiwibG9naWNTaWdGcm9tQnl0ZSIsInRlYWxTaWduIiwidGVhbFNpZ25Gcm9tUHJvZ3JhbSIsImxvZ2ljIiwibXNpZyIsImFyZyIsIkYyIiwic2lnblByb2dyYW0iLCJwayIsInRociIsInN1YnNpZyIsInNpbmdsZVNpZ25NdWx0aXNpZyIsImFwcGVuZFRvTXVsdGlzaWciLCJzaWdrZXkiLCJpc0RlbGVnYXRlZCIsInNpZ25NdWx0aXNpZyIsImJ5dGVzRXF1YWwiLCJzZ25yIiwiZnJvbUJ5dGUiLCJNVUxUSVNJR19CQURfU0VOREVSX0VSUk9SX01TRyIsInNpZ25UcmFuc2FjdGlvbiIsInNpZ25CeXRlcyIsInZlcmlmeUJ5dGVzIiwiZW5jb2RlT2JqIiwiZGVjb2RlT2JqIiwiRVJST1JfTVVMVElTSUdfQkFEX1NFTkRFUiIsIkVSUk9SX0lOVkFMSURfTUlDUk9BTEdPUyIsIkFsZ29kdjIiLCJLbWQiLCJJbnREZWNvZGluZyIsIkluZGV4ZXIiLCJ3YWl0Rm9yQ29uZmlybWF0aW9uIiwiYnl0ZXNUb0JpZ0ludCIsImJpZ0ludFRvQnl0ZXMiLCJlbmNvZGVVaW50NjQiLCJkZWNvZGVVaW50NjQiLCJnZW5lcmF0ZUFjY291bnQiLCJtb2RlbHN2MiIsIm1uZW1vbmljVG9NYXN0ZXJEZXJpdmF0aW9uS2V5IiwiT0YiLCJtYXN0ZXJEZXJpdmF0aW9uS2V5VG9NbmVtb25pYyIsInZDIiwic2VjcmV0S2V5VG9NbmVtb25pYyIsIlFYIiwibW5lbW9uaWNUb1NlY3JldEtleSIsIkNoIiwic2VlZEZyb21NbmVtb25pYyIsIm1FIiwibW5lbW9uaWNGcm9tU2VlZCIsInczIiwibWljcm9hbGdvc1RvQWxnb3MiLCJhbGdvc1RvTWljcm9hbGdvcyIsIklOVkFMSURfTUlDUk9BTEdPU19FUlJPUl9NU0ciLCJzaWduTXVsdGlzaWdUcmFuc2FjdGlvbiIsIlBVIiwibWVyZ2VNdWx0aXNpZ1RyYW5zYWN0aW9ucyIsIko2IiwiYXBwZW5kU2lnbk11bHRpc2lnVHJhbnNhY3Rpb24iLCJQTyIsIm11bHRpc2lnQWRkcmVzcyIsInZIIiwiTG9naWNUZW1wbGF0ZXMiLCJEcnlydW5SZXN1bHQiLCJjcmVhdGVEcnlydW4iLCJPbkFwcGxpY2F0aW9uQ29tcGxldGUiLCJtYWtlQXBwbGljYXRpb25DbGVhclN0YXRlVHhuIiwibWFrZUFwcGxpY2F0aW9uQ2xlYXJTdGF0ZVR4bkZyb21PYmplY3QiLCJtYWtlQXBwbGljYXRpb25DbG9zZU91dFR4biIsIm1ha2VBcHBsaWNhdGlvbkNsb3NlT3V0VHhuRnJvbU9iamVjdCIsIm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4biIsIm1ha2VBcHBsaWNhdGlvbkNyZWF0ZVR4bkZyb21PYmplY3QiLCJtYWtlQXBwbGljYXRpb25EZWxldGVUeG4iLCJtYWtlQXBwbGljYXRpb25EZWxldGVUeG5Gcm9tT2JqZWN0IiwibWFrZUFwcGxpY2F0aW9uTm9PcFR4biIsIm1ha2VBcHBsaWNhdGlvbk5vT3BUeG5Gcm9tT2JqZWN0IiwibWFrZUFwcGxpY2F0aW9uT3B0SW5UeG4iLCJtYWtlQXBwbGljYXRpb25PcHRJblR4bkZyb21PYmplY3QiLCJtYWtlQXBwbGljYXRpb25VcGRhdGVUeG4iLCJtYWtlQXBwbGljYXRpb25VcGRhdGVUeG5Gcm9tT2JqZWN0IiwibWFrZUFzc2V0Q29uZmlnVHhuIiwibWFrZUFzc2V0Q29uZmlnVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyIsIm1ha2VBc3NldENvbmZpZ1R4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0IiwibWFrZUFzc2V0Q3JlYXRlVHhuIiwibWFrZUFzc2V0Q3JlYXRlVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyIsIm1ha2VBc3NldENyZWF0ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0IiwibWFrZUFzc2V0RGVzdHJveVR4biIsIm1ha2VBc3NldERlc3Ryb3lUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zIiwibWFrZUFzc2V0RGVzdHJveVR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0IiwibWFrZUFzc2V0RnJlZXplVHhuIiwibWFrZUFzc2V0RnJlZXplVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyIsIm1ha2VBc3NldEZyZWV6ZVR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0IiwibWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zIiwibWFrZUFzc2V0VHJhbnNmZXJUeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdCIsIm1ha2VLZXlSZWdpc3RyYXRpb25UeG4iLCJtYWtlS2V5UmVnaXN0cmF0aW9uVHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyIsIm1ha2VLZXlSZWdpc3RyYXRpb25UeG5XaXRoU3VnZ2VzdGVkUGFyYW1zRnJvbU9iamVjdCIsIm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtcyIsIm1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QiLCJkZWNvZGVVbnNpZ25lZFRyYW5zYWN0aW9uIiwiZW5jb2RlVW5zaWduZWRUcmFuc2FjdGlvbiIsImlzVHJhbnNhY3Rpb25XaXRoU2lnbmVyIiwibWFrZUJhc2ljQWNjb3VudFRyYW5zYWN0aW9uU2lnbmVyIiwieDciLCJtYWtlTG9naWNTaWdBY2NvdW50VHJhbnNhY3Rpb25TaWduZXIiLCJpMSIsIm1ha2VNdWx0aVNpZ0FjY291bnRUcmFuc2FjdGlvblNpZ25lciIsIlZqIiwiQXRvbWljVHJhbnNhY3Rpb25Db21wb3NlciIsIkF0b21pY1RyYW5zYWN0aW9uQ29tcG9zZXJTdGF0dXMiLCJUcmFuc2FjdGlvblR5cGUiLCJBQklBZGRyZXNzVHlwZSIsIkFCSUFycmF5RHluYW1pY1R5cGUiLCJBQklBcnJheVN0YXRpY1R5cGUiLCJBQklCb29sVHlwZSIsIkFCSUJ5dGVUeXBlIiwiQUJJQ29udHJhY3QiLCJBQklJbnRlcmZhY2UiLCJBQklNZXRob2QiLCJBQklSZWZlcmVuY2VUeXBlIiwiQUJJU3RyaW5nVHlwZSIsIkFCSVRyYW5zYWN0aW9uVHlwZSIsIkFCSVR1cGxlVHlwZSIsIkFCSVR5cGUiLCJBQklVZml4ZWRUeXBlIiwiQUJJVWludFR5cGUiLCJBRERSX0JZVEVfU0laRSIsIkxFTkdUSF9FTkNPREVfQllURV9TSVpFIiwiTUFYX0xFTiIsIlNJTkdMRV9CT09MX1NJWkUiLCJTSU5HTEVfQllURV9TSVpFIiwiYWJpQ2hlY2tUcmFuc2FjdGlvblR5cGUiLCJhYmlUeXBlSXNSZWZlcmVuY2UiLCJhYmlUeXBlSXNUcmFuc2FjdGlvbiIsInJlS2V5VG8iLCJ2b3RlS2V5Iiwic2VsZWN0aW9uS2V5Iiwidm90ZUZpcnN0Iiwidm90ZUxhc3QiLCJub25QYXJ0aWNpcGF0aW9uIiwiYXNzZXRUb3RhbCIsImFzc2V0RGVjaW1hbHMiLCJhc3NldERlZmF1bHRGcm96ZW4iLCJhc3NldFVuaXROYW1lIiwiYXNzZXROYW1lIiwiYXNzZXRVUkwiLCJhc3NldE1ldGFkYXRhSGFzaCIsImFzc2V0TWFuYWdlciIsImFzc2V0UmVzZXJ2ZSIsImFzc2V0RnJlZXplIiwiYXNzZXRDbGF3YmFjayIsInN0cmljdEVtcHR5QWRkcmVzc0NoZWNraW5nIiwiZnJlZXplQWNjb3VudCIsImZyZWV6ZVN0YXRlIiwiZnJlZXplVGFyZ2V0IiwiYXNzZXRSZXZvY2F0aW9uVGFyZ2V0IiwicmV2b2NhdGlvblRhcmdldCIsImFwcE9uQ29tcGxldGUiLCJEZWxldGVBcHBsaWNhdGlvbk9DIiwiT3B0SW5PQyIsIkNsb3NlT3V0T0MiLCJDbGVhclN0YXRlT0MiLCJTRUVEX0JUWUVTX0xFTkdUSCIsImtleVBhaXJGcm9tU2VlZCIsImFkZFJla2V5IiwicGFydGlhbFNpZ25UeG4iLCJyYXdTaWciLCJteVBrIiwic25kIiwicmF3U2lnblR4biIsIlNFQ1JFVF9LRVlfTEVOR1RIIiwiaVUiLCJyZW1vdmVVbmRlZmluZWRQcm9wZXJ0aWVzIiwiZXN0aW1hdGVTaXplIiwiYW10IiwiZnYiLCJsdiIsImdlbiIsImdoIiwibHgiLCJjbG9zZSIsInJla2V5IiwicmN2Iiwidm90ZWtleSIsInNlbGtleSIsInNwcmZrZXkiLCJ2b3RlZnN0Iiwidm90ZWxzdCIsInZvdGVrZCIsIm5vbnBhcnQiLCJjYWlkIiwiYXBhciIsImRmIiwiZGMiLCJhbiIsInVuIiwiYXUiLCJhbSIsImFhbXQiLCJhcmN2IiwieGFpZCIsImFjbG9zZSIsImFzbmQiLCJmYWlkIiwiZmFkZCIsImFwaWQiLCJhcGFuIiwiYXBscyIsIm51aSIsIm5icyIsImFwZ3MiLCJhcGZhIiwiYXBhcyIsImFwZXAiLCJhcGFwIiwiYXBzdSIsImFwYWEiLCJhcGF0IiwidjgiLCJieXRlc1RvU2lnbiIsIl9nZXREaWN0Rm9yRGlzcGxheSIsInByZXR0eVByaW50IiwiU0FGRSIsIk1JWEVEIiwiQklHSU5UIiwiaXNOb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiZ2xvYmFsVGhpcyIsIl9fd2VicGFja19leHBvcnRzX18iLCJiNjQiLCJsZW5zIiwiZ2V0TGVucyIsInZhbGlkTGVuIiwicGxhY2VIb2xkZXJzTGVuIiwidG1wIiwiYXJyIiwiQXJyIiwiX2J5dGVMZW5ndGgiLCJjdXJCeXRlIiwibGVuIiwicmV2TG9va3VwIiwidWludDgiLCJwYXJ0cyIsIm1heENodW5rTGVuZ3RoIiwibGVuMiIsImVuY29kZUNodW5rIiwibG9va3VwIiwibnVtIiwib3V0cHV0IiwiYmFzZTY0IiwiaWVlZTc1NCIsImN1c3RvbUluc3BlY3RTeW1ib2wiLCJLX01BWF9MRU5HVEgiLCJjcmVhdGVCdWZmZXIiLCJidWYiLCJlbmNvZGluZ09yT2Zmc2V0Iiwic3RyaW5nIiwiZW5jb2RpbmciLCJhY3R1YWwiLCJmcm9tU3RyaW5nIiwiYXJyYXlWaWV3IiwiaXNJbnN0YW5jZSIsImZyb21BcnJheUJ1ZmZlciIsImZyb21BcnJheUxpa2UiLCJmcm9tQXJyYXlWaWV3IiwiY2hlY2tlZCIsInVuZGVmaW5lZCIsIm51bWJlcklzTmFOIiwiZnJvbU9iamVjdCIsImFzc2VydFNpemUiLCJtdXN0TWF0Y2giLCJsb3dlcmVkQ2FzZSIsInV0ZjhUb0J5dGVzIiwiYmFzZTY0VG9CeXRlcyIsInNsb3dUb1N0cmluZyIsImhleFNsaWNlIiwidXRmOFNsaWNlIiwiYXNjaWlTbGljZSIsImxhdGluMVNsaWNlIiwiYmFzZTY0U2xpY2UiLCJ1dGYxNmxlU2xpY2UiLCJzd2FwIiwiYmlkaXJlY3Rpb25hbEluZGV4T2YiLCJ2YWwiLCJkaXIiLCJhcnJheUluZGV4T2YiLCJpbmRleFNpemUiLCJhcnJMZW5ndGgiLCJ2YWxMZW5ndGgiLCJmb3VuZEluZGV4IiwiZm91bmQiLCJoZXhXcml0ZSIsInJlbWFpbmluZyIsInN0ckxlbiIsInBhcnNlZCIsInV0ZjhXcml0ZSIsImJsaXRCdWZmZXIiLCJhc2NpaVdyaXRlIiwic3RyIiwiYnl0ZUFycmF5IiwiYXNjaWlUb0J5dGVzIiwiYmFzZTY0V3JpdGUiLCJ1Y3MyV3JpdGUiLCJ1bml0cyIsImhpIiwibG8iLCJ1dGYxNmxlVG9CeXRlcyIsInJlcyIsImZpcnN0Qnl0ZSIsImNvZGVQb2ludCIsImJ5dGVzUGVyU2VxdWVuY2UiLCJzZWNvbmRCeXRlIiwidGhpcmRCeXRlIiwiZm91cnRoQnl0ZSIsInRlbXBDb2RlUG9pbnQiLCJjb2RlUG9pbnRzIiwiTUFYX0FSR1VNRU5UU19MRU5HVEgiLCJkZWNvZGVDb2RlUG9pbnRzQXJyYXkiLCJwcm90byIsInR5cGVkQXJyYXlTdXBwb3J0IiwibGlzdCIsInRhcmdldCIsInRoaXNTdGFydCIsInRoaXNFbmQiLCJ0aGlzQ29weSIsInRhcmdldENvcHkiLCJyZXQiLCJvdXQiLCJoZXhTbGljZUxvb2t1cFRhYmxlIiwiY2hlY2tPZmZzZXQiLCJleHQiLCJjaGVja0ludCIsIndydEJpZ1VJbnQ2NExFIiwiY2hlY2tJbnRCSSIsIndydEJpZ1VJbnQ2NEJFIiwiY2hlY2tJRUVFNzU0Iiwid3JpdGVGbG9hdCIsImxpdHRsZUVuZGlhbiIsIm5vQXNzZXJ0Iiwid3JpdGVEb3VibGUiLCJuZXdCdWYiLCJtdWwiLCJkZWZpbmVCaWdJbnRNZXRob2QiLCJ2YWxpZGF0ZU51bWJlciIsImxhc3QiLCJib3VuZHNFcnJvciIsInN1YiIsInRhcmdldFN0YXJ0IiwiZXJyb3JzIiwic3ltIiwiZ2V0TWVzc2FnZSIsIkJhc2UiLCJhZGROdW1lcmljYWxTZXBhcmF0b3IiLCJyYW5nZSIsImNoZWNrQm91bmRzIiwiaW5wdXQiLCJtc2ciLCJyZWNlaXZlZCIsIklOVkFMSURfQkFTRTY0X1JFIiwiSW5maW5pdHkiLCJsZWFkU3Vycm9nYXRlIiwiYmFzZTY0Y2xlYW4iLCJzcmMiLCJkc3QiLCJhbHBoYWJldCIsInRhYmxlIiwiaTE2IiwiQnVmZmVyQmlnSW50Tm90RGVmaW5lZCIsImdsb2JhbCIsIl9fc2VsZl9fIiwiZmV0Y2giLCJET01FeGNlcHRpb24iLCJzdXBwb3J0IiwiQmxvYiIsInZpZXdDbGFzc2VzIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJub3JtYWxpemVOYW1lIiwibm9ybWFsaXplVmFsdWUiLCJpdGVyYXRvckZvciIsIml0ZW1zIiwiSGVhZGVycyIsImNvbnN1bWVkIiwiYm9keVVzZWQiLCJyZWplY3QiLCJmaWxlUmVhZGVyUmVhZHkiLCJyZWFkZXIiLCJvbmxvYWQiLCJvbmVycm9yIiwicmVhZEJsb2JBc0FycmF5QnVmZmVyIiwiRmlsZVJlYWRlciIsInByb21pc2UiLCJyZWFkQXNBcnJheUJ1ZmZlciIsImJ1ZmZlckNsb25lIiwiQm9keSIsIl9pbml0Qm9keSIsIl9ib2R5SW5pdCIsIl9ib2R5VGV4dCIsImlzUHJvdG90eXBlT2YiLCJfYm9keUJsb2IiLCJfYm9keUZvcm1EYXRhIiwiVVJMU2VhcmNoUGFyYW1zIiwiX2JvZHlBcnJheUJ1ZmZlciIsInJlamVjdGVkIiwicmVhZEFzVGV4dCIsImNoYXJzIiwicmVhZEFycmF5QnVmZmVyQXNUZXh0IiwiZm9ybURhdGEiLCJvbGRWYWx1ZSIsInRoaXNBcmciLCJ2YWx1ZXMiLCJlbnRyaWVzIiwidXBjYXNlZCIsImNyZWRlbnRpYWxzIiwibW9kZSIsInNpZ25hbCIsInJlZmVycmVyIiwiYm9keUluaXQiLCJyZWRpcmVjdFN0YXR1c2VzIiwiZXJyIiwiaW5pdCIsImFib3J0ZWQiLCJhYm9ydFhociIsInJhd0hlYWRlcnMiLCJyZXNwb25zZVVSTCIsIm9udGltZW91dCIsIm9uYWJvcnQiLCJwb2x5ZmlsbCIsInBvbnlmaWxsIiwiY3R4IiwiaXNMRSIsIm1MZW4iLCJuQnl0ZXMiLCJlTGVuIiwiZU1heCIsImVCaWFzIiwibkJpdHMiLCJydCIsIk1pbWUiLCJfdHlwZXMiLCJfZXh0ZW5zaW9ucyIsImRlZmluZSIsImdldFR5cGUiLCJnZXRFeHRlbnNpb24iLCJ0eXBlTWFwIiwiZm9yY2UiLCJleHRlbnNpb25zIiwiaGFzUGF0aCIsIiQxIiwid2VicGFja0FzeW5jQ29udGV4dCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJpZHMiLCJOMSIsIk4yIiwiTjMiLCJONCIsIk41IiwiTjYiLCJONyIsIk44IiwiTjkiLCJvbGRPZmZzZXQiLCJjb3VudGVyIiwiZW5jb2RpbmdMZW5ndGgiLCJlbmNvZGVUbyIsImludCIsImNvZXJjZSIsInNpemVPZmZzZXQiLCJkaWdlc3RPZmZzZXQiLCJEaWdlc3QiLCJFbmNvZGVyIiwiYmFzZUVuY29kZSIsIkRlY29kZXIiLCJiYXNlRGVjb2RlIiwiY29kZVBvaW50QXQiLCJwcmVmaXhDb2RlUG9pbnQiLCJvciIsIkNvbXBvc2VkRGVjb2RlciIsIkNvZGVjIiwiYmFzZVgiLCJCQVNFX01BUCIsInhjIiwiQkFTRSIsIkxFQURFUiIsIkZBQ1RPUiIsImlGQUNUT1IiLCJkZWNvZGVVbnNhZmUiLCJwc3oiLCJ6ZXJvZXMiLCJiMjU2IiwiY2FycnkiLCJpdDMiLCJpdDQiLCJ2Y2giLCJwYmVnaW4iLCJwZW5kIiwiYjU4IiwiaXQxIiwiaXQyIiwicmZjNDY0OCIsImJpdHNQZXJDaGFyIiwibWFzayIsImNvZGVzIiwid3JpdHRlbiIsImJhc2U1OGJ0YyIsIm11bHRpaGFzaCIsImFzQ0lEIiwiX2Jhc2VDYWNoZSIsImRlZmluZVByb3BlcnRpZXMiLCJyZWFkb25seSIsInRvVjAiLCJEQUdfUEJfQ09ERSIsIlNIQV8yNTZfQ09ERSIsImNyZWF0ZVYwIiwidG9WMSIsImNyZWF0ZVYxIiwib3RoZXIiLCJhYSIsImJiIiwiaWkiLCJ0b1N0cmluZ1YwIiwidG9TdHJpbmdWMSIsImRlcHJlY2F0ZSIsIklTX0NJRF9ERVBSRUNBVElPTiIsImNpZFN5bWJvbCIsInRvQmFzZUVuY29kZWRTdHJpbmciLCJjb2RlYyIsIm11bHRpYmFzZU5hbWUiLCJlbmNvZGVDSUQiLCJjaWQiLCJyZW1haW5kZXIiLCJkZWNvZGVGaXJzdCIsInNwZWNzIiwiaW5zcGVjdEJ5dGVzIiwicHJlZml4U2l6ZSIsIm11bHRpaGFzaFNpemUiLCJtdWx0aWhhc2hCeXRlcyIsImRpZ2VzdEJ5dGVzIiwiZGlnZXN0U2l6ZSIsIm11bHRpaGFzaENvZGUiLCJpbml0aWFsQnl0ZXMiLCJwYXJzZUNJRHRvQnl0ZXMiLCJjYWNoZSIsImNvZGVPZmZzZXQiLCJoYXNoT2Zmc2V0IiwiSGFzaGVyIiwic2hhIiwic3VidGxlIiwiQVJDM19VUkxfU1VGRklYIiwiTkZUIiwiYXNzZXRJbmZvIiwiaW1hZ2VVcmwiLCJpbWFnZVVybEFsdGVybmF0ZSIsIm1ldGFkYXRhIiwiaXNMb2FkZWQiLCJhbGdvSW5kZXhlciIsInVzZVBlcmEiLCJsb2FkV2l0aFBlcmEiLCJsb2FkQVJDNjkiLCJsb2FkQVJDMTkiLCJsb2FkQVJDMyIsInBlcmFQYXJzZXJJbmZvIiwiY29sbGVjdGlibGUiLCJwcmltYXJ5X2ltYWdlIiwidHJhaXRzIiwicHJvcGVydGllcyIsInRyYWl0IiwiZGlzcGxheV9uYW1lIiwiZGlzcGxheV92YWx1ZSIsInVybENodW5rcyIsImxvYWRJcGZzTWV0YWRhdGEiLCJhc3NldFVybCIsInJlc2VydmVBZGRyZXNzIiwiY2h1bmtzIiwiY2lkQ29tcG9uZW50cyIsImNpZFZlcnNpb24iLCJjaWRDb2RlYyIsImFzYUZpZWxkIiwiY2lkSGFzaCIsImNpZENvZGVjQ29kZSIsIm1oZGlnZXN0IiwiZ2V0Q0lEIiwiYjY0RGVjb2RlVW5pY29kZSIsImF0b2IiLCJub3RlQmFzZTY0Iiwibm90ZVN0cmluZyIsIm5vdGVKc29uIiwic3RhbmRhcmQiLCJpcGZzQ2lkIiwiY29udGVudFR5cGUiLCJpbWFnZUNodW5rcyIsImhhbmRsZUltYWdlRXJyb3IiLCJpbWdFbGVtZW50IiwiZXZlbnQiLCJORlRDb2xsZWN0aW9uIiwiY29sbGVjdGlvbnMiLCJuZnRzIiwiY29sbGVjdGlvbiIsImNyZWF0b3JBZGRyZXNzIiwiYWRkcmVzc2VzIiwiTkZUSG9sZGVyQ29sbGVjdGlvbiIsIndhbGxldEFkZHJlc3MiLCJuZnRDb2xsZWN0aW9uIiwibG9hZCIsImNyZWF0b3JzQXNzZXRzIiwibmZ0IiwiZGVsZXRlZCIsImFsZ29kVXJsIiwiYWxnb0luZGV4ZXJVcmwiLCJhbGdvSW5kZXhlckxpbWl0IiwicGVyYUFwaVVybCIsInByaW1hcnlJcGZzR2F0ZXdheVVybCIsInNlY29uZGFyeUlwZnNHYXRld2F5VXJsIiwiZGlzcGxheU5hbWUiLCJsZWFmUHJvdG90eXBlcyIsImdldFByb3RvIiwiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJnZXR0ZXIiLCJucyIsImRlZiIsImN1cnJlbnQiLCJkZWZpbml0aW9uIiwiY2h1bmtJZCIsInByb21pc2VzIiwic2NyaXB0IiwibmVlZEF0dGFjaCIsInNjcmlwdHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY3JlYXRlRWxlbWVudCIsIm5jIiwic2V0QXR0cmlidXRlIiwib25TY3JpcHRDb21wbGV0ZSIsImRvbmVGbnMiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIm5tZCIsInBhdGhzIiwiY2hpbGRyZW4iLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsImluc3RhbGxlZENodW5rcyIsImluc3RhbGxlZENodW5rRGF0YSIsImVycm9yVHlwZSIsInJlYWxTcmMiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsInBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJwYWdlcyIsImZpbGUiLCJjbGFzc05hbWUiLCJjdXJyZW50UGFnZU5hbWUiLCJjdXJyZW50UGFnZSIsImFsZ29kQ2xpZW50Iiwid2FsbGV0Q29ubmVjdCIsImNvbm5lY3RlZENhbGxiYWNrIiwiZGlzY29ubmVjdGVkQ2FsbGJhY2siLCJidG5DbGFzcyIsInVpIiwid2FsbGV0Iiwid2FsbGV0VHlwZSIsIm5mZCIsImxvYWRTdGF0ZSIsImxvYWROZmQiLCJ1cGRhdGVVSSIsInRleHRDb250ZW50IiwiZGlzcGxheUNvbm5lY3RlZFVJIiwiZGlzcGxheUNvbm5lY3RVSSIsImlubmVySFRNTCIsInF1ZXJ5U2VsZWN0b3IiLCJjb25uZWN0TXlBbGdvIiwiY29ubmVjdFBlcmEiLCJkaXNwbGF5QWRkcmVzcyIsImRpc2Nvbm5lY3QiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiTXlBbGdvQ29ubmVjdCIsIlBlcmFXYWxsZXRDb25uZWN0IiwicmVjb25uZWN0U2Vzc2lvbiIsInNhdmVTdGF0ZSIsInNldEl0ZW0iLCJjbGVhclN0YXRlIiwicmVtb3ZlSXRlbSIsImNhQWxnbyIsImFjY291bnRzU2hhcmVkQnlVc2VyIiwiY29ubmVjdCIsInNob3VsZFNlbGVjdE9uZUFjY291bnQiLCJvcGVuTWFuYWdlciIsImNvbm5lY3RvciIsImtpbGxTZXNzaW9uIiwiYWxlcnQiLCJzaWduZWRUcmFuc2FjdGlvbnMiLCJ0cmFuc2FjdGlvbnNUb1NpZ24iLCJ0eCIsInNpZ25lcnMiLCJsb2FkUmVxdWVzdGVkUGFnZSIsImhvbGRpbmdzIiwibG9hZFBhZ2UiLCJvbnBvcHN0YXRlIiwidGVzdG5ldEFsZXJ0IiwicHJlcGVuZCIsImVuYWJsZU5hdmlnYXRpb25MaW5rcyIsImVsZW1lbnQiLCJkYXRhc2V0IiwicGFnZUxpbmsiLCJtZW51Q2xpY2tlZCIsInF1ZXJ5U3RyaW5nIiwidXJsUGFyYW1zIiwicGFnZVBhcmFtcyIsInBhZ2VOYW1lIiwibWFpbkNvbnRhaW5lckRpdiIsImdldEVsZW1lbnRCeUlkIiwiY29udGVudERpdiIsImxvYWRpbmdQZXJjZW50U3BhbiIsInBlcmNlbnRDYWxsYmFjayIsImNvbGxlY3Rpb25JbmZvIiwiY29sbGVjdGlvbk5hbWUiLCJ0cnVuY2F0ZWRBZGRyZXNzIiwid2FsbGV0QWRkcmVzc0EiLCJkaXNjb25uZWN0V2FsbGV0IiwiaW1nVVJMIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiYWxhbmNlUmVzdWx0IiwidG9rZW4iLCJsb2FkVG9rZW5CYWxhbmNlIiwiZGlzcGxheVdhbGxldEluZm8iLCJwYWdlSW5mbyIsInBhZ2VDbGFzcyIsInBhcmFtc1N0cmluZyIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJuYXYiLCJmb290ZXIiLCJoaWRkZW4iLCJjdXJyZW50VGFyZ2V0IiwicHJldmVudERlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9