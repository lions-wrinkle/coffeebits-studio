"use strict";(self.webpackChunkstudio=self.webpackChunkstudio||[]).push([[271,998,298],{6998:(a,t,e)=>{e.r(t),e.d(t,{BasePage:()=>s});class s{constructor(a,t,e,s){this.walletConnect=a,this.algodClient=e,this.algoIndexer=s,this.holdings=t}}},1271:(a,t,e)=>{e.r(t),e.d(t,{Home:()=>n});var s=e(6998),i=e(5298);class n extends s.BasePage{constructor(){super(...arguments),this.ui=document.createElement("div"),this.ui.innerHTML='\n        \x3c!--<h1>Welcome to the Studio</h1>--\x3e\n        <div class="text-center">\n        <img src="assets/logo-studio.png" width="160" alt="The Studio" class="mb-4">\n        <p id="info-message"></p>\n        </div>\n        <div class="springboard d-flex flex-column flex-md-row w-100">\n\n            <div class="flex-fill springboard-item springboard-main-item mb-3 me-md-2">\n                <a href="?grinder" class="d-block" style="background-image: url(\'assets/springbord-grinder.png\'); background-color: #d39e27;" data-page-link="grinder">\n                    <h3>Grinder</h3>\n                    <p>Use Caffeine Cards to evolve your Bathers</p>\n                </a>\n            </div>\n\n            <div class="flex-fill d-flex flex-column">\n                <div class="flex-fill springboard-item mb-3 ms-md-2">\n                    <a href="?cards" class="d-block"\n                        style="background-image: url(\'assets/springboard-cards.png\'); background-color: #bb5f00;" data-page-link="cards">\n                        <h3>Caffeine<br>Cards</h3>\n                        <p>Browse all cards</p>\n                    </a>\n                </div>\n                <div class="flex-fill springboard-item mb-3 ms-md-2">\n                    <a href="?good-morning" class="d-block"\n                        style="background-image: url(\'assets/springboard-gm.png\'); background-color: #12c1b1;" data-page-link="good-morning">\n                        <h3>Good Morning!</h3>\n                        <p>Generate GM GIFs featuring your Bathers</p>\n                    </a>\n                </div>\n\n            </div>\n        ',this.loadPacks()}async loadPacks(){const a=await(0,i.loadPacks)(this.holdings);a&&a.claimablePacks.length>0&&(this.ui.querySelector("#info-message").innerHTML=`<a href="?packs" data-page-link="packs">You have ${a.claimablePacks.length} Caffeine Cards to claim!</a>`,window.enableNavigationLinks())}}},5298:(a,t,e)=>{e.r(t),e.d(t,{Packs:()=>o,loadPacks:()=>c});var s=e(6998),i=e(7304),n=(e(4050),e(4393));async function c(a){let t=await fetch("https://api.atomixwap.xyz/caffeine-card-pack/get-all");if(200===t.status){let e=await t.json();const s=a.bathers.nfts.map((a=>a.assetId));let i=[];for(const a of e.packs)s.includes(a[0])&&i.push(a);return{claimablePacks:i,suggestedParams:e.suggestedParams,escrowAddress:e.escrowAddress}}throw new Error(`Can't load packs. Error ${t.status}`)}class o extends s.BasePage{constructor(){super(...arguments),this.ui=document.createElement("div"),this.ui.innerHTML='\n    <h1>Caffeine Cards Packs</h1>\n    <p id="packs-status" class="dark-text text-center">Loading packs...</p>\n    ',this.claimablePacks,this.suggestedParams,this.escrowAddress,this.fetchPacks()}async fetchPacks(){const a=this.ui.querySelector("#packs-status");try{const t=await c(this.holdings);if(this.claimablePacks=t.claimablePacks,this.suggestedParams=t.suggestedParams,this.escrowAddress=t.escrowAddress,this.claimablePacks.length>0){let t="";this.claimablePacks.length>1&&(t="s"),a.textContent=`${this.claimablePacks.length} pack${t} to claim!`}else a.innerHTML='<img src="assets/pack0-0.png" style="width: 240px; opacity: 0.2;" class="mb-3"><br>\n        No pack to open.<br>\n        Make sure Bathers are unlisted to see your packs.<br><br>\n        A Caffeine Card is given for every Bather bought in the <a href="https://instantshuffle.com/shuffle/Y1ybuqKKZU6O4Kl2hzD5" target="_blank">Instant Shuffle.</a>\n        ';const e=document.createElement("div");e.className="row row-cols-2 row-cols-md-3 row-cols-lg-4 gy-4 mb-5 justify-content-center",this.ui.append(e);for(const a of this.claimablePacks){const t=document.createElement("div");t.className="col text-center ps-3 pe-3",e.append(t);const s=document.createElement("canvas");s.className="w-100 mb-2";const i=new r(s,a[1],this.algoIndexer);t.append(s);const n=document.createElement("button");n.textContent="Open",n.dataset.batherId=a[0],n.dataset.caffeineCardId=a[1],n.addEventListener("click",this.openPack.bind(this,i),!1),t.append(n)}}catch(t){console.error(t),a.textContent=t.message}}async openPack(a,t){a.animate()}}class r{constructor(a,t,e){this.caffeineCardId=t,this.algoIndexer=e,this.width=660,this.height=960,this.imageWidth=960,this.numAnimationImage=4,this.canvas=a,this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.context.imageSmoothingEnabled=!1,this.context.translate(-(this.imageWidth-this.width)/2,0),this.cardImage,this.cardMask,this.animationImages,this.loadAllImage()}static loadImage(a){return new Promise(((t,e)=>{const s=new Image;s.onload=()=>{t(s)},s.onerror=a=>{e(a)},s.src=a}))}async loadAllImage(){this.animationImages=[];const a=this.caffeineCardId%4,t=await r.loadImage(`assets/pack${a}-0.png`);this.animationImages.push(t),this.drawPack(),this.cardMask=await r.loadImage("assets/card-mask.png");const e=await this.algoIndexer.lookupAssetByID(this.caffeineCardId).do(),s=new i.Sm(this.caffeineCardId,e.asset);await s.load(this.algoIndexer);try{this.cardImage=await r.loadImage(s.imageUrl)}catch(a){try{this.cardImage=await r.loadImage(s.imageUrlAlternate)}catch(a){this.cardImage=await r.loadImage("assets/empty-card.png")}}for(let t=1;t<=this.numAnimationImage;t++){const e=await r.loadImage(`assets/pack${a}-${t}.png`);this.animationImages.push(e)}}async drawPack(){this.context.drawImage(this.animationImages[0],0,0,this.imageWidth,this.height)}static easeInOutQuad(a){return a<.5?2*a*a:1-Math.pow(-2*a+2,2)/2}async animate(){let a=.15,t=1;const e=setInterval((()=>{if(this.context.clearRect(0,0,this.imageWidth,this.height),this.context.drawImage(this.cardMask,0,0,this.imageWidth,this.height),this.context.globalCompositeOperation="source-in",this.context.drawImage(this.cardImage,0,0,this.imageWidth,this.height),this.context.globalCompositeOperation="source-over",this.context.drawImage(this.animationImages[t],0,0,this.imageWidth,this.height),t===this.numAnimationImage){clearInterval(e),n.sparkles(this.canvas),a=.05;const t=.8;let s=0;const i=setInterval((()=>{const e=r.easeInOutQuad(s/t)*this.height;this.context.clearRect(0,0,this.imageWidth,this.height),this.context.drawImage(this.cardMask,0,0,this.imageWidth,this.height),this.context.globalCompositeOperation="source-in",this.context.drawImage(this.cardImage,0,0,this.imageWidth,this.height),this.context.globalCompositeOperation="source-over",this.context.drawImage(this.animationImages[this.numAnimationImage],0,e,this.imageWidth,this.height),s+=a,s>=t&&clearInterval(i)}),1e3*a)}t++}),1e3*a)}}}}]);