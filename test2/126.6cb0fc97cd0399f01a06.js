"use strict";(self.webpackChunkstudio=self.webpackChunkstudio||[]).push([[126],{4126:(e,t,n)=>{n.r(t),n.d(t,{LongBoi:()=>r});var i=n(6998),o=n(6810),s=n(2871),a=n(4714);class r extends i.BasePage{constructor(){super(...arguments),this.ui=document.createElement("div"),this.ui.innerHTML='\n        <h1 id="longbois_title">LongBois</h1>\n        <p class="dark-text">Generate LongBois Bathers</p>\n\n        <div class="d-sm-flex flew-row" style="background-color: var(--background-dark);">\n\n            <div class="d-flex flex-column p-3 text-center justify-content-between">\n\n                <div>\n                    <img src="assets/default.png" class="mb-2 ms-auto me-auto" id="club-img" style="width: 200px; height: auto">\n\n                    <div class="dropdown mb-3" id="bath-club-dropdown">\n                        <button class="dropdown-toggle button-alt" type="button" data-bs-toggle="dropdown"\n                            aria-expanded="false">\n                            Choose Bather\n                        </button>\n\n                    </div>\n                    <input type="range" class="form-range" min="1" max="30" step="1" id="neck_size" value="10"><br>\n                    <input type="checkbox" id="checkbox_gif"> <label for="checkbox_gif">GIF</label> \n                    <input type="checkbox" id="checkbox_gm"> <label for="checkbox_gm">GM</label>\n                    \n\n\n                </div>\n                \n                <button id="button-download" disabled>Download gif</button>\n\n            </div>\n\n            <div class="d-flex flex-column flex-fill p-3 text-center">\n\n                <img src="assets/default.png" class="w-100 m-auto img-fluid" style="max-width: 384px;" id="merged-img">\n\n            </div>\n\n        </div>',this.bathersCollection,this.selectedBather,this.load()}async load(){await this.loadBathers(),this.ui.querySelector("#button-download").addEventListener("click",this.downloadGif.bind(this),!1),this.ui.querySelector("#checkbox_gif").addEventListener("change",this.generateLongBoi.bind(this),!1),this.ui.querySelector("#checkbox_gm").addEventListener("change",this.generateLongBoi.bind(this),!1),this.ui.querySelector("#neck_size").addEventListener("change",this.generateLongBoi.bind(this),!1)}async loadBathers(){this.bathersCollection=this.holdings.bathers;const e=this.ui.querySelector("#bath-club-dropdown");let t=e.querySelector(".dropdown-menu");t&&t.remove(),t=new s.Z(this.bathersCollection.nfts,this.didSelectBather.bind(this)),e.append(t.ui)}didSelectBather(e){const t=e.currentTarget.dataset.index;if(!t)return;const n=this.bathersCollection.nfts[t];this.selectedBather=n,this.ui.querySelector("#club-img").src=n.imageUrl,this.generateLongBoi(),e.preventDefault()}async generateLongBoi(){const e=parseInt(this.ui.querySelector("#neck_size").value);if(this.ui.querySelector("#longbois_title").textContent=`L${"o".repeat(e)}ngbois`,this.selectedBather){const t=this.ui.querySelector("#button-download");t.disabled=!0;const n=this.ui.querySelector("#merged-img");n.src="assets/default.png";const i=this.selectedBather.metadata.properties,s=new o.a(i,a,"./layers_images"),r=this.ui.querySelector("#checkbox_gm").checked;if(this.ui.querySelector("#checkbox_gif").checked){t.textContent="Generating GIF...";const i=await s.drawLongGif(e,r);n.src=URL.createObjectURL(new Blob([i.buffer],{type:"image/gif"})),t.disabled=!1,t.textContent="Download GIF"}else{t.textContent="Generating image...";const i=await s.drawLongPNG(e,r);n.src=i.toDataURL(),t.disabled=!1,t.textContent="Download PNG"}}}downloadGif(){const e=this.ui.querySelector("#merged-img"),t=document.createElement("a");t.href=e.src,t.download="good-morning.gif",t.click()}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2s6Ly9zdHVkaW8vLi9zcmMvcGFnZXMvbG9uZ2JvaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gXCIuL2Jhc2UuanNcIjtcbmltcG9ydCB7IExvbmdCb2lHZW5lcmF0b3IgfSBmcm9tIFwiZ3JhcGhpYy10b29sc1wiO1xuaW1wb3J0IERyb3Bkb3duTmZ0cyBmcm9tIFwiLi4vY29tbW9uL2Ryb3Bkb3duLW5mdHMuanNcIjtcblxuaW1wb3J0IGxheWVycyBmcm9tIFwiLi4vLi4vLi4vYmF0aC1jbHViL2xheWVycy5qc29uXCI7XG5cbmV4cG9ydCBjbGFzcyBMb25nQm9pIGV4dGVuZHMgQmFzZVBhZ2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuXG4gICAgdGhpcy51aSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGhpcy51aS5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxoMSBpZD1cImxvbmdib2lzX3RpdGxlXCI+TG9uZ0JvaXM8L2gxPlxuICAgICAgICA8cCBjbGFzcz1cImRhcmstdGV4dFwiPkdlbmVyYXRlIExvbmdCb2lzIEJhdGhlcnM8L3A+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtc20tZmxleCBmbGV3LXJvd1wiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1kYXJrKTtcIj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LWNvbHVtbiBwLTMgdGV4dC1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIj5cblxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiYXNzZXRzL2RlZmF1bHQucG5nXCIgY2xhc3M9XCJtYi0yIG1zLWF1dG8gbWUtYXV0b1wiIGlkPVwiY2x1Yi1pbWdcIiBzdHlsZT1cIndpZHRoOiAyMDBweDsgaGVpZ2h0OiBhdXRvXCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duIG1iLTNcIiBpZD1cImJhdGgtY2x1Yi1kcm9wZG93blwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZSBidXR0b24tYWx0XCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENob29zZSBCYXRoZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhbmdlXCIgY2xhc3M9XCJmb3JtLXJhbmdlXCIgbWluPVwiMVwiIG1heD1cIjMwXCIgc3RlcD1cIjFcIiBpZD1cIm5lY2tfc2l6ZVwiIHZhbHVlPVwiMTBcIj48YnI+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImNoZWNrYm94X2dpZlwiPiA8bGFiZWwgZm9yPVwiY2hlY2tib3hfZ2lmXCI+R0lGPC9sYWJlbD4gXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImNoZWNrYm94X2dtXCI+IDxsYWJlbCBmb3I9XCJjaGVja2JveF9nbVwiPkdNPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9XCJidXR0b24tZG93bmxvYWRcIiBkaXNhYmxlZD5Eb3dubG9hZCBnaWY8L2J1dHRvbj5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZmxleC1jb2x1bW4gZmxleC1maWxsIHAtMyB0ZXh0LWNlbnRlclwiPlxuXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCJhc3NldHMvZGVmYXVsdC5wbmdcIiBjbGFzcz1cInctMTAwIG0tYXV0byBpbWctZmx1aWRcIiBzdHlsZT1cIm1heC13aWR0aDogMzg0cHg7XCIgaWQ9XCJtZXJnZWQtaW1nXCI+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwvZGl2PmA7XG5cbiAgICB0aGlzLmJhdGhlcnNDb2xsZWN0aW9uO1xuXG4gICAgdGhpcy5zZWxlY3RlZEJhdGhlcjtcblxuICAgIHRoaXMubG9hZCgpO1xuICB9XG5cbiAgYXN5bmMgbG9hZCgpIHtcbiAgICBhd2FpdCB0aGlzLmxvYWRCYXRoZXJzKCk7XG5cbiAgICB0aGlzLnVpXG4gICAgICAucXVlcnlTZWxlY3RvcihcIiNidXR0b24tZG93bmxvYWRcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5kb3dubG9hZEdpZi5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgIHRoaXMudWlcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NoZWNrYm94X2dpZlwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgdGhpcy5nZW5lcmF0ZUxvbmdCb2kuYmluZCh0aGlzKSwgZmFsc2UpO1xuXG4gICAgICB0aGlzLnVpXG4gICAgICAucXVlcnlTZWxlY3RvcihcIiNjaGVja2JveF9nbVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgdGhpcy5nZW5lcmF0ZUxvbmdCb2kuYmluZCh0aGlzKSwgZmFsc2UpO1xuXG4gICAgICB0aGlzLnVpXG4gICAgICAucXVlcnlTZWxlY3RvcihcIiNuZWNrX3NpemVcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIHRoaXMuZ2VuZXJhdGVMb25nQm9pLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRCYXRoZXJzKCkge1xuICAgIHRoaXMuYmF0aGVyc0NvbGxlY3Rpb24gPSB0aGlzLmhvbGRpbmdzW1wiYmF0aGVyc1wiXTtcblxuICAgIGNvbnN0IGRyb3Bkb3duRGl2ID0gdGhpcy51aS5xdWVyeVNlbGVjdG9yKFwiI2JhdGgtY2x1Yi1kcm9wZG93blwiKTtcblxuICAgIGxldCBkcm9wZG93biA9IGRyb3Bkb3duRGl2LnF1ZXJ5U2VsZWN0b3IoXCIuZHJvcGRvd24tbWVudVwiKTtcbiAgICBpZiAoZHJvcGRvd24pIHtcbiAgICAgIGRyb3Bkb3duLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGRyb3Bkb3duID0gbmV3IERyb3Bkb3duTmZ0cyhcbiAgICAgIHRoaXMuYmF0aGVyc0NvbGxlY3Rpb24ubmZ0cyxcbiAgICAgIHRoaXMuZGlkU2VsZWN0QmF0aGVyLmJpbmQodGhpcylcbiAgICApO1xuXG4gICAgZHJvcGRvd25EaXYuYXBwZW5kKGRyb3Bkb3duLnVpKTtcbiAgfVxuXG4gIGRpZFNlbGVjdEJhdGhlcihldmVudCkge1xuICAgIGNvbnN0IG5mdEluZGV4ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0LmluZGV4O1xuXG4gICAgaWYgKCFuZnRJbmRleCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG5mdCA9IHRoaXMuYmF0aGVyc0NvbGxlY3Rpb24ubmZ0c1tuZnRJbmRleF07XG4gICAgdGhpcy5zZWxlY3RlZEJhdGhlciA9IG5mdDtcblxuICAgIC8vZGlzcGxheSBpbWFnZVxuICAgIGNvbnN0IGJhdGhlckltZyA9IHRoaXMudWkucXVlcnlTZWxlY3RvcihcIiNjbHViLWltZ1wiKTtcbiAgICBiYXRoZXJJbWcuc3JjID0gbmZ0LmltYWdlVXJsO1xuXG4gICAgdGhpcy5nZW5lcmF0ZUxvbmdCb2koKTtcblxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cblxuICBhc3luYyBnZW5lcmF0ZUxvbmdCb2koKSB7XG5cbiAgICBjb25zdCBuZWNrU2l6ZSA9IHBhcnNlSW50KHRoaXMudWkucXVlcnlTZWxlY3RvcihcIiNuZWNrX3NpemVcIikudmFsdWUpXG5cbiAgICB0aGlzLnVpLnF1ZXJ5U2VsZWN0b3IoXCIjbG9uZ2JvaXNfdGl0bGVcIikudGV4dENvbnRlbnQgPSBgTCR7J28nLnJlcGVhdChuZWNrU2l6ZSl9bmdib2lzYFxuXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRCYXRoZXIpIHtcbiAgICAgIGNvbnN0IGRvd25sb2FkQnV0dG9uID0gdGhpcy51aS5xdWVyeVNlbGVjdG9yKFwiI2J1dHRvbi1kb3dubG9hZFwiKTtcbiAgICAgIGRvd25sb2FkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcblxuICAgICAgY29uc3QgaW1nID0gdGhpcy51aS5xdWVyeVNlbGVjdG9yKFwiI21lcmdlZC1pbWdcIik7XG4gICAgICBpbWcuc3JjID0gXCJhc3NldHMvZGVmYXVsdC5wbmdcIjtcblxuICAgICAgY29uc3QgcHJvcGVydGllcyA9IHRoaXMuc2VsZWN0ZWRCYXRoZXIubWV0YWRhdGEucHJvcGVydGllcztcblxuICAgICAgY29uc3QgbG9uZ0JvaUdlbmVyYXRvciA9IG5ldyBMb25nQm9pR2VuZXJhdG9yKFxuICAgICAgICBwcm9wZXJ0aWVzLFxuICAgICAgICBsYXllcnMsXG4gICAgICAgIFwiLi9sYXllcnNfaW1hZ2VzXCJcbiAgICAgICk7XG5cbiAgICAgIC8vZHJhdyBsYXllcnNcblxuICAgICAgXG4gICAgICBjb25zdCBnbSA9IHRoaXMudWkucXVlcnlTZWxlY3RvcihcIiNjaGVja2JveF9nbVwiKS5jaGVja2VkXG5cbiAgICAgIGlmICh0aGlzLnVpLnF1ZXJ5U2VsZWN0b3IoXCIjY2hlY2tib3hfZ2lmXCIpLmNoZWNrZWQpIHtcblxuICAgICAgICBkb3dubG9hZEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiR2VuZXJhdGluZyBHSUYuLi5cIjtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGdpZkRhdGEgPSBhd2FpdCBsb25nQm9pR2VuZXJhdG9yLmRyYXdMb25nR2lmKG5lY2tTaXplLCBnbSk7XG5cbiAgICAgICAgaW1nLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoXG4gICAgICAgICAgbmV3IEJsb2IoW2dpZkRhdGEuYnVmZmVyXSwgeyB0eXBlOiBcImltYWdlL2dpZlwiIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgZG93bmxvYWRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgZG93bmxvYWRCdXR0b24udGV4dENvbnRlbnQgPSBcIkRvd25sb2FkIEdJRlwiO1xuICAgICAgfSBlbHNlIHtcblxuICAgICAgICBkb3dubG9hZEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiR2VuZXJhdGluZyBpbWFnZS4uLlwiO1xuXG4gICAgICAgIGNvbnN0IGdpZkRhdGEgPSBhd2FpdCBsb25nQm9pR2VuZXJhdG9yLmRyYXdMb25nUE5HKG5lY2tTaXplLCBnbSk7XG5cbiAgICAgICAgaW1nLnNyYyA9IGdpZkRhdGEudG9EYXRhVVJMKCk7XG5cbiAgICAgICAgZG93bmxvYWRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgZG93bmxvYWRCdXR0b24udGV4dENvbnRlbnQgPSBcIkRvd25sb2FkIFBOR1wiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRvd25sb2FkR2lmKCkge1xuICAgIGNvbnN0IGltZyA9IHRoaXMudWkucXVlcnlTZWxlY3RvcihcIiNtZXJnZWQtaW1nXCIpO1xuXG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGEuaHJlZiA9IGltZy5zcmM7XG4gICAgYS5kb3dubG9hZCA9IFwiZ29vZC1tb3JuaW5nLmdpZlwiO1xuICAgIGEuY2xpY2soKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkxvbmdCb2kiLCJCYXNlUGFnZSIsImNvbnN0cnVjdG9yIiwic3VwZXIiLCJhcmd1bWVudHMiLCJ0aGlzIiwidWkiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJiYXRoZXJzQ29sbGVjdGlvbiIsInNlbGVjdGVkQmF0aGVyIiwibG9hZCIsImFzeW5jIiwibG9hZEJhdGhlcnMiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRvd25sb2FkR2lmIiwiYmluZCIsImdlbmVyYXRlTG9uZ0JvaSIsImhvbGRpbmdzIiwiZHJvcGRvd25EaXYiLCJkcm9wZG93biIsInJlbW92ZSIsIm5mdHMiLCJkaWRTZWxlY3RCYXRoZXIiLCJhcHBlbmQiLCJldmVudCIsIm5mdEluZGV4IiwiY3VycmVudFRhcmdldCIsImRhdGFzZXQiLCJpbmRleCIsIm5mdCIsInNyYyIsImltYWdlVXJsIiwicHJldmVudERlZmF1bHQiLCJuZWNrU2l6ZSIsInBhcnNlSW50IiwidmFsdWUiLCJ0ZXh0Q29udGVudCIsInJlcGVhdCIsImRvd25sb2FkQnV0dG9uIiwiZGlzYWJsZWQiLCJpbWciLCJwcm9wZXJ0aWVzIiwibWV0YWRhdGEiLCJsb25nQm9pR2VuZXJhdG9yIiwiZ20iLCJjaGVja2VkIiwiZ2lmRGF0YSIsImRyYXdMb25nR2lmIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiQmxvYiIsImJ1ZmZlciIsInR5cGUiLCJkcmF3TG9uZ1BORyIsInRvRGF0YVVSTCIsImEiLCJocmVmIiwiZG93bmxvYWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiIn0=